{"config":{"lang":["en"],"separator":"[\\s\\-,:!=\\[\\]()\"/]+|(?!\\b)(?=[A-Z][a-z])|\\.(?!\\d)|&[lg]t;","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"MatrixOne Documentation","text":"<p>Welcome to the MatrixOne documentation center!</p> <p>This center holds related concepts and technical architecture introductions, product features, user guides, and reference manuals to help you work with MatrixOne.</p>"},{"location":"#recommended-articles","title":"Recommended articles","text":"<p>Select one of the articles below to begin your MatrixOne journey. If you ...</p> <ul> <li> <p>Are new to MatrixOne, start with Overview to learn about basic concepts, key features and architecture.</p> </li> <li> <p>Are Want to jump to the quickstart to build a standalone MatrixOne and learn the basic knowledge of SQL, start with Getting Started.</p> </li> <li> <p>Are applicators and want to try out MatrixOne as a basic database, select Developing Guide for the tutorial and developing guide.</p> </li> <li> <p>An experienced MatrixOne coder looking for SQL statements, data types functions, or catalog, go to Reference.</p> </li> </ul> Overview Get Started Developing Guide Reference MatrixOne Introduction Install MatrixOne Java CRUD demo SQL Reference MatrixOne Architecture Basic SQL Python CRUD demo Data Types"},{"location":"#continuous-improvement","title":"Continuous Improvement","text":"<p>Whether you're seeking fundamental concepts, step-by-step procedures, curated guides, or handy references, we're crafting content to accommodate your needs.</p> <p>We warmly welcome contributions to MatrixOne documentation from everyone. Our community aims to streamline the contribution process, making it simple. Additionally, we'll provide updates every month.</p> <p>You'll find an Edit button at the top of each page. Click on it to access a landing page with instructions for suggesting published document changes. These resources are yours for you to use. Your participation is not only encouraged but also crucial!</p> <p>If you encounter any documentation issues, please feel free to create an Issue to inform us or directly submit a Pull Request to help us fix or update the content.</p> <p>Note</p> <p>For how to make contributions to documentation, see Contributing to MatrixOne Documentation.</p>"},{"location":"#join-us","title":"Join us!","text":"<p>The MatrixOne community on GitHub is dynamic, enthusiastic, and well-informed. Engage in discussions, express your viewpoints, propose features, and delve into the code.</p> <p>A similarly passionate community awaits you in the MatrixOne Slack and MatrixOne channel.</p>"},{"location":"MatrixOne/glossary/","title":"Glossary","text":""},{"location":"MatrixOne/glossary/#terms","title":"Terms","text":"<p>It's helpful to understand a few terms before reading our architecture documentation.</p> Term Definition A AST (Abstract syntax tree) Abstract Syntax Trees or ASTs are tree representations of code. They are a fundamental part of the way a compiler works. C Cluster A distributed MatrixOne deployment, which acts as a single logical application. E Explicit Transactions Explicit Transaction has the beginning, ending and rollback of transactions with the command Begin Transaction, Commit Transaction and Rollback Transaction. I Implicit Transactions Implicit Transaction is the auto commit. There is no beginning or ending of the transaction. O Optimistic transaction Optimistic transaction, the optimistic transaction means that when the transaction starts, no conflict detection or lock will be performed, the current relevant data will be cached in the corresponding memory area, and the data will be added, deleted, or modified. P Pessimistic transaction Pessimistic transaction, the default transaction mode of MatrixOne, that is, when the transaction starts, it will assume that the transaction-related tables are in a state where write conflicts will occur and lock the corresponding data table or a data row in advance to complete the locking action Finally, the insertion, modification, or deletion of data is cached in memory. After committing or rolling back, the data is placed on the disk, and the lock is released. S Snapshot Isolation (SI) Snapshot Isolation is a multi-version concurrency control approach that is widely used in practice. MatrixOne supports distributed transaction of snapshot isolation level."},{"location":"MatrixOne/glossary/#concepts","title":"Concepts","text":"<p>MatrixOne relies heavily on the following concepts. Being familiar with them will help you understand what our architecture achieves.</p> Term Definition A Auto-Rebalance A modern distributed database should do more than just split data amongst a number of servers. The automatic process of storage and workload distribution among servers is called an Auto-Rebalance. C Consistency MatrixOne supports a strong consistency. It is guaranted that after any successful data write, the reading afterwards will get the latest value, no matter from which store. E Execution Plan An execution plan in a database is a simple graphical representation of the operations that the query optimizer generates to calculate the most efficient way to return a set of results. F Fault-Tolerance Fault-Tolerance simply means a system's ability to continue operating uninterrupted despite the failure of one or more of its components. M Monolithic Engine A monolithic database engine is designed to support hybrid workloads: transactional, analytical, streaming, time-series, machine learning, and so on. Materialized View A materialized view is a pre-computed data set derived from a query specification (the SELECT in the view definition) and stored for later use. Materialized view is usually used for increasing performance and efficiency. Metadata Metadata is the data that describes the structure and creation method of data in a database. P Paxos Paxos is an algorithm that is used to achieve consensus among a distributed set of computers that communicate via an asynchronous network. R Raft Raft is a consensus algorithm that is designed to be easy to understand. It's equivalent to Paxos in fault-tolerance and performance. The difference is that it's decomposed into relatively independent subproblems, and it cleanly addresses all major pieces needed for practical systems. Raft Group and Leader Raft defines a strong, single leader and number of followers in a group of peers. The group represents a replicated state machine. Only the leader may service client requests. The leader replicates actions to the followers. S SIMD instruction SIMD is short for Single Instruction/Multiple Data, while the term SIMD operations refers to a computing method that enables processing of multiple data with a single instruction. T Transaction A set of operations performed on your database that satisfy the requirements of ACID semantics. TAE Transactional Analytic Engine. The storage engine is the main public interface of the storage layer, which can support both row and column storage and transaction processing capabilities. V Vectorized Execution Vectorized data processing helps with developing faster analytical query engines by making efficient utilization of CPU cache. Arrow's columnar format allows to use lightweight schemes like dictionary encoding, bit packing, and run length encoding, which favor query performance over compression ratio."},{"location":"MatrixOne/Contribution-Guide/make-your-first-contribution/","title":"Make Your First Contribution","text":"<p>Thank you for your interest in contributing to MatrixOne. Contributions are welcome from everyone.</p> <p>This document will help you get started on your first contribution to MatrixOne.</p>"},{"location":"MatrixOne/Contribution-Guide/make-your-first-contribution/#how-to-contribute","title":"How to Contribute?","text":"<p>Before setting out contributions, you need to figure out what area you are trying to help us in. You can see Types of contributions for more details.</p> <p>As your first-ever contribution, it can be selected from the following categories which require little technical background of the contributor:</p> <ul> <li> <p>To report a bug in the code</p> </li> <li> <p>To improve the MatrixOne documentation</p> </li> </ul> <p>File an issue to describe the problem before working on it. In addition, you will also find issues labeled with <code>good-first-issue</code>, which represents issues suitable for new contributors. Such Issues contain clear steps and expected output. You may start your first contribution based on these issues.</p>"},{"location":"MatrixOne/Contribution-Guide/make-your-first-contribution/#assign-your-issue","title":"Assign Your Issue","text":"<p>It's difficult to report an issue when you are just a newcomer on account of little knowledge of MatrixOne or relative contents, so we list <code>good-first-issues</code> suitable for new contributors to work with and be easy to fix. After deciding on a suitable issue to work on, you can comment <code>/assign</code> on the issue you would like to work on, and you will be automatically assigned to the issue. You can then find yourself listed under the Assignees section.</p>"},{"location":"MatrixOne/Contribution-Guide/make-your-first-contribution/#prerequisite","title":"Prerequisite","text":"<p>Before working on the issue you are assigned, please make sure you have set up a development environment and installed MatrixOne. You can see Preparation for more details.</p>"},{"location":"MatrixOne/Contribution-Guide/make-your-first-contribution/#workflow","title":"Workflow","text":""},{"location":"MatrixOne/Contribution-Guide/make-your-first-contribution/#step-1-fork-the-repository","title":"Step 1: Fork the Repository","text":"<p>Visit our Github Repository. On the top right of the page, click the Fork button (top right) to create a cloud-based fork of the repository. </p>"},{"location":"MatrixOne/Contribution-Guide/make-your-first-contribution/#step-2-clone-fork-to-local-storage","title":"Step 2: Clone fork to local storage","text":"<p>Open the repository you forked from MatrixOne. Click on the Code button and then the Copy to Clipboard icon.  Next, move to the working directory you expect in local and launch your terminal. Run the following Git command:  </p> <pre><code>git clone &lt;content you just copied&gt;\n</code></pre> <p>For example:</p> <pre><code>git clone git@github.com:&lt;yourname&gt;/matrixone.git\n</code></pre> <p><code>&lt;yourname&gt;</code> is the ID you signed in at GitHub. This Git command downloads the content of MatrixOne repository you forked on GitHub to your local device.  </p>"},{"location":"MatrixOne/Contribution-Guide/make-your-first-contribution/#step-3-add-matrixone-repo-as-a-remote-repository","title":"Step 3: Add MatrixOne repo as a remote repository","text":"<p>You can add MatrixOrigin/MatrixOne repository as a remote repository in local with:  </p> <pre><code>git remote add upstream https://github.com/matrixorigin/matrixone.git  \n</code></pre> <p><code>upstream</code> is the designation of this remote repository. If you want to replace it with other words you want, don't forget to replace it as well in the next steps, or some errors will happen.</p>"},{"location":"MatrixOne/Contribution-Guide/make-your-first-contribution/#step-4-develop","title":"Step 4: Develop","text":""},{"location":"MatrixOne/Contribution-Guide/make-your-first-contribution/#make-some-changes","title":"Make some changes","text":"<p>Now you can edit the code, modify the documents, and make whatever changes you want about your issue in the branch you just created.</p>"},{"location":"MatrixOne/Contribution-Guide/make-your-first-contribution/#run-matrixone-in-a-standalone-mode","title":"Run MatrixOne in a standalone mode","text":"<p>If you want to demonstrate whether the changes you made are valid or produce an issue, you need to run MatrixOne in a standalone mode. Before running, make sure you have deployed MatrixOne according to our Deploy standalone MatrixOne.</p>"},{"location":"MatrixOne/Contribution-Guide/make-your-first-contribution/#step-5-commit-to-your-local-repo","title":"Step 5: Commit to your local repo","text":"<p>Having completed your modification, you can add the files you just modified using the <code>git add</code> command:</p> <pre><code>git add &lt;filename&gt;\n</code></pre> <p><code>&lt;filename&gt;</code> is the name of the file you just modified. And you can use the following command to add all the files in the current folder:</p> <pre><code>git add .\n</code></pre> <p>Next, you can commit these changes using the <code>git commit</code> command:</p> <pre><code>git commit -m \"&lt;commit message&gt;\"  -s\n</code></pre> <p>Summarize and describe your modification briefly in the place of <code>&lt;commit message&gt;</code>. <code>-s</code> adds your sign-off message to your commit message.</p>"},{"location":"MatrixOne/Contribution-Guide/make-your-first-contribution/#step-6-push-to-your-remote-repo","title":"Step 6: Push to your remote repo","text":"<p>After committing your modification, you should push your local branch to GitHub using the <code>git push</code> command, and we recommend you to push to a new branch:</p> <pre><code>git push origin main:NEW_BRANCH\n</code></pre> <p><code>NEW_BRANCH</code> is the name of the new branch you created and push to. Also, you can replace it with another name you want.</p>"},{"location":"MatrixOne/Contribution-Guide/make-your-first-contribution/#step-7-create-a-pull-request","title":"Step 7: Create a pull request","text":"<p>Having pushed your changes, you can visit your folk at <code>https://github.com/$user/matrixone</code>, and click the Compare &amp; Pull Request button to create a pull request in <code>NEW_BRANCH</code> for your modification to the MatrixOne repository.</p> <p>Note</p> <p>You should fill in the required information based on the PR template.</p> <p> </p> <p>Once your PR is opened, it will be assigned to reviewers. These reviewers will check your contribution and do a detailed review according to the correctness, bugs, style, sand so on.</p>"},{"location":"MatrixOne/Contribution-Guide/make-your-first-contribution/#step-8-after-merging-keep-your-repo-in-sync","title":"Step 8: After merging, Keep your repo in sync","text":"<p>Congratulations that your contributions are accepted and merged into the project! And there are some operations left to do, which help keep project committing history clean and keep your local and remote repo synchronized with MatrixOne repo. Overrides local committing history with the following command:  </p> <pre><code>git pull --force upstream main:main\n</code></pre> <p>Lastly, upgrade the <code>main</code> branch of your folk in Github:</p> <pre><code>git push --force origin main:main\n</code></pre>"},{"location":"MatrixOne/Contribution-Guide/Code-Style/code-comment-style/","title":"Code Comment Style","text":"<p>This document describes the code comment style applied to MatrixOne style. When you are ready to commit, please follow the style to write good code comments.</p>"},{"location":"MatrixOne/Contribution-Guide/Code-Style/code-comment-style/#why-does-a-good-comment-matter","title":"Why does a good comment matter?","text":"<ul> <li>To speed up the reviewing process</li> <li>To help maintain the code</li> <li>To improve the API document readability</li> <li>To improve the development efficiency of the whole team</li> </ul>"},{"location":"MatrixOne/Contribution-Guide/Code-Style/code-comment-style/#wherewhen-to-comment","title":"Where/When to comment?","text":"<p>Write a comment where/when:</p> <ul> <li>For important code</li> <li>For obscure code</li> <li>For tricky or interesting code</li> <li>For a complex code block</li> <li>If a bug exists in the code but you cannot fix it or you just want to ignore it for the moment</li> <li>If the code is not optimal but you don't have a smarter way now</li> <li>To remind yourself or others of missing functionality or upcoming requirements not present in the code</li> </ul> <p>A comment is generally required for:</p> <ul> <li>Package (Go)</li> <li>File</li> <li>Type</li> <li>Constant</li> <li>Function</li> <li>Method</li> <li>Variable</li> <li>Typical algorithm</li> <li>Exported name</li> <li>Test case</li> <li>TODO</li> <li>FIXME</li> </ul>"},{"location":"MatrixOne/Contribution-Guide/Code-Style/code-comment-style/#how-to-comment","title":"How to comment?","text":""},{"location":"MatrixOne/Contribution-Guide/Code-Style/code-comment-style/#format-of-a-good-comment","title":"Format of a good comment","text":"<ul> <li> <p>Go</p> <ul> <li>Use <code>//</code> for a single-line comment and trailing comment</li> <li>Use <code>/* ... */</code> for a block comment (used only when needed)</li> <li>Use gofmt to format your code</li> </ul> </li> <li> <p>Place the single-line and block comment above the code it's annotating</p> </li> <li>Fold long lines of comments</li> <li>Each line of text in your code and comment should be at most 100 characters long</li> <li> <p>For a comment containing a URL</p> <ul> <li>Use a relative URL if the text is linked to a file within the same GitHub repository</li> <li>Use an absolute URL in docs and docs-cn repositories if the code with this comment is copied from another repository</li> </ul> </li> </ul>"},{"location":"MatrixOne/Contribution-Guide/Code-Style/code-comment-style/#language-for-a-good-comment","title":"Language for a good comment","text":"<ul> <li> <p>Word</p> <ul> <li> <p>Use American English rather than British English</p> <ul> <li>color, canceling, synchronize     (Recommended)</li> <li>colour, cancelling, synchronise   (Not recommended)</li> </ul> </li> <li> <p>Use correct spelling</p> </li> <li> <p>Use standard or official capitalization</p> <ul> <li>MatrixOne, Raft, SQL  (Right)</li> <li>matrixone, RAFT, sql  (Wrong)</li> </ul> </li> <li> <p>Use words and expressions consistently</p> <ul> <li>\"dead link\" vs. \"broken link\" (Only one of them can appear in a single document)</li> </ul> </li> <li> <p>Do not use lengthy compound words</p> </li> <li> <p>Do not abbreviate unless it is absolutely necessary</p> </li> <li> <p>We should be used only when it means the code writer and the reader</p> </li> </ul> </li> <li> <p>Sentence</p> <ul> <li>Use standard grammar and correct punctuation</li> <li>Use relatively short sentences</li> </ul> </li> <li> <p>Capitalize the first letter of sentences and end them with periods</p> <ul> <li> <p>If a lower-case identifier comes at the beginning of a sentence, don't capitalize it</p> <pre><code>// enterGame causes Players to enter the\n// video game, which is about a romantic\n// story in ancient China.\nfunc enterGame() os.Error {\n    ...\n}\n</code></pre> </li> </ul> </li> <li> <p>When used for description, comments should be descriptive rather than imperative</p> <ul> <li>Opens the file   (Right)</li> <li>Open the file    (Wrong)</li> </ul> </li> <li> <p>Use \"this\" instead of \"the\" to refer to the current thing</p> <ul> <li>Gets the toolkit for this component   (Recommended)</li> <li>Gets the toolkit for the component    (Not recommended)</li> </ul> </li> <li> <p>The Markdown format is allowed</p> <ul> <li>Opens the <code>log</code> file  </li> </ul> </li> </ul>"},{"location":"MatrixOne/Contribution-Guide/Code-Style/code-comment-style/#tips-for-a-good-comment","title":"Tips for a good comment","text":"<ul> <li>Comment code while writing it</li> <li>Do not assume the code is self-evident</li> <li>Avoid unnecessary comments for simple code</li> <li>Write comments as if they were for you</li> <li>Make sure the comment is up-to-date</li> <li>Let the code speak for itself</li> </ul> <p>Thanks for your contribution!</p>"},{"location":"MatrixOne/Contribution-Guide/Code-Style/code-of-conduct/","title":"MatrixOne Code of Conduct","text":""},{"location":"MatrixOne/Contribution-Guide/Code-Style/code-of-conduct/#our-pledge","title":"Our Pledge","text":"<p>In the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to make participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, sex characteristics, gender identity, and expression, level of experience, education, socio-economic status, nationality, personal appearance, race, religion, or sexual identity and orientation.</p>"},{"location":"MatrixOne/Contribution-Guide/Code-Style/code-of-conduct/#our-standards","title":"Our Standards","text":"<p>Examples of behavior that contributes to creating a positive environment include:</p> <ul> <li>Using welcoming and inclusive language</li> <li>Being respectful of differing viewpoints and experiences</li> <li>Gracefully accepting constructive criticism</li> <li>Focusing on what is best for the community</li> <li>Showing empathy towards other community members</li> </ul> <p>Examples of unacceptable behavior by participants include:</p> <ul> <li>The use of sexualized language or imagery and unwelcome sexual attention or   advances</li> <li>Trolling, insulting/derogatory comments, and personal or political attacks</li> <li>Public or private harassment</li> <li>Publishing others' private information, such as a physical or electronic   address, without explicit permission</li> <li>Other conduct which could reasonably be considered inappropriate in a   professional setting</li> </ul>"},{"location":"MatrixOne/Contribution-Guide/Code-Style/code-of-conduct/#our-responsibilities","title":"Our Responsibilities","text":"<p>Project maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response to any instances of unacceptable behavior.</p> <p>Project maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful.</p>"},{"location":"MatrixOne/Contribution-Guide/Code-Style/code-of-conduct/#scope","title":"Scope","text":"<p>This Code of Conduct applies within all project spaces, and when an individual is representing the project or its community in public spaces. Examples of representing a project or community include using an official project e-mail address, posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers.</p>"},{"location":"MatrixOne/Contribution-Guide/Code-Style/code-of-conduct/#enforcement","title":"Enforcement","text":"<p>Instances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the project team at hai.jin@matrixorigin.io. All complaints will be reviewed and investigated and resulting in a response deemed necessary and appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident. Further details of specific enforcement policies may be posted separately.</p> <p>Project maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other the project leadership members.</p>"},{"location":"MatrixOne/Contribution-Guide/Code-Style/code-of-conduct/#attribution","title":"Attribution","text":"<p>This Code of Conduct is adapted from the Contributor Covenant, version 1.4, available at https://www.contributor-covenant.org/version/1/4/code-of-conduct.html</p> <p>For answers to common questions about this code of conduct, see https://www.contributor-covenant.org/faq</p>"},{"location":"MatrixOne/Contribution-Guide/Code-Style/commit-pr-style/","title":"Commit Message and Pull Request Style","text":"<p>This document describes the commit message and Pull Request style applied to all MatrixOrigin repositories. When you are ready to commit, be sure to follow the style guide to write a good commit message, a good Pull Request title, and a description.</p>"},{"location":"MatrixOne/Contribution-Guide/Code-Style/commit-pr-style/#why-a-good-commit-message-matters","title":"Why a good commit message matters","text":"<ul> <li>To speed up the reviewing process<ul> <li>Help the reviewers better understand the PR</li> <li>Allow ignoring unimportant commits</li> </ul> </li> <li>To help us write good Release Notes</li> <li>To help the future maintainers establish the context<ul> <li>Provide better information when browsing the history</li> </ul> </li> </ul>"},{"location":"MatrixOne/Contribution-Guide/Code-Style/commit-pr-style/#what-is-a-good-commit-message","title":"What is a good commit message","text":"<p>Elements of a good commit message:</p> <ol> <li> <p>What is your change? (mandatory)</p> <p>It can be fixing a specific bug, adding a feature, improving performance, reliability, and stability, or just being a change for the sake of correctness.</p> </li> <li> <p>Why was this change made? (mandatory)</p> <p>For short and obvious patches, this part can be omitted, but it should be a clear description of what the approach was.</p> </li> <li> <p>What effect does the commit have? (optional)</p> <p>In addition to the obvious effects, this may include benchmarks, side effects, and so on. For short and obvious patches, this part can be omitted.</p> </li> </ol>"},{"location":"MatrixOne/Contribution-Guide/Code-Style/commit-pr-style/#how-to-write-a-good-commit-message","title":"How to write a good commit message","text":"<p>To write a good commitment message, we suggest following a good format, cultivating good habits, and using good language.</p>"},{"location":"MatrixOne/Contribution-Guide/Code-Style/commit-pr-style/#format-of-a-good-commit-message","title":"Format of a good commit message","text":"<p>Please follow the following style for all your commits:</p> <pre><code>&lt;subsystem&gt;: &lt;what changed&gt;\n&lt;BLANK LINE&gt;\n&lt;why this change was made&gt;\n&lt;BLANK LINE&gt;\n&lt;footer&gt;(optional)\n</code></pre> <ul> <li> <p>For the first subject line:</p> <ul> <li>Use no more than 70 characters.</li> <li>If the changes affect two subsystems, use a comma (and whitespace) to separate them like <code>util/codec, util/types:</code>.</li> <li>If the changes affect three or more subsystems, you can use <code>*</code> instead, like <code>*:</code>.</li> <li>Use a lowercase letter on the text that immediately follows the colon. For example: \"media: update the DM architecture image\"</li> <li>Do not add a period at the end of a commit message.</li> </ul> </li> <li> <p>For the second line, always leave it blank.</p> </li> <li>For the why part, if there is no specific reason for the change, you can use one of the generic reasons like \"Improve performance\", \"Improve test coverage.\"</li> <li>For other lines, use no more than 80 characters.</li> </ul>"},{"location":"MatrixOne/Contribution-Guide/Code-Style/commit-pr-style/#habits-for-a-good-commit-message","title":"Habits for a good commit message","text":"<ul> <li>Summarize your change</li> <li>Describe clearly one logical change and avoid lazy messages as <code>misc fixes</code></li> <li>Describe any limitations of the current code</li> <li>Do not end the subject with a period \".\"</li> <li>Do not assume the code is self-evident</li> <li>Do not assume reviewers understand the original issue</li> </ul>"},{"location":"MatrixOne/Contribution-Guide/Code-Style/commit-pr-style/#language-for-a-good-commit-message","title":"Language for a good commit message","text":"<ul> <li>Use the imperative mood for the first subject line</li> <li>Use simple verb tenses (eg. use \"add\" not \"added\")</li> <li>Use correct and standard grammar</li> <li>Use words and expressions consistently</li> <li>Use relatively short sentences</li> <li>Do not use lengthy compound words</li> <li>Do not abbreviate unless it's absolutely necessary</li> </ul>"},{"location":"MatrixOne/Contribution-Guide/Code-Style/commit-pr-style/#pull-request-description-style","title":"Pull Request description style","text":"<p>For the Pull Request description in the <code>Conversation</code> box, please refer to the following Pull Request description template and include the necessary information:</p> <pre><code>**What type of PR is this?**\n\n- [ ] API-change\n- [ ] BUG\n- [ ] Improvement\n- [ ] Documentation\n- [ ] Feature\n- [ ] Test and CI\n- [ ] Code Refactoring\n\n**Which issue(s) this PR fixes:**\n\nissue #\n\n**What this PR does / why we need it:**\n\n\n**Special notes for your reviewer:**\n\n\n**Additional documentation (e.g. design docs, usage docs, and so on.):**\n</code></pre> <p>You may also use the checklist style to list contents if needed. The Markdown syntax is as follows:</p> <pre><code>- [x] A checked line, something already done or fulfilled\n- [ ] An unchecked line, something not finished yet\n</code></pre> <p>For short and obvious Pull Requests, you can omit some of the above information.</p> <p>Thanks for your contribution\uff01</p>"},{"location":"MatrixOne/Contribution-Guide/How-to-Contribute/contribute-code/","title":"Contribute Code","text":"<p>MatrixOne is an open-source project maintained, improved, and extended by code contributors. This document describes the conventions of development workflow, and some styles and templates you need while contributing code to MatrixOne. If you encounter any problems or find some mistakes in participating in contribution to MatrixOne, please file an issue on GitHub or contact us on other platforms we support.</p>"},{"location":"MatrixOne/Contribution-Guide/How-to-Contribute/contribute-code/#before-contributions","title":"Before Contributions","text":"<p>Before you start developing, make sure you have read Preparation where you can follow the instructions to learn more about MatrixOne, development knowledge, and how to set up the development environment.</p>"},{"location":"MatrixOne/Contribution-Guide/How-to-Contribute/contribute-code/#get-familiar-with-the-style","title":"Get familiar with the style","text":"<p>It's necessary to keep a consistent style for code, code comments, commit messages, and pull requests when contributing to MatrixOne. When you put together your pull request, we highly recommend you comply with the following style guides which make MatrixOne easy to review, maintain, and develop.</p> <ul> <li>Code Style </li> </ul> <p>The coding style suggested by the Golang community is used in MatrixOne. See the style doc for details.</p> <ul> <li>Code Comment Style</li> </ul> <p>See the code comment style for details.</p> <ul> <li>Commit Message &amp; Pull Request Style</li> </ul> <p>See the Commit Message &amp; Pull Request Style for details.</p>"},{"location":"MatrixOne/Contribution-Guide/How-to-Contribute/contribute-code/#workflow","title":"Workflow","text":"<p>You can follow the workflow to operate development, and you can see Make Your First Contribution if you are a newcomer and need more detailed instructions about workflow.  </p> <p>1. Fork the matrixOne repository on GitHub.</p> <p>2. Clone your fork to your local machine with:  </p> <pre><code>git clone git@github.com:&lt;yourname&gt;/matrixone.git\n</code></pre> <p>And add MatrixOne repo as a remote repository with:</p> <pre><code>git remote add upstream https://github.com/matrixorigin/matrixone.git\n</code></pre> <p>3. Create a new branch. The branch name is up to you.</p> <pre><code>git checkout -b topic-branch\n</code></pre> <p>4. Commit changes to your own branch locally, add necessary unit tests.</p> <p>5. Push to a new branch in your own fork.</p> <pre><code>git push origin main:NEW_BRANCH\n</code></pre> <p>6. Go back to GitHub, and submit a pull request in <code>NEW_BRANCH</code> so that we can review your changes. Add some labels if needed, and don't forget to refer to the related issue.</p> <p>7. Once your PR gets approved, it will be merged sooner. After merging, synchronize your local repository.</p> <pre><code>git pull --force upstream main:main\n</code></pre> <p>8. Synchronized the <code>main</code> branch of your remote repository in Github.</p> <pre><code>git push --force origin main:main\n</code></pre> <p>If you still have some trouble, please refer to GitHub Docs for help.</p>"},{"location":"MatrixOne/Contribution-Guide/How-to-Contribute/contribute-code/#code-review","title":"Code review","text":"<p>When you open a pull request, you can assign some reviewers, or just leave it blank. And you can add some related labels to make it easier to recognize the PR's type/priority/and so on. During the review, reviewers would comment on your code snippet, and you can modify the code on your topic branch locally, commit the changes, and push it to GitHub where the new commits would be attached to the PR automatically.</p> <p>For detailed code review tips, See Review a pull request for details.</p>"},{"location":"MatrixOne/Contribution-Guide/How-to-Contribute/contribute-documentation/","title":"Contributing to MatrixOne Documentation","text":"<p>Contributions to the MatrixOne documentation are welcome from everyone. The MatrixOne community strives to make the contribution process simple and straightforward. To do that, we create this page to walk you through the whole process step by step.</p>"},{"location":"MatrixOne/Contribution-Guide/How-to-Contribute/contribute-documentation/#before-you-start","title":"Before you start","text":"<p>Before you contribute, please take a minute to familiarize yourself with basic Markdown syntax and look at our Code of Conduct and the Google Developer Documentation Style Guide for some guidance on writing accessible, consistent, and inclusive documentation.</p>"},{"location":"MatrixOne/Contribution-Guide/How-to-Contribute/contribute-documentation/#how-is-matrixone-documentation-project-organized","title":"How is MatrixOne documentation project organized?","text":"<p>The MatrixOne documentation is managed in 3 repositories:</p> <ul> <li> <p>The english markdown contents are in the matrixorigin.io repo.</p> </li> <li> <p>The chinese markdown contents are in the matrixorigin.io.cn repo.</p> </li> <li> <p>The images and unstructured data are located in the artwork repo.</p> </li> </ul> <p>The images are referred to as web image links from <code>artwork</code> repo. The <code>matrixorigin.io</code> and <code>matrixorigin.io.cn</code> have implemented a CI&amp;CD project, which will be triggered by a new code merge and manual launch. This CI&amp;CD workflow publishes the documentation to https://docs.matrixorigin.cn/en/.  </p> <p>The documentation project is based on the mkdocs-material. You can find the corresponding syntax and commands with this project.</p>"},{"location":"MatrixOne/Contribution-Guide/How-to-Contribute/contribute-documentation/#matrixone-documentation-structure","title":"MatrixOne Documentation Structure","text":"<p>The MatrixOne documentation content is planned with 6 main modules.  </p> <ul> <li> <p>Overview: MatrixOne's introduction, features and architecture.</p> </li> <li> <p>Getting Started: How to quickly deploy and run a standalone MatrixOne.</p> </li> <li> <p>Developing Guide: How to develop some applications based on MatrixOne using different programming languages.</p> </li> <li> <p>Deploying: How to quickly deploy and run MatrixOne cluster.</p> </li> <li> <p>Tutorials: Examples of developing application demos.</p> </li> <li> <p>Maintenance: How to maintain MatrixOne, including backing up and restoring data.</p> </li> <li> <p>Migrating: How to migrate data from other databases to MatrixOne.</p> </li> <li> <p>Testing: How to perform a self-test or MatrixOne performance test using the test tool.</p> </li> <li> <p>Performance Tuning: How to tune the MatrixOne performance in a stand-alone or distributed environment.</p> </li> <li> <p>Privilege: Multi-account management, account lifecycle management, and authorization in MatrixOne clusters.</p> </li> <li> <p>Reference: SQL reference, Configuration parameters.</p> </li> <li> <p>Troubleshooting: Introduce common errors and debugging tools.</p> </li> <li> <p>FAQs: Product, Technical Design, SQL, Deployment FAQs.  </p> </li> <li> <p>Release Notes: Release notes of all versions.</p> </li> <li> <p>Contribution Guide: How to contribute to MatrixOne project.</p> </li> <li> <p>Glossary: Table of noun definitions.</p> </li> </ul>"},{"location":"MatrixOne/Contribution-Guide/How-to-Contribute/contribute-documentation/#lift-a-finger","title":"Lift a finger","text":"<p>If you are correcting a typo or grammatical error, feel free to go ahead and create a pull request for English docs or create a pull request for Chinese docs.</p>"},{"location":"MatrixOne/Contribution-Guide/How-to-Contribute/contribute-documentation/#contribute-workflow","title":"Contribute Workflow","text":"<p>When you need to change the specific content of the document but do not involve the adjustment of the chapter order and structure organization, you need to modify <code>matrixorigin.io/tree/main/docs/MatrixOne</code> or <code>matrixorigin.io.cn/tree/main/docs/MatrixOne</code> to operate.</p> <p>If you need to adjust the chapter order and structure organization, you must modify the <code>matrixorigin.io/blob/main/mkdocs.yml</code> or <code>matrixorigin.io.cn/blob/main/mkdocs.yml</code>.</p> <p>The following process shows the case of modifying both, and the actual situation can be simplified according to your needs.</p> <p>1. File an English doc issue or File an Chinese doc issue and assign it to yourself by commenting <code>/assign</code>.</p> <p>2. Fork matrixorigin.io and matrixorigin.io.cn repos. 3. Clone the matrixorigin.io and matrixorigin.io.cn repos.</p> <ul> <li>Clone matrixorigin.io:</li> </ul> <pre><code>git clone git@github.com:yourusername/matrixorigin.io.git\n</code></pre> <ul> <li>Clone the matrixorigin.io.cn:</li> </ul> <pre><code>git clone git@github.com:yourusername/matrixorigin.io.cn.git\n</code></pre> <p>4. Add matrixorigin.io and matrixorigin.io.cn repos as the remote repository in your local folder with:  </p> <ul> <li>Add <code>matrixorigin.io</code> repo as a remote repository in your local matrixorigin.io folder with:  </li> </ul> <pre><code>git remote add upstream https://github.com/matrixorigin/matrixorigin.io.git\n</code></pre> <ul> <li>Add <code>matrixorigin.io.cn</code> repo as a remote repository in your local matrixorigin.io.cn folder with:  </li> </ul> <pre><code>git remote add upstream https://github.com/matrixorigin/matrixorigin.io.cn.git\n</code></pre> <p>5. As the local repo has the full documentation project code, you can run <code>mkdocs serve</code> under <code>matrixorigin.io</code> or <code>matrixorigin.io.cn</code> folder, and check <code>http://localhost:8000</code> to check if this project runs well.  </p> <pre><code>mkdocs serve\n</code></pre> <p>6. Make your modification. If the modification concerns the project settings, update the sitemap with new pages, or update the CI&amp;CD workflow code. You can always check <code>http://localhost:8000</code> to see if your modification is effective.</p> <p>7. Push your git commits to your remote Github <code>matrixorigin.io</code> and <code>matrixone</code> repos. We recommend you push to a new branch using the following commands:</p> <pre><code>git push origin main:NEW_BRANCH\n</code></pre> <p>8. Go back to GitHub, and submit a pull request in <code>NEW_BRANCH</code> so that we can review your changes.  </p> <p>9. Once your code for both repositories is merged, you'll wait for a CI&amp;CD workflow to restart running until the documentation website being updated.</p> <p>Note</p> <p>So once your pull requests are merged, the update to the website is not immediate. We'll need to run a manual launch to update it.</p> <p>10. At last, you should update your local and remote repo to help keep committing history clean. Override your local committing repo with:  </p> <pre><code>git pull --force upstream main:main\n</code></pre> <p>Update the <code>main</code> branch of your remote repo in Github:</p> <pre><code>git push --force origin main:main\n</code></pre> <p>Note</p> <p>Most processes should be implemented in both <code>matrixorigin.io</code> and <code>matrixorigin.io.cn</code>.  </p>"},{"location":"MatrixOne/Contribution-Guide/How-to-Contribute/contribute-documentation/#contribute-a-blog-article","title":"Contribute a blog article","text":"<p>If you would like to write an article for our blog, please file an issue or send it to dengnan@matrixorigin.io. Feel free to submit either a completed draft or any article ideas. All submissions will be reviewed as quickly as possible. If your article or idea seems like a good fit for the blog, we will reach out to you directly.</p>"},{"location":"MatrixOne/Contribution-Guide/How-to-Contribute/make-a-design/","title":"Make a Design Proposal","text":"<p>Many changes including bug fixes and documentation improvements, can be implemented and reviewed via the normal GitHub pull request workflow, which we have already introduced in the previous chapter. However, when you come up with a new feature you need or expect MatrixOne to achieve, we encourage you to propose your idea and express it as a technical design document. Therefore, this page is intended to guide you to provide a consistent and controlled path for new features to enter the MatrixOne projects, so that all stakeholders can fully understand the direction the project is evolving towards. This page defines the best practices procedure for making a proposal in MatrixOne projects.</p>"},{"location":"MatrixOne/Contribution-Guide/How-to-Contribute/make-a-design/#before-writing-a-design-document","title":"Before writing a design document","text":"<p>Making enough preparations ahead of the design document can promote your working efficiency and increase the likelihood of it being accepted. Oppositely, a rough and casual design document may be rejected quickly. We motivate you to ask for help from experienced developers in order to obtain valuable suggestions to frame your design architecture or fill in details, which undoubtedly will upgrade the document to be desirable.</p> <p>The most common channel for preparing for writing a design document is the Github issue. You can file a <code>Feature Request</code> or <code>Refactoring Request</code> to discuss your ideas.</p>"},{"location":"MatrixOne/Contribution-Guide/How-to-Contribute/make-a-design/#process","title":"Process","text":"<p>Generally, you can follow these steps to finish the whole process:  </p> <ul> <li>Create an issue describing the problem, goal, and solution.</li> <li>Get responses from other contributors to see if your proposal is generally acceptable and whether or not you should make some modifications.</li> <li>Create a pull request with a design document based on the design template.</li> <li>Make conversation with reviewers, and revise the text in response.</li> <li>The design document is accepted or rejected when at least two committers reach a consensus and there is no objection from the committer.  </li> <li>If accepted, create a tracking issue for the design document or convert one from a previous discussion issue. The tracking issue basically tracks subtasks and progress. And refer to the tracking issue in the design document replacing the placeholder in the template.</li> <li>Merge the pull request of design.</li> <li>Start the implementation.</li> </ul> <p>Please refer to the tracking issue from subtasks to track the progress.</p>"},{"location":"MatrixOne/Contribution-Guide/How-to-Contribute/preparation/","title":"Preparation","text":"<p>Before contributing, it's necessary to make some preparations to learn more about MatrixOne and other prerevalant information which can improve developing and reviewing efficiency.</p> <p>Thanks for understanding that this repository uses English as a shared language. Maintainers do not use machine translation to avoid miscommunication due to errors in translation. If the description of an issue / PR is written in non-English languages, it may be closed. If English is not your native language and you aren't sure about any of these, don't hesitate to ask for help in your pull request!</p>"},{"location":"MatrixOne/Contribution-Guide/How-to-Contribute/preparation/#what-is-matrixone","title":"What is MatrixOne","text":""},{"location":"MatrixOne/Contribution-Guide/How-to-Contribute/preparation/#basic-information","title":"Basic Information","text":"<p>You can see MatrixOne Introduction for key features of MatrixOne, MatrixOne Architecture for MatrixOne architecture, and operational logic.</p> <p>Besides, you can browse SQL Reference and Custom Functions to know more about our interactive details.</p> <p>These introductions will help you go through you the key concepts and user details to understand the project.</p>"},{"location":"MatrixOne/Contribution-Guide/How-to-Contribute/preparation/#roadmap","title":"Roadmap","text":"<p>MatrixOne v1.2.3 has been released, you can see Release Notes know more information.</p> <p>For the long-term project roadmap, please refer to MatrixOne roadmap for a more general overview.</p>"},{"location":"MatrixOne/Contribution-Guide/How-to-Contribute/preparation/#what-contributions-can-i-make","title":"What Contributions Can I Make","text":"<p>Contributions to MatrixOne are not limited to writing code. What follows are different ways to participate in the MatrixOne project and engage with our vibrant open-source community. See Types of Contributions for more details.  </p> <ul> <li>To report a bug or a problem with the documentation, please file an issue providing the details of the problem. Don't forget to add a proper label for your issue, and follow the issue templates.  </li> <li>To propose a new feature, please file a new feature request. Describe the intended feature and discuss the design and implementation with the team and community. Once the team agrees on the plan, you can follow the Contribution Workflow to implement it.  </li> <li>To implement a feature or bug-fix for an existing outstanding issue, follow the Contribution workflow. If you need more context on a particular issue, comment on the issue to let people know.</li> </ul>"},{"location":"MatrixOne/Contribution-Guide/How-to-Contribute/preparation/#working-directories-and-files","title":"Working Directories and Files","text":"<p>For contributing code, matrixone is the main repository you'll be working on. The main working directories are listed below:</p> Directory Working Files /LICENSES The license of dependant libraries /cmd The binary entry of Go executables optools The test and deployment utilities pkg The main codebase of MatrixOne project <p>For different technical modules, a code structure under <code>/pkg</code> is as shown in the following table.  </p> Directory Modules frontend/ SQL Frontend sql/ MPP SQL Execution sql/parser SQL Parser sql/vectorize Vectorization of SQL Execution catalog/ Catalog for storing metadata vm/engine Storage engine vm/engine/aoe Analytics Optimized Engine vm/engine/tpe Transaction Processing Engine buildin/ System builtin functions <p>For contributing documentation, matrixorigin.io , matrixorigin.io.cn and artwork are all the main repositories you'll be working on. For more details, please refer to Contribute Documentation.</p> Directory Working Files matrixone/docs/rfcs The design docs of MatrixOne project matrixorigin.io/docs/MatrixOne The content files of the English MatrixOne documentation website matrixorigin.io.cn/docs/MatrixOne The content files of the Chinese MatrixOne documentation website matrixorigin.io/mkdocs.yml The configuration file of the English documentation website matrixorigin.io.cn/mkdocs.yml The configuration file of the Chinese documentation website artwork/docs The images, screenshots and diagrams of documentation webstie"},{"location":"MatrixOne/Contribution-Guide/How-to-Contribute/preparation/#set-up-your-development-environment","title":"Set up your Development Environment","text":""},{"location":"MatrixOne/Contribution-Guide/How-to-Contribute/preparation/#go-environment","title":"Go Environment","text":"<p>MatrixOne is written in Go. Before you start contributing code to MatrixOne, you need to set up your GO development environment.</p> <ol> <li>Install <code>Go</code> version 1.19. You can see How to Write Go Code for more information.  </li> <li>Define <code>GOPATH</code> environment variable and modify <code>PATH</code> to access your Go binaries. A common setup is as follows. You could always specify it based on your own flavor.</li> </ol> <pre><code>export GOPATH=$HOME/go  export PATH=$PATH:$GOPATH/bin\n</code></pre> <p>Note</p> <p>MatrixOne uses <code>Go Modules</code> to manage dependencies.</p>"},{"location":"MatrixOne/Contribution-Guide/How-to-Contribute/preparation/#github-git","title":"Github &amp; Git","text":"<p>MatrixOne is an open-source project built on Github, providing project maintainers and contributors with a platform to work together. Thus, in order to start working with MatrixOne repository, you will need a GitHub account and learn basic git commands. If you don't have a Github account, please register at https://github.com. In case you do not have SSH keys, you should generate them and then upload them on GitHub. It is required for sending over your patches. It is also possible to use the same SSH keys that you use with any other SSH servers - probably you already have those. For detailed information about Github, you can see Github Docs.  </p> <p>To work with git repositories, please install git. And you can learn how to use it throuth following introduction:  </p> <ul> <li>A brief manual can be found here.</li> <li>A detailed manual can be found here.</li> </ul>"},{"location":"MatrixOne/Contribution-Guide/How-to-Contribute/preparation/#install-and-run-matrixone","title":"Install and Run MatrixOne","text":"<p>See Install Standalone MatrixOne for more details.</p>"},{"location":"MatrixOne/Contribution-Guide/How-to-Contribute/report-an-issue/","title":"Report Issues","text":"<p>Any problem is encouraged to be published when you participate in MatrixOne, and you can report issues about this problem on GitHub with templates and labels we suggest. This page is intended to introduce templates, labels, and precautions you will follow when you report issues.</p>"},{"location":"MatrixOne/Contribution-Guide/How-to-Contribute/report-an-issue/#avoid-duplicated-issues","title":"Avoid Duplicated Issues","text":"<p>Before reporting an issue, you should see whether the problem has already been reported. You can use the search bar to search for existing issues.</p>"},{"location":"MatrixOne/Contribution-Guide/How-to-Contribute/report-an-issue/#issue-templates","title":"Issue Templates","text":"<p>If the problem you're reporting is not already in the issue tracker, you can file an issue with your GitHub account. MatrixOne uses issue templates for different kinds of issues. Issue templates are a bundle of questions to collect necessary information about the problem to make it easy for other contributors to participate. MatrixOne suggests 6 types of issue templates:</p> <p>A <code>Bug report</code> issue template consists of the information below:  </p> <ul> <li>Detail Environment   Describe the details about the operating environment including version, hardware parameters, OS type, and so on.</li> <li>Steps to Reproduce   List steps to reproduce what you encountered.</li> <li>Actual &amp; Expected Behavior   Describe what's the observed and your expected behavior respectively.</li> </ul> <p>A <code>Feature Request</code> consists of the information below:  </p> <ul> <li>Is your feature request related to a problem? A clear and concise description of the problem and state why you need this feature.</li> <li>Describe the feature you'd like: A clear and concise description of what you want to happen.</li> <li>Describe alternatives you've considered: A clear and concise description of any alternative solutions or features you've considered.</li> <li>Teachability, Documentation, Adoption, Migration Strategy: If you can, explain some scenarios in how users might use this, and situations it would be helpful. Any API designs, mockups, or diagrams are also helpful.</li> </ul> <p>A <code>Documentation Issue</code> consists of the information below:  </p> <ul> <li>Describe the issue   A clear and concise description of what's wrong in the documentation.</li> <li>Additional context   Add any other context about the problem here.</li> </ul> <p>A <code>Performance Question</code> consists of the information below:  </p> <ul> <li>Detail Environment   Describe the details about the operating environment including version, hardware parameters, OS type, and so on.</li> <li>Steps to Reproduce   List steps detailedly to reproduce the operations to test performance.</li> <li>Expected &amp; Actual Performance   Describe what's the observed and your expected performance respectively.</li> <li>Additional context   Add any other context about the problem here. For example:  <ul> <li>Have you compared MatrixOne with other databases? If yes, what's their difference?</li> </ul> </li> </ul> <p>An <code>Enhancement</code> consists of the information below:  </p> <ul> <li>What would you like to be added A concise description of what you're expecting/suggesting.</li> <li>Why is this needed A concise description of the reason/motivation.</li> <li>Anything else Anything that will give us more details about your issue!</li> </ul> <p>A <code>Refactoring Request</code> consists of the information below:  </p> <ul> <li>Is your refactoring request related to a problem? A clear and concise description of what the problem is.</li> <li>Describe the solution you'd like A clear and concise description of the refactoring you want to do.</li> <li>Describe alternatives you've considered A clear and concise description of any alternative solutions or refactoring methods you've considered.</li> <li>Additional context Add any other context or screenshots about the refactoring request here.</li> </ul> <p>A <code>General Question</code>:</p> <p>If the previous templates don't fit with what you'd like to report or ask, please use this general question template to file the issue.</p> <p>Before asking a question, make sure you have:</p> <ul> <li>Searched open and closed GitHub issues</li> <li>Read the documentation:<ul> <li>MatrixOne Readme</li> <li>MatrixOne Doc</li> </ul> </li> </ul>"},{"location":"MatrixOne/Contribution-Guide/How-to-Contribute/report-an-issue/#issue-labels","title":"Issue Labels","text":"<p>Once your issue is submitted, it will automatically be labeled with <code>needs-triage</code>, a MatrixOne maintainer will look at the issue, tag it with more suitable labels, and assign it to a suitable developer. If you'd like to work on the issue by yourself, you can comment <code>/assign</code> on the issue you would like to work on, and you will be automatically assigned to the issue. You can then find yourself listed under the Assignees section.</p>"},{"location":"MatrixOne/Contribution-Guide/How-to-Contribute/report-an-issue/#good-first-issues","title":"Good First Issues","text":"<p>When you make the first contribution to MatrixOne, you can select one of the issues labeled <code>good-first-issues</code> each of which is relatively approachable for first-time contributors. For detailed suggestions, you need when you make the first contribution, you can see Make Your First Contribution.</p>"},{"location":"MatrixOne/Contribution-Guide/How-to-Contribute/review-a-pull-request/","title":"Reviews","text":"<p>For MatrixOne, any type of review for a pull request is crucial, where you can classify the pull request to help look for more suitable experts to solve related problems or propose your suggestions to code for not only content but style. It's not necessary to doubt whether your review is constructive and useful enough because no matter how tiny, a suggestion may profoundly influence MatrixOne. Certainly, before reviewing we ask that you browse this page to learn basic requirements and relative methods.</p>"},{"location":"MatrixOne/Contribution-Guide/How-to-Contribute/review-a-pull-request/#principles-of-the-code-review","title":"Principles of the code review","text":"<p>When you review a pull request, there are several rules and suggestions you should take to propose better comments. Regardless of the specifics, we suggest you stay friendly first:  </p> <ul> <li>Be respectful Be respectful to every pull request author and other reviewers. Code review is a part of community activities so you should follow the community requirements.</li> <li>Be careful with tone Try to frame your comments as suggestions or questions instead of commands. If the tone is softer, your reviews will be easier to accept.</li> <li>Be generous with your compliments We recommend you offer encouragement and appreciation to the authors for their good practices in the code segments. In many cases, telling the authors what they did is right is even more valuable than telling them what they did is wrong.</li> </ul> <p>Additionally, here are some suggestions in terms of content:  </p> <ul> <li>Provide more We encourage you to provide additional details and context of your review process as much as you can. Undoubtedly, the more detailed your review, the more useful it will be to others. If you test the pull request, please report the result and your test environment details. If you request some changes, try to suggest how.</li> <li>Keep objective Avoid individual biased opinions and subjective emotions. Of course, everyone will comment with more or less subjective opinions. However, as a good reviewer, you should consider the technique and data facts rather than your own personal preferences.</li> <li>Case by case It's difficult to decide whether it's more reasonable to accept or reject when you are faced with a complex problem. Regrettably, we can't provide a certain answer because it always depends on the specific situation, which asks you to balance the pros and cons.  </li> </ul>"},{"location":"MatrixOne/Contribution-Guide/How-to-Contribute/review-a-pull-request/#classifying-pull-requests","title":"Classifying pull requests","text":"<p>Some pull request authors may not be familiar with MatrixOne, the MatriOne development workflow, or the MatrixOne community. They don't know what labels should be added to the pull requests or which expert could be asked for a review. If you are able to, it would be great for you to triage the pull requests, add suitable labels to the pull requests, and request corresponding experts to review the pull requests. These actions could help more contributors notice the pull requests and make quick responses.  </p>"},{"location":"MatrixOne/Contribution-Guide/How-to-Contribute/review-a-pull-request/#checking-pull-requests","title":"Checking pull requests","text":"<p>There are some basic aspects to check when you review a pull request:</p> <ul> <li>Concentration   One pull request should only do one thing. No matter how small it is, the change does exactly one thing and gets it right. Don't mix other changes into it.</li> <li>Tests   A pull request should be test covered, whether the tests are unit tests, integration tests, or end-to-end tests. Tests should be sufficient, correct, and don't slow down the CI pipeline largely.</li> <li>Functionality   The pull request should implement what the author intends to do, fit well in the existing code base, and resolve a real problem for users. Thus you should check whether or not the pull request achieves the intention and you could follow the discussions in the corresponding GitHub issue.  </li> <li>Style   Code in the pull request should follow a common programming style. However, sometimes the existing code is inconsistent with the style guide. You should maintain consistency with the existing code or file a new issue to fix the existing code style first.</li> <li>Documentation   If a pull request changes how users build, test, interact with, or release code, you must check whether it also updates the related documentation such as <code>README.md</code> and any generated reference docs. Similarly, if a pull request deletes or deprecates code, you must check whether or not the corresponding documentation should also be deleted.</li> <li>Performance   If you find the pull request may affect performance, you could ask the author to provide a benchmark result.</li> </ul>"},{"location":"MatrixOne/Contribution-Guide/How-to-Contribute/types-of-contributions/","title":"Types of Contributions","text":"<p>Contributions to MatrixOne are not limited to writing code. What follows are different ways to participate in the MatrixOne project and engage with our vibrant open-source community:</p>"},{"location":"MatrixOne/Contribution-Guide/How-to-Contribute/types-of-contributions/#contribute-code","title":"Contribute Code","text":"Contribution type Description Report a bug To report a problem with MatrixOne, file an issue on GitHub. Include detailed information about the problem you've encountered. Contribute code You can fix a bug for any outstanding issues on GitHub, improve the code, or propose a design or implementation for a new MatrixOne feature. See Contribute Code for the contribution conventions and best practices. Review or approve pull requests Review or approve pull requests for the MatrixOne project as a reviewer or maintainer."},{"location":"MatrixOne/Contribution-Guide/How-to-Contribute/types-of-contributions/#contribute-to-matrixone-documentation","title":"Contribute to MatrixOne Documentation","text":"Contribution type Description Report or fix a technical documentation issue You can either click edit the page directly on the target page of MatrixOne, or file an English document issue/file an Chinese document issue on MatrixOne repository with detailed information, and, if possible, propose changes by creating an English document pull request/creating a Chinese document pull request. Contribute a new piece of technical document Before contributing a full-length technical document, read Contribution Documentation."},{"location":"MatrixOne/Contribution-Guide/How-to-Contribute/types-of-contributions/#other-contributions","title":"Other Contributions","text":"Contribution type Description Share your demos and solutions Show MatrixOne users how to leverage the platform in specific scenarios. Send your use case to dengnan@matrixorigin.io and we'll post it in the community. Author a blog article, user story, or whitepapers Write high-quality content that clearly and accurately explains technical details about MatrixOne. Give a tech talk or host a live broadcast Give talks or host live broadcasts that help raise awareness around MatrixOne. Support MatrixOne users Help users on GitHub solve the problems they meet while using MatrixOne. Issue triage Adding descriptive labels to our GitHub issues speeds up routing issues to the right person in charge. It is a great contribution to the operation of the MatrixOne project. Contribute otherwise Any contribution that plays a positive role in the development of MatrixOne and its open-source community will be considered for eligibility."},{"location":"MatrixOne/Deploy/MatrixOne-Operator-mgmt/","title":"MatrixOne Operator Management","text":""},{"location":"MatrixOne/Deploy/MatrixOne-Operator-mgmt/#matrixone-operator-overview","title":"MatrixOne Operator overview","text":"<p>MatrixOne Operator is used to define and manage the resource requirements of MatrixOne clusters in Kubernetes, consisting of a set of Kubernetes custom resources (CustomResourceDefinitions, CRD), a set of Kubernetes controllers and a set of WebHook services:</p> <ul> <li> <p>CRD: In Kubernetes, CRD is an object that registers a new custom resource type into Kubernetes APIServer. The CRDs contained in MatrixOne Operator register various custom resources, including MatrixOneCluster resources used to describe MatrixOne clusters and resources such as CNSet, TNSet, and LogSet used to describe components in the cluster. After the registration, the client can read and write these resources on the Kubernetes APIServer.</p> </li> <li> <p>Controller: The controller is a long-running automation program responsible for monitoring the desired state of resources in Kubernetes, collecting the actual state of these resources, and automatically operating and maintaining them to drive the actual state to the desired state. The controller in matrixone-operator monitors resources such as MatrixOneCluster, CNSet, TNSet, LogSet, etc., and is responsible for realizing the desired state declared by the user through these resources.</p> </li> <li> <p>Webhook service: A webhook service is a long-running HTTP service. When Kubernetes APIServer receives a request from a user to read and write resources such as MatrixOneCluster, CNSet, TNSet, and LogSet, it will forward the request to the Webhook service, and the Webhook service will perform logic such as request verification and default value filling.</p> </li> </ul> <p>When using Helm chart to install Matrixone-Operator, it will automatically submit the required CRDs to Kubernetes APIServer, complete the registration of custom resources, and deploy a long-running Matrixone-Operator application. The controller mentioned above, and webhook services are packaged in this application.</p>"},{"location":"MatrixOne/Deploy/MatrixOne-Operator-mgmt/#cluster-management","title":"Cluster Management","text":"<p>MatrixOne Operator provides users with declarative cluster management capabilities through MatrixOneCluster resources. Specifically, when deploying a MatrixOne cluster on Kubernetes, the user can declare a MatrixOneCluster object in YAML format to describe the cluster, and the controller of the operator will realize the orchestration of the cluster according to the description and update the cluster status to the .status of the MatrixOneCluster object field.</p> <p>A MatrixOneCluster cluster consists of components such as Compute Node (CN), Transaction Node (TN), and Log Service, which correspond to sub-resources such as CNSet, TNSet, and LogSet. Therefore, the controller of the MatrixOneCluster resource orchestrates these sub-resources and relies on the controllers of these sub-resources to complete their orchestration.</p> <p></p>"},{"location":"MatrixOne/Deploy/MatrixOne-Operator-mgmt/#deployment-operation-maintenance","title":"Deployment, Operation, Maintenance","text":"<p>The deployment, operation, and maintenance environment introduced in this chapter will be based on the environment of MatrixOne Distributed Cluster Deployment.</p> <p>The following operations are performed on the master0 node.</p>"},{"location":"MatrixOne/Deploy/MatrixOne-Operator-mgmt/#deployment","title":"Deployment","text":"<p>Please look at the MatrixOne-Operator deployment chapter of MatrixOne Distributed Cluster Deployment.</p>"},{"location":"MatrixOne/Deploy/MatrixOne-Operator-mgmt/#check-status","title":"Check Status","text":"<p>We use the Helm tool to deploy MatrixOne Operator. Helm is a Kubernetes application package management tool for managing charts, pre-configured installation package resources, similar to Ubuntu's APT and CentOS YUM. You can use the <code>helm list</code> command to check the deployment status of the Operator.</p> <pre><code>[root@master0 ~]# NS=\"matrixone-operator\"\n[root@master0 ~]# helm list -n${NS}\nNAME                    NAMESPACE               REVISION        UPDATED                                 STATUS          CHART                                   APP VERSION\nmatrixone-operator      matrixone-operator      1               2023-05-09 15:19:38.363683192 +0800 CST deployed        matrixone-operator-0.8.0-alpha.2        0.1.0\n</code></pre>"},{"location":"MatrixOne/Deploy/MatrixOne-Operator-mgmt/#update","title":"Update","text":"<p>The MatrixOne-Operator project is a long-term maintenance and update project; please update to the latest version. You can download the new version of Operator on Github, for example: <code>matrixone-operator-0.8.0-alpha.2</code>.</p> <p>Unzip the file with the following command:</p> <pre><code>tar xvf ./matrixone-operator-0.8.0-alpha.2.tgz\ncd matrixone-operator\n</code></pre> <p>You can use the <code>helm upgrade</code> command to upgrade Matrixone-Operator. You can get the mirror version with the following command:</p> <pre><code>cd matrixone-operator\nNS=\"matrixone-operator\"\nhelm upgrade -n \"${NS}\" matrixone-operator ./ --dependency-update\n</code></pre> <p>After the upgrade is successful, the code display is as follows:</p> <pre><code>Release \"matrixone-operator\" has been upgraded. Happy Helming!\nNAME: matrixone-operator\nLAST DEPLOYED: Tue May  9 17:59:06 2023\nNAMESPACE: matrixone-operator\nSTATUS: deployed\nREVISION: 2\nTEST SUITE: None\n</code></pre> <p>After the upgrade is complete, you can view the current version with the following command:</p> <pre><code>#Get mirror version\nNS=\"matrixone-operator\"\nkubectl get pod -n${NS} `kubectl get pod -n${NS}  | grep operator | head -1 | awk '{print $1}'` -ojsonpath='{.spec.containers[0].image}'\nmatrixorigin/matrixone-operator:0.8.0-alpha.2\n</code></pre> <p>After upgrading Matrixone-Operator, a new Pod of <code>matrixone-operator-xxxx-xxx</code> will be regenerated under the <code>matrixone-operator</code> namespace, and then the old Pod will be deleted.</p> <p>Note</p> <p>After the upgrade is complete, if the changes brought about by the Matrixone-Operator upgrade will also update the default <code>.spec</code>, then it is possible to roll over the related services or configurations of the MatrixOne cluster so that the MatrixOne service may be restarted. You can monitor the upgrade process with the command: <code>watch -e \"kubectl get pod -nmo-hn -owide\"</code>.</p> <pre><code>NS=\"matrixone-operator\"\nwatch -e \"kubectl get pod -n${NS} -owide\"\n</code></pre> <pre><code>NAME                                 READY   STATUS    RESTARTS   AGE    IP              NODE    NOMINATED NODE   READINESS GATES\nmatrixone-operator-f8496ff5c-s2lr6   1/1     Running   0          164m   10.234.168.43   node1   &lt;none&gt;           &lt;none&gt;\n</code></pre>"},{"location":"MatrixOne/Deploy/MatrixOne-Operator-mgmt/#scaling","title":"Scaling","text":"<p>Since Operators often use limited resources, there are relatively few scenarios for vertical scaling. Generally speaking, we only need to consider horizontal scaling, increasing or decreasing the number of replicas. Usually, the Operator has a single copy. If we need to enhance the high availability of the Operator, consider expanding it, for example, to two copies. This way, even if the first replica fails (for example, pulling an image fails on its node), the other replica can still function normally. We can expand and shrink the number of Operator replicas by using the Helm Upgrade command and specifying the number of replicaCount in the deployment directory of the current Operator version. This is very important for the deployment and O&amp;M management operations of MO clusters.</p> <p>Before scaling up, we can use the following command to view the number of Operators:</p> <pre><code>NS=\"matrixone-operator\"\nwatch -e \"kubectl get pod -n${NS} -owide\"\n</code></pre> <pre><code>NAME                                 READY   STATUS    RESTARTS   AGE    IP              NODE    NOMINATED NODE   READINESS GATES\nmatrixone-operator-f8496ff5c-s2lr6   1/1     Running   0          164m   10.234.168.43   node1   &lt;none&gt;           &lt;none&gt;\n</code></pre> <ul> <li>Expansion: Use the following command line to expand capacity:</li> </ul> <pre><code># number of replicas\ncd matrixone-operator\nNUM=2\nNS=\"matrixone-operator\"\nhelm upgrade -n${NS} matrixone-operator ./ --dependency-update --set replicaCount=${NUM}\n</code></pre> <p>The expansion is successful, and the printing code example is as follows:</p> <pre><code>Release \"matrixone-operator\" has been upgraded. Happy Helming!\nNAME: matrixone-operator\nLAST DEPLOYED: Tue May  9 18:07:03 2023\nNAMESPACE: matrixone-operator\nSTATUS: deployed\nREVISION: 3\nTEST SUITE: None\n</code></pre> <p>You can continue to observe the number of operators with the following command:</p> <pre><code>watch -e \"kubectl get pod -nmo-hn -owide\"\nNAME                                 READY   STATUS    RESTARTS   AGE    IP              NODE    NOMINATED NODE   READINESS GATES\nmatrixone-operator-f8496ff5c-nt8qs   1/1     Running   0          9s     10.234.60.126   node0   &lt;none&gt;           &lt;none&gt;\nmatrixone-operator-f8496ff5c-s2lr6   1/1     Running   0          167m   10.234.168.43   node1   &lt;none&gt;           &lt;none&gt;\n</code></pre> <p>If you need to scale down horizontally, you can use <code>helm upgrade</code> to reduce the number of <code>replicaCount</code> to complete the reduction of the number of replicas of the operator.</p>"},{"location":"MatrixOne/Deploy/MatrixOne-Operator-mgmt/#uninstall","title":"Uninstall","text":"<p>Warning</p> <p>Before uninstalling Matrixone-Operator, confirm clearly, because the uninstallation operation will directly uninstall the resources related to the Matrixone cluster, including SVC, Pod, etc. (but not including the PVC resources used by the log service).</p> <p>Uninstall Matrixone-Operator with the following command:</p> <pre><code>helm uninstall matrixone-operator -n mo-hn\n</code></pre>"},{"location":"MatrixOne/Deploy/MatrixOne-cluster-Scale/","title":"Scaling MatrixOne Cluster","text":"<p>This document will introduce how to scale the MatrixOne cluster, including the Kubernetes cluster and scaling of individual MatrixOne services.</p> <p>The environment introduced in this document will be based on the environment of MatrixOne Distributed Cluster Deployment.</p>"},{"location":"MatrixOne/Deploy/MatrixOne-cluster-Scale/#when-is-it-necessary-to-scale","title":"When is it necessary to scale","text":"<p>To determine whether the MatrixOne service needs to be scaled up or down, users need to monitor the nodes where the MatrixOne cluster resides and the resources used by the Pods corresponding to related components. You can do this with the <code>kubectl top</code> command. For more detailed operation steps, please refer to Health Check and Resource Monitoring.</p> <p>In general, if the resource usage of a node or Pod exceeds 60% and lasts for some time, consider expanding capacity to cope with the peak load. In addition, capacity expansion operations must also be considered if a high TPS request volume is observed according to business indicators.</p>"},{"location":"MatrixOne/Deploy/MatrixOne-cluster-Scale/#scaling-kubernetes","title":"Scaling Kubernetes","text":"<p>Kubernetes manages and allocates essential hardware resources in the distributed MatrixOne cluster. Kubernetes can expand or contract the hardware nodes in the cluster using the kuboard spray graphical management page. For more information on tutorials, see kuboard spray official documents.</p> <p>You need to add a working node to the cluster, and the overall hardware configuration resources are shown in the following table:</p> Host Internal IP External IP mem CPU Disk Role kuboardspray 10.206.0.6 1.13.2.100 2G 2C 50G \u8df3\u677f\u673a master0 10.206.134.8 118.195.255.252 8G 2C 50G master etcd node0 10.206.134.14 1.13.13.199 8G 2C 50G worker node1 10.206.134.16 129.211.211.29 8G 2C 50G worker"},{"location":"MatrixOne/Deploy/MatrixOne-cluster-Scale/#scaling-matrixone-services","title":"Scaling MatrixOne Services","text":"<p>Scaling of services refers to expanding or contracting the core component services within the MatrixOne cluster, such as Log Service, TN, and CN. Based on the architectural characteristics of MatrixOne, the following conditions apply to these service nodes:</p> <ul> <li>Log Service has only 3 nodes.</li> <li>TN has only 1 node.</li> <li>The number of CN nodes is flexible.</li> </ul> <p>Therefore, scaling of Log Service and TN nodes is possible only through vertical scaling. However, CN nodes can be scaled both vertically and horizontally.</p>"},{"location":"MatrixOne/Deploy/MatrixOne-cluster-Scale/#horizontal-scaling","title":"Horizontal scaling","text":"<p>Horizontal scaling refers to the increase or decrease in the number of copies of a service. You can change the number of service replicas by modifying the value of the <code>.spec.[component].replicas</code> field in the MatrixOne Operator startup yaml file.</p> <ol> <li> <p>Use the following command to activate the value of the <code>.spec.[component].replicas</code> field in the yaml file:</p> <pre><code>kubectl edit matrixonecluster ${mo_cluster_name} -n ${mo_ns}\n</code></pre> </li> <li> <p>Enter edit mode:</p> <pre><code>tp:\n    replicas: 2 #Changed from 1 CN to 2 CNs\n#Other content is ignored\n</code></pre> <p>Note</p> <p>You can also refer to the above steps to change the field value of <code>replicas</code> for scaling down.</p> </li> <li> <p>After editing the number of <code>replicas</code>, saving, and exiting, MatrixOne Operator will automatically start a new CN. You can observe the new CN status with the following command:</p> <pre><code>[root@master0 ~]# kubectl get pods -n mo-hn      \nNAME                                  READY   STATUS    RESTARTS     AGE\nmatrixone-operator-6c9c49fbd7-lw2h2   1/1     Running   2 (8h ago)   9h\nmo-tn-0                               1/1     Running   0            11m\nmo-log-0                              1/1     Running   0            12m\nmo-log-1                              1/1     Running   0            12m\nmo-log-2                              1/1     Running   0            12m\nmo-tp-cn-0                            1/1     Running   0            11m\nmo-tp-cn-1                            1/1     Running   0            63s\n</code></pre> </li> </ol> <p>In addition, Kubernetes' SVC will automatically ensure CN load balancing and user connections will be evenly distributed to different CNs. You can view the number of connections on each CN through the built-in <code>system_metrics.server_connections</code> table of MatrixOne.</p>"},{"location":"MatrixOne/Deploy/MatrixOne-cluster-Scale/#vertical-scaling","title":"Vertical scaling","text":"<p>Vertical scaling refers to the resources required to serve a copy of a single component, such as adjusting CPU or memory.</p> <ol> <li> <p>Use the following command to modify the configuration of <code>requests</code> and <code>limits</code> in the corresponding component's <code>.spec.[component].resources</code>. The example is as follows:</p> <pre><code>kubectl edit matrixonecluster ${mo_cluster_name} -n ${mo_ns}\n</code></pre> </li> <li> <p>Enter edit mode:</p> <pre><code>metadata:\n  name: mo\n  # content omitted\nspec:\n  tp:\n        resources:\n      requests:\n        cpu: 1\n        memory: 2Gi\n      limits:\n        cpu: 1\n        memory: 2Gi\n...\n# content omitted\n</code></pre> </li> </ol>"},{"location":"MatrixOne/Deploy/MatrixOne-cluster-Scale/#node-scheduling","title":"Node Scheduling","text":"<p>By default, Matrixone-operator does not configure topology rules for each component's Pod but uses Kubernetes' default scheduler to schedule according to each Pod's resource request. If you need to set specific scheduling rules, such as scheduling the cn component to two specific nodes, node0, and node1, you can follow the steps below:</p> <ol> <li> <p>Set labels for <code>node0</code> and <code>node1</code>.</p> </li> <li> <p>Set <code>nodeSelector</code> in the MatrixOne cluster so the service can be scheduled to the corresponding node.</p> </li> <li> <p>(Optional) Set the <code>TopologySpread</code> field in the MatrixOne cluster to achieve an even distribution of services across nodes.</p> </li> <li> <p>Set the number of replicas <code>replicas</code> in the MatrixOne cluster.</p> </li> </ol>"},{"location":"MatrixOne/Deploy/MatrixOne-cluster-Scale/#set-node-label","title":"Set node label","text":"<ol> <li> <p>Execute the following command to view the status of the cluster nodes:</p> <pre><code>[root@master0 ~]# kubectl get node\nNAME      STATUS   ROLES                  AGE   VERSION\nmaster0   Ready    control-plane,master   47h   v1.23.17\nnode0     Ready    &lt;none&gt;                 47h   v1.23.17\nnode1     Ready    &lt;none&gt;                 65s   v1.23.17\n</code></pre> </li> <li> <p>According to the above-returned results and actual needs, you can label the nodes; see the following code example:</p> <pre><code>NODE=\"[node to be labeled]\" # According to the above results, it may be IP, hostname, or alias, such as 10.0.0.1, host-10-0-0-1, node01, then set NODE = \"node0\"\nLABEL_K=\"mo-role\" # The key of the label, which can be defined on demand, or can be directly used as an example\nLABEL_V=\"mo-cn\" # The value of the label, which can be defined as needed, or can be directly used as an example\n\nkubectl label node ${NODE} ${LABEL_K}=${LABEL_V}\n</code></pre> </li> <li> <p>In this case, you can also write the following two statements:</p> <pre><code>kubectl label node node0 \"mo-role\"=\"mo-cn\"\nkubectl label node node1 \"mo-role\"=\"mo-cn\"\n</code></pre> </li> <li> <p>Use the following command to confirm that the node label is printed:</p> <pre><code>[root@master0 ~]# kubectl get node node0 --show-labels | grep mo_role     \nnode0   Ready    &lt;none&gt;   47h   v1.23.17   beta.kubernetes.io/arch=amd64,beta.kubernetes.io/os=linux,kubernetes.io/arch=amd64,kubernetes.io/hostname=node0,kubernetes.io/os=linux,mo_role=mo_cn\n[root@master0 ~]# kubectl get node node1 --show-labels | grep mo_role\nnode1   Ready    &lt;none&gt;   7m25s   v1.23.17   beta.kubernetes.io/arch=amd64,beta.kubernetes.io/os=linux,kubernetes.io/arch=amd64,kubernetes.io/hostname=node1,kubernetes.io/os=linux,mo_role=mo_cn\n</code></pre> </li> <li> <p>Execute the following command to delete tags as needed:</p> <pre><code>kubectl label node ${NODE} ${LABEL_K}-\n</code></pre> </li> </ol>"},{"location":"MatrixOne/Deploy/MatrixOne-cluster-Scale/#set-service-scheduling-rules-uniform-distribution-and-number-of-copies","title":"Set service scheduling rules, uniform distribution, and number of copies","text":"<ol> <li> <p>Execute the following command to view the current distribution of Pods on multiple nodes:</p> <pre><code>[root@master0 mo]# kubectl get pod -nmo-hn -owide\nNAME         READY   STATUS    RESTARTS   AGE   IP              NODE    NOMINATED NODE   READINESS GATES\nmo-tn-0      1/1     Running   0          34m   10.234.60.120   node0   &lt;none&gt;           2/2\nmo-log-0     1/1     Running   0          34m   10.234.168.72   node1   &lt;none&gt;           2/2\nmo-log-1     1/1     Running   0          34m   10.234.60.118   node0   &lt;none&gt;           2/2\nmo-log-2     1/1     Running   0          34m   10.234.168.73   node1   &lt;none&gt;           2/2\nmo-tp-cn-0   1/1     Running   0          33m   10.234.168.75   node1   &lt;none&gt;           2/2\n</code></pre> </li> <li> <p>According to the above output and actual requirements, it can be seen that there is only one CN at present, and we need to set the scheduling rules for the CN component. We will modify it in the properties of the MatrixOne cluster object. The new CN will be scheduled to node0 under the rule of uniform distribution within the scheduling scope. Execute the following command to enter edit mode:</p> <pre><code>mo_ns=\"mo-hn\"\nmo_cluster_name=\"mo\" # The general name is mo, specified by the name in the yaml file of the matrixonecluster object during deployment, or confirmed by kubectl get matrixonecluster -n${mo_ns}\nkubectl edit matrixonecluster ${mo_cluster_name} -n ${mo_ns}\n</code></pre> </li> <li> <p>In edit mode, according to the above scenario, we will set the number of copies of CN to 2 and schedule on nodes labeled <code>mo-role:mo-cn</code> to achieve uniform distribution within the scheduling range. We will use <code>spec.[component].nodeSelector</code> to specify the tag selector for a specific component. Here is the edited content of the example:</p> <pre><code>metadata:\n  name: mo\n# Intermediate content omitted\nspec:\n# Intermediate content omitted\n  tp:\n    # Set the number of replicas\n    replicas: 2\n    # Set scheduling rules\n    nodeSelector:\n      mo-role: mo-cn\n    # Set the uniform distribution within the scheduling range\n    topologySpread:\n      - topology.kubernetes.io/zone\n      - kubernetes.io/hostname\n#Other content omitted\n</code></pre> </li> <li> <p>After the change takes effect, execute the following command to check that the two CNs are already on the two nodes:</p> <pre><code>[root@master0 ~]# kubectl get pod -nmo-hn -owide      \nNAME         READY   STATUS    RESTARTS        AGE     IP              NODE    NOMINATED NODE   READINESS GATES\nmo-tn-0      1/1     Running   1 (2m53s ago)   3m6s    10.234.168.80   node1   &lt;none&gt;           2/2\nmo-log-0     1/1     Running   0               3m40s   10.234.168.78   node1   &lt;none&gt;           2/2\nmo-log-1     1/1     Running   0               3m40s   10.234.60.122   node0   &lt;none&gt;           2/2\nmo-log-2     1/1     Running   0               3m40s   10.234.168.77   node1   &lt;none&gt;           2/2\nmo-tp-cn-0   1/1     Running   0               84s     10.234.60.125   node0   &lt;none&gt;           2/2\nmo-tp-cn-1   1/1     Running   0               86s     10.234.168.82   node1   &lt;none&gt;           2/2\n</code></pre> </li> </ol> <p>It should be noted that the configuration in the above example will make the Pods in the cluster evenly distributed on the two dimensions <code>topology.kubernetes.io/zone</code> and <code>kubernetes.io/hostname</code>. The tag keys specified in <code>topologySpread</code> are ordered. In the example above, Pods is first distributed evenly across the Availability Zones dimension, and then Pods within each Availability Zone are evenly distributed across the nodes within that zone.</p> <p>Using the <code>topologySpread</code> function can increase the availability of the cluster and reduce the possibility of destroying the majority of replicas in the cluster due to a single point or regional failure. But this also increases the scheduling requirements and the need to ensure that the cluster has enough resources available in each region.</p>"},{"location":"MatrixOne/Deploy/MatrixOne-start-stop/","title":"Starting and stopping MatrixOne distributed Cluster","text":"<p>This document will introduce how to start and stop the MatrixOne  distributed cluster.</p> <p>The upgraded environment introduced in this document will be based on the environment of MatrixOne Distributed Cluster Deployment.</p>"},{"location":"MatrixOne/Deploy/MatrixOne-start-stop/#cluster-shutdown","title":"Cluster Shutdown","text":"<p>To shut down a MatrixOne cluster, stop the read-write operations and then shut down the servers directly. The shutdown sequence is as follows: first, shut down the node0 node, then shut down the master0 node, and finally, shut down the Kuboard-Spray node.</p>"},{"location":"MatrixOne/Deploy/MatrixOne-start-stop/#cluster-restart","title":"Cluster Restart","text":"<p>To restart a MatrixOne cluster, following the following hardware startup sequence is recommended: start the Kuboard-Spray node, then start the master0 node, and finally start the node0 node.</p> <p>After the hardware startup is complete, k8s will automatically recover. At the same time, MatrixOne and MinIO-related services will be automatically restored without manual intervention. However, it should be noted that the Docker of the Kuboard-Spray node will not be automatically restored, and the Kuboard-Spray service needs to be manually started.</p>"},{"location":"MatrixOne/Deploy/MatrixOne-start-stop/#check-k8s-status","title":"Check K8s Status","text":"<p>On the master0 node that operates k8s, you can check the status of the k8s cluster nodes.</p> <p>In normal circumstances, the status of all nodes should be Ready. If the status of some nodes is abnormal, further investigation is required to determine the reason.</p> <pre><code>kubectl get node\n# If the status is not \"Ready\", further investigation into the node's situation is necessary.\n# kubectl describe node ${NODE_NAME}\n</code></pre> <p>Here is an example of a diagram for codes:</p> <p></p>"},{"location":"MatrixOne/Deploy/MatrixOne-start-stop/#check-minio-status","title":"Check MinIO status","text":"<p>On the master0 node operating k8s, you can check the status of MinIO.</p> <p>After the hardware starts, MinIO will automatically resume. You can use the following command to check the status of MinIO.</p> <pre><code>NS=\"mostorage\"\nkubectl get pod -n${NS}\n</code></pre> <p>Here is an example of a diagram for codes:</p> <p></p>"},{"location":"MatrixOne/Deploy/MatrixOne-start-stop/#check-the-status-of-the-matrixone-cluster-and-components","title":"Check the status of the MatrixOne cluster and components","text":""},{"location":"MatrixOne/Deploy/MatrixOne-start-stop/#check-matrixonecluster-status","title":"Check MatrixOneCluster status","text":"<p>First, check whether the MatrixOne cluster is standard. The MatrixOne cluster corresponds to the custom resource type MatrixOneCluster.You can use the following command to check the status of MatrixOneCluster:</p> <pre><code>MO_NAME=\"mo\"\nNS=\"mo-hn\"\nkubectl get matrixonecluster -n${NS} ${MO_NAME}\n</code></pre> <p>Under normal circumstances, the status should be Ready. If the status is NotReady, further troubleshooting is required.</p> <p>Here is an example of a diagram for codes:</p> <p></p>"},{"location":"MatrixOne/Deploy/MatrixOne-start-stop/#view-matrixone-cluster-status-details","title":"View MatrixOne cluster status details","text":"<p>If the MatrixOne cluster status is not normal, you can use the following command to view the details:</p> <pre><code>kubectl describe matrixonecluster -n${NS} ${MO_NAME}\n</code></pre> <p></p> <p></p>"},{"location":"MatrixOne/Deploy/MatrixOne-start-stop/#check-the-status-of-tnsetcnsetlogset","title":"Check the status of TNSet/CNSet/LogSet","text":"<p>The main components of the current MatrixOne cluster are TN, CN, Log Service, and corresponding custom resource types TNSet, CNSet, and LogSet.These objects are generated by the MatrixOneCluster controller.</p> <p>You can use the following command to check the status of each component; take TN as an example:</p> <pre><code>SET_TYPE=\"tnset\"\nNS=\"mo-hn\"\nkubectl get ${SET_TYPE} -n${NS}\n</code></pre> <p>Here is an example of a diagram for codes:</p> <p></p>"},{"location":"MatrixOne/Deploy/MatrixOne-start-stop/#check-pod-status","title":"Check Pod status","text":"<p>You can directly check the native k8s objects generated in the MO cluster to confirm the cluster's health.Under normal circumstances, you can confirm the status of the pod:</p> <pre><code>NS=\"mo-hn\"\nkubectl get pod -n${NS}\n</code></pre> <p>Here is an example of a diagram for codes:</p> <p></p> <p>Generally speaking, the running state is the normal state. However, there are a few exceptions, such as the status is running, but the MO cluster is abnormal, such as the inability to connect to the MO cluster through the MySQL Client. At this time, you can further check whether the Pod's log has abnormal information output:</p> <pre><code>NS=\"mo-hn\"\nPOD_NAME=\"[The name of the pod returned above]\" # For example, mo-tp-cn-3\nkubectl logs ${POD_NAME} -n${NS}\n</code></pre> <p>If the status is non-running, such as Pending, you can confirm the cause of the exception by looking at the event in the Pod status. For example, because the cluster resources cannot meet the application of mo-tp-cn-3, this pod cannot be scheduled and is pending. In this example, it can be solved by expanding the node's resources.</p> <pre><code>kubectl describe pod ${POD_NAME} -n${NS}\n</code></pre> <p>Here is an example of a diagram for codes:</p> <p></p>"},{"location":"MatrixOne/Deploy/deploy-MatrixOne-cluster/","title":"MatrixOne Distributed Cluster Deployment","text":"<p>This document will mainly describe how to deploy MatrixOne distributed database, based on a private Kubernetes cluster that separates computing and storage resources in a cloud-native manner, starting from scratch.</p>"},{"location":"MatrixOne/Deploy/deploy-MatrixOne-cluster/#main-steps","title":"Main Steps","text":"<ol> <li>Deploy Kubernetes cluster</li> <li>Deploy object storage MinIO</li> <li>Create and connect MatrixOne cluster</li> </ol>"},{"location":"MatrixOne/Deploy/deploy-MatrixOne-cluster/#key-concepts","title":"Key Concepts","text":"<p>As this document involves many Kubernetes-related terms, to help everyone understand the deployment process, we will provide brief explanations of important terms related to Kubernetes. If you need to know more about Kubernetes-related content, see Kubernetes Documentation</p> <ul> <li>Pod</li> </ul> <p>Pod is the smallest resource management component in Kubernetes and the smallest resource object for running containerized applications. A Pod represents a process running in the cluster. In simple terms, we can consider a group of applications that provide specific functions as a pod containing one or more container objects that work together to provide services to the outside world.</p> <ul> <li>Storage Class</li> </ul> <p>Storage Class, abbreviated as SC, marks the characteristics and performance of storage resources. According to the description of SC, we can intuitively understand the aspects of various storage resources and then apply storage resources according to the application's requirements. Administrators can define storage resources as a specific category, just as storage devices describe their configuration profiles.</p> <ul> <li>CSI</li> </ul> <p>Kubernetes provides the CSI interface (Container Storage Interface, Container Storage Interface). Based on this set of CSI interfaces, custom CSI plug-ins can be developed to support specific storage and achieve the purpose of decoupling.</p> <ul> <li>PersistentVolume</li> </ul> <p>PersistentVolume, abbreviated as PV, mainly includes setting key information such as storage capacity, access mode, storage type, recycling strategy, and backend storage type as a storage resource.</p> <ul> <li>PersistentVolumeClaim</li> </ul> <p>PersistentVolumeClaim, or PVC, is used as a user's request for storage resources, mainly including the setting of information such as storage space request, access mode, PV selection conditions, and storage category.</p> <ul> <li>Service</li> </ul> <p>Also called SVC, it matches a group of Pods to external access services through label selection. Each svc can be understood as a microservice.</p> <ul> <li>Operator</li> </ul> <p>Kubernetes Operator is a way to package, deploy and manage Kubernetes applications. We use the Kubernetes API (Application Programming Interface) and the Kubectl tool to deploy and manage Kubernetes applications on Kubernetes.</p>"},{"location":"MatrixOne/Deploy/deploy-MatrixOne-cluster/#deployment-architecture","title":"Deployment Architecture","text":""},{"location":"MatrixOne/Deploy/deploy-MatrixOne-cluster/#dependent-components","title":"Dependent components","text":"<p>MatrixOne distributed system depends on the following components:</p> <ul> <li> <p>Kubernetes: As a resource management platform for the entire MatrixOne cluster, components such as Logservice, CN, and TN all run in Pods managed by Kubernetes. In the event of a failure, Kubernetes will cull the failed Pod and start a new one to replace it.</p> </li> <li> <p>Minio: Provides object storage services for the entire MatrixOne cluster, and all MatrixOne data is stored in the object storage provided by Minio.</p> </li> </ul> <p>Additionally, for container management and orchestration on Kubernetes, we need the following plugins:</p> <ul> <li> <p>Helm: Helm is a package management tool for managing Kubernetes applications, similar to APT for Ubuntu and YUM for CentOS. It is used to manage pre-configured installation package resources called Charts.</p> </li> <li> <p>local-path-provisioner: As a plug-in that implements the CSI (Container Storage Interface) interface in Kubernetes, local-path-provisioner is responsible for creating persistent volumes (PVs) for Pods and Minios of MatrixOne components to achieve data persistence storage.</p> </li> </ul>"},{"location":"MatrixOne/Deploy/deploy-MatrixOne-cluster/#overall-structure","title":"Overall structure","text":"<p>The overall deployment architecture is shown in the following figure:</p> <p></p> <p>The overall architecture consists of the following components:</p> <ul> <li> <p>The bottom layer is three server nodes: the first host1 is the springboard machine for installing Kubernetes, the second is the master node (master) of Kubernetes, and the third is Kubernetes' working node (node).</p> </li> <li> <p>The installed Kubernetes and Docker environment is the upper layer, which constitutes the cloud-native platform layer.</p> </li> <li> <p>A Kubernetes plugin layer for management based on Helm, including the local-path-storage plugin implementing the CSI interface, Minio, and the MatrixOne Operator.</p> </li> <li> <p>The topmost layer is several Pods and Services generated by these component configurations.</p> </li> </ul>"},{"location":"MatrixOne/Deploy/deploy-MatrixOne-cluster/#pod-and-storage-architecture-of-matrixone","title":"Pod and storage architecture of MatrixOne","text":"<p>MatrixOne creates a series of Kubernetes objects according to the rules of the Operator, and these objects are classified according to components and classified into resource groups, namely CNSet, TNSet, and LogSet.</p> <ul> <li> <p>Service: The services in each resource group must be provided externally through the Service. Service hosts the external connection function to ensure the service can still be provided when the Pod crashes or is replaced. External applications connect through the Service's exposed ports, and the Service forwards connections to the corresponding Pods through internal forwarding rules.</p> </li> <li> <p>Pod: A containerized instance of MatrixOne components in which MatrixOne's core kernel code runs.</p> </li> <li> <p>PVC: Each Pod declares the storage resources it needs through PVC (Persistent Volume Claim). In our architecture, CN and TN must apply for a storage resource as a cache, and LogService requires corresponding S3 resources. These requirements are declared through PVCs.</p> </li> <li> <p>PV: PV (Persistent Volume) is an abstract representation of storage media, which can be regarded as a storage unit. After applying for a PVC, create a PV through software that implements the CSI interface and binds it to the PVC used for resources.</p> </li> </ul> <p></p>"},{"location":"MatrixOne/Deploy/deploy-MatrixOne-cluster/#1-deploying-a-kubernetes-cluster","title":"1. Deploying a Kubernetes Cluster","text":"<p>As MatrixOne's distributed deployment relies on a Kubernetes cluster, we need to have one in place. This article will guide you through setting up a Kubernetes cluster using Kuboard-Spray.</p>"},{"location":"MatrixOne/Deploy/deploy-MatrixOne-cluster/#preparing-the-cluster-environment","title":"Preparing the Cluster Environment","text":"<p>To prepare the cluster environment, you need to do the following:</p> <ul> <li> <p>Have three virtual machines</p> </li> <li> <p>Use CentOS 7.9 as the operating system (by default, it does allow root account remote login). Two machines will be used for deploying Kubernetes and other dependencies for MatrixOne, while the third will act as a jump host to set up the Kubernetes cluster.</p> </li> <li> <p>External network access conditions. The three servers all need to pull the external network image.</p> </li> </ul> <p>The specific distribution of the machines is shown below:</p> Host Intranet IP Extranet IP mem CPU Disk Role kuboardspray 10.206.0.6 1.13.2.100 2G 2C 50G \u8df3\u677f\u673a master0 10.206.134.8 118.195.255.252 8G 2C 50G master etcd node0 10.206.134.14 1.13.13.199 8G 2C 50G worker"},{"location":"MatrixOne/Deploy/deploy-MatrixOne-cluster/#deploying-kuboard-spray-on-a-jump-server","title":"Deploying Kuboard Spray on a Jump Server","text":"<p>Kuboard Spray is a tool used for visualizing the deployment of Kubernetes clusters. It uses Docker to quickly launch a web application that can visualize the deployment of a Kubernetes cluster. Once the Kubernetes cluster environment has been deployed, the Docker application can be stopped.</p>"},{"location":"MatrixOne/Deploy/deploy-MatrixOne-cluster/#preparing-the-jump-server-environment","title":"Preparing the Jump Server Environment","text":"<ol> <li> <p>Install Docker: A Docker environment is required. Install and start Docker on the springboard machine with the following commands:</p> <pre><code>curl -sSL https://get.docker.io/ | sh\n#If you are in a domestic network restricted environment, you can change the following domestic mirror address\ncurl -fsSL https://get.docker.com | bash -s docker --mirror Aliyun\n</code></pre> </li> <li> <p>Start Docker:</p> <pre><code>[root@VM-0-6-centos ~]# systemctl start docker\n[root@VM-0-6-centos ~]# systemctl status docker\n\u25cf docker.service - Docker Application Container Engine\n   Loaded: loaded (/usr/lib/systemd/system/docker.service; disabled; vendor preset: disabled)\n   Active: active (running) since Sun 2023-05-07 11:48:06 CST; 15s ago\n     Docs: https://docs.docker.com\n Main PID: 5845 (dockerd)\n    Tasks: 8\n   Memory: 27.8M\n   CGroup: /system.slice/docker.service\n           \u2514\u25005845 /usr/bin/dockerd -H fd:// --containerd=/run/containerd/containerd.sock\n\nMay 07 11:48:06 VM-0-6-centos systemd[1]: Starting Docker Application Container Engine...\nMay 07 11:48:06 VM-0-6-centos dockerd[5845]: time=\"2023-05-07T11:48:06.391166236+08:00\" level=info msg=\"Starting up\"\nMay 07 11:48:06 VM-0-6-centos dockerd[5845]: time=\"2023-05-07T11:48:06.421736631+08:00\" level=info msg=\"Loading containers: start.\"\nMay 07 11:48:06 VM-0-6-centos dockerd[5845]: time=\"2023-05-07T11:48:06.531022702+08:00\" level=info msg=\"Loading containers: done.\"\nMay 07 11:48:06 VM-0-6-centos dockerd[5845]: time=\"2023-05-07T11:48:06.544715135+08:00\" level=info msg=\"Docker daemon\" commit=94d3ad6 graphdriver= overlay2 version=23.0.5\nMay 07 11:48:06 VM-0-6-centos dockerd[5845]: time=\"2023-05-07T11:48:06.544798391+08:00\" level=info msg=\"Daemon has completed initialization\"\nMay 07 11:48:06 VM-0-6-centos systemd[1]: Started Docker Application Container Engine.\nMay 07 11:48:06 VM-0-6-centos dockerd[5845]: time=\"2023-05-07T11:48:06.569274215+08:00\" level=info msg=\"API listen on /run/docker. sock\"\n</code></pre> </li> </ol> <p>Once the environment is prepared, Kuboard Spray can be deployed.</p>"},{"location":"MatrixOne/Deploy/deploy-MatrixOne-cluster/#deploying-kuboard-spray","title":"Deploying Kuboard Spray","text":"<p>Execute the following command to install Kuboard Spray:</p> <pre><code>docker run -d \\\n  --privileged \\\n  --restart=unless-stopped \\\n  --name=kuboard-spray \\\n  -p 80:80/tcp \\\n  -v /var/run/docker.sock:/var/run/docker.sock \\\n  -v ~/kuboard-spray-data:/data \\\n  eipwork/kuboard-spray:latest-amd64\n</code></pre> <p>If the image pull fails due to network issues, use the backup address below:</p> <pre><code>docker run -d \\\n  --privileged \\\n  --restart=unless-stopped \\\n  --name=kuboard-spray \\\n  -p 80:80/tcp \\\n  -v /var/run/docker.sock:/var/run/docker.sock \\\n  -v ~/kuboard-spray-data:/data \\\n  swr.cn-east-2.myhuaweicloud.com/kuboard/kuboard-spray:latest-amd64\n</code></pre> <p>After executing the command, open the Kuboard Spray web interface by entering <code>http://1.13.2.100</code> (jump server IP address) in a web browser, then log in to the Kuboard Spray interface using the username <code>admin</code> and the default password <code>Kuboard123</code>, as shown below:</p> <p></p> <p>After logging in, the Kubernetes cluster deployment can be started.</p>"},{"location":"MatrixOne/Deploy/deploy-MatrixOne-cluster/#visual-deployment-of-kubernetes-cluster","title":"Visual Deployment of Kubernetes Cluster","text":"<p>After logging into the Kuboard-Spray interface, you can begin visually deploying a Kubernetes cluster.</p>"},{"location":"MatrixOne/Deploy/deploy-MatrixOne-cluster/#importing-kubernetes-related-resource-packages","title":"Importing Kubernetes-related Resource Packages","text":"<p>The installation interface will download the Kubernetes cluster's corresponding resource package via online downloading to achieve offline installation of the Kubernetes cluster.</p> <ol> <li> <p>Click Resource Package Management and select the appropriate version of the Kubernetes resource package to download:</p> <p>Download <code>spray-v2.18.0b-2_k8s-v1.23.17_v1.24-amd64</code> \u7248\u672c</p> <p></p> </li> <li> <p>Click Import &gt; Load Resource Package, select the appropriate download source, and wait for the resource package to finish downloading.</p> <p>Note</p> <p>We recommend choosing Docker as the container engine for your K8s cluster. Once Docker is selected as the container engine for K8s, Kuboard-Spray will automatically utilize Docker to run various components of the K8s cluster, including containers on both Master and Worker nodes.</p> <p></p> </li> <li> <p>This will <code>pull</code> the related image dependencies:</p> <p></p> </li> <li> <p>After the image resource package is successfully pulled, return to the Kuboard-Spray web interface. You can see that the corresponding version of the resource package has been imported.</p> <p></p> </li> </ol>"},{"location":"MatrixOne/Deploy/deploy-MatrixOne-cluster/#installing-a-kubernetes-cluster","title":"Installing a Kubernetes Cluster","text":"<p>This chapter will guide you through the installation of a Kubernetes cluster.</p> <ol> <li> <p>Select Cluster Management and choose Add Cluster Installation Plan:</p> <p></p> </li> <li> <p>In the pop-up dialog box, define the name of the cluster, select the version of the resource package that was just imported, and click OK, as shown in the following figure:</p> <p></p> </li> </ol>"},{"location":"MatrixOne/Deploy/deploy-MatrixOne-cluster/#cluster-planning","title":"Cluster Planning","text":"<p>Based on the predefined roles, the Kubernetes cluster is deployed with a pattern of 1 master + 1 worker + 1 etcd.</p> <p>After defining the cluster name and selecting the resource package version, click OK, and then proceed to the cluster planning stage.</p> <ol> <li> <p>Select the corresponding node roles and names:</p> <p></p> <ul> <li>Master node: Select the etcd and control node and name it master0. (If you want the master node to participate in the work, you can select the worker node simultaneously. This method can improve resource utilization but will reduce the high availability of Kubernetes.)</li> <li>Worker node: Select only the worker node and name it node0.</li> </ul> </li> <li> <p>After filling in the roles and node names for each node, please fill in the corresponding connection information on the right, as shown in the following figure:</p> <p></p> <p></p> </li> <li> <p>After filling in all the roles, click Save. You can now prepare to install the Kubernetes cluster.</p> </li> </ol>"},{"location":"MatrixOne/Deploy/deploy-MatrixOne-cluster/#installing-kubernetes-cluster","title":"Installing Kubernetes Cluster","text":"<p>After completing all roles and saving in the previous step, click Execute to start installing the Kubernetes cluster.</p> <ol> <li> <p>Click OK as shown in the figure below to start installing the Kubernetes cluster:</p> <p></p> </li> <li> <p>When installing the Kubernetes cluster, the <code>ansible</code> script will be executed on the corresponding node to install the Kubernetes cluster. The overall installation time will vary depending on the machine configuration and network. Generally, it takes 5 to 10 minutes.</p> <p>Note: If an error occurs, you can check the log to confirm whether the version of Kuboard-Spray is mismatched. If the version is mismatched, please replace it with a suitable version.</p> </li> <li> <p>After the installation is complete, execute <code>kubectl get node</code> on the master node of the Kubernetes cluster:</p> <pre><code>[root@master0 ~]# kubectl get node\nNAME      STATUS   ROLES                  AGE   VERSION\nmaster0   Ready    control-plane,master   52m   v1.23.17\nnode0     Ready    &lt;none&gt;                 52m   v1.23.17\n</code></pre> </li> <li> <p>The command result shown in the figure above indicates that the Kubernetes cluster has been successfully installed.</p> </li> <li> <p>Adjust the DNS routing table on each node in Kubernetes. Please execute the following command on each machine to find the nameserver containing <code>169.254.25.10</code> and delete the record. (This record may affect the communication efficiency between Pods, if this record does not exist, there is no need to change it)</p> <pre><code>vim /etc/resolve.conf\n</code></pre> <p></p> </li> </ol>"},{"location":"MatrixOne/Deploy/deploy-MatrixOne-cluster/#2-deploying-helm","title":"2. Deploying Helm","text":"<p>Helm is a package management tool for managing Kubernetes applications. Similar to APT for Ubuntu and YUM for CentOS, Helm provides a convenient way to install, upgrade, and manage Kubernetes applications. It simplifies the application deployment and management process using charts (preconfigured installation package resources).</p> <p>Before installing Minio, we need to install Helm first because the installation process of Minio depends on Helm. Here are the steps to install Helm:</p> <p>Note: All operations in this section are performed on the master0 node.</p> <ol> <li> <p>Download the Helm installation package:</p> <pre><code>wget https://get.helm.sh/helm-v3.10.2-linux-amd64.tar.gz\n#You can use the following domestic mirror address if the trained network is limited.\nwget https://mirrors.huaweicloud.com/helm/v3.10.2/helm-v3.10.2-linux-amd64.tar.gz\n</code></pre> </li> <li> <p>Extract and install:</p> <pre><code>tar -zxf helm-v3.10.2-linux-amd64.tar.gz\nmv linux-amd64/helm /usr/local/bin/helm\n</code></pre> </li> <li> <p>Verify the version to check if it is installed:</p> <pre><code>[root@k8s01 home]# helm version\nversion.BuildInfo{Version:\"v3.10.2\", GitCommit:\"50f003e5ee8704ec937a756c646870227d7c8b58\", GitTreeState:\"clean\", GoVersion:\"go1.18.8\"}\n</code></pre> <p>The version information shown above indicates that the installation is complete.</p> </li> </ol>"},{"location":"MatrixOne/Deploy/deploy-MatrixOne-cluster/#3-csi-deployment","title":"3. CSI Deployment","text":"<p>CSI is a storage plugin for Kubernetes that provides storage services for MinIO and MatrixOne. This section will guide you through the use of the <code>local-path-provisioner</code> plugin.</p> <p>Note: All the commands in this section should be executed on the master0 node.</p> <ol> <li> <p>Install CSI using the following command line:</p> <pre><code>wget https://github.com/rancher/local-path-provisioner/archive/refs/tags/v0.0.23.zip\nunzip v0.0.23.zip\ncd local-path-provisioner-0.0.23/deploy/chart/local-path-provisioner\nhelm install --set nodePathMap[0].paths[0]=\"/opt/local-path-provisioner\",nodePathMap[0].node=DEFAULT_PATH_FOR_NON_LISTED_NODES  --create-namespace --namespace local-path-storage local-path-storage ./\n</code></pre> </li> <li> <p>After a successful installation, the command line should display as follows:</p> <pre><code>root@master0:~# kubectl get pod -n local-path-storage\nNAME                                                        READY   STATUS    RESTARTS   AGE\nlocal-path-storage-local-path-provisioner-57bf67f7c-lcb88   1/1     Running   0          89s\n</code></pre> <p>Note: After installation, this storageClass will provide storage services in the \"/opt/local-path-provisioner\" directory on the worker node. You can modify it to another path.</p> </li> <li> <p>Set the default <code>storageClass</code>:</p> <pre><code>kubectl patch storageclass local-path -p '{\"metadata\": {\"annotations\":{\"storageclass.kubernetes.io/is-default-class\":\"true\"}}}'\n</code></pre> </li> <li> <p>After setting the default, the command line should display as follows:</p> <pre><code>root@master0:~# kubectl get storageclass\nNAME                   PROVISIONER                                               RECLAIMPOLICY   VOLUMEBINDINGMODE      ALLOWVOLUMEEXPANSION   AGE\nlocal-path (default)   cluster.local/local-path-storage-local-path-provisioner   Delete          WaitForFirstConsumer   true                   115s\n</code></pre> </li> </ol>"},{"location":"MatrixOne/Deploy/deploy-MatrixOne-cluster/#4-minio-deployment","title":"4. MinIO Deployment","text":"<p>MinIO is used to provide object storage for MatrixOne. This section will guide you through the deployment of a single-node MinIO.</p> <p>Note: All the commands in this section should be executed on the master0 node.</p>"},{"location":"MatrixOne/Deploy/deploy-MatrixOne-cluster/#installation-and-startup","title":"Installation and Startup","text":"<ol> <li> <p>The command line for installing and starting MinIO is as follows:</p> <pre><code>helm repo add minio https://charts.min.io/\nmkdir minio_ins &amp;&amp; cd minio_ins\nhelm fetch minio/minio\nls -lth\ntar -zxvf minio-5.0.9.tgz # This version may change; the actual download shall prevail\ncd ./minio/\n\nkubectl create ns mostorage\n\nhelm install minio \\\n--namespace mostorage \\\n--set resources.requests.memory=512Mi \\\n--set replicas=1 \\\n--set persistence.size=10G \\\n--set mode=standalone \\\n--set rootUser=rootuser,rootPassword=rootpass123 \\\n--set consoleService.type=NodePort \\\n--set image.repository=minio/minio \\\n--set image.tag=latest \\\n--set mcImage.repository=minio/mc \\\n--set mcImage.tag=latest \\\n-f values.yaml minio/minio\n</code></pre> <p>Note</p> <ul> <li> <p><code>--set resources.requests.memory=512Mi</code> sets the minimum memory consumption of MinIO</p> <ul> <li><code>--set persistence.size=1G</code> sets the storage size of MinIO to 1G</li> <li><code>--set rootUser=rootuser,rootPassword=rootpass123</code> the parameters set for rootUser and rootPassword are required for creating the secrets file for the Kubernetes cluster later, so use something that you can remember.</li> </ul> </li> <li> <p>If it is repeatedly executed due to network or other reasons, it needs to be uninstalled first:</p> <pre><code>helm uninstall minio --namespace most storage\n</code></pre> </li> </ul> </li> <li> <p>After a successful installation and start, the command line should display as follows:</p> <pre><code>NAME: minio\nLAST DEPLOYED: Sun May 7 14:17:18 2023\nNAMESPACE: most storage\nSTATUS: deployed\nREVISION: 1\nTEST SUITE: None\nNOTES:\nMinIO can be accessed via port 9000 on the following DNS name from within your cluster:\nminio.mostorage.svc.cluster.local\n\nTo access MinIO from localhost, run the following commands:\n\n  1. export POD_NAME=$(kubectl get pods --namespace moststorage -l \"release=minio\" -o jsonpath=\"{.items[0].metadata.name}\")\n\n  2. kubectl port-forward $POD_NAME 9000 --namespace most storage\n\nRead more about port forwarding here: http://kubernetes.io/docs/user-guide/kubectl/kubectl_port-forward/\n\nYou can now access MinIO server on http://localhost:9000. Follow the below steps to connect to MinIO server with mc client:\n\n  1. Download the MinIO mc client - https://min.io/docs/minio/linux/reference/minio-mc.html#quickstart\n\n  2. export MC_HOST_minio-local=http://$(kubectl get secret --namespace most storage minio -o jsonpath=\"{.data.rootUser}\" | base64 --decode):$(kubectl get secret --namespace most storage minio -o jsonpath=\"{.data.rootPassword}\" | base64 --decode)@localhost:9000\n\n  3. mc ls minio-local\n</code></pre> <p>So far, Minio has been successfully installed. During the subsequent installation of MatrixOne, MatrixOne will communicate with Minio directly through the Kubernetes Service (SVC) without additional configuration.</p> <p>However, if you want to connect to Minio from <code>localhost</code>, you can execute the following command line to set the <code>POD_NAME</code> variable and connect <code>mostorage</code> to port 9000:</p> <pre><code>export POD_NAME=$(kubectl get pods --namespace mostorage -l \"release=minio\" -o jsonpath=\"{.items[0].metadata.name}\")\nnohup kubectl port-forward --address 0.0.0.0 $POD_NAME -n mostorage 9000:9000 &amp;\n</code></pre> </li> <li> <p>After startup, use http://118.195.255.252:32001/ to log in to the MinIO page and create object storage information. As shown in the figure below, the account password is the rootUser and rootPassword set by <code>--set rootUser=rootuser,rootPassword=rootpass123</code> in the above steps:</p> <p></p> </li> <li> <p>After logging in, you need to create object storage related information:</p> <p>Fill in the Bucket Name with minio-mo under Bucket &gt; Create Bucket. After filling it in, click the Create Bucket button at the bottom right.</p> <p></p> </li> </ol>"},{"location":"MatrixOne/Deploy/deploy-MatrixOne-cluster/#5-deploying-a-matrixone-cluster","title":"5. Deploying a MatrixOne Cluster","text":"<p>This section will guide you through the process of deploying a MatrixOne cluster.</p> <p>Note: All steps in this section are performed on the master0 node.</p>"},{"location":"MatrixOne/Deploy/deploy-MatrixOne-cluster/#installing-the-matrixone-operator","title":"Installing the MatrixOne-Operator","text":"<p>MatrixOne Operator is a standalone software tool for deploying and managing MatrixOne clusters on Kubernetes. You can install the latest Operator Release installation package from the project's Release List.</p> <p>Follow the steps below to install MatrixOne Operator on master0. We will create a separate namespace, <code>matrixone-operator</code> for the Operator.</p> <ol> <li> <p>Download the latest MatrixOne Operator installation package:</p> <pre><code>wget https://github.com/matrixorigin/matrixone-operator/releases/download/chart-0.8.0-alpha.7/matrixone-operator-0.8.0-alpha.7.tgz\n</code></pre> </li> <li> <p>Unzip the installation package:</p> <pre><code>tar -xvf matrixone-operator-0.8.0-alpha.7.tgz\ncd /root/matrixone-operator/\n</code></pre> </li> <li> <p>Define the namespace variable:</p> <pre><code>NS=\"matrixone-operator\"\n</code></pre> </li> <li> <p>Use Helm to install MatrixOne Operator and create a namespace:</p> <pre><code>helm install --create-namespace --namespace ${NS} matrixone-operator ./ --dependency-update\n</code></pre> </li> <li> <p>After the installation is successful, use the following command to confirm the installation status:</p> <pre><code>kubectl get pod -n matrixone-operator\n</code></pre> <p>Ensure all pods have a running status in the above command output.</p> <pre><code>[root@master0 matrixone-operator]# kubectl get pod -n matrixone-operator\nNAME                                 READY   STATUS    RESTARTS   AGE\nmatrixone-operator-f8496ff5c-fp6zm   1/1     Running   0          3m26s\n</code></pre> </li> </ol> <p>As shown in the above line of code, the status of the corresponding Pods is normal.</p>"},{"location":"MatrixOne/Deploy/deploy-MatrixOne-cluster/#create-a-matrixone-cluster","title":"Create a MatrixOne cluster","text":"<ol> <li> <p>First, create the namespace of MatrixOne:</p> <pre><code>NS=\"mo-hn\"\nkubectl create ns ${NS}\n</code></pre> </li> <li> <p>Customize the <code>yaml</code> file of the MatrixOne cluster, and write the following <code>mo.yaml</code> file:</p> <pre><code>apiVersion: core.matrixorigin.io/v1alpha1\nkind: MatrixOneCluster\nmetadata:\n  name: mo\n  namespace: mo-hn\nspec:\n  # 1. Configuration for tn\n  Tn:\n    cacheVolume: # Disk cache for tn\n      size: 5Gi # Modify according to actual disk size and requirements\n      storageClassName: local-path # If not specified, the default storage class of the system will be used\n    resources:\n      requests:\n        cpu: 100m #1000m=1c\n        memory: 500Mi # 1024Mi\n      limits: # Note that limits should not be lower than requests and should not exceed the capacity of a single node. Generally allocate based on actual circumstances, usually set limits and requests to be consistent.\n        cpu: 200m\n        memory: 1Gi\n    config: |  # Configuration for tn\n      [dn.Txn.Storage]\n      backend = \"TAE\"\n      log-backend = \"logservice\"\n      [dn.Ckp]\n      flush-interval = \"60s\"\n      min-count = 100\n      scan-interval = \"5s\"\n      incremental-interval = \"60s\"\n      global-interval = \"100000s\"\n      [log]\n      level = \"error\"\n      format = \"json\"\n      max-size = 512\n    replicas: 1 # The number of copies of TN, which cannot be modified. The current version only supports a setting of 1.\n  # 2. Configuration for logservice\n  logService:\n    replicas: 3 # Number of logservice replicas\n    resources:\n      requests:\n        cpu: 100m #1000m=1c\n        memory: 500Mi # 1024Mi\n      limits: # Note that limits should not be lower than requests and should not exceed the capacity of a single node. Generally allocate based on actual circumstances, usually set limits and requests to be consistent.\n        cpu: 200m\n        memory: 1Gi\n    sharedStorage: # Configuration for logservice to connect to s3 storage\n      s3:\n        type: minio # Type of s3 storage to connect to is minio\n        path: minio-mo # Path to the minio bucket used by mo, previously created through the console or mc command\n        endpoint: http://minio.mostorage:9000 # The svc address and port of the minio service\n        secretRef: # Configuration for accessing minio, the secret name is minio\n          name: minio\n    pvcRetentionPolicy: Retain # Configuration for the lifecycle policy of the pvc bucket after the cluster is destroyed, Retain means to keep, Delete means to delete\n    volume:\n      size: 1Gi # Configuration for the size of S3 object storage, modify according to actual disk size and requirements\n    config: | # Configuration for logservice\n      [log]\n      level = \"error\"\n      format = \"json\"\n      max-size = 512\n  # 3. Configuration for cn\n  tp:\n    cacheVolume: # Disk cache for cn\n      size: 5Gi # Modify according to actual disk size and requirements\n      storageClassName: local-path # If not specified, the default storage class of the system will be used\n    resources:\n      requests:\n        cpu: 100m #1000m=1c\n        memory: 500Mi # 1024Mi\n      limits: # Note that limits should not be lower than requests and should not exceed the capacity of a single node. Generally allocate based on actual circumstances, usually set limits and requests to be consistent.\n        cpu: 200m\n        memory: 2Gi\n    serviceType: NodePort # cn needs to provide access entry to the outside, so its svc is set to NodePort\n    nodePort: 31429 # NodePort port setting\n    config: | # Configuration for cn\n      [cn.Engine]\n      type = \"distributed-tae\"\n      [log]\n      level = \"debug\"\n      format = \"json\"\n      max-size = 512\n    replicas: 1\n  version: nightly-54b5e8c # The version of the MO image. You can check it on Docker Hub. Generally, cn, TN, and logservice are packaged in the same image, so the same field can be used to specify it. It also supports specifying separately in each section, but unless there are special circumstances, use a unified image version.\n  # https://hub.docker.com/r/matrixorigin/matrixone/tags\n  imageRepository: matrixorigin/matrixone # Image repository address. If it is pulled locally and the tag has been modified, you can adjust this configuration item.\n  imagePullPolicy: IfNotPresent # Image pull policy, consistent with the configurable values of k8s official.\n</code></pre> </li> <li> <p>Execute the following command to create a Secret service for accessing MinIO in the namespace <code>mo-hn</code>:</p> <pre><code>kubectl -n mo-hn create secret generic minio --from-literal=AWS_ACCESS_KEY_ID=rootuser --from-literal=AWS_SECRET_ACCESS_KEY=rootpass123\n</code></pre> <p>The username and password use the <code>rootUser</code> and <code>rootPassword</code> set when creating the MinIO cluster.</p> </li> <li> <p>Execute the following command to deploy the MatrixOne cluster:</p> <pre><code>kubectl apply -f mo.yaml\n</code></pre> </li> <li> <p>Please wait patiently for about 10 minutes. If the Pod restarts, please continue to wait. Until you see the following information, the deployment is successful:</p> <pre><code>[root@master0 mo]# kubectl get pods -n mo-hn      \nNAME                                 READY   STATUS    RESTARTS      AGE\nmo-tn-0                              1/1     Running   0             74s\nmo-log-0                             1/1     Running   1 (25s ago)   2m2s\nmo-log-1                             1/1     Running   1 (24s ago)   2m2s\nmo-log-2                             1/1     Running   1 (22s ago)   2m2s\nmo-tp-cn-0                           1/1     Running   0             50s\n</code></pre> </li> </ol>"},{"location":"MatrixOne/Deploy/deploy-MatrixOne-cluster/#6-connect-to-matrixone-cluster","title":"6. Connect to MatrixOne cluster","text":"<p>To connect to the MatrixOne cluster, you need to map the port of the corresponding service to the MatrixOne node. Here are the instructions for connecting to a MatrixOne cluster using <code>kubectl port-forward</code>:</p> <ul> <li>Only allow local access:</li> </ul> <pre><code>nohup kubectl port-forward -nmo-hn svc/mo-tp-cn 6001:6001 &amp;\n</code></pre> <ul> <li>Specify a specific machine or all machines to access:</li> </ul> <pre><code>nohup kubectl port-forward -nmo-hn --address 0.0.0.0 svc/mo-tp-cn 6001:6001 &amp;\n</code></pre> <p>After specifying Allow local access or Specify a specific machine or all machines to access, you can use the MySQL client to connect to MatrixOne:</p> <pre><code># Connect to the MySQL server using the 'mysql' command line tool\n# Use 'kubectl get svc/mo-tp-cn -n mo-hn -o jsonpath='{.spec.clusterIP}' ' to get the cluster IP address of the service in the Kubernetes cluster\n# The '-h' parameter specifies the hostname or IP address of the MySQL service\n# The '-P' parameter specifies the port number of the MySQL service, here is 6001\n# '-uroot' means log in with root user\n# '-p111' means the initial password is 111\nmysql -h $(kubectl get svc/mo-tp-cn -n mo-hn -o jsonpath='{.spec.clusterIP}') -P 6001 -uroot -p111\nmysql: [Warning] Using a password on the command line interface can be insecure.\nWelcome to the MySQL monitor.  Commands end with ; or \\g.\nYour MySQL connection id is 163\nServer version: 8.0.30-MatrixOne-v1.2.3 MatrixOne\n\nCopyright (c) 2000, 2023, Oracle and/or its affiliates.\n\nOracle is a registered trademark of Oracle Corporation and/or its\naffiliates. Other names may be trademarks of their respective\nowners.\n\nType 'help;' or '\\h' for help. Type '\\c' to clear the current input statement.\n\nmysql&gt;\n</code></pre> <p>After explicit <code>mysql&gt;</code>, the distributed MatrixOne cluster is established and connected.</p> <p>Info</p> <p>The login account in the above code snippet is the initial account; please change the initial password after logging in to MatrixOne; see Password Management.</p>"},{"location":"MatrixOne/Deploy/deploy-matrixone-single-with-s3/","title":"Deploy a stand-alone MatrixOne based on S3","text":"<p>This article provides an example of how to deploy a stand-alone MatrixOne based on S3. Different from the general stand-alone deployment method, this method uses S3 as the storage medium of MatrixOne, instead of directly using the local disk of the host machine.</p>"},{"location":"MatrixOne/Deploy/deploy-matrixone-single-with-s3/#applicable-scenarios","title":"Applicable scenarios","text":"<p>This deployment pattern is ideal for testing timing scenarios. Because the time series data has the characteristics of high speed and large amount of data, the use of S3 with nearly unlimited capacity as a storage medium can well meet these requirements, thus avoiding the limitation of insufficient local disk space in a single computer.</p> <p>Note</p> <p>This deployment model is recommended only for development and testing scenarios, but not for production environments. For production environments, it is recommended to use a distributed deployment model based on k8s+s3.</p>"},{"location":"MatrixOne/Deploy/deploy-matrixone-single-with-s3/#precondition","title":"Precondition","text":"<p>Prepare a host machine and configure S3 storage media, including but not limited to: authentication key pair, access endpoint, area (privatization can be ignored), bucket name path, etc. In addition, it is recommended to place the host of MatrixOne stand-alone deployment and S3 object storage in the same intranet to ensure that the network will not become a performance bottleneck.</p>"},{"location":"MatrixOne/Deploy/deploy-matrixone-single-with-s3/#operation-steps","title":"Operation steps","text":""},{"location":"MatrixOne/Deploy/deploy-matrixone-single-with-s3/#scenario-1-matrixone-with-minio","title":"Scenario 1: MatrixOne with Minio","text":""},{"location":"MatrixOne/Deploy/deploy-matrixone-single-with-s3/#deploy-a-stand-alone-matrixone","title":"Deploy a stand-alone MatrixOne","text":"<p>For reference Deploy MatrixOne on a stand-alone basis, complete the deployment of the stand-alone version of MatrixOne, and do not start it after deployment.</p>"},{"location":"MatrixOne/Deploy/deploy-matrixone-single-with-s3/#modifying-the-matrixone-configuration-file","title":"Modifying the MatrixOne Configuration File","text":"<p>The host deployment mode (i.e. source code or binary deployment) is taken as an example below. If the container deployment mode is used, the configuration file needs to be mounted in the container. See the specific operation steps Containerized deployment mode section. In the host deployment mode, the default configuration file is generally located in etc/launch/. Generally, the deployment path of Mo and the information of S3 need to be modified.</p> <ul> <li>Back up the default configuration folder</li> </ul> <pre><code>cd /your/mo-path/\ncp -rp etc/launch etc/launch-default\n</code></pre> <ul> <li>CN Configuration (CN. Toml)</li> </ul> <pre><code>###############################\n#    \u4e00,default configuration  #\n###############################\n\nservice-type = \"CN\"\ndata-dir = \"./mo-data\"\n\n[log]\nlevel = \"info\"\n\n[cn]\nuuid = \"dd1dccb4-4d3c-41f8-b482-5251dc7a41bf\"\nport-base = 18000\n\n[malloc]\ncheck-fraction = 65536\nenable-metrics = true\n\n######################################\n#    \u4e8c,Customized Configuration     #\n######################################\n\n# The configuration of fileservic array, name is divided into three parts: LOCAL, S3, ETL, where:\n# 1, LOCAL: temporary file storage (generally with DISK's backend)\n# 2, SHARED (the old configuration item is S3, later changed to SHARED, but still compatible with the S3 write): mo's data storage\n# 3, ETL: observability system-related data storage (generally aligned with mo's data storage)\n\n# 1. Part I: LOCAL\n# 1.1, (optional) configure the local path of the LOCAL section, note that CN, TN, LOG need to configure different directories\n[[fileservice]]\nbackend = \"DISK\"\ndata-dir = \"/your/mo-path/matrixone/data/local/cn\"\nname = \"LOCAL\"\n\n# 2. Part II: S3\n# (mandatory)\n[[fileservice]]\nbackend = \"MINIO\" # Note that when MinIO is configured as MINIO, the rest of S3 is configured as S3\nname = \"S3\"\n\n# 2.1. (Optional) Configure the local cache of the S3 part, including disk cache and memory cache\n[fileservice.cache]\ndisk-capacity = \"20GiB\" # Local Disk Cache Size\ndisk-path = \"/your/mo-path/matrixone/data/disk-cache\" # Local Disk Cache Path\nmemory-capacity = \"2GiB\" #Local memory cache size\n\n# 2.2,(Required) configuring object storage information for storing mo data data in the S3 section, including\n[fileservice.s3]\nbucket = \"mo-on-minio-demo\" # bucket name\nendpoint = \"http://10.0.0.1\" # endpoint\nkey-prefix = \"mo/data\" # Path to the bucket name\nkey-id = \"xxxx\" # key id\nkey-secret = \"xxxx\" #secret key\n\n# 3. Part III: ETL\n# (mandatory)\n[[fileservice]]\nbackend = \"MINIO\" # Note that when MinIO is configured as MINIO, the rest of S3 is configured as S3\nname = \"ETL\"\n\n# 3.1,(Required) Configure the cache in the ETL section, typically configured to 1B, i.e. almost no\n[fileservice.cache]\nmemory-capacity = \"1B\"\n\n# 3.2,((Required) Configure the object store information for storing mo etl data in the ETL section, keeping most of the information the same as in section 2.2, but using a different subdirectory for key-prefix is sufficient\n[fileservice.s3]\nbucket = \"mo-on-minio-demo\" # bucket name\nendpoint = \"http://10.0.0.1\" # endpoint\nkey-prefix = \"mo/etl\" # Path to the bucket name\nkey-id = \"xxxx\" # key id\nkey-secret = \"xxxx\" #secret key\n</code></pre> <ul> <li>TN Configuration (TN. Toml)</li> </ul> <pre><code>######################################\n#    \u4e00,default configuration        #\n######################################\n\nservice-type = \"TN\"\ndata-dir = \"./mo-data\"\n\n[log]\nlevel = \"info\"\n\n[tn]\nuuid = \"dd4dccb4-4d3c-41f8-b482-5251dc7a41bf\"\nport-base = 19000\n\n[malloc]\ncheck-fraction = 65536\nenable-metrics = true\n\n######################################\n#    \u4e8c,Customized Configuration     #\n######################################\n\n# fileservic array configuration, name is divided into three parts: LOCAL, S3, ETL, where:\n# 1, LOCAL: temporary file storage (generally with DISK's backend)\n# 2, SHARED (the old configuration item is S3, later changed to SHARED, but still compatible with S3 writing): mo's data storage\n# 3, ETL: observability system-related data storage (generally aligned with mo's data storage)\n\n# 1. Part I: LOCAL\n# 1.1, (optional) configure the local path of the LOCAL section, note that CN, TN, LOG need to configure different directories\n[[fileservice]]\nbackend = \"DISK\"\ndata-dir = \"/your/mo-path/matrixone/data/local/tn\"\nname = \"LOCAL\"\n\n# 2. Part II: S3\n# (mandatory)\n[[fileservice]]\nbackend = \"MINIO\" # Note that when MinIO is configured as MINIO, the rest of S3 is configured as S3\nname = \"S3\"\n\n# 2.1,(Optional) Configure local caching for the S3 section, including disk caching and memory caching\n[fileservice.cache]\ndisk-capacity = \"20GiB\" # Local Disk Cache Size\ndisk-path = \"/your/mo-path/matrixone/data/disk-cache\" # Local Disk Cache Path\nmemory-capacity = \"2GiB\" #Local memory cache size\n\n# 2.2,(Required) configuring object storage information for storing mo data data in the S3 section, including\n[fileservice.s3]\nbucket = \"mo-on-minio-demo\" # bucket name\nendpoint = \"http://10.0.0.1\" # endpoint\nkey-prefix = \"mo/data\" # Path to the bucket name\nkey-id = \"xxxx\" # key id\nkey-secret = \"xxxx\" #secret key\n\n# 3, Part III: ETL\n# (mandatory)\n[[fileservice]]\nbackend = \"MINIO\" # Note that when MinIO is configured as MINIO, the rest of S3 is configured as S3\nname = \"ETL\"\n\n# 3.1,(Required) Configure the cache in the ETL section, typically configured to 1B, i.e. almost no\n[fileservice.cache]\nmemory-capacity = \"1B\"\n\n# 3.2,(Required) Configure the object store information for storing mo etl data in the ETL section, most of the information remains the same as in section 2.2, except that a separate subdirectory is sufficient for the key-prefix\n[fileservice.s3]\nbucket = \"mo-on-minio-demo\" # bucket name\nendpoint = \"http://10.0.0.1\" # endpoint\nkey-prefix = \"mo/etl\" # Path to the bucket name\nkey-id = \"xxxx\" # key id\nkey-secret = \"xxxx\" #secret key\n</code></pre> <ul> <li>Log Service Configuration (log. Toml)</li> </ul> <pre><code>######################################\n#    \u4e00,default configuration        #\n######################################\n\n# service node type, [DN|CN|LOG]\nservice-type = \"LOG\"\ndata-dir = \"./mo-data\"\n\n[log]\nlevel = \"info\"\n\n[malloc]\ncheck-fraction = 65536\nenable-metrics = true\n\n######################################\n#    \u4e8c,Customized Configuration     #\n######################################\n\n# fileservic array configuration, name is divided into three parts: LOCAL, S3, ETL, where:\n# 1, LOCAL: temporary file storage (generally with DISK's backend)\n# 2, SHARED (the old configuration item is S3, later changed to SHARED, but still compatible with S3 writing): mo's data storage\n# 3, ETL: observability system-related data storage (generally aligned with mo's data storage)\n\n# 1. Part 1: LOCAL\n# 1.1, (Optional) Configure the local path for the LOCAL section, note that CN, TN, LOG need to be configured with different directories\n[[fileservice]]\nbackend = \"DISK\"\ndata-dir = \"/your/mo-path/matrixone/data/local/log\"\nname = \"LOCAL\"\n\n# 2. Part II: S3\n# (mandatory)\n[[fileservice]]\nbackend = \"MINIO\" # Note that when MinIO is configured as MINIO, the rest of S3 is configured as S3\nname = \"S3\"\n\n# 2.1,(Optional) Configure local caching for the S3 section, including disk caching and memory caching\n[fileservice.cache]\ndisk-capacity = \"20GiB\" # Local Disk Cache Size\ndisk-path = \"/your/mo-path/matrixone/data/disk-cache\" # Local Disk Cache Path\nmemory-capacity = \"2GiB\" #Local memory cache size\n\n# 2.2,(Required) configuring object storage information for storing mo data data in the S3 section, including\n[fileservice.s3]\nbucket = \"mo-on-minio-demo\" # bucket name\nendpoint = \"http://10.0.0.1\" # endpoint\nkey-prefix = \"mo/data\" # Path \nkey-id = \"xxxx\" # key id\nkey-secret = \"xxxx\" #secret key\n\n# 3. Part III: ETL\n# (mandatory)\n[[fileservice]]\nbackend = \"MINIO\" # Note that when MinIO is configured as MINIO, the rest of S3 is configured as S3\nname = \"ETL\"\n\n# 3.1,(Required) Configure the cache in the ETL section, typically configured to 1B, i.e. almost no\n[fileservice.cache]\nmemory-capacity = \"1B\"\n\n# 3.2,(Required) Configure the object store information for storing mo etl data in the ETL section, most of the information remains the same as in section 2.2, except that a separate subdirectory is sufficient for the key-prefix\n[fileservice.s3]\nbucket = \"mo-on-minio-demo\" # bucket name\nendpoint = \"http://10.0.0.1\" # endpoint\nkey-prefix = \"mo/etl\" # Path \nkey-id = \"xxxx\" #key id\nkey-secret = \"xxxx\" #secret key\n</code></pre>"},{"location":"MatrixOne/Deploy/deploy-matrixone-single-with-s3/#start-mo-service","title":"Start mo-service","text":"<pre><code># run mo-service\nmo_ctl start\n# After a few moments, confirm that the mo-service is running\nmo_ctl status\n</code></pre>"},{"location":"MatrixOne/Deploy/deploy-matrixone-single-with-s3/#connect-matrixone","title":"Connect MatrixOne","text":"<pre><code># If mo_ctl is left at its default configuration, there is no need to set connection information, and the default will be to connect to the local mo\nmo_ctl set_conf MO_HOST=127.0.0.1\nmo_ctl set_conf MO_PORT=6001\nmo_ctl set_conf MO_USER=dump\nmo_ctl set_conf MO_PW=111\n\n# connect \nmo_ctl connect\n</code></pre>"},{"location":"MatrixOne/Deploy/deploy-matrixone-single-with-s3/#verify-that-matrixone-is-working-properly","title":"Verify that MatrixOne is working properly","text":"<pre><code># Take the example of creating a library table and write some sample data to confirm that mo works properly\ngithub@shpc2-10-222-1-9:/data/mo/main/matrixone/etc/launch$ mo_ctl connect\n2024-08-26 17:44:10.196 UTC+0800    [INFO]    Checking connectivity\n2024-08-26 17:44:10.207 UTC+0800    [INFO]    Ok, connecting for user ... \nWelcome to the MySQL monitor.  Commands end with ; or \\g.\nYour MySQL connection id is 10\nServer version: 8.0.30-MatrixOne-v287278 MatrixOne\n\nCopyright (c) 2000, 2024, Oracle and/or its affiliates.\n\nOracle is a registered trademark of Oracle Corporation and/or its\naffiliates. Other names may be trademarks of their respective\nowners.\n\nType 'help;' or '\\h' for help. Type '\\c' to clear the current input statement.\n\nmysql&gt; show databases;\n+--------------------+\n| Database           |\n+--------------------+\n| information_schema |\n| mo_catalog         |\n| mo_debug           |\n| mo_task            |\n| mysql              |\n| system             |\n| system_metrics     |\n+--------------------+\n7 rows in set (0.01 sec)\n\nmysql&gt; create database test;\nQuery OK, 1 row affected (0.02 sec)\n\nmysql&gt; use test;\nDatabase changed\nmysql&gt; create table t1(create_time timestamp(3), device_id varchar(25), metric_value float);\nQuery OK, 0 rows affected (0.01 sec)\n\nmysql&gt; insert into t1 values ('2024-08-26 17:45:01', 'jkasdjlasd', 123.22);\nQuery OK, 1 row affected (0.01 sec)\n\nmysql&gt; insert into t1 values ('2024-08-26 17:45:10', 'jkasdjlasd', 123.99);\nQuery OK, 1 row affected (0.00 sec)\n\nmysql&gt; insert into t1 values ('2024-08-26 17:45:10', 'dassad', 88.99);\nQuery OK, 1 row affected (0.00 sec)\n\nmysql&gt; select * from t1;\n+-------------------------+------------+--------------+\n| create_time             | device_id  | metric_value |\n+-------------------------+------------+--------------+\n| 2024-08-26 17:45:01.000 | jkasdjlasd |       123.22 |\n| 2024-08-26 17:45:10.000 | jkasdjlasd |       123.99 |\n| 2024-08-26 17:45:10.000 | dassad     |        88.99 |\n+-------------------------+------------+--------------+\n3 rows in set (0.00 sec)\n\nmysql&gt; quit\nBye\n2024-08-26 17:45:52.827 UTC+0800    [INFO]    Connect succeeded and finished. Bye\n</code></pre>"},{"location":"MatrixOne/Deploy/deploy-matrixone-single-with-s3/#confirm-data-write-to-s3-minio","title":"Confirm data write to S3 (MinIO)","text":"<p>We can use MC, minio's official command-line client tool, to confirm that Mo's data was written to the corresponding bucket. For the specific usage of MC, please refer to the following documentation: https://min.io/docs/minio/linux/reference/minio-mc.html</p> <pre><code>github@shpc2-10-222-1-9:/data/mo/main/matrixone/etc/launch$ mc ls minio-sh/mo-on-minio-demo/mo\n[2024-08-26 18:00:10 CST]     0B data/\ngithub@shpc2-10-222-1-9:/data/mo/main/matrixone/etc/launch$ mc ls minio-sh/mo-on-minio-demo/mo/data/\n[2024-08-26 17:47:32 CST] 1.7KiB STANDARD 01918e10-ec44-7245-a131-690549db5f05_00000\n[2024-08-26 17:48:17 CST] 2.7KiB STANDARD 01918e10-ec44-72d2-9973-5d4ced588a4a_00000\n[2024-08-26 17:48:12 CST]   972B STANDARD 01918e10-ec44-7321-93f8-5820d3abd218_00000\n# ....\n# \u4e2d\u95f4\u7684\u6587\u4ef6\u7701\u53bb\n01918e1f-8a38-725e-b95f-1ba3213883ac_00000\n[2024-08-26 17:58:42 CST]   739B STANDARD 01918e1f-9db7-7950-aa1a-1429b586e98d_00000\n[2024-08-26 17:58:42 CST]  24KiB STANDARD 01918e1f-9db7-7bcd-bbf0-2aa3e16b6f73_00000\n[2024-08-26 17:58:42 CST] 3.7KiB STANDARD 01918e1f-9dd0-7386-98e9-f2530420d460_00000\n[2024-08-26 18:00:12 CST]     0B ckp/\n</code></pre>"},{"location":"MatrixOne/Deploy/deploy-matrixone-single-with-s3/#scenario-2-matrixone-with-s3","title":"Scenario 2: MatrixOne with S3","text":"<p>This section describes how to deploy a standalone version of MatrixOne based on object storage that follows the standard S3 protocol, using Tencent Cloud COS as an example. For other similar S3 service providers, such as AWS and Alibaba Cloud OSS, their configuration methods are similar, and you can refer to this step. Compared with MinIO, the deployment steps based on Tencent Cloud COS are basically the same except that the configuration files are slightly different. The differences in the configuration files will be highlighted below, and other steps will not be repeated.</p>"},{"location":"MatrixOne/Deploy/deploy-matrixone-single-with-s3/#modifying-the-matrixone-configuration-file_1","title":"Modifying the MatrixOne Configuration File","text":"<ul> <li>CN Configuration (CN. Toml)</li> </ul> <pre><code>#####################################\n#    \u4e00,default configuration       #\n#####################################\n\nservice-type = \"CN\"\ndata-dir = \"./mo-data\"\n\n[log]\nlevel = \"info\"\n\n[cn]\nuuid = \"dd1dccb4-4d3c-41f8-b482-5251dc7a41bf\"\nport-base = 18000\n\n[malloc]\ncheck-fraction = 65536\nenable-metrics = true\n\n######################################\n#    \u4e8c,Customized Configuration     #\n######################################\n\n# fileservic array configuration, name is divided into three parts: LOCAL, S3, ETL, where:\n# 1, LOCAL: temporary file storage (generally with DISK's backend)\n# 2, SHARED (the old configuration item is S3, later changed to SHARED, but still compatible with S3 writing): mo's data storage\n# 3, ETL: observability system-related datastore (generally consistent with mo's datastore)\n\n# 1, Part I: LOCAL\n# 1.1, (optional) configure the local path of the LOCAL part, note that CN, TN, LOG need to configure different directories\n[[fileservice]]\nbackend = \"DISK\"\ndata-dir = \"/your/mo/path/data/local/cn\"\nname = \"LOCAL\"\n\n# 2. Part II: S3\n# (mandatory)\n[[fileservice]]\nbackend = \"S3\" # Note that when MinIO is configured as MINIO, the rest of S3 is configured as S3\nname = \"S3\"\n\n# 2.1,(Optional) Configure local caching for the S3 section, including disk caching and memory caching\n[fileservice.cache]\ndisk-capacity = \"20GiB\" # Local Disk Cache Size\ndisk-path = \"/your/mo/path/data/disk-cache\" # Local Disk Cache Path\nmemory-capacity = \"2GiB\" #Local memory cache size\n\n# 2.2,(Required) configuring object storage information for storing mo data data in the S3 section, including\n[fileservice.s3]\nbucket = \"my-bucket-12345678\" # bucket name\nendpoint = \"https://cos.ap-nanjing.myqcloud.com\" # endpoint\nkey-prefix = \"mo/data\" # path\nkey-id = \"xxxxxx\" # key id\nkey-secret = \"xxxxxx\" #secret key\nregion = \"ap-nanjing\" # region\n\n# 3,Part III: ETL\n# (mandatory)\n[[fileservice]]\nbackend = \"S3\" # Note that when MinIO is configured as MINIO, the rest of S3 is configured as S3\nname = \"ETL\"\n\n# 3.1,(Required) Configure the cache in the ETL section, typically configured to 1B, i.e. almost no\n[fileservice.cache]\nmemory-capacity = \"1B\"\n\n# 3.2,(Required) Configure the object store information for storing mo etl data in the ETL section, most of the information remains the same as in section 2.2, except that a separate subdirectory is sufficient for the key-prefix\n[fileservice.s3]\nbucket = \"my-bucket-12345678\" # bucket name\nendpoint = \"https://cos.ap-nanjing.myqcloud.com\" # endpoint\nkey-prefix = \"mo/etl\" # path\nkey-id = \"xxxxxx\" # key id\nkey-secret = \"xxxxxx\" #secret key\nregion = \"ap-nanjing\" # region\n</code></pre> <ul> <li>TN Configuration (TN. Toml)</li> </ul> <pre><code>######################################\n#    \u4e00,default configuration        #\n######################################\n\nservice-type = \"TN\"\ndata-dir = \"./mo-data\"\n\n[log]\nlevel = \"info\"\n\n[tn]\nuuid = \"dd4dccb4-4d3c-41f8-b482-5251dc7a41bf\"\nport-base = 19000\n\n[malloc]\ncheck-fraction = 65536\nenable-metrics = true\n\n#########################################\n#    \u4e8c,Customized Configuration        #\n#########################################\n\n# fileservic array configuration, name is divided into three parts: LOCAL, S3, ETL, where:\n# 1, LOCAL: temporary file storage (generally with DISK's backend)\n# 2, SHARED (the old configuration item is S3, later changed to SHARED, but still compatible with S3 writing): mo's data storage\n# 3, ETL: observability system-related datastore (generally consistent with mo's datastore)\n\n# 1, Part I: LOCAL\n# 1.1, (optional) configure the local path of the LOCAL part, note that CN, TN, LOG need to configure different directories\n[[fileservice]]\nbackend = \"DISK\"\ndata-dir = \"/your/mo/path/data/local/tn\"\nname = \"LOCAL\"\n\n# 2. Part II: S3\n# (mandatory)\n[[fileservice]]\nbackend = \"S3\" # Note that when MinIO is configured as MINIO, the rest of S3 is configured as S3\nname = \"S3\"\n\n# 2.1,(Optional) Configure local caching for the S3 section, including disk caching and memory caching\n[fileservice.cache]\ndisk-capacity = \"20GiB\" # Local Disk Cache Size\ndisk-path = \"/your/mo/path/data/disk-cache\" # Local Disk Cache Path\nmemory-capacity = \"2GiB\" #Local memory cache size\n\n# 2.2,(Required) configuring object storage information for storing mo data data in the S3 section, including\n[fileservice.s3]\nbucket = \"my-bucket-12345678\" # bucket name\nendpoint = \"https://cos.ap-nanjing.myqcloud.com\" # endpoint\nkey-prefix = \"mo/data\" # path\nkey-id = \"xxxxxx\" # key id\nkey-secret = \"xxxxxx\" #secret key\nregion = \"ap-nanjing\" # region\n\n# 3, Part III: ETL\n# (mandatory)\n[[fileservice]]\nbackend = \"S3\" # Note that when MinIO is configured as MINIO, the rest of S3 is configured as S3\nname = \"ETL\"\n\n# 3.1,(Required) Configure the cache in the ETL section, typically configured to 1B, i.e. almost no\n[fileservice.cache]\nmemory-capacity = \"1B\"\n\n# 3.2,(Required) Configure the object store information for storing mo etl data in the ETL section, most of the information remains the same as in section 2.2, except that a separate subdirectory is sufficient for the key-prefix\n[fileservice.s3]\nbucket = \"my-bucket-12345678\" # bucket name\nendpoint = \"https://cos.ap-nanjing.myqcloud.com\" # endpoint\nkey-prefix = \"mo/etl\" # path\nkey-id = \"xxxxxx\" # key id\nkey-secret = \"xxxxxx\" #secret key\nregion = \"ap-nanjing\" # region\n</code></pre> <ul> <li>Log Service Configuration (log. Toml)</li> </ul> <pre><code>#########################################\n#    \u4e00,default configuration           #\n#########################################\n\n# service node type, [DN|CN|LOG]\nservice-type = \"LOG\"\ndata-dir = \"./mo-data\"\n\n[log]\nlevel = \"info\"\n\n[malloc]\ncheck-fraction = 65536\nenable-metrics = true\n\n#######################\n#    \u4e8c,\u81ea\u5b9a\u4e49\u914d\u7f6e     #\n#######################\n\n# fileservic array configuration, name is divided into three parts: LOCAL, S3, ETL, where:\n# 1, LOCAL: temporary file storage (generally with DISK's backend)\n# 2, SHARED (the old configuration item is S3, later changed to SHARED, but still compatible with S3 writing): mo's data storage\n# 3, ETL: observability system-related datastore (generally consistent with mo's datastore)\n\n# 1, Part I: LOCAL\n# 1.1, (optional) configure the local path of the LOCAL part, note that CN, TN, LOG need to configure different directories\n[[fileservice]]\nbackend = \"DISK\"\ndata-dir = \"/your/mo/path/data/local/log\"\nname = \"LOCAL\"\n\n# 2. Part II: S3\n# (mandatory)\n[[fileservice]]\nbackend = \"S3\" # Note that when MinIO is configured as MINIO, the rest of S3 is configured as S3\nname = \"S3\"\n\n# 2.1,(Optional) Configure local caching for the S3 section, including disk caching and memory caching\n[fileservice.cache]\ndisk-capacity = \"20GiB\" # Local Disk Cache Size\ndisk-path = \"/your/mo/path/data/disk-cache\" # Local Disk Cache Path\nmemory-capacity = \"2GiB\" #Local memory cache size\n\n# 2.2,(Required) configuring object storage information for storing mo data data in the S3 section, including\n[fileservice.s3]\nbucket = \"my-bucket-12345678\" # bucket name\nendpoint = \"https://cos.ap-nanjing.myqcloud.com\" # endpoint\nkey-prefix = \"mo/data\" # path\nkey-id = \"xxxxxx\" # key id\nkey-secret = \"xxxxxx\" #secret key\nregion = \"ap-nanjing\" # region\n\n# 3,Part III: ETL\n# (mandatory)\n[[fileservice]]\nbackend = \"S3\" # Note that when MinIO is configured as MINIO, the rest of S3 is configured as S3\nname = \"ETL\"\n\n# 3.1,(Required) Configure the cache in the ETL section, typically configured to 1B, i.e. almost no\n[fileservice.cache]\nmemory-capacity = \"1B\"\n\n# 3.2,(Required) Configure the object store information for storing mo etl data in the ETL section, most of the information remains the same as in section 2.2, except that a separate subdirectory is sufficient for the key-prefix\n[fileservice.s3]\nbucket = \"my-bucket-12345678\" # bucket name\nendpoint = \"https://cos.ap-nanjing.myqcloud.com\" # endpoint\nkey-prefix = \"mo/etl\" # path\nkey-id = \"xxxxxx\" # key id\nkey-secret = \"xxxxxx\" #secret key\nregion = \"ap-nanjing\" # region\n</code></pre>"},{"location":"MatrixOne/Deploy/deploy-matrixone-single-with-s3/#acknowledge-data-write-to-cos","title":"Acknowledge data write to COS","text":"<p>We can use the above MC tool or the coscli tool provided by Tencent Cloud COS for confirmation. Please refer to the official document description: https://cloud.tencent.com/document/product/436/63143</p> <pre><code>github@VM-32-6-debian:/data/mo/main$ mo_ctl connect\n2024-08-26 18:38:31.105 UTC+0800    [INFO]    Checking connectivity\n2024-08-26 18:38:31.124 UTC+0800    [INFO]    Ok, connecting for user ... Welcome to the MariaDB monitor.  Commands end with ; or \\g.\nYour MySQL connection id is 3\nServer version: 8.0.30-MatrixOne-v287278 MatrixOne\n\nCopyright (c) 2000, 2018, Oracle, MariaDB Corporation Ab and others.\n\nType 'help;' or '\\h' for help. Type '\\c' to clear the current input statement.\n\nMySQL [(none)]&gt; show databases;\n+--------------------+\n| Database           |\n+--------------------+\n| information_schema |\n| mo_catalog         |\n| mo_debug           |\n| mo_task            |\n| mysql              |\n| system             |\n| system_metrics     |\n+--------------------+\n7 rows in set (0.003 sec)\n\nMySQL [(none)]&gt; create database test;\nQuery OK, 1 row affected (0.008 sec)\n\nMySQL [(none)]&gt; use test\nDatabase changed\nMySQL [test]&gt; create table t1(create_time timestamp(3), device_id varchar(25), metric_value float);\nQuery OK, 0 rows affected (0.012 sec)\n\nMySQL [test]&gt; insert into t1 values ('2024-08-26 17:45:01', 'jkasdjlasd', 123.22);\nQuery OK, 1 row affected (0.005 sec)\n\nMySQL [test]&gt;  insert into t1 values ('2024-08-26 17:45:10', 'jkasdjlasd', 123.99);\nQuery OK, 1 row affected (0.003 sec)\n\nMySQL [test]&gt; insert into t1 values ('2024-08-26 17:45:10', 'dassad', 88.99);\nQuery OK, 1 row affected (0.002 sec)\n\nMySQL [test]&gt; select * from t1;\n+-------------------------+------------+--------------+\n| create_time             | device_id  | metric_value |\n+-------------------------+------------+--------------+\n| 2024-08-26 17:45:01.000 | jkasdjlasd |       123.22 |\n| 2024-08-26 17:45:10.000 | jkasdjlasd |       123.99 |\n| 2024-08-26 17:45:10.000 | dassad     |        88.99 |\n+-------------------------+------------+--------------+\n3 rows in set (0.003 sec)\n\nMySQL [test]&gt; quit\nBye\n2024-08-26 18:50:17.007 UTC+0800    [INFO]    Connect succeeded and finished. Bye\n\n\ngithub@VM-32-6-debian:/data/mo/main$ coscli ls cos://mo-on-cos-demo\nKEY       | TYPE | LAST MODIFIED | SIZE  -----------------+------+---------------+-------\nmain_30eca66c/ |  DIR |               |       mo/ |  DIR |               |       KEY       | TYPE |  LAST MODIFIED  | SIZE  -----------------+------+-----------------+-------\n-----------------+------+-----------------+-------\nTOTAL OBJECTS:  |  2    ------------------+-------\ngithub@VM-32-6-debian:/data/mo/main$ coscli ls cos://mo-on-cos-demo/mo/\nKEY    |   TYPE   |      LAST MODIFIED       | SIZE  -----------+----------+--------------------------+-------\nmo/data/ |      DIR |                          |       mo/ | STANDARD | 2024-08-26T10:28:28.000Z | 0  B  KEY    |   TYPE   |      LAST MODIFIED       | SIZE  -----------+----------+--------------------------+-------\n-----------+----------+--------------------------+-------\nTOTAL OBJECTS:      |  2    ---------------------------+-------\ngithub@VM-32-6-debian:/data/mo/main$ coscli ls cos://mo-on-cos-demo/mo/data\nKEY    | TYPE | LAST MODIFIED | SIZE  -----------+------+---------------+-------\nmo/data/ |  DIR |               |       KEY    | TYPE |  LAST MODIFIED  | SIZE  -----------+------+-----------------+-------\n-----------+------+-----------------+-------\nTOTAL OBJECTS:  |  1    ------------------+-------\ngithub@VM-32-6-debian:/data/mo/main$ coscli ls cos://mo-on-cos-demo/mo/data/\nKEY                         |   TYPE   |      LAST MODIFIED       |   SIZE     -----------------------------------------------------+----------+--------------------------+------------\nmo/data/ckp/ |      DIR |                          |            mo/data/01918e44-0205-7239-9fdc-a3370df0cc73_00000 | STANDARD | 2024-08-26T10:43:39.000Z |  15.42 KB  mo/data/01918e44-0205-7463-b9b1-95a4b88f11fa_00000 | STANDARD | 2024-08-26T10:43:49.000Z |    972  B  # ....\n# \u4e2d\u95f4\u7701\u53bb\nmo/data/01918e4e-ba33-772f-a606-07a0e7c20e03_00000 | STANDARD | 2024-08-26T10:50:09.000Z |   2.26 KB  mo/data/01918e4e-ba34-7605-b070-c53224bc16e2_00000 | STANDARD | 2024-08-26T10:50:09.000Z |  45.77 KB  mo/data/01918e4e-ba36-7080-96b6-7000c1f978aa_00000 | STANDARD | 2024-08-26T10:50:09.000Z |  62.67 KB  KEY                         |   TYPE   |      LAST MODIFIED       |   SIZE     -----------------------------------------------------+----------+--------------------------+------------\n-----------------------------------------------------+----------+--------------------------+------------\nTOTAL OBJECTS:      |    119     ---------------------------+------------\n</code></pre>"},{"location":"MatrixOne/Deploy/deploy-matrixone-single-with-s3/#containerized-deployment-mode","title":"Containerized deployment mode","text":"<p>According to the scenario, configure the CN. Toml, TN. Toml, and log. Toml file according to the above steps. After that, put these files in the same directory, for example,/data/Mo _ confs. In addition, you need to configure a launch. Toml file with the following contents:</p> <ul> <li>Modifying the MatrixOne Configuration File</li> </ul> <pre><code>logservices = [\n    \"./etc/log.toml\",\n]\n\ntnservices = [\n    \"./etc/tn.toml\"\n]\n\ncnservices = [\n    \"./etc/cn.toml\"\n]\n</code></pre> <ul> <li>Set Mo _ CTL Tools Configuration</li> </ul> <pre><code>#Configure cn.toml, tn.toml and log.toml first.\nmo_ctl set_conf MO_CONTAINER_IMAGE=matrixorigin/matrixone/1.2.3 #Setting up mirroring\nmo_ctl set_conf MO_CONTAINER_NAME=mo # Setting the container name\nmo_ctl set_conf MO_CONTAINER_CONF_HOST_PATH=/data/mo_confs/ # Set the directory on the host machine where the mo configuration file is stored\nmo_ctl set_conf MO_CONTAINER_CONF_CON_FILE=\"/etc/launch.toml\" # Set the path to the configuration file inside the container when the container starts up\nmo_ctl set_conf MO_CONTAINER_DATA_HOST_PATH=\"/data/mo-data/\" # Setting the host data directory for mounting to containers\nmo_ctl set_conf MO_CONTAINER_AUTO_RESTART=\"yes\"   # Configure the container to restart automatically after an abnormal exit\n</code></pre> <ul> <li>Start the MatrixOne container</li> </ul> <p>Set the MatrixOne deployment mode to container and start the MatrixOne container</p> <pre><code>mo_ctl set_conf MO_DEPLOY_MODE=docker\nmo_ctl start\n</code></pre>"},{"location":"MatrixOne/Deploy/health-check-resource-monitoring/","title":"Health check and resource monitoring","text":"<p>In the MatrixOne distributed cluster, there are multiple components and objects. To ensure its regular operation and troubleshooting, we must perform a series of health checks and resource monitoring.</p> <p>The health check and resource monitoring environment introduced in this document will be based on the MatrixOne Distributed Cluster Deployment environment.</p> <p>The upgraded environment introduced in this document will be based on the environment of MatrixOne Distributed Cluster Deployment.</p>"},{"location":"MatrixOne/Deploy/health-check-resource-monitoring/#objects-to-check","title":"Objects to check","text":"<ul> <li> <p>Physical resource layer: including the three virtual machines' CPU, memory, and disk resources. For a mature solution to monitor these resources, see Monitoring Solution.</p> </li> <li> <p>Logical resource layer: including the capacity usage of MinIO, the CPU and memory resource usage of each node and Pod of Kubernetes, the overall status of MatrixOne, and the status of each component (such as LogService, CN, TN).</p> </li> </ul>"},{"location":"MatrixOne/Deploy/health-check-resource-monitoring/#resource-monitoring","title":"Resource monitoring","text":""},{"location":"MatrixOne/Deploy/health-check-resource-monitoring/#minio-capacity-usage-monitoring","title":"MinIO capacity usage monitoring","text":"<p>MinIO has a management interface through which we can visually monitor its capacity usage, including the remaining space. For more information, see official documentation.</p> <p></p>"},{"location":"MatrixOne/Deploy/health-check-resource-monitoring/#nodepod-resource-monitoring","title":"Node/Pod resource monitoring","text":"<p>To determine whether the MatrixOne service needs to be scaled up or down, users often need to monitor the resources used by the Node where the MatrixOne cluster resides and the pods corresponding to the components.</p> <p>You can use the <code>kubectl top</code> command to complete it. For more information, see Kubernetes official website document of</p>"},{"location":"MatrixOne/Deploy/health-check-resource-monitoring/#node-monitoring","title":"Node Monitoring","text":"<ol> <li> <p>Use the following command to view the details of MatrixOne cluster nodes:</p> <pre><code>kubectl get node\n</code></pre> <pre><code>[root@master0 ~]# kubectl get node\nNAME      STATUS   ROLES                  AGE   VERSION\nmaster0   Ready    control-plane,master   22h   v1.23.17\nnode0     Ready    &lt;none&gt;                 22h   v1.23.17\n</code></pre> </li> <li> <p>According to the above-returned results, use the following command to view the resource usage of a specific node. According to the previous deployment scheme, it can be seen that the MatrixOne cluster is located on the node named node0:</p> <pre><code>NODE=\"[node to be monitored]\" # According to the above results, it may be IP, hostname, or alias, such as 10.0.0.1, host-10-0-0-1, node01\nkubectl top node ${NODE}\n</code></pre> <pre><code>[root@master0 ~]# kubectl top node\nNAME      CPU(cores)   CPU%   MEMORY(bytes)   MEMORY%   \nmaster0   179m         9%     4632Mi          66%       \nnode0     292m         15%    4115Mi          56%  \n[root@master0 ~]# kubectl top node node0\nNAME    CPU(cores)   CPU%   MEMORY(bytes)   MEMORY%   \nnode0   299m         15%    4079Mi          56%  \n</code></pre> </li> <li> <p>You can also view the node's resource allocation and upper limit. Note that allocated resources are not equal to used resources.</p> </li> </ol> <pre><code>[root@master0 ~]# kubectl describe node node0\nName:               master0\nRoles:              control-plane,master\nLabels:             beta.kubernetes.io/arch=amd64\n                    beta.kubernetes.io/os=linux\n                    kubernetes.io/arch=amd64\n                    kubernetes.io/hostname=master0\n                    kubernetes.io/os=linux\n                    node-role.kubernetes.io/control-plane=\n                    node-role.kubernetes.io/master=\n                    node.kubernetes.io/exclude-from-external-load-balancers=\nAnnotations:        kubeadm.alpha.kubernetes.io/cri-socket: /var/run/dockershim.sock\n                    node.alpha.kubernetes.io/ttl: 0\n                    projectcalico.org/IPv4Address: 10.206.134.8/24\n                    projectcalico.org/IPv4VXLANTunnelAddr: 10.234.166.0\n                    volumes.kubernetes.io/controller-managed-attach-detach: true\nCreationTimestamp:  Sun, 07 May 2023 12:28:57 +0800\nTaints:             node-role.kubernetes.io/master:NoSchedule\nUnschedulable:      false\nLease:\n  HolderIdentity:  master0\n  AcquireTime:     &lt;unset&gt;\n  RenewTime:       Mon, 08 May 2023 10:56:08 +0800\nConditions:\n  Type                 Status  LastHeartbeatTime                 LastTransitionTime                Reason                       Message\n  ----                 ------  -----------------                 ------------------                ------                       -------\n  NetworkUnavailable   False   Sun, 07 May 2023 12:30:08 +0800   Sun, 07 May 2023 12:30:08 +0800   CalicoIsUp                   Calico is running on this node\n  MemoryPressure       False   Mon, 08 May 2023 10:56:07 +0800   Sun, 07 May 2023 12:28:55 +0800   KubeletHasSufficientMemory   kubelet has sufficient memory available\n  DiskPressure         False   Mon, 08 May 2023 10:56:07 +0800   Sun, 07 May 2023 12:28:55 +0800   KubeletHasNoDiskPressure     kubelet has no disk pressure\n  PIDPressure          False   Mon, 08 May 2023 10:56:07 +0800   Sun, 07 May 2023 12:28:55 +0800   KubeletHasSufficientPID      kubelet has sufficient PID available\n  Ready                True    Mon, 08 May 2023 10:56:07 +0800   Sun, 07 May 2023 20:47:39 +0800   KubeletReady                 kubelet is posting ready status\nAddresses:\n  InternalIP:  10.206.134.8\n  Hostname:    master0\nCapacity:\n  cpu:                2\n  ephemeral-storage:  51473868Ki\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             7782436Ki\n  pods:               110\nAllocatable:\n  cpu:                1800m\n  ephemeral-storage:  47438316671\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             7155748Ki\n  pods:               110\nSystem Info:\n  Machine ID:                 fb436be013b5415799d27abf653585d3\n  System UUID:                FB436BE0-13B5-4157-99D2-7ABF653585D3\n  Boot ID:                    552bd576-56c8-4d22-9549-d950069a5a77\n  Kernel Version:             3.10.0-1160.88.1.el7.x86_64\n  OS Image:                   CentOS Linux 7 (Core)\n  Operating System:           linux\n  Architecture:               amd64\n  Container Runtime Version:  docker://20.10.23\n  Kubelet Version:            v1.23.17\n  Kube-Proxy Version:         v1.23.17\nPodCIDR:                      10.234.0.0/23\nPodCIDRs:                     10.234.0.0/23\nNon-terminated Pods:          (12 in total)\n  Namespace                   Name                               CPU Requests  CPU Limits  Memory Requests  Memory Limits  Age\n  ---------                   ----                               ------------  ----------  ---------------  -------------  ---\n  default                     netchecker-agent-7xnwb             15m (0%)      30m (1%)    64M (0%)         100M (1%)      22h\n  default                     netchecker-agent-hostnet-bw85f     15m (0%)      30m (1%)    64M (0%)         100M (1%)      22h\n  kruise-system               kruise-daemon-xvl8t                0 (0%)        50m (2%)    0 (0%)           128Mi (1%)     20h\n  kube-system                 calico-node-sbzfc                  150m (8%)     300m (16%)  64M (0%)         500M (6%)      22h\n  kube-system                 dns-autoscaler-7874cf6bcf-l55q4    20m (1%)      0 (0%)      10Mi (0%)        0 (0%)         22h\n  kube-system                 kube-apiserver-master0             250m (13%)    0 (0%)      0 (0%)           0 (0%)         22h\n  kube-system                 kube-controller-manager-master0    200m (11%)    0 (0%)      0 (0%)           0 (0%)         22h\n  kube-system                 kube-proxy-lfkhk                   0 (0%)        0 (0%)      0 (0%)           0 (0%)         22h\n  kube-system                 kube-scheduler-master0             100m (5%)     0 (0%)      0 (0%)           0 (0%)         22h\n  kube-system                 metrics-server-7bd47f88c4-knh9b    100m (5%)     100m (5%)   200Mi (2%)       200Mi (2%)     22h\n  kube-system                 nodelocaldns-dcffl                 100m (5%)     0 (0%)      70Mi (1%)        170Mi (2%)     14h\n  kuboard                     kuboard-v3-master0                 0 (0%)        0 (0%)      0 (0%)           0 (0%)         22h\nAllocated resources:\n  (Total limits may be over 100 percent, i.e., overcommitted.)\n  Resource           Requests        Limits\n  --------           --------        ------\n  cpu                950m (52%)      510m (28%)\n  memory             485601280 (6%)  1222190848 (16%)\n  ephemeral-storage  0 (0%)          0 (0%)\n  hugepages-1Gi      0 (0%)          0 (0%)\n  hugepages-2Mi      0 (0%)          0 (0%)\nEvents:              &lt;none&gt;\n\n\nName:               node0\nRoles:              &lt;none&gt;\nLabels:             beta.kubernetes.io/arch=amd64\n                    beta.kubernetes.io/os=linux\n                    kubernetes.io/arch=amd64\n                    kubernetes.io/hostname=node0\n                    kubernetes.io/os=linux\nAnnotations:        kubeadm.alpha.kubernetes.io/cri-socket: /var/run/dockershim.sock\n                    node.alpha.kubernetes.io/ttl: 0\n                    projectcalico.org/IPv4Address: 10.206.134.14/24\n                    projectcalico.org/IPv4VXLANTunnelAddr: 10.234.60.0\n                    volumes.kubernetes.io/controller-managed-attach-detach: true\nCreationTimestamp:  Sun, 07 May 2023 12:29:46 +0800\nTaints:             &lt;none&gt;\nUnschedulable:      false\nLease:\n  HolderIdentity:  node0\n  AcquireTime:     &lt;unset&gt;\n  RenewTime:       Mon, 08 May 2023 10:56:06 +0800\nConditions:\n  Type                 Status  LastHeartbeatTime                 LastTransitionTime                Reason                       Message\n  ----                 ------  -----------------                 ------------------                ------                       -------\n  NetworkUnavailable   False   Sun, 07 May 2023 12:30:08 +0800   Sun, 07 May 2023 12:30:08 +0800   CalicoIsUp                   Calico is running on this node\n  MemoryPressure       False   Mon, 08 May 2023 10:56:12 +0800   Sun, 07 May 2023 12:29:46 +0800   KubeletHasSufficientMemory   kubelet has sufficient memory available\n  DiskPressure         False   Mon, 08 May 2023 10:56:12 +0800   Sun, 07 May 2023 12:29:46 +0800   KubeletHasNoDiskPressure     kubelet has no disk pressure\n  PIDPressure          False   Mon, 08 May 2023 10:56:12 +0800   Sun, 07 May 2023 12:29:46 +0800   KubeletHasSufficientPID      kubelet has sufficient PID available\n  Ready                True    Mon, 08 May 2023 10:56:12 +0800   Sun, 07 May 2023 20:48:36 +0800   KubeletReady                 kubelet is posting ready status\nAddresses:\n  InternalIP:  10.206.134.14\n  Hostname:    node0\nCapacity:\n  cpu:                2\n  ephemeral-storage:  51473868Ki\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             7782444Ki\n  pods:               110\nAllocatable:\n  cpu:                1900m\n  ephemeral-storage:  47438316671\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             7417900Ki\n  pods:               110\nSystem Info:\n  Machine ID:                 a6600151884b44fb9f0bc9af490e44b7\n  System UUID:                A6600151-884B-44FB-9F0B-C9AF490E44B7\n  Boot ID:                    b7f3357f-44e6-425e-8c90-6ada14e92703\n  Kernel Version:             3.10.0-1160.88.1.el7.x86_64\n  OS Image:                   CentOS Linux 7 (Core)\n  Operating System:           linux\n  Architecture:               amd64\n  Container Runtime Version:  docker://20.10.23\n  Kubelet Version:            v1.23.17\n  Kube-Proxy Version:         v1.23.17\nPodCIDR:                      10.234.2.0/23\nPodCIDRs:                     10.234.2.0/23\nNon-terminated Pods:          (20 in total)\n  Namespace                   Name                                                         CPU Requests  CPU Limits  Memory Requests  Memory Limits  Age\n  ---------                   ----                                                         ------------  ----------  ---------------  -------------  ---\n  default                     netchecker-agent-6v8rl                                       15m (0%)      30m (1%)    64M (0%)         100M (1%)      22h\n  default                     netchecker-agent-hostnet-fb2jn                               15m (0%)      30m (1%)    64M (0%)         100M (1%)      22h\n  default                     netchecker-server-645d759b79-v4bqm                           150m (7%)     300m (15%)  192M (2%)        512M (6%)      22h\n  kruise-system               kruise-controller-manager-74847d59cf-295rk                   100m (5%)     200m (10%)  256Mi (3%)       512Mi (7%)     20h\n  kruise-system               kruise-controller-manager-74847d59cf-854sq                   100m (5%)     200m (10%)  256Mi (3%)       512Mi (7%)     20h\n  kruise-system               kruise-daemon-rz9pj                                          0 (0%)        50m (2%)    0 (0%)           128Mi (1%)     20h\n  kube-system                 calico-kube-controllers-74df5cd99c-n9qsn                     30m (1%)      1 (52%)     64M (0%)         256M (3%)      22h\n  kube-system                 calico-node-brqrk                                            150m (7%)     300m (15%)  64M (0%)         500M (6%)      22h\n  kube-system                 coredns-76b4fb4578-9cqc7                                     100m (5%)     0 (0%)      70Mi (0%)        170Mi (2%)     14h\n  kube-system                 kube-proxy-rpxb5                                             0 (0%)        0 (0%)      0 (0%)           0 (0%)         22h\n  kube-system                 nginx-proxy-node0                                            25m (1%)      0 (0%)      32M (0%)         0 (0%)         22h\n  kube-system                 nodelocaldns-qkxhv                                           100m (5%)     0 (0%)      70Mi (0%)        170Mi (2%)     14h\n  local-path-storage          local-path-storage-local-path-provisioner-d5bb7f8c9-qfp8h    0 (0%)        0 (0%)      0 (0%)           0 (0%)         21h\n  mo-hn                       matrixone-operator-f8496ff5c-fp6zm                           0 (0%)        0 (0%)      0 (0%)           0 (0%)         20h\n  mo-hn                       mo-tn-0                                                      0 (0%)        0 (0%)      0 (0%)           0 (0%)         13h\n  mo-hn                       mo-log-0                                                     0 (0%)        0 (0%)      0 (0%)           0 (0%)         13h\n  mo-hn                       mo-log-1                                                     0 (0%)        0 (0%)      0 (0%)           0 (0%)         13h\n  mo-hn                       mo-log-2                                                     0 (0%)        0 (0%)      0 (0%)           0 (0%)         13h\n  mo-hn                       mo-tp-cn-0                                                   0 (0%)        0 (0%)      0 (0%)           0 (0%)         13h\n  mostorage                   minio-674ccf54f7-tdglh                                       0 (0%)        0 (0%)      512Mi (7%)       0 (0%)         20h\nAllocated resources:\n  (Total limits may be over 100 percent, i.e., overcommitted.)\n  Resource           Requests          Limits\n  --------           --------          ------\n  cpu                785m (41%)        2110m (111%)\n  memory             1700542464 (22%)  3032475392 (39%)\n  ephemeral-storage  0 (0%)            0 (0%)\n  hugepages-1Gi      0 (0%)            0 (0%)\n  hugepages-2Mi      0 (0%)            0 (0%)\nEvents:              &lt;none&gt;\n</code></pre>"},{"location":"MatrixOne/Deploy/health-check-resource-monitoring/#pod-monitoring","title":"Pod Monitoring","text":"<ol> <li> <p>Use the following command to view the Pods of the MatrixOne cluster:</p> <pre><code>NS=\"mo-hn\"\nkubectl get pod -n ${NS}\n</code></pre> </li> <li> <p>According to the above-returned results, use the following command to view the resource usage of a specific Pod:</p> <pre><code>POD=\"[pod name to be monitored]\" # According to the above results, for example: TN is mo-tn-0, cn is mo-tp-cn-0, mo-tp-cn-1, ..., logservice is mo -log-0, mo-log-1, ...\nkubectl top pod ${POD} -n ${NS}\n</code></pre> <p>The command will display the CPU and memory usage for the specified Pod, similar to the following output:</p> <pre><code>[root@master0 ~]# kubectl top pod mo-tp-cn-0 -nmo-hn\nNAME         CPU(cores)   MEMORY(bytes)   \nmo-tp-cn-0   20m          214Mi\n[root@master0 ~]# kubectl top pod mo-tn-0 -nmo-hn     \nNAME      CPU(cores)   MEMORY(bytes)   \nmo-tn-0   36m          161Mi  \n</code></pre> </li> <li> <p>you can also view the resource declaration of a specific Pod to compare it with the actual resource usage.</p> </li> </ol> <pre><code>kubectl describe pod ${POD_NAME} -n${NS}\nkubectl get pod ${POD_NAME} -n${NS} -oyaml\n</code></pre> <pre><code>[root@master0 ~]# kubectl describe pod mo-tp-cn-0 -nmo-hn\nName:         mo-tp-cn-0\nNamespace:    mo-hn\nPriority:     0\nNode:         node0/10.206.134.14\nStart Time:   Sun, 07 May 2023 21:01:50 +0800\nLabels:       controller-revision-hash=mo-tp-cn-8666cdfb56\n              lifecycle.apps.kruise.io/state=Normal\n              matrixorigin.io/cluster=mo\n              matrixorigin.io/component=CNSet\n              matrixorigin.io/instance=mo-tp\n              matrixorigin.io/namespace=mo-hn\n              statefulset.kubernetes.io/pod-name=mo-tp-cn-0\nAnnotations:  apps.kruise.io/runtime-containers-meta:\n                {\"containers\":[{\"name\":\"main\",\"containerID\":\"docker://679d672a330d7318f97a90835dacefcdd03e8a08062b8844d438f8cdd6bcdc8f\",\"restartCount\":0,\"...\n              cni.projectcalico.org/containerID: 80b286789a2d6fa9e615c3edee79b57edb452eaeafddb9b7b82ec5fb2e339409\n              cni.projectcalico.org/podIP: 10.234.60.53/32\n              cni.projectcalico.org/podIPs: 10.234.60.53/32\n              kruise.io/related-pub: mo\n              lifecycle.apps.kruise.io/timestamp: 2023-05-07T13:01:50Z\n              matrixone.cloud/cn-label: null\n              matrixone.cloud/dns-based-identity: False\nStatus:       Running\nIP:           10.234.60.53\nIPs:\n  IP:           10.234.60.53\nControlled By:  StatefulSet/mo-tp-cn\nContainers:\n  main:\n    Container ID:  docker://679d672a330d7318f97a90835dacefcdd03e8a08062b8844d438f8cdd6bcdc8f\n    Image:         matrixorigin/matrixone:nightly-144f3be4\n    Image ID:      docker-pullable://matrixorigin/matrixone@sha256:288fe3d626c6aa564684099e4686a9d4b28e16fdd16512bd968a67bb41d5aaa3\n    Port:          &lt;none&gt;\n    Host Port:     &lt;none&gt;\n    Command:\n      /bin/sh\n      /etc/matrixone/config/start.sh\n    Args:\n      -debug-http=:6060\n    State:          Running\n      Started:      Sun, 07 May 2023 21:01:54 +0800\n    Ready:          True\n    Restart Count:  0\n    Environment:\n      POD_NAME:               mo-tp-cn-0 (v1:metadata.name)\n      NAMESPACE:              mo-hn (v1:metadata.namespace)\n      HEADLESS_SERVICE_NAME:  mo-tp-cn-headless\n      AWS_ACCESS_KEY_ID:      &lt;set to the key 'AWS_ACCESS_KEY_ID' in secret 'minio'&gt;      Optional: false\n      AWS_SECRET_ACCESS_KEY:  &lt;set to the key 'AWS_SECRET_ACCESS_KEY' in secret 'minio'&gt;  Optional: false\n      AWS_REGION:             us-west-2\n    Mounts:\n      /etc/matrixone/config from config (ro)\n      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-ngpcs (ro)\nReadiness Gates:\n  Type                 Status\n  InPlaceUpdateReady   True\n  KruisePodReady       True\nConditions:\n  Type                 Status\n  KruisePodReady       True\n  InPlaceUpdateReady   True\n  Initialized          True\n  Ready                True\n  ContainersReady      True\n  PodScheduled         True\nVolumes:\n  config:\n    Type:      ConfigMap (a volume populated by a ConfigMap)\n    Name:      mo-tp-cn-config-5abf454\n    Optional:  false\n  kube-api-access-ngpcs:\n    Type:                    Projected (a volume that contains injected data from multiple sources)\n    TokenExpirationSeconds:  3607\n    ConfigMapName:           kube-root-ca.crt\n    ConfigMapOptional:       &lt;nil&gt;\n    DownwardAPI:             true\nQoS Class:                   BestEffort\nNode-Selectors:              &lt;none&gt;\nTolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s\n                             node.kubernetes.io/unreachable:NoExecute op=Exists for 300s\nEvents:                      &lt;none&gt;\n[root@master0 ~]# kubectl get pod  mo-tp-cn-0 -nmo-hn -oyaml\napiVersion: v1\nkind: Pod\nmetadata:\n  annotations:\n    apps.kruise.io/runtime-containers-meta: '{\"containers\":[{\"name\":\"main\",\"containerID\":\"docker://679d672a330d7318f97a90835dacefcdd03e8a08062b8844d438f8cdd6bcdc8f\",\"restartCount\":0,\"hashes\":{\"plainHash\":1670287891}}]}'\n    cni.projectcalico.org/containerID: 80b286789a2d6fa9e615c3edee79b57edb452eaeafddb9b7b82ec5fb2e339409\n    cni.projectcalico.org/podIP: 10.234.60.53/32\n    cni.projectcalico.org/podIPs: 10.234.60.53/32\n    kruise.io/related-pub: mo\n    lifecycle.apps.kruise.io/timestamp: \"2023-05-07T13:01:50Z\"\n    matrixone.cloud/cn-label: \"null\"\n    matrixone.cloud/dns-based-identity: \"False\"\n  creationTimestamp: \"2023-05-07T13:01:50Z\"\n  generateName: mo-tp-cn-\n  labels:\n    controller-revision-hash: mo-tp-cn-8666cdfb56\n    lifecycle.apps.kruise.io/state: Normal\n    matrixorigin.io/cluster: mo\n    matrixorigin.io/component: CNSet\n    matrixorigin.io/instance: mo-tp\n    matrixorigin.io/namespace: mo-hn\n    statefulset.kubernetes.io/pod-name: mo-tp-cn-0\n  name: mo-tp-cn-0\n  namespace: mo-hn\n  ownerReferences:\n  - apiVersion: apps.kruise.io/v1beta1\n    blockOwnerDeletion: true\n    controller: true\n    kind: StatefulSet\n    name: mo-tp-cn\n    uid: 891e0453-89a5-45d5-ad12-16ef048c804f\n  resourceVersion: \"72625\"\n  uid: 1e3e2df3-f1c2-4444-8694-8d23e7125d35\nspec:\n  containers:\n  - args:\n    - -debug-http=:6060\n    command:\n    - /bin/sh\n    - /etc/matrixone/config/start.sh\n    env:\n    - name: POD_NAME\n      valueFrom:\n        fieldRef:\n          apiVersion: v1\n          fieldPath: metadata.name\n    - name: NAMESPACE\n      valueFrom:\n        fieldRef:\n          apiVersion: v1\n          fieldPath: metadata.namespace\n    - name: HEADLESS_SERVICE_NAME\n      value: mo-tp-cn-headless\n    - name: AWS_ACCESS_KEY_ID\n      valueFrom:\n        secretKeyRef:\n          key: AWS_ACCESS_KEY_ID\n          name: minio\n    - name: AWS_SECRET_ACCESS_KEY\n      valueFrom:\n        secretKeyRef:\n          key: AWS_SECRET_ACCESS_KEY\n          name: minio\n    - name: AWS_REGION\n      value: us-west-2\n    image: matrixorigin/matrixone:nightly-144f3be4\n    imagePullPolicy: Always\n    name: main\n    resources: {}\n    terminationMessagePath: /dev/termination-log\n    terminationMessagePolicy: File\n    volumeMounts:\n    - mountPath: /etc/matrixone/config\n      name: config\n      readOnly: true\n    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount\n      name: kube-api-access-ngpcs\n      readOnly: true\n  dnsPolicy: ClusterFirst\n  enableServiceLinks: true\n  hostname: mo-tp-cn-0\n  nodeName: node0\n  preemptionPolicy: PreemptLowerPriority\n  priority: 0\n  readinessGates:\n  - conditionType: InPlaceUpdateReady\n  - conditionType: KruisePodReady\n  restartPolicy: Always\n  schedulerName: default-scheduler\n  securityContext: {}\n  serviceAccount: default\n  serviceAccountName: default\n  subdomain: mo-tp-cn-headless\n  terminationGracePeriodSeconds: 30\n  tolerations:\n  - effect: NoExecute\n    key: node.kubernetes.io/not-ready\n    operator: Exists\n    tolerationSeconds: 300\n  - effect: NoExecute\n    key: node.kubernetes.io/unreachable\n    operator: Exists\n    tolerationSeconds: 300\n  volumes:\n  - configMap:\n      defaultMode: 420\n      name: mo-tp-cn-config-5abf454\n    name: config\n  - name: kube-api-access-ngpcs\n    projected:\n      defaultMode: 420\n      sources:\n      - serviceAccountToken:\n          expirationSeconds: 3607\n          path: token\n      - configMap:\n          items:\n          - key: ca.crt\n            path: ca.crt\n          name: kube-root-ca.crt\n      - downwardAPI:\n          items:\n          - fieldRef:\n              apiVersion: v1\n              fieldPath: metadata.namespace\n            path: namespace\nstatus:\n  conditions:\n  - lastProbeTime: null\n    lastTransitionTime: \"2023-05-07T13:01:50Z\"\n    status: \"True\"\n    type: KruisePodReady\n  - lastProbeTime: null\n    lastTransitionTime: \"2023-05-07T13:01:50Z\"\n    status: \"True\"\n    type: InPlaceUpdateReady\n  - lastProbeTime: null\n    lastTransitionTime: \"2023-05-07T13:01:50Z\"\n    status: \"True\"\n    type: Initialized\n  - lastProbeTime: null\n    lastTransitionTime: \"2023-05-07T13:01:54Z\"\n    status: \"True\"\n    type: Ready\n  - lastProbeTime: null\n    lastTransitionTime: \"2023-05-07T13:01:54Z\"\n    status: \"True\"\n    type: ContainersReady\n  - lastProbeTime: null\n    lastTransitionTime: \"2023-05-07T13:01:50Z\"\n    status: \"True\"\n    type: PodScheduled\n  containerStatuses:\n  - containerID: docker://679d672a330d7318f97a90835dacefcdd03e8a08062b8844d438f8cdd6bcdc8f\n    image: matrixorigin/matrixone:nightly-144f3be4\n    imageID: docker-pullable://matrixorigin/matrixone@sha256:288fe3d626c6aa564684099e4686a9d4b28e16fdd16512bd968a67bb41d5aaa3\n    lastState: {}\n    name: main\n    ready: true\n    restartCount: 0\n    started: true\n    state:\n      running:\n        startedAt: \"2023-05-07T13:01:54Z\"\n  hostIP: 10.206.134.14\n  phase: Running\n  podIP: 10.234.60.53\n  podIPs:\n  - ip: 10.234.60.53\n  qosClass: BestEffort\n  startTime: \"2023-05-07T13:01:50Z\"\n</code></pre>"},{"location":"MatrixOne/Deploy/health-check-resource-monitoring/#matrixone-monitoring","title":"MatrixOne Monitoring","text":""},{"location":"MatrixOne/Deploy/health-check-resource-monitoring/#view-cluster-status","title":"View cluster status","text":"<p>During Operator deployment, we defined <code>matrixOnecluster</code> as the custom resource name for the entire cluster. By checking MatrixOneCluster, we can tell if the cluster is functioning correctly. You can check with the following command:</p> <pre><code>MO_NAME=\"mo\"\nNS=\"mo-hn\"\nkubectl get matrixonecluster -n ${NS} ${MO_NAME}\n</code></pre> <p>If the status is \"Ready\", the cluster is healthy. If the status is \"NotReady\", further troubleshooting is required.</p> <pre><code>[root@master0 ~]# MO_NAME=\"mo\"\n[root@master0 ~]# NS=\"mo-hn\"\n[root@master0 ~]# kubectl get matrixonecluster -n${NS} ${MO_NAME}\nNAME   LOG   TN    TP    AP    VERSION            PHASE   AGE\nmo     3     1     1           nightly-144f3be4   Ready   13h\n</code></pre> <p>To view details of the MatrixOne cluster status, you can run the following command:</p> <pre><code>kubectl describe matrixonecluster -n${NS} ${MO_NAME}\n</code></pre> <pre><code>[root@master0 ~]# kubectl describe matrixonecluster -n${NS} ${MO_NAME}\nName:         mo\nNamespace:    mo-hn\nLabels:       &lt;none&gt;\nAnnotations:  &lt;none&gt;\nAPI Version:  core.matrixorigin.io/v1alpha1\nKind:         MatrixOneCluster\nMetadata:\n  Creation Timestamp:  2023-05-07T12:54:17Z\n  Finalizers:\n    matrixorigin.io/matrixonecluster\n  Generation:  2\n  Managed Fields:\n    API Version:  core.matrixorigin.io/v1alpha1\n    Fields Type:  FieldsV1\n    fieldsV1:\n      f:metadata:\n        f:annotations:\n          .:\n          f:kubectl.kubernetes.io/last-applied-configuration:\n      f:spec:\n        .:\n        f:Tn:\n          .:\n          f:config:\n          f:replicas:\n        f:imagePullPolicy:\n        f:imageRepository:\n        f:logService:\n          .:\n          f:config:\n          f:pvcRetentionPolicy:\n          f:replicas:\n          f:sharedStorage:\n            .:\n            f:s3:\n              .:\n              f:endpoint:\n              f:secretRef:\n              f:type:\n          f:volume:\n            .:\n            f:size:\n        f:tp:\n          .:\n          f:config:\n          f:nodePort:\n          f:replicas:\n          f:serviceType:\n        f:version:\n    Manager:      kubectl-client-side-apply\n    Operation:    Update\n    Time:         2023-05-07T12:54:17Z\n    API Version:  core.matrixorigin.io/v1alpha1\n    Fields Type:  FieldsV1\n    fieldsV1:\n      f:metadata:\n        f:finalizers:\n          .:\n          v:\"matrixorigin.io/matrixonecluster\":\n    Manager:      manager\n    Operation:    Update\n    Time:         2023-05-07T12:54:17Z\n    API Version:  core.matrixorigin.io/v1alpha1\n    Fields Type:  FieldsV1\n    fieldsV1:\n      f:spec:\n        f:logService:\n          f:sharedStorage:\n            f:s3:\n              f:path:\n    Manager:      kubectl-edit\n    Operation:    Update\n    Time:         2023-05-07T13:00:53Z\n    API Version:  core.matrixorigin.io/v1alpha1\n    Fields Type:  FieldsV1\n    fieldsV1:\n      f:status:\n        .:\n        f:cnGroups:\n          .:\n          f:desiredGroups:\n          f:readyGroups:\n          f:syncedGroups:\n        f:conditions:\n        f:credentialRef:\n        f:Tn:\n          .:\n          f:availableStores:\n          f:conditions:\n        f:logService:\n          .:\n          f:availableStores:\n          f:conditions:\n          f:discovery:\n            .:\n            f:address:\n            f:port:\n        f:phase:\n    Manager:         manager\n    Operation:       Update\n    Subresource:     status\n    Time:            2023-05-07T13:02:12Z\n  Resource Version:  72671\n  UID:               be2355c0-0c69-4f0f-95bb-9310224200b6\nSpec:\n  Tn:\n    Config:  \n[dn]\n\n[dn.Ckp]\nflush-interval = \"60s\"\nglobal-interval = \"100000s\"\nincremental-interval = \"60s\"\nmin-count = 100\nscan-interval = \"5s\"\n\n[dn.Txn]\n\n[dn.Txn.Storage]\nbackend = \"TAE\"\nlog-backend = \"logservice\"\n\n[log]\nformat = \"json\"\nlevel = \"error\"\nmax-size = 512\n\n    Replicas:  1\n    Resources:\n    Service Args:\n      -debug-http=:6060\n    Shared Storage Cache:\n      Memory Cache Size:  0\n  Image Pull Policy:      Always\n  Image Repository:       matrixorigin/matrixone\n  Log Service:\n    Config:  \n[log]\nformat = \"json\"\nlevel = \"error\"\nmax-size = 512\n\n    Initial Config:\n      TN Shards:           1\n      Log Shard Replicas:  3\n      Log Shards:          1\n    Pvc Retention Policy:  Retain\n    Replicas:              3\n    Resources:\n    Service Args:\n      -debug-http=:6060\n    Shared Storage:\n      s3:\n        Endpoint:           http://minio.mostorage:9000\n        Path:               minio-mo\n        s3RetentionPolicy:  Retain\n        Secret Ref:\n          Name:             minio\n        Type:               minio\n    Store Failure Timeout:  10m0s\n    Volume:\n      Size:  1Gi\n  Tp:\n    Config:  \n[cn]\n\n[cn.Engine]\ntype = \"distributed-tae\"\n\n[log]\nformat = \"json\"\nlevel = \"debug\"\nmax-size = 512\n\n    Node Port:  31474\n    Replicas:   1\n    Resources:\n    Service Args:\n      -debug-http=:6060\n    Service Type:  NodePort\n    Shared Storage Cache:\n      Memory Cache Size:  0\n  Version:                nightly-144f3be4\nStatus:\n  Cn Groups:\n    Desired Groups:  1\n    Ready Groups:    1\n    Synced Groups:   1\n  Conditions:\n    Last Transition Time:  2023-05-07T13:02:14Z\n    Message:               the object is synced\n    Reason:                empty\n    Status:                True\n    Type:                  Synced\n    Last Transition Time:  2023-05-07T13:02:14Z\n    Message:               \n    Reason:                AllSetsReady\n    Status:                True\n    Type:                  Ready\n  Credential Ref:\n    Name:  mo-credential\n  Tn:\n    Available Stores:\n      Last Transition:  2023-05-07T13:01:48Z\n      Phase:            Up\n      Pod Name:         mo-tn-0\n    Conditions:\n      Last Transition Time:  2023-05-07T13:01:48Z\n      Message:               the object is synced\n      Reason:                empty\n      Status:                True\n      Type:                  Synced\n      Last Transition Time:  2023-05-07T13:01:48Z\n      Message:               \n      Reason:                empty\n      Status:                True\n      Type:                  Ready\n  Log Service:\n    Available Stores:\n      Last Transition:  2023-05-07T13:01:25Z\n      Phase:            Up\n      Pod Name:         mo-log-0\n      Last Transition:  2023-05-07T13:01:25Z\n      Phase:            Up\n      Pod Name:         mo-log-1\n      Last Transition:  2023-05-07T13:01:25Z\n      Phase:            Up\n      Pod Name:         mo-log-2\n    Conditions:\n      Last Transition Time:  2023-05-07T13:01:25Z\n      Message:               the object is synced\n      Reason:                empty\n      Status:                True\n      Type:                  Synced\n      Last Transition Time:  2023-05-07T13:01:25Z\n      Message:               \n      Reason:                empty\n      Status:                True\n      Type:                  Ready\n    Discovery:\n      Address:  mo-log-discovery.mo-hn.svc\n      Port:     32001\n  Phase:        Ready\nEvents:\n  Type    Reason            Age                From              Message\n  ----    ------            ----               ----              -------\n  Normal  ReconcileSuccess  29m (x2 over 13h)  matrixonecluster  object is synced\n</code></pre>"},{"location":"MatrixOne/Deploy/health-check-resource-monitoring/#view-component-status","title":"View component status","text":"<p>The current MatrixOne cluster includes the following components: TN, CN, and Log Service, which correspond to the custom resource types TNSet, CNSet, and LogSet, respectively, and these objects are generated by the MatrixOneCluster controller.</p> <p>To check whether each component is standard, take TN as an example; you can run the following command:</p> <pre><code>SET_TYPE=\"tnset\"\nNS=\"mo-hn\"\nkubectl get ${SET_TYPE} -n ${NS}\n</code></pre> <p>This will display status information for the TN component as follows:</p> <pre><code>[root@master0 ~]# SET_TYPE=\"tnset\"\n[root@master0 ~]# NS=\"mo-hn\"\n[root@master0 ~]# kubectl get ${SET_TYPE} -n${NS}\nNAME   IMAGE                                     REPLICAS   AGE\nmo     matrixorigin/matrixone:nightly-144f3be4   1          13h\n[root@master0 ~]# SET_TYPE=\"cnset\"\n[root@master0 ~]# kubectl get ${SET_TYPE} -n${NS}\nNAME    IMAGE                                     REPLICAS   AGE\nmo-tp   matrixorigin/matrixone:nightly-144f3be4   1          13h\n[root@master0 ~]# SET_TYPE=\"logset\"                 \n[root@master0 ~]# kubectl get ${SET_TYPE} -n${NS}\nNAME   IMAGE                                     REPLICAS   AGE\nmo     matrixorigin/matrixone:nightly-144f3be4   3          13h\n</code></pre>"},{"location":"MatrixOne/Deploy/health-check-resource-monitoring/#view-pod-status","title":"View Pod Status","text":"<p>In addition, you can directly check the native k8s objects generated in the MO cluster to confirm the cluster's health, usually by querying the pod.</p> <pre><code>NS=\"mo-hn\"\nkubectl get pod -n ${NS}\n</code></pre> <p>This will display status information for the Pod.</p> <pre><code>[root@master0 ~]# NS=\"mo-hn\"\n[root@master0 ~]# kubectl get pod -n${NS}\nNAME                                 READY   STATUS    RESTARTS   AGE\nmatrixone-operator-f8496ff5c-fp6zm   1/1     Running   0          19h\nmo-tn-0                              1/1     Running   0          13h\nmo-log-0                             1/1     Running   0          13h\nmo-log-1                             1/1     Running   0          13h\nmo-log-2                             1/1     Running   0          13h\nmo-tp-cn-0                           1/1     Running   0          13h\n</code></pre> <p>Typically, the Running state indicates that the Pod is functioning normally. But there are also some special cases where the Pod status may be Running, but the MatrixOne cluster is abnormal. For example, connecting to a MatrixOne cluster through a MySQL client is impossible. In this case, you can look further into the Pod's logs to check for unusual output.</p> <pre><code>NS=\"mo-hn\"\nPOD_NAME=\"[the name of the pod returned above]\" # For example, mo-tp-cn-0\nkubectl logs ${POD_NAME} -n ${NS}\n</code></pre> <p>If the Pod status is not Running, such as Pending, you can check the Pod events (Events) to confirm the cause of the exception. Taking the previous example, because the cluster resources cannot satisfy the request of <code>mo-tp-cn-3</code>, the Pod cannot be scheduled and is Pending. In this case, you can solve it by expanding node resources.</p> <pre><code>kubectl describe pod ${POD_NAME} -n${NS}\n</code></pre> <p></p>"},{"location":"MatrixOne/Deploy/import-data-from-minio-to-mo/","title":"Import data from local Minio to MatrixOne","text":"<p>In a distributed MatrixOne cluster, in addition to importing data locally and from public cloud object storage to MatrixOne, data can be imported through the local Minio component. This method is also feasible to import data to MatrixOne if there is no public network access or the imported file is too large to exceed the local disk space.</p> <p>This article will guide you on importing CSV files using local Minio. And the environment introduced in this document will be based on MatrixOne Distributed Cluster Deployment; ensure the entire MatrixOne has been installed.</p>"},{"location":"MatrixOne/Deploy/import-data-from-minio-to-mo/#steps","title":"steps","text":""},{"location":"MatrixOne/Deploy/import-data-from-minio-to-mo/#import-data","title":"Import Data","text":"<p>You can log in to the Minio GUI by visiting http://192.168.56.10:32001. For the account and password, refer the rootUser and rootPassword created during the installation and deployment of Minio in MatrixOne Distributed Cluster Deployment. After logging in, you need to create a dedicated bucket <code>load-from-minio</code>, and upload the corresponding CSV file into the bucket.</p> <p></p> <p>The example we use here is a simple <code>addresses.csv</code> example containing only 6 rows of data.</p> <p></p>"},{"location":"MatrixOne/Deploy/import-data-from-minio-to-mo/#get-minios-endpoint","title":"Get Minio's Endpoint","text":"<p>The principle of loading data from local Minio to MatrixOne cluster is the same as Import the data from S3 Compatible object storage are precisely the same, and their grammatical structure is the same. However, the public cloud vendor will give the parameters in the public cloud method, while the parameters in the local Minio need to be set by yourself.</p> <pre><code>LOAD DATA\n    | URL s3options {\"endpoint\"='&lt;string&gt;', \"access_key_id\"='&lt;string&gt;', \"secret_access_key\"='&lt;string&gt;', \"bucket\"='&lt;string&gt;', \"role_arn\"='xxxx', \"external_id\"='yyy', \"filepath\"='&lt;string&gt;', \"region\"='&lt;string&gt;', \"compression\"='&lt;string&gt;', \"provider\"='&lt;string&gt;'}\n    INTO TABLE tbl_name\n    [{FIELDS | COLUMNS}\n        [TERMINATED BY 'string']\n        [[OPTIONALLY] ENCLOSED BY 'char']\n        [ESCAPED BY 'char']\n    ]\n    [IGNORE number {LINES | ROWS}]\n    [PARALLEL {'TRUE' | 'FALSE'}]\n</code></pre> <p>To load data from the local Minio, you first need to find the Minio endpoint. Before the actual operation, let's understand the architecture of the entire call link.</p>"},{"location":"MatrixOne/Deploy/import-data-from-minio-to-mo/#minio-access-architecture","title":"Minio Access Architecture","text":"<p>Logically speaking, MatrixOne communicates with Minio through Minio's access port endpoint and obtains data from it, as shown in the following figure:</p> <p></p> <p>Minio is managed in Kubernetes (K8s), and external services must be accessed through the Service (SVC) of K8s. The actual execution of tasks is done in K8s Pods. SVC can ensure that the same port is always maintained for external applications no matter how the Pod changes. The association between SVC and Pod needs to establish rules through the Endpoint (EP) in K8s. Therefore, MatrixOne is connected to the Minio service through SVC and the specific architecture is shown in the following figure:</p> <p></p>"},{"location":"MatrixOne/Deploy/import-data-from-minio-to-mo/#actual-command","title":"Actual command","text":"<p>When we installed Minio, we created a namespace named mostorage. We can find this endpoint through the following K8s commands.</p> <ul> <li><code>kubectl get svc -n ${ns}</code>: List all SVCs under this namespace.</li> <li><code>kubectl get pod -n${ns}</code>: List all Pods under this namespace.</li> <li><code>kubectl get ep -n ${ns}</code>: List all forwarding rule relationships under this namespace.</li> </ul> <p>Examples are as follows:</p> <pre><code>root@VM-32-16-debian:~# ns=\"mostorage\"\nroot@VM-32-16-debian:~# kubectl get svc -n${ns}\nNAME             TYPE        CLUSTER-IP   EXTERNAL-IP   PORT(S)          AGE\nminio            ClusterIP   10.96.1.65   &lt;none&gt;        80/TCP           127d\nminio1-console   NodePort    10.96.3.53   &lt;none&gt;        9090:30869/TCP   127d\nminio1-hl        ClusterIP   None         &lt;none&gt;        9000/TCP         127d\nroot@VM-32-16-debian:~# kubectl get pod -n${ns}\nkubectl get ep -n${ns}NAME            READY   STATUS    RESTARTS   AGE\nminio1-ss-0-0   1/1     Running   0          106d\nminio1-ss-0-1   1/1     Running   0          106d\nminio1-ss-0-2   1/1     Running   0          106d\nminio1-ss-0-3   1/1     Running   0          106d\nroot@VM-32-16-debian:~# kubectl get ep -n${ns}\nNAME             ENDPOINTS                                                                 AGE\nminio            100.92.250.195:9000,100.92.250.200:9000,100.92.250.201:9000 + 1 more...   127d\nminio1-console   100.92.250.195:9090,100.92.250.200:9090,100.92.250.201:9090 + 1 more...   127d\nminio1-hl        100.92.250.195:9000,100.92.250.200:9000,100.92.250.201:9000 + 1 more...   127d\n</code></pre> <p>The access address of SVC is the terminal address that needs to be added to the <code>Load</code> statement. To construct the SVC address, you can use <code>${service_name}.{namespace}.svc.cluster.local</code> (the last three digits can be omitted). The results of the following commands show that the SVC of minio1-hl uses 9000 as the external forwarding port, and the SVC of minio uses 80 as the external forwarding port. Therefore, the final endpoint of Minio connected to Mostorage is: http://minio1-hl.mostorage:9000 or http://minio.mostorage:80.</p>"},{"location":"MatrixOne/Deploy/import-data-from-minio-to-mo/#build-and-execute-the-load-statement","title":"Build and execute the Load statement","text":"<ol> <li> <p>Build the corresponding table according to the data structure of <code>addresses.csv</code>:</p> <pre><code>create table address (firstname varchar(50), lastname varchar(50), address varchar(500), city varchar(20), state varchar(10), postcode varchar(20));\n</code></pre> </li> <li> <p>Referring to the syntax structure of Load S3, fill in the parameter information in the <code>Load</code> statement:</p> <ul> <li>endpoint, access_key_id: the login account of minio</li> <li>secret_access_key: the login password of minio)</li> <li>bucket: the name of the bucket</li> <li>filepath: the path to the imported file</li> </ul> <p>It should be noted that from the local Minio, a <code>\"provider\"=\"minio\"</code> needs to be added to the parameter string to indicate that the underlying storage source is the local Minio, and finally form the following SQL statement.</p> <pre><code>MySQL [stock]&gt; load data url s3option{\"endpoint\"='http://minio.mostorage:80',\"access_key_id\"='rootuser', \"secret_access_key\"='rootpass123',\"bucket\"='load-from-minio', \"filepath\"='/addresses.csv', \"compression\"='none', \"provider\"=\"minio\"} INTO TABLE address FIELDS TERMINATED BY ',' OPTIONALLY ENCLOSED BY '\"' LINES TERMINATED BY '\\n' PARALLEL 'TRUE';\nQuery OK, 6 rows affected (2.302 sec)\n</code></pre> </li> </ol> <p>Note</p> <p>\"provider\"=\"minio\" is only valid in the local Minio environment. If you import data from the object storage of the public cloud, you don't need to add this parameter.</p>"},{"location":"MatrixOne/Deploy/mgmt-cn-group-using-proxy/","title":"Managing CN Groups with Proxy","text":"<p>Proxy is a new system component introduced in MatrixOne's 0.8 version. It can achieve account and load isolation, among other functionalities, through traffic proxying and forwarding. For the technical design of the Proxy, refer to Detailed Proxy Architecture.</p> <p>This document primarily explains using Proxy to establish different CN groups for independent resource management of accounts and loads.</p>"},{"location":"MatrixOne/Deploy/mgmt-cn-group-using-proxy/#system-architecture","title":"System Architecture","text":"<p>As illustrated below, users first connect to the Proxy module. Based on the identity and label information in the user connection string, the Proxy component distributes the user's database connection to the corresponding CN group. Other CN groups will not receive this user connection nor participate in the computation process related to this connection.</p> <p>A CN group is a logical CN group composed of CN nodes with the same attributes and size. It is a unit in the MatrixOne cluster used to isolate different resource groups. Each CN group can contain from 1 to infinite CN nodes and can use a series of labels to define its attributes. For example, determining the Account label corresponding to an account and forwarding the connection to a CN group with corresponding labels can realize account resource and business load isolation. With the feature that CN nodes in a CN group can scale horizontally indefinitely, an independent expansion for accounts or specified loads can be achieved.</p> <p>To ensure the high availability of Proxy, at least 2 replicas should be set up in the cluster.</p> <p></p> <p>When performing CN (Compute Node) downsizing, Proxy behaves as follows in the YAML file:</p> <ul> <li> <p>Session Migration with the Same Label: When the number of CN replicas decreases, sessions with the same label will be migrated to other downsized CN nodes. This ensures the continuity and availability of sessions associated with specific labels.</p> </li> <li> <p>Session Migration with Different Labels: If a CN replica with a particular label is set to 0 or removed, based on label matching rules, sessions associated with that label will be migrated to idle labels in future sessions.</p> </li> <li> <p>Label Cancellation without Matching Labels: If a label is cancelled and no matching label exists, related sessions will be closed because there are no target CNs to receive these sessions.</p> </li> </ul> <p>Proxy manages session migration and closure during CN downsizing to ensure the isolation between workloads and tenants, as well as the continuity of business operations.</p>"},{"location":"MatrixOne/Deploy/mgmt-cn-group-using-proxy/#steps","title":"Steps","text":"<p>The environment discussed in this document for managing CN groups using Proxy is based on the environment of MatrixOne Distributed Cluster Deployment.</p> <p>To help you understand resource isolation and allocation, you can refer to the table below, which illustrates the distribution of each hardware node in the environment of MatrixOne Distributed Cluster Deployment, as follows:</p> Host Internal IP External IP Memory CPU Disk Role kuboardspray 10.206.0.6 1.13.2.100 2G 2C 50G Jump server master0 10.206.134.8 118.195.255.252 8G 2C 50G master etcd node0 10.206.134.14 1.13.13.199 8G 2C 50G worker"},{"location":"MatrixOne/Deploy/mgmt-cn-group-using-proxy/#step-one-enable-proxy","title":"Step One: Enable Proxy","text":"<p>To enable the Proxy component in the MatrixOne distributed cluster, you need to specify the required Proxy topology when creating the cluster, or after adding the Proxy topology to the existing cluster, execute <code>kubectl apply</code> to enable the Proxy component. The detailed steps are as follows:</p> <ol> <li> <p>Modify the <code>mo.yaml</code> file of the MatrixOne cluster:</p> <pre><code>metadata:\n  name: mo\n  namespace: mo-hn\nspec:\n+ proxy:\n+   replicas: 2 # For high availability, at least 2 replicas are required for the Proxy\n</code></pre> </li> <li> <p>After the modifications, run the <code>mo.yaml</code> file using the command below:</p> <pre><code>kubectl apply -f mo.yaml\n</code></pre> </li> <li> <p>Run <code>kubectl get pod -nmo-hn</code> to check if the Proxy has started properly:</p> <pre><code>root@HOST-10-206-134-16:~# kubectl get pod -nmo-hn\nNAME             READY   STATUS    RESTARTS   AGE\nmo-tn-0          1/1     Running   0          2m51s\nmo-log-0         1/1     Running   0          3m25s\nmo-log-1         1/1     Running   0          3m25s\nmo-log-2         1/1     Running   0          3m25s\nmo-proxy-69zjf   1/1     Running   0          2m51s\nmo-proxy-fpn2g   1/1     Running   0          2m51s\nmo-tp-cn-0       1/1     Running   0          2m25s\n</code></pre> </li> <li> <p>The code example for a successful start is shown above. This completes the start of the minimized Proxy component. You can use <code>kubectl get svc -nmo-hn</code> to connect to the cluster via the Proxy's SVC address.</p> <pre><code>root@HOST-10-206-134-16:~# kubectl get svc -nmo-hn\nNAME                TYPE        CLUSTER-IP    EXTERNAL-IP   PORT(S)          AGE\nmo-tn-headless      ClusterIP   None          &lt;none&gt;        &lt;none&gt;           70m\nmo-log-discovery    ClusterIP   10.96.3.186   &lt;none&gt;        32001/TCP        71m\nmo-log-headless     ClusterIP   None          &lt;none&gt;        &lt;none&gt;           71m\nmo-proxy            NodePort    10.96.1.153   &lt;none&gt;        6001:31429/TCP   70m\nmo-tp-cn            ClusterIP   10.96.1.43    &lt;none&gt;        6001/TCP         70m\nmo-tp-cn-headless   ClusterIP   None          &lt;none&gt;        &lt;none&gt;           70m\nroot@HOST-10-206-134-16:~# mysql -h 10.96.1.153 -P6001 -uroot -p111\nmysql: [Warning] Using a password on the command line interface can be insecure.\nWelcome to the MySQL monitor.  Commands end with ; or \\g.\nYour MySQL connection id is 2064\nServer version: 8.0.30-MatrixOne-v0.5.0 MatrixOne\n\nCopyright (c) 2000, 2023, Oracle and/or its affiliates.\n\nOracle is a registered trademark of Oracle Corporation and/or its\naffiliates. Other names may be trademarks of their respective owners.\n\nType 'help;' or '\\h' for help. Type '\\c' to clear the current input statement.\n\nmysql&gt;\n</code></pre> </li> </ol> <p>If multiple CNs exist in the entire cluster, Proxy will automatically implement connection-level load balancing and evenly distribute the user's connections to different CNs. You can query the system table <code>system_metrics.server_connections</code> to view the number of user connections on each CN.</p>"},{"location":"MatrixOne/Deploy/mgmt-cn-group-using-proxy/#step-two-set-up-cn-groups","title":"Step Two: Set Up CN Groups","text":"<p>In the <code>mo.yaml</code> file of the MatrixOne cluster, you need to configure CN groups by setting the <code>cnGroups</code> field and configure the <code>cnLabels</code> field in each <code>cnGroups</code> to set the labels of all CNs in the CN group. The Proxy will route and forward according to the connection labels. For example, you have set up two CN groups named <code>cn-set1</code> and <code>cn-set2</code> in the following example. Each CN group can have an independent number of replicas, log levels, CN parameter configurations, and CN labels.</p> <p>The labels of CN groups adopt one-to-many groups of Key/value formats, in which there is a one-to-many relationship between each group of Key and value, i.e., each Key can have multiple values.</p> <p>The detailed steps are as follows:</p> <ol> <li> <p>Refer to the configuration parameter example below to configure the labels of the CN group:</p> <pre><code>metadata:\n  name: mo\n  namespace: mo-hn\nspec:\n+ cnGroups:\n+ - name: cn-set1\n+   replicas: 1\n+   cnLabels:\n+   - key: \"cn-set1\"\n+     values: [\"1\", \"high\"]\n+   - key: \"account\"\n+     values: [\"acc1\"]\n+\n+ - name: cn-set2\n+   replicas: 1\n+   cnLabels:\n+   - key: \"cn-set2\"\n+           values: [\"2\", \"medium\"]\n+   - key: \"account\"\n+     values: [\"acc2\"]  \n</code></pre> </li> <li> <p>After the modifications, run the <code>mo.yaml</code> file using the command below:</p> <pre><code>kubectl apply -f mo.yaml\n</code></pre> </li> <li> <p>Run <code>kubectl get pod -nmo-hn</code> to check if the Proxy has adequately started:</p> </li> </ol> <pre><code>root@HOST-10-206-134-16:~# kubectl get pod -nmo-hn\nNAME              READY   STATUS    RESTARTS   AGE\nmo-cn-set1-cn-0   1/1     Running   0          6s\nmo-cn-set2-cn-0   1/1     Running   0          6s\nmo-tn-0           1/1     Running   0          97m\nmo-log-0          1/1     Running   0          97m\nmo-log-1          1/1     Running   0          97m\nmo-log-2          1/1     Running   0          97m\nmo-proxy-69zjf    1/1     Running   0          97m\nmo-proxy-fpn2g    1/1     Running   0          97m\n</code></pre> <p>The code example for a successful start is shown above.</p> <p>The label setting of CN groups is very flexible, but it is most commonly used for account and load isolation.</p> <p>For how to achieve account isolation and load isolation, continue to the following sections.</p>"},{"location":"MatrixOne/Deploy/mgmt-cn-group-using-proxy/#implementing-account-isolation","title":"Implementing account Isolation","text":"<p>MatrixOne 0.7 version supports About MatrixOne Privilege Management data isolation. If account load isolation is to be implemented, it must be done by configuring Proxy and CN groups.</p>"},{"location":"MatrixOne/Deploy/mgmt-cn-group-using-proxy/#ordinary-accounts","title":"Ordinary accounts","text":"<p>In the label setting of CN groups, the <code>account</code> label is a reserved field used to match accounts.</p> <p>In this chapter, assuming that account load isolation needs to be implemented for <code>acc1</code> and <code>acc2</code>, you can refer to the detailed steps below:</p> <p>Note</p> <p>Only users with system account permissions can configure load isolation for ordinary accounts.</p> <ol> <li> <p>Log into the MatrixOne cluster using the system account. For the username and password, please look at your company's Database Administrator. After logging into the MatrixOne cluster, create two new accounts, <code>acc1</code> and <code>acc2</code>:</p> <pre><code>-- Create a new account acc1 with a password of 123456 (a simple password is set here, which is only used as an example)\nmysql&gt; create account acc1 admin_name 'admin' identified by '123456';\n-- Create a new account acc2 with a password of 123456 (a simple password is set here, which is only used as an example)\nmysql&gt; create account acc2 admin_name 'admin' identified by '123456';\n</code></pre> </li> <li> <p>Modify the <code>mo.yaml</code> file of the MatrixOne cluster, and label the two CN groups with <code>account:acc1</code> and <code>account:acc2</code> respectively, corresponding to tenants named <code>acc1</code> and <code>acc2</code> respectively:</p> <pre><code>metadata:\n  name: mo\n  namespace: mo-hn\nspec:\n+ cnGroups:\n+ - name: cn-set1\n+   replicas: 1\n+   cnLabels:\n+   - key: \"account\"\n+     values: [\"acc1\"]\n+\n+ - name: cn-set2\n+   replicas: 1\n+   cnLabels:\n+   - key: \"account\"\n+     values: [\"acc2\"]  \n</code></pre> </li> <li> <p>Modify the <code>mo.yaml</code> file of the MatrixOne cluster, and label the two CN groups with <code>account:acc1</code> and <code>account:acc2</code> respectively, corresponding to the accounts named <code>acc1</code> and <code>acc2</code> respectively:</p> </li> </ol> <pre><code>-- acc1 account login MatrixOne\nroot@HOST-10-206-134-7:~# mysql -h 10.96.1.153 -uacc1:admin -P6001 -p123456\nmysql: [Warning] Using a password on the command line interface can be insecure.\nWelcome to the MySQL monitor.  Commands end with ; or \\g.\nYour MySQL connection id is 32309\nServer version: 8.0.30-MatrixOne-v0.5.0 MatrixOne\n\nCopyright (c) 2000, 2023, Oracle and/or its affiliates.\n\nOracle is a registered trademark of Oracle Corporation and/or its\naffiliates. Other names may be trademarks of their respective\nowners.\n\nType 'help;' or '\\h' for help. Type '\\c' to clear the current input statement.\n-- acc1 checks which CN groups are used for login\nmysql&gt; show backend servers;\n+--------------------------------------+-------------------------------------------------------+------------+------------------------------+\n| UUID                                 | Address                                               | Work State | Labels                       |\n+--------------------------------------+-------------------------------------------------------+------------+------------------------------+\n| 32333337-3966-3137-3032-613035306561 | mo-cn-set1-cn-0.mo-cn-set1-cn-headless.mo-hn.svc:6001 | Working    | account:acc1;cn-set1:1,high; |\n+--------------------------------------+-------------------------------------------------------+------------+------------------------------+\n1 row in set (0.00 sec)\n</code></pre> <pre><code>-- acc2 account login MatrixOne\nroot@HOST-10-206-134-7:~# mysql -h 10.96.1.153 -uacc2:admin -P6001 -p123456\nmysql: [Warning] Using a password on the command line interface can be insecure.\nWelcome to the MySQL monitor.  Commands end with ; or \\g.\nYour MySQL connection id is 32640\nServer version: 8.0.30-MatrixOne-v0.5.0 MatrixOne\n\nCopyright (c) 2000, 2023, Oracle and/or its affiliates.\n\nOracle is a registered trademark of Oracle Corporation and/or its\naffiliates. Other names may be trademarks of their respective\nowners.\n\nType 'help;' or '\\h' for help. Type '\\c' to clear the current input statement.\n-- acc2 checks which CN groups are used for login\nmysql&gt; show backend servers;\n+--------------------------------------+-------------------------------------------------------+------------+--------------------------------+\n| UUID                                 | Address                                               | Work State | Labels                         |\n+--------------------------------------+-------------------------------------------------------+------------+--------------------------------+\n| 33663265-3234-3365-3737-333030613535 | mo-cn-set2-cn-0.mo-cn-set2-cn-headless.mo-hn.svc:6001 | Working    | account:acc2;cn-set2:2,medium; |\n+--------------------------------------+-------------------------------------------------------+------------+--------------------------------+\n1 row in set (0.00 sec)\n</code></pre> <p>If an ordinary account does not have a corresponding CN group, then the account cannot log in successfully. For example, if you create a account <code>acc3</code> that does not correspond to a CN group label and try to log in, you will get a <code>no available CN server</code> error.</p> <pre><code>mysql&gt; create account acc3 admin_name 'admin' identified by '123456';\nroot@HOST-10-206-134-7:~# mysql -h 10.96.1.153 -uacc3:admin -P6001 -p123456\nmysql: [Warning] Using a password on the command line interface can be insecure.\nERROR 1045 (28000): internal error: no available CN server\n</code></pre>"},{"location":"MatrixOne/Deploy/mgmt-cn-group-using-proxy/#system-account","title":"System account","text":"<p>For system accounts, MatrixOne will automatically select an appropriate CN group to connect in the following order:</p> <ul> <li>Highest priority: Select the CN group configuring the <code>account</code> label as <code>sys</code>.</li> <li>Second highest priority: Select the CN group configuring other labels but not the <code>account</code> label.</li> <li>Medium priority: Select the CN group that has not configured labels.</li> <li>Low priority: If none of the above CN groups exist, then choose randomly from the existing CN groups.</li> </ul> <p>Based on this principle, system accounts will prioritize the CN groups specifically reserved for themselves or not for other accounts. However, suppose the above conditions are not met. In that case, the system account might share a CN group with other accounts and thus cannot ensure load isolation between the system account and ordinary accounts.</p>"},{"location":"MatrixOne/Deploy/mgmt-cn-group-using-proxy/#implementing-load-isolation","title":"Implementing Load Isolation","text":"<p>The use case for the Proxy agent is load isolation. In many standard business environments, such as high-concurrency writes, report generation, backup, and significant data export, traditional database solutions often require the deployment of specific instances to achieve load isolation. This approach also results in an additional burden of data synchronization.</p> <p>MatrixOne uses a Proxy to implement resource group division, which can flexibly combine CN groups with user-specified load labels. In the event of load changes, MatrixOne can adjust the scale of the resource group through software configuration, thus better adapting to changes.</p> <p>Using the above example, you can set the load labels of two CNs to <code>olap</code> and <code>oltp</code>, respectively. Then, use SSB to simulate the OLTP load and TPCH to simulate the OLAP load.</p> <p>Note</p> <p>When performing performance testing, you must first scale out the entire cluster.</p> <pre><code>metadata:\n  name: mo\n  namespace: mo-hn\nspec:\n+ cnGroups:\n+ - name: cn-set1\n+   replicas: 1\n+   cnLabels:\n+   - key: \"workload\"\n+     # The load label is set to olap\n+     values: [\"olap\"]\n+\n+ - name: cn-set2\n+   replicas: 1\n+   cnLabels:\n+   - key: \"workload\"\n+     # The load label is set to oltp\n+           values: [\"oltp\"]\n</code></pre> <p>After configuring the load of the cluster, you can connect to the cluster for load testing:</p> <ol> <li> <p>Connect via JDBC:</p> <p>Specify connection attributes in the JDBC connection string, and set the corresponding key and value. A colon separates the key and value <code>:</code>, and a comma separates multiple key-values <code>,</code>. Examples are as follows:</p> <pre><code>jdbc:mysql://localhost:6001/test_db1?serverTimezone=UTC&amp;connectionAttributes=workload:olap,another_key:test_value\n</code></pre> </li> <li> <p>Connect via MySQL client:</p> <p>Use the MySQL client to connect by extending the username field. Add <code>?</code> after the username (username), and the subsequent writing method follows the connectionAttributes format in JDBC. The difference from the connectionAttributes format in JDBC is that the key and value are separated by <code>=</code>, and between multiple key-values, Use commas <code>,</code> to separate them; examples are as follows:</p> <pre><code>mysql -h127.0.0.1 -uuser1?workload=olap,another_key=test_value -P6001 -pxxx\n</code></pre> </li> </ol>"},{"location":"MatrixOne/Deploy/update-MatrixOne-cluster/","title":"MatrixOne Distributed Cluster Upgrade","text":"<p>This document will introduce how to Rolling upgrade or Reinstall upgrade MatrixOne clusters.</p> <p>The upgraded environment introduced in this document will be based on the environment of MatrixOne Distributed Cluster Deployment.</p>"},{"location":"MatrixOne/Deploy/update-MatrixOne-cluster/#rolling-upgrade","title":"Rolling upgrade","text":"<p>Rolling upgrade is an online upgrade method; the MatrixOne cluster completes the software upgrade while ensuring that some or all services are available.</p> <p>According to the introduction in MatrixOne Distributed Cluster Deployment, the overall installation of MatrixOne is based on Kubernetes and MatrixOne Operator. Therefore, the rolling upgrade process is to realize automatic version updates by dynamically modifying the MatrixOne image version number in MatrixOne Operator.</p>"},{"location":"MatrixOne/Deploy/update-MatrixOne-cluster/#steps","title":"Steps","text":"<ol> <li> <p>Execute the following command on the terminal on the master0 node to enter the interface for dynamically modifying the <code>yaml</code> configuration file the operator uses.</p> <pre><code>mo_ns=\"mo-hn\" #the namespace of matrixone cluster\nmo_cluster_name=\"mo\" # The cluster name of matrixone, generally mo, is specified according to the name in the YAML file of the matrixonecluster object during deployment or can be confirmed by kubectl get matrixonecluster -n${mo_ns}\n# mo-hn and mo have been set in the mo.yaml file of the installation and deployment\nkubectl edit matrixonecluster ${mo_cluster_name} -n${mo_ns}\n</code></pre> </li> <li> <p>After entering edit mode, modify the value of <code>spec.version</code>; the parameters are as below:</p> <ul> <li> <p>${TAG}: corresponds to the image tag of Matrixone on dockerhub, for example: nightly-f0d52530</p> </li> <li> <p>${REPO_URL}: public mirror repository for Matrixone, the default is matrixorigin/matrixone. If the target version does not exist in the public mirror warehouse of MatrixOne, you also need to modify the URL of the mirror warehouse to the existing warehouse:</p> </li> </ul> <p></p> <p></p> </li> <li> <p>After completing the modification, press <code>:wq</code> to save. MatrixOne Operator will automatically pull the new version of the image and restart the component services, including Log Service, TN, and CN. You can also observe its running status through the following commands.</p> <pre><code>watch -e \"kubectl get pod -n${mo_ns}\"\n</code></pre> <pre><code>NAME                                 READY   STATUS    RESTARTS      AGE\nmatrixone-operator-f8496ff5c-fp6zm   1/1     Running   0             24h\nmo-tn-0                              1/1     Running   1 (51s ago)   18h\nmo-log-0                             1/1     Running   0             18h\nmo-log-1                             1/1     Running   1 (5s ago)    18h\nmo-log-2                             1/1     Running   1 (53s ago)   18h\nmo-tp-cn-0                           1/1     Running   1 (53s ago)   18h\n</code></pre> <p>If an error, crashbackoff, etc., occurs, you can further troubleshoot the problem by viewing the component log.</p> <pre><code>#pod_name is the name of the pod, such as mo-tn-0, mo-tp-cn-0\npod_name=mo-tn-0\nkubectl logs ${pod_name} -nmo-hn &gt; /tmp/tn.log\nvim /tmp/tn.log\n</code></pre> </li> <li> <p>After the <code>Restart</code> of the components in the MatrixOne cluster is completed, you can use the MySQL Client to connect to the cluster. The upgrade is successful if the connection is successful and the user data is complete.</p> <pre><code># Connect to the MySQL server using the 'mysql' command line tool\n# Use 'kubectl get svc/mo-tp-cn -n mo-hn -o jsonpath='{.spec.clusterIP}' ' to get the cluster IP address of the service in the Kubernetes cluster\n# The '-h' parameter specifies the hostname or IP address of the MySQL service\n# The '-P' parameter specifies the port number of the MySQL service, here is 6001\n# '-uroot' means log in with root user\n# '-p111' means the initial password is 111\nmysql -h $(kubectl get svc/mo-tp-cn -n mo-hn -o jsonpath='{.spec.clusterIP}') -P 6001 -uroot -p111\nroot@master0 ~]# mysql -h $(kubectl get svc/mo-tp-cn -n mo-hn -o jsonpath='{.spec.clusterIP}') -P 6001 -uroot -p111\nWelcome to the MariaDB monitor.  Commands end with ; or \\g.\nYour MySQL connection id is 1005\nServer version: 8.0.30-MatrixOne-v1.2.3 MatrixOne\n\nCopyright (c) 2000, 2018, Oracle, MariaDB Corporation Ab and others.\n\nType 'help;' or '\\h' for help. Type '\\c' to clear the current input statement.\nMySQL [(none)]&gt; show databases;\n+--------------------+\n| Database           |\n+--------------------+\n| mo_task            |\n| information_schema |\n| mysql              |\n| system_metrics     |\n| system             |\n| test               |\n| mo_catalog         |\n+--------------------+\n7 rows in set (0.01 sec)\n</code></pre> <p>Info</p> <p>The login account in the above code snippet is the initial account; please change the initial password after logging in to MatrixOne; see Password Management.</p> </li> <li> <p>The rolling update may be suspended due to incorrect configuration (such as specifying a non-existing version when upgrading). At this point, you can re-modify the dynamic configuration of the operator, reset the version number, roll back the changes, and the failed Pods will be re-updated.</p> </li> <li> <p>You can check the version number of the current MatrixOne deployment with the following command:</p> <pre><code>[root@master0 matrixone-operator]# kubectl get matrixoneclusters -n mo-hn -o yaml | grep version\n        {\"apiVersion\":\"core.matrixorigin.io/v1alpha1\",\"kind\":\"MatrixOneCluster\",\"metadata\":{\"annotations\":{},\"name\":\"mo\",\"namespace\":\"mo-hn\"},\"spec\":{\"tn\":{\"cacheVolume\":{\"size\":\"5Gi\",\"storageClassName\":\"local-path\"},\"config\":\"[dn.Txn.Storage]\\nbackend = \\\"TAE\\\"\\nlog-backend = \\\"logservice\\\"\\n[dn.Ckp]\\nflush-interval = \\\"60s\\\"\\nmin-count = 100\\nscan-interval = \\\"5s\\\"\\nincremental-interval = \\\"60s\\\"\\nglobal-interval = \\\"100000s\\\"\\n[log]\\nlevel = \\\"error\\\"\\nformat = \\\"json\\\"\\nmax-size = 512\\n\",\"replicas\":1,\"resources\":{\"limits\":{\"cpu\":\"200m\",\"memory\":\"1Gi\"},\"requests\":{\"cpu\":\"100m\",\"memory\":\"500Mi\"}}},\"imagePullPolicy\":\"IfNotPresent\",\"imageRepository\":\"matrixorigin/matrixone\",\"logService\":{\"config\":\"[log]\\nlevel = \\\"error\\\"\\nformat = \\\"json\\\"\\nmax-size = 512\\n\",\"pvcRetentionPolicy\":\"Retain\",\"replicas\":3,\"resources\":{\"limits\":{\"cpu\":\"200m\",\"memory\":\"1Gi\"},\"requests\":{\"cpu\":\"100m\",\"memory\":\"500Mi\"}},\"sharedStorage\":{\"s3\":{\"endpoint\":\"http://minio.mostorage:9000\",\"path\":\"minio-mo\",\"secretRef\":{\"name\":\"minio\"},\"type\":\"minio\"}},\"volume\":{\"size\":\"1Gi\"}},\"tp\":{\"cacheVolume\":{\"size\":\"5Gi\",\"storageClassName\":\"local-path\"},\"config\":\"[cn.Engine]\\ntype = \\\"distributed-tae\\\"\\n[log]\\nlevel = \\\"debug\\\"\\nformat = \\\"json\\\"\\nmax-size = 512\\n\",\"nodePort\":31429,\"replicas\":1,\"resources\":{\"limits\":{\"cpu\":\"200m\",\"memory\":\"2Gi\"},\"requests\":{\"cpu\":\"100m\",\"memory\":\"500Mi\"}},\"serviceType\":\"NodePort\"},\"version\":\"nightly-54b5e8c\"}}\n    version: nightly-54b5e8c\n</code></pre> </li> </ol>"},{"location":"MatrixOne/Deploy/update-MatrixOne-cluster/#reinstall-and-upgrade","title":"Reinstall and upgrade","text":"<p>Reinstalling and upgrading mean all MatrixOne clusters will be deleted and the data discarded and reinstalled.</p> <p>Applicable scene:</p> <ul> <li>no need for old data</li> <li>The versions before and after the upgrade are not compatible with each other due to special reasons</li> </ul> <p>Note</p> <p>Before the operation, please ensure the data has been backed up (see modump backup tool) and the business knows that the database has stopped.</p>"},{"location":"MatrixOne/Deploy/update-MatrixOne-cluster/#steps_1","title":"Steps","text":""},{"location":"MatrixOne/Deploy/update-MatrixOne-cluster/#1-delete-the-old-version-cluster","title":"1. Delete the old version cluster","text":"<p>In master0, the old version cluster can be deleted in any of the following ways:</p> <pre><code># Method 1: Delete through the YAML file of the mo cluster during deployment, for example:\nkubectl delete -f /root/deploy/mo.yaml\n# Method 2: By deleting the matrixonecluster object, where mo is the name\nkubectl delete matrixonecluster.core.matrixorigin.io mo -nmo-hn\n</code></pre> <p>Confirm that mo-related resources have been deleted by checking the pod status:</p> <pre><code>kubectl get pod -nmo-hn\n</code></pre> <p>In addition, if the PVC used by mo has not been deleted, use the following command to delete it manually:</p> <pre><code>kubectl get pvc -nmo-hn\n# For example, the PVC used by the log service has not been deleted, delete it manually\nkubectl delete pvc mo-data-mo-log-0 -nmo-hn\nkubectl delete pvc mo-data-mo-log-1 -nmo-hn\nkubectl delete pvc mo-data-mo-log-2 -nmo-hn\n</code></pre>"},{"location":"MatrixOne/Deploy/update-MatrixOne-cluster/#2-empty-bucket-data","title":"2. Empty bucket data","text":"<p>On the MinIO control page, delete the data in the bucket used by MinIO used by MO, including subdirectories such as mo-data, etc.</p> <p></p> <p>Or operate through the MinIO client mc:</p> <pre><code>mc rb --force minio/minio-mo/data/\nmc rb --force minio/minio-mo/etl\n</code></pre> <p>In addition, if you do not want to delete old data, you can create a new MinIO bucket and specify a unique bucket name in the YAML file for deploying the MatrixOne cluster.</p> <p></p>"},{"location":"MatrixOne/Deploy/update-MatrixOne-cluster/#3-deploy-the-new-version-cluster","title":"3. Deploy the new version cluster","text":"<p>Edit the yaml file that defines the MO cluster, refer to the Rolling Upgrade chapter, modify the <code>.spec.version</code> field to the latest version, and redeploy the MatrixOne cluster:</p> <pre><code>vi mo.yaml\n# content omitted\n...\nkubectl apply -f mo.yaml\n</code></pre>"},{"location":"MatrixOne/Deploy/update-MatrixOne-cluster/#4-check-if-the-upgrade-is-successful","title":"4. Check if the upgrade is successful","text":"<p>Please check if MatrixOne has started successfully with the following command.</p> <p>As shown in the following code example, when the Log Service, TN, and CN are all running normally, the MatrixOne cluster starts successfully. Connecting through the MySQL Client can also check if the database functions correctly.</p> <pre><code>[root@master0 ~]# kubectl get pods -n mo-hn      \nNAME                                  READY   STATUS    RESTARTS     AGE\nmatrixone-operator-6c9c49fbd7-lw2h2   1/1     Running   2 (8h ago)   9h\nmo-tn-0                               1/1     Running   0            2m13s\nmo-log-0                              1/1     Running   0            2m47s\nmo-log-1                              1/1     Running   0            2m47s\nmo-log-2                              1/1     Running   0            2m47s\nmo-tp-cn-0                            1/1     Running   0            111s\n</code></pre>"},{"location":"MatrixOne/Deploy/deploy-Matrixone-cluster/deploy-MatrixOne-cluster-with-k8/","title":"Cluster Deployment Guide","text":"<p>This document will focus on how to deploy a MatrixOne cluster based on an already existing Kubernetes and S3 environment.</p>"},{"location":"MatrixOne/Deploy/deploy-Matrixone-cluster/deploy-MatrixOne-cluster-with-k8/#resource-requirements","title":"Resource requirements","text":""},{"location":"MatrixOne/Deploy/deploy-Matrixone-cluster/deploy-MatrixOne-cluster-with-k8/#experience-environment","title":"Experience environment","text":"<p>The MatrixOne Cluster Experience Environment can be used for simple experience testing, learning or development, but is not suitable for business production. The following is a resource plan for the experience environment:</p> <p>Container resource:</p> Components Roles Service Replicas Recommendations for Replica Distribution Policies cpu(C) Memory (G) Storage Resource Types Storage Volume Format Storage Size (G) Access Modes logservice prewrite logs WAL management 3 3 nodes, 1 copy per node 2 4 PVC file system 100 ReadWriteOnce tn Transaction Management 1 Single node, single copy 4 8 PVC File Systems 100 ReadWriteOnce cn data computation 1 Single Node Single Replica 2 4 PVC File System 100 ReadWriteOnce <p>Object Storage Resource (S3):</p> Components Interface Protocols Storage Size (G) Business, monitoring, logging, and other data s3v4 &gt;=50"},{"location":"MatrixOne/Deploy/deploy-Matrixone-cluster/deploy-MatrixOne-cluster-with-k8/#recommended-environment","title":"Recommended environment","text":"<p>The MatrixOne cluster recommendation environment offers high availability, reliability, and robust performance for real-world business production. The following is a resource plan for the recommended environment:</p> <p>Container resource:</p> Components Roles Service Replicas Recommendations for Replica Distribution Policies cpu(C) Memory (G) Storage Resource Types Storage Volume Format Storage Size (G) Access Modes logservice prewrite logs WAL management 3 3 nodes, 1 copy per node 4 8 PVC file system 100 ReadWriteOnce tn Transaction Management 1 Single node, single copy 16 64 PVC File System 100 ReadWriteOnce cn data computation N N Depending on business requirements, 2+ recommended for high availability. 16 32 PVC File System 100 ReadWriteOnce <p>Object Storage Resource (S3):</p> Components Interface Protocols Storage Size (G) IOPS Bandwidth Business, monitoring, logs, and other data s3v4 Depends on business, recommended &gt;=500 Sequential read/write: &gt;=2000, non-sequential read/write: &gt;=10000 &gt;=10GB <p>For more information on resource requirements, refer to the experience environment and recommended production environment in the cluster topology planning chapter.</p>"},{"location":"MatrixOne/Deploy/deploy-Matrixone-cluster/deploy-MatrixOne-cluster-with-k8/#preconditions","title":"Preconditions","text":"<p>Before you begin, make sure you have the following environments ready:</p> <ul> <li> <p>Kubernetes cluster environment and s3 environment that meet resource requirements</p> </li> <li> <p>A client machine that can connect to a Kubernetes cluster.</p> </li> <li> <p>The client machine needs to have the helm, kubectl client installed and configured to access the cluster's kubeconfig file with permissions to be able to deploy the helm chart package and install the CRD resource object.</p> </li> <li> <p>Have extranet access, such as github.io, hub.docker.com, etc. If you can't access the extranet, you need to provide a private mirror repository for uploading relevant mirrors, and in the mo cluster yaml definition, modify the mirror repository address to the private repository address.</p> </li> <li> <p>Cluster nodes have access to object stores, such as resolving domain names where objects are stored.</p> </li> </ul> <p>Note: The following actions are performed on the client machine unless otherwise indicated.</p>"},{"location":"MatrixOne/Deploy/deploy-Matrixone-cluster/deploy-MatrixOne-cluster-with-k8/#installing-matrixone-operator","title":"Installing MatrixOne-Operator","text":"<p>MatrixOne Operator is a standalone software tool for deploying and managing MatrixOne clusters on Kubernetes. You can choose to deploy online or offline.</p> <ul> <li>Deploy online</li> </ul> <p>Follow these steps to install MatrixOne Operator on master0. We will create a separate namespace <code>matrixone-operator</code> for Operator.</p> <ol> <li> <p>Add the matrixone-operator address to the helm repository:</p> <pre><code>helm repo add matrixone-operator https://matrixorigin.github.io/matrixone-operator \n</code></pre> </li> <li> <p>Update the repository:</p> <pre><code>helm repo update \n</code></pre> </li> <li> <p>View the MatrixOne Operator version:</p> <pre><code>helm search repo matrixone-operator/matrixone-operator --versions --devel \n</code></pre> </li> <li> <p>Specify the release to install MatrixOne Operator:</p> <pre><code>helm install matrixone-operator matrixone-operator/matrixone-operator --version &lt;VERSION&gt; --create-namespace --namespace matrixone-operator \n</code></pre> <p>!!! note The parameter VERSION is the version number of the MatrixOne Operator to be deployed, such as 1.0.0-alpha.2.</p> </li> <li> <p>After a successful installation, confirm the installation status using the following command:</p> <pre><code>kubectl get pod -n matrixone-operator \n</code></pre> <p>Ensure that all Pod states in the above command output are Running.</p> <pre><code>[root@master0 matrixone-operator]# kubectl get pod -n matrixone-operator NAME READY STATUS RESTARTS AGE matrixone-operator-f8496ff5c-fp6zm 1/1 Running 0 3m26s \n</code></pre> </li> </ol> <p>The corresponding Pod states are normal as shown in the above code line.</p> <ul> <li>Deploy offline</li> </ul> <p>You can select the Operator Release version installation package you need from the project's Release list for offline deployment.</p> <ol> <li> <p>Create a standalone namespace mo-op for Operator</p> <pre><code>NS=\"mo-op\" \nkubectl create ns \"${NS}\" \nkubectl get ns # return has mo-op \n</code></pre> </li> <li> <p>Download and extract the matrixone-operator installation package</p> <pre><code>wget https://github.com/matrixorigin/matrixone-operator/releases/download/chart-1.1.0-alpha2/matrixone-operator-1.1.0-alpha2.tgz \ntar xvf matrixone-operator-1.1.0-alpha2.tgz </code></pre> <p>If the original github address downloads too slowly, you can try downloading the mirror package from:</p> <pre><code>wget https://githubfast.com/matrixorigin/matrixone-operator/releases/download/chart-1.1.0-alpha2/matrixone-operator-1.1.0-alpha2.tgz </code></pre> <p>After extraction it will be in the current directory production folder <code>matrixone-operator</code>.</p> </li> <li> <p>Deploying matrixone-operator</p> <pre><code>NS=\"mo-op\" \ncd matrixone-operator/ \nhelm install -n ${NS} mo-op ./charts/matrixone-operator --dependency-update # Success should return the status of deployed\n</code></pre> <p>The above list of dependent docker mirrors is:</p> <ul> <li>matrixone-operator</li> <li>kruise-manager</li> </ul> <p>If you cannot pull a mirror from dockerhub, you can pull it from Aliyun using the following command:</p> <pre><code>helm -n ${NS} install mo-op ./charts/matrixone-operator --dependency-update -set image.repository=\"registry.cn-hangzhou.aliyuncs.com/moc-pub/matrixone-operator\" --set kruise.manager.image.repository=\"registry.cn-hangzhou.aliyuncs.com/moc-pub/kruise-manager\" \n</code></pre> <p>See matrixone-operator/values.yaml for details.</p> </li> <li> <p>Check operator deployment status</p> <pre><code>NS=\"mo-op\" \nhelm list -n \"${NS}\" # returns a corresponding helm chart package with deployed \nkubectl get pod -n \"${NS}\" -owide # returns a copy of a pod with Running\n</code></pre> </li> </ol> <p>To learn more about Matrixone Operator, check out Operator Administration.</p>"},{"location":"MatrixOne/Deploy/deploy-Matrixone-cluster/deploy-MatrixOne-cluster-with-k8/#deploying-matrixone","title":"Deploying MatrixOne","text":"<p>This section describes two ways to deploy MatrixOne: YAML and Chart.</p>"},{"location":"MatrixOne/Deploy/deploy-Matrixone-cluster/deploy-MatrixOne-cluster-with-k8/#prepare-before-you-start","title":"Prepare before you start","text":"<ol> <li> <p>Create namespace <code>mo</code> for MatrixOne:</p> <pre><code>NS=\"mo\" \nkubectl create ns \"${NS}\" \nkubectl get ns # return has mo \n</code></pre> <p>!!! note It is recommended that this namespace be separate from the namespace of MatrixOne Operator and not use the same one.</p> </li> <li> <p>Create the Secret service for accessing s3 in namespace mo by executing the following command:</p> <p>S3 CA certificate not required if accessed via HTTP protocol</p> <pre><code>NS=\"mo\" \nname=\"s3mo\"\n\nkubectl -n \"${NS}\" create secret generic \"${name}\" --from-literal=AWS_ACCESS_KEY_ID=51e1bHqcbfKla0fuakAtoJ2LMEvKThg4NiMjxxxx --from-literal=AWS_SECRET_ACCESS_KEY=aDMWw1hO2rqxltyIcBN6sy8qE_leIgzo6Satxxxx #modify \nkubectl get secret -n \"${NS}\" \"${name}\" -oyaml # normal output key information \n</code></pre> <p>S3 access via the HTTPS protocol requires a CA certificate, and before you begin, perform the relevant actions and configure the relevant files as follows:</p> <ul> <li>Based on the ca certificate file, create a secret object for Kubernetes:</li> </ul> <pre><code>NS=mo \nca_file_path=\"/data/deploy/csp_cert/ca.crt\" # File path defined by the certificate in the key \nca_file_name=\"csp.cert\" # File name defined by the certificate in the key \nca_secret_name=\"csp.cert\" # Name of the certificate key itself\n# Creating a Key\nkubectl -n ${ns} create secret generic ${ca_secret_name} --from-file=${ca_file_name}=${ca_file_path} \n</code></pre> <ul> <li>Configure the relevant settings in spec.logService.sharedStorage.s3.certificateRef in the yaml file of the MatrixOne cluster object (the mo.yaml and values.yaml files in the deployment steps below), as follows:</li> </ul> <pre><code>sharedStorage:\n  s3:\n    endpoint: xx.yy.com\n    path: mypath\n    # secretRef is required when there is no environment based auth available.\n    secretRef:\n      # secretRef.name corresponds to ca_secret_name\n      name: csp\n    certificateRef:\n      # certificateRef.name corresponds to ${ca_file_name}\n      name: csp.cert\n      files:\n      # certificateRef.files The values below the array correspond to ${ca_file_path}\n      - csp.cert\n</code></pre> </li> <li> <p>Label the machine</p> <p>The following tags need to be called to the node before deployment, otherwise scheduling fails. The following tags are recommended in principle to hit different nodes and multiple nodes depending on the copy, or at least 1 node if this is not possible. (7 different nodes are recommended)</p> <pre><code>matrixone/cn: true\nmatrixone/tn: true\nmatrixone/lg: true\n</code></pre> <p>The first group: find three different machines, each labeled cn.</p> <pre><code>NODE_1=\"10.0.0.1\" # Replace with actual IP\nNODE_2=\"10.0.0.2\" # Replace with actual IP\nNODE_3=\"10.0.0.3\" # Replace with actual IP\n\nkubectl label node ${NODE_1} matrixone/cn: true\nkubectl label node ${NODE_2} matrixone/cn: true\nkubectl label node ${NODE_3} matrixone/cn: true\n</code></pre> <p>Group 2: Find the 4th different machine and label each with tn.</p> <pre><code>NODE_4=\"10.0.0.4\" # Replace with actual IP\n\nkubectl label node ${NODE_4} matrixone/tn: true\n</code></pre> <p>Group 3: Find three different machines, each labeled log .</p> <pre><code>NODE_5=\"10.0.0.5\" # Replace with actual IP\nNODE_6=\"10.0.0.6\" # Replace with actual IP\nNODE_7=\"10.0.0.7\" # Replace with actual IP\n\nkubectl label node ${NODE_5} matrixone/lg: true\nkubectl label node ${NODE_6} matrixone/lg: true\nkubectl label node ${NODE_7} matrixone/lg: true\n</code></pre> </li> </ol>"},{"location":"MatrixOne/Deploy/deploy-Matrixone-cluster/deploy-MatrixOne-cluster-with-k8/#yaml-style-deployment","title":"yaml-style deployment","text":"<ol> <li> <p>Customize the yaml file for the MatrixOne cluster by writing the following mo.yaml file (modify the resource request as appropriate):</p> <pre><code>apiVersion: core.matrixorigin.io/v1alpha1\nkind: MatrixOneCluster\nmetadata:\n  name: mo\n  namespace: mo\n\nspec:\n  # 1.  Configuring cn\n  cnGroups:\n  - cacheVolume:\n      size: 800Gi\n    config: |2\n      [log]\n      level = \"info\"\n    name: cng1\n    nodeSelector:# Add tags as appropriate\n      matrixone/cn: \"true\"\n    serviceType: NodePort\n    nodePort: 31429\n    replicas: 3\n    resources:\n      requests:\n        cpu: 16000m\n        memory: 64000Mi\n      limits:\n        cpu: 16000m\n        memory: 64000Mi\n    overlay:\n      env:\n      - name: GOMEMLIMIT\n        value: \"57600MiB\"  \n  # 2.  Configuring tn\n  tn:\n    cacheVolume:\n      size: 100Gi\n    config: |2\n\n      [log]\n      level = \"info\"\n    nodeSelector:\n      matrixone/tn: \"true\"\n    replicas: 1\n    resources:\n      requests:\n        cpu: 16000m\n        memory: 64000Mi\n      limits:\n        cpu: 16000m\n        memory: 64000Mi\n  # 3. Configuring logservice\n  logService:\n    config: |2\n      [log]\n      level = \"info\"\n    nodeSelector: \n      matrixone/lg: \"true\"\n    pvcRetentionPolicy: Retain\n    replicas: 3\n    # Configuring s3 storage for logservice mapping\n    sharedStorage:\n      s3:\n        endpoint: s3-qos.iot.qiniuec-test.com \n        path: mo-test\n        s3RetentionPolicy: Retain\n        secretRef: #Configure the key for accessing s3, i.e., secret, with the name s3mo.\n          name: s3mo\n    volume:\n      size: 100Gi \n    resources:\n      requests:\n        cpu: 4000m\n        memory: 16000Mi\n      limits:\n        cpu: 4000m\n        memory: 16000Mi\n  topologySpread:\n  - kubernetes.io/hostname\n  imagePullPolicy: IfNotPresent\n  imageRepository: registry.cn-shanghai.aliyuncs.com/matrixorigin/matrixone\n  version: 1.1.1 #This is the version of the MO image\n</code></pre> </li> <li> <p>Create a MatrixOne cluster by executing the following command</p> <pre><code>kubectl apply -f ./mo.yaml\n</code></pre> </li> </ol>"},{"location":"MatrixOne/Deploy/deploy-Matrixone-cluster/deploy-MatrixOne-cluster-with-k8/#chart-way-to-deploy","title":"chart way to deploy","text":"<ol> <li> <p>Add a matrixone-operator repository to helm</p> <pre><code>helm repo add matrixone-operator https://matrixorigin.github.io/matrixone-operator \n</code></pre> </li> <li> <p>Update Repository</p> <pre><code>helm repo update \n</code></pre> </li> <li> <p>View MatrixOne Chart version</p> <pre><code>helm search repo matrixone-operator/matrixone --devel \n</code></pre> <p>Example returns</p> <pre><code>&gt; helm search repo matrixone-operator/matrixone --devel\nNAME                                    CHART VERSION   APP VERSION DESCRIPTION\nmatrixone-operator/matrixone            0.1.0           1.16.0      A Helm chart to deploy MatrixOne on K8S\nmatrixone-operator/matrixone-operator   1.1.0-alpha2    0.1.0       Matrixone Kubernetes Operator\nhelm search repo matrixone-operator/matrixone --devel\n</code></pre> </li> <li> <p>Deploying MatrixOne</p> <p>Modify the values.yaml file, empty the original file, and replace it with the following (modify the resource request as appropriate):</p> <pre><code># 1. Configuring cn\ncnGroups:\n- cacheVolume:\n    size: 800Gi\nconfig: |2\n    [log]\n    level = \"info\"\nname: cng1\nnodeSelector:\n    matrixone/cn: \"true\"\nserviceType: NodePort\nnodePort: 31429\nreplicas: 3 # Number of copies of cn\nresources:\n    requests:\n    cpu: 16000m\n    memory: 64000Mi\n    limits:\n    cpu: 16000m\n    memory: 64000Mi\noverlay:\n    env:\n    - name: GOMEMLIMIT\n    value: \"57600MiB\"  \n# 2. Configuring tn\ntn:\ncacheVolume:\n    size: 100Gi\nconfig: |2\n\n    [log]\n    level = \"info\"\nnodeSelector:\n    matrixone/tn: \"true\"\nreplicas: 1 # The number of copies of tn, which cannot be modified. The current version only supports a setting of 1.\nresources:\n    requests:\n    cpu: 16000m\n    memory: 64000Mi\n    limits:\n    cpu: 16000m\n    memory: 64000Mi\n# 3. Configuring logService\nlogService:\nconfig: |2\n    [log]\n    level = \"info\"\nnodeSelector: \n    matrixone/lg: \"true\"\npvcRetentionPolicy: Retain\nreplicas: 3 # Number of copies of logService\n#Configuring s3 storage for logService mapping\nsharedStorage:\n    s3:\n    endpoint: s3-qos.iot.qiniuec-test.com  \n    path: mo-test\n    s3RetentionPolicy: Retain\n    secretRef: #Configure the key for accessing s3, i.e., secret, with the name s3mo.\n        name: s3mo\nvolume:\n    size: 100Gi\nresources:\n    requests:\n    cpu: 4000m\n    memory: 16000Mi\n    limits:\n    cpu: 4000m\n    memory: 16000Mi\ntopologySpread:\n- kubernetes.io/hostname\nimagePullPolicy: IfNotPresent\nimageRepository: registry.cn-shanghai.aliyuncs.com/matrixorigin/matrixone\nversion: 1.1.1 #This is the version of the MO image\n</code></pre> <p>Install MatrixOne Chart (this deploys a MatrixOneCluster object)</p> <pre><code>NS=\"mo\"\nRELEASE_NAME=\"mo_chart\"\nVERSION=v1\nhelm install -n ${NS} ${RELEASE_NAME} matrixone-operator/matrixone --version ${VERSION} -f values.yaml\n</code></pre> </li> </ol>"},{"location":"MatrixOne/Deploy/deploy-Matrixone-cluster/deploy-MatrixOne-cluster-with-k8/#checking-cluster-status","title":"Checking cluster status","text":"<p>Observe cluster status until Ready</p> <pre><code>NS=\"mo\" \nkubectl get mo -n \"${NS}\" # Wait status is Ready \n</code></pre> <p>Observe pod status until all are Running</p> <pre><code>NS=\"mo\" \nkubectl get pod -n \"${NS}\" -owide # waiting state is Running \n</code></pre>"},{"location":"MatrixOne/Deploy/deploy-Matrixone-cluster/deploy-MatrixOne-cluster-with-k8/#connecting-a-matrixone-cluster","title":"Connecting a MatrixOne Cluster","text":"<p>In order to connect to a MatrixOne cluster, you need to map the port of the corresponding service to the MatrixOne node. Here is a guide for connecting to a MatrixOne cluster using <code>kubectl port-forward</code>:</p> <ul> <li>Allow local access only:</li> </ul> <pre><code>nohup kubectl port-forward -nmo svc/svc_name 6001:6001 &amp; \n</code></pre> <ul> <li>Specify that a machine or all machines access:</li> </ul> <pre><code>nohup kubectl port-forward -nmo --address 0.0.0.0 svc/svc_name 6001:6001 &amp; \n</code></pre> <p>After specifying allow local access or specifying a machine or all, you can connect to MatrixOne using a MySQL client:</p> <pre><code># Connect to MySQL service using 'mysql' command line tool\n# Use 'kubectl get svc/svc_name -n mo -o jsonpath='{.spec.clusterIP}'' to get the cluster IP address of the service in the Kubernetes cluster\n# The '-h' parameter specifies the hostname or IP address of the MySQL service\n# The '-P' parameter specifies the port number of the MySQL service, in this case 6001\n# '-uroot' means login as root\n# '-p111' indicates that the initial password is 111\nmysql -h $(kubectl get svc/svc_name  -n mo -o jsonpath='{.spec.clusterIP}') -P 6001 -uroot -p111\nmysql: [Warning] Using a password on the command line interface can be insecure.\nWelcome to the MySQL monitor.  Commands end with ; or \\g.\nYour MySQL connection id is 163\nServer version: 8.0.30-MatrixOne-v1.1.1 MatrixOne\n\nCopyright (c) 2000, 2023, Oracle and/or its affiliates.\n\nOracle is a registered trademark of Oracle Corporation and/or its\naffiliates. Other names may be trademarks of their respective\nowners.\n\nType 'help;' or '\\h' for help. Type '\\c' to clear the current input statement.\n\nmysql&gt;\n</code></pre> <p>After explicitly <code>mysql&gt;</code>, the distributed MatrixOne cluster setup connection completes.</p> <p>Note</p> <p>The login account in the above code section is the initial account. Please change the initial password promptly after logging into MatrixOne, see Password Management.</p>"},{"location":"MatrixOne/Deploy/deploy-Matrixone-cluster/deploy-MatrixOne-cluster-without-k8/","title":"Cluster Deployment Guide","text":"<p>This document will focus on how to deploy a privatized Kubernetes cluster-based cloud protosurvival separated distributed database, MatrixOne, from 0.</p>"},{"location":"MatrixOne/Deploy/deploy-Matrixone-cluster/deploy-MatrixOne-cluster-without-k8/#key-steps","title":"Key steps","text":"<ol> <li>Deploying Kubernetes Clusters</li> <li>Deployment Object Store MinIO  </li> <li>Create and connect a MatrixOne cluster</li> </ol>"},{"location":"MatrixOne/Deploy/deploy-Matrixone-cluster/deploy-MatrixOne-cluster-without-k8/#noun-interpretation","title":"Noun interpretation","text":"<p>Since there are many Kubernetes related terms involved in this document, in order to allow you to understand the build process, here is a simple explanation of the important terms involved, if you need to know more about Kubernetes related content, you can refer directly to the Kubernetes Chinese Community</p> <ul> <li>Pod</li> </ul> <p>Pods are the smallest resource management component in Kubernetes. Pods are also resource objects that minimize running containerized apps. A Pod represents a process running in a cluster. In a nutshell, we can call a set of apps that provide specific functionality a pod that will contain one or more container objects that together serve the outside world.</p> <ul> <li>Storage Class</li> </ul> <p>Storage Class, or SC, is used to label the characteristics and performance of a storage resource, which an administrator can define as a category, just as a storage device describes its own configuration (Profile). Depending on the description of the SC, the characteristics of the various storage resources can be visualized and the storage resources can be requested based on the application's demand for them.</p> <ul> <li>CSI</li> </ul> <p>Kubernetes provides a CSI interface (Container Storage Interface), based on which custom CSI plug-ins can be developed to support specific storage for decoupling purposes.</p> <ul> <li>PersistentVolume</li> </ul> <p>PersistentVolume, or PV, is a storage resource that includes settings for critical information such as storage capacity, access patterns, storage types, recycling policies, and backend storage types.</p> <ul> <li>PersistentVolumeClaim</li> </ul> <p>PersistentVolumeClaim, or PVC, is used as a user request for storage resources. It mainly includes the setting of information such as storage space request, access mode, PV selection criteria and storage category.</p> <ul> <li>Service</li> </ul> <p>Also called SVC, a mechanism for matching a set of pods to an external access service by way of label selection. Each svc can be understood as a microservice.</p> <ul> <li>Operator</li> </ul> <p>Kubernetes Operator is a way to encapsulate, deploy, and manage Kubernetes applications. We deploy and manage Kubernetes apps on Kubernetes using the Kubernetes API (Application Programming Interface) and kubectl tools.</p>"},{"location":"MatrixOne/Deploy/deploy-Matrixone-cluster/deploy-MatrixOne-cluster-without-k8/#deployment-architecture","title":"Deployment Architecture","text":""},{"location":"MatrixOne/Deploy/deploy-Matrixone-cluster/deploy-MatrixOne-cluster-without-k8/#dependent-components","title":"Dependent Components","text":"<p>The MatrixOne distributed system relies on the following components:</p> <ul> <li> <p>Kubernetes: As a resource management platform for the entire MatrixOne cluster, including components such as Logservice, CN, TN, etc., run in Pods managed by Kubernetes. If a failure occurs, Kubernetes is responsible for weeding out the failed Pod and starting a new one to replace it.</p> </li> <li> <p>Minio: Provides object storage services for the entire MatrixOne cluster, with all MatrixOne data stored in object storage provided by Minio.</p> </li> </ul> <p>In addition, for container management and orchestration on Kubernetes, we need the following plugins:</p> <ul> <li> <p>Helm:Helm is a package management tool for managing Kubernetes applications, similar to APT for Ubuntu and YUM for CentOS. It is used to manage preconfigured installation package resources called Charts.</p> </li> <li> <p>local-path-provisioner: As a plug-in in Kubernetes that implements the CSI (Container Storage Interface) interface, local-path-provisioner is responsible for creating persistent volumes (PVs) for the Pods and Minio of each component of MatrixOne for persistent storage of data.</p> </li> </ul>"},{"location":"MatrixOne/Deploy/deploy-Matrixone-cluster/deploy-MatrixOne-cluster-without-k8/#overall-architecture","title":"Overall architecture","text":"<p>The overall deployment architecture is shown in the following figure:</p> <p>The overall architecture consists of the following components:</p> <ul> <li> <p>The bottom layer is three server nodes: the first as host1, where the Kubernetes springboard is installed, the second as the Kubernetes master, and the third as the Kubernetes worker node.</p> </li> <li> <p>The upper layer is the installed Kubernetes and Docker environments that make up the cloud native platform layer.</p> </li> <li> <p>A layer of Kubernetes plug-ins managed based on Helm, including local-path-storage plug-ins that implement CSI interfaces, Minio, and MatrixOne Operator.</p> </li> <li> <p>The top layer is multiple Pods and Services generated by these component configurations.</p> </li> </ul>"},{"location":"MatrixOne/Deploy/deploy-Matrixone-cluster/deploy-MatrixOne-cluster-without-k8/#matrixones-pod-and-storage-architecture","title":"MatrixOne's Pod and Storage Architecture","text":"<p>MatrixOne creates a series of Kubernetes objects based on Operator's rules that are categorized by component and categorized into resource groups, CNSet, TNSet, and LogSet.</p> <ul> <li> <p>Service: Services in each resource group need to be externally available through the Service. Service hosts the ability to connect to the outside world, ensuring service is still available if the Pod crashes or is replaced. The external application connects through the public port of the Service, while the Service forwards the connection to the appropriate Pod through internal forwarding rules.</p> </li> <li> <p>A containerized instance of the Pod:MatrixOne component that runs the core kernel code of MatrixOne.</p> </li> <li> <p>PVC: Each Pod declares its required storage resources through a PVC (Persistent Volume Claim). In our architecture, CN and TN need to request a storage resource as a cache, while LogService needs the corresponding S3 resource. These requirements are stated via PVC.</p> </li> <li> <p>PV:PV (Persistent Volume) is an abstract representation of a storage medium that can be viewed as a storage unit. After the PVC has been requested, the PV is created through software that implements the CSI interface and binds it to the PVC requesting the resource.</p> </li> </ul>"},{"location":"MatrixOne/Deploy/deploy-Matrixone-cluster/deploy-MatrixOne-cluster-without-k8/#1-deploy-a-kubernetes-cluster","title":"1. Deploy a Kubernetes cluster","text":"<p>Because the distributed deployment of MatrixOne relies on Kubernetes clusters, we need a Kubernetes cluster. This article will guide you through setting up a Kubernetes cluster by using Kuboard-Spray.</p>"},{"location":"MatrixOne/Deploy/deploy-Matrixone-cluster/deploy-MatrixOne-cluster-without-k8/#preparing-the-cluster-environment","title":"Preparing the Cluster Environment","text":"<p>For clustered environments, you need to prepare as follows:</p> <ul> <li>3 virtual machines</li> <li>The operating system uses CentOS 7.9 (needs to allow root remote login): two as machines to deploy Kubernetes and MatrixOne-related dependencies, and one as a springboard to build a Kubernetes cluster.</li> <li>extranet access conditions. All 3 servers require extranet mirror pull.</li> </ul> <p>The distribution of individual machine conditions is as follows:</p> Host Intranet IP Extranet IP mem CPU Disk Role kuboardspray 10.206.0.6 1.13.2.100 2G 2C 50G hopper master0 10.206.134.8 118.195.255.252 8G 2C 50G master etcd node0 10.206.134.14 1.13.13.199 8G 2C 50G worker"},{"location":"MatrixOne/Deploy/deploy-Matrixone-cluster/deploy-MatrixOne-cluster-without-k8/#springboard-deployment-kuboard-spray","title":"Springboard Deployment Kuboard Spray","text":"<p>Kuboard-Spray is a tool used to visually deploy Kubernetes clusters. It uses Docker to quickly pull up a web app that can visually deploy Kubernetes clusters. Once the Kubernetes cluster environment is deployed, you can stop the Docker app.</p>"},{"location":"MatrixOne/Deploy/deploy-Matrixone-cluster/deploy-MatrixOne-cluster-without-k8/#springboard-environment-preparation","title":"Springboard environment preparation","text":"<ol> <li> <p>Install Docker: Since Docker is used, an environment with Docker is required. Install and start Docker on the springboard machine using the following command:</p> <pre><code>curl -sSL https://get.docker.io/ | sh \n#If in a restricted network environment in the country, you can change the following domestic mirror address \ncurl -fsSL https://get.docker.com | bash -s docker --mirror Aliyun \n</code></pre> </li> <li> <p>Start Docker:</p> <pre><code>[root@VM-0-6-centos ~]# systemctl start docker\n[root@VM-0-6-centos ~]# systemctl status docker\n\u25cf docker.service - Docker Application Container Engine\n   Loaded: loaded (/usr/lib/systemd/system/docker.service; disabled; vendor preset: disabled)\n   Active: active (running) since Sun 2023-05-07 11:48:06 CST; 15s ago\n     Docs: https://docs.docker.com\n Main PID: 5845 (dockerd)\n    Tasks: 8\n   Memory: 27.8M\n   CGroup: /system.slice/docker.service\n           \u2514\u25005845 /usr/bin/dockerd -H fd:// --containerd=/run/containerd/containerd.sock\n\nMay 07 11:48:06 VM-0-6-centos systemd[1]: Starting Docker Application Container Engine...\nMay 07 11:48:06 VM-0-6-centos dockerd[5845]: time=\"2023-05-07T11:48:06.391166236+08:00\" level=info msg=\"Starting up\"\nMay 07 11:48:06 VM-0-6-centos dockerd[5845]: time=\"2023-05-07T11:48:06.421736631+08:00\" level=info msg=\"Loading containers: start.\"\nMay 07 11:48:06 VM-0-6-centos dockerd[5845]: time=\"2023-05-07T11:48:06.531022702+08:00\" level=info msg=\"Loading containers: done.\"\nMay 07 11:48:06 VM-0-6-centos dockerd[5845]: time=\"2023-05-07T11:48:06.544715135+08:00\" level=info msg=\"Docker daemon\" commit=94d3ad6 graphdriver=overlay2 version=23.0.5\nMay 07 11:48:06 VM-0-6-centos dockerd[5845]: time=\"2023-05-07T11:48:06.544798391+08:00\" level=info msg=\"Daemon has completed initialization\"\nMay 07 11:48:06 VM-0-6-centos systemd[1]: Started Docker Application Container Engine.\nMay 07 11:48:06 VM-0-6-centos dockerd[5845]: time=\"2023-05-07T11:48:06.569274215+08:00\" level=info msg=\"API listen on /run/docker.sock\"\n</code></pre> </li> </ol> <p>Once the environment is ready, Kuboard-Spray can be deployed.</p>"},{"location":"MatrixOne/Deploy/deploy-Matrixone-cluster/deploy-MatrixOne-cluster-without-k8/#deploy-kuboard-spray","title":"Deploy Kuboard-Spray","text":"<p>Install Kuboard-Spray by executing the following command:</p> <pre><code>docker run -d \\\n  --privileged \\\n  --restart=unless-stopped \\\n  --name=kuboard-spray \\\n  -p 80:80/tcp \\\n  -v /var/run/docker.sock:/var/run/docker.sock \\\n  -v ~/kuboard-spray-data:/data \\\n  eipwork/kuboard-spray:latest-amd64\n</code></pre> <p>If a mirror pull fails due to a network problem, you can use the following alternate address:</p> <pre><code>docker run -d \\\n  --privileged \\\n  --restart=unless-stopped \\\n  --name=kuboard-spray \\\n  -p 80:80/tcp \\\n  -v /var/run/docker.sock:/var/run/docker.sock \\\n  -v ~/kuboard-spray-data:/data \\\n  swr.cn-east-2.myhuaweicloud.com/kuboard/kuboard-spray:latest-amd64\n</code></pre> <p>Once this is done, you can enter <code>http://1.13.2.100</code> (Springboard IP address) in your browser to open the Kuboard-Spray web interface, enter the username <code>admin</code>, the default password <code>Kuboard123</code>, and log into the Kuboard-Spray interface as follows:</p> <p></p> <p>Once logged in, you can begin deploying Kubernetes clusters.</p>"},{"location":"MatrixOne/Deploy/deploy-Matrixone-cluster/deploy-MatrixOne-cluster-without-k8/#visually-deploy-kubernetes-clusters","title":"Visually deploy Kubernetes clusters","text":"<p>Once logged into the Kuboard-Spray interface, you can begin visual deployment of your Kubernetes cluster.</p>"},{"location":"MatrixOne/Deploy/deploy-Matrixone-cluster/deploy-MatrixOne-cluster-without-k8/#import-kubernetes-related-resource-packs","title":"Import Kubernetes related resource packs","text":"<p>The installation interface downloads the resource package corresponding to the Kubernetes cluster via an online download to enable offline installation of the Kubernetes cluster.</p> <ol> <li> <p>Click on Resource Pack Management and select the appropriate version of Kubernetes Resource Pack to download:</p> <p>Download version <code>spray-v2.18.0b-2_k8s-v1.23.17_v1.24-amd64</code></p> <p></p> </li> <li> <p>After clicking Import, select Load Resource Package, select the appropriate download source, and wait for the resource package download to complete.</p> <p>!!! note It is recommended that you choose Docker as the container engine for the K8s cluster. After selecting Docker as the container engine for K8s, Kuboard-Spray automatically uses Docker to run the various components of the K8s cluster, including containers on the Master node and the Worker node.</p> <p></p> </li> <li> <p>This <code>pulls</code> the relevant mirror dependencies:</p> <p></p> </li> <li> <p>After the mirrored resource pack is pulled successfully, return to Kuboard-Spray's web interface and see that the corresponding version of the resource pack has been imported.</p> <p></p> </li> </ol>"},{"location":"MatrixOne/Deploy/deploy-Matrixone-cluster/deploy-MatrixOne-cluster-without-k8/#installing-a-kubernetes-cluster","title":"Installing a Kubernetes Cluster","text":"<p>This chapter will guide you through the installation of the Kubernetes cluster.</p> <ol> <li> <p>Select Cluster Management and select Add Cluster Installation Plan:</p> <p></p> </li> <li> <p>In the pop-up dialog box, define the name of the cluster, select the version of the resource package you just imported, and click OK. As shown in the following figure:</p> <p></p> </li> </ol>"},{"location":"MatrixOne/Deploy/deploy-Matrixone-cluster/deploy-MatrixOne-cluster-without-k8/#cluster-planning","title":"Cluster planning","text":"<p>Kubernetes clusters are deployed in a pattern of <code>1 master + 1 worker +1 etcd</code> according to pre-defined role classifications.</p> <p>After defining the completion cluster name in the previous step and selecting the completion resource pack version, click OK to proceed directly to the cluster planning phase.</p> <ol> <li> <p>Select the role and name of the corresponding node:</p> <p></p> <ul> <li>master node: Select the ETCD and control node and name it master0. (You can also select the working node if you want the master node to work.) This approach improves resource utilization, but reduces the high availability of Kubernetes.)</li> <li>worker node: Select only the worker node and name it node0.</li> </ul> </li> <li> <p>After each node has filled in the role and node name, fill in the connection information for the corresponding node to the right, as shown in the following figure:</p> <p></p> <p></p> </li> <li> <p>Click Save when you have filled out all the roles. Next you are ready to install the Kubernetes cluster.</p> </li> </ol>"},{"location":"MatrixOne/Deploy/deploy-Matrixone-cluster/deploy-MatrixOne-cluster-without-k8/#start-installing-kubernetes-cluster","title":"Start installing Kubernetes cluster","text":"<p>After completing all roles in the previous step and saving them, click Execute to begin the installation of the Kubernetes cluster.</p> <ol> <li> <p>Click OK to begin installing the Kubernetes cluster as shown in the following figure:</p> <p></p> </li> <li> <p>When you install a Kubernetes cluster, the Kubernetes cluster is installed by executing an <code>ansible</code> script on the corresponding node. The overall event can take anywhere from 5 to 10 minutes depending on the machine configuration and network and the time to wait.</p> <p>Note: If an error occurs, you can look at the contents of the log and confirm if it is a version mismatch for Kuboard-Spray. If it is, replace it with the appropriate version.</p> </li> <li> <p>After installation, go to the master node of the Kubernetes cluster and execute <code>kubectl get node</code>:</p> <pre><code>[root@master0 ~]# kubectl get node\nNAME      STATUS   ROLES                  AGE   VERSION\nmaster0   Ready    control-plane,master   52m   v1.23.17\nnode0     Ready    &lt;none&gt;                 52m   v1.23.17\n</code></pre> </li> <li> <p>The command results are shown in the figure above, which indicates that the Kubernetes cluster installation is complete.</p> </li> <li> <p>Adjust the DNS routing table on each node of Kubernetes. Execute the following command on each machine to locate the nameserver that contains <code>169.254.25.10</code> and delete the record. (The record may affect the efficiency of communication between the individual pods and need not be changed if it does not exist)</p> <pre><code>vim /etc/resolve.conf \n</code></pre> <p></p> </li> </ol>"},{"location":"MatrixOne/Deploy/deploy-Matrixone-cluster/deploy-MatrixOne-cluster-without-k8/#2-deployment-helm","title":"2. Deployment helm","text":"<p>Helm is a package management tool for managing Kubernetes applications. It simplifies the process of deploying and managing applications by using charts (preconfigured installation package resources). Similar to APT for Ubuntu and YUM for CentOS, Helm provides a convenient way to install, upgrade, and manage Kubernetes applications.</p> <p>Before installing Minio, we need to install Helm, as the Minio installation process depends on Helm. Here are the steps to install Helm:</p> <p>Note: This chapter operates at the master0 node.</p> <ol> <li> <p>Download the helm installation package:</p> <pre><code>wget https://get.helm.sh/helm-v3.10.2-linux-amd64.tar.gz \n#If in a restricted network environment in the country, you can change the following domestic mirror address \nwget https://mirrors.huaweicloud.com/helm/v3.10.2/helm-v3.10.2-linux-amd64.tar.gz\n</code></pre> </li> <li> <p>Unzip and install:</p> <pre><code>tar -zxf helm-v3.10.2-linux-amd64.tar.gz \nmv linux-amd64/helm /usr/local/bin/helm \n</code></pre> </li> <li> <p>Verify the version to see if the installation is complete:</p> <pre><code>[root@k8s01 home]# helm version\nversion.BuildInfo{Version:\"v3.10.2\", GitCommit:\"50f003e5ee8704ec937a756c646870227d7c8b58\", GitTreeState:\"clean\", GoVersion:\"go1.18.8\"}\n</code></pre> <p>Installation is complete when the version information shown above appears.</p> </li> </ol>"},{"location":"MatrixOne/Deploy/deploy-Matrixone-cluster/deploy-MatrixOne-cluster-without-k8/#3-csi-deployment","title":"3. CSI Deployment","text":"<p>CSI is a storage plug-in for Kubernetes and provides storage services for MinIO and MarixOne. This chapter will guide you through using the <code>local-path-provisioner</code> plugin.</p> <p>Note: This chapter operates at the master0 node.</p> <ol> <li> <p>Using the following command line, install CSI:</p> <pre><code>wget https://github.com/rancher/local-path-provisioner/archive/refs/tags/v0.0.23.zip\nunzip v0.0.23.zip\ncd local-path-provisioner-0.0.23/deploy/chart/local-path-provisioner\nhelm install --set nodePathMap[0].paths[0]=\"/opt/local-path-provisioner\",nodePathMap[0].node=DEFAULT_PATH_FOR_NON_LISTED_NODES  --create-namespace --namespace local-path-storage local-path-storage ./\n</code></pre> <p>If the original github address downloads too slowly, you can try downloading the mirror package from:</p> <pre><code>wget https://githubfast.com/rancher/local-path-provisioner/archive/refs/tags/v0.0.23.zip \n</code></pre> </li> <li> <p>After a successful installation, the command line appears as follows:</p> <pre><code>root@master0:~# kubectl get pod -n local-path-storage\nNAME                                                        READY   STATUS    RESTARTS   AGE\nlocal-path-storage-local-path-provisioner-57bf67f7c-lcb88   1/1     Running   0          89s\n</code></pre> <p>Note: After installation, the storageClass provides storage services in the \"/opt/local-path-provisioner\" directory of the worker node. You can modify to another path.</p> </li> <li> <p>Set the default <code>storageClass</code>:</p> <pre><code>kubectl patch storageclass local-path -p '{\"metadata\": {\"annotations\":{\"storageclass.kubernetes.io/is-default-class\":\"true\"}}}' \n</code></pre> </li> <li> <p>After setting the default successfully, the command line appears as follows:</p> <pre><code>root@master0:~# kubectl get storageclass\nNAME                   PROVISIONER                                               RECLAIMPOLICY   VOLUMEBINDINGMODE      ALLOWVOLUMEEXPANSION   AGE\nlocal-path (default)   cluster.local/local-path-storage-local-path-provisioner   Delete          WaitForFirstConsumer   true                   115s\n</code></pre> </li> </ol>"},{"location":"MatrixOne/Deploy/deploy-Matrixone-cluster/deploy-MatrixOne-cluster-without-k8/#4-minio-deployment","title":"4. MinIO Deployment","text":"<p>The role of MinIO is to provide object storage for MatrixOne. This chapter will guide you through deploying a single node MinIO.</p> <p>Note: This chapter operates at the master0 node.</p>"},{"location":"MatrixOne/Deploy/deploy-Matrixone-cluster/deploy-MatrixOne-cluster-without-k8/#installation-launch","title":"Installation Launch","text":"<ol> <li> <p>The command line to install and start MinIO is as follows:</p> <pre><code>helm repo add minio https://charts.min.io/ mkdir minio_ins &amp;&amp; cd minio_ins helm fetch minio/minio ls -lth tar -zxvf minio-5.0.9.tgz # This version is subject to change, based on the actual download cd ./minio/\n\nkubectl create ns mostorage\n\nhelm install minio \\\n--namespace mostorage \\\n--set resources.requests.memory=512Mi \\\n--set replicas=1 \\\n--set persistence.size=10G \\\n--set mode=standalone \\\n--set rootUser=rootuser,rootPassword=rootpass123 \\\n--set consoleService.type=NodePort \\\n--set image.repository=minio/minio \\\n--set image.tag=latest \\\n--set mcImage.repository=minio/mc \\\n--set mcImage.tag=latest \\\n-f values.yaml minio/minio \n</code></pre> <p>Note</p> <p><code>--set resources.requests.memory=512Mi</code> sets MinIO's minimum memory consumption <code>--set persistence.size=1G</code> sets MinIO's storage size to 1G --<code>-set rootUser=rootuser,rootPassword=rootpass123</code> The parameters set here for rootUser and rootPassword are required for subsequent creation of the Kubernetes cluster's scrects file, so use a message that can be remembered. - If repeated multiple times for network or other reasons, you need to uninstall first:</p> <pre><code> ```\n helm uninstall minio --namespace mostorage\n ```\n</code></pre> </li> <li> <p>After installing and starting MinIO successfully, the command line appears as follows:</p> <pre><code>NAME: minio\nLAST DEPLOYED: Sun May  7 14:17:18 2023\nNAMESPACE: mostorage\nSTATUS: deployed\nREVISION: 1\nTEST SUITE: None\nNOTES:\nMinIO can be accessed via port 9000 on the following DNS name from within your cluster:\nminio.mostorage.svc.cluster.local\n\nTo access MinIO from localhost, run the below commands:\n\n  1. export POD_NAME=$(kubectl get pods --namespace mostorage -l \"release=minio\" -o jsonpath=\"{.items[0].metadata.name}\")\n\n  2. kubectl port-forward $POD_NAME 9000 --namespace mostorage\n\nRead more about port forwarding here: http://kubernetes.io/docs/user-guide/kubectl/kubectl_port-forward/\n\nYou can now access MinIO server on http://localhost:9000. Follow the below steps to connect to MinIO server with mc client:\n\n  1. Download the MinIO mc client - https://min.io/docs/minio/linux/reference/minio-mc.html#quickstart\n\n  2. export MC_HOST_minio-local=http://$(kubectl get secret --namespace mostorage minio -o jsonpath=\"{.data.rootUser}\" | base64 --decode):$(kubectl get secret --namespace mostorage minio -o jsonpath=\"{.data.rootPassword}\" | base64 --decode)@localhost:9000\n\n  3. mc ls minio-local\n</code></pre> <p>Minio has been successfully installed so far. During subsequent MatrixOne installations, MatrixOne will communicate with Minio directly through Kubernetes' Service (SVC) without additional configuration.</p> <p>However, if you want to connect to Minio from <code>localhost</code>, you can do the following command line to set the <code>POD_NAME</code> variable and connect <code>mostorage</code> to port 9000:</p> <pre><code>export POD_NAME=$(kubectl get pods --namespace mostorage -l \"release=minio\" -o jsonpath=\"{.items[0].metadata.name}\")\nnohup kubectl port-forward --address 0.0.0.0 $POD_NAME -n mostorage 9000:9000 &amp;\n</code></pre> </li> <li> <p>Once launched, use http://118.195.255.252:32001/ to log into MinIO's page and create the information stored by the object. As shown in the following figure, the account password is the rootUser and rootPassword set by <code>--set rootUser=rootuser,rootPassword=rootpass123</code> in the above steps:</p> <p></p> </li> <li> <p>Once the login is complete, you need to create an object to store the relevant information:</p> <p>Click Bucket &gt; Create Bucket and fill in Bucket's name minio-mo in Bucket Name. Once completed, click the button Create Bucket at the bottom right.</p> <p></p> </li> </ol>"},{"location":"MatrixOne/Deploy/deploy-Matrixone-cluster/deploy-MatrixOne-cluster-without-k8/#5-matrixone-cluster-deployment","title":"5. MatrixOne Cluster Deployment","text":"<p>This chapter will guide you through deploying a MatrixOne cluster.</p> <p>Note: This chapter operates at the master0 node.</p>"},{"location":"MatrixOne/Deploy/deploy-Matrixone-cluster/deploy-MatrixOne-cluster-without-k8/#installing-matrixone-operator","title":"Installing MatrixOne-Operator","text":"<p>MatrixOne Operator is a standalone software tool for deploying and managing MatrixOne clusters on Kubernetes. You can choose to deploy online or offline.</p> <ul> <li>Deploy online</li> </ul> <p>Follow these steps to install MatrixOne Operator on master0. We will create a separate namespace <code>matrixone-operator</code> for Operator.</p> <ol> <li> <p>Add the matrixone-operator address to the helm repository:</p> <pre><code>helm repo add matrixone-operator https://matrixorigin.github.io/matrixone-operator \n</code></pre> </li> <li> <p>Update the repository:</p> <pre><code>helm repo update \n</code></pre> </li> <li> <p>View the MatrixOne Operator version:</p> <pre><code>helm search repo matrixone-operator/matrixone-operator --versions --devel \n</code></pre> </li> <li> <p>Specify the release to install MatrixOne Operator:</p> <pre><code>helm install matrixone-operator matrixone-operator/matrixone-operator --version &lt;VERSION&gt; --create-namespace --namespace matrixone-operator \n</code></pre> <p>Note</p> <p>The parameter VERSION is the version number of the MatrixOne Operator to be deployed, such as 1.0.0-alpha.2.</p> </li> <li> <p>After a successful installation, confirm the installation status using the following command:</p> <pre><code>kubectl get pod -n matrixone-operator \n</code></pre> <p>Ensure that all Pod states in the above command output are Running.</p> <pre><code>[root@master0 matrixone-operator]# kubectl get pod -n matrixone-operator\nNAME                                 READY   STATUS    RESTARTS   AGE\nmatrixone-operator-f8496ff5c-fp6zm   1/1     Running   0          3m26s\n</code></pre> </li> </ol> <p>The corresponding Pod states are normal as shown in the above code line.</p> <ul> <li>Deploy offline</li> </ul> <p>You can select the Operator Release version installation package you need from the project's Release list for offline deployment.</p> <ol> <li> <p>Create a standalone namespace mo-op for Operator</p> <pre><code>NS=\"mo-op\" \nkubectl create ns \"${NS}\" \nkubectl get ns # return has mo-op \n</code></pre> </li> <li> <p>Download and extract the matrixone-operator installation package</p> <pre><code>wget https://github.com/matrixorigin/matrixone-operator/releases/download/chart-1.1.0-alpha2/matrixone-operator-1.1.0-alpha2.tgz\ntar xvf matrixone-operator-1.1.0-alpha2.tgz\n</code></pre> <p>If the original github address downloads too slowly, you can try downloading the mirror package from:</p> <pre><code>wget https://githubfast.com/matrixorigin/matrixone-operator/releases/download/chart-1.1.0-alpha2/matrixone-operator-1.1.0-alpha2.tgz\n</code></pre> <p>After extraction it will be in the current directory production folder <code>matrixone-operator</code>.</p> </li> <li> <p>Deploying matrixone-operator</p> <pre><code>NS=\"mo-op\" \ncd matrixone-operator/ \nhelm install -n ${NS} mo-op ./charts/matrixone-operator --dependency-update # Success should return the status of deployed\n</code></pre> <p>The above list of dependent docker mirrors is:</p> <ul> <li>matrixone-operator</li> <li>kruise-manager</li> </ul> <p>If you cannot pull a mirror from dockerhub, you can pull it from Aliyun using the following command:</p> <pre><code>helm -n ${NS} install mo-op ./charts/matrixone-operator --dependency-update -set image.repository=\"registry.cn-hangzhou.aliyuncs.com/moc-pub/matrixone-operator\" --set kruise.manager.image.repository=\"registry.cn-hangzhou.aliyuncs.com/moc-pub/kruise-manager\"\n</code></pre> <p>See matrixone-operator/values.yaml for details.</p> </li> <li> <p>Check operator deployment status</p> <pre><code>NS=\"mo-op\" \nhelm list -n \"${NS}\" # returns a corresponding helm chart package with deployed \nkubectl get pod -n \"${NS}\" -owide # returns a copy of a pod with Running\n</code></pre> </li> </ol> <p>To learn more about Matrixone Operator, check out Operator Administration.</p>"},{"location":"MatrixOne/Deploy/deploy-Matrixone-cluster/deploy-MatrixOne-cluster-without-k8/#creating-a-matrixone-cluster","title":"Creating a MatrixOne Cluster","text":"<ol> <li> <p>First create the namespace for MatrixOne:</p> <pre><code>NS=\"mo-hn\" \nkubectl create ns ${NS} \n</code></pre> </li> <li> <p>Customize the <code>yaml</code> file for the MatrixOne cluster by writing the following <code>mo.yaml</code> file:</p> <pre><code>apiVersion: core.matrixorigin.io/v1alpha1\nkind: MatrixOneCluster\nmetadata:\n  name: mo\n  namespace: mo-hn\nspec:\n  # 1. Configuring tn\n  tn:\n    cacheVolume: # Disk Cache for tn\n      size: 5Gi # Modified according to actual disk size and requirements\n      storageClassName: local-path # If you don't write it, the default storage class will be used.\n    resources:\n      requests:\n        cpu: 100m #1000m=1c\n        memory: 500Mi # 1024Mi\n      limits: # Note that the limits should not be lower than requests, nor exceed the capacity of a single node, and are generally allocated according to the actual situation, and it is sufficient to set the limits in line with requests.\n        cpu: 200m\n        memory: 1Gi\n    config: |  # Configuration of tn\n      [dn.Txn.Storage]\n      backend = \"TAE\"\n      log-backend = \"logservice\"\n      [dn.Ckp]\n      flush-interval = \"60s\"\n      min-count = 100\n      scan-interval = \"5s\"\n      incremental-interval = \"60s\"\n      global-interval = \"100000s\"\n      [log]\n      level = \"error\"\n      format = \"json\"\n      max-size = 512\n    replicas: 1 # The number of copies of tn, which cannot be modified. The current version only supports a setting of 1.\n  # 2. Configuring logservice\n  logService:\n    replicas: 3 # Number of copies of logservice\n    resources:\n      requests:\n        cpu: 100m #1000m=1c\n        memory: 500Mi # 1024Mi\n      limits: # Note that the limits should not be lower than requests, nor exceed the capacity of a single node, and are generally allocated according to the actual situation, and it is sufficient to set the limits in line with requests.\n        cpu: 200m\n        memory: 1Gi\n    sharedStorage: # Configuring s3 storage for logservice mapping\n      s3:\n        type: minio # The s3 storage type to which it is docked is minio\n        path: minio-mo # The path to the minio bucket for mo, previously created via the console or the mc command.\n        endpoint: http://minio.mostorage:9000 # Here is the svc address and port for the minio service\n        secretRef: # Configure the key for accessing minio, i.e. secret, with the name minio\n          name: minio\n    pvcRetentionPolicy: Retain # Configure the cycle policy for pvc after cluster destruction, Retain for Retain and Delete for Delete.\n    volume:\n      size: 1Gi # Configure the size of the S3 object store, modify it according to the actual disk size and requirements\n    config: | # Configuration of the logservice\n      [log]\n      level = \"error\"\n      format = \"json\"\n      max-size = 512\n  # 3. \u914d\u7f6e cn\n  tp:\n    cacheVolume: # Disk Cache for cn\n      size: 5Gi # Modified according to actual disk size and requirements\n      storageClassName: local-path # If you don't write it, the default storage class will be used.\n    resources:\n      requests:\n        cpu: 100m #1000m=1c\n        memory: 500Mi # 1024Mi\n      limits: # Note that the limits should not be lower than requests, nor exceed the capacity of a single node, and are generally allocated according to the actual situation, and it is sufficient to set the limits in line with requests.\n        cpu: 200m\n        memory: 2Gi\n    serviceType: NodePort # The cn needs to provide an external access portal, and its svc is set to NodePort.\n    nodePort: 31429 # nodePort Port Settings\n    config: | # Configuring cn \n      [cn.Engine]\n      type = \"distributed-tae\"\n      [log]\n      level = \"debug\"\n      format = \"json\"\n      max-size = 512\n    replicas: 1\n  version: nightly-54b5e8c # Here is the version of the MO image, you can check it through dockerhub, usually cn, tn, logservice are packaged in the same image, so you can use the same field to specify it, or you can specify it separately in the respective section, but without special circumstances, please use the unified image version.\n  # https://hub.docker.com/r/matrixorigin/matrixone/tags\n  imageRepository: matrixorigin/matrixone # Mirror repository address, if the tag has been modified since the local pull, then you can adjust this configuration item\n  imagePullPolicy: IfNotPresent # Mirror pulling policy, consistent with official k8s configurable values\n</code></pre> </li> <li> <p>Create a Secret service in namespace <code>mo-hn</code> to access MinIO by executing the following command:</p> <pre><code>kubectl -n mo-hn create secret generic minio --from-literal=AWS_ACCESS_KEY_ID=rootuser --from-literal=AWS_SECRET_ACCESS_KEY=rootpass123\n</code></pre> <p>where the username and password use the <code>rootUser</code> and <code>rootPassword</code> set when creating the MinIO cluster.</p> </li> <li> <p>Deploy the MatrixOne cluster by executing the following command:</p> <pre><code>kubectl apply -f mo.yaml \n</code></pre> </li> <li> <p>Please be patient for approximately 10 minutes, and continue if a Pod reboot occurs. until you see the following message indicating successful deployment:</p> <pre><code>[root@master0 mo]# kubectl get pods -n mo-hn      \nNAME                                 READY   STATUS    RESTARTS      AGE\nmo-tn-0                              1/1     Running   0             74s\nmo-log-0                             1/1     Running   1 (25s ago)   2m2s\nmo-log-1                             1/1     Running   1 (24s ago)   2m2s\nmo-log-2                             1/1     Running   1 (22s ago)   2m2s\nmo-tp-cn-0                           1/1     Running   0             50s\n</code></pre> </li> </ol>"},{"location":"MatrixOne/Deploy/deploy-Matrixone-cluster/deploy-MatrixOne-cluster-without-k8/#connecting-a-matrixone-cluster","title":"Connecting a MatrixOne Cluster","text":"<p>In order to connect to a MatrixOne cluster, you need to map the port of the corresponding service to the MatrixOne node. Here is a guide for connecting to a MatrixOne cluster using <code>kubectl port-forward</code>:</p> <ul> <li>Allow local access only:</li> </ul> <pre><code>nohup kubectl port-forward -nmo-hn svc/mo-tp-cn 6001:6001 &amp; \n</code></pre> <ul> <li>Specify that a machine or all machines access:</li> </ul> <pre><code>nohup kubectl port-forward -nmo-hn --address 0.0.0.0 svc/mo-tp-cn 6001:6001 &amp; \n</code></pre> <p>After specifying allow local access or specifying a machine or all, you can connect to MatrixOne using a MySQL client:</p> <pre><code># Connect to MySQL service using 'mysql' command line tool\n# Use 'kubectl get svc/mo-tp-cn -n mo-hn -o jsonpath='{.spec.clusterIP}' to get the cluster IP address of the service in the Kubernetes cluster\n# The '-h' parameter specifies the hostname or IP address of the MySQL service\n# The '-P' parameter specifies the port number of the MySQL service, in this case 6001\n# '-uroot' means login as root\n# '-p111' indicates that the initial password is 111\nmysql -h $(kubectl get svc/mo-tp-cn -n mo-hn -o jsonpath='{.spec.clusterIP}') -P 6001 -uroot -p111\nmysql: [Warning] Using a password on the command line interface can be insecure.\nWelcome to the MySQL monitor.  Commands end with ; or \\g.\nYour MySQL connection id is 163\nServer version: 8.0.30-MatrixOne-v1.1.1 MatrixOne\n\nCopyright (c) 2000, 2023, Oracle and/or its affiliates.\n\nOracle is a registered trademark of Oracle Corporation and/or its\naffiliates. Other names may be trademarks of their respective\nowners.\n\nType 'help;' or '\\h' for help. Type '\\c' to clear the current input statement.\n\nmysql&gt;\n</code></pre> <p>After displaying <code>mysql&gt;</code>, the distributed MatrixOne cluster setup connection completes.</p> <p>Note</p> <p>The login account in the above code section is the initial account. Please change the initial password promptly after logging into MatrixOne, see Password Management.</p>"},{"location":"MatrixOne/Deploy/deployment-topology/experience-deployment-topology/","title":"Experience Environment Deployment Plan","text":"<p>This document introduces the deployment plan for the MatrixOne experience environment, which can be used to experience the basic distributed capabilities of MatrixOne. You can simply experience the database's essential development, operation, and maintenance functions. Still, it is unsuitable for deploying production environments, performing performance stress tests, conducting high availability tests, etc.</p>"},{"location":"MatrixOne/Deploy/deployment-topology/experience-deployment-topology/#hardware-configuration","title":"Hardware Configuration","text":"<p>The hardware configuration requirements for the deployment plan of the experience environment are as follows:</p> Hardware Environment Requirements Physical/Virtual Machine Number of Devices 3 CPU Configuration 2 cores or more Memory Configuration 8GB or more Disk Configuration 200GB or more Network Card Configuration Not limited"},{"location":"MatrixOne/Deploy/deployment-topology/experience-deployment-topology/#software-configuration","title":"Software Configuration","text":"<p>The software configuration requirements for the deployment plan of the experience environment include operating system and platform requirements and deployment software module requirements:</p>"},{"location":"MatrixOne/Deploy/deployment-topology/experience-deployment-topology/#operating-system-and-platform-requirements","title":"Operating System and Platform Requirements","text":"Operating System Supported CPU Architecture CentOS 7.3 or above 7.x version X86_64"},{"location":"MatrixOne/Deploy/deployment-topology/experience-deployment-topology/#deployment-software-module-requirements","title":"Deployment Software Module Requirements","text":"Software Module Number of Deployments Function Description Kubernetes 3 Provides container management for the entire cluster Minio 1 Provides storage services for the MatrixOne cluster MatrixOne 1 Core of the database <p>The deployment guide for the MatrixOne distributed environment experience environment can refer to MatrixOne Distributed Cluster Deployment.</p>"},{"location":"MatrixOne/Deploy/deployment-topology/minimal-deployment-topology/","title":"Minimum Production Environment Deployment Plan","text":"<p>The MatrixOne distributed cluster's minimum production configuration introduced in this article can be used for production environments. It can support tens of millions of data and hundreds of concurrent OLTP or OLAP businesses with tens of GB of data volume. At the same time, it provides a certain level of high availability guarantee. Even if one of the 3 nodes goes offline, it works normally.</p>"},{"location":"MatrixOne/Deploy/deployment-topology/minimal-deployment-topology/#hardware-configuration","title":"Hardware Configuration","text":"<p>The hardware configuration requirements for the minimum production environment deployment plan are as follows:</p> Hardware Environment Requirements Both Physical and Virtual Machines are acceptable Number of Devices 3 CPU Configuration 8 cores or more Memory Configuration 32GB or more Disk Configuration Each node has 1 system disk of 100G and 4-7 data disks of 100G, all requiring PCIe NVME SSD 3.0 Network Card Configuration Dual 10GbE ports, 10GbE network card and switch"},{"location":"MatrixOne/Deploy/deployment-topology/minimal-deployment-topology/#software-configuration","title":"Software Configuration","text":"<p>The software configuration requirements for the minimum production environment deployment plan include operating system and platform requirements and deployment software module requirements:</p>"},{"location":"MatrixOne/Deploy/deployment-topology/minimal-deployment-topology/#operating-system-and-platform-requirements","title":"Operating System and Platform Requirements","text":"Operating System Supported CPU Architecture Debian 11 or higher version (Kernel required 5.0 or higher) X86_64"},{"location":"MatrixOne/Deploy/deployment-topology/minimal-deployment-topology/#deployment-software-module-requirements","title":"Deployment Software Module Requirements","text":"Node Name Resource Node Role Deployment Modules Disk Deployment node0 8c32g Control/Storage/Compute Deployment and O&amp;M tool mo-ctl, Kubernetes master/node, Minio, MatrixOne Proxy, Logservice, TN, Load Balancer Kubernetes requires 1 data disk, Minio requires 1 to 4 data disks (physical partitioning recommended, logical partitioning is also possible), Logservice requires 1 data disk, TN requires 1 data disk node1 8c32g Control/Storage/Compute Deployment and O&amp;M tool mo-ctl, Kubernetes master/node, Minio, MatrixOne Proxy, Logservice, CN, Load Balancer Kubernetes requires 1 data disk, Minio requires 1 to 4 data disks (physical partitioning recommended, logical partitioning is also possible), Logservice requires 1 data disk, CN requires 1 data disk node2 8c32g Control/Storage/Compute Deployment and O&amp;M tool mo-ctl, Kubernetes master/node, Minio, MatrixOne Proxy, Logservice, CN, Load Balancer Kubernetes requires 1 data disk, Minio requires 1 to 4 data disks (physical partitioning recommended, logical partitioning is also possible), Logservice requires 1 data disk, CN requires 1 data disk"},{"location":"MatrixOne/Deploy/deployment-topology/recommended-prd-deployment-topology/","title":"Recommended Production Environment Deployment Plan","text":"<p>The recommended configuration of the MatrixOne distributed cluster described in this document is suitable for production environments and possesses robust performance and reliability. This configuration can support billions of data with thousands of concurrent OLTP operations or handle OLAP operations with tens of TB data volume.</p> <p>This configuration provides a high degree of availability guarantee. Whether it is Kubernetes, Minio, or MatrixOne, the system can operate normally when a node goes offline. This means the system has strong fault tolerance and can maintain business continuity in node failure.</p> <p>Below are the details for the recommended production environment deployment plan:</p>"},{"location":"MatrixOne/Deploy/deployment-topology/recommended-prd-deployment-topology/#software-and-hardware-configuration-requirements","title":"Software and Hardware Configuration Requirements","text":"Module Kubernetes master Minio LogService TN (mixed proxy and load balancing) CN (mixed proxy and load balancing) Number of machines (both physical machines and virtual machines) 3 machines 4 machines 3 machines 1 machine y machines Node Role Kubernetes Management Storage Service MatrixOne Work Node MatrixOne Work Node MatrixOne Work Node CPU configuration 4 cores or above 4 cores or above 4 cores or above 16 cores or above 16 cores or above Memory configuration 8GB or more 8GB or more 8GB or more 64GB or more 32GB or more Network Card Dual 10 Gigabit Ethernet ports, 10 Gigabit Ethernet Ditto Ditto Ditto Ditto System disk configuration Each node PCIe NVME SSD 3.0 \u00d7 1 block 100GB, it is recommended to do Raid 1 Same as above Same as above Same as above Same as above Kubernetes disk configuration PCIe NVME SSD 3.0 \u00d7 1 piece of 100GB per node, Raid 1 is recommended Same as above Same as above Same as above Same as above Disk Configuration N/A PCIe NVME SSD 3.0 \u00d7 4 x a G/block per node, no requirement for raid, physical partitioning is recommended, logical partitioning is recommended. Each node NVME SSD 3.0/4.0 (read rate above 1G/s) \u00d7 1 block \u00d7 b G/block. NVME SSD 3.0/4.0 \u00d7 2 blocks \u00d7 c G/block NVME SSD 3.0/4.0 \u00d7 2 blocks \u00d7 d G/block per node. Remarks a is related to the volume of business data, a = volume of business data \u00d7 2/16. b is related to the amount of business data; the closer, the better. c is related to the amount of business data; the closer, the better. One of them is reserved for TN/CN failure recovery. d is related to the amount of business data; the closer, the better. One of them is reserved for TN/CN failure recovery. y is related to the business load."},{"location":"MatrixOne/Deploy/deployment-topology/recommended-prd-deployment-topology/#other-configuration","title":"Other configuration","text":"Operating System Supported CPU Architectures Debian 11 or above (Kernel 5.0 or above) X86_64 <p>Since each privatized production environment's deployment scenarios are different, please contact MatrixOne's customer support team for specific deployment solutions and deployment details.</p>"},{"location":"MatrixOne/Deploy/deployment-topology/topology-overview/","title":"Cluster Topology Planning Overview","text":"<p>MatrixOne database cluster is an architecture for distributed deployment of database systems on multiple physical or virtual servers, aiming to provide high availability and scalability. By distributing the database to multiple servers, the cluster can realize data redundancy backup, load balancing, and fault recovery, thereby providing higher performance and reliability.</p> <p>The database cluster topology can choose a suitable architecture for business and performance requirements. Understanding the advantages and disadvantages of different topologies and applicable scenarios will help you design a stable and efficient database cluster architecture.</p>"},{"location":"MatrixOne/Deploy/deployment-topology/topology-overview/#topology-deployment-document","title":"Topology deployment document","text":"<p>We recommend deployment documents for three environments, refer to:</p> <ul> <li>Experience Environment Deployment Plan</li> <li>Minimum Production Environment Deployment Plan</li> <li>Recommended Production Environment Deployment Plan</li> </ul>"},{"location":"MatrixOne/Develop/develop-overview/","title":"Overview","text":"<p>This article and subsequent sections mainly aim to introduce how to perform application development using MatrixOne. We will show how to connect to MatrixOne, create databases and tables, and build applications based on standard programming languages such as Java, Python, and Golang.</p>"},{"location":"MatrixOne/Develop/develop-overview/#interaction-between-matrixone-and-applications","title":"Interaction between MatrixOne and Applications","text":"<p>MatrixOne is generally highly compatible with MySQL 8.0 regarding communication protocol, SQL syntax, connection tools, or development modes. If this manual does not explicitly explain specific usage, you can refer to the MySQL 8.0 manual. Most application frameworks or programming languages can use MySQL's client library.</p> <p>For significant differences between MatrixOne and MySQL, see MySQL Compatibility section.</p>"},{"location":"MatrixOne/Develop/develop-overview/#matrixone-transaction-mechanism","title":"MatrixOne Transaction Mechanism","text":"<p>MatrixOne supports both Optimistic Transaction and Pessimistic Transaction. In the current version of MatrixOne, the default is the Pessimistic Transaction mode. You can switch to Optimistic Transaction mode by modifying the startup configuration file.</p> <p>You can start a transaction with <code>BEGIN</code>, commit the transaction with <code>COMMIT</code>, or roll back the transaction with <code>ROLLBACK</code>. MatrixOne ensures the atomicity of all statements from the beginning of <code>BEGIN</code> to the end of <code>COMMIT</code> or <code>ROLLBACK</code>. All statements during this period are either entirely successful or entirely failed, thereby ensuring the data consistency required in application development.</p> <p>If you choose to use optimistic transactions, please add error handling and retry mechanisms in the application, as MatrixOne does not guarantee the success of each transaction. If you use pessimistic transactions, you don't need to consider this. Optimistic transactions will have superior concurrent performance compared to pessimistic transactions.</p>"},{"location":"MatrixOne/Develop/develop-overview/#reference","title":"Reference","text":"<ul> <li>Connect to MatrixOne</li> <li>Schema Design</li> <li>Import Data</li> <li>Read Data</li> <li>Transactions</li> <li>Application Developing Tutorials</li> </ul>"},{"location":"MatrixOne/Develop/Ecological-Tools/BI-Connection/FineBI-connection/","title":"Visualizing MatrixOne Data with FineBI","text":""},{"location":"MatrixOne/Develop/Ecological-Tools/BI-Connection/FineBI-connection/#overview","title":"Overview","text":"<p>FineBI is a next-generation big data analytics tool that empowers business professionals to gain deep insights and leverage their data. In FineBI, users can easily create diverse visualizations, analyze data freely, and explore their datasets. FineBI boasts various data connectivity features and can be used to build complex reports constructing data-driven decision analysis systems. It finds wide application in corporate management, production control, financial intelligence, and sales operations.</p> <p>MatrixOne supports integration with the data visualization tool FineBI. This article will guide you on connecting to the standalone version of MatrixOne using FineBI and creating various visual data reports, assembling them into dashboards for data analysis and exploration.</p>"},{"location":"MatrixOne/Develop/Ecological-Tools/BI-Connection/FineBI-connection/#before-you-start","title":"Before you start","text":"<ul> <li> <p>Completed the installation and startup of MatrixOne.</p> </li> <li> <p>Installed FineBI and performed FineBI initial setup.</p> </li> </ul> <p>Note</p> <p>The FineBI version used in the operations shown in this document is FineBI Linux 6.0. You can choose to install the Linux_unix_FineBI6_0-CN.sh package.</p>"},{"location":"MatrixOne/Develop/Ecological-Tools/BI-Connection/FineBI-connection/#connecting-to-matrixone-service-via-finebi","title":"Connecting to MatrixOne Service via FineBI","text":"<ol> <li> <p>After logging into FineBI, select Management System &gt; Data Connection &gt; Data Connection Management &gt; New Data Connection as shown below, then choose MySQL:</p> <p></p> </li> <li> <p>Fill in the MatrixOne connection configuration, including the database name, host, port, username, and password. Other parameters can be left at their default settings. You can click the Test Connection button to verify if the connection is functional and then click Save :</p> <p></p> </li> </ol>"},{"location":"MatrixOne/Develop/Ecological-Tools/BI-Connection/FineBI-connection/#creating-visual-reports-using-matrixone-data","title":"Creating Visual Reports Using MatrixOne Data","text":"<ol> <li> <p>Create Demo Data:</p> <p>First, log in to the MatrixOne database and execute the following SQL statements to create the necessary data tables and views for the demo:</p> <pre><code>create database orders;\nuse orders;\nCREATE TABLE `category` (`product_category_name` VARCHAR(255) DEFAULT NULL,\n`product_category_name_english` VARCHAR(255) DEFAULT NULL );\nCREATE TABLE `item` (`order_id` VARCHAR(255) NOT NULL, `order_item_id` INT DEFAULT null,\n`product_id` VARCHAR(255) DEFAULT null,\n`seller_id` VARCHAR(255) DEFAULT null, `shipping_limit_date` DATETIME DEFAULT null,\n`price` DECIMAL(10,2) DEFAULT null,\n`freight_value` DECIMAL(10,2) DEFAULT null\n);\nCREATE TABLE `review` (\n`review_id` VARCHAR(255) NOT NULL,\n`order_id` VARCHAR(255) DEFAULT null,\n`review_score` TINYINT DEFAULT null,\n`review_comment_title` VARCHAR(255) DEFAULT null,\n`review_comment_message` TEXT DEFAULT null,\n`review_creation_date` DATETIME DEFAULT null,\n`review_answer_timestamp` DATETIME DEFAULT null,\nPRIMARY KEY (`review_id`)\n);\nCREATE TABLE `order_time` (\n`order_id` VARCHAR(255) NOT NULL,\n`customer_id` VARCHAR(255) DEFAULT null,\n`y` INT DEFAULT null,\n`q` INT DEFAULT null,\n`m` INT DEFAULT null,\n`d` DATE DEFAULT null,\n`h` INT DEFAULT null,\n`order_purchase_timestamp` DATETIME DEFAULT null\n);\nCREATE TABLE `orders` (\n`order_id` VARCHAR(255) NOT NULL,\n`customer_id` VARCHAR(255) DEFAULT null,\n`order_status` VARCHAR(255) DEFAULT null,\n`order_purchase_timestamp` DATETIME DEFAULT null,\n`order_approved_at` DATETIME DEFAULT null,\n`order_delivered_carrier_date` DATETIME DEFAULT null,\n`order_delivered_customer_date` DATETIME DEFAULT null,\n`order_estimated_delivery_date` DATETIME DEFAULT null,\nPRIMARY KEY (`order_id`)\n);\nCREATE TABLE `product` (\n`product_id` VARCHAR(255) NOT NULL,\n`product_category_name` VARCHAR(255) DEFAULT null,\n`product_name_lenght` INT DEFAULT null,\n`product_description_lenght` INT DEFAULT null,\n`product_photos_qty` INT DEFAULT null,\n`product_weight_g` INT DEFAULT null,\n`product_length_cm` INT DEFAULT null,\n`product_height_cm` INT DEFAULT null,\n`product_width_cm` INT DEFAULT null,\nPRIMARY KEY (`product_id`)\n);\nCREATE TABLE `rfm` (\n`customer_id` VARCHAR(255) DEFAULT null,\n`user_type` VARCHAR(255) DEFAULT null,\n`shijian` DATE DEFAULT null\n);\n\nCREATE view total_order_value as select  t.order_id,product_id,seller_id,(price*total)+(freight_value*total) as order_value  from (select order_id,count(*) as total  from item group by order_id) t join item on t.order_id=item.order_id;\n\nCREATE view order_detail as select a.order_id,product_id,seller_id, customer_id,round(order_value,2) as order_value, y,q,m,d,h,order_purchase_timestamp from total_order_value a inner join order_time b on a.order_id=b.order_id;\n</code></pre> <p>Next, use the following SQL import statements to import the prepared demo data into the respective tables of the MatrixOne database.</p> <p>Note</p> <p>Please note that the path <code>/root/data/table_name.csv</code> is the path to the data files for each table. You can generate your data following a similar process.</p> <pre><code>use orders;\nload data local infile '/root/data/category.csv' into table category FIELDS TERMINATED BY ',' OPTIONALLY ENCLOSED BY '\"' LINES TERMINATED BY \"\\r\\n\";\nload data local infile '/root/data/review.csv' into table review FIELDS TERMINATED BY ',' OPTIONALLY ENCLOSED BY '\"' LINES TERMINATED BY \"\\r\\n\";\nload data local infile '/root/data/product.csv' into table product FIELDS TERMINATED BY ',' OPTIONALLY ENCLOSED BY '\"' LINES TERMINATED BY \"\\r\\n\";\nload data local infile '/root/data/item.csv' into table item FIELDS TERMINATED BY ',' OPTIONALLY ENCLOSED BY '\"' LINES TERMINATED BY \"\\r\\n\";\nload data local infile '/root/data/order_time.csv' into table order_time FIELDS TERMINATED BY ',' OPTIONALLY ENCLOSED BY '\"' LINES TERMINATED BY \"\\r\\n\";\nload data local infile '/root/data/orders.csv' into table orders FIELDS TERMINATED BY ',' OPTIONALLY ENCLOSED BY '\"' LINES TERMINATED BY \"\\r\\n\";\nload data local infile '/root/data/rfm.csv' into table rfm FIELDS TERMINATED BY ',' OPTIONALLY ENCLOSED BY '\"' LINES TERMINATED BY \"\\r\\n\";\n</code></pre> </li> <li> <p>Add Data Sets:</p> <p>In FineBI, click Public Data, then click New Folder to create and select a folder. After that, click New Data Set, choose SQL Data Set, and add the SQL query to the selected folder. Enter the dataset name and input the SQL query as shown below:</p> <pre><code>select d,\ncount(order_id) as order_num,\ncount(DISTINCT customer_id)\nfrom orders.order_detail\ngroup by d\norder by d\n</code></pre> <p>You can click the Preview button to view the results of the SQL query and then click OK to save it:</p> <p></p> <p>Below are examples of all the query SQL used in this demo:</p> <pre><code>-- Daily active users and order count\nselect d,\ncount(order_id) as order_num,\ncount(DISTINCT customer_id)\nfrom orders.order_detail\ngroup by d\norder by d\n\n-- Monthly active users and order count\nselect count(DISTINCT customer_id),\ncount(order_id),\nconcat(y, '-', m)\nfrom orders.order_detail\ngroup by y,m\norder by y,m\n\n-- Active users and order count in different periods\nselect h,\ncount(DISTINCT customer_id),\ncount(order_id) order_num\nfrom orders.order_detail\ngroup by h\norder by h\n\n-- User count by type\nSELECT count(*),\nuser_type\nfrom orders.rfm\nGROUP BY user_type\n\n-- Monthly GMV\nselect y,m,\nsum(order_value),\nconcat(y, \"-\", m) month\nfrom orders.order_detail\ngroup by y,m\norder by y,m\n\n-- Quarterly GMV\nselect y,q,\nsum(order_value) gmv,\nconcat(y, \"\u5b63\u5ea6\", q) as quator\nfrom orders.order_detail\ngroup by y,q\norder by concat(y, \"\u5b63\u5ea6\", q) asc\n\n-- Quarterly ARPU\nselect y,q,\nround((sum(order_value)/count(DISTINCT customer_id)),2) arpu,\nconcat(y, \"\u5b63\u5ea6\", q) as quator\nfrom orders.order_detail\ngroup by y,q\norder by y,q\n\n-- Monthly ARPU\nselect y,m,\nround((sum(order_value)/count(DISTINCT customer_id)),2) arpu,\nconcat(y, \"-\", m) as month\nfrom orders.order_detail\ngroup by y,m\norder by y,m\n\n-- Important retained users' popularity index\nSELECT e.product_category_name_english good_type,\nSUM(a.order_value) ordder_total_value,\nROUND(AVG(c.review_score), 2) good_review_score,\n(0.7*SUM(a.order_value)+0.3*10000*ROUND(AVG(c.review_score), 7))\ntop_rank_rate\nFROM orders.order_detail a\nINNER JOIN\n(SELECT customer_id\nfrom orders.rfm\nWHERE user_type='\u91cd\u8981\u633d\u7559\u7528\u6237' ) as b ON a.customer_id=b.customer_id\nLEFT JOIN orders.review c ON a.order_id=c.order_id\nLEFT JOIN orders.product d ON a.product_id=d.product_id\nLEFT JOIN orders.category e ON d.product_category_name=e.product_category_name\nwhere e.product_category_name_english is not NULL\nGROUP BY e.product_category_name_english limit 50\n\n-- General retained users' popularity index\nSELECT e.product_category_name_english good_type,\nSUM(a.order_value) ordder_total_value,\nROUND(AVG(c.review_score), 2) good_review_score,\n(0.7*SUM(a.order_value)+0.3*10000*ROUND(AVG(c.review_score), 7))\ntop_rank_rate\nFROM orders.order_detail a\nINNER JOIN\n(SELECT customer_id from orders.rfm\nWHERE user_type='\u4e00\u822c\u633d\u7559\u7528\u6237' ) as b ON a.customer_id=b.customer_id\nLEFT JOIN orders.review c ON a.order_id=c.order_id\nLEFT JOIN orders.product d ON a.product_id=d.product_id\nLEFT JOIN orders.category e ON d.product_category_name=e.product_category_name\nwhere e.product_category_name_english is not NULL\nGROUP BY e.product_category_name_english limit 50\n</code></pre> </li> <li> <p>Update Data:</p> <p>After saving the dataset, you need to click the Update Data button and wait for the data update to complete before proceeding with the analysis:</p> <p></p> </li> <li> <p>Create Analytic Themes:</p> <p>The analytic theme in this example is used to visually present data for general retained users, important retained users, monthly ARPU, quarterly ARPU, active users in different periods, daily active users, monthly active users, and order counts. It assists in decision-making and improving business operations. Here are the specific steps to create an analytic theme:</p> <ul> <li>Click My Analysis, then click New Folder to create and select a folder.</li> <li>Click New Analytic Theme, select the dataset created in the previous step, and then click OK.</li> </ul> <p></p> <p>Note: You can use the Batch Selection feature to select multiple datasets for theme analysis.</p> <p></p> <p>Click the Add Component button, choose the chart type, drag the fields from the left to the right as needed, double-click to modify the field visualization name, and change the component name below to describe the content of the report analyzed by the component:</p> <p></p> <p></p> </li> <li> <p>Assemble Dashboards:</p> <p>Click Add Dashboard to add the components you just created to the dashboard. You can freely drag and resize the components and change the component names below to describe the report's content analyzed by the component.</p> <p></p> </li> <li> <p>Publish Dashboards:</p> <p>After assembling the dashboard, click Publish, set the publication name, publication node, and display platform. Then click Confirm, and your dashboard will be successfully published.</p> <p></p> <p>Now, see the newly published dashboard under Navigation and see how it looks.</p> <p></p> </li> </ol>"},{"location":"MatrixOne/Develop/Ecological-Tools/BI-Connection/Superset-connection/","title":"Visual Monitoring of MatrixOne with Superset","text":""},{"location":"MatrixOne/Develop/Ecological-Tools/BI-Connection/Superset-connection/#overview","title":"Overview","text":"<p>Superset is an open-source, modern, and lightweight BI analysis tool that can connect to multiple data sources, provide rich visualizations, and support custom dashboards, making it easy for users to explore and present data.</p> <p>MatrixOne version 1.0 now supports integration with the data visualization tool Superset. This guide will walk you through the quick deployment of MatrixOne and Superset environments. Combining MatrixOne with Superset's visualization capabilities allows you to create a simple monitoring dashboard to track the 'system_metric' data within the MatrixOne database.</p> <p>If you wish to extend the functionality further, you can explore other configuration options to monitor various aspects of the entire MatrixOne database.</p>"},{"location":"MatrixOne/Develop/Ecological-Tools/BI-Connection/Superset-connection/#before-you-start","title":"Before you start","text":""},{"location":"MatrixOne/Develop/Ecological-Tools/BI-Connection/Superset-connection/#recommended-hardware-requirements","title":"Recommended Hardware Requirements","text":"<p>This practice does not require high hardware specifications. A small virtual machine with 2 cores and 4GB of RAM is sufficient for experiencing the functionality of this process.</p> <ul> <li>Recommended hardware resources: 8 cores and 32GB of RAM for a virtual machine.</li> </ul>"},{"location":"MatrixOne/Develop/Ecological-Tools/BI-Connection/Superset-connection/#recommended-software-environment","title":"Recommended Software Environment","text":"<p>Before proceeding with this practice, you need to install and configure the following software environment:</p> <ul> <li>Docker, with a version of 23.0.1 or higher.</li> <li>MatrixOne</li> <li>Superset, recommended version 2.1.0.</li> </ul> <p>You can follow the steps in the following sections to install and configure them step by step.</p>"},{"location":"MatrixOne/Develop/Ecological-Tools/BI-Connection/Superset-connection/#installing-docker","title":"Installing Docker","text":"<p>All software environments in this practice are based on Docker installation. You can refer to the official Docker documentation for installing and starting Docker.</p>"},{"location":"MatrixOne/Develop/Ecological-Tools/BI-Connection/Superset-connection/#installing-matrixone","title":"Installing MatrixOne","text":"<p>You can install and deploy MatrixOne based on your operating system environment by following these links:</p> <ul> <li>Deploying MatrixOne using Docker in macOS environment: Installation Guide</li> <li>Deploying MatrixOne using Docker in Linux environment: Installation Guide</li> </ul>"},{"location":"MatrixOne/Develop/Ecological-Tools/BI-Connection/Superset-connection/#installing-superset","title":"Installing Superset","text":"<p>Here are the steps for deploying a single-node Superset using Docker:</p> <ol> <li> <p>After installing and starting Docker, use the following command to pull the Superset image from Docker Hub:</p> <pre><code>docker pull amancevice/superset\n</code></pre> </li> <li> <p>Start the Superset image with the following command:</p> <pre><code>docker run -e \"SUPERSET_SECRET_KEY=your_secret_key_here\" --name superset -u 0 -d -p 8088:8088 amancevice/superset\n</code></pre> <p>Note</p> <p>You can generate a secure secret key using <code>openssl rand -base64 42</code>. Alternatively, you can set it using the <code>SUPERSET_SECRET_KEY</code> environment variable.</p> </li> <li> <p>Initialize the Superset database with the following command:</p> <pre><code>docker exec -it superset superset db upgrade\n</code></pre> </li> <li> <p>Create a Superset admin user by running the following command and providing the requested registration information:</p> <pre><code>docker exec -it superset superset fab create-admin\n</code></pre> </li> <li> <p>Create default roles and permissions using the following command:</p> <pre><code>docker exec -it superset superset init\n</code></pre> </li> <li> <p>Start the Superset service with threads, auto-reloading, and debugging using the following command:</p> <pre><code>docker exec -it superset superset run --with-threads --reload --debugger\n</code></pre> </li> </ol>"},{"location":"MatrixOne/Develop/Ecological-Tools/BI-Connection/Superset-connection/#connecting-matrixone-with-superset","title":"Connecting MatrixOne with Superset","text":"<ol> <li> <p>Access the Superset login page, typically at <code>http://ip:8080</code>. Then, enter your username and password to log in to Superset.</p> <p></p> <p>Note: The port for Superset may be either 8080 or 8088, depending on your configuration. The username and password are the ones you set during the Superset deployment.</p> <p>After logging in, you will see the main interface of Superset.</p> <p></p> </li> <li> <p>Create a database connection:</p> <p>In Superset, you first need to create a database connection to MatrixOne. Click on Settings in the top right corner and select Database Connections.</p> <p>Click the + DATABASE button on the Database Connections page and choose MySQL as the database type.</p> <p>Fill in the connection information for the MatrixOne database, including the host, port, username, and password.</p> <p></p> <p>After filling in the details, click the CONNECT button and then click FINISH.</p> <p></p> </li> </ol>"},{"location":"MatrixOne/Develop/Ecological-Tools/BI-Connection/Superset-connection/#creating-visual-monitoring-dashboards","title":"Creating Visual Monitoring Dashboards","text":"<p>Now, you can use the MatrixOne database to create a monitoring dashboard.</p> <ol> <li> <p>Click on SQL &gt; SQL Lab on the page, select the MatrixOne database connection you created earlier, and write SQL queries to select the tables you want to monitor.</p> <p></p> <p>You can write multiple queries to monitor different metrics. Here are example SQL statements for some queries:</p> <ul> <li>CPU Usage:</li> </ul> <pre><code>SELECT metric_name, collecttime, value\nFROM metric\nWHERE metric_name = 'sys_cpu_combined_percent' OR metric_name = 'sys_cpu_seconds_total'\nORDER BY collecttime DESC;\n</code></pre> <ul> <li>Storage Usage:</li> </ul> <pre><code>SELECT metric_name, value, collecttime\nFROM metric\nWHERE metric_name = 'server_storage_usage'\nORDER BY collecttime DESC;\n</code></pre> <ul> <li>Number of Connections:</li> </ul> <pre><code>SELECT metric_name, value, collecttime\nFROM metric\nWHERE metric_name = 'server_connections'\nORDER BY collecttime DESC;\n</code></pre> <ul> <li>Disk Read and Write:</li> </ul> <pre><code>SELECT metric_name, value, collecttime\nFROM metric\nWHERE metric_name = 'sys_disk_read_bytes' OR metric_name = 'sys_disk_write_bytes'\nORDER BY collecttime DESC;\n</code></pre> <ul> <li>Network Receive and Send:</li> </ul> <pre><code>SELECT metric_name, value, collecttime\nFROM metric\nWHERE metric_name = 'sys_net_sent_bytes' OR metric_name = 'sys_net_recv_bytes'\nORDER BY collecttime DESC;\n</code></pre> <ul> <li>Memory Usage:</li> </ul> <pre><code>SELECT metric_name, value, collecttime\nFROM metric\nWHERE metric_name = 'sys_memory_available' OR metric_name = 'sys_memory_used'\nORDER BY collecttime DESC;\n</code></pre> </li> <li> <p>Transaction Errors:</p> <pre><code>SELECT metric_name, value, collecttime\nFROM metric\nWHERE metric_name = 'sql_transaction_errors' OR metric_name = 'sql_transaction_total'\nORDER BY collecttime DESC;\n</code></pre> </li> <li> <p>SQL Errors:</p> <pre><code>SELECT metric_name, value, collecttime\nFROM metric\nWHERE metric_name = 'sql_statement_errors' OR metric_name = 'sql_statement_total'\nORDER BY collecttime DESC;\n</code></pre> </li> <li> <p>Click SAVE &gt; Save dataset &gt; SAVE &amp; EXPLORE to save each of the queries above and use them as data sources for subsequent charts.</p> </li> <li> <p>Edit the charts:</p> <p>Here, we'll use one of the queries as an example to demonstrate how to edit a visual chart. First, select the 'disk_read_write' query as the data source for the chart. In the SQL Lab, click CREATE CHART below the corresponding query, or if you've saved the query in the previous step, the page will redirect to the Chart editing page:</p> <p></p> </li> <li> <p>In the chart editing page, choose chart type, time field, metric columns from the query, grouping columns, and other options. Once configured, select RUN:</p> <p></p> </li> <li> <p>Click UPDATE CHART &gt; SAVE to save the edited chart.</p> </li> </ol>"},{"location":"MatrixOne/Develop/Ecological-Tools/BI-Connection/Superset-connection/#organizing-dashboards","title":"Organizing Dashboards","text":"<ol> <li> <p>After creating multiple charts, you can assemble them in Superset to create a monitoring dashboard:</p> <p>Click on Dashboards, then click + DASHBOARD to create a new dashboard or edit an existing one.</p> <p></p> </li> <li> <p>In the dashboard editing page, you can drag the charts you've created from the CHARTS list on the right onto the dashboard for assembly. You can also freely adjust the position of charts, add titles, and more.</p> <p></p> </li> </ol> <p>You have successfully connected the MatrixOne database with Superset and created a simple monitoring dashboard to visualize key metrics of the MatrixOne database.</p>"},{"location":"MatrixOne/Develop/Ecological-Tools/BI-Connection/yonghong-connection/","title":"Visualizing MatrixOne Reports with Yonghong BI","text":""},{"location":"MatrixOne/Develop/Ecological-Tools/BI-Connection/yonghong-connection/#overview","title":"Overview","text":"<p>Yonghong BI is a comprehensive big data platform that integrates self-service data preparation, exploratory self-service analysis, in-depth analysis, enterprise-level management, and high-performance computing capabilities, providing an all-in-one big data solution. Yonghong BI aims to provide flexible and user-friendly end-to-end big data analysis tools for enterprises of all sizes, enabling users to easily uncover the value of big data and gain profound insights.</p> <p>MatrixOne supports connectivity to the intelligent data analysis tool, Yonghong BI. This article will guide you on connecting to the standalone version of MatrixOne through Yonghong BI and creating various visual data reports.</p>"},{"location":"MatrixOne/Develop/Ecological-Tools/BI-Connection/yonghong-connection/#before-you-start","title":"Before you start","text":"<ul> <li>MatrixOne installation and startup are completed. Install and Start MatrixOne.</li> <li>Yonghong BI is installed. Yonghong BI is a free intelligent data analysis tool based on native installation, eliminating the need for complex deployment steps.</li> </ul>"},{"location":"MatrixOne/Develop/Ecological-Tools/BI-Connection/yonghong-connection/#connecting-matrixone-services-with-yonghong-bi","title":"Connecting MatrixOne Services with Yonghong BI","text":""},{"location":"MatrixOne/Develop/Ecological-Tools/BI-Connection/yonghong-connection/#adding-a-data-source","title":"Adding a Data Source","text":"<p>Open Yonghong BI, select Add Data Source &gt; + (New Data Source) on the left, and choose MySQL in the pop-up database options.</p> <p></p> <p>After filling in the connection information related to the MatrixOne database, you can select the Test Connection button in the upper right corner to ensure a successful connection.</p> <p>Once the connection is successful, click Save to save the data source information we just filled in.</p> <p></p>"},{"location":"MatrixOne/Develop/Ecological-Tools/BI-Connection/yonghong-connection/#creating-a-dataset","title":"Creating a Dataset","text":"<p>In Yonghong BI, select the Create Dataset menu on the left, then choose the data source you added just now. You will see tables and views from the MatrixOne database. To meet your business needs, add Custom SQL, then click Refresh Data. The query results will be displayed on the right. After confirming that the query results meet expectations, click Save to save the dataset.</p> <p></p>"},{"location":"MatrixOne/Develop/Ecological-Tools/BI-Connection/yonghong-connection/#creating-reports","title":"Creating Reports","text":"<p>First, in Yonghong BI, select the Create Report menu on the left, then choose the appropriate Chart Component from the right and drag it to the left.</p> <p></p> <p>Select the dataset you just created, set the time dimension as the X-axis, and set the daily order count and active user count as the Y-axis. You can drag the measurement and dimension fields to their respective positions as needed. After editing, click Save to save the report you created.</p> <p></p>"},{"location":"MatrixOne/Develop/Ecological-Tools/BI-Connection/yonghong-connection/#viewing-reports","title":"Viewing Reports","text":"<p>Finally, in Yonghong BI, select View Report, then click on the report name we created in the tree menu on the left. You will be able to view the report we created above.</p> <p></p> <p>You have successfully connected to the MatrixOne database using Yonghong BI and created a simple report for visualizing MatrixOne data.</p>"},{"location":"MatrixOne/Develop/Ecological-Tools/Computing-Engine/Flink/flink-kafka-matrixone/","title":"Write Kafka data to MatrixOne using Flink","text":"<p>This chapter describes how to write Kafka data to MatrixOne using Flink.</p>"},{"location":"MatrixOne/Develop/Ecological-Tools/Computing-Engine/Flink/flink-kafka-matrixone/#pre-preparation","title":"Pre-preparation","text":"<p>This practice requires the installation and deployment of the following software environments:</p> <ul> <li>Complete standalone MatrixOne deployment.</li> <li>Download and install lntelliJ IDEA (2022.2.1 or later version).</li> <li>Select the JDK 8+ version version to download and install depending on your system environment.</li> <li>Download and install Kafka.</li> <li>Download and install Flink with a minimum supported version of 1.11.</li> <li>Download and install the MySQL Client.</li> </ul>"},{"location":"MatrixOne/Develop/Ecological-Tools/Computing-Engine/Flink/flink-kafka-matrixone/#operational-steps","title":"Operational steps","text":""},{"location":"MatrixOne/Develop/Ecological-Tools/Computing-Engine/Flink/flink-kafka-matrixone/#step-one-start-the-kafka-service","title":"Step one: Start the Kafka service","text":"<p>Kafka cluster coordination and metadata management can be achieved through KRaft or ZooKeeper. Here, instead of relying on standalone ZooKeeper software, we'll use Kafka's own KRaft for metadata management. Follow these steps to configure the configuration file, which is located in <code>config/kraft/server.properties</code> in the root of the Kafka software.</p> <p>The configuration file reads as follows:</p> <pre><code># Licensed to the Apache Software Foundation (ASF) under one or more\n# contributor license agreements. See the NOTICE file distributed with\n# this work for additional information regarding copyright ownership.\n# The ASF licenses this file to You under the Apache License, Version 2.0\n# (the \"License\"); you may not use this file except in compliance with\n# the License. You may obtain a copy of the License at\n#\n#    http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\n#\n# This configuration file is intended for use in KRaft mode, where\n# Apache ZooKeeper is not present. See config/kraft/README.md for details.\n#\n\n############################# Server Basics #############################\n\n# The role of this server. Setting this puts us in KRaft mode\nprocess.roles=broker,controller\n\n# The node id associated with this instance's roles\nnode.id=1\n\n# The connect string for the controller quorum\ncontroller.quorum.voters=1@xx.xx.xx.xx:9093\n\n############################# Socket Server Settings #############################\n\n# The address the socket server listens on.\n# Combined nodes (i.e. those with `process.roles=broker,controller`) must list the controller listener here at a minimum.\n# If the broker listener is not defined, the default listener will use a host name that is equal to the value of java.net.InetAddress.getCanonicalHostName(),\n# with PLAINTEXT listener name, and port 9092.\n#   FORMAT:\n#     listeners = listener_name://host_name:port\n#   EXAMPLE:\n#     listeners = PLAINTEXT://your.host.name:9092\n#listeners=PLAINTEXT://:9092,CONTROLLER://:9093 listeners=PLAINTEXT://xx.xx.xx.xx:9092,CONTROLLER://xx.xx.xx.xx:9093\n\n# Name of listener used for communication between brokers.\ninter.broker.listener.name=PLAINTEXT\n\n# Listener name, hostname and port the broker will advertise to clients.\n# If not set, it uses the value for \"listeners\".\n#advertised.listeners=PLAINTEXT://localhost:9092\n\n# A comma-separated list of the names of the listeners used by the controller.\n# If no explicit mapping set in `listener.security.protocol.map`, default will be using PLAINTEXT protocol\n# This is required if running in KRaft mode.\ncontroller.listener.names=CONTROLLER\n\n# Maps listener names to security protocols, the default is for them to be the same. See the config documentation for more details\nlistener.security.protocol.map=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,SSL:SSL,SASL_PLAINTEXT:SASL_PLAINTEXT,SASL_SSL:SASL_SSL\n\n# The number of threads that the server uses for receiving requests from the network and sending responses to the network\nnum.network.threads=3\n\n# The number of threads that the server uses for processing requests, which may include disk I/O\nnum.io.threads=8\n\n# The send buffer (SO_SNDBUF) used by the socket server\nsocket.send.buffer.bytes=102400\n\n# The receive buffer (SO_RCVBUF) used by the socket server\nsocket.receive.buffer.bytes=102400\n\n# The maximum size of a request that the socket server will accept (protection against OOM)\nsocket.request.max.bytes=104857600\n\n\n############################# Log Basics #############################\n\n# A comma separated list of directories under which to store log files\nlog.dirs=/home/software/kafka_2.13-3.5.0/kraft-combined-logs\n\n# The default number of log partitions per topic. More partitions allow greater\n# parallelism for consumption, but this will also result in more files across\n# the brokers.\nnum.partitions=1\n\n# The number of threads per data directory to be used for log recovery at startup and flushing at shutdown.\n# This value is recommended to be increased for installations with data dirs located in RAID array.\nnum.recovery.threads.per.data.dir=1\n\n############################# Internal Topic Settings #############################\n# The replication factor for the group metadata internal topics \"__consumer_offsets\" and \"__transaction_state\"\n# For anything other than development testing, a value greater than 1 is recommended to ensure availability such as 3.\noffsets.topic.replication.factor=1 transaction.state.log.replication.factor=1 transaction.state.log.min.isr=1\n\n############################# Log Flush Policy #############################\n\n# Messages are immediately written to the filesystem but by default we only fsync() to sync\n# the OS cache lazily. The following configurations control the flush of data to disk.\n# There are a few important trade-offs here:\n#    1. Durability: Unflushed data may be lost if you are not using replication.\n#    2. Latency: Very large flush intervals may lead to latency spikes when the flush does occur as there will be a lot of data to flush.\n#    3. Throughput: The flush is generally the most expensive operation, and a small flush interval may lead to excessive seeks.\n# The settings below allow one to configure the flush policy to flush data after a period of time or\n# every N messages (or both). This can be done globally and overridden on a per-topic basis.\n\n# The number of messages to accept before forcing a flush of data to disk\n#log.flush.interval.messages=10000\n\n# The maximum amount of time a message can sit in a log before we force a flush\n#log.flush.interval.ms=1000\n\n############################# Log Retention Policy #############################\n\n# The following configurations control the disposal of log segments. The policy can\n# be set to delete segments after a period of time, or after a given size has accumulated.\n# A segment will be deleted whenever *either* of these criteria are met. Deletion always happens\n# from the end of the log.\n\n# The minimum age of a log file to be eligible for deletion due to age\nlog.retention.hours=72\n\n# A size-based retention policy for logs. Segments are pruned from the log unless the remaining\n# segments drop below log.retention.bytes. Functions independently of log.retention.hours.\n#log.retention.bytes=1073741824\n\n# The maximum size of a log segment file. When this size is reached a new log segment will be created.\nlog.segment.bytes=1073741824\n\n# The interval at which log segments are checked to see if they can be deleted according\n# to the retention policies\nlog.retention.check.interval.ms=300000 \n</code></pre> <p>When the file configuration is complete, start the Kafka service by executing the following command:</p> <pre><code>#Generate cluster ID \n$ KAFKA_CLUSTER_ID=\"$(bin/kafka-storage.sh random-uuid)\" #Set log directory format \n$ bin/kafka-storage.sh format -t $KAFKA_CLUSTER_ID -c config/kraft/server.properties #Start Kafka service \n$ bin/kafka-server-start.sh config/kraft/server.properties\n</code></pre>"},{"location":"MatrixOne/Develop/Ecological-Tools/Computing-Engine/Flink/flink-kafka-matrixone/#step-two-create-a-kafka-theme","title":"Step two: Create a Kafka theme","text":"<p>In order for Flink to read data from and write to MatrixOne, we need to first create a Kafka theme called \"matrixone.\" Specify the listening address of the Kafka service as <code>xx.xx.xx.xx:9092</code> using the <code>--bootstrap-server</code> parameter in the following command:</p> <pre><code>$ bin/kafka-topics.sh --create --topic matrixone --bootstrap-server xx.xx.xx.xx:9092\n</code></pre>"},{"location":"MatrixOne/Develop/Ecological-Tools/Computing-Engine/Flink/flink-kafka-matrixone/#step-three-read-matrixone-data","title":"Step Three: Read MatrixOne Data","text":"<p>After connecting to the MatrixOne database, you need to do the following to create the required databases and data tables:</p> <ol> <li> <p>Create databases and data tables in MatrixOne and import data:</p> <pre><code>CREATE TABLE `users` (\n`id` INT DEFAULT NULL,\n`name` VARCHAR(255) DEFAULT NULL,\n`age` INT DEFAULT NULL\n)\n</code></pre> </li> <li> <p>Write code in the IDEA integrated development environment:</p> <p>In IDEA, create two classes: <code>User.java</code> and <code>Kafka2Mo.java</code>. These classes are used to read data from Kafka using Flink and write the data to the MatrixOne database.</p> </li> </ol> <pre><code>package com.matrixone.flink.demo.entity;\n\npublic class User {\n\nprivate int id;\nprivate String name;\nprivate int age;\n\npublic int getId() {\nreturn id;\n}\n\npublic void setId(int id) {\nthis.id = id;\n}\n\npublic String getName() {\nreturn name;\n}\n\npublic void setName(String name) {\nthis.name = name;\n}\n\npublic int getAge() {\nreturn age;\n}\n\npublic void setAge(int age) {\nthis.age = age;\n}\n} </code></pre> <pre><code>package com.matrixone.flink.demo;\n\nimport com.alibaba.fastjson2.JSON;\nimport com.matrixone.flink.demo.entity.User;\nimport org.apache.flink.api.common.eventtime.WatermarkStrategy;\nimport org.apache.flink.api.common.serialization.AbstractDeserializationSchema;\nimport org.apache.flink.connector.jdbc.JdbcExecutionOptions;\nimport org.apache.flink.connector.jdbc.JdbcSink;\nimport org.apache.flink.connector.jdbc.JdbcStatementBuilder;\nimport org.apache.flink.connector.jdbc.internal.options.JdbcConnectorOptions;\nimport org.apache.flink.connector.kafka.source.KafkaSource;\nimport org.apache.flink.connector.kafka.source.enumerator.initializer.OffsetsInitializer;\nimport org.apache.flink.streaming.api.datastream.DataStreamSource;\nimport org.apache.flink.streaming.api.environment.StreamExecutionEnvironment;\nimport org.apache.kafka.clients.consumer.OffsetResetStrategy;\n\nimport java.nio.charset.StandardCharsets;\n\n/**\n * @author MatrixOne\n * @desc\n */\npublic class Kafka2Mo {\n\nprivate static String srcServer = \"xx.xx.xx.xx:9092\";\nprivate static String srcTopic = \"matrixone\";\nprivate static String consumerGroup = \"matrixone_group\";\n\nprivate static String destHost = \"xx.xx.xx.xx\";\nprivate static Integer destPort = 6001;\nprivate static String destUserName = \"root\";\nprivate static String destPassword = \"111\";\nprivate static String destDataBase = \"test\";\nprivate static String destTable = \"person\";\n\npublic static void main(String[] args) throws Exception {\n\n// Initialize the environment\nStreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment();\n// Set parallelism\nenv.setParallelism(1);\n\n// Set kafka source information\nKafkaSource&lt;User&gt; source = KafkaSource.&lt;User&gt;builder()\n//Kafka service\n.setBootstrapServers(srcServer)\n// message subject\n.setTopics(srcTopic)\n// consumption group\n.setGroupId(consumerGroup)\n// offset Consume from the beginning when no offset is submitted\n.setStartingOffsets(OffsetsInitializer.committedOffsets(OffsetResetStrategy.LATEST))\n// custom parse message content\n.setValueOnlyDeserializer(new AbstractDeserializationSchema&lt;User&gt;() {\n@Override\npublic User deserialize(byte[] message) {\nreturn JSON.parseObject(new String(message, StandardCharsets.UTF_8), User.class);\n}\n})\n.build();\nDataStreamSource&lt;User&gt; kafkaSource = env.fromSource(source, WatermarkStrategy.noWatermarks(), \"kafka_maxtixone\");\n//kafkaSource.print();\n\n// Set matrixone sink information\nkafkaSource.addSink(JdbcSink.sink()\n\"insert into users (id,name,age) values(?,?,?)\",\n(JdbcStatementBuilder&lt;User&gt;) (preparedStatement, user) -&gt; {\npreparedStatement.setInt(1, user.getId());\npreparedStatement.setString(2, user.getName());\npreparedStatement.setInt(3, user.getAge());\n},\nJdbcExecutionOptions.builder()\n//Default value 5000\n.withBatchSize(1000)\n//Default value is 0\n.withBatchIntervalMs(200)\n// Maximum number of attempts\n.withMaxRetries(5)\n.build(),\nJdbcConnectorOptions.builder()\n.setDBUrl(\"jdbc:mysql://\"+destHost+\":\"+destPort+\"/\"+destDataBase)\n.setUsername(destUserName)\n.setPassword(destPassword)\n.setDriverName(\"com.mysql.cj.jdbc.Driver\")\n.setTableName(destTable)\n.build()\n));\nenv.execute();\n}\n} </code></pre> <p>Once the code is written, you can run the Flink task, which is to select the <code>Kafka2Mo.java</code> file in IDEA and execute <code>Kafka2Mo.Main()</code>.</p>"},{"location":"MatrixOne/Develop/Ecological-Tools/Computing-Engine/Flink/flink-kafka-matrixone/#step-four-generating-data","title":"Step Four: Generating Data","text":"<p>Using the command-line producer tools provided by Kafka, you can add data to Kafka's \"matrixone\" theme. In the following command, use the <code>--topic</code> parameter to specify the topic to add to, and the <code>--bootstrap-server</code> parameter to specify the listening address of the Kafka service.</p> <pre><code>bin/kafka-console-producer.sh --topic matrixone --bootstrap-server xx.xx.xx.xx:9092\n</code></pre> <p>After executing the above command, you will wait on the console to enter the message content. Simply enter the message value (value) directly, one message per line (separated by a newline character), as follows:</p> <pre><code>{\"id\": 10, \"name\": \"xiaowang\", \"age\": 22}\n{\"id\": 20, \"name\": \"xiaozhang\", \"age\": 24}\n{\"id\": 30, \"name\": \"xiaogao\", \"age\": 18}\n{\"id\": 40, \"name\": \"xiaowu\", \"age\": 20}\n{\"id\": 50, \"name\": \"xiaoli\", \"age\": 42}\n</code></pre> <p></p>"},{"location":"MatrixOne/Develop/Ecological-Tools/Computing-Engine/Flink/flink-kafka-matrixone/#step-five-view-implementation-results","title":"Step Five: View Implementation Results","text":"<p>Execute the following SQL query results in MatrixOne:</p> <pre><code>mysql&gt; select * from test.users;\n+------+-----------+------+\n| id   | name      | age  |\n+------+-----------+------+\n|   10 | xiaowang  |   22 |\n|   20 | xiaozhang |   24 |\n|   30 | xiaogao   |   18 |\n|   40 | xiaowu    |   20 |\n|   50 | xiaoli    |   42 |\n+------+-----------+------+\n5 rows in set (0.01 sec)\n</code></pre>"},{"location":"MatrixOne/Develop/Ecological-Tools/Computing-Engine/Flink/flink-mongo-matrixone/","title":"Write MongoDB data to MatrixOne using Flink","text":"<p>This chapter describes how to write MongoDB data to MatrixOne using Flink.</p>"},{"location":"MatrixOne/Develop/Ecological-Tools/Computing-Engine/Flink/flink-mongo-matrixone/#pre-preparation","title":"Pre-preparation","text":"<p>This practice requires the installation and deployment of the following software environments:</p> <ul> <li>Complete standalone MatrixOne deployment.</li> <li>Download and install lntelliJ IDEA (2022.2.1 or later version).</li> <li>Select the JDK 8+ version version to download and install depending on your system environment.</li> <li>Download and install Flink with a minimum supported version of 1.11.</li> <li>Download and install MongoDB.</li> <li>Download and install MySQL, the recommended version is 8.0.33.</li> </ul>"},{"location":"MatrixOne/Develop/Ecological-Tools/Computing-Engine/Flink/flink-mongo-matrixone/#operational-steps","title":"Operational steps","text":""},{"location":"MatrixOne/Develop/Ecological-Tools/Computing-Engine/Flink/flink-mongo-matrixone/#turn-on-mongodb-replica-set-mode","title":"Turn on Mongodb replica set mode","text":"<p>Shutdown command:</p> <pre><code>mongod -f /opt/software/mongodb/conf/config.conf --shutdown\n</code></pre> <p>Add the following parameters to /opt/software/mongodb/conf/config.conf</p> <pre><code>replication: \nreplSetName: rs0 #replication set name \n</code></pre> <p>Restart mangod</p> <pre><code>mongod -f /opt/software/mongodb/conf/config.conf </code></pre> <p>Then go into mongo and execute <code>rs.initiate()</code> then <code>rs.status()</code></p> <pre><code>&gt; rs.initiate()\n{\n\"info2\" : \"no configuration specified. Using a default configuration for the set\",\n\"me\" : \"xx.xx.xx.xx:27017\",\n\"ok\" : 1\n}\nrs0:SECONDARY&gt; rs.status()\n</code></pre> <p>See the following information indicating that the replication set started successfully</p> <pre><code>\"members\" : [\n{\n\"_id\" : 0,\n\"name\" : \"xx.xx.xx.xx:27017\",\n\"health\" : 1,\n\"state\" : 1,\n\"stateStr\" : \"PRIMARY\",\n\"uptime\" : 77,\n\"optime\" : {\n\"ts\" : Timestamp(1665998544, 1),\n\"t\" : NumberLong(1)\n},\n\"optimeDate\" : ISODate(\"2022-10-17T09:22:24Z\"),\n\"syncingTo\" : \"\",\n\"syncSourceHost\" : \"\",\n\"syncSourceId\" : -1,\n\"infoMessage\" : \"could not find member to sync from\",\n\"electionTime\" : Timestamp(1665998504, 2),\n\"electionDate\" : ISODate(\"2022-10-17T09:21:44Z\"),\n\"configVersion\" : 1,\n\"self\" : true,\n\"lastHeartbeatMessage\" : \"\"\n}\n],\n\"ok\" : 1,\n\nrs0:PRIMARY&gt; show dbs\nadmin   0.000GB\nconfig  0.000GB\nlocal   0.000GB\ntest    0.000GB\n</code></pre>"},{"location":"MatrixOne/Develop/Ecological-Tools/Computing-Engine/Flink/flink-mongo-matrixone/#create-source-table-mongodb-in-flinkcdc-sql-interface","title":"Create source table (mongodb) in flinkcdc sql interface","text":"<p>Execute in the lib directory in the flink directory and download the cdcjar package for mongodb</p> <pre><code>wget &lt;https://repo1.maven.org/maven2/com/ververica/flink-sql-connector-mongodb-cdc/2.2.1/flink-sql-connector-mongodb-cdc-2.2.1.jar&gt; </code></pre> <p>Build a mapping table for the data source mongodb, the column names must also be identical</p> <pre><code>CREATE TABLE products (\n_id STRING,#There must be this column, and it must also be the primary key, because mongodb automatically generates an id for each row of data\n`name` STRING,\nage INT,\nPRIMARY KEY(_id) NOT ENFORCED\n) WITH (\n'connector' = 'mongodb-cdc',\n'hosts' = 'xx.xx.xx.xx:27017',\n'username' = 'root',\n'password' = '',\n'database' = 'test',\n'collection' = 'test'\n);\n</code></pre> <p>Once established you can execute <code>select * from</code> products; check if the connection is successful</p>"},{"location":"MatrixOne/Develop/Ecological-Tools/Computing-Engine/Flink/flink-mongo-matrixone/#create-sink-table-in-flinkcdc-sql-interface-matrixone","title":"Create sink table in flinkcdc sql interface (MatrixOne)","text":"<p>Create a mapping table for matrixone with the same structure and no columns with ids</p> <pre><code>CREATE TABLE cdc_matrixone (\n`name` STRING,\nage INT,\nPRIMARY KEY (`name`) NOT ENFORCED\n)WITH (\n'connector' = 'jdbc',\n'url' = 'jdbc:mysql://xx.xx.xx.xx:6001/test',\n'driver' = 'com.mysql.cj.jdbc.Driver',\n'username' = 'root',\n'password' = '111',\n'table-name' = 'mongodbtest'   );\n</code></pre>"},{"location":"MatrixOne/Develop/Ecological-Tools/Computing-Engine/Flink/flink-mongo-matrixone/#turn-on-the-cdc-synchronization-task","title":"Turn on the cdc synchronization task","text":"<p>Once the sync task is turned on here, mongodb additions and deletions can be synchronized</p> <pre><code>INSERT INTO cdc_matrixone SELECT `name`,age FROM products;\n\n#insert\nrs0:PRIMARY&gt; db.test.insert({\"name\" : \"ddd\", \"age\" : 90})\nWriteResult({ \"nInserted\" : 1 })\nrs0:PRIMARY&gt; db.test.find()\n{ \"_id\" : ObjectId(\"6347e3c6229d6017c82bf03d\"), \"name\" : \"aaa\", \"age\" : 20 }\n{ \"_id\" : ObjectId(\"6347e64a229d6017c82bf03e\"), \"name\" : \"bbb\", \"age\" : 18 }\n{ \"_id\" : ObjectId(\"6347e652229d6017c82bf03f\"), \"name\" : \"ccc\", \"age\" : 28 }\n{ \"_id\" : ObjectId(\"634d248f10e21b45c73b1a36\"), \"name\" : \"ddd\", \"age\" : 90 }\n#update\nrs0:PRIMARY&gt; db.test.update({'name':'ddd'},{$set:{'age':'99'}})\nWriteResult({ \"nMatched\" : 1, \"nUpserted\" : 0, \"nModified\" : 1 })\n#delete\nrs0:PRIMARY&gt; db.test.remove({'name':'ddd'})\nWriteResult({ \"nRemoved\" : 1 })\n</code></pre>"},{"location":"MatrixOne/Develop/Ecological-Tools/Computing-Engine/Flink/flink-mysql-matrixone/","title":"Writing MySQL data to MatrixOne using Flink","text":"<p>This chapter describes how to write MySQL data to MatrixOne using Flink.</p>"},{"location":"MatrixOne/Develop/Ecological-Tools/Computing-Engine/Flink/flink-mysql-matrixone/#pre-preparation","title":"Pre-preparation","text":"<p>This practice requires the installation and deployment of the following software environments:</p> <ul> <li>Complete standalone MatrixOne deployment.</li> <li>Download and install lntelliJ IDEA (2022.2.1 or later version).</li> <li>Select the JDK 8+ version version to download and install depending on your system environment.</li> <li>Download and install Flink with a minimum supported version of 1.11.</li> <li>Download and install MySQL, the recommended version is 8.0.33.</li> </ul>"},{"location":"MatrixOne/Develop/Ecological-Tools/Computing-Engine/Flink/flink-mysql-matrixone/#operational-steps","title":"Operational steps","text":""},{"location":"MatrixOne/Develop/Ecological-Tools/Computing-Engine/Flink/flink-mysql-matrixone/#step-one-initialize-the-project","title":"Step one: Initialize the project","text":"<ol> <li> <p>Open IDEA, click File &gt; New &gt; Project, select Spring Initializer, and fill in the following configuration parameters:</p> <ul> <li>Name:matrixone-flink-demo</li> <li>Location:~\\Desktop</li> <li>Language:Java</li> <li>Type:Maven</li> <li>Group:com.example</li> <li>Artifact:matrixone-flink-demo</li> <li>Package name:com.matrixone.flink.demo</li> <li>JDK 1.8</li> </ul> <p>An example configuration is shown in the following figure:</p> <p> </p> </li> <li> <p>Add project dependencies, edit the <code>pom.xml</code> file in the root of your project, and add the following to the file:</p> </li> </ol> <pre><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;project xmlns=\"http://maven.apache.org/POM/4.0.0\"\nxmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\nxsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\"&gt;\n&lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;\n\n&lt;groupId&gt;com.matrixone.flink&lt;/groupId&gt;\n&lt;artifactId&gt;matrixone-flink-demo&lt;/artifactId&gt;\n&lt;version&gt;1.0-SNAPSHOT&lt;/version&gt;\n\n&lt;properties&gt;\n&lt;scala.binary.version&gt;2.12&lt;/scala.binary.version&gt;\n&lt;java.version&gt;1.8&lt;/java.version&gt;\n&lt;flink.version&gt;1.17.0&lt;/flink.version&gt;\n&lt;scope.mode&gt;compile&lt;/scope.mode&gt;\n&lt;/properties&gt;\n\n&lt;dependencies&gt;\n\n&lt;!-- Flink Dependency --&gt;\n&lt;dependency&gt;\n&lt;groupId&gt;org.apache.flink&lt;/groupId&gt;\n&lt;artifactId&gt;flink-connector-hive_2.12&lt;/artifactId&gt;\n&lt;version&gt;${flink.version}&lt;/version&gt;\n&lt;/dependency&gt;\n\n&lt;dependency&gt;\n&lt;groupId&gt;org.apache.flink&lt;/groupId&gt;\n&lt;artifactId&gt;flink-java&lt;/artifactId&gt;\n&lt;version&gt;${flink.version}&lt;/version&gt;\n&lt;/dependency&gt;\n\n&lt;dependency&gt;\n&lt;groupId&gt;org.apache.flink&lt;/groupId&gt;\n&lt;artifactId&gt;flink-streaming-java&lt;/artifactId&gt;\n&lt;version&gt;${flink.version}&lt;/version&gt;\n&lt;/dependency&gt;\n\n&lt;dependency&gt;\n&lt;groupId&gt;org.apache.flink&lt;/groupId&gt;\n&lt;artifactId&gt;flink-clients&lt;/artifactId&gt;\n&lt;version&gt;${flink.version}&lt;/version&gt;\n&lt;/dependency&gt;\n\n&lt;dependency&gt;\n&lt;groupId&gt;org.apache.flink&lt;/groupId&gt;\n&lt;artifactId&gt;flink-table-api-java-bridge&lt;/artifactId&gt;\n&lt;version&gt;${flink.version}&lt;/version&gt;\n&lt;/dependency&gt;\n\n&lt;dependency&gt;\n&lt;groupId&gt;org.apache.flink&lt;/groupId&gt;\n&lt;artifactId&gt;flink-table-planner_2.12&lt;/artifactId&gt;\n&lt;version&gt;${flink.version}&lt;/version&gt;\n&lt;/dependency&gt;\n\n&lt;!-- JDBC\u76f8\u5173\u4f9d\u8d56\u5305 --&gt;\n&lt;dependency&gt;\n&lt;groupId&gt;org.apache.flink&lt;/groupId&gt;\n&lt;artifactId&gt;flink-connector-jdbc&lt;/artifactId&gt;\n&lt;version&gt;1.15.4&lt;/version&gt;\n&lt;/dependency&gt;\n&lt;dependency&gt;\n&lt;groupId&gt;mysql&lt;/groupId&gt;\n&lt;artifactId&gt;mysql-connector-java&lt;/artifactId&gt;\n&lt;version&gt;8.0.33&lt;/version&gt;\n&lt;/dependency&gt;\n\n&lt;!-- Kafka\u76f8\u5173\u4f9d\u8d56 --&gt;\n&lt;dependency&gt;\n&lt;groupId&gt;org.apache.kafka&lt;/groupId&gt;\n&lt;artifactId&gt;kafka_2.13&lt;/artifactId&gt;\n&lt;version&gt;3.5.0&lt;/version&gt;\n&lt;/dependency&gt;\n&lt;dependency&gt;\n&lt;groupId&gt;org.apache.flink&lt;/groupId&gt;\n&lt;artifactId&gt;flink-connector-kafka&lt;/artifactId&gt;\n&lt;version&gt;3.0.0-1.17&lt;/version&gt;\n&lt;/dependency&gt;\n\n&lt;!-- JSON --&gt;\n&lt;dependency&gt;\n&lt;groupId&gt;com.alibaba.fastjson2&lt;/groupId&gt;\n&lt;artifactId&gt;fastjson2&lt;/artifactId&gt;\n&lt;version&gt;2.0.34&lt;/version&gt;\n&lt;/dependency&gt;\n\n&lt;/dependencies&gt;\n\n\n\n\n&lt;build&gt;\n&lt;plugins&gt;\n&lt;plugin&gt;\n&lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;\n&lt;artifactId&gt;maven-compiler-plugin&lt;/artifactId&gt;\n&lt;version&gt;3.8.0&lt;/version&gt;\n&lt;configuration&gt;\n&lt;source&gt;${java.version}&lt;/source&gt;\n&lt;target&gt;${java.version}&lt;/target&gt;\n&lt;encoding&gt;UTF-8&lt;/encoding&gt;\n&lt;/configuration&gt;\n&lt;/plugin&gt;\n&lt;plugin&gt;\n&lt;artifactId&gt;maven-assembly-plugin&lt;/artifactId&gt;\n&lt;version&gt;2.6&lt;/version&gt;\n&lt;configuration&gt;\n&lt;descriptorRefs&gt;\n&lt;descriptor&gt;jar-with-dependencies&lt;/descriptor&gt;\n&lt;/descriptorRefs&gt;\n&lt;/configuration&gt;\n&lt;executions&gt;\n&lt;execution&gt;\n&lt;id&gt;make-assembly&lt;/id&gt;\n&lt;phase&gt;package&lt;/phase&gt;\n&lt;goals&gt;\n&lt;goal&gt;single&lt;/goal&gt;\n&lt;/goals&gt;\n&lt;/execution&gt;\n&lt;/executions&gt;\n&lt;/plugin&gt;\n\n&lt;/plugins&gt;\n&lt;/build&gt;\n\n&lt;/project&gt;\n</code></pre>"},{"location":"MatrixOne/Develop/Ecological-Tools/Computing-Engine/Flink/flink-mysql-matrixone/#step-two-read-matrixone-data","title":"Step Two: Read MatrixOne Data","text":"<p>After connecting to MatrixOne using a MySQL client, create the database you need for the demo, as well as the data tables.</p> <ol> <li> <p>Create databases, data tables, and import data in MatrixOne:</p> <pre><code>CREATE DATABASE test;\nUSE test;\nCREATE TABLE `person` (`id` INT DEFAULT NULL, `name` VARCHAR(255) DEFAULT NULL, `birthday` DATE DEFAULT NULL);\nINSERT INTO test.person (id, name, birthday) VALUES(1, 'zhangsan', '2023-07-09'),(2, 'lisi', '2023-07-08'),(3, 'wangwu', '2023-07-12');\n</code></pre> </li> <li> <p>Create a <code>MoRead.java</code> class in IDEA to read MatrixOne data using Flink:</p> <pre><code>package com.matrixone.flink.demo;\n\nimport org.apache.flink.api.common.functions.MapFunction;\nimport org.apache.flink.api.common.typeinfo.BasicTypeInfo;\nimport org.apache.flink.api.java.ExecutionEnvironment;\nimport org.apache.flink.api.java.operators.DataSource;\nimport org.apache.flink.api.java.operators.MapOperator;\nimport org.apache.flink.api.java.typeutils.RowTypeInfo;\nimport org.apache.flink.connector.jdbc.JdbcInputFormat;\nimport org.apache.flink.types.Row;\n\nimport java.text.SimpleDateFormat;\n\n/**\n * @author MatrixOne\n * @description\n */\npublic class MoRead {\nprivate static String srcHost = \"xx.xx.xx.xx\";\nprivate static Integer srcPort = 6001;\nprivate static String srcUserName = \"root\";\nprivate static String srcPassword = \"111\";\nprivate static String srcDataBase = \"test\";\n\npublic static void main(String[] args) throws Exception {\n\nExecutionEnvironment environment = ExecutionEnvironment.getExecutionEnvironment();\n// Set parallelism\nenvironment.setParallelism(1);\nSimpleDateFormat sdf = new SimpleDateFormat(\"yyyy-MM-dd\");\n\n// Set the field type of the query\nRowTypeInfo rowTypeInfo = new RowTypeInfo(\nnew BasicTypeInfo[]{\nBasicTypeInfo.INT_TYPE_INFO,\nBasicTypeInfo.STRING_TYPE_INFO,\nBasicTypeInfo.DATE_TYPE_INFO\n},\nnew String[]{\n\"id\",\n\"name\",\n\"birthday\"\n}\n);\n\nDataSource&lt;Row&gt; dataSource = environment.createInput(JdbcInputFormat.buildJdbcInputFormat()\n.setDrivername(\"com.mysql.cj.jdbc.Driver\")\n.setDBUrl(\"jdbc:mysql://\" + srcHost + \":\" + srcPort + \"/\" + srcDataBase)\n.setUsername(srcUserName)\n.setPassword(srcPassword)\n.setQuery(\"select * from person\")\n.setRowTypeInfo(rowTypeInfo)\n.finish());\n\n// Convert Wed Jul 12 00:00:00 CST 2023 date format to 2023-07-12\nMapOperator&lt;Row, Row&gt; mapOperator = dataSource.map((MapFunction&lt;Row, Row&gt;) row -&gt; {\nrow.setField(\"birthday\", sdf.format(row.getField(\"birthday\")));\nreturn row;\n});\n\nmapOperator.print();\n}\n} </code></pre> </li> <li> <p>Run <code>MoRead.Main()</code> in IDEA with the following result:</p> <p></p> </li> </ol>"},{"location":"MatrixOne/Develop/Ecological-Tools/Computing-Engine/Flink/flink-mysql-matrixone/#step-three-write-mysql-data-to-matrixone","title":"Step Three: Write MySQL Data to MatrixOne","text":"<p>You can now start migrating MySQL data to MatrixOne using Flink.</p> <ol> <li> <p>Prepare MySQL data: On node3, connect to your local Mysql using the Mysql client, create the required database, data table, and insert the data:</p> <pre><code>mysql -h127.0.0.1 -P3306 -uroot -proot\nmysql&gt; CREATE DATABASE motest;\nmysql&gt; USE motest;\nmysql&gt; CREATE TABLE `person` (`id` int DEFAULT NULL, `name` varchar(255) DEFAULT NULL, `birthday` date DEFAULT NULL);\nmysql&gt; INSERT INTO motest.person (id, name, birthday) VALUES(2, 'lisi', '2023-07-09'),(3, 'wangwu', '2023-07-13'),(4, 'zhaoliu', '2023-08-08');\n</code></pre> </li> <li> <p>Empty MatrixOne table data:</p> <p>On node3, connect node1's MatrixOne using a MySQL client. Since this example continues to use the <code>test</code> database from the example that read the MatrixOne data earlier, we need to first empty the data from the <code>person</code> table.</p> <pre><code>-- on node3, connect node1's MatrixOne \nmysql -hxx.xx.xx.xx -P6001 -uroot -p111 mysql&gt; TRUNCATE TABLE test.person using the Mysql client;\n</code></pre> </li> <li> <p>Write code in IDEA:</p> <p>Create <code>Person.java</code> and <code>Mysql2Mo.java</code> classes, use Flink to read MySQL data, perform simple ETL operations (convert Row to Person object), and finally write the data to MatrixOne.</p> </li> </ol> <pre><code>package com.matrixone.flink.demo.entity;\n\n\nimport java.util.Date;\n\npublic class Person {\n\nprivate int id;\nprivate String name;\nprivate Date birthday;\n\npublic int getId() {\nreturn id;\n}\n\npublic void setId(int id) {\nthis.id = id;\n}\n\npublic String getName() {\nreturn name;\n}\n\npublic void setName(String name) {\nthis.name = name;\n}\n\npublic Date getBirthday() {\nreturn birthday;\n}\n\npublic void setBirthday(Date birthday) {\nthis.birthday = birthday;\n}\n} </code></pre> <pre><code>package com.matrixone.flink.demo;\n\nimport com.matrixone.flink.demo.entity.Person;\nimport org.apache.flink.api.common.functions.MapFunction;\nimport org.apache.flink.api.common.typeinfo.BasicTypeInfo;\nimport org.apache.flink.api.java.typeutils.RowTypeInfo;\nimport org.apache.flink.connector.jdbc.*;\nimport org.apache.flink.streaming.api.datastream.DataStreamSink;\nimport org.apache.flink.streaming.api.datastream.DataStreamSource;\nimport org.apache.flink.streaming.api.datastream.SingleOutputStreamOperator;\nimport org.apache.flink.streaming.api.environment.StreamExecutionEnvironment;\nimport org.apache.flink.types.Row;\n\nimport java.sql.Date;\n\n/**\n * @author MatrixOne\n * @description\n */\npublic class Mysql2Mo {\n\nprivate static String srcHost = \"127.0.0.1\";\nprivate static Integer srcPort = 3306;\nprivate static String srcUserName = \"root\";\nprivate static String srcPassword = \"root\";\nprivate static String srcDataBase = \"motest\";\n\nprivate static String destHost = \"xx.xx.xx.xx\";\nprivate static Integer destPort = 6001;\nprivate static String destUserName = \"root\";\nprivate static String destPassword = \"111\";\nprivate static String destDataBase = \"test\";\nprivate static String destTable = \"person\";\n\n\npublic static void main(String[] args) throws Exception {\n\nStreamExecutionEnvironment environment = StreamExecutionEnvironment.getExecutionEnvironment();\n// Set parallelism\nenvironment.setParallelism(1);\n// Set the field type of the query\nRowTypeInfo rowTypeInfo = new RowTypeInfo(\nnew BasicTypeInfo[]{\nBasicTypeInfo.INT_TYPE_INFO,\nBasicTypeInfo.STRING_TYPE_INFO,\nBasicTypeInfo.DATE_TYPE_INFO\n},\nnew String[]{\n\"id\",\n\"name\",\n\"birthday\"\n}\n);\n\n// Add srouce\nDataStreamSource&lt;Row&gt; dataSource = environment.createInput(JdbcInputFormat.buildJdbcInputFormat()\n.setDrivername(\"com.mysql.cj.jdbc.Driver\")\n.setDBUrl(\"jdbc:mysql://\" + srcHost + \":\" + srcPort + \"/\" + srcDataBase)\n.setUsername(srcUserName)\n.setPassword(srcPassword)\n.setQuery(\"select * from person\")\n.setRowTypeInfo(rowTypeInfo)\n.finish());\n\n// Conduct ETL\nSingleOutputStreamOperator&lt;Person&gt; mapOperator = dataSource.map((MapFunction&lt;Row, Person&gt;) row -&gt; {\nPerson person = new Person();\nperson.setId((Integer) row.getField(\"id\"));\nperson.setName((String) row.getField(\"name\"));\nperson.setBirthday((java.util.Date)row.getField(\"birthday\"));\nreturn person;\n});\n\n// Set matrixone sink information\nmapOperator.addSink(\nJdbcSink.sink(\n\"insert into \" + destTable + \" values(?,?,?)\",\n(ps, t) -&gt; {\nps.setInt(1, t.getId());\nps.setString(2, t.getName());\nps.setDate(3, new Date(t.getBirthday().getTime()));\n},\nnew JdbcConnectionOptions.JdbcConnectionOptionsBuilder()\n.withDriverName(\"com.mysql.cj.jdbc.Driver\")\n.withUrl(\"jdbc:mysql://\" + destHost + \":\" + destPort + \"/\" + destDataBase)\n.withUsername(destUserName)\n.withPassword(destPassword)\n.build()\n)\n);\n\nenvironment.execute();\n}\n\n} </code></pre>"},{"location":"MatrixOne/Develop/Ecological-Tools/Computing-Engine/Flink/flink-mysql-matrixone/#step-four-view-implementation-results","title":"Step Four: View Implementation Results","text":"<p>Execute the following SQL query results in MatrixOne:</p> <pre><code>mysql&gt; select * from test.person;\n+------+---------+------------+\n| id   | name    | birthday   |\n+------+---------+------------+\n|    2 | lisi    | 2023-07-09 |\n|    3 | wangwu  | 2023-07-13 |\n|    4 | zhaoliu | 2023-08-08 |\n+------+---------+------------+\n3 rows in set (0.01 sec)\n</code></pre>"},{"location":"MatrixOne/Develop/Ecological-Tools/Computing-Engine/Flink/flink-oracle-matrixone/","title":"Write Oracle data to MatrixOne using Flink","text":"<p>This chapter describes how to write Oracle data to MatrixOne using Flink.</p>"},{"location":"MatrixOne/Develop/Ecological-Tools/Computing-Engine/Flink/flink-oracle-matrixone/#pre-preparation","title":"Pre-preparation","text":"<p>This practice requires the installation and deployment of the following software environments:</p> <ul> <li>Complete standalone MatrixOne deployment.</li> <li>Download and install lntelliJ IDEA (2022.2.1 or later version).</li> <li>Select the JDK 8+ version version to download and install depending on your system environment.</li> <li>Download and install Flink with a minimum supported version of 1.11.</li> <li>Finished installing Oracle 19c.</li> <li>Download and install MySQL, the recommended version is 8.0.33.</li> </ul>"},{"location":"MatrixOne/Develop/Ecological-Tools/Computing-Engine/Flink/flink-oracle-matrixone/#operational-steps","title":"Operational steps","text":""},{"location":"MatrixOne/Develop/Ecological-Tools/Computing-Engine/Flink/flink-oracle-matrixone/#create-a-table-in-oracle-and-insert-data","title":"Create a table in Oracle and insert data","text":"<pre><code>create table flinkcdc_empt\n(\nEMPNO    NUMBER not null primary key,\nENAME    VARCHAR2(10),\nJOB      VARCHAR2(9),\nMGR      NUMBER(4),\nHIREDATE DATE,\nSAL      NUMBER(7, 2),\nCOMM     NUMBER(7, 2),\nDEPTNO   NUMBER(2)\n)\n--Modify the FLINKCDC_EMPT table to support incremental logging\nALTER TABLE scott.FLINKCDC_EMPT ADD SUPPLEMENTAL LOG DATA (ALL) COLUMNS;\n--Insert test data:\nINSERT INTO SCOTT.FLINKCDC_EMPT (EMPNO, ENAME, JOB, MGR, HIREDATE, SAL, COMM, DEPTNO) VALUES(1, 'TURNER', 'SALESMAN', 7698, TIMESTAMP '2022-10-31 16:21:11.000000', 1500, 0, 30);\nINSERT INTO SCOTT.FLINKCDC_EMPT (EMPNO, ENAME, JOB, MGR, HIREDATE, SAL, COMM, DEPTNO) VALUES(2, 'TURNER', 'SALESMAN', 7698, TIMESTAMP '2022-10-31 16:21:11.000000', 1500, 0, 30);\nINSERT INTO SCOTT.FLINKCDC_EMPT (EMPNO, ENAME, JOB, MGR, HIREDATE, SAL, COMM, DEPTNO) VALUES(3, 'TURNER', 'SALESMAN', 7698, TIMESTAMP '2022-10-31 16:21:11.000000', 1500, 0, 30);\nINSERT INTO SCOTT.FLINKCDC_EMPT (EMPNO, ENAME, JOB, MGR, HIREDATE, SAL, COMM, DEPTNO) VALUES(4, 'TURNER', 'SALESMAN', 7698, TIMESTAMP '2022-10-31 16:21:11.000000', 1500, 0, 30);\nINSERT INTO SCOTT.FLINKCDC_EMPT (EMPNO, ENAME, JOB, MGR, HIREDATE, SAL, COMM, DEPTNO) VALUES(5, 'TURNER', 'SALESMAN', 7698, TIMESTAMP '2022-10-31 16:21:11.000000', 1500, 0, 30);\nINSERT INTO SCOTT.FLINKCDC_EMPT (EMPNO, ENAME, JOB, MGR, HIREDATE, SAL, COMM, DEPTNO) VALUES(6, 'TURNER', 'SALESMAN', 7698, TIMESTAMP '2022-10-31 16:21:11.000000', 1500, 0, 30);\nINSERT INTO SCOTT.FLINKCDC_EMPT (EMPNO, ENAME, JOB, MGR, HIREDATE, SAL, COMM, DEPTNO) VALUES(5989, 'TURNER', 'SALESMAN', 7698, TIMESTAMP '2022-10-31 16:21:11.000000', 1500, 0, 30);\n</code></pre>"},{"location":"MatrixOne/Develop/Ecological-Tools/Computing-Engine/Flink/flink-oracle-matrixone/#creating-a-target-table-in-matrixone","title":"Creating a Target Table in MatrixOne","text":"<pre><code>create database test;\nuse test;\nCREATE TABLE `oracle_empt` (\n`empno` bigint NOT NULL COMMENT \"\",\n`ename` varchar(10) NULL COMMENT \"\",\n`job` varchar(9) NULL COMMENT \"\",\n`mgr` int NULL COMMENT \"\",\n`hiredate` datetime NULL COMMENT \"\",\n`sal` decimal(7, 2) NULL COMMENT \"\",\n`comm` decimal(7, 2) NULL COMMENT \"\",\n`deptno` int NULL COMMENT \"\"\n);\n</code></pre>"},{"location":"MatrixOne/Develop/Ecological-Tools/Computing-Engine/Flink/flink-oracle-matrixone/#copy-the-jar-package","title":"Copy the jar package","text":"<p>Copy <code>flink-sql-connector-oracle-cdc-2.2.1.jar</code>, <code>flink-connector-jdbc_2.11-1.13.6.jar</code>, <code>mysql-connector-j-8.0.31.jar</code> to <code>flink-1.13.6/lib/</code>.</p> <p>If flink is already started, you need to restart flink and load the effective jar package.</p>"},{"location":"MatrixOne/Develop/Ecological-Tools/Computing-Engine/Flink/flink-oracle-matrixone/#switch-to-the-flink-directory-and-start-the-cluster","title":"Switch to the flink directory and start the cluster","text":"<pre><code>./bin/start-cluster.sh </code></pre>"},{"location":"MatrixOne/Develop/Ecological-Tools/Computing-Engine/Flink/flink-oracle-matrixone/#start-flink-sql-cli","title":"Start Flink SQL CLI","text":"<pre><code>./bin/sql-client.sh </code></pre>"},{"location":"MatrixOne/Develop/Ecological-Tools/Computing-Engine/Flink/flink-oracle-matrixone/#turn-on-checkpoint","title":"Turn on checkpoint","text":"<pre><code>SET execution.checkpointing.interval = 3s; </code></pre>"},{"location":"MatrixOne/Develop/Ecological-Tools/Computing-Engine/Flink/flink-oracle-matrixone/#create-sourcesink-table-with-flink-ddl","title":"Create source/sink table with flink ddl","text":"<pre><code>-- Create source table (oracle)\nCREATE TABLE `oracle_source` (\nEMPNO bigint NOT NULL,\nENAME VARCHAR(10),\nJOB VARCHAR(9),\nMGR int,\nHIREDATE timestamp,\nSAL decimal(7,2),\nCOMM decimal(7,2),\nDEPTNO int,\nPRIMARY KEY(EMPNO) NOT ENFORCED\n) WITH (\n'connector' = 'oracle-cdc',\n'hostname' = 'xx.xx.xx.xx',\n'port' = '1521',\n'username' = 'scott',\n'password' = 'tiger',\n'database-name' = 'ORCLCDB',\n'schema-name' = 'SCOTT',\n'table-name' = 'FLINKCDC_EMPT',\n'debezium.database.tablename.case.insensitive'='false',\n'debezium.log.mining.strategy'='online_catalog'\n);\n-- Creating a sink table (mo)\nCREATE TABLE IF NOT EXISTS `oracle_sink` (\nEMPNO bigint NOT NULL, ENAME VARCHAR(10), JOB VARCHAR(9), MGR int, HIREDATE timestamp, SAL decimal(7,2), COMM decimal(7,2), DEPTNO int, PRIMARY KEY(EMPNO) NOT ENFORCED\n) with (\n'connector' = 'jdbc',\n'url' = 'jdbc:mysql://ip:6001/test',\n'driver' = 'com.mysql.cj.jdbc.Driver',\n'username' = 'root',\n'password' = '111',\n'table-name' = 'oracle_empt'\n);\n-- Read and insert the source table data into the sink table.\ninsert into `oracle_sink` select * from `oracle_source`;\n</code></pre>"},{"location":"MatrixOne/Develop/Ecological-Tools/Computing-Engine/Flink/flink-oracle-matrixone/#query-correspondence-table-data-in-matrixone","title":"Query correspondence table data in MatrixOne","text":"<pre><code>select * from oracle_empt; </code></pre>"},{"location":"MatrixOne/Develop/Ecological-Tools/Computing-Engine/Flink/flink-overview/","title":"Overview","text":"<p>Apache Flink is a powerful framework and distributed processing engine focused on performing stateful computations for handling borderless and bounded data streams. Flink operates efficiently in a variety of common cluster environments and performs computations at memory speeds, supporting the processing of data of any size.</p>"},{"location":"MatrixOne/Develop/Ecological-Tools/Computing-Engine/Flink/flink-overview/#application-scenarios","title":"Application scenarios","text":"<ul> <li> <p>Event Driven Applications</p> <p>Event-driven applications typically have state, and they extract data from one or more event streams to trigger calculations, state updates, or other external actions based on arriving events. Typical event-driven applications include anti-fraud systems, anomaly detection, rule-based alarm systems, and business process monitoring.</p> </li> <li> <p>Data analysis applications</p> <p>The main objective of the data analysis task is to extract valuable information and indicators from raw data. Flink supports streaming and batch analysis applications for scenarios such as telecom network quality monitoring, product updates and experimental evaluation analysis in mobile applications, real-time data impromptu analysis in consumer technology, and large-scale graph analysis.</p> </li> <li> <p>Data Pipeline Applications</p> <p>Extract-Transform-Load (ETL) is a common method of data conversion and migration between different storage systems. There are similarities between data pipelines and ETL jobs, both of which can transform and enrich data and then move it from one storage system to another. The difference is that the data pipeline operates in a continuous stream mode rather than a periodic trigger. Typical data pipeline applications include real-time query index building and continuous ETL in e-commerce.</p> </li> </ul>"},{"location":"MatrixOne/Develop/Ecological-Tools/Computing-Engine/Flink/flink-postgresql-matrixone/","title":"Write PostgreSQL data to MatrixOne using Flink","text":"<p>This chapter describes how to write PostgreSQL data to MatrixOne using Flink.</p>"},{"location":"MatrixOne/Develop/Ecological-Tools/Computing-Engine/Flink/flink-postgresql-matrixone/#pre-preparation","title":"Pre-preparation","text":"<p>This practice requires the installation and deployment of the following software environments:</p> <ul> <li>Complete standalone MatrixOne deployment.</li> <li>Download and install lntelliJ IDEA (2022.2.1 or later version).</li> <li>Select the JDK 8+ version version to download and install depending on your system environment.</li> <li>Install PostgreSQL.</li> <li>Download and install Flink with a minimum supported version of 1.11.</li> <li>Download and install MySQL, the recommended version is 8.0.33.</li> </ul>"},{"location":"MatrixOne/Develop/Ecological-Tools/Computing-Engine/Flink/flink-postgresql-matrixone/#operational-steps","title":"Operational steps","text":""},{"location":"MatrixOne/Develop/Ecological-Tools/Computing-Engine/Flink/flink-postgresql-matrixone/#download-flink-cdc-connector","title":"Download Flink CDC connector","text":"<pre><code>wget https://repo1.maven.org/maven2/com/ververica/flink-sql-connector-postgres-cdc/2.1.1/flink-sql-connector-postgres-cdc-2.1.1.jar </code></pre>"},{"location":"MatrixOne/Develop/Ecological-Tools/Computing-Engine/Flink/flink-postgresql-matrixone/#copy-the-jar-package","title":"Copy the jar package","text":"<p>Copy the <code>Flink CDC connector</code> and the corresponding Jar packages for <code>flink-connector-jdbc_2.12-1.13.6.jar</code> and <code>mysql-connector-j-8.0.33.jar</code> to <code>flink-1.13.6/lib/</code> If flink is already started, restart flink and load the valid jar package.</p>"},{"location":"MatrixOne/Develop/Ecological-Tools/Computing-Engine/Flink/flink-postgresql-matrixone/#postgresql-turn-on-cdc-configuration","title":"Postgresql Turn on cdc configuration","text":"<ol> <li> <p>postgresql.conf Configuration</p> <pre><code>#change the maximum number of wal send processes (default is 10), which is the same value as the solts setting above \nmax_wal_senders = 10 # max number of walsender processes #break replication connections that have been inactive for more than the specified number of milliseconds, you can set it appropriately a little larger (default 60s) \nwal_sender_timeout = 180s # in milliseconds; 0 disables #change the maximum number of solts (default is 10), flink-cdc defaults to one table \nmax_replication_slots = 10 # max number of replication slots #specify as logical \nwal_level = logical # minimal, replica, or logical\n</code></pre> </li> <li> <p>pg_hba.conf</p> <pre><code>#IPv4 local connections: \nhost all all 0.0.0.0/0 password \nhost replication all 0.0.0.0/0 password \n</code></pre> </li> </ol>"},{"location":"MatrixOne/Develop/Ecological-Tools/Computing-Engine/Flink/flink-postgresql-matrixone/#create-table-in-postgresql-and-insert-data","title":"Create table in postgresql and insert data","text":"<pre><code>create table student\n(\nstu_id integer not null unique,\nstu_name varchar(50),\nstu_age integer,\nstu_bth date\n);\n\nINSERT  into student VALUES (1,\"lisa\",12,'2022-10-12');\nINSERT  into student VALUES (2,\"tom\",23,'2021-11-10');\nINSERT  into student VALUES (3,\"jenny\",11,'2024-02-19');\nINSERT  into student VALUES (4,\"henry\",12,'2022-04-22');\n</code></pre>"},{"location":"MatrixOne/Develop/Ecological-Tools/Computing-Engine/Flink/flink-postgresql-matrixone/#building-tables-in-matrixone","title":"Building tables in MatrixOne","text":"<pre><code>create table student\n(\nstu_id integer not null unique,\nstu_name varchar(50),\nstu_age integer,\nstu_bth date\n);\n</code></pre>"},{"location":"MatrixOne/Develop/Ecological-Tools/Computing-Engine/Flink/flink-postgresql-matrixone/#start-cluster","title":"Start cluster","text":"<p>Switch to the flink directory and execute the following command:</p> <pre><code>./bin/start-cluster.sh </code></pre>"},{"location":"MatrixOne/Develop/Ecological-Tools/Computing-Engine/Flink/flink-postgresql-matrixone/#start-flink-sql-cli","title":"Start Flink SQL CLI","text":"<pre><code>./bin/sql-client.sh </code></pre>"},{"location":"MatrixOne/Develop/Ecological-Tools/Computing-Engine/Flink/flink-postgresql-matrixone/#turn-on-checkpoint","title":"Turn on checkpoint","text":"<p>Set up checkpoint every 3 seconds</p> <pre><code>SET execution.checkpointing.interval = 3s; </code></pre>"},{"location":"MatrixOne/Develop/Ecological-Tools/Computing-Engine/Flink/flink-postgresql-matrixone/#create-source-table-with-flink-ddl","title":"Create source table with flink ddl","text":"<pre><code>CREATE TABLE pgsql_bog  (\nstu_id  int not null,\nstu_name    varchar(50),\nstu_age     int,\nstu_bth     date,\nprimary key (stu_id) not enforced\n) WITH (\n'connector' = 'postgres-cdc',\n'hostname' = 'xx.xx.xx.xx',\n'port' = '5432',\n'username' = 'postgres',\n'password' = '123456',\n'database-name' = 'postgres',\n'schema-name' = 'public',\n'table-name' = 'student',\n'decoding.plugin.name' = 'pgoutput' ,\n'debezium.snapshot.mode' = 'initial'\n) ;\n</code></pre> <p>If it's table sql, pgoutput is the standard logical decode output plugin in PostgreSQL 10+. It needs to be set up. Without adding: <code>'decoding.plugin.name' = 'pgoutput'</code>, an error is reported: <code>org.postgresql.util.PSQLException: ERROR: could not access file \"decoderbufs\": No such file or directory</code>.</p>"},{"location":"MatrixOne/Develop/Ecological-Tools/Computing-Engine/Flink/flink-postgresql-matrixone/#create-sink-table","title":"Create sink table","text":"<pre><code>CREATE TABLE test_pg (\nstu_id  int not null,\nstu_name    varchar(50),\nstu_age     int,\nstu_bth     date,\nprimary key (stu_id) not enforced\n) WITH (\n'connector' = 'jdbc',\n'url' = 'jdbc:mysql://xx.xx.xx.xx:6001/postgre',\n'driver' = 'com.mysql.cj.jdbc.Driver',\n'username' = 'root',\n'password' = '111',\n'table-name' = 'student'\n);\n</code></pre>"},{"location":"MatrixOne/Develop/Ecological-Tools/Computing-Engine/Flink/flink-postgresql-matrixone/#importing-postgresql-data-into-matrixone","title":"Importing PostgreSQL data into MatrixOne","text":"<pre><code>insert into test_pg select * from pgsql_bog; </code></pre> <p>Query the corresponding table data in MatrixOne;</p> <pre><code>mysql&gt; select * from student;\n+--------+----------+---------+------------+\n| stu_id | stu_name | stu_age | stu_bth    |\n+--------+----------+---------+------------+\n|      1 | lisa     |      12 | 2022-10-12 |\n|      2 | tom      |      23 | 2021-11-10 |\n|      3 | jenny    |      11 | 2024-02-19 |\n|      4 | henry    |      12 | 2022-04-22 |\n+--------+----------+---------+------------+\n4 rows in set (0.00 sec)\n</code></pre> <p>Data can be found to have been imported</p>"},{"location":"MatrixOne/Develop/Ecological-Tools/Computing-Engine/Flink/flink-postgresql-matrixone/#adding-data-to-postgrsql","title":"Adding data to postgrsql","text":"<pre><code>insert into public.student values (51, '58', 39, '2020-01-03'); </code></pre> <p>Query the corresponding table data in MatrixOne;</p> <pre><code>mysql&gt;  select * from student;\n+--------+----------+---------+------------+\n| stu_id | stu_name | stu_age | stu_bth    |\n+--------+----------+---------+------------+\n|      1 | lisa     |      12 | 2022-10-12 |\n|      2 | tom      |      23 | 2021-11-10 |\n|      3 | jenny    |      11 | 2024-02-19 |\n|      4 | henry    |      12 | 2022-04-22 |\n|     51 | 58       |      39 | 2020-01-03 |\n+--------+----------+---------+------------+\n5 rows in set (0.01 sec)\n</code></pre> <p>You can find that the data has been synchronized to the MatrixOne correspondence table.</p> <p>To delete data:</p> <pre><code>delete from public.student where stu_id=1; </code></pre> <p>If something goes wrong,</p> <pre><code>cannot delete from table \"student\" because it does not have a replica identity and publishes deletes </code></pre> <p>then execute</p> <pre><code>alter table public.student replica identity full; </code></pre> <p>Query the corresponding table data in MatrixOne;</p> <pre><code>mysql&gt; select * from student;\n+--------+----------+---------+------------+\n| stu_id | stu_name | stu_age | stu_bth    |\n+--------+----------+---------+------------+\n|      2 | tom      |      23 | 2021-11-10 |\n|      3 | jenny    |      11 | 2024-02-19 |\n|      4 | henry    |      12 | 2022-04-22 |\n|     51 | 58       |      39 | 2020-01-03 |\n+--------+----------+---------+------------+\n4 rows in set (0.00 sec)\n</code></pre>"},{"location":"MatrixOne/Develop/Ecological-Tools/Computing-Engine/Flink/flink-sqlserver-matrixone/","title":"Write SQL Server data to MatrixOne using Flink","text":"<p>This chapter describes how to write SQL Server data to MatrixOne using Flink.</p>"},{"location":"MatrixOne/Develop/Ecological-Tools/Computing-Engine/Flink/flink-sqlserver-matrixone/#pre-preparation","title":"Pre-preparation","text":"<p>This practice requires the installation and deployment of the following software environments:</p> <ul> <li>Complete standalone MatrixOne deployment.</li> <li>Download and install lntelliJ IDEA (2022.2.1 or later version).</li> <li>Select the JDK 8+ version version to download and install depending on your system environment.</li> <li>Download and install Flink with a minimum supported version of 1.11.</li> <li>Completed SQL Server 2022.</li> <li>Download and install MySQL, the recommended version is 8.0.33.</li> </ul>"},{"location":"MatrixOne/Develop/Ecological-Tools/Computing-Engine/Flink/flink-sqlserver-matrixone/#operational-steps","title":"Operational steps","text":""},{"location":"MatrixOne/Develop/Ecological-Tools/Computing-Engine/Flink/flink-sqlserver-matrixone/#create-libraries-tables-and-insert-data-in-sql-server","title":"Create libraries, tables, and insert data in SQL Server","text":"<pre><code>create database sstomo;\nuse sstomo;\ncreate table sqlserver_data (\nid INT PRIMARY KEY,\nname NVARCHAR(100),\nage INT,\nentrytime DATE,\ngender NVARCHAR(2)\n);\n\ninsert into sqlserver_data (id, name, age, entrytime, gender)\nvalues  (1, 'Lisa', 25, '2010-10-12', '0'),\n(2, 'Liming', 26, '2013-10-12', '0'),\n(3, 'asdfa', 27, '2022-10-12', '0'),\n(4, 'aerg', 28, '2005-10-12', '0'),\n(5, 'asga', 29, '2015-10-12', '1'),\n(6, 'sgeq', 30, '2010-10-12', '1');\n</code></pre>"},{"location":"MatrixOne/Develop/Ecological-Tools/Computing-Engine/Flink/flink-sqlserver-matrixone/#sql-server-configuration-cdc","title":"SQL Server Configuration CDC","text":"<ol> <li> <p>Verify that the current user has sysadmin privileges turned on Queries for the current user permissions. The CDC (Change Data Capture) feature must be enabled for the database to be a member of the sysadmin fixed server role. query the sa user for sysadmin by the following command</p> <p><code>sql exec sp_helpsrvrolemember 'sysadmin';</code></p> <p> </p> </li> <li> <p>Queries if the current database has CDC (Change Data Capture Capability) enabled</p> <p> </p> <p>Remarks: 0: means not enabled; 1: means enabled</p> <p>If not, execute the following sql open:</p> <pre><code>use sstomo; exec sys.sp_cdc_enable_db; </code></pre> </li> <li> <p>Query whether the table has CDC (Change Data Capture) enabled</p> <pre><code>select name,is_tracked_by_cdc from sys.tables where name = 'sqlserver_data'; </code></pre> <p> </p> <p>Remarks: 0: means not enabled; 1: means enabled If not, execute the following sql to turn it on:</p> <pre><code>use sstomo;\nexec sys.sp_cdc_enable_table @source_schema = 'dbo', @source_name = 'sqlserver_data', @role_name = NULL, @supports_net_changes = 0;\n</code></pre> </li> <li> <p>Table sqlserver_data Start CDC (Change Data Capture) Feature Configuration Completed</p> <p>Looking at the system tables under the database, you will see more cdc-related data tables, where cdc.dbo_sqlserver_flink_CT is the record of all DML operations that record the source tables, each corresponding to an instance table.</p> <p> </p> </li> <li> <p>Verify that the CDC agent starts properly</p> <p>Execute the following command to see if the CDC agent is on:</p> <pre><code>exec master.dbo.xp_servicecontrol N'QUERYSTATE', N'SQLSERVERAGENT'; </code></pre> <p>If the status is <code>Stopped</code>, you need to turn on the CDC agent.</p> <p> </p> <p>Open the CDC agent in a Windows environment: On the machine where the SqlServer database is installed, open Microsoft Sql Server Managememt Studio, right-click the following image location (SQL Server agent), and click Open, as shown below:</p> <p> </p> <p>Once on, query the agent status again to confirm that the status has changed to running</p> <p> </p> <p>At this point, the table sqlserver_data starts the CDC (Change Data Capture) function all complete.</p> </li> </ol>"},{"location":"MatrixOne/Develop/Ecological-Tools/Computing-Engine/Flink/flink-sqlserver-matrixone/#creating-target-libraries-and-tables-in-matrixone","title":"Creating target libraries and tables in MatrixOne","text":"<pre><code>create database sstomo;\nuse sstomo;\nCREATE TABLE sqlserver_data (\nid int NOT NULL,\nname varchar(100) DEFAULT NULL,\nage int DEFAULT NULL,\nentrytime date DEFAULT NULL,\ngender char(1) DEFAULT NULL,\nPRIMARY KEY (id)\n);\n</code></pre>"},{"location":"MatrixOne/Develop/Ecological-Tools/Computing-Engine/Flink/flink-sqlserver-matrixone/#start-flink","title":"Start flink","text":"<ol> <li> <p>Copy the cdc jar package</p> <p>Copy <code>link-sql-connector-sqlserver-cdc-2.3.0.jar</code>, <code>flink-connector-jdbc_2.12-1.13.6.jar</code>, <code>mysql-connector-j-8.0.33.jar</code> to the lib directory of flink.</p> </li> <li> <p>Start flink</p> <p>Switch to the flink directory and start the cluster</p> <pre><code>./bin/start-cluster.sh </code></pre> <p>Start Flink SQL CLIENT</p> <pre><code>./bin/sql-client.sh </code></pre> </li> <li> <p>Turn on checkpoint</p> <pre><code>SET execution.checkpointing.interval = 3s; </code></pre> </li> </ol>"},{"location":"MatrixOne/Develop/Ecological-Tools/Computing-Engine/Flink/flink-sqlserver-matrixone/#create-sourcesink-table-with-flink-ddl","title":"Create source/sink table with flink ddl","text":"<pre><code>-- Create source table\nCREATE TABLE sqlserver_source (\nid INT,\nname varchar(50),\nage INT,\nentrytime date,\ngender varchar(100),\nPRIMARY KEY (`id`) not enforced\n) WITH( 'connector' = 'sqlserver-cdc',\n'hostname' = 'xx.xx.xx.xx',\n'port' = '1433',\n'username' = 'sa',\n'password' = '123456',\n'database-name' = 'sstomo',\n'schema-name' = 'dbo',\n'table-name' = 'sqlserver_data');\n\n-- Creating a sink table\nCREATE TABLE sqlserver_sink (\nid INT,\nname varchar(100),\nage INT,\nentrytime date,\ngender varchar(10),\nPRIMARY KEY (`id`) not enforced\n) WITH( 'connector' = 'jdbc',\n'url' = 'jdbc:mysql://xx.xx.xx.xx:6001/sstomo',\n'driver' = 'com.mysql.cj.jdbc.Driver',\n'username' = 'root',\n'password' = '111',\n'table-name' = 'sqlserver_data'\n);\n\n-- Read and insert the source table data into the sink table.\nInsert into sqlserver_sink select * from sqlserver_source;\n</code></pre>"},{"location":"MatrixOne/Develop/Ecological-Tools/Computing-Engine/Flink/flink-sqlserver-matrixone/#query-correspondence-table-data-in-matrixone","title":"Query correspondence table data in MatrixOne","text":"<pre><code>use sstomo; select * from sqlserver_data; </code></pre>"},{"location":"MatrixOne/Develop/Ecological-Tools/Computing-Engine/Flink/flink-sqlserver-matrixone/#inserting-data-to-sql-server","title":"Inserting data to SQL Server","text":"<p>Insert 3 pieces of data into the SqlServer table sqlserver_data:</p> <pre><code>insert into sstomo.dbo.sqlserver_data (id, name, age, entrytime, gender)\nvalues (7, 'Liss12a', 25, '2010-10-12', '0'),\n(8, '12233s', 26, '2013-10-12', '0'),\n(9, 'sgeq1', 304, '2010-10-12', '1');\n</code></pre> <p>Query corresponding table data in MatrixOne:</p> <pre><code>select * from sstomo.sqlserver_data; </code></pre>"},{"location":"MatrixOne/Develop/Ecological-Tools/Computing-Engine/Flink/flink-sqlserver-matrixone/#deleting-incremental-data-in-sql-server","title":"Deleting incremental data in SQL Server","text":"<p>Delete two rows with ids 3 and 4 in SQL Server:</p> <pre><code>delete from sstomo.dbo.sqlserver_data where id in(3,4); </code></pre> <p>Query table data in mo, these two rows have been deleted synchronously:</p>"},{"location":"MatrixOne/Develop/Ecological-Tools/Computing-Engine/Flink/flink-sqlserver-matrixone/#adding-new-data-to-sql-server","title":"Adding new data to SQL Server","text":"<p>Update two rows of data in a SqlServer table:</p> <pre><code>update sstomo.dbo.sqlserver_data set age = 18 where id in(1,2); </code></pre> <p>Query table data in MatrixOne, the two rows have been updated in sync:</p>"},{"location":"MatrixOne/Develop/Ecological-Tools/Computing-Engine/Flink/flink-tidb-matrixone/","title":"Write TiDB data to MatrixOne using Flink","text":"<p>This chapter describes how to write TiDB data to MatrixOne using Flink.</p>"},{"location":"MatrixOne/Develop/Ecological-Tools/Computing-Engine/Flink/flink-tidb-matrixone/#pre-preparation","title":"Pre-preparation","text":"<p>This practice requires the installation and deployment of the following software environments:</p> <ul> <li>Complete standalone MatrixOne deployment.</li> <li>Download and install lntelliJ IDEA (2022.2.1 or later version).</li> <li>Select the JDK 8+ version version to download and install depending on your system environment.</li> <li>TiDB standalone deployment completed.</li> <li>Download and install Flink with a minimum supported version of 1.11.</li> <li>Download and install MySQL, the recommended version is 8.0.33.</li> <li>Download Flink CDC connector</li> </ul>"},{"location":"MatrixOne/Develop/Ecological-Tools/Computing-Engine/Flink/flink-tidb-matrixone/#operational-steps","title":"Operational steps","text":""},{"location":"MatrixOne/Develop/Ecological-Tools/Computing-Engine/Flink/flink-tidb-matrixone/#copy-the-jar-package","title":"Copy the jar package","text":"<p>Copy the <code>Flink CDC connector</code> and the corresponding Jar packages for <code>flink-connector-jdbc_2.12-1.13.6.jar</code> and <code>mysql-connector-j-8.0.33.jar</code> to <code>flink-1.13.6/lib/</code>.</p> <p>If flink is already started, you need to restart flink and load the effective jar package.</p>"},{"location":"MatrixOne/Develop/Ecological-Tools/Computing-Engine/Flink/flink-tidb-matrixone/#create-a-table-in-tidb-and-insert-data","title":"Create a table in TiDB and insert data","text":"<pre><code>create table EMPQ_cdc\n(\nempno    bigint not null,\nename    VARCHAR(10),\njob      VARCHAR(9),\nmgr      int,\nhiredate  DATE,\nsal      decimal(7,2),\ncomm   decimal(7,2),\ndeptno   int(2),\nprimary key (empno)\n)ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n\nINSERT  into empq VALUES (1,\"\u5f20\u4e09\",\"sale\",1,'2024-01-01',1000,NULL,1);\nINSERT  into empq VALUES (2,\"\u674e\u56db\",\"develo,\"2,'2024-03-05',5000,NULL,2);\nINSERT  into empq VALUES (3,\"\u738b\u4e94\",\"hr\",3,'2024-03-18',2000,NULL,2);\nINSERT  into empq VALUES (4,\"\u8d75\u516d\",\"pm\",4,'2024-03-11',2000,NULL,3);\n</code></pre>"},{"location":"MatrixOne/Develop/Ecological-Tools/Computing-Engine/Flink/flink-tidb-matrixone/#creating-a-target-table-in-matrixone","title":"Creating a Target Table in MatrixOne","text":"<pre><code>create table EMPQ\n(\nempno    bigint not null,\nename    VARCHAR(10),\njob      VARCHAR(9),\nmgr      int,\nhiredate  DATE,\nsal      decimal(7,2),\ncomm   decimal(7,2),\ndeptno   int(2),\nprimary key (empno)\n);\n</code></pre>"},{"location":"MatrixOne/Develop/Ecological-Tools/Computing-Engine/Flink/flink-tidb-matrixone/#switch-to-the-flink-directory-and-start-the-cluster","title":"Switch to the flink directory and start the cluster","text":"<pre><code>./bin/start-cluster.sh </code></pre>"},{"location":"MatrixOne/Develop/Ecological-Tools/Computing-Engine/Flink/flink-tidb-matrixone/#start-flink-sql-cli","title":"Start Flink SQL CLI","text":"<pre><code>./bin/sql-client.sh </code></pre>"},{"location":"MatrixOne/Develop/Ecological-Tools/Computing-Engine/Flink/flink-tidb-matrixone/#turn-on-checkpoint","title":"Turn on checkpoint","text":"<pre><code>SET execution.checkpointing.interval = 3s; </code></pre>"},{"location":"MatrixOne/Develop/Ecological-Tools/Computing-Engine/Flink/flink-tidb-matrixone/#create-source-and-sink-tables-using-flink-ddl","title":"Create source and sink tables using flink ddl","text":"<p>The build table statement is in smt/result/flink-create.all.sql.</p> <pre><code>-- Creating Test Libraries\nCREATE DATABASE IF NOT EXISTS `default_catalog`.`test`;\n\n-- Create source table\nCREATE TABLE IF NOT EXISTS `default_catalog`.`test`.`EMPQ_src` (\n`empno` BIGINT NOT NULL,                                                 `ename` STRING NULL,                                                   `job` STRING NULL,                                                      `mgr` INT NULL,                                                      `hiredate` DATE NULL,                                                         `sal` DECIMAL(7, 2) NULL,                                             `comm` DECIMAL(7, 2) NULL,                                                     `deptno` INT NULL,                                                        PRIMARY KEY(`empno`) NOT ENFORCED\n) with (\n'connector' = 'tidb-cdc',\n'database-name' = 'test',\n'table-name' = 'EMPQ_cdc',\n'pd-addresses' = 'xx.xx.xx.xx:2379'\n);\n\n-- Creating a sink table\nCREATE TABLE IF NOT EXISTS `default_catalog`.`test`.`EMPQ_sink` (           `empno` BIGINT NOT NULL,                                                     `ename` STRING NULL,                                                     `job` STRING NULL,                                                        `mgr` INT NULL,                                                         `hiredate` DATE NULL,                                                          `sal` DECIMAL(7, 2) NULL,                                               `comm` DECIMAL(7, 2) NULL,                                                             `deptno` INT NULL,                                                           PRIMARY KEY(`empno`) NOT ENFORCED\n) with (\n'connector' = 'jdbc',\n'url' = 'jdbc:mysql://xx.xx.xx.xx:6001/test',\n'driver' = 'com.mysql.cj.jdbc.Driver',\n'username' = 'root',\n'password' = '111',\n'table-name' = 'empq'\n);\n</code></pre>"},{"location":"MatrixOne/Develop/Ecological-Tools/Computing-Engine/Flink/flink-tidb-matrixone/#importing-tidb-data-into-matrixone","title":"Importing TiDB data into MatrixOne","text":"<pre><code>INSERT INTO `default_catalog`.`test`.`EMPQ_sink` SELECT * FROM `default_catalog`.`test`.`EMPQ_src`; </code></pre>"},{"location":"MatrixOne/Develop/Ecological-Tools/Computing-Engine/Flink/flink-tidb-matrixone/#query-correspondence-table-data-in-matrixone","title":"Query correspondence table data in Matrixone","text":"<pre><code>select * from EMPQ; </code></pre> <p>Data can be found to have been imported</p>"},{"location":"MatrixOne/Develop/Ecological-Tools/Computing-Engine/Flink/flink-tidb-matrixone/#delete-a-piece-of-data-in-tidb","title":"Delete a piece of data in TiDB","text":"<pre><code>delete from EMPQ_cdc where empno=1; </code></pre> <p>Query table data in MatrixOne, this row has been deleted synchronously.</p>"},{"location":"MatrixOne/Develop/Ecological-Tools/Computing-Engine/Spark/spark-doris-matrixone/","title":"Migrating data from Doris to MatrixOne with Spark","text":"<p>In this chapter, we will cover the implementation of Doris bulk data writing to MatrixOne using the Spark calculation engine.</p>"},{"location":"MatrixOne/Develop/Ecological-Tools/Computing-Engine/Spark/spark-doris-matrixone/#pre-preparation","title":"Pre-preparation","text":"<p>This practice requires the installation and deployment of the following software environments:</p> <ul> <li>Finished installing and starting MatrixOne.</li> <li>Download and install Doris.</li> <li>Download and install IntelliJ IDEA version 2022.2.1 and above.</li> <li>Download and install JDK 8+.</li> <li>Download and install MySQL Client 8.0.33.</li> </ul>"},{"location":"MatrixOne/Develop/Ecological-Tools/Computing-Engine/Spark/spark-doris-matrixone/#operational-steps","title":"Operational steps","text":""},{"location":"MatrixOne/Develop/Ecological-Tools/Computing-Engine/Spark/spark-doris-matrixone/#step-one-prepare-data-in-doris","title":"Step one: Prepare data in Doris","text":"<pre><code>create database test;\n\nuse test;\n\nCREATE TABLE IF NOT EXISTS example_tbl\n(\nuser_id BIGINT NOT NULL COMMENT \"\u7528\u6237id\",\ndate DATE NOT NULL COMMENT \"\u6570\u636e\u704c\u5165\u65e5\u671f\u65f6\u95f4\",\ncity VARCHAR(20) COMMENT \"\u7528\u6237\u6240\u5728\u57ce\u5e02\",\nage SMALLINT COMMENT \"\u7528\u6237\u5e74\u9f84\",\nsex TINYINT COMMENT \"\u7528\u6237\u6027\u522b\"\n)\nDUPLICATE KEY(user_id, date)\nDISTRIBUTED BY HASH(user_id) BUCKETS 1\nPROPERTIES (\n\"replication_num\"=\"1\"\n);\n\ninsert into example_tbl values\n(10000,'2017-10-01','\u5317\u4eac',20,0),\n(10000,'2017-10-01','\u5317\u4eac',20,0),\n(10001,'2017-10-01','\u5317\u4eac',30,1),\n(10002,'2017-10-02','\u4e0a\u6d77',20,1),\n(10003,'2017-10-02','\u5e7f\u5dde',32,0),\n(10004,'2017-10-01','\u6df1\u5733',35,0),\n(10004,'2017-10-03','\u6df1\u5733',35,0);\n</code></pre>"},{"location":"MatrixOne/Develop/Ecological-Tools/Computing-Engine/Spark/spark-doris-matrixone/#step-two-prepare-library-tables-in-matrixone","title":"Step Two: Prepare Library Tables in MatrixOne","text":"<pre><code>create database sparkdemo;\nuse sparkdemo;\n\nCREATE TABLE IF NOT EXISTS example_tbl\n(\nuser_id BIGINT NOT NULL COMMENT \"\u7528\u6237id\",\ndate DATE NOT NULL COMMENT \"\u6570\u636e\u704c\u5165\u65e5\u671f\u65f6\u95f4\",\ncity VARCHAR(20) COMMENT \"\u7528\u6237\u6240\u5728\u57ce\u5e02\",\nage SMALLINT COMMENT \"\u7528\u6237\u5e74\u9f84\",\nsex TINYINT COMMENT \"\u7528\u6237\u6027\u522b\"\n);\n</code></pre>"},{"location":"MatrixOne/Develop/Ecological-Tools/Computing-Engine/Spark/spark-doris-matrixone/#step-three-initialize-the-project","title":"Step Three: Initialize the Project","text":"<p>Start IDEA and create a new Maven project, add the project dependencies, and the pom.xml file is as follows:</p> <pre><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;project xmlns=\"http://maven.apache.org/POM/4.0.0\"\nxmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\nxsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\"&gt;\n&lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;\n\n&lt;groupId&gt;com.example.mo&lt;/groupId&gt;\n&lt;artifactId&gt;mo-spark-demo&lt;/artifactId&gt;\n&lt;version&gt;1.0-SNAPSHOT&lt;/version&gt;\n\n&lt;properties&gt;\n&lt;maven.compiler.source&gt;8&lt;/maven.compiler.source&gt;\n&lt;maven.compiler.target&gt;8&lt;/maven.compiler.target&gt;\n&lt;spark.version&gt;3.2.1&lt;/spark.version&gt;\n&lt;java.version&gt;8&lt;/java.version&gt;\n&lt;/properties&gt;\n\n&lt;dependencies&gt;\n&lt;dependency&gt;\n&lt;groupId&gt;org.apache.doris&lt;/groupId&gt;\n&lt;artifactId&gt;spark-doris-connector-3.1_2.12&lt;/artifactId&gt;\n&lt;version&gt;1.2.0&lt;/version&gt;\n&lt;/dependency&gt;\n\n&lt;dependency&gt;\n&lt;groupId&gt;org.apache.spark&lt;/groupId&gt;\n&lt;artifactId&gt;spark-sql_2.12&lt;/artifactId&gt;\n&lt;version&gt;${spark.version}&lt;/version&gt;\n&lt;/dependency&gt;\n\n&lt;dependency&gt;\n&lt;groupId&gt;org.apache.spark&lt;/groupId&gt;\n&lt;artifactId&gt;spark-hive_2.12&lt;/artifactId&gt;\n&lt;version&gt;${spark.version}&lt;/version&gt;\n&lt;/dependency&gt;\n&lt;dependency&gt;\n&lt;groupId&gt;org.apache.spark&lt;/groupId&gt;\n&lt;artifactId&gt;spark-catalyst_2.12&lt;/artifactId&gt;\n&lt;version&gt;${spark.version}&lt;/version&gt;\n&lt;/dependency&gt;\n&lt;dependency&gt;\n&lt;groupId&gt;org.apache.spark&lt;/groupId&gt;\n&lt;artifactId&gt;spark-core_2.12&lt;/artifactId&gt;\n&lt;version&gt;${spark.version}&lt;/version&gt;\n&lt;/dependency&gt;\n&lt;dependency&gt;\n&lt;groupId&gt;org.codehaus.jackson&lt;/groupId&gt;\n&lt;artifactId&gt;jackson-core-asl&lt;/artifactId&gt;\n&lt;version&gt;1.9.13&lt;/version&gt;\n&lt;/dependency&gt;\n&lt;dependency&gt;\n&lt;groupId&gt;org.codehaus.jackson&lt;/groupId&gt;\n&lt;artifactId&gt;jackson-mapper-asl&lt;/artifactId&gt;\n&lt;version&gt;1.9.13&lt;/version&gt;\n&lt;/dependency&gt;\n\n\n&lt;dependency&gt;\n&lt;groupId&gt;mysql&lt;/groupId&gt;\n&lt;artifactId&gt;mysql-connector-java&lt;/artifactId&gt;\n&lt;version&gt;8.0.30&lt;/version&gt;\n&lt;/dependency&gt;\n&lt;/dependencies&gt;\n\n&lt;build&gt;\n&lt;plugins&gt;\n&lt;plugin&gt;\n&lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;\n&lt;artifactId&gt;maven-compiler-plugin&lt;/artifactId&gt;\n&lt;version&gt;3.8.0&lt;/version&gt;\n&lt;configuration&gt;\n&lt;source&gt;${java.version}&lt;/source&gt;\n&lt;target&gt;${java.version}&lt;/target&gt;\n&lt;encoding&gt;UTF-8&lt;/encoding&gt;\n&lt;/configuration&gt;\n&lt;/plugin&gt;\n\n&lt;plugin&gt;\n&lt;groupId&gt;org.scala-tools&lt;/groupId&gt;\n&lt;artifactId&gt;maven-scala-plugin&lt;/artifactId&gt;\n&lt;configuration&gt;\n&lt;scalaVersion&gt;2.12.16&lt;/scalaVersion&gt;\n&lt;/configuration&gt;\n&lt;version&gt;2.15.1&lt;/version&gt;\n&lt;executions&gt;\n&lt;execution&gt;\n&lt;id&gt;compile-scala&lt;/id&gt;\n&lt;goals&gt;\n&lt;goal&gt;add-source&lt;/goal&gt;\n&lt;goal&gt;compile&lt;/goal&gt;\n&lt;/goals&gt;\n&lt;configuration&gt;\n&lt;args&gt;\n&lt;!--&lt;arg&gt;-make:transitive&lt;/arg&gt;--&gt;\n&lt;arg&gt;-dependencyfile&lt;/arg&gt;\n&lt;arg&gt;${project.build.directory}/.scala_dependencies&lt;/arg&gt;\n&lt;/args&gt;\n&lt;/configuration&gt;\n&lt;/execution&gt;\n&lt;/executions&gt;\n&lt;/plugin&gt;\n\n&lt;plugin&gt;\n&lt;artifactId&gt;maven-assembly-plugin&lt;/artifactId&gt;\n&lt;configuration&gt;\n&lt;descriptorRefs&gt;\n&lt;descriptor&gt;jar-with-dependencies&lt;/descriptor&gt;\n&lt;/descriptorRefs&gt;\n&lt;/configuration&gt;\n&lt;executions&gt;\n&lt;execution&gt;\n&lt;id&gt;make-assembly&lt;/id&gt;\n&lt;phase&gt;package&lt;/phase&gt;\n&lt;goals&gt;\n&lt;goal&gt;single&lt;/goal&gt;\n&lt;/goals&gt;\n&lt;/execution&gt;\n&lt;/executions&gt;\n&lt;/plugin&gt;\n&lt;/plugins&gt;\n&lt;/build&gt;\n\n&lt;/project&gt;\n</code></pre>"},{"location":"MatrixOne/Develop/Ecological-Tools/Computing-Engine/Spark/spark-doris-matrixone/#step-four-write-doris-data-to-matrixone","title":"Step Four: Write Doris data to MatrixOne","text":"<ol> <li> <p>Writing code</p> <p>Create a Doris2Mo.java class that reads Doris data through Spark and writes it to MatrixOne:</p> <pre><code>package org.example;\n\nimport org.apache.spark.sql.Dataset; import org.apache.spark.sql.Row; import org.apache.spark.sql.SaveMode; import org.apache.spark.sql.SparkSession;\n\nimport java.sql.SQLException;\n\n/\\** * @auther MatrixOne * @desc \\*/ public class Doris2Mo { public static void main(String\\[] args) throws SQLException { SparkSession spark = SparkSession .builder() .appName(\"Spark Doris to MatixOne\") .master(\"local\") .getOrCreate();\n\nDataset&lt;Row&gt; df = spark.read().format(\"doris\").option(\"doris.table.identifier\", \"test.example_tbl\")\n.option(\"doris.fenodes\", \"192.168.110.11:8030\")\n.option(\"user\", \"root\")\n.option(\"password\", \"root\")\n.load();\n\n// JDBC properties for MySQL\njava.util.Properties mysqlProperties = new java.util.Properties();\nmysqlProperties.setProperty(\"user\", \"root\");\nmysqlProperties.setProperty(\"password\", \"111\");\nmysqlProperties.setProperty(\"driver\", \"com.mysql.cj.jdbc.Driver\");\n\n// MySQL JDBC URL\nString mysqlUrl = \"jdbc:mysql://xx.xx.xx.xx:6001/sparkdemo\";\n\n// Write to MySQL\ndf.write()\n.mode(SaveMode.Append)\n.jdbc(mysqlUrl, \"example_tbl\", mysqlProperties);\n}\n\n} </code></pre> </li> <li> <p>View execution results</p> <p>Execute the following SQL query results in MatrixOne:</p> <pre><code>mysql&gt; select * from sparkdemo.example_tbl;\n+---------+------------+--------+------+------+\n| user_id | date       | city   | age  | sex  |\n+---------+------------+--------+------+------+\n|   10000 | 2017-10-01 | \u5317\u4eac   |   20 |    0 |\n|   10000 | 2017-10-01 | \u5317\u4eac   |   20 |    0 |\n|   10001 | 2017-10-01 | \u5317\u4eac   |   30 |    1 |\n|   10002 | 2017-10-02 | \u4e0a\u6d77   |   20 |    1 |\n|   10003 | 2017-10-02 | \u5e7f\u5dde   |   32 |    0 |\n|   10004 | 2017-10-01 | \u6df1\u5733   |   35 |    0 |\n|   10004 | 2017-10-03 | \u6df1\u5733   |   35 |    0 |\n+---------+------------+--------+------+------+\n7 rows in set (0.01 sec)\n</code></pre> </li> <li> <p>Execute in Spark</p> <ul> <li>Add Dependencies</li> </ul> <p>Package the code written in step 2 through Maven: <code>mo-spark-demo-1.0-SNAPSHOT-jar-with-dependencies.jar</code>. Place the above Jar package under the Spark installation directory jars.</p> <ul> <li>Start Spark</li> </ul> <p>Once the dependency is added, start Spark, where I start using Spark Standalone mode</p> <pre><code>./sbin/start-all.sh </code></pre> <p>When the startup is complete, use the jps command to query if the startup was successful, and the master and worker processes start successfully</p> <pre><code>[root@node02 jars]# jps\n5990 Worker\n8093 Jps\n5870 Master\n</code></pre> <ul> <li>Executing procedures</li> </ul> <p>Go to the Spark installation directory and execute the following command</p> <pre><code>[root@node02 spark-3.2.4-bin-hadoop3.2]# bin/spark-submit --class org.example.Doris2Mo --master spark://192.168.110.247:7077 ./jars/mo-spark-demo-1.0-SNAPSHOT-jar-with-dependencies.jar\n\n//class:Indicates the main class to be executed\n//master:Patterns of Spark Program Operation\n//mo-spark-demo-1.0-SNAPSHOT-jar-with-dependencies.jar:Running program jar package\n</code></pre> <p>The output of the following results indicates a successful write:</p> <pre><code>24/04/30 10:24:53 INFO Executor: Finished task 0.0 in stage 0.0 (TID 0). 1261 bytes result sent to driver\n24/04/30 10:24:53 INFO TaskSetManager: Finished task 0.0 in stage 0.0 (TID 0) in 1493 ms on node02 (executor driver) (1/1)\n24/04/30 10:24:53 INFO TaskSchedulerImpl: Removed TaskSet 0.0, whose tasks have all completed, from pool\n24/04/30 10:24:53 INFO DAGScheduler: ResultStage 0 (jdbc at Doris2Mo.java:40) finished in 1.748 s\n24/04/30 10:24:53 INFO DAGScheduler: Job 0 is finished. Cancelling potential speculative or zombie tasks for this job\n24/04/30 10:24:53 INFO TaskSchedulerImpl: Killing all running tasks in stage 0: Stage finished\n24/04/30 10:24:53 INFO DAGScheduler: Job 0 finished: jdbc at Doris2Mo.java:40, took 1.848481 s\n24/04/30 10:24:53 INFO SparkContext: Invoking stop() from shutdown hook\n24/04/30 10:24:53 INFO SparkUI: Stopped Spark web UI at http://node02:4040\n24/04/30 10:24:53 INFO MapOutputTrackerMasterEndpoint: MapOutputTrackerMasterEndpoint stopped!\n24/04/30 10:24:53 INFO MemoryStore: MemoryStore cleared\n24/04/30 10:24:53 INFO BlockManager: BlockManager stopped\n24/04/30 10:24:53 INFO BlockManagerMaster: BlockManagerMaster stopped\n24/04/30 10:24:53 INFO OutputCommitCoordinator$OutputCommitCoordinatorEndpoint: OutputCommitCoordinator stopped!\n24/04/30 10:24:53 INFO SparkContext: Successfully stopped SparkContext\n24/04/30 10:24:53 INFO ShutdownHookManager: Shutdown hook called\n</code></pre> </li> </ol>"},{"location":"MatrixOne/Develop/Ecological-Tools/Computing-Engine/Spark/spark-hive-matrixone/","title":"Import Hive data into MatrixOne using Spark","text":"<p>In this chapter, we will cover the implementation of Hive bulk data writing to MatrixOne using the Spark calculation engine.</p>"},{"location":"MatrixOne/Develop/Ecological-Tools/Computing-Engine/Spark/spark-hive-matrixone/#pre-preparation","title":"Pre-preparation","text":"<p>This practice requires the installation and deployment of the following software environments:</p> <ul> <li>Finished installing and starting MatrixOne.</li> <li>Download and install IntelliJ IDEA version 2022.2.1 and above.</li> <li>Download and install JDK 8+.</li> <li>Importing data from Hive requires installing Hadoop and Hive.</li> <li>Download and install MySQL Client 8.0.33.</li> </ul>"},{"location":"MatrixOne/Develop/Ecological-Tools/Computing-Engine/Spark/spark-hive-matrixone/#operational-steps","title":"Operational steps","text":""},{"location":"MatrixOne/Develop/Ecological-Tools/Computing-Engine/Spark/spark-hive-matrixone/#step-one-initialize-the-project","title":"Step one: Initialize the project","text":"<ol> <li> <p>Launch IDEA, click File &gt; New &gt; Project, select Spring Initializer, and fill in the following configuration parameters:</p> <ul> <li>Name:mo-spark-demo</li> <li>Location:~\\Desktop</li> <li>Language:Java</li> <li>Type:Maven</li> <li>Group:com.example</li> <li>Artiface:matrixone-spark-demo</li> <li>Package name:com.matrixone.demo</li> <li>JDK 1.8</li> </ul> <p> </p> </li> <li> <p>Add a project dependency and edit the contents of <code>pom.xml</code> in the project root as follows:</p> </li> </ol> <pre><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;project xmlns=\"http://maven.apache.org/POM/4.0.0\"\nxmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\nxsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\"&gt;\n&lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;\n\n&lt;groupId&gt;com.example.mo&lt;/groupId&gt;\n&lt;artifactId&gt;mo-spark-demo&lt;/artifactId&gt;\n&lt;version&gt;1.0-SNAPSHOT&lt;/version&gt;\n\n&lt;properties&gt;\n&lt;maven.compiler.source&gt;8&lt;/maven.compiler.source&gt;\n&lt;maven.compiler.target&gt;8&lt;/maven.compiler.target&gt;\n&lt;spark.version&gt;3.2.1&lt;/spark.version&gt;\n&lt;/properties&gt;\n\n&lt;dependencies&gt;\n&lt;dependency&gt;\n&lt;groupId&gt;org.apache.spark&lt;/groupId&gt;\n&lt;artifactId&gt;spark-sql_2.12&lt;/artifactId&gt;\n&lt;version&gt;${spark.version}&lt;/version&gt;\n&lt;/dependency&gt;\n\n&lt;dependency&gt;\n&lt;groupId&gt;org.apache.spark&lt;/groupId&gt;\n&lt;artifactId&gt;spark-hive_2.12&lt;/artifactId&gt;\n&lt;version&gt;${spark.version}&lt;/version&gt;\n&lt;/dependency&gt;\n&lt;dependency&gt;\n&lt;groupId&gt;org.apache.spark&lt;/groupId&gt;\n&lt;artifactId&gt;spark-catalyst_2.12&lt;/artifactId&gt;\n&lt;version&gt;${spark.version}&lt;/version&gt;\n&lt;/dependency&gt;\n&lt;dependency&gt;\n&lt;groupId&gt;org.apache.spark&lt;/groupId&gt;\n&lt;artifactId&gt;spark-core_2.12&lt;/artifactId&gt;\n&lt;version&gt;${spark.version}&lt;/version&gt;\n&lt;/dependency&gt;\n&lt;dependency&gt;\n&lt;groupId&gt;org.codehaus.jackson&lt;/groupId&gt;\n&lt;artifactId&gt;jackson-core-asl&lt;/artifactId&gt;\n&lt;version&gt;1.9.13&lt;/version&gt;\n&lt;/dependency&gt;\n&lt;dependency&gt;\n&lt;groupId&gt;org.codehaus.jackson&lt;/groupId&gt;\n&lt;artifactId&gt;jackson-mapper-asl&lt;/artifactId&gt;\n&lt;version&gt;1.9.13&lt;/version&gt;\n&lt;/dependency&gt;\n\n\n&lt;dependency&gt;\n&lt;groupId&gt;mysql&lt;/groupId&gt;\n&lt;artifactId&gt;mysql-connector-java&lt;/artifactId&gt;\n&lt;version&gt;8.0.16&lt;/version&gt;\n&lt;/dependency&gt;\n\n&lt;/dependencies&gt;\n\n&lt;/project&gt;\n</code></pre>"},{"location":"MatrixOne/Develop/Ecological-Tools/Computing-Engine/Spark/spark-hive-matrixone/#step-two-prepare-hive-data","title":"Step Two: Prepare Hive Data","text":"<p>Create a Hive database, data table, and insert data by executing the following command in a terminal window:</p> <pre><code>hive\nhive&gt; create database motest;\nhive&gt; CREATE TABLE `users`(\n`id` int,\n`name` varchar(255),\n`age` int);\nhive&gt; INSERT INTO motest.users (id, name, age) VALUES(1, 'zhangsan', 12),(2, 'lisi', 17),(3, 'wangwu', 19);\n</code></pre>"},{"location":"MatrixOne/Develop/Ecological-Tools/Computing-Engine/Spark/spark-hive-matrixone/#step-three-create-a-matrixone-data-table","title":"Step Three: Create a MatrixOne data table","text":"<p>On node3, connect to node1's MatrixOne using a MySQL client. Then continue with the \"test\" database you created earlier and create a new data table \"users\".</p> <pre><code>CREATE TABLE `users` (\n`id` INT DEFAULT NULL,\n`name` VARCHAR(255) DEFAULT NULL,\n`age` INT DEFAULT NULL\n)\n</code></pre>"},{"location":"MatrixOne/Develop/Ecological-Tools/Computing-Engine/Spark/spark-hive-matrixone/#step-four-copy-the-configuration-file","title":"Step four: Copy the configuration file","text":"<p>Copy the three configuration files \"etc/hadoop/core-site.xml\" and \"hdfs-site.xml\" in the Hadoop root and \"conf/hive-site.xml\" in the Hive root to the \"resource\" directory of your project.</p>"},{"location":"MatrixOne/Develop/Ecological-Tools/Computing-Engine/Spark/spark-hive-matrixone/#step-five-write-the-code","title":"Step five: Write the code","text":"<p>Create a class called \"Hive2Mo.java\" in IntelliJ IDEA to use Spark to read data from Hive and write data to MatrixOne.</p> <pre><code>package com.matrixone.spark;\n\nimport org.apache.spark.sql.*;\n\nimport java.sql.SQLException;\nimport java.util.Properties;\n\n/**\n * @auther MatrixOne\n * @date 2022/2/9 10:02\n * @desc\n *\n * 1.\u5728 hive \u548c matrixone \u4e2d\u5206\u522b\u521b\u5efa\u76f8\u5e94\u7684\u8868\n * 2.\u5c06 core-site.xml hdfs-site.xml \u548c hive-site.xml \u62f7\u8d1d\u5230 resources \u76ee\u5f55\u4e0b\n * 3.\u9700\u8981\u8bbe\u7f6e\u57df\u540d\u6620\u5c04\n */\npublic class Hive2Mo {\n\n// parameters\nprivate static String master = \"local[2]\";\nprivate static String appName = \"app_spark_demo\";\n\nprivate static String destHost = \"xx.xx.xx.xx\";\nprivate static Integer destPort = 6001;\nprivate static String destUserName = \"root\";\nprivate static String destPassword = \"111\";\nprivate static String destDataBase = \"test\";\nprivate static String destTable = \"users\";\n\n\npublic static void main(String[] args) throws SQLException {\nSparkSession sparkSession = SparkSession.builder()\n.appName(appName)\n.master(master)\n.enableHiveSupport()\n.getOrCreate();\n\n//SparkJdbc to read table contents\nSystem.out.println(\"Read table contents of person in hive\");\n// Read all data in the table\nDataset&lt;Row&gt; rowDataset = sparkSession.sql(\"select * from motest.users\");\n// Show data\n//rowDataset.show();\nProperties properties = new Properties();\nproperties.put(\"user\", destUserName);\nproperties.put(\"password\", destPassword);;\nrowDataset.write()\n.mode(SaveMode.Append)\n.jdbc(\"jdbc:mysql://\" + destHost + \":\" + destPort + \"/\" + destDataBase,destTable, properties);\n}\n\n} </code></pre>"},{"location":"MatrixOne/Develop/Ecological-Tools/Computing-Engine/Spark/spark-hive-matrixone/#step-six-view-implementation-results","title":"Step Six: View Implementation Results","text":"<p>Execute the following SQL in MatrixOne to view the execution results:</p> <pre><code>mysql&gt; select * from test.users;\n+------+----------+------+\n| id   | name     | age  |\n+------+----------+------+\n|    1 | zhangsan |   12 |\n|    2 | lisi     |   17 |\n|    3 | wangwu   |   19 |\n+------+----------+------+\n3 rows in set (0.00 sec)\n</code></pre>"},{"location":"MatrixOne/Develop/Ecological-Tools/Computing-Engine/Spark/spark-mysql-matrixone/","title":"Migrating data from MySQL to MatrixOne using Spark","text":"<p>In this chapter, we will cover the implementation of MySQL bulk data writing to MatrixOne using the Spark compute engine.</p>"},{"location":"MatrixOne/Develop/Ecological-Tools/Computing-Engine/Spark/spark-mysql-matrixone/#pre-preparation","title":"Pre-preparation","text":"<p>This practice requires the installation and deployment of the following software environments:</p> <ul> <li>Finished installing and starting.</li> <li>Download and install IntelliJ IDEA version 2022.2.1 and above.</li> <li>Download and install JDK 8+.</li> <li>Download and install MySQL.</li> </ul>"},{"location":"MatrixOne/Develop/Ecological-Tools/Computing-Engine/Spark/spark-mysql-matrixone/#operational-steps","title":"Operational steps","text":""},{"location":"MatrixOne/Develop/Ecological-Tools/Computing-Engine/Spark/spark-mysql-matrixone/#step-one-initialize-the-project","title":"Step one: Initialize the project","text":"<ol> <li> <p>Launch IDEA, click File &gt; New &gt; Project, select Spring Initializer, and fill in the following configuration parameters:</p> <ul> <li>Name:mo-spark-demo</li> <li>Location:~\\Desktop</li> <li>Language:Java</li> <li>Type:Maven</li> <li>Group:com.example</li> <li>Artiface:matrixone-spark-demo</li> <li>Package name:com.matrixone.demo</li> <li>JDK 1.8</li> </ul> <p> </p> </li> <li> <p>Add a project dependency and edit the contents of <code>pom.xml</code> in the project root as follows:</p> </li> </ol> <pre><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;project xmlns=\"http://maven.apache.org/POM/4.0.0\"\nxmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\nxsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\"&gt;\n&lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;\n\n&lt;groupId&gt;com.example.mo&lt;/groupId&gt;\n&lt;artifactId&gt;mo-spark-demo&lt;/artifactId&gt;\n&lt;version&gt;1.0-SNAPSHOT&lt;/version&gt;\n\n&lt;properties&gt;\n&lt;maven.compiler.source&gt;8&lt;/maven.compiler.source&gt;\n&lt;maven.compiler.target&gt;8&lt;/maven.compiler.target&gt;\n&lt;spark.version&gt;3.2.1&lt;/spark.version&gt;\n&lt;/properties&gt;\n\n&lt;dependencies&gt;\n&lt;dependency&gt;\n&lt;groupId&gt;org.apache.spark&lt;/groupId&gt;\n&lt;artifactId&gt;spark-sql_2.12&lt;/artifactId&gt;\n&lt;version&gt;${spark.version}&lt;/version&gt;\n&lt;/dependency&gt;\n\n&lt;dependency&gt;\n&lt;groupId&gt;org.apache.spark&lt;/groupId&gt;\n&lt;artifactId&gt;spark-hive_2.12&lt;/artifactId&gt;\n&lt;version&gt;${spark.version}&lt;/version&gt;\n&lt;/dependency&gt;\n&lt;dependency&gt;\n&lt;groupId&gt;org.apache.spark&lt;/groupId&gt;\n&lt;artifactId&gt;spark-catalyst_2.12&lt;/artifactId&gt;\n&lt;version&gt;${spark.version}&lt;/version&gt;\n&lt;/dependency&gt;\n&lt;dependency&gt;\n&lt;groupId&gt;org.apache.spark&lt;/groupId&gt;\n&lt;artifactId&gt;spark-core_2.12&lt;/artifactId&gt;\n&lt;version&gt;${spark.version}&lt;/version&gt;\n&lt;/dependency&gt;\n&lt;dependency&gt;\n&lt;groupId&gt;org.codehaus.jackson&lt;/groupId&gt;\n&lt;artifactId&gt;jackson-core-asl&lt;/artifactId&gt;\n&lt;version&gt;1.9.13&lt;/version&gt;\n&lt;/dependency&gt;\n&lt;dependency&gt;\n&lt;groupId&gt;org.codehaus.jackson&lt;/groupId&gt;\n&lt;artifactId&gt;jackson-mapper-asl&lt;/artifactId&gt;\n&lt;version&gt;1.9.13&lt;/version&gt;\n&lt;/dependency&gt;\n\n\n&lt;dependency&gt;\n&lt;groupId&gt;mysql&lt;/groupId&gt;\n&lt;artifactId&gt;mysql-connector-java&lt;/artifactId&gt;\n&lt;version&gt;8.0.16&lt;/version&gt;\n&lt;/dependency&gt;\n\n&lt;/dependencies&gt;\n\n&lt;/project&gt;\n</code></pre>"},{"location":"MatrixOne/Develop/Ecological-Tools/Computing-Engine/Spark/spark-mysql-matrixone/#step-two-read-matrixone-data","title":"Step Two: Read MatrixOne Data","text":"<p>After connecting to MatrixOne using a MySQL client, create the database you need for the demo, as well as the data tables.</p> <ol> <li> <p>Create databases, data tables, and import data in MatrixOne:</p> <pre><code>CREATE DATABASE test;\nUSE test;\nCREATE TABLE `person` (`id` INT DEFAULT NULL, `name` VARCHAR(255) DEFAULT NULL, `birthday` DATE DEFAULT NULL);\nINSERT INTO test.person (id, name, birthday) VALUES(1, 'zhangsan', '2023-07-09'),(2, 'lisi', '2023-07-08'),(3, 'wangwu', '2023-07-12');\n</code></pre> </li> <li> <p>Create a <code>MoRead.java</code> class in IDEA to read MatrixOne data using Spark:</p> <pre><code>package com.matrixone.spark;\n\nimport org.apache.spark.sql.Dataset;\nimport org.apache.spark.sql.Row;\nimport org.apache.spark.sql.SQLContext;\nimport org.apache.spark.sql.SparkSession;\n\nimport java.util.Properties;\n\n/**\n * @auther MatrixOne\n * @desc \u8bfb\u53d6 MatrixOne \u6570\u636e\n */\npublic class MoRead {\n\n// parameters\nprivate static String master = \"local[2]\";\nprivate static String appName = \"mo_spark_demo\";\n\nprivate static String srcHost = \"xx.xx.xx.xx\";\nprivate static Integer srcPort = 6001;\nprivate static String srcUserName = \"root\";\nprivate static String srcPassword = \"111\";\nprivate static String srcDataBase = \"test\";\nprivate static String srcTable = \"person\";\n\npublic static void main(String[] args) {\nSparkSession sparkSession = SparkSession.builder().appName(appName).master(master).getOrCreate();\nSQLContext sqlContext = new SQLContext(sparkSession);\nProperties properties = new Properties();\nproperties.put(\"user\", srcUserName);\nproperties.put(\"password\", srcPassword);\nDataset&lt;Row&gt; dataset = sqlContext.read()\n.jdbc(\"jdbc:mysql://\" + srcHost + \":\" + srcPort + \"/\" + srcDataBase,srcTable, properties);\ndataset.show();\n}\n\n} </code></pre> </li> <li> <p>Run <code>MoRead.Main()</code> in IDEA with the following result:</p> <p></p> </li> </ol>"},{"location":"MatrixOne/Develop/Ecological-Tools/Computing-Engine/Spark/spark-mysql-matrixone/#step-three-write-mysql-data-to-matrixone","title":"Step Three: Write MySQL Data to MatrixOne","text":"<p>You can now start migrating MySQL data to MatrixOne using Spark.</p> <ol> <li> <p>Prepare MySQL data: On node3, connect to your local Mysql using the Mysql client, create the required database, data table, and insert the data:</p> <pre><code>mysql -h127.0.0.1 -P3306 -uroot -proot\nmysql&gt; CREATE DATABASE motest;\nmysql&gt; USE motest;\nmysql&gt; CREATE TABLE `person` (`id` int DEFAULT NULL, `name` varchar(255) DEFAULT NULL, `birthday` date DEFAULT NULL);\nmysql&gt; INSERT INTO motest.person (id, name, birthday) VALUES(2, 'lisi', '2023-07-09'),(3, 'wangwu', '2023-07-13'),(4, 'zhaoliu', '2023-08-08');\n</code></pre> </li> <li> <p>Empty MatrixOne table data:</p> <p>On node3, connect to the local MatrixOne using a MySQL client. Since this example continues to use the <code>test</code> database from the example that read the MatrixOne data earlier, we need to first empty the data from the <code>person</code> table.</p> <pre><code>-- On node3, connect to MatrixOne on node1 using the Mysql client\nmysql -hxx.xx.xx.xx -P6001 -uroot -p111\nmysql&gt; TRUNCATE TABLE test.person;\n</code></pre> </li> <li> <p>Write code in IDEA:</p> <p>Create <code>Person.java</code> and <code>Mysql2Mo.java</code> classes to read MySQL data using Spark. The <code>Mysql2Mo.java</code> class code can be referenced in the following example:</p> </li> </ol> <pre><code>package com.matrixone.spark;\n\nimport org.apache.spark.api.java.function.MapFunction;\nimport org.apache.spark.sql.*;\n\nimport java.sql.SQLException;\nimport java.util.Properties;\n\n/**\n * @auther MatrixOne\n * @desc\n */\npublic class Mysql2Mo {\n\n// parameters\nprivate static String master = \"local[2]\";\nprivate static String appName = \"app_spark_demo\";\n\nprivate static String srcHost = \"127.0.0.1\";\nprivate static Integer srcPort = 3306;\nprivate static String srcUserName = \"root\";\nprivate static String srcPassword = \"root\";\nprivate static String srcDataBase = \"motest\";\nprivate static String srcTable = \"person\";\n\nprivate static String destHost = \"xx.xx.xx.xx\";\nprivate static Integer destPort = 6001;\nprivate static String destUserName = \"root\";\nprivate static String destPassword = \"111\";\nprivate static String destDataBase = \"test\";\nprivate static String destTable = \"person\";\n\n\npublic static void main(String[] args) throws SQLException {\nSparkSession sparkSession = SparkSession.builder().appName(appName).master(master).getOrCreate();\nSQLContext sqlContext = new SQLContext(sparkSession);\nProperties connectionProperties = new Properties();\nconnectionProperties.put(\"user\", srcUserName);\nconnectionProperties.put(\"password\", srcPassword);\nconnectionProperties.put(\"driver\",\"com.mysql.cj.jdbc.Driver\");\n\n//jdbc.url=jdbc:mysql://127.0.0.1:3306/database\nString url = \"jdbc:mysql://\" + srcHost + \":\" + srcPort + \"/\" + srcDataBase + \"?characterEncoding=utf-8&amp;autoReconnect=true&amp;zeroDateTimeBehavior=convertToNull&amp;useSSL=false&amp;serverTimezone=Asia/Shanghai\";\n\n//SparkJdbc to read table contents\nSystem.out.println(\"Read table contents of person in database\");\n// Read all data in the table\nDataset&lt;Row&gt; rowDataset = sqlContext.read().jdbc(url,srcTable,connectionProperties).select(\"*\");\n// Show data\n//rowDataset.show();\n// Filter data with id &gt; 2 and add spark_ prefix to name field\nDataset&lt;Row&gt; dataset = rowDataset.filter(\"id &gt; 2\")\n.map((MapFunction&lt;Row, Row&gt;) row -&gt; RowFactory.create(row.getInt(0), \"spark_\" + row.getString(1), row.getDate(2)), RowEncoder.apply(rowDataset.schema()));\n// Show data\n//dataset.show();\nProperties properties = new Properties();\nproperties.put(\"user\", destUserName);\nproperties.put(\"password\", destPassword);;\ndataset.write()\n.mode(SaveMode.Append)\n.jdbc(\"jdbc:mysql://\" + destHost + \":\" + destPort + \"/\" + destDataBase,destTable, properties);\n}\n\n} </code></pre> <p>In the above code, a simple ETL operation (filtering data with id &gt; 2 and adding the prefix \"spark_\" to the name field) is performed and the processed data is written to the MatrixOne database.</p>"},{"location":"MatrixOne/Develop/Ecological-Tools/Computing-Engine/Spark/spark-mysql-matrixone/#step-four-view-implementation-results","title":"Step Four: View Implementation Results","text":"<p>Execute the following SQL in MatrixOne to view the execution results:</p> <pre><code>select * from test.person;\n+------+---------------+------------+\n| id   | name          | birthday   |\n+------+---------------+------------+\n|    3 | spark_wangwu  | 2023-07-12 |\n|    4 | spark_zhaoliu | 2023-08-07 |\n+------+---------------+------------+\n2 rows in set (0.01 sec)\n</code></pre>"},{"location":"MatrixOne/Develop/Ecological-Tools/Computing-Engine/Spark/spark-overview/","title":"Overview","text":"<p>Apache Spark is a distributed computing engine designed to efficiently handle large-scale data. It uses distributed parallel computing to spread the tasks of data splitting,computing and merging over multiple computers,thus realizing efficient data processing and analysis.</p>"},{"location":"MatrixOne/Develop/Ecological-Tools/Computing-Engine/Spark/spark-overview/#application-scenarios","title":"Application scenarios","text":"<ul> <li> <p>Large-scale data processing and analysis</p> <p>Spark is capable of handling huge amounts of data, increasing processing efficiency through parallel computing tasks. It is widely used in data processing and analysis in finance, telecommunications, medical and other fields.</p> </li> <li> <p>stream data processing</p> <p>Spark Streaming allows real-time processing of data streams into batch data for analysis and storage. This is useful in real-time data analysis scenarios such as online advertising, network security, etc.</p> </li> <li> <p>Machine learning</p> <p>Spark provides a machine learning library (MLlib) that supports multiple machine learning algorithms and model training for machine learning applications such as recommendation systems, image recognition, and more.</p> </li> <li> <p>Figure calculation</p> <p>Spark's Graph Calculation Library (GraphX) supports multiple graph calculation algorithms for graph analysis scenarios such as social network analysis, recommendation systems, and more.</p> </li> </ul>"},{"location":"MatrixOne/Develop/Ecological-Tools/Etl/DataX/datax-clickhouse-matrixone/","title":"Write ClickHouse data to MatrixOne using DataX","text":"<p>This article describes how to write ClickHouse data offline to a MatrixOne database using the DataX tool.</p>"},{"location":"MatrixOne/Develop/Ecological-Tools/Etl/DataX/datax-clickhouse-matrixone/#prepare-before-you-start","title":"Prepare before you start","text":"<p>Before you can start writing data to MatrixOne using DataX, you need to complete the installation of the following software:</p> <ul> <li>Finished installing and starting MatrixOne.</li> <li>Install JDK 8+ version.</li> <li>Install Python 3.8 (or plus).</li> <li>Download the DataX installation package and unzip it.</li> <li>Completed ClickHouse installation deployment</li> <li>Download matrixonewriter.zip and extract it to the <code>plugin/writer/</code> directory in the root of your DataX project.</li> <li>Install the MySQL Client.</li> </ul>"},{"location":"MatrixOne/Develop/Ecological-Tools/Etl/DataX/datax-clickhouse-matrixone/#steps","title":"Steps","text":""},{"location":"MatrixOne/Develop/Ecological-Tools/Etl/DataX/datax-clickhouse-matrixone/#log-in-to-the-clickhouse-database-to-create-test-data","title":"Log in to the clickhouse database to create test data","text":"<pre><code>create database source_ck_database;\nuse source_ck_database; create table if not exists student(\n`id` Int64 COMMENT '\u5b66\u751f id', `name` String COMMENT '\u5b66\u751f\u59d3\u540d',\n`birthday` String COMMENT '\u5b66\u751f\u51fa\u751f\u65e5\u671f',\n`class` Int64 COMMENT '\u5b66\u751f\u73ed\u7ea7\u7f16\u53f7',\n`grade` Int64 COMMENT '\u5b66\u751f\u5e74\u7ea7\u7f16\u53f7',\n`score` decimal(18,0) COMMENT '\u5b66\u751f\u6210\u7ee9'\n) engine = MergeTree order by id;\n</code></pre>"},{"location":"MatrixOne/Develop/Ecological-Tools/Etl/DataX/datax-clickhouse-matrixone/#importing-data-using-datax","title":"Importing data using datax","text":""},{"location":"MatrixOne/Develop/Ecological-Tools/Etl/DataX/datax-clickhouse-matrixone/#using-clickhousereader","title":"Using clickhousereader","text":"<p>Note: Datax cannot synchronize table structures, so you need to create the table MatrixOne build statement in MatrixOne in advance:</p> <pre><code>CREATE TABLE  datax_db.`datax_ckreader_ck_student` (\n`id` bigint(20) NULL COMMENT \"\",\n`name` varchar(100) NULL COMMENT \"\",\n`birthday` varchar(100) NULL COMMENT \"\",\n`class` bigint(20) NULL COMMENT \"\",\n`grade` bigint(20) NULL COMMENT \"\",\n`score` decimal(18, 0) NULL COMMENT \"\"\n); CREATE TABLE  datax_db.`datax_rdbmsreader_ck_student` (\n`id` bigint(20) NULL COMMENT \"\",\n`name` varchar(100) NULL COMMENT \"\",\n`birthday` varchar(100) NULL COMMENT \"\",\n`class` bigint(20) NULL COMMENT \"\",\n`grade` bigint(20) NULL COMMENT \"\",\n`score` decimal(18, 0) NULL COMMENT \"\"\n); </code></pre> <p>Upload clikchousereader to the $DATAX_HOME/plugin/reader directory Unzip the installation package:</p> <pre><code>[root@root ~]$ unzip clickhousereader.zip </code></pre> <p>Move the archive to the /opt/ directory:</p> <pre><code>[root@root ~] mv clickhousereader.zip /opt/\n ```\n\nWriting a task json file\n\n```bash\n[root@root ~] vim $DATAX_HOME/job/ck2sr.json </code></pre> <pre><code>{\n\"job\": {\n\"setting\": {\n\"speed\": {\n\"channel\": \"1\"\n}\n},\n\"content\": [\n{\n\"reader\": {\n\"name\": \"clickhousereader\",\n\"parameter\": {\n\"username\": \"default\",\n\"password\": \"123456\",\n\"column\": [\n\"*\"\n],\n\"splitPK\": \"id\",\n\"connection\": [\n{\n\"table\": [\n\"student\"\n],\n\"jdbcUrl\": [\n\"jdbc:clickhouse://xx.xx.xx.xx:8123/source_ck_database\"\n]\n}\n]\n}\n},\n\"writer\": {\n\"name\": \"matrixonewriter\",\n\"parameter\": {\n\"column\": [\n\"*\"\n],\n\"connection\": [\n{\n\"jdbcUrl\": \"jdbc:mysql://xx.xx.xx.xx:6001/datax_db\",\n\"table\": [\n\"datax_ckreader_ck_student\"\n]\n}\n],\n\"password\": \"111\",\n\"username\": \"root\",\n\"writeMode\": \"insert\"\n}\n}\n}\n]\n}\n} </code></pre> <p>Perform import tasks</p> <pre><code>[root@root ~] cd $DATAX_HOME/bin [root@root ~] ./python datax.py ../jobs/ck2sr.json </code></pre>"},{"location":"MatrixOne/Develop/Ecological-Tools/Etl/DataX/datax-clickhouse-matrixone/#importing-with-rdbmsreader","title":"Importing with Rdbmsreader","text":"<p>Upload the ClickHouse JDBC driver to the $DATAX_HOME/plugin/reader/rdbmsreader/libs/ directory</p> <p>Modify the configuration file</p> <pre><code>[root@root ~] vim $DATAX_HOME/plugin/reader/rdbmsreader/plugin.json\n</code></pre> <pre><code>{\n\"name\": \"rdbmsreader\",\n\"class\": \"com.alibaba.datax.plugin.reader.rdbmsreader.RdbmsReader\",\n\"description\": \"useScene: prod. mechanism: Jdbc connection using the database, execute select sql, retrieve data from the ResultSet. warn: The more you know about the database, the less problems you encounter.\",\n\"developer\": \"alibaba\",\n\"drivers\":[\"dm.jdbc.driver.DmDriver\", \"com.sybase.jdbc3.jdbc.SybDriver\", \"com.edb.Driver\", \"org.apache.hive.jdbc.HiveDriver\",\"com.clickhouse.jdbc.ClickHouseDriver\"]\n}\n</code></pre> <p>Writing a json task file</p> <pre><code>[root@root ~]  vim $DATAX_HOME/job/ckrdbms2sr.json\n</code></pre> <pre><code>{\n\"job\": {\n\"setting\": {\n\"speed\": {\n\"byte\": 1048576\n}\n},\n\"content\": [\n{\n\"reader\": {\n\"name\": \"rdbmsreader\",\n\"parameter\": {\n\"username\": \"default\",\n\"password\": \"123456\",\n\"column\": [\n\"*\"\n],\n\"splitPK\": \"id\",\n\"connection\": [\n{\n\"table\": [\n\"student\"\n],\n\"jdbcUrl\": [\n\"jdbc:clickhouse://xx.xx.xx.xx:8123/source_ck_database\"\n]\n}\n]\n}\n},\n\"writer\": {\n\"name\": \"matrixonewriter\",\n\"parameter\": {\n\"column\": [\n\"*\"\n],\n\"connection\": [\n{\n\"jdbcUrl\": \"jdbc:mysql://xx.xx.xx.xx:6001/datax_db\",\n\"table\": [\n\"datax_rdbmsreader_ck_student\"\n]\n}\n],\n\"password\": \"111\",\n\"username\": \"root\",\n\"writeMode\": \"insert\"\n}\n}\n}\n]\n}\n}\n</code></pre> <p>Perform the import task</p> <pre><code>[root@root ~] cd $DATAX_HOME/bin [root@root ~] ./python datax.py ../jobs/ckrdbms2sr.json\n</code></pre>"},{"location":"MatrixOne/Develop/Ecological-Tools/Etl/DataX/datax-doris-matrixone/","title":"Write Doris data to MatrixOne using DataX","text":"<p>This article describes how to write Doris data offline to a MatrixOne database using the DataX tool.</p>"},{"location":"MatrixOne/Develop/Ecological-Tools/Etl/DataX/datax-doris-matrixone/#prepare-before-you-start","title":"Prepare before you start","text":"<p>Before you can start writing data to MatrixOne using DataX, you need to complete the installation of the following software:</p> <ul> <li>Finished installing and starting MatrixOne.</li> <li>Install JDK 8+ version.</li> <li>Install Python 3.8 (or plus).</li> <li>Download the DataX installation package and unzip it.</li> <li>Download and install Doris.</li> <li>Download matrixonewriter.zip and extract it to the <code>plugin/writer/</code> directory in the root of your DataX project.</li> <li>Install the MySQL Client.</li> </ul>"},{"location":"MatrixOne/Develop/Ecological-Tools/Etl/DataX/datax-doris-matrixone/#steps","title":"Steps","text":""},{"location":"MatrixOne/Develop/Ecological-Tools/Etl/DataX/datax-doris-matrixone/#creating-test-data-in-doris","title":"Creating Test Data in Doris","text":"<pre><code>create database test;\n\nuse test;\n\nCREATE TABLE IF NOT EXISTS example_tbl\n(\nuser_id BIGINT NOT NULL COMMENT \"\u7528\u6237id\",\ndate DATE NOT NULL COMMENT \"\u6570\u636e\u704c\u5165\u65e5\u671f\u65f6\u95f4\",\ncity VARCHAR(20) COMMENT \"\u7528\u6237\u6240\u5728\u57ce\u5e02\",\nage SMALLINT COMMENT \"\u7528\u6237\u5e74\u9f84\",\nsex TINYINT COMMENT \"\u7528\u6237\u6027\u522b\"\n)\nDUPLICATE KEY(user_id, date)\nDISTRIBUTED BY HASH(user_id) BUCKETS 1\nPROPERTIES (\n\"replication_num\"=\"1\"\n);\n\ninsert into example_tbl values\n(10000,'2017-10-01','\u5317\u4eac',20,0),\n(10000,'2017-10-01','\u5317\u4eac',20,0),\n(10001,'2017-10-01','\u5317\u4eac',30,1),\n(10002,'2017-10-02','\u4e0a\u6d77',20,1),\n(10003,'2017-10-02','\u5e7f\u5dde',32,0),\n(10004,'2017-10-01','\u6df1\u5733',35,0),\n(10004,'2017-10-03','\u6df1\u5733',35,0);\n</code></pre>"},{"location":"MatrixOne/Develop/Ecological-Tools/Etl/DataX/datax-doris-matrixone/#creating-a-target-library-table-in-matrixone","title":"Creating a Target Library Table in MatrixOne","text":"<pre><code>create database sparkdemo;\nuse sparkdemo;\n\nCREATE TABLE IF NOT EXISTS example_tbl\n(\nuser_id BIGINT NOT NULL COMMENT \"\u7528\u6237id\",\ndate DATE NOT NULL COMMENT \"\u6570\u636e\u704c\u5165\u65e5\u671f\u65f6\u95f4\",\ncity VARCHAR(20) COMMENT \"\u7528\u6237\u6240\u5728\u57ce\u5e02\",\nage SMALLINT COMMENT \"\u7528\u6237\u5e74\u9f84\",\nsex TINYINT COMMENT \"\u7528\u6237\u6027\u522b\"\n);\n</code></pre>"},{"location":"MatrixOne/Develop/Ecological-Tools/Etl/DataX/datax-doris-matrixone/#edit-the-json-template-file-for-datax","title":"Edit the json template file for datax","text":"<p>Go to the datax/job path and fill in the following at doris2mo.json</p> <pre><code>{\n\"job\": {\n\"setting\": {\n\"speed\": {\n\"channel\": 8\n}\n},\n\"content\": [\n{\n\"reader\": {\n\"name\": \"mysqlreader\",\n\"parameter\": {\n\"username\": \"root\",\n\"password\": \"root\",\n\"splitPk\": \"user_id\",\n\"column\": [\n'*'\n],\n\"connection\": [\n{\n\"table\": [\n\"example_tbl\"\n],\n\"jdbcUrl\": [\n\"jdbc:mysql://xx.xx.xx.xx:9030/test\"\n]\n}\n],\n\"fetchSize\": 1024\n}\n},\n\"writer\": {\n\"name\": \"matrixonewriter\",\n\"parameter\": {\n\"writeMode\": \"insert\",\n\"username\": \"root\",\n\"password\": \"111\",\n\"column\": [\n'*'\n],\n\"connection\": [\n{\n\"jdbcUrl\": \"jdbc:mysql://xx.xx.xx.xx:6001/sparkdemo\",\n\"table\": [\n\"example_tbl\"\n]\n}\n]\n}\n}\n}\n]\n}\n}\n</code></pre>"},{"location":"MatrixOne/Develop/Ecological-Tools/Etl/DataX/datax-doris-matrixone/#start-the-datax-job","title":"Start the datax job","text":"<pre><code>python bin/datax.py job/doris2mo.json </code></pre> <p>The following results are displayed:</p> <pre><code>2024-04-28 15:47:38.222 [job-0] INFO  JobContainer -\n\u4efb\u52a1\u542f\u52a8\u65f6\u523b                    : 2024-04-28 15:47:26\n\u4efb\u52a1\u7ed3\u675f\u65f6\u523b                    : 2024-04-28 15:47:38\n\u4efb\u52a1\u603b\u8ba1\u8017\u65f6                    :                 11s\n\u4efb\u52a1\u5e73\u5747\u6d41\u91cf                    :               12B/s\n\u8bb0\u5f55\u5199\u5165\u901f\u5ea6                    :              0rec/s\n\u8bfb\u51fa\u8bb0\u5f55\u603b\u6570                    :                   7\n\u8bfb\u5199\u5931\u8d25\u603b\u6570                    :                   0\n</code></pre>"},{"location":"MatrixOne/Develop/Ecological-Tools/Etl/DataX/datax-elasticsearch-matrixone/","title":"Write ElasticSearch data to MatrixOne using DataX","text":"<p>This article describes how to write ElasticSearch data offline to a MatrixOne database using the DataX tool.</p>"},{"location":"MatrixOne/Develop/Ecological-Tools/Etl/DataX/datax-elasticsearch-matrixone/#prepare-before-you-start","title":"Prepare before you start","text":"<p>Before you can start writing data to MatrixOne using DataX, you need to complete the installation of the following software:</p> <ul> <li>Finished installing and starting MatrixOne.</li> <li>Install JDK 8+ version.</li> <li>Install Python 3.8 (or plus).</li> <li>Download the DataX installation package and unzip it.</li> <li>Download and install ElasticSearch.</li> <li>Download matrixonewriter.zip and extract it to the <code>plugin/writer/</code> directory in the root of your DataX project.</li> <li>Download elasticsearchreader.zip and extract it to the datax/plugin/reader directory.</li> <li>Install the MySQL Client.</li> </ul>"},{"location":"MatrixOne/Develop/Ecological-Tools/Etl/DataX/datax-elasticsearch-matrixone/#steps","title":"Steps","text":""},{"location":"MatrixOne/Develop/Ecological-Tools/Etl/DataX/datax-elasticsearch-matrixone/#import-data-into-elasticsearch","title":"Import data into ElasticSearch","text":""},{"location":"MatrixOne/Develop/Ecological-Tools/Etl/DataX/datax-elasticsearch-matrixone/#create-index","title":"Create Index","text":"<p>Create an index with the name person (username and password in ElasticSearch after the -u parameter below, which can be modified or deleted as needed for local testing):</p> <pre><code>curl -X PUT \"&lt;http://127.0.0.1:9200/person&gt;\" -u elastic:elastic\n</code></pre> <p>Output the following message to indicate successful creation:</p> <pre><code>{\"acknowledged\":true,\"shards_acknowledged\":true,\"index\":\"person\"} </code></pre>"},{"location":"MatrixOne/Develop/Ecological-Tools/Etl/DataX/datax-elasticsearch-matrixone/#add-a-field-to-the-index-person","title":"Add a field to the index person","text":"<pre><code>curl -X PUT \"127.0.0.1:9200/person/_mapping\" -H 'Content-Type: application/json' -u elastic:elastic -d'{  \"properties\": {    \"id\": { \"type\": \"integer\" },    \"name\": { \"type\": \"text\" },    \"birthday\": {\"type\": \"date\"}  }}'\n</code></pre> <p>Output the following message to indicate successful setup:</p> <pre><code>{\"acknowledged\":true} </code></pre>"},{"location":"MatrixOne/Develop/Ecological-Tools/Etl/DataX/datax-elasticsearch-matrixone/#adding-data-to-an-elasticsearch-index","title":"Adding data to an ElasticSearch index","text":"<p>Add three pieces of data via the curl command:</p> <pre><code>curl -X POST '127.0.0.1:9200/person/_bulk' -H 'Content-Type: application/json' -u elastic:elastic -d '{\"index\":{\"_index\":\"person\",\"_type\":\"_doc\",\"_id\":1}}{\"id\": 1,\"name\": \"MatrixOne\",\"birthday\": \"1992-08-08\"}{\"index\":{\"_index\":\"person\",\"_type\":\"_doc\",\"_id\":2}}{\"id\": 2,\"name\": \"MO\",\"birthday\": \"1993-08-08\"}{\"index\":{\"_index\":\"person\",\"_type\":\"_doc\",\"_id\":3}}{\"id\": 3,\"name\": \"\u58a8\u58a8\",\"birthday\": \"1994-08-08\"}\n</code></pre> <p>Output the following message to indicate successful execution:</p> <pre><code>{\"took\":5,\"errors\":false,\"items\":[{\"index\":{\"_index\":\"person\",\"_type\":\"_doc\",\"_id\":\"1\",\"_version\":1,\"result\":\"created\",\"_shards\":{\"total\":2,\"successful\":1,\"failed\":0},\"_seq_no\":0,\"_primary_term\":1,\"status\":201}},{\"index\":{\"_index\":\"person\",\"_type\":\"_doc\",\"_id\":\"2\",\"_version\":1,\"result\":\"created\",\"_shards\":{\"total\":2,\"successful\":1,\"failed\":0},\"_seq_no\":1,\"_primary_term\":1,\"status\":201}},{\"index\":{\"_index\":\"person\",\"_type\":\"_doc\",\"_id\":\"3\",\"_version\":1,\"result\":\"created\",\"_shards\":{\"total\":2,\"successful\":1,\"failed\":0},\"_seq_no\":2,\"_primary_term\":1,\"status\":201}}]}\n</code></pre>"},{"location":"MatrixOne/Develop/Ecological-Tools/Etl/DataX/datax-elasticsearch-matrixone/#building-tables-in-matrixone","title":"Building tables in MatrixOne","text":"<pre><code>create database mo;\nCREATE TABLE mo.`person` (\n`id` INT DEFAULT NULL,\n`name` VARCHAR(255) DEFAULT NULL,\n`birthday` DATE DEFAULT NULL\n);\n</code></pre>"},{"location":"MatrixOne/Develop/Ecological-Tools/Etl/DataX/datax-elasticsearch-matrixone/#writing-migration-files","title":"Writing Migration Files","text":"<p>Go to the datax/job path and write the job file <code>es2mo.json</code>:</p> <pre><code>{\n\"job\":{\n\"setting\":{\n\"speed\":{\n\"channel\":1\n},\n\"errorLimit\":{\n\"record\":0,\n\"percentage\":0.02\n}\n},\n\"content\":[\n{\n\"reader\":{\n\"name\":\"elasticsearchreader\",\n\"parameter\":{\n\"endpoint\":\"http://127.0.0.1:9200\",\n\"accessId\":\"elastic\",\n\"accessKey\":\"elastic\",\n\"index\":\"person\",\n\"type\":\"_doc\",\n\"headers\":{\n\n},\n\"scroll\":\"3m\",\n\"search\":[\n{\n\"query\":{\n\"match_all\":{\n\n}\n}\n}\n],\n\"table\":{\n\"filter\":\"\",\n\"nameCase\":\"UPPERCASE\",\n\"column\":[\n{\n\"name\":\"id\",\n\"type\":\"integer\"\n},\n{\n\"name\":\"name\",\n\"type\":\"text\"\n},\n{\n\"name\":\"birthday\",\n\"type\":\"date\"\n}\n]\n}\n}\n},\n\"writer\":{\n\"name\":\"matrixonewriter\",\n\"parameter\":{\n\"username\":\"root\",\n\"password\":\"111\",\n\"column\":[\n\"id\",\n\"name\",\n\"birthday\"\n],\n\"connection\":[\n{\n\"table\":[\n\"person\"\n],\n\"jdbcUrl\":\"jdbc:mysql://127.0.0.1:6001/mo\"\n}\n]\n}\n}\n}\n]\n}\n}\n</code></pre>"},{"location":"MatrixOne/Develop/Ecological-Tools/Etl/DataX/datax-elasticsearch-matrixone/#perform-migration-tasks","title":"Perform migration tasks","text":"<p>Enter the datax installation directory and execute the following command to start the migration job:</p> <pre><code>cd datax \npython bin/datax.py job/es2mo.json </code></pre> <p>After the job is executed, the output is as follows:</p> <pre><code>2023-11-28 15:55:45.642 [job-0] INFO  StandAloneJobContainerCommunicator - Total 3 records, 67 bytes | Speed 6B/s, 0 records/s | Error 0 records, 0 bytes |  All Task WaitWriterTime 0.000s |  All Task WaitReaderTime 0.456s | Percentage 100.00%2023-11-28 15:55:45.644 [job-0] INFO  JobContainer - \n\u4efb\u52a1\u542f\u52a8\u65f6\u523b                    : 2023-11-28 15:55:31\n\u4efb\u52a1\u7ed3\u675f\u65f6\u523b                    : 2023-11-28 15:55:45\n\u4efb\u52a1\u603b\u8ba1\u8017\u65f6                    :                 14s\n\u4efb\u52a1\u5e73\u5747\u6d41\u91cf                    :                6B/s\n\u8bb0\u5f55\u5199\u5165\u901f\u5ea6                    :              0rec/s\n\u8bfb\u51fa\u8bb0\u5f55\u603b\u6570                    :                   3\n\u8bfb\u5199\u5931\u8d25\u603b\u6570                    :                   0\n</code></pre>"},{"location":"MatrixOne/Develop/Ecological-Tools/Etl/DataX/datax-elasticsearch-matrixone/#view-post-migration-data-in-matrixone","title":"View post-migration data in MatrixOne","text":"<p>View the results in the target table in the MatrixOne database to confirm that the migration is complete:</p> <pre><code>mysql&gt; select * from mo.person;\n+------+-----------+------------+\n| id   | name      | birthday   |\n+------+-----------+------------+\n|    1 | MatrixOne | 1992-08-08 |\n|    2 | MO        | 1993-08-08 |\n|    3 | \u58a8\u58a8      | 1994-08-08 |\n+------+-----------+------------+\n3 rows in set (0.00 sec)\n</code></pre>"},{"location":"MatrixOne/Develop/Ecological-Tools/Etl/DataX/datax-influxdb-matrixone/","title":"Write InfluxDB data to MatrixOne using DataX","text":"<p>This article describes how to write InfluxDB data offline to a MatrixOne database using the DataX tool.</p>"},{"location":"MatrixOne/Develop/Ecological-Tools/Etl/DataX/datax-influxdb-matrixone/#prepare-before-you-start","title":"Prepare before you start","text":"<p>Before you can start writing data to MatrixOne using DataX, you need to complete the installation of the following software:</p> <ul> <li>Finished installing and starting MatrixOne.</li> <li>Install JDK 8+ version.</li> <li>Install Python 3.8 (or plus).</li> <li>Download the DataX installation package and unzip it.</li> <li>Download and install InfluxDB.</li> <li>Download matrixonewriter.zip and extract it to the <code>plugin/writer/</code> directory in the root of your DataX project.</li> <li>Download influxdbreader to the datax/plugin/reader path.</li> <li>Install the MySQL Client.</li> </ul>"},{"location":"MatrixOne/Develop/Ecological-Tools/Etl/DataX/datax-influxdb-matrixone/#steps","title":"Steps","text":""},{"location":"MatrixOne/Develop/Ecological-Tools/Etl/DataX/datax-influxdb-matrixone/#creating-test-data-in-influxdb","title":"Creating test data in influxdb","text":"<p>Log in with your default account</p> <pre><code>influx -host 'localhost' -port '8086'\n</code></pre> <pre><code>--Creating and using databases\ncreate database testDb;\nuse testDb;\n--insert data\ninsert air_condition_outdoor,home_id=0000000000000,sensor_id=0000000000034 temperature=0.0000000000000000,humidity=80.0000000000000000,battery_voltage=3.2000000000000002 1514764800000000000\ninsert air_condition_outdoor,home_id=0000000000001,sensor_id=0000000000093 temperature=0.0000000000000000,humidity=80.0000000000000000,battery_voltage=3.2000000000000002 1514764800000000000\ninsert air_condition_outdoor,home_id=0000000000003,sensor_id=0000000000197 temperature=0.0000000000000000,humidity=80.0000000000000000,battery_voltage=3.2000000000000002 1514764800000000000\ninsert air_condition_outdoor,home_id=0000000000003,sensor_id=0000000000198 temperature=0.0000000000000000,humidity=80.0000000000000000,battery_voltage=3.2000000000000002 1514764800000000000\ninsert air_condition_outdoor,home_id=0000000000003,sensor_id=0000000000199 temperature=0.0000000000000000,humidity=80.0000000000000000,battery_voltage=3.2000000000000002 1514764800000000000\ninsert air_condition_outdoor,home_id=0000000000003,sensor_id=0000000000200 temperature=0.0000000000000000,humidity=80.0000000000000000,battery_voltage=3.2000000000000002 1514764800000000000\ninsert air_condition_outdoor,home_id=0000000000003,sensor_id=0000000000201 temperature=0.0000000000000000,humidity=80.0000000000000000,battery_voltage=3.2000000000000002 1514764800000000000\ninsert air_condition_outdoor,home_id=0000000000003,sensor_id=0000000000202 temperature=0.0000000000000000,humidity=80.0000000000000000,battery_voltage=3.2000000000000002 1514764800000000000\ninsert air_condition_outdoor,home_id=0000000000003,sensor_id=0000000000203 temperature=0.0000000000000000,humidity=80.0000000000000000,battery_voltage=3.2000000000000002 1514764800000000000\ninsert air_condition_outdoor,home_id=0000000000003,sensor_id=0000000000204 temperature=0.0000000000000000,humidity=80.0000000000000000,battery_voltage=3.2000000000000002 1514764800000000000\n</code></pre>"},{"location":"MatrixOne/Develop/Ecological-Tools/Etl/DataX/datax-influxdb-matrixone/#create-a-test-account","title":"Create a test account","text":"<pre><code>create user \"test\" with password '123456' with all privileges;\ngrant all privileges on testDb to test;\nshow grants for test;\n</code></pre>"},{"location":"MatrixOne/Develop/Ecological-Tools/Etl/DataX/datax-influxdb-matrixone/#turn-on-database-authentication","title":"Turn on database authentication","text":"<pre><code>vim /etc/influxdb/influxdb.conf </code></pre>"},{"location":"MatrixOne/Develop/Ecological-Tools/Etl/DataX/datax-influxdb-matrixone/#restart-influxdb","title":"Restart influxdb","text":"<pre><code>systemctl restart influxdb </code></pre>"},{"location":"MatrixOne/Develop/Ecological-Tools/Etl/DataX/datax-influxdb-matrixone/#test-authentication-login","title":"Test Authentication Login","text":"<pre><code>influx -host 'localhost' -port '8086' -username 'test' -password '123456' </code></pre>"},{"location":"MatrixOne/Develop/Ecological-Tools/Etl/DataX/datax-influxdb-matrixone/#creating-a-target-table-in-matrixone","title":"Creating a Target Table in MatrixOne","text":"<pre><code>mysql&gt; create database test;\nmysql&gt; use test;\nmysql&gt; create  table air_condition_outdoor(\ntime  datetime,\nbattery_voltage float,\nhome_id  char(15),\nhumidity int,\nsensor_id   char(15),\ntemperature  int\n);\n</code></pre>"},{"location":"MatrixOne/Develop/Ecological-Tools/Etl/DataX/datax-influxdb-matrixone/#edit-the-json-template-file-for-datax","title":"Edit the json template file for datax","text":"<p>Go to the datax/job path and fill in the following at influxdb2mo.json</p> <pre><code>{\n\"job\": {\n\"setting\": {\n\"speed\": {\n\"channel\": 1\n}\n},\n\"content\": [\n{\n\"reader\": {\n\"name\": \"influxdbreader\",\n\"parameter\": {\n\"dbType\": \"InfluxDB\",\n\"address\": \"http://xx.xx.xx.xx:8086\",\n\"username\": \"test\",\n\"password\": \"123456\",\n\"database\": \"testDb\",\n\"querySql\": \"select * from air_condition_outdoor limit 20\",\n}\n},\n\"writer\": {\n\"name\": \"matrixonewriter\",\n\"parameter\": {\n\"username\": \"root\",\n\"password\": \"111\",\n\"writeMode\": \"insert\",\n\"connection\": [\n{\n\"jdbcUrl\": \"jdbc:mysql://xx.xx.xx.xx:6001/test\",\n\"table\": [\"air_condition_outdoor\"]\n}\n],\n\"column\": [\"*\"],\n}\n}\n}\n]\n}\n}\n</code></pre>"},{"location":"MatrixOne/Develop/Ecological-Tools/Etl/DataX/datax-influxdb-matrixone/#start-the-datax-job","title":"Start the datax job","text":"<p>Seeing results similar to the following indicates successful import</p> <pre><code>#python bin/datax.py job/influxdb2mo.json\n2024-04-28 13:51:19.665 [job-0] INFO  JobContainer -\n\u4efb\u52a1\u542f\u52a8\u65f6\u523b                    : 2024-04-28 13:51:08\n\u4efb\u52a1\u7ed3\u675f\u65f6\u523b                    : 2024-04-28 13:51:19\n\u4efb\u52a1\u603b\u8ba1\u8017\u65f6                    :                 10s\n\u4efb\u52a1\u5e73\u5747\u6d41\u91cf                    :                2B/s\n\u8bb0\u5f55\u5199\u5165\u901f\u5ea6                    :               0rec/s\n\u8bfb\u51fa\u8bb0\u5f55\u603b\u6570                    :                  20\n\u8bfb\u5199\u5931\u8d25\u603b\u6570                    :                   0\n</code></pre>"},{"location":"MatrixOne/Develop/Ecological-Tools/Etl/DataX/datax-mongodb-matrixone/","title":"Write MongoDB data to MatrixOne using DataX","text":"<p>This article describes how to write MongoDB data offline to a MatrixOne database using the DataX tool.</p>"},{"location":"MatrixOne/Develop/Ecological-Tools/Etl/DataX/datax-mongodb-matrixone/#prepare-before-you-start","title":"Prepare before you start","text":"<p>Before you can start writing data to MatrixOne using DataX, you need to complete the installation of the following software:</p> <ul> <li>Finished installing and starting MatrixOne.</li> <li>Install JDK 8+ version.</li> <li>Install Python 3.8 (or plus).</li> <li>Download the DataX installation package and unzip it.</li> <li>Download and install MongoDB.</li> <li>Download matrixonewriter.zip and extract it to the <code>plugin/writer/</code> directory in the root of your DataX project.</li> <li>Install the MySQL Client.</li> </ul>"},{"location":"MatrixOne/Develop/Ecological-Tools/Etl/DataX/datax-mongodb-matrixone/#steps","title":"Steps","text":""},{"location":"MatrixOne/Develop/Ecological-Tools/Etl/DataX/datax-mongodb-matrixone/#creating-mongodb-test-data","title":"Creating MongoDB Test Data","text":"<p>Create database test or test if test does not exist</p> <pre><code>&gt;create database test;\n&gt;use test\n#Viewing the current database\n&gt;db\ntest\n#Create collection db.createCollection(\"collection name\")\n&gt;db. createCollection('test')\n#Insert document data db.collection name.insert(document content)\n&gt;db.test. insert({\"name\" : \" aaa \", \"age\" : 20})\n&gt;db.test. insert({\"name\" : \" bbb \", \"age\" : 18})\n&gt;db.test. insert({\"name\" : \" ccc \", \"age\" : 28})\n#View Data\n&gt;db.test.find()\n{ \"_id\" : ObjectId(\"6347e3c6229d6017c82bf03d\"), \"name\" : \"aaa\", \"age\" : 20 }\n{ \"_id\" : ObjectId(\"6347e64a229d6017c82bf03e\"), \"name\" : \"bbb\", \"age\" : 18 }\n{ \"_id\" : ObjectId(\"6347e652229d6017c82bf03f\"), \"name\" : \"ccc\", \"age\" : 28 }\n</code></pre>"},{"location":"MatrixOne/Develop/Ecological-Tools/Etl/DataX/datax-mongodb-matrixone/#creating-a-target-table-in-matrixone","title":"Creating a Target Table in MatrixOne","text":"<pre><code>mysql&gt; create database test;\nmysql&gt; use test;\nmysql&gt; CREATE TABLE `mongodbtest` (\n`name` varchar(30) NOT NULL COMMENT \"\",\n`age` int(11) NOT NULL COMMENT \"\"\n);\n</code></pre>"},{"location":"MatrixOne/Develop/Ecological-Tools/Etl/DataX/datax-mongodb-matrixone/#edit-the-json-template-file-for-datax","title":"Edit the json template file for datax","text":"<p>Go to the datax/job path, create a new file <code>mongo2matrixone.json</code> and fill in the following:</p> <pre><code>{\n\"job\": {\n\"setting\": {\n\"speed\": {\n\"channel\": 1\n}\n},\n\"content\": [\n{\n\"reader\": {\n\"name\": \"mongodbreader\",\n\"parameter\": {\n\"address\": [\n\"xx.xx.xx.xx:27017\"\n],\n\"userName\": \"root\",\n\"userPassword\": \"\",\n\"dbName\": \"test\",\n\"collectionName\": \"test\",\n\"column\": [\n{\n\"name\": \"name\",\n\"type\": \"string\"\n},\n{\n\"name\": \"age\",\n\"type\": \"int\"\n}\n]\n}\n},\n\"writer\": {\n\"name\": \"matrixonewriter\",\n\"parameter\": {\n\"username\": \"root\",\n\"password\": \"111\",\n\"column\": [\"*\"],\n\"connection\": [\n{\n\"table\": [\"mongodbtest\"],\n\"jdbcUrl\": \"jdbc:mysql://127.0.0.1:6001/test\"\n}\n]\n}\n}\n}\n]\n}\n}\n</code></pre>"},{"location":"MatrixOne/Develop/Ecological-Tools/Etl/DataX/datax-mongodb-matrixone/#start-the-datax-job","title":"Start the datax job","text":"<pre><code>python bin/datax.py job/mongo2matrixone.json\n2024-04-28 13:51:19.665 [job-0] INFO  JobContainer -\n\u4efb\u52a1\u542f\u52a8\u65f6\u523b                    : 2024-04-28 13:51:08\n\u4efb\u52a1\u7ed3\u675f\u65f6\u523b                    : 2024-04-28 13:51:19\n\u4efb\u52a1\u603b\u8ba1\u8017\u65f6                    :                 10s\n\u4efb\u52a1\u5e73\u5747\u6d41\u91cf                    :                2B/s\n\u8bb0\u5f55\u5199\u5165\u901f\u5ea6                    :              0rec/s\n\u8bfb\u51fa\u8bb0\u5f55\u603b\u6570                    :                   3\n\u8bfb\u5199\u5931\u8d25\u603b\u6570                    :                   0\n</code></pre>"},{"location":"MatrixOne/Develop/Ecological-Tools/Etl/DataX/datax-mysql-matrixone/","title":"Writing MySQL data to MatrixOne using DataX","text":"<p>This article describes how to write MySQL data offline to a MatrixOne database using the DataX tool.</p>"},{"location":"MatrixOne/Develop/Ecological-Tools/Etl/DataX/datax-mysql-matrixone/#prepare-before-you-start","title":"Prepare before you start","text":"<p>Before you can start writing data to MatrixOne using DataX, you need to complete the installation of the following software:</p> <ul> <li>Complete standalone MatrixOne deployment.</li> <li>Install JDK 8+ version.</li> <li>Install Python 3.8 (or plus).</li> <li>Download the DataX installation package and unzip it.</li> <li>Download matrixonewriter.zip and extract it to the <code>plugin/writer/</code> directory in the root of your DataX project.</li> <li>Download and install MySQL.</li> </ul>"},{"location":"MatrixOne/Develop/Ecological-Tools/Etl/DataX/datax-mysql-matrixone/#steps","title":"Steps","text":""},{"location":"MatrixOne/Develop/Ecological-Tools/Etl/DataX/datax-mysql-matrixone/#create-table-and-insert-data-in-mysql","title":"Create table and insert data in mysql","text":"<pre><code>CREATE TABLE `mysql_datax` (\n`id` bigint(20) NOT NULL,\n`name` varchar(100) DEFAULT NULL,\n`salary` decimal(10,0) DEFAULT NULL,\n`age` int(11) DEFAULT NULL,\n`entrytime` date DEFAULT NULL,\n`gender` char(1) DEFAULT NULL,\nPRIMARY KEY (`id`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n\n--Insert sample data\ninsert into mysql_datax valus\n(1,\"lisa\",15660,30,'2022-10-12',0),\n(2,\"tom\",15060,24,'2021-11-10',1),\n(3,\"jenny\",15000,28,'2024-02-19',0),\n(4,\"henry\",12660,24,'2022-04-22',1);\n</code></pre>"},{"location":"MatrixOne/Develop/Ecological-Tools/Etl/DataX/datax-mysql-matrixone/#create-target-library-table-in-matrixone","title":"Create target library table in Matrixone","text":"<p>Since DataX can only synchronize data, not table structure, we need to manually create the table in the target database (Matrixone) before we can perform the task.</p> <pre><code>CREATE TABLE `mysql_datax` (\n`id` bigint(20) NOT NULL,\n`name` varchar(100) DEFAULT NULL,\n`salary` decimal(10,0) DEFAULT NULL,\n`age` int(11) DEFAULT NULL,\n`entrytime` date DEFAULT NULL,\n`gender` char(1) DEFAULT NULL,\nPRIMARY KEY (`id`)\n);\n</code></pre>"},{"location":"MatrixOne/Develop/Ecological-Tools/Etl/DataX/datax-mysql-matrixone/#creating-a-job-profile","title":"Creating a Job Profile","text":"<p>The task configuration file in DataX is in json format and the built-in task configuration template can be viewed by the following command:</p> <pre><code>python datax.py -r mysqlreader -w matrixonewriter\n</code></pre> <p>Go to the datax/job path and, according to the template, write the job file <code>mysql2mo.json</code>:</p> <pre><code>{\n\"job\": {\n\"content\": [\n{\n\"reader\": {\n\"name\": \"mysqlreader\",\n\"parameter\": {\n\"column\": [\"*\"],\n\"connection\": [\n{\n\"jdbcUrl\": [\"jdbc:mysql://xx.xx.xx.xx:3306/test\"],\n\"table\": [\"mysql_datax\"]\n}\n],\n\"password\": \"root\",\n\"username\": \"root\",\n\"where\": \"\"\n}\n},\n\"writer\": {\n\"name\": \"matrixonewriter\",\n\"parameter\": {\n\"column\": [\"*\"],\n\"connection\": [\n{\n\"jdbcUrl\": \"jdbc:mysql://xx.xx.xx.xx:6001/test\",\n\"table\": [\"mysql_datax\"]\n}\n],\n\"password\": \"111\",\n\"preSql\": [],\n\"session\": [],\n\"username\": \"root\",\n\"writeMode\": \"insert\"  --\u76ee\u524d\u4ec5\u652f\u6301replace,update \u6216 insert \u65b9\u5f0f\n}\n}\n}\n],\n\"setting\": {\n\"speed\": {\n\"channel\": \"1\"\n}\n}\n}\n}\n</code></pre>"},{"location":"MatrixOne/Develop/Ecological-Tools/Etl/DataX/datax-mysql-matrixone/#start-the-datax-job","title":"Start the datax job","text":"<pre><code>python /opt/module/datax/bin/datax.py /opt/module/datax/job/mysql2mo.json\n</code></pre>"},{"location":"MatrixOne/Develop/Ecological-Tools/Etl/DataX/datax-mysql-matrixone/#view-data-in-a-matrixone-table","title":"View data in a MatrixOne table","text":"<pre><code>mysql&gt; select * from mysql_datax;\n+------+-------+--------+------+------------+--------+\n| id   | name  | salary | age  | entrytime  | gender |\n+------+-------+--------+------+------------+--------+\n|    1 | lisa  |  15660 |   30 | 2022-10-12 | 0      |\n|    2 | tom   |  15060 |   24 | 2021-11-10 | 1      |\n|    3 | jenny |  15000 |   28 | 2024-02-19 | 0      |\n|    4 | henry |  12660 |   24 | 2022-04-22 | 1      |\n+------+-------+--------+------+------------+--------+\n4 rows in set (0.00 sec)\n</code></pre>"},{"location":"MatrixOne/Develop/Ecological-Tools/Etl/DataX/datax-oracle-matrixone/","title":"Write data to MatrixOne using DataX","text":"<p>This article describes how to write Oracle data offline to a MatrixOne database using the DataX tool.</p>"},{"location":"MatrixOne/Develop/Ecological-Tools/Etl/DataX/datax-oracle-matrixone/#prepare-before-you-start","title":"Prepare before you start","text":"<p>Before you can start writing data to MatrixOne using DataX, you need to complete the installation of the following software:</p> <ul> <li>Complete standalone MatrixOne deployment.</li> <li>Install JDK 8+ version.</li> <li>Install Python 3.8 (or plus).</li> <li>Download the DataX installation package and unzip it.</li> <li>Download matrixonewriter.zip and extract it to the <code>plugin/writer/</code> directory in the root of your DataX project.</li> <li>Install Oracle 19c.</li> <li>Install the MySQL Client.</li> </ul>"},{"location":"MatrixOne/Develop/Ecological-Tools/Etl/DataX/datax-oracle-matrixone/#operational-steps","title":"Operational steps","text":""},{"location":"MatrixOne/Develop/Ecological-Tools/Etl/DataX/datax-oracle-matrixone/#scott-users-using-oracle","title":"scott users using Oracle","text":"<p>This time you are using the user scott in Oracle to create the table (or other users, of course), and in Oracle 19c the scott user needs to be created manually and can be unlocked by command using the sqlplus tool.</p> <pre><code>sqlplus / as sysdba\ncreate user scott identified by tiger;\ngrant dba to scott;\n</code></pre> <p>This can then be accessed via the scott user login:</p> <pre><code>sqlplus scott/tiger\n</code></pre>"},{"location":"MatrixOne/Develop/Ecological-Tools/Etl/DataX/datax-oracle-matrixone/#creating-oracle-test-data","title":"Creating Oracle Test Data","text":"<p>To create the employees_oracle table in Oracle:</p> <pre><code>create table employees_oracle(\nid number(5),\nname varchar(20)\n);\n--Insert sample data:\ninsert into employees_oracle values(1,'zhangsan');\ninsert into employees_oracle values(2,'lisi');\ninsert into employees_oracle values(3,'wangwu');\ninsert into employees_oracle values(4,'oracle');\n-- In sqlplus, transactions are not committed by default without exiting, so you need to commit the transaction manually after inserting the data (or perform the insertion with a tool such as DBeaver)\nCOMMIT;\n</code></pre>"},{"location":"MatrixOne/Develop/Ecological-Tools/Etl/DataX/datax-oracle-matrixone/#creating-a-matrixone-test-sheet","title":"Creating a MatrixOne Test Sheet","text":"<p>Since DataX can only synchronize data, not table structure, we need to manually create the table in the target database (MatrixOne) before we can perform the task.</p> <pre><code>CREATE TABLE `oracle_datax` (\n`id` bigint(20) NOT NULL,\n`name` varchar(100) DEFAULT NULL,\nPRIMARY KEY (`id`)\n) ;\n</code></pre>"},{"location":"MatrixOne/Develop/Ecological-Tools/Etl/DataX/datax-oracle-matrixone/#creating-a-job-profile","title":"Creating a Job Profile","text":"<p>The task configuration file in DataX is in json format and the built-in task configuration template can be viewed by the following command:</p> <pre><code>python datax.py -r oraclereader -w matrixonewriter\n</code></pre> <p>Go to the datax/job path and write the job file oracle2mo.json according to the template</p> <pre><code>{\n\"job\": {\n\"setting\": {\n\"speed\": {\n\"channel\": 8\n}\n},\n\"content\": [\n{\n\"reader\": {\n\"name\": \"oraclereader\",\n\"parameter\": {\n\"username\": \"scott\",\n\"password\": \"tiger\",\n\"column\": [\n'*'\n],\n\"connection\": [\n{\n\"table\": [\n\"employees_oracle\"\n],\n\"jdbcUrl\": [\n\"jdbc:oracle:thin:@xx.xx.xx.xx:1521:ORCLCDB\"\n]\n}\n]\n}\n},\n\"writer\": {\n\"name\": \"matrixonewriter\",\n\"parameter\": {\n\"writeMode\": \"insert\",\n\"username\": \"root\",\n\"password\": \"111\",\n\"column\": [\n'*'\n],\n\"connection\": [\n{\n\"jdbcUrl\": \"jdbc:mysql://xx.xx.xx.xx:6001/test\",\n\"table\": [\n\"oracle_datax\"\n]\n}\n]\n}\n}\n}\n]\n}\n}\n</code></pre>"},{"location":"MatrixOne/Develop/Ecological-Tools/Etl/DataX/datax-oracle-matrixone/#starting-a-datax-job","title":"Starting a datax job","text":"<pre><code>python /opt/module/datax/bin/datax.py /opt/module/datax/job/oracle2mo.json\n</code></pre>"},{"location":"MatrixOne/Develop/Ecological-Tools/Etl/DataX/datax-oracle-matrixone/#viewing-data-in-matrixone-tables","title":"Viewing Data in MatrixOne Tables","text":"<pre><code>mysql&gt; select * from oracle_datax;\n+------+----------+\n| id   | name     |\n+------+----------+\n|    1 | zhangsan |\n|    2 | lisi     |\n|    3 | wangwu   |\n|    4 | oracle   |\n+------+----------+\n4 rows in set (0.00 sec)\n</code></pre>"},{"location":"MatrixOne/Develop/Ecological-Tools/Etl/DataX/datax-overview/","title":"Write data to MatrixOne using DataX","text":""},{"location":"MatrixOne/Develop/Ecological-Tools/Etl/DataX/datax-overview/#overview","title":"Overview","text":"<p>DataX is an Ali open source offline synchronization tool for heterogeneous data sources that provides stable and efficient data synchronization for efficient data synchronization between heterogeneous data sources.</p> <p>DataX divides synchronization of different data sources into two main components: Reader and Writer. The DataX framework theoretically supports data synchronization efforts for any data source type.</p> <p>MatrixOne is highly compatible with MySQL 8.0, but since DataX's included MySQL Writer plug-in adapts to the JDBC driver of MySQL 5.1, the community has separately revamped the MySQL 8.0-driven MatrixOneWriter plug-in to improve compatibility. The MatrixOneWriter plugin implements the ability to write data to the MatrixOne database target table. In the underlying implementation, the MatrixOneWriter connects to a remote MatrixOne database via JDBC and executes the corresponding <code>insert into ...</code> SQL statement to write data to MatrixOne, while supporting bulk commits.</p> <p>MatrixOneWriter leverages the DataX framework to get the generated protocol data from Reader and generates the appropriate <code>insert into...</code> statement based on the <code>writeMode</code> you configured. When a primary key or unique index conflict is encountered, conflicting rows are excluded and writes continue. For performance optimization reasons, we took the <code>PreparedStatement + Batch</code> approach and set the <code>rewriteBatchedStatements=true</code> option to buffer the data into the thread context's buffer. A write request is triggered only when the amount of data in the buffer reaches a predetermined threshold.</p> <p></p> <p>Note</p> <p>You need to have at least <code>insert into ...</code> permissions to execute the entire task. Whether you need additional permissions depends on your <code>preSql</code> and <code>postSql</code> in the task configuration.</p> <p>MatrixOneWriter is primarily intended for ETL development engineers who use MatrixOneWriter to import data from a data warehouse into MatrixOne. At the same time, MatrixOneWriter can also serve users such as DBAs as a data migration tool.</p>"},{"location":"MatrixOne/Develop/Ecological-Tools/Etl/DataX/datax-postgresql-matrixone/","title":"Write data to MatrixOne using DataX","text":"<p>This article describes how to write PostgreSQL data offline to a MatrixOne database using the DataX tool.</p>"},{"location":"MatrixOne/Develop/Ecological-Tools/Etl/DataX/datax-postgresql-matrixone/#prepare-before-you-start","title":"Prepare before you start","text":"<p>Before you can start writing data to MatrixOne using DataX, you need to complete the installation of the following software:</p> <ul> <li>Complete standalone MatrixOne deployment.</li> <li>Install JDK 8+ version.</li> <li>Install Python 3.8 (or plus).</li> <li>Download the DataX installation package and unzip it.</li> <li>Download matrixonewriter.zip and extract it to the <code>plugin/writer/</code> directory in the root of your DataX project.</li> <li>Install PostgreSQL.</li> <li>Install the MySQL Client.</li> </ul>"},{"location":"MatrixOne/Develop/Ecological-Tools/Etl/DataX/datax-postgresql-matrixone/#operational-steps","title":"Operational steps","text":""},{"location":"MatrixOne/Develop/Ecological-Tools/Etl/DataX/datax-postgresql-matrixone/#creating-test-data-in-postgresql","title":"Creating test data in postgresql","text":"<pre><code>create table  public.student\n(\nstu_id      integer not null unique,\nstu_name    varchar(50),\nstu_age     integer,\nstu_bth     date,\nstu_tel     varchar(20),\nstu_address varchar(100)\n);\n\ninsert into public.student (stu_id, stu_name, stu_age, stu_bth, stu_tel, stu_address)\nvalues  (1, '89', 37, '2020-04-08', '13774736413', '8c5ab4290b7b503a616428aa018810f7'),\n(2, '32', 99, '2021-03-29', '15144066883', '6362da2f9dec9f4ed4b9cb746d614f8b'),\n(3, '19', 47, '2022-08-12', '18467326153', '3872f24472ac73f756093e7035469519'),\n(4, '64', 52, '2020-05-23', '17420017216', '70ae7aa670faeb46552aad7a1e9c0962'),\n(5, '4', 92, '2021-07-26', '17176145462', 'e1a98b2e907d0c485278b9f4ccc8b2e2'),\n(6, '64', 32, '2021-02-15', '17781344827', '46ee127c3093d94626ba6ef8cd0692ba'),\n(7, '3', 81, '2021-05-30', '18884764747', '0d1933c53c9a4346d3f6c858dca790fd'),\n(8, '20', 53, '2022-05-09', '18270755716', '0b58cad62f9ecded847a3c5528bfeb32'),\n(9, '35', 80, '2022-02-06', '15947563604', 'a31547f9dc4e47ce78cee591072286a5'),\n(10, '2', 4, '2021-12-27', '17125567735', '527f56f97b043e07f841a71a77fb65e1'),\n(11, '93', 99, '2020-09-21', '17227442051', '6cd20735456bf7fc0de181f219df1f05'),\n(12, '85', 92, '2021-06-18', '17552708612', 'ec0f8ea9c8c9a1ffba168b71381c844a'),\n(13, '4', 85, '2022-06-23', '18600681601', 'f12086a2ac3c78524273b62387142dbb'),\n(14, '57', 62, '2022-09-05', '15445191147', '8e4a867c3fdda49da4094f0928ff6d9c'),\n(15, '60', 14, '2020-01-13', '15341861644', 'cb2dea86155dfbe899459679548d5c4d'),\n(16, '38', 4, '2021-06-24', '17881144821', 'f8013e50862a69cb6b008559565bd8a9'),\n(17, '38', 48, '2022-01-10', '17779696343', 'c3a6b5fbeb4859c0ffc0797e36f1fd83'),\n(18, '22', 26, '2020-10-15', '13391701987', '395782c95547d269e252091715aa5c88'),\n(19, '73', 15, '2022-05-29', '13759716790', '808ef7710cdc6175d23b0a73543470d9'),\n(20, '42', 41, '2020-10-17', '18172716366', 'ba1f364fb884e8c4a50b0fde920a1ae8'),\n(21, '56', 83, '2020-03-07', '15513537478', '870ad362c8c7590a71886243fcafd0d0'),\n(22, '55', 66, '2021-10-29', '17344805585', '31691a27ae3e848194c07ef1d58e54e8'),\n(23, '90', 36, '2020-10-04', '15687526785', '8f8b8026eda6058d08dc74b382e0bd4d'),\n(24, '16', 35, '2020-02-02', '17162730436', '3d16fcff6ef498fd405390f5829be16f'),\n(25, '71', 99, '2020-06-25', '17669694580', '0998093bfa7a4ec2f7e118cd90c7bf27'),\n(26, '25', 81, '2022-01-30', '15443178508', '5457d230659f7355e2171561a8eaad1f'),\n(27, '84', 9, '2020-03-04', '17068873272', '17757d8bf2d3b2fa34d70bb063c44c4a'),\n(28, '78', 15, '2020-05-29', '17284471816', 'a8e671065639ac5ca655a88ee2d3818f'),\n(29, '50', 34, '2022-05-20', '18317827143', '0851e6701cadb06352ee780a27669b3b'),\n(30, '90', 20, '2022-02-02', '15262333350', 'f22142e561721084763533c61ff6af36'),\n(31, '7', 30, '2021-04-21', '17225107071', '276c949aec2059caafefb2dee1a5eb11'),\n(32, '80', 15, '2022-05-11', '15627026685', '2e2bcaedc089af94472cb6190003c207'),\n(33, '79', 17, '2020-01-16', '17042154756', 'ebf9433c31a13a92f937d5e45c71fc1b'),\n(34, '93', 30, '2021-05-01', '17686515037', 'b7f94776c0ccb835cc9dc652f9f2ae3f'),\n(35, '32', 46, '2020-06-15', '15143715218', '1aa0ce5454f6cfeff32037a277e1cbbb'),\n(36, '21', 41, '2020-07-07', '13573552861', '1cfabf362081bea99ce05d3564442a6a'),\n(37, '38', 87, '2022-01-27', '17474570881', '579e80b0a04bfe379f6657fad9abe051'),\n(38, '95', 61, '2022-07-12', '13559275228', 'e3036ce9936e482dc48834dfd4efbc42'),\n(39, '77', 55, '2021-01-27', '15592080796', '088ef31273124964d62f815a6ccebb33'),\n(40, '24', 51, '2020-12-28', '17146346717', '6cc3197ab62ae06ba673a102c1c4f28e'),\n(41, '48', 93, '2022-05-12', '15030604962', '3295c7b1c22587d076e02ed310805027'),\n(42, '64', 57, '2022-02-07', '17130181503', 'e8b134c2af77f5c273c60d723554f5a8'),\n(43, '97', 2, '2021-01-05', '17496292202', 'fbfbdf19d463020dbde0378d50daf715'),\n(44, '10', 92, '2021-08-17', '15112084250', '2c9b3419ff84ba43d7285be362221824'),\n(45, '99', 55, '2020-09-26', '17148657962', 'e46e3c6af186e95ff354ad08683984bc'),\n(46, '24', 27, '2020-10-09', '17456279238', '397d0eff64bfb47c8211a3723e873b9a'),\n(47, '80', 40, '2020-02-09', '15881886181', 'ef2c50d70a12dfb034c43d61e38ddd9f'),\n(48, '80', 65, '2021-06-17', '15159743156', 'c6f826d3f22c63c89c2dc1c226172e56'),\n(49, '92', 73, '2022-01-16', '18614514771', '657af9e596c2dc8b6eb8a1cda4630a5d'),\n(50, '46', 1, '2022-04-10', '17347722479', '603b4bb6d8c94aa47064b79557347597');\n</code></pre>"},{"location":"MatrixOne/Develop/Ecological-Tools/Etl/DataX/datax-postgresql-matrixone/#creating-a-target-table-in-matrixone","title":"Creating a Target Table in MatrixOne","text":"<pre><code>CREATE TABLE `student` (\n`stu_id` int(11) NOT NULL COMMENT \"\",\n`stu_name` varchar(50) NULL COMMENT \"\",\n`stu_age` int(11) NULL COMMENT \"\",\n`stu_bth` date NULL COMMENT \"\",\n`stu_tel` varchar(11) NULL COMMENT \"\",\n`stu_address` varchar(100) NULL COMMENT \"\",\nprimary key(stu_id)\n);\n</code></pre>"},{"location":"MatrixOne/Develop/Ecological-Tools/Etl/DataX/datax-postgresql-matrixone/#creating-a-job-profile","title":"Creating a Job Profile","text":"<p>Go to the datax/job path, create the file <code>pgsql2matrixone.json</code> and enter the following:</p> <pre><code>{\n\"job\": {\n\"setting\": {\n\"speed\": {\n\"channel\": 3,\n\"byte\": 1048576\n},\n\"errorLimit\": {\n\"record\": 0,\n\"percentage\": 0.02\n}\n},\n\"content\": [\n{\n\"reader\": {\n\"name\": \"postgresqlreader\",\n\"parameter\": {\n\"connection\": [\n{\n\"jdbcUrl\": [\n\"jdbc:postgresql://xx.xx.xx.xx:5432/postgres\"\n],\n\"table\": [\n\"public.student\"\n],\n\n}\n],\n\"password\": \"123456\",\n\"username\": \"postgres\",\n\"column\": [\n\"stu_id\",\n\"stu_name\",\n\"stu_age\",\n\"stu_bth\",\n\"stu_tel\",\n\"stu_address\"\n]\n}\n},\n\"writer\": {\n\"name\": \"matrixonewriter\",\n\"parameter\": {\n\"column\": [\n\"stu_id\",\n\"stu_name\",\n\"stu_age\",\n\"stu_bth\",\n\"stu_tel\",\n\"stu_address\"\n],\n\"connection\": [\n{\n\"jdbcUrl\": \"jdbc:mysql://xx.xx.xx.xx:6001/postgre\",\n\"table\": [\n\"student\"\n]\n}\n],\n\"username\": \"root\",\n\"password\": \"111\",\n\"writeMode\": \"insert\"\n}\n}\n}\n]\n}\n}\n</code></pre> <p>If Error \"The most likely cause of the error for this task, as intelligently analyzed by DataX, is: com.alibaba.datax.common.exception.DataXException: Code: [Framework-03], Description: The DataX engine is misconfigured, a problem usually caused by a DataX installation error, please contact your operations to resolve it. - The bps value for a single channel cannot be empty or non-positive when there is a total bps speed limit\", then you need to add it in json</p> <pre><code>\"core\": {\n\"transport\": {\n\"channel\": {\n\"class\": \"com.alibaba.datax.core.transport.channel.memory.MemoryChannel\",\n\"speed\": {\n\"byte\": 2000000,\n\"record\": -1\n}\n}\n}\n}\n</code></pre>"},{"location":"MatrixOne/Develop/Ecological-Tools/Etl/DataX/datax-postgresql-matrixone/#start-the-datax-job","title":"Start the datax job","text":"<pre><code>python ./bin/datax.py ./job/pgsql2mo.json #in the datax directory\n</code></pre> <p>When the task is complete, print the overall operation:</p>"},{"location":"MatrixOne/Develop/Ecological-Tools/Etl/DataX/datax-postgresql-matrixone/#view-data-in-a-matrixone-table","title":"View data in a MatrixOne table","text":""},{"location":"MatrixOne/Develop/Ecological-Tools/Etl/DataX/datax-sqlserver-matrixone/","title":"Write data to MatrixOne using DataX","text":"<p>This article describes how to write SQL Server data offline to a MatrixOne database using the DataX tool.</p>"},{"location":"MatrixOne/Develop/Ecological-Tools/Etl/DataX/datax-sqlserver-matrixone/#prepare-before-you-start","title":"Prepare before you start","text":"<p>Before you can start writing data to MatrixOne using DataX, you need to complete the installation of the following software:</p> <ul> <li>Complete standalone MatrixOne deployment.</li> <li>Install JDK 8+ version.</li> <li>Install Python 3.8 (or plus).</li> <li>Download the DataX installation package and unzip it.</li> <li>Download matrixonewriter.zip and extract it to the <code>plugin/writer/</code> directory in the root of your DataX project.</li> <li>Completed SQL Server 2022.</li> <li>Install the MySQL Client.</li> </ul>"},{"location":"MatrixOne/Develop/Ecological-Tools/Etl/DataX/datax-sqlserver-matrixone/#operational-steps","title":"Operational steps","text":""},{"location":"MatrixOne/Develop/Ecological-Tools/Etl/DataX/datax-sqlserver-matrixone/#create-sql-server-test-data","title":"Create sql server test data","text":"<pre><code>CREATE TABLE test.dbo.test2 (\nid int NULL,\nage int NULL,\nname varchar(50) null\n);\n\nINSERT INTO test.dbo.test2\n(id, age, name)\nVALUES(1, 1, N'shdfhg '),\n(4, 4, N' dhdhdf '),\n(2, 2, N' ndgnh '),\n(3, 3, N' dgh '),\n(5, 5, N' dfghnd '),\n(6, 6, N' dete ');\n</code></pre>"},{"location":"MatrixOne/Develop/Ecological-Tools/Etl/DataX/datax-sqlserver-matrixone/#creating-a-target-table-in-matrixone","title":"Creating a Target Table in MatrixOne","text":"<p>Since DataX can only synchronize data, not table structure, we need to manually create the table in the target database (MatrixOne) before we can perform the task.</p> <pre><code>CREATE TABLE test.test_2 (\nid int not NULL,\nage int NULL,\nname varchar(50) null\n);\n</code></pre>"},{"location":"MatrixOne/Develop/Ecological-Tools/Etl/DataX/datax-sqlserver-matrixone/#creating-a-job-profile","title":"Creating a Job Profile","text":"<p>The task configuration file in DataX is in json format and the built-in task configuration template can be viewed by the following command:</p> <pre><code>python datax.py -r sqlserverreader -w matrixonewriter </code></pre> <p>Go to the datax/job path and, according to the template, write the job file <code>sqlserver2mo.json</code>:</p> <pre><code>{\n\"job\": {\n\"content\": [\n{\n\"reader\": {\n\"name\": \"sqlserverreader\",\n\"parameter\": {\n\"column\": [\"id\",\"age\",\"name\"],\n\"connection\": [\n{\n\"jdbcUrl\": [\"jdbc:sqlserver://xx.xx.xx.xx:1433;databaseName=test\"],\n\"table\": [\"dbo.test2\"]\n}\n],\n\"password\": \"123456\",\n\"username\": \"sa\"\n}\n},\n\"writer\": {\n\"name\": \"matrixonewriter\",\n\"parameter\": {\n\"column\": [\"id\",\"age\",\"name\"],\n\"connection\": [\n{\n\"jdbcUrl\": \"jdbc:mysql://xx.xx.xx:6001/test\",\n\"table\": [\"test_2\"]\n}\n],\n\"password\": \"111\",\n\"username\": \"root\",\n\"writeMode\": \"insert\"\n}\n}\n}\n],\n\"setting\": {\n\"speed\": {\n\"channel\": \"1\"\n}\n}\n}\n}\n</code></pre>"},{"location":"MatrixOne/Develop/Ecological-Tools/Etl/DataX/datax-sqlserver-matrixone/#starting-a-datax-job","title":"Starting a datax job","text":"<pre><code>python  datax.py  sqlserver2mo.json\n</code></pre>"},{"location":"MatrixOne/Develop/Ecological-Tools/Etl/DataX/datax-sqlserver-matrixone/#viewing-data-in-the-mo-table","title":"Viewing data in the mo table","text":"<pre><code>select * from test_2;\n</code></pre>"},{"location":"MatrixOne/Develop/Ecological-Tools/Etl/DataX/datax-tidb-matrixone/","title":"Write data to MatrixOne using DataX","text":"<p>This article describes how to write TiDB data offline to a MatrixOne database using the DataX tool.</p>"},{"location":"MatrixOne/Develop/Ecological-Tools/Etl/DataX/datax-tidb-matrixone/#prepare-before-you-start","title":"Prepare before you start","text":"<p>Before you can start writing data to MatrixOne using DataX, you need to complete the installation of the following software:</p> <ul> <li>Complete standalone MatrixOne deployment.</li> <li>Install JDK 8+ version.</li> <li>Install Python 3.8 (or plus).</li> <li>Download the DataX installation package and unzip it.</li> <li>Download matrixonewriter.zip and extract it to the <code>plugin/writer/</code> directory in the root of your DataX project.</li> <li>TiDB standalone deployment completed.</li> <li>Install the MySQL Client.</li> </ul>"},{"location":"MatrixOne/Develop/Ecological-Tools/Etl/DataX/datax-tidb-matrixone/#operational-steps","title":"Operational steps","text":""},{"location":"MatrixOne/Develop/Ecological-Tools/Etl/DataX/datax-tidb-matrixone/#creating-test-data-in-tidb","title":"Creating Test Data in TiDB","text":"<pre><code>CREATE TABLE `tidb_dx` (\n`id` bigint(20) NOT NULL,\n`name` varchar(100) DEFAULT NULL,\n`salary` decimal(10,0) DEFAULT NULL,\n`age` int(11) DEFAULT NULL,\n`entrytime` date DEFAULT NULL,\n`gender` char(1) DEFAULT NULL,\nPRIMARY KEY (`id`)\n);\n\ninsert into testdx2tidb values\n(1,\"lisa\",15660,30,'2022-10-12',0),\n(2,\"tom\",15060,24,'2021-11-10',1),\n(3,\"jenny\",15000,28,'2024-02-19',0),\n(4,\"henry\",12660,24,'2022-04-22',1);\n</code></pre>"},{"location":"MatrixOne/Develop/Ecological-Tools/Etl/DataX/datax-tidb-matrixone/#creating-a-target-table-in-matrixone","title":"Creating a Target Table in MatrixOne","text":"<p>Since DataX can only synchronize data, not table structure, we need to manually create the table in the target database (MatrixOne) before we can perform the task.</p> <pre><code>CREATE TABLE `testdx2tidb` (\n`id` bigint(20) NOT NULL COMMENT \"\",\n`name` varchar(100) NULL COMMENT \"\",\n`salary` decimal(10, 0) NULL COMMENT \"\",\n`age` int(11) NULL COMMENT \"\",\n`entrytime` date NULL COMMENT \"\",\n`gender` varchar(1) NULL COMMENT \"\",\nPRIMARY KEY (`id`)\n);\n</code></pre>"},{"location":"MatrixOne/Develop/Ecological-Tools/Etl/DataX/datax-tidb-matrixone/#configure-the-json-file","title":"Configure the json file","text":"<p>tidb can be read directly using mysqlreader. in the job directory of datax. Edit the configuration file <code>tidb2mo.json</code>:</p> <pre><code>{\n\"job\": {\n\"setting\": {\n\"speed\": {\n\"channel\": 1\n},\n\"errorLimit\": {\n\"record\": 0,\n\"percentage\": 0\n}\n},\n\"content\": [\n{\n\"reader\": {\n\"name\": \"mysqlreader\",\n\"parameter\": {\n\"username\": \"root\",\n\"password\": \"root\",\n\"column\": [ \"*\" ],\n\"splitPk\": \"id\",\n\"connection\": [\n{\n\"table\": [ \"tidb_dx\" ],\n\"jdbcUrl\": [\n\"jdbc:mysql://xx.xx.xx.xx:4000/test\"\n]\n}\n]\n}\n},\n\"writer\": {\n\"name\": \"matrixonewriter\",\n\"parameter\": {\n\"column\": [\"*\"],\n\"connection\": [\n{\n\"jdbcUrl\": \"jdbc:mysql://xx.xx.xx.xx:6001/test\",\n\"table\": [\"testdx2tidb\"]\n}\n],\n\"password\": \"111\",\n\"username\": \"root\",\n\"writeMode\": \"insert\"\n}\n}\n}\n]\n}\n}\n</code></pre>"},{"location":"MatrixOne/Develop/Ecological-Tools/Etl/DataX/datax-tidb-matrixone/#carrying-out-tasks","title":"Carrying out tasks","text":"<pre><code>python bin/datax.py job/tidb2mo.json </code></pre>"},{"location":"MatrixOne/Develop/Ecological-Tools/Etl/DataX/datax-tidb-matrixone/#view-target-table-data-in-matrixone","title":"View target table data in MatrixOne","text":"<pre><code>mysql&gt; select * from testdx2tidb;\n+------+-------+--------+------+------------+--------+\n| id   | name  | salary | age  | entrytime  | gender |\n+------+-------+--------+------+------------+--------+\n|    1 | lisa  |  15660 |   30 | 2022-10-12 | 0      |\n|    2 | tom   |  15060 |   24 | 2021-11-10 | 1      |\n|    3 | jenny |  15000 |   28 | 2024-02-19 | 0      |\n|    4 | henry |  12660 |   24 | 2022-04-22 | 1      |\n+------+-------+--------+------+------------+--------+\n4 rows in set (0.01 sec)\n</code></pre> <p>Data import succeeded.</p>"},{"location":"MatrixOne/Develop/Ecological-Tools/Etl/Seatunnel/seatunnel-mysql-matrixone/","title":"Writing MySQL data to MatrixOne using SeaTunnel","text":"<p>This chapter describes how to write MySQL data to MatrixOne using SeaTunnel.</p>"},{"location":"MatrixOne/Develop/Ecological-Tools/Etl/Seatunnel/seatunnel-mysql-matrixone/#prepare-before-you-start","title":"Prepare before you start","text":"<ul> <li> <p>Finished installing and starting MatrixOne.</p> </li> <li> <p>Finished installing SeaTunnel Version 2.3.3. Once installed, the installation path for SeaTunnel can be defined from the shell command line:</p> </li> </ul> <pre><code>export SEATNUNNEL_HOME=\"/root/seatunnel\" </code></pre> <ul> <li> <p>Download and install MySQL.</p> </li> <li> <p>Download mysql-connector-java-8.0.33.jar and copy the file to the <code>${SEATNUNNEL_HOME}/plugins/jdbc/lib/</code> directory.</p> </li> </ul>"},{"location":"MatrixOne/Develop/Ecological-Tools/Etl/Seatunnel/seatunnel-mysql-matrixone/#operational-steps","title":"Operational steps","text":""},{"location":"MatrixOne/Develop/Ecological-Tools/Etl/Seatunnel/seatunnel-mysql-matrixone/#create-test-data","title":"Create Test Data","text":"<ol> <li> <p>Create a MySQL database named <code>test1</code> and create a table named <code>test_table</code> in it, stored in <code>mysql.sql</code> under root. Here is the DDL statement for MySQL:</p> <p><code>sql create database test1; use test1; CREATE TABLE `test_table` (   `name` varchar(255) DEFAULT NULL,   `age` int(11) DEFAULT NULL ) ENGINE=InnoDB DEFAULT CHARSET=utf8;</code></p> </li> <li> <p>Use the mo_ctl tool to import MySQL's DDL statements directly into MatrixOne. Execute the following command:</p> <pre><code>mo_ctl sql /root/mysql.sql </code></pre> </li> </ol>"},{"location":"MatrixOne/Develop/Ecological-Tools/Etl/Seatunnel/seatunnel-mysql-matrixone/#install-the-connectors-plug-in","title":"Install the Connectors plug-in","text":"<p>Connect to MatrixOne using SeaTunnel's <code>connector-jdbc</code> connection plug-in.</p> <ol> <li> <p>In SeaTunnel's <code>${SEATNUNNEL_HOME}/config/plugin_config</code> file, add the following:</p> <pre><code>--connectors-v2--\nconnector-jdbc\n--end--\n</code></pre> </li> <li> <p>The SeaTunnel binary package for version 2.3.3 does not provide connector dependencies by default. You need to install the connector by executing the following command the first time you use SeaTunnel:</p> <pre><code>sh bin/install-plugin.sh 2.3.3 </code></pre> <p>Note: This document uses the SeaTunnel engine to write data to MatrixOne without relying on Flink or Spark.</p> </li> </ol>"},{"location":"MatrixOne/Develop/Ecological-Tools/Etl/Seatunnel/seatunnel-mysql-matrixone/#define-task-profile","title":"Define Task Profile","text":"<p>In this document, we use the <code>test_table</code> table of the MySQL database as the data source and write the data directly to the <code>test_table</code> table of the MatrixOne database without data processing.</p> <p>Well, due to data compatibility issues, you need to configure the task configuration file <code>${SEATNUNNEL_HOME}/config/v2.batch.config.template</code>, which defines how and how data is entered, processed, and exported after SeaTunnel is started.</p> <p>Edit the configuration file as follows:</p> <pre><code>env {\nexecution.parallelism = 2\njob.mode = \"BATCH\"\n}\n\nsource {\nJdbc {\nurl = \"jdbc:mysql://xx.xx.xx.xx:3306/test\"\ndriver = \"com.mysql.cj.jdbc.Driver\"\nconnection_check_timeout_sec = 100\nuser = \"root\"\npassword = \"123456\"\nquery = \"select * from test_table\"\n}\n}\n\ntransform {\n\n}\n\nsink {\njdbc {\nurl = \"jdbc:mysql://xx.xx.xx.xx:6001/test\"\ndriver = \"com.mysql.cj.jdbc.Driver\"\nuser = \"root\"\npassword = \"111\"\nquery = \"insert into test_table(name,age) values(?,?)\"\n}\n}\n</code></pre>"},{"location":"MatrixOne/Develop/Ecological-Tools/Etl/Seatunnel/seatunnel-mysql-matrixone/#run-the-seatunnel-app","title":"Run the SeaTunnel app","text":"<p>Launch the SeaTunnel app by executing the following command:</p> <pre><code>./bin/seatunnel.sh --config ./config/v2.batch.config.template -e local </code></pre>"},{"location":"MatrixOne/Develop/Ecological-Tools/Etl/Seatunnel/seatunnel-mysql-matrixone/#view-run-results","title":"View run results","text":"<p>At the end of the SeaTunnel run, statistics similar to the following are displayed summarizing the time taken for this write, the total number of read data, the total number of writes, and the total number of write failures:</p> <pre><code>***********************************************\n           Job Statistic Information\n***********************************************\nStart Time                : 2023-08-07 16:45:02\nEnd Time                  : 2023-08-07 16:45:05\nTotal Time(s)             :                   3\nTotal Read Count          :             5000000\nTotal Write Count         :             5000000\nTotal Failed Count        :                   0\n***********************************************\n</code></pre> <p>You have successfully synchronously written data from the MySQL database to the MatrixOne database.</p>"},{"location":"MatrixOne/Develop/Ecological-Tools/Etl/Seatunnel/seatunnel-oracle-matrixone/","title":"Write data to MatrixOne using SeaTunnel","text":"<p>This document describes how to write Oracle data to MatrixOne using SeaTunnel.</p>"},{"location":"MatrixOne/Develop/Ecological-Tools/Etl/Seatunnel/seatunnel-oracle-matrixone/#prepare-before-you-start","title":"Prepare before you start","text":"<ul> <li> <p>Finished installing and starting MatrixOne.</p> </li> <li> <p>Finished installing Oracle 19c.</p> </li> <li> <p>Finished installing SeaTunnel Version 2.3.3. Once installed, the installation path for SeaTunnel can be defined from the shell command line:</p> </li> </ul> <pre><code>export SEATNUNNEL_HOME=\"/root/seatunnel\" </code></pre> <ul> <li> <p>Install the MySQL Client.</p> </li> <li> <p>Download ojdbc8-23.3.0.23.09.jar and copy the file to the ${SEATNUNNEL_HOME}/plugins/jdbc/lib/ directory.</p> </li> </ul>"},{"location":"MatrixOne/Develop/Ecological-Tools/Etl/Seatunnel/seatunnel-oracle-matrixone/#operational-steps","title":"Operational steps","text":""},{"location":"MatrixOne/Develop/Ecological-Tools/Etl/Seatunnel/seatunnel-oracle-matrixone/#create-test-data-with-scott-user-in-oracle","title":"Create test data with scott user in Oracle","text":"<p>This time you are using the user scott in Oracle to create the table (or other users, of course), and in Oracle 19c the scott user needs to be created manually and can be unlocked by command using the sqlplus tool.</p> <ul> <li>Access to the database</li> </ul> <pre><code>sqlplus / as sysdba\n</code></pre> <ul> <li>Create a scott user and specify a password</li> </ul> <pre><code>create user scott identified by tiger; </code></pre> <ul> <li>To facilitate testing, we grant the scott dba role:</li> </ul> <pre><code>grant dba to scott; </code></pre> <ul> <li>Subsequent access is available via the scott user login:</li> </ul> <pre><code>sqlplus scott/tiger </code></pre> <ul> <li>Creating Test Data in Oracle</li> </ul> <pre><code>create table employees_oracle(\nid number(5),\nname varchar(20)\n);\n\ninsert into employees_oracle values(1,'zhangsan');\ninsert into employees_oracle values(2,'lisi');\ninsert into employees_oracle values(3,'wangwu');\ninsert into employees_oracle values(4,'oracle');\nCOMMIT;\n--View table data:\nselect * from employees_oracle;\n</code></pre>"},{"location":"MatrixOne/Develop/Ecological-Tools/Etl/Seatunnel/seatunnel-oracle-matrixone/#build-tables-in-advance-in-matrixone","title":"Build tables in advance in MatrixOne","text":"<p>Since SeaTunnel can only synchronize data, not table structure, we need to manually create the table in the target database (mo) before we can perform the task.</p> <pre><code>CREATE TABLE `oracle_datax` (\n`id` bigint(20) NOT NULL,\n`name` varchar(100) DEFAULT NULL,\nPRIMARY KEY (`id`)\n) ;\n</code></pre>"},{"location":"MatrixOne/Develop/Ecological-Tools/Etl/Seatunnel/seatunnel-oracle-matrixone/#install-the-connectors-plug-in","title":"Install the Connectors plug-in","text":"<p>Next, explain how to connect to MatrixOne using SeaTunnel's <code>connector-jdbc</code> connection plug-in.</p> <ol> <li> <p>In SeaTunnel's <code>${SEATNUNNEL_HOME}/config/plugin_config</code> file, add the following:</p> <pre><code>--connectors-v2--\nconnector-jdbc\n--end--\n</code></pre> </li> <li> <p>The SeaTunnel binary package for version 2.3.3 does not provide connector dependencies by default. You need to install the connector by executing the following command the first time you use SeaTunnel:</p> <pre><code>sh bin/install-plugin.sh 2.3.3\n</code></pre> <p>Note: This document uses the SeaTunnel engine to write data to MatrixOne without relying on Flink or Spark.</p> </li> </ol>"},{"location":"MatrixOne/Develop/Ecological-Tools/Etl/Seatunnel/seatunnel-oracle-matrixone/#define-task-profile","title":"Define Task Profile","text":"<p>In this section, we use the <code>employees_oracle</code> table of the Oracle database as the data source and write the data directly to the <code>oracle_datax</code> table of the MatrixOne database without data processing.</p> <p>Well, due to data compatibility issues, you need to configure the task configuration file <code>${SEATNUNNEL_HOME}/config/v2.batch.config.template</code>, which defines how and how data is entered, processed, and exported after SeaTunnel is started.</p> <p>Edit the configuration file as follows:</p> <pre><code>env {\n  # You can set SeaTunnel environment configuration here\n  execution.parallelism = 10\n  job.mode = \"BATCH\"\n  #execution.checkpoint.interval = 10000\n  #execution.checkpoint.data-uri = \"hdfs://localhost:9000/checkpoint\"\n}\n\nsource {\n    Jdbc {\n        url = \"jdbc:oracle:thin:@xx.xx.xx.xx:1521:ORCLCDB\"\n        driver = \"oracle.jdbc.OracleDriver\"\n        user = \"scott\"\n        password = \"tiger\"\n        query = \"select * from employees_oracle\"\n    }\n}\n\nsink {\n   Jdbc {\n        url = \"jdbc:mysql://xx.xx.xx.xx:6001/test\"\n        driver = \"com.mysql.cj.jdbc.Driver\"\n        user = \"root\"\n        password = \"111\"\n        query = \"insert into oracle_datax values(?,?)\"\n   }\n}\n</code></pre>"},{"location":"MatrixOne/Develop/Ecological-Tools/Etl/Seatunnel/seatunnel-oracle-matrixone/#run-the-seatunnel-app","title":"Run the SeaTunnel app","text":"<p>Launch the SeaTunnel app by executing the following command:</p> <pre><code>./bin/seatunnel.sh --config ./config/v2.batch.config.template -e local </code></pre>"},{"location":"MatrixOne/Develop/Ecological-Tools/Etl/Seatunnel/seatunnel-oracle-matrixone/#view-run-results","title":"View run results","text":"<p>At the end of the SeaTunnel run, statistics similar to the following are displayed summarizing the time taken for this write, the total number of read data, the total number of writes, and the total number of write failures:</p> <pre><code>***********************************************\n           Job Statistic Information\n***********************************************\nStart Time : 2023-08-07 16:45:02\nEnd Time : 2023-08-07 16:45:05\nTotal Time(s) :                       3\nTotal Read Count :                   4\nTotal Write Count :                   4\nTotal Failed Count :                   0\n***********************************************\n</code></pre> <p>You have successfully synchronously written data from the Oracle database to the MatrixOne database.</p>"},{"location":"MatrixOne/Develop/Ecological-Tools/Etl/Seatunnel/seatunnel-overview/","title":"Overview","text":"<p>SeaTunnel is a distributed, high-performance, easily scalable data integration platform focused on synchronizing and transforming massive amounts of data, both offline and in real time. MatrixOne supports the use of SeaTunnel to synchronize data from other databases, processing tens of billions of pieces of data stably and efficiently.</p>"},{"location":"MatrixOne/Develop/Ecological-Tools/Etl/Seatunnel/seatunnel-overview/#application-scenarios","title":"Application scenarios","text":"<p>Apache SeaTunnel is a versatile distributed data integration platform for a variety of application scenarios, including:</p> <ul> <li> <p>Massive data synchronization: SeaTunnel handles the task of synchronizing large-scale data, enabling stable and efficient synchronization of tens of billions of data per day.</p> </li> <li> <p>Data Integration: It helps users integrate data from multiple data sources into a unified storage system for subsequent data analysis and processing.</p> </li> <li> <p>Real-time streaming: SeaTunnel supports the processing of real-time data streams for scenarios requiring real-time data synchronization and conversion.</p> </li> <li> <p>Offline batch processing: In addition to real-time processing, SeaTunnel also supports offline batch processing for regular data synchronization and analysis tasks.</p> </li> <li> <p>ETL processing: SeaTunnel can be used for data extraction, transformation and load (ETL) operations to help organizations transform and load data from the source to the target system.</p> </li> </ul>"},{"location":"MatrixOne/Develop/Ecological-Tools/Scheduling-Tools/dolphinScheduler/","title":"Connecting MatrixOne with DolphinScheduler","text":""},{"location":"MatrixOne/Develop/Ecological-Tools/Scheduling-Tools/dolphinScheduler/#overview","title":"Overview","text":"<p>Apache DolphinScheduler is a distributed, highly scalable open-source system for visual DAG (Directed Acyclic Graph) workflow task scheduling. It provides a solution for visually orchestrating tasks, workflows, and the entire data processing lifecycle.</p> <p>The main goal of Apache DolphinScheduler is to address complex dependencies in large-scale data tasks. It assembles tasks streamingly using DAGs, allowing real-time monitoring of task execution status and supporting operations such as task retries, specifying node recovery for failures, and pausing, resuming, and terminating tasks.</p> <p>MatrixOne supports integration with DolphinScheduler, a visual DAG workflow task scheduling system. This document will guide you on connecting MatrixOne to DolphinScheduler and creating task workflows.</p>"},{"location":"MatrixOne/Develop/Ecological-Tools/Scheduling-Tools/dolphinScheduler/#before-you-start","title":"Before you start","text":"<ul> <li> <p>Completed MatrixOne installation and setup.</p> </li> <li> <p>Installed DolphinScheduler installation.</p> </li> </ul>"},{"location":"MatrixOne/Develop/Ecological-Tools/Scheduling-Tools/dolphinScheduler/#operating-steps","title":"Operating Steps","text":""},{"location":"MatrixOne/Develop/Ecological-Tools/Scheduling-Tools/dolphinScheduler/#step-1-configure-the-mysql-driver","title":"Step 1: Configure the MySQL Driver","text":"<ol> <li> <p>Download the MySQL driver and copy it to the libs directory:</p> <p>After installation, you need to manually download the mysql-connector-java driver (version 8.0.16). Then, copy it to four directories in the DolphinScheduler installation directory: <code>api-server/libs</code>, <code>alert-server/libs</code>, <code>master-server/libs</code>, and <code>worker-server/libs</code>.</p> <p>Note</p> <p>It is recommended to use <code>mysql-connector-java-8.0.16.jar</code> as the MySQL driver package.</p> </li> <li> <p>Restart DolphinScheduler:</p> <p>After copying the driver package, you need to restart the DolphinScheduler service. First, go to the DolphinScheduler installation directory and then execute the following command to restart the DolphinScheduler service:</p> <pre><code># Stop the Standalone Server service\nbash ./bin/dolphinscheduler-daemon.sh stop standalone-server\n# Start the Standalone Server service\nbash ./bin/dolphinscheduler-daemon.sh start standalone-server\n</code></pre> </li> <li> <p>Log in to DolphinScheduler:</p> <p>Use the default username <code>admin</code> and password <code>dolphinscheduler123</code>. Access the DolphinScheduler web user interface by visiting <code>http://ip:12345/dolphinscheduler/ui</code>, as shown below:</p> <p></p> </li> <li> <p>Create a Data Source:</p> <p>Click on Data Source Center &gt; Create Data Source and enter the MatrixOne data connection information. Afterward, click on Test Connection; if the connection is successful, click OK to save it:</p> <p></p> </li> </ol>"},{"location":"MatrixOne/Develop/Ecological-Tools/Scheduling-Tools/dolphinScheduler/#step-2-create-a-project-workflow","title":"Step 2: Create a Project Workflow","text":"<ol> <li> <p>Create a Tenant:</p> <p>In the Security Center, click on Create Tenant and enter the tenant name, as shown below:</p> <p></p> <p>Note</p> <p>In a production environment, it is not recommended to use <code>root</code> as the tenant.</p> </li> <li> <p>Create a Project:</p> <p>In Project Management, click on Create Project and enter the project name, as shown below:</p> <p></p> </li> <li> <p>Create a Workflow and Add Nodes:</p> <p>Click on the Project Name created in the previous step and then click on Create Workflow. Drag the SQL node from the left to the canvas on the right. Fill in the Node Name, Data Source Information, SQL Type, and SQL Statement, then click OK. As shown below:</p> <p>The node created in this step is for creating a table, and the SQL statement is used to create a table.</p> <p></p> <p>Next, create Insert Data and Query Data nodes in a similar way. The dependency relationship between these three nodes is shown below, and you can manually connect them:</p> <p></p> <p>The SQL statements for these three nodes are as follows:</p> <pre><code>#create_table\n\nCREATE TABLE IF NOT EXISTS test_table (id INT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL)\n\n#insert_data\n\nINSERT INTO test_table (name) VALUES ('John Doe')\n\n#select_data\n\nSELECT * FROM test_table\n</code></pre> <p>Connect these three nodes based on their dependency relationship, then click Save. Enter the Workflow Name, select the previously created Tenant, choose Parallel as the execution policy, and click OK.</p> <p></p> <p>Once the workflow is created, you can see it in the Workflow Relations page with the status \"Workflow Offline\":</p> <p></p> <p>Similarly, you can also see the defined workflow in the Workflow Definitions page with the status \"Offline\":</p> <p></p> </li> <li> <p>Publish and Run the Workflow:</p> <p>A workflow must be published before it can be run. Click the Publish button to publish the workflow created earlier:</p> <p></p> <p>After publishing, the workflow status will appear as follows:</p> <p></p> <p>Next, click the Run button, set the configuration parameters before starting, and then click OK:</p> <p></p> <p>Finally, return to the Project Overview to check whether the workflow and the three tasks below it have run successfully, as shown below:</p> <p></p> </li> </ol>"},{"location":"MatrixOne/Develop/Publish-Subscribe/multi-account-overview/","title":"Multi-Account Overview","text":"<p>Unlike MySQL, MatrixOne is a database with built-in multi-tenancy capability. In a MatrixOne cluster, accounts can be created using the <code>CREATE ACCOUNT</code> command. Conceptually, each tenant represents a completely independent data space, with all data and operations being isolated from other accounts. When users log in with the tenant's username and password, they enter a MySQL instance where they can perform various operations such as creating databases and tables without affecting the data of other accounts.</p>"},{"location":"MatrixOne/Develop/Publish-Subscribe/multi-account-overview/#introduction-to-accounts","title":"Introduction to accounts","text":"<p>The <code>Account</code> in MatrixOne is part of the permission management system. For more information on the permission management system, see Privilege Management Overview section.</p> <p>Multi-tenancy has various use cases, including multi-tenancy design in SaaS applications, isolating accounts for subsidiaries of a corporation, and database usage for services in a microservices architecture. For more information on application scenarios, see Multi-Account section in the MatrixOne Feature Overview.</p>"},{"location":"MatrixOne/Develop/Publish-Subscribe/multi-account-overview/#creating-and-using-accounts","title":"Creating and Using Accounts","text":"<ol> <li>For developers, creating and using accounts in MatrixOne can be done through SQL statements. For more examples, see Create accounts, Verify Resource Isolation section.</li> <li>For operations personnel working with distributed versions of MatrixOne, it is necessary to configure resource isolation and scaling for accounts, for more information on practical guidelines, see Managing CN Groups with Proxy and Scaling MatrixOne Cluster.</li> </ol>"},{"location":"MatrixOne/Develop/Publish-Subscribe/multi-account-overview/#account-to-account-publishsubscribe","title":"Account-to-Account Publish/Subscribe","text":"<p>In addition to ensuring data and load isolation between accounts, MatrixOne provides a publish/subscribe capability that allows data exchange between accounts. This capability can be used to address data synchronization and large-scale data distribution scenarios. For more information, see Publish-subscribe section.</p>"},{"location":"MatrixOne/Develop/Publish-Subscribe/pub-sub-overview/","title":"Publish Subscription","text":"<p>A database's Publish-Subscribe (Pub/Sub) is a messaging model in which a publisher sends a message to one or more subscribers, who in turn receive and process the message. The subscriber sends the message to one or more subscribers. In this model, publishers and subscribers are loosely coupled and do not need to communicate directly with each other, thus increasing application scalability and flexibility.</p> <p>In databases, publish subscriptions are often used in scenarios such as real-time data updates, cache synchronization, and business event notifications. For example, when data changes for a table in a database, subscribers can be notified in real time through the publish subscription feature, enabling real-time data synchronization and processing. In addition, notification of business events, such as an order being cancelled, an inventory being insufficient, etc., can be achieved by publishing a subscription function.</p> <p>Typically, a database's publish subscription function consists of two parts: the publisher and the subscriber. The publisher is responsible for publishing the message, while the subscriber subscribes to the corresponding message for data synchronization purposes. There can be a many-to-many relationship between the publisher and the subscriber, i.e. one publisher can post messages to multiple subscribers and one subscriber can subscribe to multiple messages/data.</p>"},{"location":"MatrixOne/Develop/Publish-Subscribe/pub-sub-overview/#application-scenarios","title":"Application scenarios","text":"<p>The publish subscription feature has several typical application scenarios:</p> <ul> <li> <p>Data synchronization: When one database needs to be synchronized with another, the publish subscription feature can be used to send data changes to the subscriber database. For example, when a website needs to transfer data from one geographic location to another, the publish subscription feature can be used to ensure data synchronization between two databases.</p> </li> <li> <p>Business data distribution: The publish subscription feature can be used to distribute business data to different systems or business processes. For example, when a bank needs to distribute customer account information to multiple business systems, the publish subscription feature can be used to distribute data to the appropriate systems, ensuring data consistency across business processes.</p> </li> <li> <p>Data backup: The publish subscription feature can be used to back up data. For example, when one database needs to be backed up to another, the publish subscription feature can be used to back up data to the subscriber database to restore data in the event of a primary database failure.</p> </li> <li> <p>Real-time data processing: The publish subscription feature can be used to enable real-time data processing. For example, when a website needs to process data from different users, the publish subscription feature can be used to transfer the data to a handler for processing in order to enable real-time data analysis and decision-making.</p> </li> </ul>"},{"location":"MatrixOne/Develop/Publish-Subscribe/pub-sub-overview/#noun-interpretation","title":"Noun interpretation","text":"<ul> <li> <p>Publishing: In a database, publishing usually refers to setting a database object to a state accessible to other tenants. This is an important step in data sharing and replication, where published objects can be subscribed to and acquired by other tenants.</p> </li> <li> <p>Subscription: A subscription is when a database chooses to receive and copy data from published database objects.</p> </li> <li> <p>Publisher (Pub): A publisher is a database that performs publishing operations. The publishing side is responsible for creating and managing published objects, as well as managing access to databases that subscribe to that published object.</p> </li> <li> <p>Subscriber (Sub): A subscriber is a tenant who subscribes to a publishing object.</p> </li> <li> <p>Publish object: A publish object is a database object created on the publish side and set to publishable, i.e., a database. The data for these objects can be accessed and copied by the subscriber.</p> </li> <li> <p>Subscription objects: Subscription objects are publishing objects that are copied and stored on the subscription side. The subscription object's data is updated based on the publisher's data.</p> </li> </ul>"},{"location":"MatrixOne/Develop/Publish-Subscribe/pub-sub-overview/#publish-subscription-scope-description","title":"Publish Subscription Scope Description","text":""},{"location":"MatrixOne/Develop/Publish-Subscribe/pub-sub-overview/#publishsubscribe-to-scope-of-application","title":"Publish/Subscribe to Scope of Application","text":"<ul> <li>Publisher (Pub)andSub (Sub) are both tenants of MatrixOne.</li> </ul>"},{"location":"MatrixOne/Develop/Publish-Subscribe/pub-sub-overview/#publishablesubscribeable-permission-range","title":"Publishable/Subscribeable Permission Range","text":"<ul> <li>Publisher (Pub)Only the ACCOUNTADMIN or MOADMIN role can create publications and subscriptions.</li> <li>Subscriber (Sub)Access to subscription data is manipulated by the ACCOUNTADMIN or MOADMIN role.</li> </ul>"},{"location":"MatrixOne/Develop/Publish-Subscribe/pub-sub-overview/#publishsubscribe-data-range","title":"Publish/Subscribe Data Range","text":"<ul> <li>A publish can only be associated with a single database.</li> <li>Publishing and subscribing is only implemented at the database level; direct table-level publishing and subscribing is not currently supported.</li> <li>The Subscription side only has read access to the Subscription library.</li> <li>If Publisher adjusts the sharing scope of a publish, those Subscribers that are not in the new scope will have invalid access to this Subscription library if they have already created a subscription library.</li> <li>If the Publisher modifies the posting, then the Subscriber will see the update without additional action.</li> <li>If Pub tries to delete a published database, the deletion will not succeed.</li> <li>If Publisher deletes Publish but the corresponding object in the subscription database still exists, accessing this object by Subscriber (Sub) will trigger an error and the corresponding Subscription will need to be deleted by Subscriber (Sub).</li> <li>If the Publishing side (Pub) deletes the Publishing object, but the corresponding object in the subscription library still exists, then the Subscribing side (Sub) accessing this object triggers an error and requires the Subscribing side (Sub) to delete the corresponding Subscription object.</li> </ul>"},{"location":"MatrixOne/Develop/Publish-Subscribe/pub-sub-overview/#publish-subscription-example","title":"Publish Subscription Example","text":"<p>This chapter will give an example of how three tenants, sys, acc1, and acc2, currently exist in a MatrixOne cluster, operating on the three tenants in order of operation:</p> <p></p> <ol> <li> <p>Publisher: sys tenant creates database sub1 with table t1 and publishes pub1:</p> <pre><code>create database sub1;\ncreate table sub1.t1(a int,b int);\ncreate publication pub1 database sub1;\nmysql&gt; show publications;\n+-------------+----------+---------------------+-------------+-------------+----------+\n| publication | database | create_time         | update_time | sub_account | comments |\n+-------------+----------+---------------------+-------------+-------------+----------+\n| pub1        | sub1     | 2024-04-23 10:28:15 | NULL        | *           |          |\n+-------------+----------+---------------------+-------------+-------------+----------+\n1 row in set (0.01 sec)\n</code></pre> </li> <li> <p>Subscribers: acc1 and acc2 both create the subscription library syssub1, resulting in the shared data table t1:</p> <pre><code>-- The all option allows you to see all the subscriptions that you have permission to subscribe to, and the unsubscribed sub_time and sub_name are null, so if you don't add all, you can only see the information that you have already subscribed to.\nmysql&gt; show subscriptions all;\n+----------+-------------+--------------+---------------------+----------+----------+\n| pub_name | pub_account | pub_database | pub_time            | sub_name | sub_time |\n+----------+-------------+--------------+---------------------+----------+----------+\n| pub1     | sys         | sub1         | 2024-04-23 10:28:15 | NULL     | NULL     |\n+----------+-------------+--------------+---------------------+----------+----------+\n1 row in set (0.01 sec)\n\n-- The sql statements for creating a subscription library are the same for both acc1 and acc2, so I won't repeat them here.\ncreate database syssub1 from sys publication pub1;\nuse syssub1;\n\nmysql&gt; show subscriptions;\n+----------+-------------+--------------+---------------------+----------+---------------------+\n| pub_name | pub_account | pub_database | pub_time            | sub_name | sub_time            |\n+----------+-------------+--------------+---------------------+----------+---------------------+\n| pub1     | sys         | sub1         | 2024-04-23 10:28:15 | syssub1  | 2024-04-23 10:35:13 |\n+----------+-------------+--------------+---------------------+----------+---------------------+\n1 row in set (0.00 sec)\n\nmysql&gt; show tables;\n+--------------------+\n| Tables_in_syssub1  |\n+--------------------+\n| t1                 |\n+--------------------+\n2 rows in set (0.02 sec)\n</code></pre> </li> <li> <p>Publisher: sys tenant create data table t2:</p> <pre><code>create table sub1.t2(a text);\n</code></pre> </li> <li> <p>Subscribers: acc1 and acc2 get shared data tables t1 and t2:</p> <pre><code>use syssub1;\nmysql&gt; show tables;\n+-------------------+\n| Tables_in_syssub1 |\n+-------------------+\n| t1                |\n| t2                |\n+-------------------+\n2 rows in set (0.01 sec)\n</code></pre> </li> <li> <p>Publisher: sys tenant creates database sub2 with table t1 and publishes pub2 to tenant acc1</p> <pre><code>create database sub2;\ncreate table sub2.t1(a float);\ncreate publication pub2 database sub2 account acc1;\n</code></pre> </li> <li> <p>Subscribers:acc1 and acc2 both create subscription library syssub2,acc1 gets shared data table t1;acc2 fails to create subscription library syssub2:</p> <ul> <li>acc1</li> </ul> <pre><code>mysql&gt; show subscriptions all;\n+----------+-------------+--------------+---------------------+----------+---------------------+\n| pub_name | pub_account | pub_database | pub_time            | sub_name | sub_time            |\n+----------+-------------+--------------+---------------------+----------+---------------------+\n| pub1     | sys         | sub1         | 2024-04-23 10:28:15 | syssub1  | 2024-04-23 10:30:43 |\n| pub2     | sys         | sub2         | 2024-04-23 10:40:54 | NULL     | NULL                |\n+----------+-------------+--------------+---------------------+----------+---------------------+\n2 rows in set (0.01 sec)\n\ncreate database syssub2 from sys publication pub2;\nuse syssub2;\n\nmysql&gt; show subscriptions all;\n+----------+-------------+--------------+---------------------+----------+---------------------+\n| pub_name | pub_account | pub_database | pub_time            | sub_name | sub_time            |\n+----------+-------------+--------------+---------------------+----------+---------------------+\n| pub2     | sys         | sub2         | 2024-04-23 10:40:54 | syssub2  | 2024-04-23 10:42:31 |\n| pub1     | sys         | sub1         | 2024-04-23 10:28:15 | syssub1  | 2024-04-23 10:30:43 |\n+----------+-------------+--------------+---------------------+----------+---------------------+\n2 rows in set (0.01 sec)\n\nmysql&gt; show tables;\n+--------------------+\n| Tables_in_syssub2  |\n+--------------------+\n| t1                 |\n+--------------------+\n2 rows in set (0.02 sec)\n</code></pre> <ul> <li>acc2</li> </ul> <pre><code>-- acc2 \u770b\u4e0d\u5230 pub2,\u56e0\u4e3a\u6ca1\u6709\u8ba2\u9605\u6743\u9650\nmysql&gt; show subscriptions all;\n+----------+-------------+--------------+---------------------+----------+---------------------+\n| pub_name | pub_account | pub_database | pub_time            | sub_name | sub_time            |\n+----------+-------------+--------------+---------------------+----------+---------------------+\n| pub1     | sys         | sub1         | 2024-04-23 10:28:15 | syssub1  | 2024-04-23 10:35:13 |\n+----------+-------------+--------------+---------------------+----------+---------------------+\n1 row in set (0.01 sec)\n\nmysql&gt; create database syssub2 from sys publication pub2;\nERROR 20101 (HY000): internal error: the account acc2 is not allowed to subscribe the publication pub2\n</code></pre> </li> <li> <p>Publisher: sys tenant modifies publishing pub2 to all tenants:</p> <pre><code>alter publication pub2 account all;\nmysql&gt; show publications;\n+-------------+----------+---------------------+---------------------+-------------+----------+\n| publication | database | create_time         | update_time         | sub_account | comments |\n+-------------+----------+---------------------+---------------------+-------------+----------+\n| pub2        | sub2     | 2024-04-23 10:40:54 | 2024-04-23 10:47:53 | *           |          |\n| pub1        | sub1     | 2024-04-23 10:28:15 | NULL                | *           |          |\n+-------------+----------+---------------------+---------------------+-------------+----------+\n2 rows in set (0.00 sec)\n</code></pre> </li> <li> <p>Subscriber:acc2 Created subscription library syssub2 successfully with shared data table t1:</p> <pre><code>-- acc2 can now see pub2.\nmysql&gt; show subscriptions all;\n+----------+-------------+--------------+---------------------+----------+---------------------+\n| pub_name | pub_account | pub_database | pub_time            | sub_name | sub_time            |\n+----------+-------------+--------------+---------------------+----------+---------------------+\n| pub1     | sys         | sub1         | 2024-04-23 10:28:15 | syssub1  | 2024-04-23 10:35:13 |\n| pub2     | sys         | sub2         | 2024-04-23 10:40:54 | NULL     | NULL                |\n+----------+-------------+--------------+---------------------+----------+---------------------+\n2 rows in set (0.00 sec)\n\ncreate database syssub2 from sys publication pub2;\nuse syssub2;\n\nmysql&gt; show subscriptions all;\n+----------+-------------+--------------+---------------------+----------+---------------------+\n| pub_name | pub_account | pub_database | pub_time            | sub_name | sub_time            |\n+----------+-------------+--------------+---------------------+----------+---------------------+\n| pub2     | sys         | sub2         | 2024-04-23 10:40:54 | syssub2  | 2024-04-23 10:50:43 |\n| pub1     | sys         | sub1         | 2024-04-23 10:28:15 | syssub1  | 2024-04-23 10:35:13 |\n+----------+-------------+--------------+---------------------+----------+---------------------+\n2 rows in set (0.00 sec)\n\nmysql&gt; show tables;\n+--------------------+\n| Tables_in_syssub2  |\n+--------------------+\n| t1                 |\n+--------------------+\n2 rows in set (0.02 sec)\n</code></pre> </li> <li> <p>Publisher:sys tenant delete publish pub1:</p> <pre><code>drop publication pub1;\nmysql&gt; show publications;\n+-------------+----------+---------------------+---------------------+-------------+----------+\n| publication | database | create_time         | update_time         | sub_account | comments |\n+-------------+----------+---------------------+---------------------+-------------+----------+\n| pub2        | sub2     | 2024-04-23 10:40:54 | 2024-04-23 10:47:53 | *           |          |\n+-------------+----------+---------------------+---------------------+-------------+----------+\n1 row in set (0.00 sec)\n</code></pre> </li> <li> <p>Subscribers:acc1,acc2 Connection to syspub1 failed:</p> <pre><code>mysql&gt; use syssub1;\nERROR 20101 (HY000): internal error: there is no publication pub1\n</code></pre> </li> <li> <p>Publisher: sys tenant creates new database sub1_new and republishes it as pub1</p> <pre><code>create database sub1_new;\nuse sub1_new;\ncreate table t3(n1 int);\ninsert into t3 values (1);\ncreate publication pub1 database sub1_new;\nmysql&gt; show publications;\n+-------------+----------+---------------------+---------------------+-------------+----------+\n| publication | database | create_time         | update_time         | sub_account | comments |\n+-------------+----------+---------------------+---------------------+-------------+----------+\n| pub2        | sub2     | 2024-04-23 10:40:54 | 2024-04-23 10:47:53 | *           |          |\n| pub1        | sub1_new | 2024-04-23 10:59:11 | NULL                | *           |          |\n+-------------+----------+---------------------+---------------------+-------------+----------+\n2 rows in set (0.00 sec)\n</code></pre> </li> <li> <p>Subscribers: acc1, acc2 Connect to syspub1 and see what's new in pub1, meaning if the publisher changes what's published, the subscriber doesn't have to do anything to see the update.</p> <pre><code>use syssub1;\nmysql&gt; show subscriptions;\n+----------+-------------+--------------+---------------------+----------+---------------------+\n| pub_name | pub_account | pub_database | pub_time            | sub_name | sub_time            |\n+----------+-------------+--------------+---------------------+----------+---------------------+\n| pub2     | sys         | sub2         | 2024-04-23 10:40:54 | syssub2  | 2024-04-23 10:42:31 |\n| pub1     | sys         | sub1_new     | 2024-04-23 10:59:11 | syssub1  | 2024-04-23 10:30:43 |\n+----------+-------------+--------------+---------------------+----------+---------------------+\n2 rows in set (0.01 sec)\n\nmysql&gt; show tables;\n+-------------------+\n| Tables_in_syssub1 |\n+-------------------+\n| t3                |\n+-------------------+\n1 row in set (0.01 sec)\n\nmysql&gt; select * from t3;\n+------+\n| n1   |\n+------+\n|    1 |\n+------+\n1 row in set (0.01 sec)\n</code></pre> </li> <li> <p>Subscriber:acc1 Delete subscription:</p> <pre><code> -- Remove a subscription by drop database\ndrop database syssub1;\nmysql&gt; show subscriptions;\n+----------+-------------+--------------+---------------------+----------+---------------------+\n| pub_name | pub_account | pub_database | pub_time            | sub_name | sub_time            |\n+----------+-------------+--------------+---------------------+----------+---------------------+\n| pub2     | sys         | sub2         | 2024-04-23 10:40:54 | syssub2  | 2024-04-23 10:42:31 |\n+----------+-------------+--------------+---------------------+----------+---------------------+\n1 row in set (0.00 sec)\n</code></pre> </li> <li> <p>Publisher: Before a sys tenant deletes a published database, delete its corresponding publication:</p> <pre><code>mysql&gt; drop database sub1_new;\nERROR 20101 (HY000): internal error: can not drop database 'sub1_new' which is publishing\nmysql&gt; drop publication pub1;\nQuery OK, 0 rows affected (0.00 sec)\n\nmysql&gt; drop database sub1_new;\nQuery OK, 1 row affected (0.03 sec)\n</code></pre> </li> <li> <p>Publisher: sys tenant modifies publication:</p> <pre><code>alter publication pub2 comment \"this is pub2\";--alter comments\nmysql&gt; show publications;\ncreate database new_sub2;\ncreate table new_sub2.new_t (xxx int);\ninsert into new_sub2.new_t values (123);\nalter publication pub2 database new_sub2;--alter database\nmysql&gt; show publications;\n+-------------+----------+---------------------+---------------------+-------------+--------------+\n| publication | database | create_time         | update_time         | sub_account | comments     |\n+-------------+----------+---------------------+---------------------+-------------+--------------+\n| pub2        | new_sub2 | 2024-04-23 10:40:54 | 2024-04-23 11:04:20 | *           | this is pub2 |\n+-------------+----------+---------------------+---------------------+-------------+--------------+\n1 row in set (0.00 sec)\n</code></pre> </li> <li> <p>Subscribers: acc1, acc2 View the subscription to see the modified content of the publishing database:</p> <pre><code> mysql&gt; show subscriptions;\n+----------+-------------+--------------+---------------------+----------+---------------------+\n| pub_name | pub_account | pub_database | pub_time            | sub_name | sub_time            |\n+----------+-------------+--------------+---------------------+----------+---------------------+\n| pub2     | sys         | new_sub2     | 2024-04-23 10:40:54 | syssub2  | 2024-04-23 10:42:31 |\n+----------+-------------+--------------+---------------------+----------+---------------------+\n1 row in set (0.00 sec)\n\nuse syssub2;\nmysql&gt; show tables;\n+-------------------+\n| Tables_in_syssub2 |\n+-------------------+\n| new_t             |\n+-------------------+\n1 row in set (0.00 sec)\n\nmysql&gt; select * from new_t;\n+------+\n| xxx  |\n+------+\n|  123 |\n+------+\n1 row in set (0.00 sec)\n</code></pre> </li> </ol>"},{"location":"MatrixOne/Develop/Publish-Subscribe/pub-sub-overview/#reference-documents","title":"Reference Documents","text":""},{"location":"MatrixOne/Develop/Publish-Subscribe/pub-sub-overview/#publisher-reference-documentation","title":"Publisher Reference Documentation","text":"<ul> <li>CREATE PUBLICATION</li> <li>ALTER PUBLICATION</li> <li>DROP PUBLICATION</li> <li>SHOW PUBLICATIONS</li> <li>SHOW CREATE PUBLICATION</li> </ul>"},{"location":"MatrixOne/Develop/Publish-Subscribe/pub-sub-overview/#subscriber-reference-documents","title":"Subscriber Reference Documents","text":"<ul> <li>CREATE...FROM...PUBLICATION...</li> <li>SHOW SUBSCRIPTIONS</li> </ul>"},{"location":"MatrixOne/Develop/Transactions/common-transaction-overview/","title":"General Transaction Overview","text":""},{"location":"MatrixOne/Develop/Transactions/common-transaction-overview/#why-do-you-need-transactions","title":"Why do you need transactions?","text":"<p>In many large, critical applications, computers perform many tasks every second. More often than not, these tasks are themselves, but these tasks are combined to complete a business requirement called a transaction. What happens if one task is executed successfully and an error occurs in a second or third related task? This error is likely to leave system data in an inconsistent state. At this time, the transaction becomes very important; it can make the system data out of this inconsistent state.</p> <p>How to understand transaction? For example, in the banking system, if there is no transaction to control and manage the data, A likely withdraws a sum of money from the corporate account, and B and C also withdraw money from the same corporate account. Each transfer involves at least two changes in account information (for example, A's money arrives, and the company's account goes out; B's money arrives, and the company's account goes out; C's money comes, and the company's account goes out), If there are no transactions, then the exact value of the booking amount cannot be determined. After introducing the business requirement of the transaction, the essential characteristics of the transaction (ACID) ensure that the fund operation of the bank book is atomic (indivisible) and the amount seen by others is isolated. Each process is Consistent, and all operations are persistent, ensuring that the data in and out of the banking system remains consistent.</p>"},{"location":"MatrixOne/Develop/Transactions/common-transaction-overview/#what-is-transaction","title":"What is Transaction?","text":"<p>The transaction is a logical unit in the execution process of the database management system, consisting of a limited sequence of database operations. A transaction is a series of SQL statements submitted or rolled back as a logical unit.</p>"},{"location":"MatrixOne/Develop/Transactions/common-transaction-overview/#characteristics-of-transactions","title":"Characteristics of transactions","text":"<p>Usually, transactions need to have four characteristics of ACID:</p> <ul> <li>Atomicity: The atomicity of a transaction means that a transaction is an indivisible unit, and the operations in a transaction either all or none of them occur.</li> </ul> <p>For example:</p> <pre><code>start transaction;\ninsert into t1 values(1,2,3),(4,5,6);\nupdate t2 set c1='b' where c1='B';\ncommit;\n</code></pre> <p>Suppose an error occurs in inserting data into t1 or modifying any data in t2. In that case, the entire transaction will be rolled back, and only when two statements succeed at the same time will the submission be successful, and one operation will not succeed while the other fails.</p> <ul> <li>Consistency: Transactional consistency means that data must remain correct and obey all data-related constraints before and after the transaction.</li> </ul> <p>For example, create a new table in database first:</p> <pre><code>create table t1(a int primary key,b varchar(5) not null);\n</code></pre> <p>To ensure data consistency here, when inserting data, to ensure the data type and range of columns a and b, the primary key constraint of column a and the non-null constraint of column b must be satisfied at the same time:</p> <pre><code>insert into t1 values(1,'abcde'),(2,'bcdef');\n</code></pre> <ul> <li>Isolation: The isolation of a transaction is that when multiple users access concurrently, the specified isolation level must be observed between transactions. Within the determined isolation level range, one transaction cannot be interfered with by another transaction.</li> </ul> <p>For example, in the following transaction example, the session isolation level is read committed, and the data that can be seen in session 1 is as follows:</p> <pre><code>select * from t1;\n+------+------+\n| a    | b    |\n+------+------+\n|    1 | a    |\n|    2 | b    |\n|    3 | c    |\n+------+------+\n</code></pre> <p>At this point in session 2, you can do the following:</p> <pre><code>begin;\ndelete from t1 where a=3;\n</code></pre> <p>In session 1, you can still see the data unchanged:</p> <pre><code>select * from t1;\n+------+------+\n| a    | b    |\n+------+------+\n|    1 | a    |\n|    2 | b    |\n|    3 | c    |\n+------+------+\n</code></pre> <p>Until the current transaction is committed in session 2:</p> <pre><code>commit;\n</code></pre> <p>The result of the committed transaction will only be seen in session 1:</p> <pre><code>select * from t1;\n+------+------+\n| a    | b    |\n+------+------+\n|    1 | a    |\n|    2 | b    |\n+------+------+\n</code></pre> <ul> <li>Durability: Transaction durability means that when a transaction is committed in the database, its changes to the data are permanent, regardless of whether the database software is restarted.</li> </ul>"},{"location":"MatrixOne/Develop/Transactions/common-transaction-overview/#transaction-types","title":"Transaction Types","text":"<p>In a database, transactions are divided into the following categories:</p> <ul> <li>According to whether there is a clear start and end, it is divided into explicit transaction and implicit transaction.</li> <li>According to the use stage of the resource lock, it is divided into optimistic transaction and pessimistic transaction.</li> </ul> <p>These two types of transactions is not limited by each other. An explicit transaction can be an optimistic or pessimistic transaction, and a pessimistic transaction can be either an explicit or an implicit transaction.</p>"},{"location":"MatrixOne/Develop/Transactions/common-transaction-overview/#explicit-transaction-and-implicit-transaction","title":"Explicit Transaction and Implicit Transaction","text":"<ul> <li> <p>Explicit transaction: In general, you can explicitly start a transaction by executing a <code>BEGIN</code> statement. A transaction can be ended explicitly by executing a <code>COMMIT</code> or <code>ROLLBACK</code>. MatrixOne's displayed transaction startup and execution methods are slightly different; see Explicit Transaction.</p> </li> <li> <p>Implicit transaction: The transaction can start and end implicitly, without using <code>BEGIN TRANSACTION</code>, <code>COMMIT</code>, or <code>ROLLBACK</code> statements to start and end. Implicit transactions behave in the same way as explicit transactions. However, the rules for determining when an implicit transaction begins differ from those for determining when an explicit transaction begins. MatrixOne's implicit transaction startup and execution methods are slightly different; see Implicit Transaction.</p> </li> </ul>"},{"location":"MatrixOne/Develop/Transactions/common-transaction-overview/#optimistic-transaction-and-pessimistic-transaction","title":"Optimistic Transaction and Pessimistic Transaction","text":"<p>Regardless of whether it is an optimistic or pessimistic transaction, the execution results of the transaction are the same; that is, the operations in a transaction have exactly the exact requirements for the ACID level, whether it is atomicity, consistency, isolation, or persistence, there is no situation where optimistic transactions are more relaxed and pessimistic transactions are stricter.</p> <p>The difference between an optimistic transaction and a pessimistic transaction is that it is just a two-phase commit based on a different execution strategy based on the state of the business to be processed. Its choice is based on the executor's judgment, and its efficiency is based on the actual state of the business being processed (the frequency of write conflicts of concurrent transactions). That is, different assumptions are made about the state of transaction-related resources so that write locks are placed in different stages.</p> <p>At the beginning of an optimistic transaction, it is assumed that the transaction-related tables are in a state where no write conflicts will occur. The insertion, modification, or deletion of data is cached in memory. At this stage, the data will not be locked, but in the data Lock the corresponding data table or data row when submitting, and unlock it after submitting.</p> <p>At the beginning of a pessimistic transaction, it is assumed that there will be written conflicts in the tables related to the transaction, and the related tables or rows are locked in advance. Then in memory, insert, modify or delete relevant data and commit. Data is only unlocked after a commit or rollback completes.</p> <p>Optimistic transactions and pessimistic transactions have the following advantages and disadvantages during use:</p> <ul> <li>Optimistic transactions are more friendly to systems with fewer write operations and more read operations, avoiding deadlocks.</li> <li>Optimistic transactions may fail after repeated retries due to conflicts when larger transactions are committed.</li> <li>Pessimistic transactions are more friendly to systems with more write operations and avoid write-write conflicts from the database level.</li> <li>Pessimistic transactions In a scenario with large concurrency, if a transaction with a long execution time appears, the system may be blocked, and the throughput will be affected.</li> </ul> <p>For more information on optimistic transactions in MatrixOne, see Optimistic Transaction.</p> <p>For more information on optimistic transactions in MatrixOne, see Pessimistic Transaction.</p>"},{"location":"MatrixOne/Develop/Transactions/common-transaction-overview/#transaction-isolation","title":"Transaction Isolation","text":"<p>One of the characteristics of transactions is isolation, which we usually call transaction isolation.</p> <p>Isolation is the most restrictive of the four ACID properties of database transactions. The database system usually uses a locking mechanism or a multi-version concurrency control mechanism to obtain a higher isolation level. Application software also requires additional logic to make it work properly.</p> <p>Many database management systems (DBMS) define different \"transaction isolation levels\" to control the degree of locking. In many database systems, most transactions avoid high-level isolation levels (such as serializability) to reduce locking overhead. Programmers must carefully analyze the database access part of the code to ensure that lowering the isolation level does not cause hard-to-find code bugs. On the contrary, a higher isolation level will increase the chance of deadlock, which must be avoided during programming.</p> <p>The DBMS is allowed to use a higher isolation level than the one requested because there are no operations in a higher isolation level that are prohibited by a lower isolation level.</p> <p>ANSI/ISO SQL defines four standard isolation levels:</p> Isolation Level Dirty Write Dirty Read Fuzzy Read Phantom READ UNCOMMITTED Not Possible Possible Possible Possible READ COMMITTED Not Possible Not Possible Possible Possible REPEATABLE READ Not Possible Not Possible Not Possible Possible SERIALIZABLE Not Possible Not Possible Not Possible Not Possible <ul> <li> <p>READ UNCOMMITTED: READ UNCOMMITTED is the lowest isolation level. \"Dirty reads\" are allowed, and transactions can see the \"not committed\" modifications of other transactions.</p> </li> <li> <p>READ COMMITTED: At the READ COMMITTED level, the DBMS based on lock mechanism concurrency control needs to keep the write lock on the selected object until the end of the transaction, but the read lock is released immediately after the SELECT operation is completed. Like the previous isolation level, \"scope locks\" are not required.</p> </li> <li> <p>REPEATABLE READS: At the REPEATABLE READS isolation level, the DBMS based on the lock mechanism concurrency control needs to keep the read locks (read locks) and write locks (write locks) of the selected objects until the transaction end but does not require a \"range lock\", so a \"phantom read\" may occur. MatrixOne has implemented Snapshot Isolation and it is also known as REPEATABLE READS to maintain consistency with the isolation level in MySQL.</p> </li> <li> <p>SERIALIZABLE: SERIALIZABLE is the highest isolation level. On lock-based concurrency control DBMSs, serializability requires that read and write locks on selected objects be released at the end of the transaction. Using a \"WHERE\" clause in a SELECT query to describe a range should acquire a \"range-locks\".</p> </li> </ul> <p>Higher levels provide stronger isolation by requiring more restrictions than lower isolation levels. The standard allows transactions to run at a stronger transaction isolation level.</p> <p>Note</p> <p>MatrixOne's transaction isolation is slightly different from the general isolation definition and isolation level division; see Isolation level in MatrixOne.</p>"},{"location":"MatrixOne/Develop/Transactions/matrixone-transaction-overview/explicit-transaction/","title":"Explicit Transactions in MatrixOne","text":"<p>In MatrixOne's explicit transactions also obey the following rules:</p>"},{"location":"MatrixOne/Develop/Transactions/matrixone-transaction-overview/explicit-transaction/#explicit-transaction-rules","title":"Explicit transaction rules","text":"<ul> <li>An explicit transaction starts and ends with <code>BEGIN...END</code> or <code>START TRANSACTION...COMMIT</code> or <code>ROLLBACK</code>.</li> <li>In explicit transactions, DML (Data Manipulation Language) and DDL (Data Definition Language) can exist at the same time. All DDLs are supported.</li> <li>In an explicit transaction, other explicit transactions cannot be nested. For example, if <code>START TANSACTIONS</code> is encountered after <code>START TANSACTIONS</code>, all statements between two <code>START TANSACTIONS</code> will be forced to commit, regardless of the value of <code>AUTOCOMMIT</code> 1 or 0.</li> <li>In an explicit transaction, only DML and DDL can be included and cannot contain modification parameter configuration or management commands, such as <code>set [parameter] = [value]</code>, <code>create user,</code> and so on.</li> <li>In an explicit transaction, if a write-write conflict occurs when a new transaction is started without an explicit commit or rollback, the previously uncommitted transaction will be rolled back, and an error will be reported.</li> </ul>"},{"location":"MatrixOne/Develop/Transactions/matrixone-transaction-overview/explicit-transaction/#differences-from-mysql-explicit-transactions","title":"Differences from MySQL explicit transactions","text":"Transaction type Turn on autocommit Turn off autocommit Explicit Transactions vs. Autocommit When <code>AUTOCOMMIT=1</code>, MySQL will not change the transaction, and each statement will be executed in a new auto-commit transaction. When <code>AUTOCOMMIT=0</code>, each statement will be executed in an explicitly opened transaction until the transaction is explicitly committed or rolled back. Explicit transactions and non-autocommit When <code>AUTOCOMMIT=1</code>, MySQL will automatically commit uncommitted transactions after each statement execution. When <code>AUTOCOMMIT=0</code>, each statement will be executed in an explicitly opened transaction until the transaction is explicitly committed or rolled back. <p>MySQL and MatrixOne Explicit Transaction Behavior Example</p> <pre><code>mysql&gt; CREATE TABLE Accounts (account_number INT PRIMARY KEY, balance DECIMAL(10, 2));\nQuery OK, 0 rows affected (0.07 sec)\n\nmysql&gt; INSERT INTO Accounts (account_number, balance) VALUES (1, 1000.00), (2, 500.00);\nQuery OK, 2 rows affected (0.00 sec)\n\nmysql&gt; BEGIN;\nQuery OK, 0 rows affected (0.01 sec)\n\nmysql&gt; UPDATE Accounts SET balance = balance - 100.00 WHERE account_number = 1;\nQuery OK, 1 row affected (0.00 sec)\n\nmysql&gt; UPDATE Accounts SET balance = balance + 100.00 WHERE account_number = 2;\nQuery OK, 1 row affected (0.00 sec)\n\nmysql&gt; COMMIT;\nQuery OK, 0 rows affected (0.01 sec)\n\nmysql&gt; BEGIN;\nQuery OK, 0 rows affected (0.00 sec)\n\nmysql&gt; UPDATE Accounts SET balance = balance - 100.00 WHERE account_number = 1;\nQuery OK, 1 row affected (0.00 sec)\n\nmysql&gt; UPDATE Accounts SET invalid_column = 0 WHERE account_number = 2;\nERROR 20101 (HY000): internal error: column 'invalid_column' not found in table\nPrevious DML conflicts with existing constraints or data format. This transaction has to be aborted\nmysql&gt; ROLLBACK;\nQuery OK, 0 rows affected (0.00 sec)\nmysql&gt; SELECT * FROM Accounts;\n+----------------+---------+\n| account_number | balance |\n+----------------+---------+\n|              1 |  900.00 |\n|              2 |  600.00 |\n+----------------+---------+\n2 rows in set (0.01 sec)\n</code></pre>"},{"location":"MatrixOne/Develop/Transactions/matrixone-transaction-overview/explicit-transaction/#cross-database-transaction-behavior-example","title":"Cross-Database Transaction Behavior Example","text":"<p>MatrixOne supports cross-database transaction behavior; here, we'll illustrate it with a simple example.</p> <p>First, let's create two databases (db1 and db2) along with their respective tables (table1 and table2):</p> <pre><code>-- Create the db1 database\nCREATE DATABASE db1;\nUSE db1;\n\n-- Create table1 within db1\nCREATE TABLE table1 (\nid INT AUTO_INCREMENT PRIMARY KEY,\nfield1 INT\n);\n\n-- Create the db2 database\nCREATE DATABASE db2;\nUSE db2;\n\n-- Create table2 within db2\nCREATE TABLE table2 (\nid INT AUTO_INCREMENT PRIMARY KEY,\nfield2 INT\n);\n</code></pre> <p>Now, we have created two databases and their tables. Next, let's insert some data:</p> <pre><code>-- Insert data into table1 in db1\nINSERT INTO db1.table1 (field1) VALUES (100), (200), (300);\n\n-- Insert data into table2 in db2\nINSERT INTO db2.table2 (field2) VALUES (500), (600), (700);\n</code></pre> <p>We now have data in both databases. Moving on, let's execute a cross-database transaction to modify data in these two databases simultaneously:</p> <pre><code>-- Start the cross-database transaction\nSTART TRANSACTION;\n\n-- Update data in table1 within db1\nUPDATE db1.table1 SET field1 = field1 + 10;\n\n-- Update data in table2 within db2\nUPDATE db2.table2 SET field2 = field2 - 50;\n\n-- Commit the cross-database transaction\nCOMMIT;\n</code></pre> <p>In the above cross-database transaction, we begin with <code>START TRANSACTION;</code>, then proceed to update data in table1 within db1 and table2 within db2. Finally, we use <code>COMMIT;</code> to commit the transaction. If any step fails during the transaction, the entire transaction is rolled back to ensure data consistency.</p> <p>This example demonstrates a complete cross-database transaction. Cross-database transactions can be more complex in real-world applications, but this simple example helps us understand the fundamental concepts and operations involved.</p>"},{"location":"MatrixOne/Develop/Transactions/matrixone-transaction-overview/how-to-use/","title":"How to use MatrixOne Transaction?","text":"<p>This document will teach you how to simply start, commit, rollback a transaction, and how to automatically commit a transaction.</p>"},{"location":"MatrixOne/Develop/Transactions/matrixone-transaction-overview/how-to-use/#start-transaction","title":"Start transaction","text":"<p>To start a transaction, you can start a transaction with <code>START TRANSACTION</code>, or you can use the dialect command <code>BEGIN</code>.</p> <p>The code example is as follows:</p> <pre><code>START TRANSACTION;\ninsert into t1 values(123,'123');\n</code></pre> <p>Or:</p> <pre><code>BEGIN;\ninsert into t1 values(123,'123');\n</code></pre>"},{"location":"MatrixOne/Develop/Transactions/matrixone-transaction-overview/how-to-use/#commit-transaction","title":"Commit transaction","text":"<p>When committing a transaction, MatrixOne accepts the <code>COMMIT</code> command as a commit command. The code example is as follows:</p> <pre><code>START TRANSACTION;\ninsert into t1 values(123,'123');\ncommit;\n</code></pre>"},{"location":"MatrixOne/Develop/Transactions/matrixone-transaction-overview/how-to-use/#rollback-transaction","title":"Rollback transaction","text":"<p>When rolling back a transaction, MatrixOne accepts the <code>ROLLBACK</code> command as a commit command. The code example is as follows:</p> <pre><code>START TRANSACTION;\ninsert into t1 values(123,'123');\nrollback;\n</code></pre>"},{"location":"MatrixOne/Develop/Transactions/matrixone-transaction-overview/how-to-use/#autocommit","title":"Autocommit","text":"<p>In MatrixOne, there is a parameter <code>AUTOCOMMIT</code>, which determines whether there is a single SQL statement to be automatically committed as an independent transaction without <code>START TRANSACTION</code> or <code>BEGIN</code>. The syntax is as follows:</p> <pre><code>-- Set the value of this parameter\nSET AUTOCOMMIT={on|off|0|1}  SHOW VARIABLES LIKE 'AUTOCOMMIT';\n</code></pre> <p>When this parameter is set to ON or 1, it means automatic submission. All single SQL statements not in <code>START TRANSACTION</code> or <code>BEGIN</code> will be automatically submitted when executed.</p> <pre><code>-- Autocommit\ninsert into t1 values(1,2,3);   </code></pre> <p>When this parameter is set to OFF or 0, it is not automatically committed. All SQL statements not in <code>START TRANSACTION</code> or <code>BEGIN</code> need to use <code>COMMIT</code> or <code>ROLLBACK</code> to perform commit or rollback.</p> <pre><code>insert into t1 values(1,2,3);\n-- Manual submission is required here\nCOMMIT;  </code></pre>"},{"location":"MatrixOne/Develop/Transactions/matrixone-transaction-overview/how-to-use/#switch-transaction-mode","title":"Switch Transaction Mode","text":"<p>MatrixOne adopts pessimistic transaction and RC isolation level by default. But if you need to switch to optimistic transaction mode, the corresponding isolation level will be changed to snapshot isolation.</p> <p>Add the following configuration parameters to the configuration file cn.toml under the matrixone/etc/launch-with-proxy/ directory to switch the transaction mode:</p> <pre><code>[cn.Txn]\nmode = \"optimistic\"\nisolation = \"SI\"\n</code></pre> <p>Note: If you only add the transaction mode parameter <code>mode = \"optimistic\"</code>, but do not add <code>isolation = \"SI\"</code>, the system will default to SI isolation in the optimistic transaction mode.</p> <p>Restart MatrixOne to make the switched transaction mode take effect.</p> <p>For more information on the configuration parameters, see Distributed Common Parameters Configuration.</p>"},{"location":"MatrixOne/Develop/Transactions/matrixone-transaction-overview/implicit-transaction/","title":"Implicit Transactions in MatrixOne","text":"<p>In MatrixOne's Implicit transactions also obey the following rules:</p>"},{"location":"MatrixOne/Develop/Transactions/matrixone-transaction-overview/implicit-transaction/#implicit-transaction-rules","title":"Implicit transaction rules","text":"<ul> <li> <p>When <code>AUTOCOMMIT</code> changes, if the implicit transaction is not committed, MatrixOne will report an error and prompt the user to submit the change.</p> </li> <li> <p><code>AUTOCOMMIT=0</code>, and when there are no active transactions, DDL (Data Definition Language) and parameter configuration files can be executed.</p> </li> <li> <p>In the case of <code>AUTOCOMMIT=1</code>, each DML (Data Manipulation Language, Data Manipulation Language) statement is a separate transaction and is committed immediately after execution.</p> </li> <li> <p>In the case of <code>AUTOCOMMIT=0</code>, each DML statement will not be submitted immediately after execution, and <code>COMMIT</code> or <code>ROLLBACK</code> needs to be performed manually. If the client exits without committing or rolling back, then Rollback by default.</p> </li> <li> <p>In the case of <code>AUTOCOMMIT=0</code>, DML and DDL can exist at the same time.</p> </li> <li> <p>If a <code>CREATE/DROP DATABASE</code> or <code>CREATE/DROP SEQUENCE</code> operation occurs in the state of <code>AUTOCOMMIT=0</code>, all previously uncommitted content will be forced to be committed. Also, the <code>CREATE/DROP DATABASE</code> functions will be committed immediately as a separate transaction.</p> </li> <li> <p>When there is uncommitted content in the implicit transaction, opening an explicit transaction will force the submission of the previously uncommitted content.</p> </li> </ul>"},{"location":"MatrixOne/Develop/Transactions/matrixone-transaction-overview/implicit-transaction/#the-difference-between-matrixone-and-mysql-implicit-transactions","title":"The difference between MatrixOne and MySQL implicit transactions","text":"<p>In MatrixOne, if the implicit transaction is enabled (<code>SET AUTOCOMMIT=0</code>), all operations must manually execute <code>COMMIT</code> or <code>ROLLBACK</code> to end the transaction. In contrast, MySQL automatically commits when encountering a DDL or similar <code>SET</code> statement.</p>"},{"location":"MatrixOne/Develop/Transactions/matrixone-transaction-overview/implicit-transaction/#mysql-implicit-transaction-behavior","title":"MySQL Implicit Transaction Behavior","text":"Transaction type Turn on autocommit Turn off autocommit Implicit transactions and autocommit When <code>AUTOCOMMIT=1</code>, MySQL will not change the transaction; each statement is a separate auto-commit transaction. When <code>AUTOCOMMIT=0</code>, MySQL also does not change the transaction, but subsequent statements continue to execute within the current transaction until the transaction is explicitly committed or rolled back. Implicit transactions and non-autocommit When <code>AUTOCOMMIT=1</code>, MySQL will automatically commit uncommitted transactions after each statement execution. When <code>AUTOCOMMIT=0</code>, MySQL continues to execute subsequent statements in the current transaction until the transaction is explicitly committed or rolled back. <p>MySQL Implicit Transaction Behavior Example</p> <pre><code>mysql&gt; select @@SQL_SELECT_LIMIT;\n+----------------------+\n| @@SQL_SELECT_LIMIT   |\n+----------------------+\n| 18446744073709551615 |\n+----------------------+\n1 row in set (0.01 sec)\n\nmysql&gt; set autocommit=0;\nQuery OK, 0 rows affected (0.00 sec)\n\nmysql&gt; set SQL_SELECT_LIMIT = 1;\nQuery OK, 0 rows affected (0.00 sec)\n\nmysql&gt; select @@SQL_SELECT_LIMIT;\n+--------------------+\n| @@SQL_SELECT_LIMIT |\n+--------------------+\n|                  1 |\n+--------------------+\n1 row in set (0.01 sec)\n\nmysql&gt; rollback;\nQuery OK, 0 rows affected (0.00 sec)\n\nmysql&gt; select @@SQL_SELECT_LIMIT;\n+--------------------+\n| @@SQL_SELECT_LIMIT |\n+--------------------+\n|                  1 |\n+--------------------+\n1 row in set (0.00 sec)\n\nmysql&gt; set autocommit=0;\nQuery OK, 0 rows affected (0.00 sec)\n\nmysql&gt; set SQL_SELECT_LIMIT = default;\nQuery OK, 0 rows affected (0.00 sec)\n\nmysql&gt; select @@SQL_SELECT_LIMIT;\n+----------------------+\n| @@SQL_SELECT_LIMIT   |\n+----------------------+\n| 18446744073709551615 |\n+----------------------+\n1 row in set (0.00 sec)\n\nmysql&gt; rollback;\nQuery OK, 0 rows affected (0.00 sec)\n\nmysql&gt; select @@SQL_SELECT_LIMIT;\n+----------------------+\n| @@SQL_SELECT_LIMIT   |\n+----------------------+\n| 18446744073709551615 |\n+----------------------+\n1 row in set (0.00 sec)\n</code></pre> <p>MatrixOne Implicit Transaction Behavior Example</p> <pre><code>mysql&gt; select @@SQL_SELECT_LIMIT;\n+----------------------+\n| @@SQL_SELECT_LIMIT   |\n+----------------------+\n| 18446744073709551615 |\n+----------------------+\n1 row in set (0.01 sec)\n\nmysql&gt; set autocommit=0;\nQuery OK, 0 rows affected (0.00 sec)\n\nmysql&gt; set SQL_SELECT_LIMIT = 1;\nQuery OK, 0 rows affected (0.00 sec)\n\nmysql&gt; select @@SQL_SELECT_LIMIT;\n+--------------------+\n| @@SQL_SELECT_LIMIT |\n+--------------------+\n| 1                  |\n+--------------------+\n1 row in set (0.00 sec)\n\nmysql&gt; rollback;\nQuery OK, 0 rows affected (0.00 sec)\n\nmysql&gt; select @@SQL_SELECT_LIMIT;\n+--------------------+\n| @@SQL_SELECT_LIMIT |\n+--------------------+\n| 1                  |\n+--------------------+\n1 row in set (0.01 sec)\n\nmysql&gt; set autocommit=0;\nERROR 20101 (HY000): internal error: Uncommitted transaction exists. Please commit or rollback first.\n</code></pre>"},{"location":"MatrixOne/Develop/Transactions/matrixone-transaction-overview/implicit-transaction/#implicit-transactions-example","title":"Implicit Transactions Example","text":"<p>For example, insert data (4,5,6) to t1, which becomes an implicit transaction. Whether the implicit transaction is committed immediately depends on the value of the <code>AUTOCOMMIT</code> parameter:</p> <pre><code>CREATE TABLE t1(a bigint, b varchar(10), c varchar(10));\nSTART TRANSACTION;\nINSERT INTO t1 values(1,2,3);\nCOMMIT;\n\n-- Check the AUTOCOMMIT parameters\nmysql&gt; SHOW VARIABLES LIKE 'AUTOCOMMIT';\n+---------------+-------+\n| Variable_name | Value |\n+---------------+-------+\n| autocommit    | 1     |\n+---------------+-------+\n1 row in set (0.00 sec)\n-- Here an implicit transaction begins, with each DML committed immediately after execution with AUTOCOMMIT=.1\ninsert into t1 values(4,5,6);\n\n-- Implicit transaction is committed automatically, and the table structure is shown below\nmysql&gt; select * from t1;\n+------+------+------+\n| a    | b    | c    |\n+------+------+------+\n|    1 | 2    | 3    |\n|    4 | 5    | 6    |\n+------+------+------+\n2 rows in set (0.00 sec)\n</code></pre>"},{"location":"MatrixOne/Develop/Transactions/matrixone-transaction-overview/isolation-level/","title":"Isolation level in MatrixOne","text":""},{"location":"MatrixOne/Develop/Transactions/matrixone-transaction-overview/isolation-level/#read-committed","title":"Read Committed","text":"<p>MatrixOne defaults to the Read Committed isolation level and its characteristics are as follows:</p> <ul> <li>Between different transactions, only the data submitted by other transactions can be read, and the uncommitted data cannot be viewed.</li> <li>The read-committed isolation level can effectively prevent dirty writes and dirty reads but cannot avoid non-repeatable reads and phantom reads.</li> </ul>"},{"location":"MatrixOne/Develop/Transactions/matrixone-transaction-overview/isolation-level/#read-committed-principles","title":"Read Committed Principles","text":"<ul> <li>When a transaction starts, the database generates a unique transaction ID.</li> <li>When generating the timestamp of the transaction ID, TAE (Transactional Analytic Engine) automatically detects whether there is an updated timestamp in the corresponding table every time the data is added, deleted, modified, or checked. If so, the updated timestamp is the latest.</li> <li>When operating on data, TAE caches the user data in memory. When committing a transaction, TAE writes the data in memory to the disk (the S3 path where the data is stored or the local disk path).</li> </ul>"},{"location":"MatrixOne/Develop/Transactions/matrixone-transaction-overview/isolation-level/#read-committed-examples","title":"Read Committed Examples","text":"<p>You can participate in the following example to understand the read committed isolation level.</p> <p>First in MatrixOne, we create a database test and table t1:</p> <pre><code>create database test;\nuse test;\nCREATE TABLE t1\n(\ntid INT NOT NULL primary key,\ntname VARCHAR(50) NOT NULL\n);\nINSERT INTO t1 VALUES(1,'version1');\nINSERT INTO t1 VALUES(2,'version2');\n</code></pre> <p>In session 1, start a transaction:</p> <pre><code>use test;\nbegin;\nUPDATE t1 SET tname='version3' WHERE tid=2;\nSELECT * FROM t1;\n</code></pre> <p>In session 1, the results are as follows:</p> <pre><code>+------+----------+\n| tid  | tname    |\n+------+----------+\n|    2 | version3 |\n|    1 | version1 |\n+------+----------+\n</code></pre> <p>At this time, open session 2 to query t1:</p> <pre><code>use test;\nbegin;\nSELECT * FROM t1;\n</code></pre> <p>The result is still the original data:</p> <pre><code>+------+----------+\n| tid  | tname    |\n+------+----------+\n|    1 | version1 |\n|    2 | version2 |\n+------+----------+\n</code></pre> <p>In session 2, modify the line for <code>tid=1</code>:</p> <pre><code>UPDATE t1 SET tname='version0' WHERE tid=1;\n</code></pre> <p>At this point, the content of query <code>t1</code> in session 1 is still the modified data:</p> <pre><code>SELECT * FROM t1;\n+------+----------+\n| tid  | tname    |\n+------+----------+\n|    1 | version1 |\n|    2 | version3 |\n+------+----------+\n</code></pre> <p>After session 2 submits its data, then query session 1, you will find that the content of session 1 has become the data after session two submits:</p> <ul> <li>Session 2:</li> </ul> <pre><code>-- Submit data in session 2:\nCOMMIT;\n</code></pre> <ul> <li>Session 1:</li> </ul> <pre><code>-- Query whether the content of session 1 has become the data submitted by session 2:\nSELECT * FROM t1;\n+------+----------+\n| tid  | tname    |\n+------+----------+\n|    1 | version0 |\n|    2 | version3 |\n+------+----------+\n</code></pre>"},{"location":"MatrixOne/Develop/Transactions/matrixone-transaction-overview/isolation-level/#snapshot-isolation","title":"Snapshot isolation","text":"<p>In MatrixOne, the supported isolation level is Snapshot Isolation, which is also known as <code>REPEATABLE READS</code> to maintain consistency with the isolation level in MySQL. The isolation implementation principle of this level is as follows:</p>"},{"location":"MatrixOne/Develop/Transactions/matrixone-transaction-overview/isolation-level/#snapshot-isolation-principle","title":"Snapshot isolation principle","text":"<ul> <li>When a transaction starts, the database generates a transaction ID for the transaction, which is a unique ID.</li> <li>At the timestamp when the transaction ID is generated, a snapshot of the corresponding data is generated, and all transaction operations are performed based on the snapshot.</li> <li>After the transaction commits to modify the data, release the transaction ID and data snapshot.</li> </ul>"},{"location":"MatrixOne/Develop/Transactions/matrixone-transaction-overview/isolation-level/#snapshot-isolation-example","title":"Snapshot Isolation Example","text":"<p>See the example below to help you understand snapshot isolation.</p> <p>First in MatrixOne, we create a database test and table t1:</p> <pre><code>create database test;\nuse test;\nCREATE TABLE t1\n(\ntid INT NOT NULL primary key,\ntname VARCHAR(50) NOT NULL\n);\nINSERT INTO t1 VALUES(1,'version1');\nINSERT INTO t1 VALUES(2,'version2');\n</code></pre> <p>In session 1, start a transaction:</p> <pre><code>use test;\nbegin;\nUPDATE t1 SET tname='version3' WHERE tid=2;\nSELECT * FROM t1;\n</code></pre> <p>In session 1, the results are as follows, the modification results based on the snapshot data:</p> <pre><code>+------+----------+\n| tid  | tname    |\n+------+----------+\n|    2 | version3 |\n|    1 | version1 |\n+------+----------+\n</code></pre> <p>At this time, open session 2 to query t1:</p> <pre><code>use test;\nSELECT * FROM t1;\n</code></pre> <p>The result is still the original data:</p> <pre><code>+------+----------+\n| tid  | tname    |\n+------+----------+\n|    1 | version1 |\n|    2 | version2 |\n+------+----------+\n</code></pre> <p>Commit the transaction in session 1:</p> <pre><code>COMMIT;\n</code></pre> <p>At this point, the result of t1 in session 2 becomes the submitted data:</p> <pre><code>+------+----------+\n| tid  | tname    |\n+------+----------+\n|    1 | version1 |\n|    2 | version3 |\n+------+----------+\n</code></pre>"},{"location":"MatrixOne/Develop/Transactions/matrixone-transaction-overview/mvcc/","title":"MVCC","text":"<p>MVCC (Multiversion Concurrency Control) is applied to MatrixOne to ensure transaction snapshot and achieve transaction isolation.</p> <p>Create a Latch Free linked list based on the pointer field of the data tuple (Tuple, that is, each row in the table), called the version chain. This version chain allows the database to locate the desired version of a Tuple. Therefore, the storage mechanism of these versions of data is an essential consideration in the design of the database storage engine.</p> <p>One solution is the Append Only mechanism, where all tuple versions of a table are stored in the same storage space. This method is used in Postgre SQL. To update an existing Tuple, the database first fetches an empty slot from the table for the new version; then, it copies the current version's contents to the latest version. Finally, it applies the modifications to the Tuple in the newly allocated Slot. The critical decision of the Append Only mechanism is how to order the version chain of Tuple. Since it is impossible to maintain a lock-free doubly linked list, the version chain only points in one direction, either from Old to New (O2N) or New to Old (N2O).</p> <p>Another similar scheme is called Time Travel, which stores the information of the version chain separately, while the main table maintains the main version data.</p> <p>The third option is to maintain the main version of the tuple in the main table, and maintain a series of delta versions in a separate database comparison tool (delta) store. This storage is called a rollback segment in MySQL and Oracle. To update an existing tuple, the database fetches a contiguous space from the delta store to create a new delta version. This delta version contains the original value of the modified property, not the entire tuple. Then the database directly updates the main version in the main table (In Place Update).</p> <p></p>"},{"location":"MatrixOne/Develop/Transactions/matrixone-transaction-overview/optimistic-transaction/","title":"Optimistic Transactions in MatrixOne","text":""},{"location":"MatrixOne/Develop/Transactions/matrixone-transaction-overview/optimistic-transaction/#optimistic-transaction-principle","title":"Optimistic Transaction principle","text":"<p>When the transaction starts, no conflict detection or lock will be performed, and the relevant data will be cached in the corresponding memory area. The data will be added, deleted, or modified.</p> <p>After completing the modification, when entering the submission stage, it will be submitted in two steps:</p> <p>Step 1: Use a column in the data to be written as the primary key column, lock the column and create a timestamp. Writes to related rows after this timestamp are judged as write conflicts.</p> <p>Step 2: Write data, record the timestamp at this time, and unlock it.</p>"},{"location":"MatrixOne/Develop/Transactions/matrixone-transaction-overview/optimistic-transaction/#optimistic-transaction-model","title":"Optimistic Transaction model","text":"<p>MatrixOne supports an optimistic transaction model. You don't lock a row while reading it using optimistic concurrency. When you want to update a row, the application must determine whether another user has updated the row since it was read. Optimistic concurrent transactions are typically used in environments with low data contention.</p> <p>In an optimistic concurrency model, an error occurs if you receive a value from the database and another user modifies it before you attempt to modify it.</p>"},{"location":"MatrixOne/Develop/Transactions/matrixone-transaction-overview/optimistic-transaction/#example","title":"Example","text":"<p>The following is an example of optimistic concurrency, showing how MatrixOne resolves concurrency conflicts.</p> <ol> <li> <p>At 1:00 PM, User 1 reads a row from the database with the following value:</p> <pre><code>CustID LastName FirstName\n101 Smith Bob\n</code></pre> Column name Original value Current value Value in database CustID 101 101 101 LastName Smith Smith Smith FirstName Bob Bob Bob </li> <li> <p>At 1:01 PM, User 2 reads the same row from the database.</p> </li> <li> <p>At 1:03 PM, User 2 changes the FirstName row from \"Bob\" to \"Robert\" and updates the database.</p> Column name Original value Current value Value in database CustID 101 101 101 LastName Smith Smith Smith FirstName Bob Robert Bob </li> <li> <p>As shown in the above table, the value in the database at the time of the update matches the original value of User 2, indicating that the update was successful.</p> </li> <li> <p>At 1:05 PM, User 1 changes the FirstName row from \"Bob\" to \"James\" and attempts to update it.</p> Column name Original value Current value Value in database CustID 101 101 101 LastName Smith Smith Smith FirstName Bob James Robert </li> <li> <p>At this point, user 1 encounters an optimistic concurrency violation because the value \"Robert\" in the database no longer matches the original value \"Bob\" that user 1 expected. The concurrency violation indicates that the update failed. The next step is to overwrite User 2's changes with User 1's changes or cancel User 1's changes.</p> </li> </ol>"},{"location":"MatrixOne/Develop/Transactions/matrixone-transaction-overview/overview/","title":"Transaction overview of MatrixOne","text":""},{"location":"MatrixOne/Develop/Transactions/matrixone-transaction-overview/overview/#what-is-a-transaction-in-matrixone","title":"What is a transaction in MatrixOne?","text":"<p>MatrixOne transactions follow the Standard Definition and Basic Characteristics (ACID) of database transactions. It aims to help users in a distributed database environment to ensure that every database data operation behavior can ensure the consistency and integrity of the results and isolate each other without interference under concurrent requests.</p>"},{"location":"MatrixOne/Develop/Transactions/matrixone-transaction-overview/overview/#transaction-type-of-matrixone","title":"Transaction type of MatrixOne","text":"<p>In MatrixOne, transactions, like general transactions, are also divided into the following two categories:</p> <ul> <li>According to whether there is a clear start and end, it is divided into explicit and implicit transactions.</li> <li>Divided into optimistic and pessimistic transactions according to the use stage of resource locks.</li> </ul> <p>The classification of these two types of transactions is not limited by each other. An explicit transaction can be an optimistic or pessimistic transaction, and a pessimistic transaction can be either an explicit or an implicit transaction.</p>"},{"location":"MatrixOne/Develop/Transactions/matrixone-transaction-overview/overview/#explicit-transaction","title":"Explicit Transaction","text":"<p>In MatrixOne, a transaction explicitly declared with <code>START TRANSACTION</code> becomes explicit.</p>"},{"location":"MatrixOne/Develop/Transactions/matrixone-transaction-overview/overview/#implicit-transaction","title":"Implicit Transaction","text":"<p>In MatrixOne, if a transaction is not explicitly declared by <code>START TRANSACTION</code> or <code>BEGIN</code>, it is an implicit transaction.</p>"},{"location":"MatrixOne/Develop/Transactions/matrixone-transaction-overview/overview/#optimistic-transaction","title":"Optimistic Transaction","text":"<p>At the beginning of an optimistic transaction, it is assumed that the transaction-related tables are in a state where no write conflicts will occur. The insertion, modification, or deletion of data is cached in memory. At this stage, the data will not be locked, but in the data Lock the corresponding data table or data row when submitting, and unlock it after submitting.</p>"},{"location":"MatrixOne/Develop/Transactions/matrixone-transaction-overview/overview/#pessimistic-transaction","title":"Pessimistic Transaction","text":"<p>MatrixOne defaults to pessimistic transactions. At the beginning of a pessimistic transaction, it is assumed that the transaction-related table is in a state where write conflicts may occur, and the corresponding data table or data row is locked in advance. After the locking action is completed, the data's insertion, modification, or deletion is cached in In memory; after committing or rolling back, the data is completed, and the lock is released.</p>"},{"location":"MatrixOne/Develop/Transactions/matrixone-transaction-overview/overview/#matrixone-supports-cross-database-transactions","title":"MatrixOne Supports Cross-Database Transactions","text":"<p>MatrixOne supports cross-database transactions, allowing a single transaction to access and modify multiple databases simultaneously.</p> <p>In real-world applications, specific business requirements may necessitate operations involving multiple databases. The introduction of cross-database transactions serves to address these needs. This functionality ensures that operations across different databases maintain consistency and isolation as executed within a single database. This means that when you need to perform a series of operations across multiple databases, you can wrap them within a single transaction, facilitating the completion of these operations while preserving data integrity and consistency.</p> <p>Cross-database transactions typically play a pivotal role in complex enterprise application scenarios. Different business functions or departments may use separate databases in these scenarios, yet they need to collaborate to fulfill intricate business requirements. MatrixOne's support for cross-database transactions enhances system flexibility and scalability. However, preserving data integrity and consistency also requires careful design and management.</p>"},{"location":"MatrixOne/Develop/Transactions/matrixone-transaction-overview/overview/#transaction-isolation-level-of-matrixone","title":"Transaction isolation level of MatrixOne","text":"<p>MatrixOne supports two isolation levels: Read Committed and Snapshot Isolation. The default isolation level is Read Committed.</p>"},{"location":"MatrixOne/Develop/Transactions/matrixone-transaction-overview/overview/#read-committed","title":"Read Committed","text":"<p>Read Committed is the default isolation level of MatrixOne after version 0.8, and it is also one of the four isolation levels in the SQL standard. Its most notable features are:</p> <ul> <li>Between different transactions, only the data submitted by other transactions can be read, and the uncommitted data cannot be viewed.</li> <li>The read-committed isolation level can effectively prevent dirty writes and dirty reads but cannot avoid non-repeatable reads and phantom reads.</li> </ul> Isolation Level P0 Dirty Write P1 Dirty Read P4C Cursor Lost Update P4 Lost Update READ COMMITTED Not Possible Not Possible Possible Possible"},{"location":"MatrixOne/Develop/Transactions/matrixone-transaction-overview/overview/#snapshot-isolation","title":"Snapshot Isolation","text":"<p>Different from the four isolation levels defined by the SQL standard, in MatrixOne, the supported isolation level is snapshot isolation (Snapshot Isolation), which is isolated in the REPEATABLE READ and SERIALIZABLE of the SQL-92 standard between. Different from other isolation levels, snapshot isolation has the following characteristics:</p> <ul> <li> <p>Snapshot isolation does not reflect changes made to data by other synchronized transactions for data read within a specified transaction. Specifies that the transaction uses the data rows read at the beginning of this transaction.</p> </li> <li> <p>Data is not locked while being read, so snapshot transactions do not prevent other transactions from writing data.</p> </li> <li> <p>Transactions that write data also do not block snapshot transactions from reading data.</p> </li> </ul> <p>Compared with other isolation levels, snapshot isolation is also suitable for scenarios such as dirty reads (read uncommitted data), dirty writes (write uncommitted records after modification), phantom reads (multiple reads before and after, and the total amount of data is inconsistent) and other scenarios. Effective avoidance is achieved:</p> Isolation Level P0 Dirty Write P1 Dirty Read P4C Cursor Lost Update P4 Lost Update P2 Fuzzy Read P3 Phantom A5A Read Skew A5B Write Skew MatrixOne's Snapshot Isolation Not Possible Not Possible Not Possible Not Possible Not Possible Not Possible Not Possible Possible"},{"location":"MatrixOne/Develop/Transactions/matrixone-transaction-overview/pessimistic-transaction/","title":"Pessimistic Transactions in MatrixOne","text":""},{"location":"MatrixOne/Develop/Transactions/matrixone-transaction-overview/pessimistic-transaction/#pessimistic-transactions-principle","title":"Pessimistic Transactions principle","text":"<p>When a transaction starts, conflict detection or lock operation must be performed. When no conflict or lock is detected, a column in the data to be written will be regarded as the primary key column, the column will be locked, and a timestamp will be created. Writes to related rows after this timestamp are judged as write conflicts.</p> <p>Cache the current relevant data to the corresponding memory area, and add, delete, and modify the data. If there is a lock on the current table, it will enter the waiting state. When the waiting timeout occurs, the waiting transaction will be canceled.</p> <p>After the modification is completed, enter the commit phase, write data, record the timestamp at this time, and unlock the lock.</p>"},{"location":"MatrixOne/Develop/Transactions/matrixone-transaction-overview/pessimistic-transaction/#pessimistic-transaction-model","title":"Pessimistic transaction model","text":"<p>MatrixOne defaults to a pessimistic transaction.</p> <p>Pessimistic concurrent transactions are typically used in environments with high data contention. When you read a row using pessimistic concurrency, the row is not locked. When you want to update a row, the application must determine whether another user has locked the row.</p> <p>In the pessimistic concurrency model, if you receive a value from the database, another user will encounter a lock and enter a waiting state before you try to modify the value. After exceeding the transaction waiting time (5 minutes) set by MatrixOne, Waiting transactions will be forcibly canceled.</p>"},{"location":"MatrixOne/Develop/Transactions/matrixone-transaction-overview/pessimistic-transaction/#deadlock","title":"Deadlock","text":"<p>In a pessimistic transaction, there may be a situation where two or more transactions lock the resources needed by each other, making it impossible for each transaction to proceed. This situation is called dead. Only through human intervention in one of the transactions, for example, by manually <code>Kill</code> the session, can the deadlock be ended immediately; otherwise, the transaction can only wait for the maximum waiting time.</p> <p>An example of a deadlock is shown in the following figure:</p> <p></p>"},{"location":"MatrixOne/Develop/Transactions/matrixone-transaction-overview/pessimistic-transaction/#example","title":"Example","text":"<p>The following is an example of pessimistic concurrency, showing how MatrixOne resolves concurrency conflicts.</p> <ol> <li>At 1:00 PM, User 1 reads a row from the database with the following value:</li> </ol> <pre><code>CustID LastName FirstName\n101 Smith Bob\n</code></pre> Column name Original value Current value Value in database CustID 101 101 101 LastName Smith Smith Smith FirstName Bob Bob Bob <ol> <li> <p>At 1:01 PM, User 2 reads the same row from the database.</p> </li> <li> <p>At 1:03 PM, User 2 changes the FirstName row from \"Bob\" to \"Robert\" and updates the database and the uncommitted state at this time.</p> Column name Original value Current value Value in database CustID 101 101 101 LastName Smith Smith Smith FirstName Bob Robert Bob </li> <li> <p>At 1:05 PM, User 1 changes the FirstName column from \"Bob\" to \"James\" and attempts to update it.</p> Column name Original value Current value Value in database CustID 101 101 101 LastName Smith Smith Smith FirstName Bob James Bob </li> <li> <p>At this point, user 1 encounters a pessimistic concurrency conflict because the row where the value \"Robert\" in the database has been locked and needs to wait for user 2's next operation.</p> </li> <li> <p>At 1:06 PM, User 1 commits to the transaction. At this time, user 2 releases the waiting state and starts the transaction, but because the corresponding FirstName cannot be matched, the transaction update of user 2 fails.</p> </li> </ol>"},{"location":"MatrixOne/Develop/Transactions/matrixone-transaction-overview/scenario/","title":"Transaction ascenarios in MatrixOne","text":"<p>In a financial system, transfers between different users are prevalent scenarios. The actual operation of transfers in the database is usually two steps; first, after deducting the book value of one user and then to another, The user's account amount is increased. Only by using the atomicity of the transaction can we ensure that the total book funds have not changed. At the same time, the accounts between the two users have completed their deductions and increases. For example, user A transfers 50 to user B at this time:</p> <pre><code>start transaction;\nupdate accounts set balance=balance-50 where name='A';\nupdate accounts set balance=balance+50 where name='B';\ncommit;\n</code></pre> <p>When the two <code>update</code> are successful and finally submitted, the entire transfer is truly completed. The entire transaction must be rolled back if any step fails to ensure atomicity.</p> <p>In addition, during the transfer process of the two accounts, before committing, whether it is A or B, you see the book balance that has not been transferred, which is the transaction's isolation.</p> <p>During the transfer process, the database will check whether A's book funds are greater than 50 and whether A and B are indeed in the system. Only when these constraints are satisfied can the consistency of the transaction be guaranteed.</p> <p>After the transfer is completed, whether the system is restarted or not, the data has persisted, reflecting the persistence of the transaction.</p>"},{"location":"MatrixOne/Develop/Vector/cluster_centers/","title":"Cluster Center","text":""},{"location":"MatrixOne/Develop/Vector/cluster_centers/#what-is-a-cluster-center","title":"What is a Cluster Center","text":"<p>When using clustering algorithms, especially K-means, the number of clusters K represents the number of clusters into which you want to divide the data set. Each cluster is represented by its centroid, which is the central point or average position of all data points within the cluster.</p> <p>In the K-means algorithm, the choice of K has a great influence on the clustering results. Choosing the right K value can help you better understand the structure and pattern of your data. If the K value is not chosen properly, it can cause the following problems:</p> <ul> <li>The K value is too small: it can cause different clusters to merge together, losing important patterns in the data.</li> <li>K-values are too large: may result in over-segmentation of data, with each cluster containing very few data points, which may mask general trends in the data.</li> </ul> <p>Matrixone provides a cluster center query to determine the K cluster centers of a vector column.</p>"},{"location":"MatrixOne/Develop/Vector/cluster_centers/#application-scenarios-for-clustering-centers","title":"Application scenarios for clustering centers","text":"<p>Clustering plays an important role in data analysis and machine learning. Here are some of the main application scenarios for clustering centers:</p> <ul> <li> <p>Market segmentation: In market analysis, clustering centers can help identify different customer group characteristics to customize marketing strategies for each group.</p> </li> <li> <p>Image segmentation: In image processing, clustering centers are used to distinguish different regions or objects in an image, often used for image compression and segmentation.</p> </li> <li> <p>Social network analysis: Cluster centers allow the identification of groups of users with similar behaviors or interests in social networks.</p> </li> <li> <p>Anomaly detection: Cluster centers can help identify anomalies in the data, as anomalies are often far from all cluster centers.</p> </li> <li> <p>Astronomical data analysis: In astronomy, clustering centers can be used to identify the characteristics of clusters of galaxies or star clusters.</p> </li> </ul>"},{"location":"MatrixOne/Develop/Vector/cluster_centers/#involve-algorithms","title":"involve algorithms","text":"<p>Determining the clustering center of a vector dataset in Matrixone involves the following algorithms:</p> <ul> <li> <p>Random: In random initialization, the algorithm randomly selects n_clusters of observations from the data set as the initial centroid. This method is simple and fast, but may result in the quality of the clustering results depending on the selection of the initial centroid, as random selection may not fall in a dense region of the data.</p> </li> <li> <p>K-means++ (k-means++ initialization): k-means++ is a more advanced initialization method designed to improve the inadequacy of random initialization by selecting the initial centroid through a multi-step process to increase the probability that the selected centroid points represent the overall distribution of data.</p> </li> <li> <p>Regular Kmeans: A widely used clustering method designed to divide data points into K clusters so that data points within clusters are as similar as possible and data points between clusters as different as possible. This method measures similarity between data points based on Euclidean distance, so it is better suited for processing data in plane space.</p> </li> <li> <p>Spherical Kmeans: An algorithm for clustering data points. The process of calculating the center of a cluster by the Spherical K-means algorithm involves normalizing the data points. Especially suitable for high-dimensional and sparse high-dimensional and sparse, or data where the directionality of the data points is more important than the distance, such as text data, geographic location or user interest models.</p> </li> </ul>"},{"location":"MatrixOne/Develop/Vector/cluster_centers/#examples","title":"Examples","text":""},{"location":"MatrixOne/Develop/Vector/cluster_centers/#example-1","title":"Example 1","text":"<p>Suppose we have annual shopping data for a set of customers, including their annual income and total annual consumption. We want to use this data to understand our customers' consumption behavior and break it down into different consumer behavior groups.</p>"},{"location":"MatrixOne/Develop/Vector/cluster_centers/#steps","title":"Steps","text":"<ol> <li> <p>Create customer table and insert data</p> <p>Prepare a table named <code>customer_table</code> that inserts 10 pieces of customer data. The two-dimensional vector represents the customer's annual revenue and total annual consumption.</p> <pre><code>CREATE TABLE customer_table(id int auto_increment PRIMARY KEY,in_ex vecf64(2));\nINSERT INTO customer_table(in_ex) VALUES(\"[120,50]\"),(\"[80,25]\"),(\"[200,100]\"),(\"[100,40]\"),(\"[300,120]\"),(\"[150,75]\"),(\"[90,30]\"),(\"[250,90]\"),(\"[75,20]\"),(\"[150,60]\");\n\nmysql&gt; select * from customer_table;\n+------+------------+\n| id   | in_ex      |\n+------+------------+\n|    1 | [120, 50]  |\n|    2 | [80, 25]   |\n|    3 | [200, 100] |\n|    4 | [100, 40]  |\n|    5 | [300, 120] |\n|    6 | [150, 75]  |\n|    7 | [90, 30]   |\n|    8 | [250, 90]  |\n|    9 | [75, 20]   |\n|   10 | [150, 60]  |\n+------+------------+\n10 rows in set (0.01 sec)\n</code></pre> </li> <li> <p>Determining the Cluster Center</p> <pre><code>mysql&gt; SELECT cluster_centers(in_ex kmeans '2,vector_l2_ops,random,false') AS centers FROM customer_table;\n+------------------------------------------------------------------------+\n| centers                                                                |\n+------------------------------------------------------------------------+\n| [ [109.28571428571428, 42.857142857142854],[250, 103.33333333333333] ] |\n+------------------------------------------------------------------------+\n1 row in set (0.00 sec)\n</code></pre> </li> <li> <p>Check Cluster Center</p> <p>A good cluster usually appears as a distinctly separated group in the visualization. As can be seen from the figure below, the cluster center selection is more appropriate.</p> <p> </p> </li> </ol> <p>By identifying cluster centers, we can divide our customers into two groups: those with middle income and middle consumption levels (cluster center A) and those with higher income and higher consumption levels (cluster center B). Merchants can tailor their product positioning to each group's consumption characteristics, such as offering better value for money for Cluster Center A and high-end or luxury brands for Cluster Center B.</p>"},{"location":"MatrixOne/Develop/Vector/cluster_centers/#example-2","title":"Example 2","text":"<p>A music streaming service wants to divide users into groups based on their preferences for different music types in order to offer personalized playlists. They collected user preference ratings (1 for disinterested and 5 for very fond) for five music types: rock, pop, jazz, classical, and hip-hop.</p>"},{"location":"MatrixOne/Develop/Vector/cluster_centers/#steps_1","title":"Steps","text":"<ol> <li> <p>Build music type table and insert data</p> <p>Prepare a table named <code>music_table</code> that inserts 5 pieces of user data. The five-dimensional vectors correspond to user preference scores for five genres of music: rock, pop, jazz, classical and hip-hop.</p> <pre><code>CREATE TABLE music_table(id int,grade vecf64(5));\nINSERT INTO music_table VALUES(1,\"[5,2,3,1,4]\"),(2,\"[3,5,2,1,4]\"),(3,\"[4,3,5,1,2]\"),(4,\"[2,5,4,3,1]\"),(5,\"[5,4,3,2,5]\");\n\nmysql&gt; select * from music_table;\n+------+-----------------+\n| id   | grade           |\n+------+-----------------+\n|    1 | [5, 2, 3, 1, 4] |\n|    2 | [3, 5, 2, 1, 4] |\n|    3 | [4, 3, 5, 1, 2] |\n|    4 | [2, 5, 4, 3, 1] |\n|    5 | [5, 4, 3, 2, 5] |\n+------+-----------------+\n5 rows in set (0.01 sec)\n</code></pre> </li> <li> <p>View vector normalization results</p> <pre><code>mysql&gt; select normalize_l2(grade) from music_table;\n+---------------------------------------------------------------------------------------------------------+\n| normalize_l2(grade)                                                                                     |\n+---------------------------------------------------------------------------------------------------------+\n| [0.6741998624632421, 0.26967994498529685, 0.40451991747794525, 0.13483997249264842, 0.5393598899705937] |\n| [0.40451991747794525, 0.6741998624632421, 0.26967994498529685, 0.13483997249264842, 0.5393598899705937] |\n| [0.5393598899705937, 0.40451991747794525, 0.6741998624632421, 0.13483997249264842, 0.26967994498529685] |\n| [0.26967994498529685, 0.6741998624632421, 0.5393598899705937, 0.40451991747794525, 0.13483997249264842] |\n| [0.562543950463012, 0.4500351603704096, 0.3375263702778072, 0.2250175801852048, 0.562543950463012]      |\n+---------------------------------------------------------------------------------------------------------+\n5 rows in set (0.01 sec)\n</code></pre> </li> <li> <p>Determining the Cluster Center</p> <pre><code>mysql&gt; SELECT cluster_centers(grade kmeans '2,vector_l2_ops,kmeansplusplus,true') AS centers FROM music_table;\n+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+\n| centers                                                                                                                                                                                                          |\n+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+\n| [ [0.3370999312316211, 0.6741998624632421, 0.40451991747794525, 0.26967994498529685, 0.3370999312316211],[0.5920345676322826, 0.3747450076112172, 0.4720820500729982, 0.16489917505683388, 0.4571945951396342] ] |\n+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+\n1 row in set (0.00 sec)\n</code></pre> </li> <li> <p>Check Cluster Center</p> <p>Use t-SNE to reduce high-dimensional data to 2D and visualize clustering results. As can be seen from the figure below, the data points are clearly separated by cluster centers in the space after dimension reduction, which increases confidence in the correctness of the cluster centers.</p> <p> </p> </li> </ol> <p>By determining the cluster centers, we can divide users into two groups: Cluster 1 is primarily composed of users who prefer rock and hip hop music, which may represent a group of users seeking modern and rhythmic music. Cluster 2 is composed of users who prefer pop and jazz music, which may represent a group of users who prefer melodic and relaxed atmosphere music. Media companies can push out styles of music for users based on their preferences.</p>"},{"location":"MatrixOne/Develop/Vector/cluster_centers/#reference-documents","title":"Reference Documents","text":"<p>Vector data type</p> <p>CLUSTER_CENTERS()</p> <p>L2_DISTANCE()</p> <p>NORMALIZE_L2()</p>"},{"location":"MatrixOne/Develop/Vector/vector_search/","title":"Vector retrieval","text":""},{"location":"MatrixOne/Develop/Vector/vector_search/#what-is-vector-retrieval","title":"What is vector retrieval","text":"<p>Vector retrieval is the retrieval of K vectors (K-Nearest Neighbor, KNN) that are close to the query vectors in a given vector dataset by some measure. This is a technique for finding vectors similar to a given query vector in large-scale high-dimensional vector data. Vector retrieval has a wide range of applications in many AI fields, such as image retrieval, text retrieval, speech recognition, recommendation systems, and more. Vector retrieval is very different from traditional database retrieval.Scalar search on traditional database mainly targets structured data for accurate data query,while vector search mainly targets vector data after vectorization of unstructured data for similar retrieval,which can only approximate the best match.</p> <p>Matrixone currently supports vector retrieval using the following distance measure functions:</p> <ul> <li>Cosine similarity function <code>cosine_similarity</code></li> <li>Cosine distance function <code>cosine_distance</code></li> <li>L2 distance function <code>l2_distance</code></li> </ul> <p>!!! note Matrixone currently only supports fast KNN queries using vector indexes on the l2_distance measure.</p>"},{"location":"MatrixOne/Develop/Vector/vector_search/#application-scenarios-for-vector-retrieval","title":"Application scenarios for vector retrieval","text":"<p>Having vector capability in a database means that the database system has the ability to store, query, and analyze vector data. These vectors are often associated with complex data analysis, machine learning, and data mining tasks. Here are some application scenarios where the database has vector processing power:</p> <ul> <li>Generative AI applications: These databases can serve as the backend for generative AI applications, enabling them to obtain nearest neighbor results based on user-supplied queries, improving output quality and relevance.</li> <li>Advanced object recognition: They are invaluable for developing advanced object recognition platforms that recognize similarities between different data sets. This has practical applications in areas such as plagiarism detection, facial recognition and DNA matching.</li> <li>Personalized recommendation systems: Vector databases can enhance recommendation systems by integrating user preferences and choices. This will result in more accurate and targeted recommendations that improve the user experience and engagement.</li> <li>Anomaly detection: A vector database can be used to store feature vectors representing normal behavior. The anomaly can then be detected by comparing the input vector with the storage vector. This is useful in cybersecurity and industrial quality control.</li> <li>Marketing optimization: Through the analysis and mining of user data, vector database can realize personalized recommendations, customer segmentation and market trend forecasting, and other functions to provide enterprises with accurate marketing strategies.</li> <li>Natural language processing: Vector database can process large-scale text data, realize semantic similarity search, text classification, document clustering and other natural language processing tasks, widely used in intelligent customer service, public opinion analysis and other fields.</li> <li>Semantic Search and Retrieval: In applications involving large language models, vector databases can store and retrieve massive amounts of text vectors, and intelligent text matching and semantic search can be achieved by calculating similarities between vectors.</li> </ul>"},{"location":"MatrixOne/Develop/Vector/vector_search/#examples","title":"Examples","text":"<p>The Iris dataset is a well-known multi-class taxonomic dataset that can be searched and downloaded online by itself. This dataset contains 150 samples divided into 3 categories: Iris Setosa (mountain iris), Iris Versicolour (chromatic iris) and Iris Virginica (virginian iris). Each sample has 4 characteristics: sepal length, sepal width, petal length, and petal width. Below we perform a KNN query (based on l2_distance) on the Iris dataset to determine the type of sample by identifying the K samples that most closely resemble a particular sample based on its characteristics.</p> <ol> <li> <p>Create Iris tables and import data</p> <p>Prepare a table named <code>iris_table</code> and the corresponding Iris dataset data. The dataset has 150 rows of data, each row consisting of a four-dimensional eigenvector and species.</p> <pre><code>CREATE TABLE iris_table(\nspecies varchar(100), --category \nattributes vecf64(4) --feature\n); LOAD DATA INFILE '/your_path/iris.csv' INTO TABLE iris_table;\n</code></pre> </li> <li> <p>Use KNN to predict the category of this input feature</p> <pre><code>mysql&gt;  select * from iris_table order by l2_distance(attributes,\"[4,3.3,3,0.9]\") asc limit 1;\n+------------------+--------------------+\n| species          | attributes         |\n+------------------+--------------------+\n| Iris-versicolour | [4.9, 2.4, 3.3, 1] |\n+------------------+--------------------+\n1 row in set (0.00 sec)\n\nmysql&gt;  select * from iris_table order by l2_distance(attributes,\"[4,3.3,3,0.9]\") asc limit 5;\n+------------------+----------------------+\n| species          | attributes           |\n+------------------+----------------------+\n| Iris-versicolour | [4.9, 2.4, 3.3, 1]   |\n| Iris-versicolour | [5.1, 2.5, 3, 1.1]   |\n| Iris-versicolour | [5, 2.3, 3.3, 1]     |\n| Iris-setosa      | [4.8, 3.4, 1.9, 0.2] |\n| Iris-versicolour | [5.2, 2.7, 3.9, 1.4] |\n+------------------+----------------------+\n5 rows in set (0.00 sec)\n</code></pre> </li> </ol> <p>After searching, we can roughly determine that the sample type is discolored Iris.</p> <p>To understand the role of vector retrieval in building RAG applications, refer to the RAG Application Foundation example in the View Application Development Example.</p>"},{"location":"MatrixOne/Develop/Vector/vector_search/#reference-documents","title":"Reference Documents","text":"<p>Vector data type</p> <p>L2_DISTANCE()</p>"},{"location":"MatrixOne/Develop/Vector/vector_type/","title":"Vector Type","text":""},{"location":"MatrixOne/Develop/Vector/vector_type/#what-is-a-vector","title":"What is a vector?","text":"<p>In a database, vectors are usually a set of numbers that are arranged in a particular way to represent some data or feature. These vectors can be one-dimensional arrays, multi-dimensional arrays, or data structures with higher dimensions. In machine learning and data analysis, vectors are used to represent data points, features, or model parameters. They are typically used to process unstructured data, such as pictures, speech, text, etc., to transform the unstructured data into embedding vectors through machine learning models and subsequently process and analyze the data.</p>"},{"location":"MatrixOne/Develop/Vector/vector_type/#matrixone-support-vector-type","title":"Matrixone support vector type","text":"<p>Traditional vector databases are specially designed to process high-dimensional vector data,which are basically unstructured and have certain limitations. They may not provide as rich support for non-vector fields (e.g., metadata or text descriptions) as traditional relational databases, and lack the ability to handle complex data relationships and transactions, as well as insufficient functionality for data integrity constraints and metadata management. Therefore, vector databases may not be suitable for scenarios requiring complex queries, diverse data type support, or strong data consistency guarantees.</p> <p>MatrixOne, as a relational database with vector capabilities, provides powerful data management capabilities. MatrixOne combines the transactional consistency, data integrity, ease of integration, and rich tool ecosystem of traditional relational databases, while adding the ability to store high-dimensional vector data and efficiently search for similarities. This combination enables databases to uniformly manage and query structured and unstructured data, supporting complex AI and machine learning applications while maintaining data security and governance, reducing maintenance costs and system complexity, and providing flexible and comprehensive data solutions for modern applications.</p> <p>Matrixone currently supports vectors of type <code>float32</code> and <code>float64</code>, called <code>vecf32</code> and <code>vecf64</code> respectively, and does not support numbers of type string and integer.</p>"},{"location":"MatrixOne/Develop/Vector/vector_type/#best-practices","title":"Best Practices","text":"<ul> <li> <p>Vector type conversion: When converting a vector from one type to another, it is recommended to specify both dimensions. For example:</p> <pre><code>SELECT b + CAST(\"[1,2,3]\" AS vecf32(3)) FROM t1; </code></pre> <p>This approach ensures accuracy and consistency in vector type conversion.</p> </li> <li> <p>Use binary format: To improve overall insertion performance, consider using binary format instead of text format. Make sure the array is in small end-order format before converting to hexadecimal encoding. The following is sample Python code:</p> <pre><code>import binascii\n# 'value' is a NumPy object\ndef to_binary(value): if value is None: return value\n\n    # small endian floating point array\n    value = np.asarray(value, dtype='&lt;f')\n\n    if value.ndim != 1:\n        raise ValueError('Expected ndim to be 1')\n\n    return binascii.b2a_hex(value)\n</code></pre> <p>This approach can significantly improve the efficiency of data insertion.</p> </li> <li> <p>Building RAG application: See the RAG Application Basics Example example in the app development example for details.</p> </li> <li> <p>Building a map (text) search application: For more information, check out the Example of a basic map search application Foundation example in the app development example.</p> </li> </ul>"},{"location":"MatrixOne/Develop/Vector/vector_type/#reference-documents","title":"Reference Documents","text":"<p>Vector data type</p>"},{"location":"MatrixOne/Develop/connect-mo/configure-mo-ssl-connection/","title":"How to configure MatrixOne SSL connection","text":""},{"location":"MatrixOne/Develop/connect-mo/configure-mo-ssl-connection/#overview","title":"Overview","text":"<p>This document describes how to configure your MatrixOne server to use SSL for database connections. After you secure your MatrixOne connections, malicious users cannot intercept your traffic.</p>"},{"location":"MatrixOne/Develop/connect-mo/configure-mo-ssl-connection/#configure-matrixone-ssl-connections","title":"Configure MatrixOne SSL connections","text":""},{"location":"MatrixOne/Develop/connect-mo/configure-mo-ssl-connection/#create-the-directory-to-store-the-ssl-keys","title":"Create the directory to store the SSL keys","text":"<p>To create the directory that will contain the SSL keys, perform the following steps:</p> <ol> <li> <p>Log into your server via SSH. Check if you have the <code>mysql_ssl_rsa_setup</code> tool in place. Usually if you have installed MySQL, the <code>mysql_ssl_rsa_setup</code> binary will also be installed.</p> <p>If you try to execute this command <code>mysql_ssl_rsa_setup</code> and you see this following message, it means you have installed it. If not, please install MySQL first, and this <code>mysql_ssl_rsa_setup</code> will be installed along. You can also check the path of <code>mysql_ssl_rsa_setup</code> binary file with <code>whereis mysql_ssl_rsa_setup</code>.</p> <pre><code>[pcusername@VM-0-12-centos matrixone]$ mysql_ssl_rsa_setup\n2022-10-19 10:57:30 [ERROR]   Failed to access directory pointed by --datadir. Please make sure that directory exists and is accessible by mysql_ssl_rsa_setup. Supplied value : /var/lib/mysql\n[pcusername@VM-0-12-centos matrixone]$ whereis mysql_ssl_rsa_setup\nmysql_ssl_rsa_setup: /usr/bin/mysql_ssl_rsa_setup /usr/share/man/man1/mysql_ssl_rsa_setup.1.gz\n</code></pre> </li> <li> <p>Create an SSL key storage directory that MatrixOne can access. For example, run the <code>mkdir /home/user/mo_keys</code> command to create a <code>mo_keys</code> directory.</p> </li> </ol>"},{"location":"MatrixOne/Develop/connect-mo/configure-mo-ssl-connection/#create-the-ssl-keys","title":"Create the SSL keys","text":"<p>To create the SSL keys, perform the following steps:</p> <ol> <li> <p>Run the following commands to create the Certificate Authority (CA) keys:</p> <pre><code>mysql_ssl_rsa_setup --datadir=/home/user/mo_keys\n</code></pre> <p>You'll see in this folder a list of <code>.pem</code> files.</p> <p>/mo_keys \u251c\u2500\u2500 ca-key.pem \u251c\u2500\u2500 ca.pem \u251c\u2500\u2500 client-cert.pem \u251c\u2500\u2500 client-key.pem \u251c\u2500\u2500 private_key.pem \u251c\u2500\u2500 public_key.pem \u251c\u2500\u2500 server-cert.pem \u2514\u2500\u2500 server-key.pem</p> </li> <li> <p>Insert the following lines in the <code>[cn.frontend]</code> section of the <code>etc /launch-with-proxy/cn.toml</code> file in MatrixOne folder:</p> <pre><code>[cn.frontend]\nenableTls = true\ntlsCertFile = \"/home/user/mo_keys/server-cert.pem\"\ntlsKeyFile = \"/home/user/mo_keys/server-key.pem\"\ntlsCaFile = \"/home/user/mo_keys/ca.pem\"\n</code></pre> <p>If <code>[cn.frontend]</code> section doesn't exist in the MatrixOne system setting file, you can just create one with the above settings.</p> </li> </ol>"},{"location":"MatrixOne/Develop/connect-mo/configure-mo-ssl-connection/#test-the-ssl-configuration","title":"Test the SSL configuration","text":"<p>To test the SSL configuration, perform the following steps:</p> <ol> <li> <p>Launch MatrixOne service. Please refer to Deploy standalone MatrixOne.</p> </li> <li> <p>Connect to MatrixOne service by MySQL client:</p> <pre><code>mysql -h IP_ADDRESS -P 6001 -uroot -p111\n</code></pre> </li> <li> <p>After you connect, run the <code>status</code> command. The output will resemble the following example:</p> <pre><code>mysql&gt; status\n--------------\nmysql  Ver 8.0.28 for Linux on x86_64 (MySQL Community Server - GPL)\n\nConnection id:      1001\nCurrent database:\nCurrent user:       root@0.0.0.0\nSSL:            Cipher in use is TLS_AES_128_GCM_SHA256\nCurrent pager:      stdout\nUsing outfile:      ''\nUsing delimiter:    ;\nServer version:     8.0.30-MatrixOne-v1.2.3 MatrixOne\nProtocol version:   10\nConnection:     127.0.0.1 via TCP/IP\nClient characterset:    utf8mb4\nServer characterset:    utf8mb4\nTCP port:       6002\nBinary data as:     Hexadecimal\n--------------\n</code></pre> </li> </ol>"},{"location":"MatrixOne/Develop/connect-mo/connect-to-matrixone-with-c%23/","title":"C# Connections","text":"<p>MatrixOne supports C# connectivity and supports the MySQL Connector/NET driver.</p> <p>This document will guide you through the process of connecting to MatrixOne using C#.</p>"},{"location":"MatrixOne/Develop/connect-mo/connect-to-matrixone-with-c%23/#prepare-for-the-start","title":"Prepare for the start","text":"<ul> <li> <p>Completed Installation and startup of MatrixOne.</p> </li> <li> <p>Installed . NET Core SDK.</p> </li> <li> <p>Installed MySQL Client.</p> </li> </ul>"},{"location":"MatrixOne/Develop/connect-mo/connect-to-matrixone-with-c%23/#connecting-matrixone","title":"Connecting Matrixone","text":""},{"location":"MatrixOne/Develop/connect-mo/connect-to-matrixone-with-c%23/#step-1-create-c-application","title":"Step 1: Create C# Application","text":"<p>Use the dotnet command to create a new console application. For example, create a new application called myapp.</p> <pre><code>dotnet new console -o myapp\n</code></pre> <p>Then switch to the myapp directory</p>"},{"location":"MatrixOne/Develop/connect-mo/connect-to-matrixone-with-c%23/#step-2add-mysql-connectornet-nuget-package","title":"Step 2:Add MySQL Connector/NET NuGet Package","text":"<p>Install the MySql.Data package using the NuGet package manager.</p> <pre><code>dotnet add package MySql.Data\n</code></pre>"},{"location":"MatrixOne/Develop/connect-mo/connect-to-matrixone-with-c%23/#step-3-connecting-matrixone","title":"Step 3: Connecting Matrixone","text":"<p>Write the following code in the Program.cs file.</p> <pre><code>using System;\nusing MySql.Data.MySqlClient;\n\nclass Program\n{\n    static void Main(string[] args)\n    {\n        Program n =new Program();\n        string connectionString = \"server=127.0.0.1;user=root;database=test;port=6001;password=111\";\n        using (MySqlConnection connection = new MySqlConnection(connectionString))\n        {\n            try{\n            connection.Open();\n            Console.WriteLine(\"Connection successfully established\");\n            }\n            catch (MySqlException ex)\n            {\n                Console.WriteLine(ex.Message);\n            }\n            finally\n            {\n                connection.Close();\n            }\n        }\n    }\n}\n</code></pre>"},{"location":"MatrixOne/Develop/connect-mo/connect-to-matrixone-with-c%23/#step-4-run-the-program","title":"Step 4: Run the program","text":"<p>Execute the command <code>dotnet run</code> in the terminal.</p> <pre><code>(base) admin@admindeMacBook-Pro myapp % dotnet run    \nConnection successfully established\n</code></pre>"},{"location":"MatrixOne/Develop/connect-mo/connect-to-matrixone-with-c%23/#reference-document","title":"reference document","text":"<p>For an example of using C# to build a simple CRUD with MatrixOne, see C# Basic Examples. /... /Tutorial/c-net-crud-demo.md).</p>"},{"location":"MatrixOne/Develop/connect-mo/connect-to-matrixone-with-go/","title":"Connecting to MatrixOne with Golang","text":"<p>MatrixOne supports Golang application connection, <code>Go-MySQL-Driver</code> is supported. This tutorial will walk you through how to connect MatrixOne with Golang.</p>"},{"location":"MatrixOne/Develop/connect-mo/connect-to-matrixone-with-go/#before-you-start","title":"Before you start","text":"<ol> <li>Make sure you have already installed and launched MatrixOne.</li> <li> <p>Make sure you have already installed Golang 1.18 and plus.  </p> <pre><code>#To check with Golang installation and its version\ngo version\n</code></pre> </li> <li> <p>Make sure you have already installed MySQL client.</p> </li> </ol>"},{"location":"MatrixOne/Develop/connect-mo/connect-to-matrixone-with-go/#using-golang-to-connect-to-matrixone","title":"Using Golang to connect to MatrixOne","text":"<p><code>Go-MySQL-Driver</code> is a MySQL driver for Go's (golang) database/sql package.</p> <ol> <li> <p>Install <code>go-mysql-driver</code> tool. Simple install the package to your $GOPATH with the go tool from shell. Make sure Git is installed on your machine and in your system's <code>PATH</code>.</p> <pre><code>&gt; go get -u github.com/go-sql-driver/mysql\n</code></pre> </li> <li> <p>Connect to MatrixOne by MySQL client. Create a new database named test.</p> <pre><code>mysql&gt; create database test;\n</code></pre> </li> <li> <p>Create a plain text file <code>golang_connect_matrixone.go</code> and put the code below.</p> <pre><code>package main\n\nimport (\n    \"database/sql\"\n    \"fmt\"\n    _ \"github.com/go-sql-driver/mysql\"\n)\n\nfunc main() {\n    //\"username:password@[protocol](address:port)/database\"\n    db, _ := sql.Open(\"mysql\", \"root:111@tcp(127.0.0.1:6001)/test\") // Set database connection\n    defer db.Close()                                            //Close DB\n    err := db.Ping()                                            //Connect to DB\n    if err != nil {\n        fmt.Println(\"Database Connection Failed\")               //Connection failed\n        return\n    } else {\n        fmt.Println(\"Database Connection Succeed\")              //Connection succeed\n    }\n}\n</code></pre> </li> <li> <p>Execute this golang file in the command line terminal.</p> <pre><code>&gt; go run golang_connect_matrixone.go\nDatabase Connection Succeed\n</code></pre> </li> </ol>"},{"location":"MatrixOne/Develop/connect-mo/connect-to-matrixone-with-go/#using-gorm-to-connect-to-matrixone","title":"Using Gorm to connect to MatrixOne","text":"<p>Gorm is the fantastic ORM library for Golang and aims to be developer-friendly. <code>gorm.io/gorm</code> and <code>gorm.io/driver/mysql</code> will make Go connect to MYSQL.</p> <ol> <li> <p>Use command <code>go get</code> to install <code>gorm.io/gorm</code> and <code>gorm.io/driver/mysql</code>.</p> <pre><code>go get -u gorm.io/gorm\ngo get -u gorm.io/driver/mysql\n</code></pre> </li> <li> <p>Connect to MatrixOne by MySQL client. Create a new database named test.</p> <pre><code>mysql&gt; create database test;\n</code></pre> </li> <li> <p>Create a go file <code>golang_gorm_connect_matrixone.go</code> and put the code below.</p> <pre><code>package main\nimport (\n\"gorm.io/driver/mysql\"\n\"gorm.io/gorm\"\n\"fmt\"\n)\nfunc getDBConn() *gorm.DB {\ndsn := \"root:111@tcp(127.0.0.1:6001)/test?charset=utf8mb4&amp;parseTime=True&amp;loc=Local\" //MO \ndb, err := gorm.Open(mysql.Open(dsn), &amp;gorm.Config{ })\n// get connection\nif err != nil {\nfmt.Println(\"Database Connection Failed\") //Connection failed\n} else {\nfmt.Println(\"Database Connection Succeed\") //Connection succeed\n}\nreturn db\n}\nfunc main() {\ngetDBConn()\n}\n</code></pre> </li> <li> <p>Execute this go file in the command line terminal.</p> <pre><code>&gt; go run golang_gorm_connect_matrixone.go\nDatabase Connection Succeed\n</code></pre> </li> </ol>"},{"location":"MatrixOne/Develop/connect-mo/connect-to-matrixone-with-go/#reference","title":"Reference","text":"<p>For the example about using Golang to build a simple CRUD with MatrixOne, see Build a simple Golang CRUD demo with MatrixOne.</p> <p>For the example about using Gorm to build a simple CRUD with MatrixOne, see Build a simple Gorm CRUD demo with MatrixOne.</p>"},{"location":"MatrixOne/Develop/connect-mo/database-client-tools/","title":"Connecting to MatrixOne with Database Client Tool","text":"<p>MatrixOne now supports the following Database client tools:</p> <ul> <li>MySQL Client</li> <li>Navicat</li> <li>DBeaver</li> </ul>"},{"location":"MatrixOne/Develop/connect-mo/database-client-tools/#before-you-start","title":"Before you start","text":"<p>Make sure you have already installed and launched MatrixOne.</p>"},{"location":"MatrixOne/Develop/connect-mo/database-client-tools/#connect-to-the-matrixone-server-through-mysql-client","title":"Connect to the MatrixOne Server through MySQL Client","text":"<ol> <li> <p>Download and install MySQL Client.</p> </li> <li> <p>Connect to the MatrixOne server.</p> <p>You can use the MySQL command-line client to connect to MatrixOne server:</p> <pre><code>mysql -h IP -P PORT -uUsername -p\n</code></pre> <p>The connection string is the same format as MySQL accepts. You need to provide a user name and a password.</p> <p>Use the built-in test account for example:</p> <ul> <li>user: root</li> <li>password: 111</li> </ul> <pre><code>mysql -h 127.0.0.1 -P 6001 -uroot -p\nEnter password:\n</code></pre> <p>Info</p> <p>The login account in the above code snippet is the initial account; please change the initial password after logging in to MatrixOne; see Password Management.</p> <p>The successful result is as below:</p> <pre><code>Welcome to the MySQL monitor. Commands end with ; or \\g. Your MySQL connection id is 1031\nServer version: 8.0.30-MatrixOne-v1.2.3 MatrixOne\nCopyright (c) 2000, 2022, Oracle and/or its affiliates.\n\nOracle is a registered trademark of Oracle Corporation and/or its affiliates. Other names may be trademarks of their respective owners.\nType 'help;' or '\\h' for help. Type '\\c' to clear the current input statement.\n</code></pre> </li> </ol> <p>For more information on deployment, see Deployment FAQs.</p> <p>Note</p> <p>MatrixOne and the client use non-encrypted transmission by default. Refer to Data Transmission Encryption to enable encrypted transmission.</p>"},{"location":"MatrixOne/Develop/connect-mo/database-client-tools/#connect-to-the-matrixone-server-through-navicat","title":"Connect to the MatrixOne Server through Navicat","text":"<ol> <li> <p>Open a new terminal and enter into the following command:</p> <pre><code>#Launch MatrixOne (Source code method)\n./mo-service -launch ./etc/launch/launch.toml\n</code></pre> </li> <li> <p>Download and install Navicat.</p> </li> <li> <p>Open Navicat, click Connection &gt; MySQL, and fill in the following parameters in the pop-up window:</p> <ul> <li>Connction Name: MatrixOne</li> <li>Host: 127.0.0.1</li> <li>Port: 6001</li> <li>User Name: root</li> <li>Password: 111</li> <li>Save password:Yes</li> </ul> </li> <li> <p>Click Save, save the configuration.</p> <p></p> </li> <li> <p>To connect to the MatrixOne server, double-click MatrixOne in the database directory on the left.</p> </li> <li> <p>Once you connect to MatrixOne, you will see 6 default system databases.</p> <p></p> <p>And on the right you will see the information about this connection.</p> <p></p> </li> </ol>"},{"location":"MatrixOne/Develop/connect-mo/database-client-tools/#connect-to-the-matrixone-server-through-dbeaver","title":"Connect to the MatrixOne Server through DBeaver","text":"<ol> <li> <p>Download and install DBeaver.</p> </li> <li> <p>Open DBeaver, click Connection, select MySQL, then click Next.</p> <p></p> <p>Fill in the following parameters in the pop-up window. Click Finish, save the configuration.</p> <ul> <li>Host: 127.0.0.1</li> <li>Port: 6001</li> <li>Database: MatrixOne</li> <li>User Name: root</li> <li>Password: 111</li> <li>Save password locally: Yes</li> </ul> <p></p> </li> <li> <p>To connect to the MatrixOne server, double-click MatrixOne in the database navigation on the left. You will see the four default system databases.</p> <p></p> </li> <li> <p>By default, views are not appearing in DBeaver. To show complete system databases, you need to right click on the MatrxiOne, select on Connection view and toggle on the Show system objects.</p> <p></p> <p>Then you can see full 6 system databases.</p> <p></p> </li> </ol>"},{"location":"MatrixOne/Develop/connect-mo/python-connect-to-matrixone/","title":"Connecting to MatrixOne with Python","text":"<p>MatrixOne supports Python connection, <code>pymysql</code> and <code>sqlalchemy</code> drivers are supported. This tutorial will walk you through how to connect MatrixOne by these two python drivers.</p>"},{"location":"MatrixOne/Develop/connect-mo/python-connect-to-matrixone/#before-you-start","title":"Before you start","text":"<ol> <li>Make sure you have already installed and launched MatrixOne.</li> <li>Make sure you have already installed Python 3.8(or plus) version.  </li> </ol> <pre><code>#To check with Python installation and its version\npython3 -V\n</code></pre> <ol> <li>Make sure you have already installed MySQL.</li> </ol>"},{"location":"MatrixOne/Develop/connect-mo/python-connect-to-matrixone/#using-python-pymysql-connect-to-matrixone","title":"Using Python pymysql connect to MatrixOne","text":"<p>The PyMySQL is a pure-Python MySQL client library.</p> <ol> <li> <p>Download and install pymysql and cryptography tool:</p> <pre><code>pip3 install pymysql\npip3 install cryptography\n\n#If you are in China mainland and have a low downloading speed, you can speed up the download by following commands.\npip3 install pymysql -i https://pypi.tuna.tsinghua.edu.cn/simple\npip3 install cryptography -i https://pypi.tuna.tsinghua.edu.cn/simple\n</code></pre> </li> <li> <p>Connect to MatrixOne by MySQL client. Create a new database named test.</p> <pre><code>mysql&gt; create database test;\n</code></pre> </li> <li> <p>Create a plain text file <code>pymysql_connect_matrixone.py</code> and put the code below.</p> <pre><code>#!/usr/bin/python3\n\nimport pymysql\n\n# Open database connection\ndb = pymysql.connect(\n        host='127.0.0.1',\n        port=6001,\n        user='root',\n        password = \"111\",\n        db='test',\n        )\n# prepare a cursor object using cursor() method\ncursor = db.cursor()\n\n# execute SQL query using execute() method.\ncursor.execute(\"SELECT VERSION()\")\n\n# Fetch a single row using fetchone() method.\ndata = cursor.fetchone()\nprint (\"Database version : %s \" % data)\n\n# disconnect from server\ndb.close()\n</code></pre> </li> <li> <p>Execute this python file in the command line terminal.</p> <pre><code>&gt; python3 pymysql_connect_matrixone.py\nDatabase version : 8.0.30-MatrixOne-v1.2.3\n</code></pre> </li> </ol>"},{"location":"MatrixOne/Develop/connect-mo/python-connect-to-matrixone/#using-sqlalchemy-connect-to-matrixone","title":"Using sqlalchemy connect to MatrixOne","text":"<p>SQLAlchemy is the Python SQL toolkit and Object Relational Mapper(ORM) that gives application developers the full power and flexibility of SQL.</p> <ol> <li> <p>Download and install sqlalchemy tool:</p> <pre><code>pip3 install sqlalchemy\n\n#If you are in China mainland and have a low downloading speed, you can speed up the download by following commands.\npip3 install sqlalchemy -i https://pypi.tuna.tsinghua.edu.cn/simple\n</code></pre> </li> <li> <p>Connect to MatrixOne by MySQL client. Create a new database named test, a new table named student and insert two records.</p> <pre><code>mysql&gt; create database test;\nmysql&gt; use test;\nmysql&gt; create table student (name varchar(20), age int);\nmysql&gt; insert into student values (\"tom\", 11), (\"alice\", \"10\");\n</code></pre> </li> <li> <p>Create a plain text file <code>sqlalchemy_connect_matrixone.py</code> and put the code below,</p> <pre><code>#!/usr/bin/python3\nfrom sqlalchemy import create_engine, text\n\n# Open database connection\nmy_conn = create_engine(\"mysql+mysqldb://root:111@127.0.0.1:6001/test\")\n\n# execute SQL query using execute() method.\nquery=text(\"SELECT * FROM student LIMIT 0,10\")\nmy_data=my_conn.execute(query)\n\n# print SQL result\nfor row in my_data:\n        print(\"name:\", row[\"name\"])\n        print(\"age:\", row[\"age\"])\n</code></pre> </li> <li> <p>Execute this python file in the command line terminal.</p> <pre><code>python3 sqlalchemy_connect_matrixone.py\nname: tom\nage: 11\nname: alice\nage: 10\n</code></pre> </li> </ol>"},{"location":"MatrixOne/Develop/connect-mo/python-connect-to-matrixone/#reference","title":"Reference","text":"<p>For the example about using Python to build a simple CRUD with MatrixOne, see Build a simple Python+SQLAlchemy CRUD demo with MatrixOne and Build a simple Python CRUD demo with MatrixOne</p>"},{"location":"MatrixOne/Develop/connect-mo/java-connect-to-matrixone/connect-mo-with-jdbc/","title":"Connect MatrixOne with JDBC","text":"<p>In Java, we can connect to MatrixOne with JDBC(Java Database Connectivity) through the Java code. JDBC is one of the standard APIs for database connectivity, using it we can easily run our query, statement, and also fetch data from the database.</p>"},{"location":"MatrixOne/Develop/connect-mo/java-connect-to-matrixone/connect-mo-with-jdbc/#before-you-start","title":"Before you start","text":"<p>Prerequisite to understand Java Database Connectivity with MatrixOne, make sure you have installed these items as below:</p> <ol> <li>Make sure you have already installed and launched MatrixOne.</li> <li>Make sure you have already installed JDK 8+ version.</li> <li>Make sure you have already installed MySQL client.</li> <li>Make sure you have already installed JAVA IDE, this document uses IntelliJ IDEA as an example, you can also download other IDE.</li> </ol>"},{"location":"MatrixOne/Develop/connect-mo/java-connect-to-matrixone/connect-mo-with-jdbc/#steps","title":"Steps","text":"<ol> <li> <p>Connect to MatrixOne by MySQL client. Create a new database named test or other names you want in MatrixOne and create a new table named t1:</p> <pre><code>create database test;\nuse test;\ncreate table t1\n(\ncode int primary key,\ntitle char(35)\n);\n</code></pre> </li> <li> <p>Create a new Java project testJDBC in IDEA and select Maven as build system, then click on Create.</p> <p></p> </li> <li> <p>Click on the File &gt; Project Structure, enter into *Project Setting*, select and click Library, then click + button, add new project library From Maven**.</p> <p></p> <p></p> </li> <li> <p>Search library with mysql-connector-java,  select mysql:mysql-connector-java:8.0.30, apply it to this project.</p> <p></p> </li> <li> <p>Modify the default Java source code at src/main/java/org/example/Main.java. In general, the code below create a connection with the connection address and credentials, after connecting to MatrixOne, you can operate on MatrixOne database and tables by Java language.</p> <p>For a full example about how to develop a CRUD(Create, Read, Update, Delete) application in MatrixOne with JDBC, please refer to this JDBC CRUD tutorial.</p> <pre><code>package org.example;\n\nimport java.sql.Connection;\nimport java.sql.DriverManager;\nimport java.sql.SQLException;\n\n\n\npublic class Main {\n\n\n    private static String jdbcURL = \"jdbc:mysql://127.0.0.1:6001/test\";\n    private static String jdbcUsername = \"root\";\n    private static String jdbcPassword = \"111\";\n\n    public static void main(String[] args) {\n\n\n        try {\n            Connection connection = DriverManager.getConnection(jdbcURL, jdbcUsername, jdbcPassword);\n            // Do something with the Connection\n\n        } catch (SQLException ex) {\n            // handle any errors\n            System.out.println(\"SQLException: \" + ex.getMessage());\n            System.out.println(\"SQLState: \" + ex.getSQLState());\n            System.out.println(\"VendorError: \" + ex.getErrorCode());\n        }\n    }\n}\n</code></pre> </li> </ol>"},{"location":"MatrixOne/Develop/connect-mo/java-connect-to-matrixone/connect-mo-with-jdbc/#reference","title":"Reference","text":"<p>For a full list about MatrixOne's support for JDBC features, see JDBC supported features list in MatrixOne.</p>"},{"location":"MatrixOne/Develop/connect-mo/java-connect-to-matrixone/connect-mo-with-orm/","title":"Connect MatrixOne with Java ORMs","text":"<p>Apart from connecting with JDBC, more typically, we'll connect to our MySQL database using an Object Relational Mapping (ORM) Framework. We will introduce how to connect to MatrixOne with Spring Data JPA and MyBatis in this article.</p>"},{"location":"MatrixOne/Develop/connect-mo/java-connect-to-matrixone/connect-mo-with-orm/#mybatis","title":"MyBatis","text":"<p>MyBatis was introduced in 2010 and is a SQL mapper framework with simplicity as its strength. We provide a full building CRUD application tutorial with MyBatis and Spring Boot. Here, we'll focus on how to configure MyBatis with MatrixOne connection.</p> <p>The below example is a typical setting with Maven build system.</p>"},{"location":"MatrixOne/Develop/connect-mo/java-connect-to-matrixone/connect-mo-with-orm/#1-add-mybatis-spring-boot-starter-in-pomxml","title":"1. Add MyBatis-Spring-Boot-Starter in Pom.xml","text":"<p>MyBatis applications are built on top of the Spring Boot. For that, you need to add this module to pom.xml which is created when you choose a Maven project.</p> <pre><code>&lt;dependency&gt;\n    &lt;groupId&gt;org.mybatis.spring.boot&lt;/groupId&gt;\n    &lt;artifactId&gt;mybatis-spring-boot-starter&lt;/artifactId&gt;\n    &lt;version&gt;2.1.4&lt;/version&gt;\n&lt;/dependency&gt;\n</code></pre>"},{"location":"MatrixOne/Develop/connect-mo/java-connect-to-matrixone/connect-mo-with-orm/#2-add-configuration","title":"2. Add Configuration","text":"<p>You need to store some of the given parameters inside the <code>application.properties</code>. Five properties usually need to be modified:</p> <ul> <li><code>spring.datasource.driver-class-name</code> : Driver name for MySQL connector.</li> <li><code>spring.datasource.url</code>: JDBC connection URL with its parameters.</li> <li><code>spring.datasource.username</code>: Database username.</li> <li><code>spring.datasource.password</code>: Database password.</li> <li><code>mybatis.mapper-locations</code> : Locations of Mapper XML config file.</li> </ul> <p>MatrixOne's recommended configuration is as below:</p> <pre><code>spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver\nspring.datasource.url=jdbc:mysql://127.0.0.1:6001/test?characterSetResults=UTF-8&amp;continueBatchOnError=false&amp;useServerPrepStmts=true&amp;alwaysSendSetIsolation=false&amp;useLocalSessionState=true&amp;zeroDateTimeBehavior=CONVERT_TO_NULL&amp;failoverReadOnly=false&amp;serverTimezone=Asia/Shanghai&amp;socketTimeout=30000\nspring.datasource.username=root\nspring.datasource.password=111\nmybatis.mapper-locations=classpath:mapping/*xml\n</code></pre> <p>Note</p> <p>JDBC connection URL with recommended configuration is necessary, otherwise the connection will fail.</p>"},{"location":"MatrixOne/Develop/connect-mo/java-connect-to-matrixone/connect-mo-with-orm/#spring-data-jpa","title":"Spring Data JPA","text":"<p>Spring Data JPA is a robust framework that helps reduce boilerplate code and provides a mechanism for implementing basic CRUD operations via one of several predefined repository interfaces. We provide a full building CRUD application tutorial with Spring Data JPA and Spring Boot. We'll focus on how to configure Spring JPA with MatrixOne connection.</p> <p>The below example is a typical setting with Maven build system.</p>"},{"location":"MatrixOne/Develop/connect-mo/java-connect-to-matrixone/connect-mo-with-orm/#1-add-spring-boot-starter-data-jpa-in-pomxml","title":"1. Add spring-boot-starter-data-jpa in Pom.xml","text":"<p>Spring Data JPA applications are built on top of the Spring Boot. For that, you need to add this module to pom.xml which is created when you choose a Maven project.</p> <pre><code>&lt;dependency&gt;\n    &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n    &lt;artifactId&gt;spring-boot-starter-data-jpa&lt;/artifactId&gt;\n&lt;/dependency&gt;\n</code></pre>"},{"location":"MatrixOne/Develop/connect-mo/java-connect-to-matrixone/connect-mo-with-orm/#2-add-configuration_1","title":"2. Add Configuration","text":"<p>You need to store some of the given parameters inside the <code>application.properties</code>. Five properties usually need to be modified:</p> <ul> <li><code>spring.datasource.driver-class-name</code> : Driver name for MySQL connector.</li> <li><code>spring.datasource.url</code>: JDBC connection URL with its parameters.</li> <li><code>spring.datasource.username</code>: Database username.</li> <li><code>spring.datasource.password</code>: Database password.</li> <li> <p><code>spring.jpa.properties.hibernate.dialect</code> : The SQL dialect makes Hibernate generate better SQL for the chosen database. MatrixOne only supports <code>org.hibernate.dialect.MySQLDialect</code>.</p> </li> <li> <p><code>spring.jpa.hibernate.ddl-auto</code>:This property takes an enum that controls the schema generation in a more controlled way. The possible options and effects are in the following table. MatrixOne only supports <code>none</code> and <code>validate</code>.</p> </li> </ul> Option Effect none No database Schema initialization create Drops and creates the schema at the application startup. With this option, all your data will be gone on each startup. create-drop Creates schema at the startup and destroys the schema on context closure. Useful for unit tests. validate Only checks if the Schema matches the Entities. If the schema doesn't match, then the application startup will fail. Makes no changes to the database. update Updates the schema only if necessary. For example, If a new field was added in an entity, then it will simply alter the table for a new column without destroying the data. <p>MatrixOne's recommended configuration is as below:</p> <pre><code>spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver\nspring.datasource.url=jdbc:mysql://127.0.0.1:6001/test?characterSetResults=UTF-8&amp;continueBatchOnError=false&amp;useServerPrepStmts=true&amp;alwaysSendSetIsolation=false&amp;useLocalSessionState=true&amp;zeroDateTimeBehavior=CONVERT_TO_NULL&amp;failoverReadOnly=false&amp;serverTimezone=Asia/Shanghai&amp;socketTimeout=30000\nspring.datasource.username=root\nspring.datasource.password=111\nspring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQLDialect\nspring.jpa.hibernate.ddl-auto = validate\n</code></pre>"},{"location":"MatrixOne/Develop/distinct-data/bitmap/","title":"Deduplication of data using BITMAP","text":"<p>Matrixone supports the use <code>of BITMAP</code> for counting different values (distinct values).</p> <p>This article will cover some of <code>BITMAP</code>'s application scenarios and cases.</p>"},{"location":"MatrixOne/Develop/distinct-data/bitmap/#application-scenarios","title":"Application scenarios","text":"<p>In MatrixOne, <code>BITMAP</code> is used to optimize specific types of query operations, especially when dealing with columns with low cardinality, helping users achieve fast data analysis and decision support in big data environments. Here are some scenarios for using <code>BITMAP</code>:</p> <ol> <li> <p>User Behavior Analysis: Suppose an e-commerce platform wants to analyze the behavior patterns of different users. They have an event table that records every click event a user has, including user ID, timestamp, event type, etc. By using <code>BITMAP</code>, it is possible to quickly categorize and count the behavior of users, e.g. to find out the number of users who have all made a \"purchase\" behavior.</p> </li> <li> <p>Multidimensional analysis: In a data warehouse, it is often necessary to analyze multiple dimensions, such as sales in different regions over a given time period. With <code>BITMAP</code>, the two dimensions of date and region can be quickly filtered to improve query efficiency.</p> </li> <li> <p>Counting different values: When working with columns with a large number of unique values, such as product category or user status, <code>BITMAP</code> allows you to efficiently calculate the number of different values in those columns. For example, a social media platform may need to count different numbers of its users active (online, offline).</p> </li> <li> <p>Hierarchical aggregation acceleration: <code>BITMAP</code> accelerates the calculation process when hierarchical aggregation queries are required, such as quarterly and annual aggregation of sales data. By using <code>BITMAP</code>, data can be grouped and aggregated quickly to get the statistics you need.</p> </li> <li> <p>Optimize complex queries: For complex queries with multiple criteria, <code>BITMAP</code> can quickly filter out eligible data. For example, a financial firm may need to identify users who satisfy both \"high net worth clients\" and \"invest in specific funds\".</p> </li> </ol>"},{"location":"MatrixOne/Develop/distinct-data/bitmap/#prepare-before-you-start","title":"Prepare before you start","text":"<p>Completed standalone deployment of MatrixOne.</p>"},{"location":"MatrixOne/Develop/distinct-data/bitmap/#cases","title":"Cases","text":"<p>According to the above scenario one design case,the behavior patterns of different users of e-commerce platform are analyzed.</p>"},{"location":"MatrixOne/Develop/distinct-data/bitmap/#steps","title":"Steps","text":""},{"location":"MatrixOne/Develop/distinct-data/bitmap/#1-create-user-tables-and-import-data","title":"1. Create user tables and import data","text":"<p>Prepare a table named <code>user_behavior_table</code> and the corresponding csv data, which has 39270760 rows of data.</p> <pre><code>CREATE TABLE user_behavior_table(\nuser_id int,--user id \nbehavior varchar(100),--behavior, including browser,purchase,returns\noccur_year varchar(100)----behavior occurred year\n);\n\nLOAD DATA INFILE '/your_path/user_behavior_table.csv' INTO TABLE user_behavior_table FIELDS TERMINATED BY ',' OPTIONALLY ENCLOSED BY '\"';\n</code></pre>"},{"location":"MatrixOne/Develop/distinct-data/bitmap/#2-define-the-precalculation-table","title":"2. Define the precalculation table","text":"<p>The coarse-grained calculation results are saved in the pre-computed table.Subsequent aggregation of various different dimensions can use the results in the pre-computed table.After simple calculation,the results can be obtained and the query can be accelerated.</p> <pre><code>CREATE TABLE precompute AS\nSELECT\nbehavior,\noccur_year,\nBITMAP_BUCKET_NUMBER(user_id) as bucket,\nBITMAP_CONSTRUCT_AGG(BITMAP_BIT_POSITION(user_id)) as bitmap FROM user_behavior_table\nGROUP BY  behavior,occur_year,bucket;\n</code></pre>"},{"location":"MatrixOne/Develop/distinct-data/bitmap/#3-aggregate-filter-data-by-different-dimensions","title":"3. Aggregate filter data by different dimensions","text":"<p>Calculates the number of deduplications for user_id in case of user behavior and year aggregation, reflecting the number of users who browsed, purchased, and returned items in different years.</p> <pre><code>mysql&gt; SELECT\n-&gt;     behavior,\n-&gt;     occur_year,\n-&gt;     SUM(BITMAP_COUNT(bitmap))\n-&gt;     FROM precompute\n-&gt;     GROUP BY  behavior,occur_year;\n+----------+------------+---------------------------+\n| behavior | occur_year | sum(bitmap_count(bitmap)) |\n+----------+------------+---------------------------+\n| browser  | 2022       |                    939995 |\n| browser  | 2023       |                   1003173 |\n| purchase | 2022       |                    669474 |\n| purchase | 2023       |                    660605 |\n| returns  | 2023       |                      4910 |\n| returns  | 2022       |                      4350 |\n+----------+------------+---------------------------+\n6 rows in set (0.01 sec)\n\nmysql&gt; select behavior,occur_year,count(distinct user_id) from user_behavior_table group by behavior,occur_year;\n+----------+------------+---------------------------+\n| behavior | occur_year | sum(bitmap_count(bitmap)) |\n+----------+------------+---------------------------+\n| browser  | 2022       |                    939995 |\n| browser  | 2023       |                   1003173 |\n| purchase | 2022       |                    669474 |\n| purchase | 2023       |                    660605 |\n| returns  | 2023       |                      4910 |\n| returns  | 2022       |                      4350 |\n+----------+------------+---------------------------+\n6 rows in set (3.26 sec)\n</code></pre> <p>Calculate the number of users viewing, purchasing, and returning items from 2022-2023.</p> <pre><code>mysql&gt; SELECT behavior, SUM(cnt) FROM (\n-&gt; SELECT\n-&gt; behavior,\n-&gt; BITMAP_COUNT(BITMAP_OR_AGG(bitmap)) cnt\n-&gt; FROM precompute\n-&gt; GROUP BY behavior,bucket\n-&gt; )\n-&gt; GROUP BY behavior;\n+----------+----------+\n| behavior | sum(cnt) |\n+----------+----------+\n| browser  |  1003459 |\n| purchase |   780308 |\n| returns  |     9260 |\n+----------+----------+\n3 rows in set (0.01 sec)\n\nmysql&gt; select behavior,count(distinct user_id) from user_behavior_table group by behavior;\n+----------+-------------------------+\n| behavior | count(distinct user_id) |\n+----------+-------------------------+\n| browser  |                 1003459 |\n| purchase |                  780308 |\n| returns  |                    9260 |\n+----------+-------------------------+\n3 rows in set (1.44 sec)\n</code></pre> <p>It is obviously more efficient to use <code>BITMAP</code> when comparing the return times of the two queries. By using <code>BITMAP</code>, merchants can quickly filter out specific types of events to count the total number of users with a certain behavior.</p>"},{"location":"MatrixOne/Develop/distinct-data/bitmap/#reference-documents","title":"Reference Documents","text":"<ul> <li>BITMAP</li> <li>COUNT</li> </ul>"},{"location":"MatrixOne/Develop/distinct-data/count-distinct/","title":"Deduplication of data using COUNT(DISTINCT)","text":"<p><code>COUNT (DISTINCT)</code> provides accurate deduplication results, but may be less efficient on large data sets. Use BITMAP for large data sets.</p> <p>This article explains how to dedupe small amounts of data using <code>COUNT (DISTINCT)</code>.</p>"},{"location":"MatrixOne/Develop/distinct-data/count-distinct/#prepare-before-you-start","title":"Prepare before you start","text":"<p>Completed standalone deployment of MatrixOne.</p>"},{"location":"MatrixOne/Develop/distinct-data/count-distinct/#examples","title":"Examples","text":"<pre><code>--Create an orders table with two fields, customer_id and product_id, which represent the unique identifiers of the customer and the product, respectively.\nCREATE TABLE orders (\norder_id INT AUTO_INCREMENT PRIMARY KEY,\ncustomer_id INT,\nproduct_id INT,\norder_date DATE,\nquantity INT\n);\n\n--Insert some sample data:\nINSERT INTO orders (customer_id, product_id, order_date, quantity)\nVALUES\n(1, 101, '2023-04-01', 2),\n(1, 102, '2023-04-02', 1),\n(2, 101, '2023-04-03', 5),\n(3, 103, '2023-04-04', 3),\n(2, 104, '2023-04-05', 1),\n(4, 101, '2023-04-06', 2),\n(4, 102, '2023-04-07', 1),\n(5, 105, '2023-04-08', 4),\n(1, 101, '2023-04-09', 2);\n\n--Calculate the number of different customers:\nmysql&gt; SELECT COUNT(DISTINCT customer_id) AS unique_customer_count FROM orders;\n+-----------------------+\n| unique_customer_count |\n+-----------------------+\n|                     5 |\n+-----------------------+\n1 row in set (0.01 sec)\n\n--Calculate the quantities of different products:\nmysql&gt; SELECT COUNT(DISTINCT product_id) AS unique_product_count FROM orders;\n+----------------------+\n| unique_product_count |\n+----------------------+\n|                    5 |\n+----------------------+\n1 row in set (0.01 sec)\n</code></pre> <p>The two queries return the number of unique customers and the number of unique products in the orders table, respectively. This information is useful for analyzing customer diversity and product range.</p>"},{"location":"MatrixOne/Develop/distinct-data/count-distinct/#reference-documents","title":"Reference Documents","text":"<ul> <li>COUNT</li> </ul>"},{"location":"MatrixOne/Develop/export-data/modump/","title":"The mo-dump tool writes out","text":"<p>MatrixOne supports two ways to export data:</p> <ul> <li><code>SELECT INTO...OUTFILE</code></li> <li><code>mo-dump</code></li> </ul> <p>This document focuses on how to export data using <code>mo-dump</code>.</p>"},{"location":"MatrixOne/Develop/export-data/modump/#what-is-a-mo-dump","title":"What is a mo-dump","text":"<p><code>mo-dump</code> is a client-side utility for MatrixOne that, like <code>mysqldump</code>, can be used to back up a MatrixOne database by exporting a file of type <code>.sql</code> containing SQL statements executable to recreate the original database.</p> <p>With the <code>mo-dump</code> tool, you must have access to the server running the MatrixOne instance. You must also have user rights to the exported database.</p>"},{"location":"MatrixOne/Develop/export-data/modump/#mo-dump-syntax-structure","title":"mo-dump syntax structure","text":"<pre><code>./mo-dump -u ${user} -p ${password} \\\n-h ${host} -P ${port} -db ${database}\\\n[--local-infile=true] [-csv]\\\n[-no-data] [-tbl ${table}...]\\\n-net-buffer-length ${net-buffer-length} &gt; {importStatement.sql}\n</code></pre> <p>Parameter interpretation</p> <ul> <li> <p>-u [user]: Username to connect to the MatrixOne server. Only users with database and table read access can use the <code>mo-dump</code> utility, which defaults to <code>dump</code>.</p> </li> <li> <p>-p [password]: Valid password for the MatrixOne user. Default value: <code>111</code>.</p> </li> <li> <p>-h [host]: Host IP address of the MatrixOne server. Default value: <code>127.0.0.1</code>.</p> </li> <li> <p>-P [port]: Port of the MatrixOne server. Default value: <code>6001</code>.</p> </li> <li> <p>-db [databaseName]: Required parameter. The name of the database to back up. Multiple databases can be specified, separated by <code>,</code> database names.</p> </li> <li> <p>-net-buffer-length [packet size]: Packet size, the total size of SQL statement characters. Packets are the basic unit of SQL exported data. If parameters are not set, the default is 1048576 Byte(1M) and the maximum is 16777216 Byte(16M). If the parameter here is set to 16777216 Byte(16M), then when data larger than 16M is to be exported, the data is split into multiple 16M packets, all but the last of which are 16M in size.</p> </li> <li> <p>-csv: The default is false. When set to true means that the exported data is in csv format, the generated database and table structure and imported SQL statements are saved in the generated sql file, and the data is exported to the generated <code>${databaseName}_${tableName}.csv</code> file in the current directory.</p> </li> <li> <p>--local-infile: The default is true and takes effect only when the parameter -csv is set to true. LOAD DATA LOCAL INFILE in the sql file script output by mo-dump when the parameter is true. LOAD DATA INFILE in the sql file script output by mo-dump when the argument is false.</p> </li> <li> <p>-tbl [tableName]: Optional argument. If the argument is empty, the entire database is exported. If you want to back up the specified table, you can add the parameters <code>-tbl</code> and <code>tableName</code> to the command. If multiple tables are specified, the table names are separated by <code>,</code> .</p> </li> <li> <p>-no-data: The default is false. When set to true means no data is exported, only the table structure.</p> </li> <li> <p>&gt; {importStatement.sql}: Stores the output SQL statement in the file importStatement.sql, otherwise outputs it on the screen.</p> </li> </ul>"},{"location":"MatrixOne/Develop/export-data/modump/#install-the-mo-dump-tool","title":"Install the mo-dump tool","text":"<p>Download mode one and download mode two require the download tool wget or curl to be installed first. If you do not have it installed, install the download tool yourself first.</p> <ul> <li>Install under macOS</li> </ul> Download Method One: <code>The wget</code> tool downloads binary packagesDownload mode two: <code>curl</code> tool downloads binary packages <p>x86 Architecture System Installation Package:</p> <pre><code>wget https://github.com/matrixorigin/mo_dump/releases/download/1.0.0/mo-dump-1.0.0-darwin-x86_64.zip\nunzip mo-dump-1.0.0-darwin-x86_64.zip\n</code></pre> <p>ARM Architecture System Installation Package:</p> <pre><code>wget https://github.com/matrixorigin/mo_dump/releases/download/1.0.0/mo-dump-1.0.0-darwin-arm64.zip\nunzip mo-dump-1.0.0-darwin-arm64.zip\n</code></pre> <p>If the original github address downloads too slowly, you can try downloading the mirror package from:</p> <pre><code>wget  https://githubfast.com/matrixorigin/mo_dump/releases/download/1.0.0/mo-dump-1.0.0-darwin-xxx.zip\n</code></pre> <p>x86 Architecture System Installation Package:</p> <pre><code>curl -OL https://github.com/matrixorigin/mo_dump/releases/download/1.0.0/mo-dump-1.0.0-darwin-x86_64.zip\nunzip mo-dump-1.0.0-darwin-x86_64.zip\n</code></pre> <p>ARM Architecture System Installation Package:</p> <pre><code>curl -OL https://github.com/matrixorigin/mo_dump/releases/download/1.0.0/mo-dump-1.0.0-darwin-arm64.zip\nunzip mo-dump-1.0.0-darwin-arm64.zip\n</code></pre> <p>If the original github address downloads too slowly, you can try downloading the mirror package from:</p> <pre><code>curl -OL https://githubfast.com/matrixorigin/mo_dump/releases/download/1.0.0/mo-dump-1.0.0-darwin-xxx.zip\n</code></pre> <ul> <li>Install under Linux</li> </ul> Download Method One: <code>The wget</code> tool downloads binary packagesDownload mode two: <code>curl</code> tool downloads binary packages <p>x86 Architecture System Installation Package:</p> <pre><code>wget https://github.com/matrixorigin/mo_dump/releases/download/1.0.0/mo-dump-1.0.0-linux-x86_64.zip\nunzip mo-dump-1.0.0-linux-x86_64.zip\n</code></pre> <p>ARM Architecture System Installation Package:</p> <pre><code>wget https://github.com/matrixorigin/mo_dump/releases/download/1.0.0/mo-dump-1.0.0-linux-arm64.zip\nunzip mo-dump-1.0.0-linux-arm64.zip\n</code></pre> <p>If the original github address downloads too slowly, you can try downloading the mirror package from:</p> <pre><code>wget  https://githubfast.com/matrixorigin/mo_dump/releases/download/1.0.0/mo-dump-1.0.0-linux-xxx.zip\n</code></pre> <p>x86 Architecture System Installation Package:</p> <pre><code>curl -OL https://github.com/matrixorigin/mo_dump/releases/download/1.0.0/mo-dump-1.0.0-linux-x86_64.zip\nunzip mo-dump-1.0.0-linux-x86_64.zip\n</code></pre> <p>ARM Architecture System Installation Package:</p> <pre><code>curl -OL https://github.com/matrixorigin/mo_dump/releases/download/1.0.0/mo-dump-1.0.0-linux-arm64.zip\nunzip mo-dump-1.0.0-linux-arm64.zip\n</code></pre> <p>If the original github address downloads too slowly, you can try downloading the mirror package from:</p> <pre><code>curl -OL https://githubfast.com/matrixorigin/mo_dump/releases/download/1.0.0/mo-dump-1.0.0-linux-xxx.zip\n</code></pre> <p>!!! note Due to limitations of the linux kernel, mo-dump may not function properly on OS with lower kernels (less than 5.0), at which point you need to upgrade your kernel version.</p>"},{"location":"MatrixOne/Develop/export-data/modump/#how-to-export-a-matrixone-database-using-mo-dump","title":"How to export a MatrixOne database using <code>mo-dump</code>","text":"<p><code>mo-dump</code> is very easy to use from the command line. Open a terminal window on your local computer, go to the unzipped mo_dump folder directory, locate the <code>mo-dump</code> executable: mo-dump, enter the following command, connect to MatrixOne, and export the database:</p> <pre><code>./mo-dump -u username -p password -h host_ip_address -P port -db database &gt; importStatement.sql </code></pre>"},{"location":"MatrixOne/Develop/export-data/modump/#examples","title":"Examples","text":"<p>Example 1</p> <p>If you start the terminal in the same server as the MatrixOne instance and you want to generate a single or multiple database and a backup of all the tables in it, run the following command. This command will generate a backup of the mydb1 and mydb2 databases and the structure and data of the tables in the importMydb.sql file. The importMydb.sql file is saved in the current directory:</p> <pre><code>./mo-dump -u root -p 111 -h 127.0.0.1 -P 6001 -db mydb1,mydb2 &gt; importMydb.sql </code></pre> <p>Example 2</p> <p>If you want to export data from tables within database mydb to CSV format, the data from all tables in database mydb will be exported in the current directory in the format <code>${databaseName}_${tableName}.csv</code> and the generated database and table structure and imported SQL statements will be saved in the mydb.sql file:</p> <pre><code>./mo-dump -u root -p 111 -h 127.0.0.1 -P 6001 -db mydb -csv &gt; mydb.sql </code></pre> <p>Example 3</p> <p>If you want to specify in the database to generate a backup of a table or tables, you can run the following command. This command will generate a structural and data backup of the t1 and t2 tables in database db1, saved in the tab2.sql file.</p> <pre><code> ./mo-dump -u root -p 111 -db db1 -tbl t1,t2 &gt; tab2.sql </code></pre> <p>Example 4</p> <p>If you want a structural backup of a table or tables in the database, you can run the following command. This command will generate the structure of the t1 and t2 tables in database db1, saved in the tab_nodata.sql file.</p> <pre><code>./mo-dump -u root -p 111 -db db1 -no-data -tbl t1,t2 &gt; tab_nodata.sql </code></pre>"},{"location":"MatrixOne/Develop/export-data/modump/#limitations","title":"Limitations","text":"<ul> <li><code>mo-dump</code> does not yet support exporting data only. If you want to generate a backup of your data without a database and table structure, then you need to manually split the <code>.sql</code> file.</li> </ul>"},{"location":"MatrixOne/Develop/export-data/select-into-outfile/","title":"Export data by SELECT INTO","text":"<p>There are two methods to export data with MatrixOne:</p> <ul> <li><code>SELECT INTO...OUTFILE</code></li> <li><code>modump</code></li> </ul> <p>This document will introduce about how to export data with <code>SELECT INTO...OUTFILE</code>.</p> <p><code>SELECT...INTO OUTFILE</code> statement exports a table data into a text file on the server host.</p>"},{"location":"MatrixOne/Develop/export-data/select-into-outfile/#syntax","title":"Syntax","text":"<p>The syntax for this statement combines a regular SELECT command with INTO OUTFILE filename at the end. The default output format is the same as it is for the LOAD DATA command. So, the following statement exports the test table into /root/test as a tab-delimited, linefeed-terminated file.</p> <pre><code>mysql&gt; SELECT * FROM TEST\n    -&gt; INTO OUTFILE '/root/test.csv';\n</code></pre> <p>You can change the output format using various options to indicate how to quote and delimit columns and records. Using the following code to export the TEST table in a CSV format with CRLF-terminated lines:</p> <pre><code>mysql&gt; SELECT * FROM TEST INTO OUTFILE '/root/test.csv'\n   -&gt; FIELDS TERMINATED BY ',' ENCLOSED BY '\"'\n   -&gt; LINES TERMINATED BY '\\r\\n';\n</code></pre> <p>The <code>SELECT ... INTO OUTFILE</code> has the following properties \u2212</p> <ul> <li>The output file is created directly by the MatrixOne server, so the filename should indicate where you want the file to be written on the server host. MatrixOne doesn't support export the file to a client-side file system.</li> <li>You must have the privilege to execute the <code>SELECT ... INTO</code> statement.</li> <li>The output file must not already exist. This prevents MatrixOne from clobbering files that may be important.</li> <li>You should have a login account on the server host or some way to retrieve the file from that host. Otherwise, the <code>SELECT ... INTO OUTFILE</code> command will most likely be of no value to you.</li> </ul>"},{"location":"MatrixOne/Develop/export-data/select-into-outfile/#example","title":"Example","text":""},{"location":"MatrixOne/Develop/export-data/select-into-outfile/#before-you-start","title":"Before you start","text":"<p>Make sure you have already Deployed standalone MatrixOne.</p> <p>Note</p> <p>If you install MatrixOne by <code>docker</code>, the directory is inside the docker image by default. To work with local directory, you need to bind a local directory to the container. In the following example, the local file system path <code>${local_data_path}/mo-data</code> is binded to the MatrixOne docker image, with a mapping to the <code>/mo-data</code> path. For more information, see Docker Mount Volume tutorial.</p> <pre><code>sudo docker run --name &lt;name&gt; --privileged -d -p 6001:6001 -v ${local_data_path}/mo-data:/mo-data:rw matrixorigin/matrixone:1.2.3\n</code></pre>"},{"location":"MatrixOne/Develop/export-data/select-into-outfile/#steps","title":"Steps","text":"<ol> <li> <p>Create tables in MatrixOne:</p> <pre><code>create database aaa;\nuse aaa;\nCREATE TABLE `user` (`id` int(11) ,`user_name` varchar(255) ,`sex` varchar(255));\ninsert into user(id,user_name,sex) values('1', 'weder', 'man'), ('2', 'tom', 'man'), ('3', 'wederTom', 'man');\nselect * from user;\n+------+-----------+------+\n| id   | user_name | sex  |\n+------+-----------+------+\n|    1 | weder     | man  |\n|    2 | tom       | man  |\n|    3 | wederTom  | man  |\n+------+-----------+------+\n</code></pre> </li> <li> <p>For installation with source code or binary file, export the table to your local directory, for example, ~/tmp/export_demo/export_datatable.txt.</p> <pre><code>select * from user into outfile '~/tmp/export_demo/export_datatable.txt'\n</code></pre> <p>For installation with docker, export the your mounted directory path of container as the following example. The directory <code>mo-data</code> refers to the local path of <code>~/tmp/docker_export_demo/mo-data</code>.</p> <pre><code>select * from user into outfile 'mo-data/export_datatable.txt';\n</code></pre> </li> <li> <p>Check the table in your directory <code>export_datatable.txt</code>, the result is as below:</p> <pre><code>id,user_name,sex\n1,\"weder\",\"man\"\n2,\"tom\",\"man\"\n3,\"wederTom\",\"man\"\n</code></pre> </li> </ol>"},{"location":"MatrixOne/Develop/import-data/delete-data/","title":"Delete Data","text":"<p>This document describes how to delete data in MatrixOne using SQL statements.</p>"},{"location":"MatrixOne/Develop/import-data/delete-data/#prerequisites","title":"Prerequisites","text":"<p>Complete the Deploy standalone MatrixOne.</p>"},{"location":"MatrixOne/Develop/import-data/delete-data/#sql-statements-for-deleting-data","title":"SQL Statements for Deleting Data","text":"<p>You can delete data in three ways: <code>DROP TABLE</code>, <code>TRUNCATE TABLE</code>, and <code>DELETE FROM</code>.</p> <p>Here are the differences between them:</p> <ul> <li><code>DELETE FROM</code>: Use <code>DELETE FROM</code> to delete specific records.</li> <li><code>TRUNCATE TABLE</code>: Use <code>TRUNCATE TABLE</code> when you want to keep the table structure, indexes, and constraints intact, but delete all records.</li> <li><code>DROP TABLE</code>: Use <code>DROP TABLE</code> when you no longer need the table.</li> </ul>"},{"location":"MatrixOne/Develop/import-data/delete-data/#delete","title":"<code>DELETE</code>","text":"<pre><code>DELETE FROM tbl_name [[AS] tbl_alias]\n    [WHERE where_condition]\n    [ORDER BY ...]\n    [LIMIT row_count]\n</code></pre> <ol> <li> <p><code>DELETE FROM tbl_name</code>: Specifies the target table from which data will be deleted. <code>tbl_name</code> is the table name.</p> </li> <li> <p><code>[AS] tbl_alias</code> (optional): You can use the AS keyword to assign a table alias (<code>tbl_alias</code>) to the target table. The alias is optional and used to simplify the query and reference the table in the statement.</p> </li> <li> <p><code>[WHERE where_condition]</code> (optional): The WHERE clause specifies the conditions for deleting data. Only rows that satisfy the specified conditions will be deleted. <code>where_condition</code> is a logical expression that can use various comparisons and logical operators to define the conditions.</p> </li> <li> <p><code>[ORDER BY ...]</code> (optional): The ORDER BY clause is used to sort the rows to be deleted based on specified columns. You can use one or more columns and specify ascending (ASC) or descending (DESC) order. The sorting affects the order of the deleted rows.</p> </li> <li> <p><code>[LIMIT row_count]</code> (optional): The LIMIT clause limits the number of rows deleted from the table. It specifies the maximum number of rows (<code>row_count</code>) to be deleted. If the LIMIT clause is not specified, all rows satisfying the WHERE condition will be deleted.</p> </li> </ol>"},{"location":"MatrixOne/Develop/import-data/delete-data/#truncate","title":"<code>TRUNCATE</code>","text":"<pre><code>TRUNCATE [TABLE] table_name;\n</code></pre> <p>The <code>TRUNCATE</code> statement deletes all data in a table while preserving the table structure. It quickly clears the table without deleting rows one by one.</p> <ul> <li><code>[TABLE]</code> (optional) is a keyword that provides more explicit syntax but can be omitted in most database systems.</li> <li><code>table_name</code> is the name of the target table.</li> </ul>"},{"location":"MatrixOne/Develop/import-data/delete-data/#drop","title":"<code>DROP</code>","text":"<pre><code>DROP TABLE [IF EXISTS] [db.]name\n</code></pre> <p>The <code>DROP TABLE</code> statement completely removes a table, including its structure and data, from the database.</p> <ul> <li><code>[IF EXISTS]</code> (optional) is a keyword that performs the deletion only if the table exists. An error will occur if omitted, and the table to be dropped does not exist.</li> <li><code>[db.]</code> (optional) specifies the database name where the table resides. If no database name is provided, the current database is assumed.</li> <li><code>name</code> is the name of the table to be dropped.</li> </ul>"},{"location":"MatrixOne/Develop/import-data/delete-data/#garbage-collection","title":"Garbage Collection","text":"<p>By default, MatrixOne does not immediately delete data from the disk after running <code>DELETE</code>, <code>DROP</code>, or <code>TRUNCATE</code> statements. Instead, it marks the data as deletable. Then, the GC (Garbage Collection) mechanism periodically scans and cleans up the no longer-needed old data.</p> <p>By default, the garbage collection mechanism scans every 30 minutes. During each scan, it identifies data deleted through SQL statements for over 1 hour and starts the cleanup process to release disk space. The most extended cycle to complete all deletions is 90 minutes. Therefore, it is essential to note that executing <code>DELETE</code>, <code>DROP</code>, or <code>TRUNCATE</code> statements do not immediately reduce disk usage. Only data marked as deletable during the garbage collection will be cleaned up, and disk space will be freed.</p>"},{"location":"MatrixOne/Develop/import-data/delete-data/#examples","title":"Examples","text":"<ul> <li>Example 1</li> </ul> <pre><code>-- Create table\nCREATE TABLE employees (\nid INT PRIMARY KEY,\nname VARCHAR(50),\ndepartment VARCHAR(50)\n);\n\n-- Insert data\nINSERT INTO employees (id, name, department)\nVALUES (1, 'John Doe', 'HR'),\n(2, 'Jane Smith', 'Marketing'),\n(3, 'Mike Johnson', 'IT'),\n(4, 'Emily Brown', 'Finance');\n\n-- View initial data\nmysql&gt; SELECT * FROM employees;\n+------+--------------+------------+\n| id   | name         | department |\n+------+--------------+------------+\n|    1 | John Doe     | HR         |\n|    2 | Jane Smith   | Marketing  |\n|    3 | Mike Johnson | IT         |\n|    4 | Emily Brown  | Finance    |\n+------+--------------+------------+\n4 rows in set (0.01 sec)\n\n-- Delete partial data\nmysql&gt; DELETE FROM employees WHERE department = 'IT';\nQuery OK, 1 row affected (0.01 sec)\n\n-- View data after the deletion\nmysql&gt; SELECT * FROM employees;\n+------+-------------+------------+\n| id   | name        | department |\n+------+-------------+------------+\n|    1 | John Doe    | HR         |\n|    2 | Jane Smith  | Marketing  |\n|    4 | Emily Brown | Finance    |\n+------+-------------+------------+\n3 rows in set (0.00 sec)\n</code></pre> <ul> <li>Example 2</li> </ul> <pre><code>-- Create table\nCREATE TABLE orders (\norder_id INT PRIMARY KEY,\ncustomer_name VARCHAR(50),\norder_date DATE\n);\n\n-- Insert data\nINSERT INTO orders (order_id, customer_name, order_date)\nVALUES (1, 'John Doe', '2022-01-01'),\n(2, 'Jane Smith', '2022-02-01'),\n(3, 'Mike Johnson', '2022-03-01'),\n(4, 'Emily Brown', '2022-04-01'),\n(5, 'David Wilson', '2022-05-01');\n\n-- View initial data\nmysql&gt; SELECT * FROM orders;\n+----------+---------------+------------+\n| order_id | customer_name | order_date |\n+----------+---------------+------------+\n|        1 | John Doe      | 2022-01-01 |\n|        2 | Jane Smith    | 2022-02-01 |\n|        3 | Mike Johnson  | 2022-03-01 |\n|        4 | Emily Brown   | 2022-04-01 |\n|        5 | David Wilson  | 2022-05-01 |\n+----------+---------------+------------+\n5 rows in set (0.01 sec)\n\n-- Delete the earliest two orders\nmysql&gt; DELETE FROM orders\nWHERE order_id IN (\nSELECT order_id\nFROM orders\nORDER BY order_date\nLIMIT 2);\nQuery OK, 2 rows affected (0.01 sec)\n\n-- View data after the deletion\nmysql&gt; SELECT * FROM orders;\n+----------+---------------+------------+\n| order_id | customer_name | order_date |\n+----------+---------------+------------+\n|        3 | Mike Johnson  | 2022-03-01 |\n|        4 | Emily Brown   | 2022-04-01 |\n|        5 | David Wilson  | 2022-05-01 |\n+----------+---------------+------------+\n3 rows in set (0.01 sec)\n</code></pre>"},{"location":"MatrixOne/Develop/import-data/insert-data/","title":"Insert Data","text":"<p>This document describes how to insert data into MatrixOne by using the SQL language.</p>"},{"location":"MatrixOne/Develop/import-data/insert-data/#before-you-start","title":"Before you start","text":"<p>Make sure you have already Deployed standalone MatrixOne.</p>"},{"location":"MatrixOne/Develop/import-data/insert-data/#insert-into-statement","title":"INSERT INTO Statement","text":"<p>It is possible to write the <code>INSERT INTO</code> statement in several ways:</p> <ol> <li> <p>Specify both the column names and the values to be inserted:</p> <pre><code>INSERT INTO tbl_name (a,b,c) VALUES (1,2,3);\n</code></pre> </li> <li> <p>If you add values for all the table columns, you do not need to specify the column names in the SQL query. However, make sure the values' order is in the same order as the columns in the table. Here, the <code>INSERT INTO</code> syntax would be as follows:</p> <pre><code>INSERT INTO tbl_name VALUES (1,2,3);\n</code></pre> </li> <li> <p><code>INSERT</code>statements that use <code>VALUES</code> syntax can insert multiple rows. To do this, include multiple lists of comma-separated column values, with lists enclosed within parentheses and separated by commas. Example:</p> <pre><code>INSERT INTO tbl_name (a,b,c) VALUES(1,2,3), (4,5,6), (7,8,9);\n</code></pre> </li> </ol>"},{"location":"MatrixOne/Develop/import-data/insert-data/#demo-database","title":"Demo Database","text":"<p>Below is a selection from the \"Customers\" table in the Northwind sample database:</p> <pre><code>CREATE TABLE Customers (\n  CustomerID INT AUTO_INCREMENT NOT NULL,\n  CustomerName VARCHAR(40) NOT NULL,\n  ContactName VARCHAR(30) NULL,\n  Address VARCHAR(60) NULL,\n  City VARCHAR(15) NULL,\n  PostalCode VARCHAR(10) NULL,\n  Country VARCHAR(15) NULL,\n  PRIMARY KEY (CustomerID)\n  );\n</code></pre> CustomerID CustomerName ContactName Address City PostalCode Country 89 White Clover Markets Karl Jablonski 305 - 14th Ave. S. Suite 3B Seattle 98128 USA 90 Wilman Kala Matti Karttunen Keskuskatu 45 Helsinki 21240 Finland 91 Wolski Zbyszek ul. Filtrowa 68 Walla 01-012 Poland"},{"location":"MatrixOne/Develop/import-data/insert-data/#insert-into-example","title":"INSERT INTO Example","text":"<p>The following SQL statement inserts a new record in the \"Customers\" table:</p>"},{"location":"MatrixOne/Develop/import-data/insert-data/#example","title":"Example","text":"<pre><code>INSERT INTO Customers (CustomerName, ContactName, Address, City, PostalCode, Country)\nVALUES ('Cardinal', 'Tom B. Erichsen', 'Skagen 21', 'Stavanger', '4006', 'Norway');\n</code></pre> <p>The selection from the \"Customers\" table will now look like this:</p> CustomerID CustomerName ContactName Address City PostalCode Country 89 White Clover Markets Karl Jablonski 305 - 14th Ave. S. Suite 3B Seattle 98128 USA 90 Wilman Kala Matti Karttunen Keskuskatu 45 Helsinki 21240 Finland 91 Wolski Zbyszek ul. Filtrowa 68 Walla 01-012 Poland 92 Cardinal Tom B. Erichsen Skagen 21 Stavanger 4006 Norway"},{"location":"MatrixOne/Develop/import-data/insert-data/#insert-data-only-in-specified-columns","title":"Insert Data Only in Specified Columns","text":"<p>It is also possible to only insert data in specific columns.</p>"},{"location":"MatrixOne/Develop/import-data/insert-data/#example_1","title":"Example","text":"<p>The following SQL statement will insert a new record, but only insert data in the \"CustomerName\", \"City\", and \"Country\" columns (CustomerID will be updated automatically):</p> <pre><code>INSERT INTO Customers (CustomerName, City, Country)\nVALUES ('Cardinal', 'Stavanger', 'Norway');\n</code></pre> <p>The selection from the \"Customers\" table will now look like this:</p> CustomerID CustomerName ContactName Address City PostalCode Country 89 White Clover Markets Karl Jablonski 305 - 14th Ave. S. Suite 3B Seattle 98128 USA 90 Wilman Kala Matti Karttunen Keskuskatu 45 Helsinki 21240 Finland 91 Wolski Zbyszek ul. Filtrowa 68 Walla 01-012 Poland 92 Cardinal null null Stavanger null Norway"},{"location":"MatrixOne/Develop/import-data/insert-data/#insert-intoselect","title":"INSERT INTO...SELECT","text":"<p>With <code>INSERT INTO SELECT</code>, you can quickly insert many rows into a table from the result of a SELECT statement, which can select from one or many tables. The <code>INSERT INTO SELECT</code> statement requires that the data types in source and target tables match.</p>"},{"location":"MatrixOne/Develop/import-data/insert-data/#insert-into-select-syntax","title":"INSERT INTO SELECT Syntax","text":"<p>Copy all columns from one table to another table:</p> <pre><code>INSERT INTO *table2*\nSELECT * FROM *table1\n*WHERE *condition*;\n</code></pre> <p>Copy only some columns from one table into another table:</p> <pre><code>INSERT INTO *table2* (*column1*, *column2*, *column3*, ...)\nSELECT *column1*, *column2*, *column3*, ...\nFROM *table1*\nWHERE *condition*;\n</code></pre>"},{"location":"MatrixOne/Develop/import-data/insert-data/#northwind-sample-database","title":"Northwind sample database","text":"<p>In this tutorial we will use the Northwind sample database.</p> <pre><code>CREATE TABLE Customers (\n  CustomerID INT AUTO_INCREMENT NOT NULL,\n  CustomerName VARCHAR(40) NOT NULL,\n  ContactName VARCHAR(30) NULL,\n  Address VARCHAR(60) NULL,\n  City VARCHAR(15) NULL,\n  PostalCode VARCHAR(10) NULL,\n  Country VARCHAR(15) NULL,\n  PRIMARY KEY (CustomerID)\n  );\nCREATE TABLE Suppliers (\n  SupplierID INT AUTO_INCREMENT NOT NULL,\n  SupplierName VARCHAR(40) NOT NULL,\n  ContactName VARCHAR(30) NULL,\n  Address VARCHAR(60) NULL,\n  City VARCHAR(15) NULL,\n  PostalCode VARCHAR(10) NULL,\n  Country VARCHAR(15) NULL,\n  PRIMARY KEY (SupplierID)\n  );\n</code></pre> <p>Below is a selection from the \"Customers\" table:</p> CustomerID CustomerName ContactName Address City PostalCode Country 1 Alfreds Futterkiste Maria Anders Obere Str. 57 Berlin 12209 Germany 2 Ana Trujillo Emparedados y helados Ana Trujillo Avda. de la Constituci\u00f3n 2222 M\u00e9xico D.F. 05021 Mexico 3 Antonio Moreno Taquer\u00eda Antonio Moreno Mataderos 2312 M\u00e9xico D.F. 05023 Mexico <p>And a selection from the \"Suppliers\" table:</p> SupplierID SupplierName ContactName Address City PostalCode Country 1 Exotic Liquid Charlotte Cooper 49 Gilbert St. Londona EC1 4SD UK 2 New Orleans Cajun Delights Shelley Burke P.O. Box 78934 New Orleans 70117 USA 3 Grandma Kelly's Homestead Regina Murphy 707 Oxford Rd. Ann Arbor 48104 USA"},{"location":"MatrixOne/Develop/import-data/insert-data/#example_2","title":"Example","text":"<p>The following SQL statement copies \"Suppliers\" into \"Customers\" (the columns that are not filled with data, will contain NULL):</p> <pre><code>INSERT INTO Customers (CustomerName, City, Country)\nSELECT SupplierName, City, Country FROM Suppliers;\n</code></pre> <p>The selection from the \"Customers\" table will now look like this:</p> CustomerID CustomerName ContactName Address City PostalCode Country 1 Alfreds Futterkiste Maria Anders Obere Str. 57 Berlin 12209 Germany 2 Ana Trujillo Emparedados y helados Ana Trujillo Avda. de la Constituci\u00f3n 2222 M\u00e9xico D.F. 05021 Mexico 3 Antonio Moreno Taquer\u00eda Antonio Moreno Mataderos 2312 M\u00e9xico D.F. 05023 Mexico 4 Exotic Liquid null null Londona null UK 5 New Orleans Cajun Delights null null New Orleans null USA 6 Grandma Kelly's Homestead null null Ann Arbor null USA"},{"location":"MatrixOne/Develop/import-data/prepared/","title":"Prepared","text":"<p>MatrixOne provides support for server-side prepared statements. This support takes advantage of the efficient client/server binary protocol. Using prepared statements with placeholders for parameter values has the following benefits:</p> <p>Less overhead for parsing the statement each time it is executed. Typically, database applications process large volumes of almost-identical statements, with only changes to literal or variable values in clauses such as WHERE for queries and deletes, SET for updates, and VALUES for inserts.</p> <p>Protection against SQL injection attacks. The parameter values can contain unescaped SQL quote and delimiter characters.</p>"},{"location":"MatrixOne/Develop/import-data/prepared/#prepare-execute-and-deallocate-prepare-statements","title":"PREPARE, EXECUTE, and DEALLOCATE PREPARE Statements","text":"<p>SQL syntax for prepared statements is based on three SQL statements:</p> <ul> <li> <p>PREPARE prepares a statement for execution.</p> </li> <li> <p>EXECUTE executes a prepared statement.</p> </li> <li> <p>DEALLOCATE PREPARE releases a prepared statement.</p> </li> </ul>"},{"location":"MatrixOne/Develop/import-data/prepared/#create-a-prepared-statement","title":"Create a prepared statement","text":"<pre><code>PREPARE stmt_name FROM preparable_stmt\n</code></pre> Arguments Description stmt_name The name of the prepared statement. preparable_stmt a string literal or a user variable that contains the text of the SQL statement. The text must represent a single statement, not multiple statements."},{"location":"MatrixOne/Develop/import-data/prepared/#executes-a-prepared-statement","title":"Executes a prepared statement","text":"<pre><code>EXECUTE stmt_name [USING @var_name [, @var_name] ...]\n</code></pre> Arguments Description stmt_name The name of the prepared statement."},{"location":"MatrixOne/Develop/import-data/prepared/#delete-a-prepared-statement","title":"Delete a prepared statement","text":"<pre><code>{DEALLOCATE | DROP} PREPARE stmt_name\n</code></pre> Arguments Description stmt_name The name of the prepared statement."},{"location":"MatrixOne/Develop/import-data/prepared/#example","title":"Example","text":"<pre><code>-- Create table\nCREATE TABLE customers (\nid INT PRIMARY KEY,\nname VARCHAR(50),\nemail VARCHAR(50)\n);\n\n-- Insert data\nINSERT INTO customers (id, name, email)\nVALUES (1, 'John Doe', 'john@example.com'),\n(2, 'Jane Smith', 'jane@example.com'),\n(3, 'Mike Johnson', 'mike@example.com');\n\n-- Prepare statement\nmysql&gt; PREPARE stmt FROM 'SELECT * FROM customers WHERE id = ?';\nQuery OK, 0 rows affected (0.02 sec)\n\n-- Execute prepared statement\nmysql&gt; SET @id = 2;\nQuery OK, 0 rows affected (0.00 sec)\n\nmysql&gt; EXECUTE stmt USING @id;\n+------+------------+------------------+\n| id   | name       | email            |\n+------+------------+------------------+\n|    2 | Jane Smith | jane@example.com |\n+------+------------+------------------+\n1 row in set (0.01 sec)\n\n-- Deallocate statement\nmysql&gt; DEALLOCATE PREPARE stmt;\nQuery OK, 0 rows affected (0.00 sec)\n</code></pre> <p>The above example begins by creating a table named <code>customers</code> with three columns: <code>id</code>, <code>name</code>, and <code>email</code>. Next, three rows of data are inserted into the table.</p> <p>Then, the <code>PREPARE</code> statement is used to prepare a statement, and the <code>SELECT * FROM customers WHERE id = ?</code> query is stored in the <code>stmt</code> variable.</p> <p>When executing the prepared statement, the <code>@id</code> variable is set to 2, and the <code>EXECUTE</code> statement is used to execute the prepared statement with the <code>@id</code> parameter.</p> <p>Finally, the <code>DEALLOCATE PREPARE</code> statement is used to deallocate the prepared statement and free up the associated resources.</p>"},{"location":"MatrixOne/Develop/import-data/update-data/","title":"Update Data","text":"<p>This document describes how to update data in MatrixOne using SQL statements.</p>"},{"location":"MatrixOne/Develop/import-data/update-data/#prerequisites","title":"Prerequisites","text":"<p>Single-node deployment of MatrixOne has been completed.</p>"},{"location":"MatrixOne/Develop/import-data/update-data/#sql-statements-for-updating-data","title":"SQL Statements for Updating Data","text":"<p>There are two ways to update data: <code>UPDATE</code> and <code>INSERT ON DUPLICATE KEY UPDATE</code>.</p> <p>The differences between the two are as follows:</p> <ul> <li> <p><code>UPDATE</code>:</p> <ul> <li>The UPDATE statement is used to update existing rows of data directly.</li> <li>You need to specify the target table, columns to be updated, their corresponding new values, and the update conditions.</li> <li>If the update conditions are met, the data of the existing rows will be modified.</li> <li>No changes will be made if the update conditions are not met.</li> </ul> </li> <li> <p><code>INSERT ON DUPLICATE KEY UPDATE</code>:</p> <ul> <li>INSERT ON DUPLICATE KEY UPDATE is an extension of the INSERT statement, used to handle duplicate keys when inserting new rows.</li> <li>When there are duplicate keys in the inserted data, i.e., when the values of specific column(s) or combination of columns are the same as existing rows' key values, an UPDATE operation will be performed instead of inserting a new row.</li> <li>You can specify the data to be inserted and the update operations to be performed when duplicate key conflicts occur in a single statement.</li> <li>The specified update operations will update the corresponding columns for rows with duplicate keys.</li> </ul> </li> </ul> <p>Key Differences:</p> <ul> <li>The UPDATE statement is used to directly update existing rows, while the INSERT ON DUPLICATE KEY UPDATE statement is used to handle duplicate keys when inserting data.</li> <li>The UPDATE statement requires you to specify the target table, columns to be updated, their corresponding new values, and the update conditions. The INSERT ON DUPLICATE KEY UPDATE statement allows you to specify the data to be inserted and the update operations in a single statement.</li> </ul>"},{"location":"MatrixOne/Develop/import-data/update-data/#update","title":"<code>UPDATE</code>","text":"<pre><code>UPDATE table_reference\n    SET assignment_list\n    [WHERE where_condition]\n    [ORDER BY ...]\n    [LIMIT row_count]\n</code></pre> <ol> <li> <p><code>UPDATE table_reference</code>: Specifies the target table for updating data. The table_reference can be a single table or multiple tables joined together.</p> </li> <li> <p><code>SET assignment_list</code>: Specifies the columns and values to be updated. The assignment_list lists column names and their corresponding values, separated by commas. Each column name is followed by an equal sign (=) to associate it with the new value to be updated.</p> </li> <li> <p><code>[WHERE where_condition]</code> (optional): The WHERE clause is used to specify the conditions for updating data. Only rows that satisfy the specified conditions will be updated. where_condition is a logical expression that can define conditions using various comparisons and logical operators.</p> </li> <li> <p><code>[ORDER BY ...]</code> (optional): The ORDER BY clause is used to sort the rows to be updated based on the specified columns. You can use one or more columns and specify ascending (ASC) or descending (DESC) order. The sorting will affect the order of the updated rows.</p> </li> <li> <p><code>[LIMIT row_count]</code> (optional): The LIMIT clause limits the number of rows to be updated. It specifies the maximum number of rows (row_count) to be updated. If the LIMIT clause is not specified, all rows that satisfy the WHERE condition will be updated.</p> </li> </ol> <p>During the data update process, specify the target table, the columns and values to be updated, the update conditions, and optionally, the sorting and limiting parameters to perform flexible data updates according to your requirements.</p>"},{"location":"MatrixOne/Develop/import-data/update-data/#insert-on-duplicate-key-update","title":"<code>INSERT ON DUPLICATE KEY UPDATE</code>","text":"<pre><code>&gt; INSERT INTO [db.]table [(c1, c2, c3)] VALUES (v11, v12, v13), (v21, v22, v23), ...\n  [ON DUPLICATE KEY UPDATE column1 = value1, column2 = value2, column3 = value3, ...];\n</code></pre> <ol> <li><code>INSERT INTO [db.]table [(c1, c2, c3)] VALUES (v11, v12, v13), (v21, v22, v23), ...</code></li> <li>The INSERT INTO statement inserts new rows into a table.</li> <li><code>[db.]</code> (optional) specifies the database name where the table is located. If not provided, the default is the current database.</li> <li><code>table</code> is the name of the target table where the data will be inserted.</li> <li><code>[(c1, c2, c3)]</code> (optional) specifies the columns to be inserted, enclosed in parentheses and separated by commas. If column names are not specified, it is assumed that all available columns in the table will be inserted.</li> <li> <p>The VALUES clause specifies the values to be inserted. Each value corresponds to its respective column and is separated by commas and enclosed in parentheses. Multiple rows of data can be inserted, with each row separated by commas.</p> </li> <li> <p><code>[ON DUPLICATE KEY UPDATE column1 = value1, column2 = value2, column3 = value3, ...]</code></p> </li> <li>The ON DUPLICATE KEY UPDATE clause handles duplicate keys when inserting data.</li> <li>When there are duplicate keys in the inserted data, i.e., when the values of specific column(s) or combination of columns are the same as existing rows' key values, an UPDATE operation will be performed instead of inserting a new row.</li> <li><code>column1, column2, column3</code> represent the column names to be updated, and <code>value1, value2, value3</code> represent the corresponding values to be updated.</li> </ol> <p>This syntax allows you to insert one or multiple rows of data into the specified table.</p> <p>. If a duplicate key situation occurs, i.e., a row with the same key value already exists, an UPDATE operation is executed to update that row's data.</p> <p>When using the INSERT INTO statement, provide the corresponding column names and values based on the table structure and requirements. If duplicate keys are encountered, and the ON DUPLICATE KEY UPDATE clause is used, specify the columns to be updated and their corresponding values.</p>"},{"location":"MatrixOne/Develop/import-data/update-data/#examples","title":"Examples","text":"<ul> <li>Example 1: <code>UPDATE</code></li> </ul> <pre><code>-- Create table\nCREATE TABLE employees (\nid INT PRIMARY KEY,\nname VARCHAR(50),\ndepartment VARCHAR(50),\nsalary DECIMAL(10, 2)\n);\n\n-- Insert data\nINSERT INTO employees (id, name, department, salary)\nVALUES (1, 'John Doe', 'HR', 5000),\n(2, 'Jane Smith', 'Marketing', 6000),\n(3, 'Mike Johnson', 'IT', 7000),\n(4, 'Emily Brown', 'Finance', 8000),\n(5, 'David Wilson', 'HR', 5500);\n\n-- View initial data\nmysql&gt; SELECT * FROM employees;\n+------+--------------+------------+---------+\n| id   | name         | department | salary  |\n+------+--------------+------------+---------+\n|    1 | John Doe     | HR         | 5000.00 |\n|    2 | Jane Smith   | Marketing  | 6000.00 |\n|    3 | Mike Johnson | IT         | 7000.00 |\n|    4 | Emily Brown  | Finance    | 8000.00 |\n|    5 | David Wilson | HR         | 5500.00 |\n+------+--------------+------------+---------+\n5 rows in set (0.01 sec)\n\n-- Update data using the UPDATE statement. The salary of the first two employees in the 'HR' department is increased by 10%. The WHERE clause specifies the condition for updating the data; only rows with the department 'HR' will be updated. The ORDER BY clause sorts the rows by the id column in ascending order, and the LIMIT clause limits the update to only two rows.\nmysql&gt; UPDATE employees\nSET salary = salary * 1.1\nWHERE department = 'HR'\nORDER BY id\nLIMIT 2;\nQuery OK, 2 rows affected (0.02 sec)\n\n-- View updated data\nmysql&gt; SELECT * FROM employees;\n+------+--------------+------------+---------+\n| id   | name         | department | salary  |\n+------+--------------+------------+---------+\n|    2 | Jane Smith   | Marketing  | 6000.00 |\n|    3 | Mike Johnson | IT         | 7000.00 |\n|    4 | Emily Brown  | Finance    | 8000.00 |\n|    1 | John Doe     | HR         | 5500.00 |\n|    5 | David Wilson | HR         | 6050.00 |\n+------+--------------+------------+---------+\n5 rows in set (0.00 sec)\n</code></pre> <ul> <li>Example 2: <code>INSERT ... ON DUPLICATE KEY UPDATE</code></li> </ul> <pre><code>-- Create table\nCREATE TABLE students (\nid INT PRIMARY KEY,\nname VARCHAR(50),\nage INT,\ngrade VARCHAR(10)\n);\n\n-- Insert data\nINSERT INTO students (id, name, age, grade)\nVALUES (1, 'John Doe', 18, 'A'),\n(2, 'Jane Smith', 17, 'B'),\n(3, 'Mike Johnson', 19, 'A'),\n(4, 'Emily Brown', 18, 'A');\n\n-- View initial data\nmysql&gt; SELECT * FROM students;\n+------+--------------+------+-------+\n| id   | name         | age  | grade |\n+------+--------------+------+-------+\n|    1 | John Doe     |   18 | A     |\n|    2 | Jane Smith   |   17 | B     |\n|    3 | Mike Johnson |   19 | A     |\n|    4 | Emily Brown  |   18 | A     |\n+------+--------------+------+-------+\n4 rows in set (0.01 sec)\n\n-- Update data\nmysql&gt; INSERT INTO students (id, name, age, grade)\nVALUES (2, 'Jane Smith', 18, 'A')\nON DUPLICATE KEY UPDATE age = VALUES(age), grade = VALUES(grade);\nQuery OK, 1 row affected (0.01 sec)\n\n-- View updated data\nmysql&gt; SELECT * FROM students;\n+------+--------------+------+-------+\n| id   | name         | age  | grade |\n+------+--------------+------+-------+\n|    1 | John Doe     |   18 | A     |\n|    3 | Mike Johnson |   19 | A     |\n|    4 | Emily Brown  |   18 | A     |\n|    2 | Jane Smith   |   18 | A     |\n+------+--------------+------+-------+\n4 rows in set (0.00 sec)\n</code></pre> <p>In the above examples, a table named <code>students</code> is first created with four columns: <code>id</code>, <code>name</code>, <code>age</code>, and <code>grade</code>. Then, four rows of student data are inserted using the INSERT INTO statement.</p> <p>Next, the initial data is viewed using a SELECT statement. Then, an INSERT INTO statement is used to insert a new row of student data where the student with <code>id</code> 2 already exists, causing a duplicate key situation. In this case, the ON DUPLICATE KEY UPDATE clause is used to update that row's data. The columns to be updated, and their corresponding values are specified using the VALUES function.</p> <p>Finally, the updated data is viewed again using a SELECT statement, showing that the age and grade of the student with <code>id</code> 2 have been updated.</p>"},{"location":"MatrixOne/Develop/import-data/bulk-load/1.1-load-s3/","title":"Load data from S3","text":""},{"location":"MatrixOne/Develop/import-data/bulk-load/1.1-load-s3/#overview","title":"Overview","text":"<p>S3 (Simple Storage Service) object storage refers to Amazon's Simple Storage Service. You can also store almost any type and size of data with S3-compatible object storage, including data lakes, cloud-native applications, and mobile apps. If you are unfamiliar with S3 object service, you may look up some basic introductions in AWS.</p> <p>AWS S3 has been remarkably successful for over a decade, so it became the de facto standard for object storage. Thus almost every mainstream public cloud vendors provide an S3-compatible object storage service.</p> <p>MatrixOne supports loading files from S3-compatible object storage services into databases. MatrixOne supports AWS and mainstream cloud vendors in China (Alibaba Cloud, Tencent Cloud).</p> <p>In MatrixOne, there are two methods to import the data from S3-compatible object storage:</p> <ul> <li>Use <code>Load data</code> with an s3option to load the file into MatrixOne. This method will load the data into MatrixOne, and all next queries will happen inside MatrixOne.</li> <li>Create an <code>external table</code> with an s3option mapping to an S3 file, and query this external table directly. This method allows data access through an S3-compatible object storage service; each query's networking latency will be counted.</li> </ul> <p>When importing data from public clouds like AWS S3 or Alibaba Cloud OSS, the appropriate access permissions are required. Generally, there are two methods to choose from: role-based access and key-based access.</p> <ul> <li> <p>Role-Based Access: This involves creating a specific role within the public cloud account where the data is stored. This role is authorized to grant MatrixOne applications the necessary data access permissions. This approach is more secure and offers greater ease in managing and adjusting data access permissions.</p> </li> <li> <p>Key-Based Access: Data can be accessed using the <code>Access Key ID</code> and <code>Secret Access Key</code> of a user with the required data access permissions. While this method is relatively straightforward, it is less secure because exposing the <code>Access Key ID</code> and <code>Secret Access Key</code> could lead to severe consequences.</p> </li> </ul>"},{"location":"MatrixOne/Develop/import-data/bulk-load/1.1-load-s3/#method-1-load-data","title":"Method 1: LOAD DATA","text":""},{"location":"MatrixOne/Develop/import-data/bulk-load/1.1-load-s3/#syntax","title":"Syntax","text":"<pre><code>LOAD DATA\n| URL s3options {\"endpoint\"='&lt;string&gt;', \"access_key_id\"='&lt;string&gt;', \"secret_access_key\"='&lt;string&gt;', \"bucket\"='&lt;string&gt;', \"role_arn\"='xxxx', \"external_id\"='yyy', \"filepath\"='&lt;string&gt;', \"region\"='&lt;string&gt;', \"compression\"='&lt;string&gt;'}\nINTO TABLE tbl_name\n[{FIELDS | COLUMNS}\n[TERMINATED BY 'string']\n[[OPTIONALLY] ENCLOSED BY 'char']\n[ESCAPED BY 'char']\n]\n[IGNORE number {LINES | ROWS}]\n[PARALLEL {'TRUE' | 'FALSE'}]\n</code></pre> <p>Parameter Description</p> Parameter Description endpoint The URL that can connect to the object storage service. For example: s3.us-west-2.amazonaws.com Note: LOAD DATA supports only URLs for AWS object storage services and Alibaba Cloud external object storage services. access_key_id Access key ID used for authentication. secret_access_key Secret access key associated with the access key ID. bucket Specifies the bucket in S3 storage. role_arn The Amazon Resource Name (ARN) of an AWS role, typically used for cross-account access. Note: It is recommended to use role-based access. If you choose role-based access, you do not need to fill in <code>access_key_id</code> and <code>secret_access_key</code>. Only the <code>role_arn</code> parameter needs to be provided. external_id An external ID used in conjunction with the role ARN. filepath relative file path. regex expression is supported as /files/*.csv. region object storage service region compression Compressed format of S3 files. If empty or \"none\", it indicates uncompressed files. Supported fields or Compressed format are \"auto\", \"none\", \"gzip\", \"bz2\", and \"lz4\". <p>The other paramaters are identical to a ordinary LOAD DATA, see LOAD DATA for more details.</p>"},{"location":"MatrixOne/Develop/import-data/bulk-load/1.1-load-s3/#statement-examples","title":"Statement Examples","text":"<ul> <li>Role-Based Access</li> </ul> <pre><code># LOAD a csv file from AWS S3 us-east-1 region, test-load-mo bucket, without compression\nLOAD DATA URL s3option{\"endpoint\"='s3.us-east-1.amazonaws.com', \"bucket\"='test-load-mo', \"role_arn\"='xxxx', \"filepath\"='test.csv', \"region\"='us-east-1', \"compression\"='none'} INTO TABLE t1 FIELDS TERMINATED BY ',' ENCLOSED BY '\\\"' LINES TERMINATED BY '\\n';\n\n# LOAD all csv files from Alibaba Cloud OSS Shanghai region, test-load-data bucket, without compression\nLOAD DATA URL s3option{\"endpoint\"='oss-cn-shanghai.aliyuncs.com', \"bucket\"='test-load-data', \"role_arn\"='xxxx', \"filepath\"='/test/*.csv', \"region\"='oss-cn-shanghai', \"compression\"='none'} INTO TABLE t1 FIELDS TERMINATED BY ',' ENCLOSED BY '\\\"' LINES TERMINATED BY '\\n';\n</code></pre> <ul> <li>Key-Based Access</li> </ul> <pre><code># LOAD a csv file from AWS S3 us-east-1 region, test-load-mo bucket, without compression\nLOAD DATA URL s3option{\"endpoint\"='s3.us-east-1.amazonaws.com', \"access_key_id\"='XXXXXX', \"secret_access_key\"='XXXXXX', \"bucket\"='test-load-mo', \"filepath\"='test.csv', \"region\"='us-east-1', \"compression\"='none'} INTO TABLE t1 FIELDS TERMINATED BY ',' ENCLOSED BY '\\\"' LINES TERMINATED BY '\\n';\n\n# LOAD all csv files from Alibaba Cloud OSS Shanghai region, test-load-data bucket, without compression\nLOAD DATA URL s3option{\"endpoint\"='oss-cn-shanghai.aliyuncs.com', \"access_key_id\"='XXXXXX', \"secret_access_key\"='XXXXXX', \"bucket\"='test-load-data', \"filepath\"='/test/*.csv', \"region\"='oss-cn-shanghai', \"compression\"='none'} INTO TABLE t1 FIELDS TERMINATED BY ',' ENCLOSED BY '\\\"' LINES TERMINATED BY '\\n';\n\n# LOAD a csv file from Tencent Cloud COS Shanghai region, test-1252279971 bucket, without bz2 compression\nLOAD DATA URL s3option{\"endpoint\"='cos.ap-shanghai.myqcloud.com', \"access_key_id\"='XXXXXX', \"secret_access_key\"='XXXXXX', \"bucket\"='test-1252279971', \"filepath\"='test.csv.bz2', \"region\"='ap-shanghai', \"compression\"='bz2'} INTO TABLE t1 FIELDS TERMINATED BY ',' ENCLOSED BY '\\\"' LINES TERMINATED BY '\\n';\n</code></pre> <p>Note</p> <p>MatrixOne provides security assurance for S3 authentication information, such as <code>access_key_id</code> and <code>secret_access_key</code> sensitive information will be hidden in the system table (statement_info) records to ensure your account security.</p>"},{"location":"MatrixOne/Develop/import-data/bulk-load/1.1-load-s3/#tutorial-load-a-file-from-aws-s3","title":"Tutorial: Load a file from AWS S3","text":"<p>In this tutorial, we will walk you through the process of loading a .csv file from AWS S3; we assume that you already have an AWS account and already have your data file ready in your S3 service. If you do not already have that, please sign up and upload your data file first; you may check on the AWS S3 official tutorial. The process for Alibaba Cloud OSS and Tencent Cloud COS is similar to AWS S3.</p> <p>Note</p> <p>This code example does not show account information such as access_key_id and secret_access_key because of account privacy. You can read this document to understand the main steps; specific data and account information will not be shown.</p> <ol> <li> <p>Enter into AWS S3 &gt; buckets &gt; Create bucket, create a bucket test-loading with a public access and upload the file char_varchar_1.csv.</p> <p></p> <p></p> </li> <li> <p>Get or create your AWS api key. Enter into Your Account Name &gt; Security Credentials.</p> <ul> <li>Method 1 - Role-Based Access (Recommended): To obtain your ARN, navigate to Security Credentials:</li> </ul> <p></p> <ul> <li>Method 2 - Key-Based Access (Not Recommended):  To get your existing Access Key or create a new one. If you can't access your AWS Access key, you can contact your AWS administrator.</li> </ul> <p></p> <p>Within Security Credentials &gt; Create access key, you can obtain the Access key and Secret access key either from the downloaded credentials or from this web page.</p> <p></p> <p></p> </li> <li> <p>Launch the MySQL Client, create tables in MatrixOne, for example:</p> <pre><code>create database db;\nuse db;\ndrop table if exists t1;\ncreate table t1(col1 char(225), col2 varchar(225), col3 text, col4 varchar(225));\n</code></pre> </li> <li> <p>Import the file into MatrixOne:</p> <ul> <li>Method 1 - Role-Based Access (Recommended):</li> </ul> <pre><code>LOAD DATA URL s3option{\"endpoint\"='s3.us-east-1.amazonaws.com', \"bucket\"='test-loading', \"role_arn\"='xxxx\", \"filepath\"='char_varchar_1.csv', \"region\"='us-east-1', \"compression\"='none'} INTO TABLE t1;\n</code></pre> <ul> <li>Method 2 - Key-Based Access (Not Recommended)</li> </ul> <pre><code>LOAD DATA URL s3option{\"endpoint\"='s3.us-east-1.amazonaws.com', \"access_key_id\"='XXXXXX', \"secret_access_key\"='XXXXXX', \"bucket\"='test-loading', \"filepath\"='char_varchar_1.csv', \"region\"='us-east-1', \"compression\"='none'} INTO TABLE t1;\n</code></pre> </li> <li> <p>After the import is successful, you can run SQL statements to check the result of imported data:</p> <pre><code>mysql&gt; select * from t1;\n+-----------+-----------+-----------+-----------+\n| col1      | col2      | col3      | col4      |\n+-----------+-----------+-----------+-----------+\n| a         | b         | c         | d         |\n| a         | b         | c         | d         |\n| 'a'       | 'b'       | 'c'       | 'd'       |\n| 'a'       | 'b'       | 'c'       | 'd'       |\n| aa,aa     | bb,bb     | cc,cc     | dd,dd     |\n| aa,       | bb,       | cc,       | dd,       |\n| aa,,,aa   | bb,,,bb   | cc,,,cc   | dd,,,dd   |\n| aa',',,aa | bb',',,bb | cc',',,cc | dd',',,dd |\n| aa\"aa     | bb\"bb     | cc\"cc     | dd\"dd     |\n| aa\"aa     | bb\"bb     | cc\"cc     | dd\"dd     |\n| aa\"aa     | bb\"bb     | cc\"cc     | dd\"dd     |\n| aa\"\"aa    | bb\"\"bb    | cc\"\"cc    | dd\"\"dd    |\n| aa\"\"aa    | bb\"\"bb    | cc\"\"cc    | dd\"\"dd    |\n| aa\",aa    | bb\",bb    | cc\",cc    | dd\",dd    |\n| aa\"\",aa   | bb\"\",bb   | cc\"\",cc   | dd\"\",dd   |\n|           |           |           |           |\n|           |           |           |           |\n| NULL      | NULL      | NULL      | NULL      |\n|           |           |           |           |\n| \"         | \"         | \"         | \"         |\n| \"\"        | \"\"        | \"\"        | \"\"        |\n+-----------+-----------+-----------+-----------+\n21 rows in set (0.03 sec)\n</code></pre> </li> </ol>"},{"location":"MatrixOne/Develop/import-data/bulk-load/1.1-load-s3/#method-2-specify-s3-file-to-an-external-table","title":"Method 2: Specify S3 file to an external table","text":""},{"location":"MatrixOne/Develop/import-data/bulk-load/1.1-load-s3/#syntax_1","title":"Syntax","text":"<pre><code>create external table t(...) URL s3option{\"endpoint\"='&lt;string&gt;', \"access_key_id\"='&lt;string&gt;', \"secret_access_key\"='&lt;string&gt;', \"bucket\"='&lt;string&gt;', \"filepath\"='&lt;string&gt;', \"region\"='&lt;string&gt;', \"compression\"='&lt;string&gt;'}     [{FIELDS | COLUMNS}\n[TERMINATED BY 'string']\n[[OPTIONALLY] ENCLOSED BY 'char']\n]\n[IGNORE number {LINES | ROWS}];\n</code></pre> <p>Note</p> <p>MatrixOne only supports <code>select</code> on external tables. <code>Delete</code>, <code>insert</code>, and <code>update</code> are not supported.</p> <p>Parameter Description</p> Parameter Description endpoint A endpoint is a URL that can conncect to object storage service. For example: s3.us-west-2.amazonaws.com access_key_id Access key ID secret_access_key Secret access key bucket S3 Bucket to access filepath relative file path. regex expression is supported as /files/*.csv. region object storage service region compression Compressed format of S3 files. If empty or \"none\", it indicates uncompressed files. Supported fields or Compressed format are \"auto\", \"none\", \"gzip\", \"bz2\", and \"lz4\". <p>The other paramaters are identical to a ordinary LOAD DATA, see LOAD DATA for more details.</p> <p>For more information about External Table, see CREATE EXTERNAL TABLE.</p> <p>Statement Examples:</p> <pre><code>## Create a external table for a .csv file from AWS S3\ncreate external table t1(col1 char(225)) url s3option{\"endpoint\"='s3.us-east-1.amazonaws.com', \"access_key_id\"='XXXXXX', \"secret_access_key\"='XXXXXX', \"bucket\"='test-loading', \"filepath\"='test.csv', \"region\"='us-east-1', \"compression\"='none'} fields terminated by ',' enclosed by '\\\"' lines terminated by '\\n';\n\n## Create a external table for a .csv file compressed with BZIP2 from Tencent Cloud\ncreate external table t1(col1 char(225)) url s3option{\"endpoint\"='cos.ap-shanghai.myqcloud.com', \"access_key_id\"='XXXXXX', \"secret_access_key\"='XXXXXX', \"bucket\"='test-1252279971', \"filepath\"='test.csv.bz2', \"region\"='ap-shanghai', \"compression\"='bz2'} fields terminated by ',' enclosed by '\\\"' lines terminated by '\\n' ignore 1 lines;\n</code></pre>"},{"location":"MatrixOne/Develop/import-data/bulk-load/1.1-load-s3/#tutorial-create-an-external-table-with-s3-file","title":"Tutorial: Create an external table with S3 file","text":"<p>This tutorial will walk you through the whole process of creating an external table with a .csv file from AWS S3.</p> <p>Note</p> <p>This code example does not show account information such as access_key_id and secret_access_key because of account privacy. You can read this document to understand the main steps; specific data and account information will not be shown.</p> <ol> <li> <p>Download the data file. Enter into AWS S3 &gt; buckets, create a bucket test-loading with a public access and upload the file char_varchar_1.csv.</p> <p></p> <p></p> </li> <li> <p>Get or create your AWS api key. Enter into Your Account Name &gt; Security Credentials, get your existing Access Key or create a new one.</p> <p></p> <p></p> <p>You can get the access key id and secret access key from the downloaded credentials or this webpage.</p> <p></p> </li> <li> <p>Launch the MySQL Client, and specify the S3 file to an external table:</p> <pre><code>create database db;\nuse db;\ndrop table if exists t1;\ncreate external table t1(col1 char(225), col2 varchar(225), col3 text, col4 varchar(225)) url s3option{\"endpoint\"='s3.us-east-1.amazonaws.com', \"access_key_id\"='XXXXXX', \"secret_access_key\"='XXXXXX', \"bucket\"='test-loading', \"filepath\"='char_varchar_1.csv', \"region\"='us-east-1', \"compression\"='none'} fields terminated by ',' enclosed by '\\\"' lines terminated by '\\n';\n</code></pre> </li> <li> <p>After the import is successful, you can run SQL statements to check the result of the imported data. You can see that the query speed is significantly slower than querying from a local table.</p> <pre><code>select * from t1;\n+-----------+-----------+-----------+-----------+\n| col1      | col2      | col3      | col4      |\n+-----------+-----------+-----------+-----------+\n| a         | b         | c         | d         |\n| a         | b         | c         | d         |\n| 'a'       | 'b'       | 'c'       | 'd'       |\n| 'a'       | 'b'       | 'c'       | 'd'       |\n| aa,aa     | bb,bb     | cc,cc     | dd,dd     |\n| aa,       | bb,       | cc,       | dd,       |\n| aa,,,aa   | bb,,,bb   | cc,,,cc   | dd,,,dd   |\n| aa',',,aa | bb',',,bb | cc',',,cc | dd',',,dd |\n| aa\"aa     | bb\"bb     | cc\"cc     | dd\"dd     |\n| aa\"aa     | bb\"bb     | cc\"cc     | dd\"dd     |\n| aa\"aa     | bb\"bb     | cc\"cc     | dd\"dd     |\n| aa\"\"aa    | bb\"\"bb    | cc\"\"cc    | dd\"\"dd    |\n| aa\"\"aa    | bb\"\"bb    | cc\"\"cc    | dd\"\"dd    |\n| aa\",aa    | bb\",bb    | cc\",cc    | dd\",dd    |\n| aa\"\",aa   | bb\"\",bb   | cc\"\",cc   | dd\"\",dd   |\n|           |           |           |           |\n|           |           |           |           |\n| NULL      | NULL      | NULL      | NULL      |\n|           |           |           |           |\n| \"         | \"         | \"         | \"         |\n| \"\"        | \"\"        | \"\"        | \"\"        |\n+-----------+-----------+-----------+-----------+\n21 rows in set (1.32 sec)\n</code></pre> </li> <li> <p>(Optional)If you need to import external table data into a data table in MatrixOne, you can use the following SQL statement:</p> <p>Create a new table t2 in MatrixOne:</p> <pre><code>create table t2(col1 char(225), col2 varchar(225), col3 text, col4 varchar(225));\n</code></pre> <p>Import the external table t1 to t2:</p> <pre><code>insert into t2 select * from t1;\n</code></pre> </li> </ol>"},{"location":"MatrixOne/Develop/import-data/bulk-load/bulk-load-overview/","title":"Bulk Load Overview","text":"<p>MatrixOne supports using the <code>LOAD DATA</code> command to insert many rows into MatrixOne tables and the <code>SOURCE</code> command to import table structures and data into the entire database.</p>"},{"location":"MatrixOne/Develop/import-data/bulk-load/bulk-load-overview/#load-data","title":"<code>LOAD DATA</code>","text":"<p>MatrixOne supports the <code>LOAD DATA</code> command for importing csv and jsonline files from either the local file system or S3-compatible object storage.</p>"},{"location":"MatrixOne/Develop/import-data/bulk-load/bulk-load-overview/#import-the-different-file-types","title":"Import the different file types","text":"<p>According to the different file types, MatrixOne currently mainly supports importing .csv or jsonlines:</p> <ul> <li>For how to import .csv format, see Load csv format data.</li> <li>For how to import .jl format, see Load jsonlines format data.</li> </ul>"},{"location":"MatrixOne/Develop/import-data/bulk-load/bulk-load-overview/#import-data-from-different-data-storage-locations","title":"Import data from different data storage locations","text":"<p>According to the different data storage locations, MatrixOne supports importing data from local and importing data from S3(Simple Storage Service).</p> <ul> <li>For how to import data from local host, see Load csv format data or Load jsonlines format data.</li> <li>For how to import data from S3, see Load data from S3.</li> </ul>"},{"location":"MatrixOne/Develop/import-data/bulk-load/bulk-load-overview/#source","title":"<code>SOURCE</code>","text":"<p>MatrixOne supports using the <code>SOURCE</code> command to import the entire database structure (including table structures and data) by executing SQL statements from an external SQL script file. The <code>SOURCE</code> command may not perform as well as the <code>LOAD DATA</code> command when processing large amounts of data because it needs to parse and execute each SQL statement.</p> <ul> <li>Load data by using the <code>source</code></li> </ul>"},{"location":"MatrixOne/Develop/import-data/bulk-load/bulk-load-overview/#more-import-capabilities","title":"More import capabilities","text":"<ul> <li>MatrixOne supports the parallel loading of data files: when the data file is large, to improve the loading speed, MatrixOne also supports parallel loading, see the <code>LOAD DATA</code> parameter description for importing data.</li> <li>In a MatrixOne distributed cluster, in addition to importing data locally and from the public cloud object storage S3 to MatrixOne, you can also import data through the local Minio component. For details, see Import data from local Minio to MatrixOne</li> </ul>"},{"location":"MatrixOne/Develop/import-data/bulk-load/load-csv/","title":"Load csv format data","text":"<p>This document will guide you on how to import large amounts of .csv format data to MatrixOne.</p>"},{"location":"MatrixOne/Develop/import-data/bulk-load/load-csv/#syntax","title":"Syntax","text":"<ul> <li>Scenario 1: The data file is in the same machine with the MatrixOne server.</li> </ul> <pre><code>LOAD DATA\nINFILE 'file_name'\nINTO TABLE tbl_name\n[{FIELDS | COLUMNS}\n[TERMINATED BY 'string']\n[[OPTIONALLY] ENCLOSED BY 'char']\n]\n[LINES\n[STARTING BY 'string']\n[TERMINATED BY 'string']\n]\n[IGNORE number {LINES | ROWS}]\n[PARALLEL {'TRUE' | 'FALSE'}]\n</code></pre> <ul> <li>Scenario 2: The data file is in separate machines with the MatrixOne server.</li> </ul> <pre><code>LOAD DATA LOCAL\nINFILE 'file_name'\nINTO TABLE tbl_name\n[{FIELDS | COLUMNS}\n[TERMINATED BY 'string']\n[[OPTIONALLY] ENCLOSED BY 'char']\n]\n[LINES\n[STARTING BY 'string']\n[TERMINATED BY 'string']\n]\n[IGNORE number {LINES | ROWS}]\n[PARALLEL {'TRUE' | 'FALSE'}]\n</code></pre>"},{"location":"MatrixOne/Develop/import-data/bulk-load/load-csv/#before-you-start","title":"Before you start","text":"<p>Make sure you have already Deployed and Launched standalone MatrixOne.</p>"},{"location":"MatrixOne/Develop/import-data/bulk-load/load-csv/#using-the-load-data-command-in-mysql-client","title":"Using the <code>Load data</code> command in MySQL Client","text":"<p>You can use <code>Load Data</code> to import data from big data files.</p> <p>This section will describe how to import a .csv file.</p> <p>Note: A <code>csv</code>(comma-separated values) file is a delimited text file that uses a comma to separate values.</p>"},{"location":"MatrixOne/Develop/import-data/bulk-load/load-csv/#steps","title":"Steps","text":""},{"location":"MatrixOne/Develop/import-data/bulk-load/load-csv/#the-data-file-is-in-the-same-machine-with-the-matrixone-server","title":"The data file is in the same machine with the MatrixOne server","text":"<ol> <li> <p>Before executing <code>Load Data</code> in MatrixOne, the table needs to be created in advance. For now, the data file is required to be at the same machine with MatrixOne server, a file transfer is necessary if they are in separate machines.</p> </li> <li> <p>Launch the MySQL Client in the MatrixOne local server for accessing the local file system.</p> <pre><code>mysql -h 127.0.0.1 -P 6001 -uroot -p111\n</code></pre> <p>Info</p> <p>The login account in the above code snippet is the initial account; please change the initial password after logging in to MatrixOne; see Password Management.</p> </li> <li> <p>Execute <code>LOAD DATA</code> with the corresponding file path in MySQL client.</p> <pre><code>mysql&gt; LOAD DATA INFILE '/tmp/xxx.csv'\nINTO TABLE xxxxxx\nFIELDS TERMINATED BY ',' OPTIONALLY ENCLOSED BY '\"' LINES TERMINATED BY \"\\r\\n\";\n</code></pre> </li> </ol>"},{"location":"MatrixOne/Develop/import-data/bulk-load/load-csv/#the-data-file-is-in-separate-machines-with-the-matrixone-server","title":"The data file is in separate machines with the MatrixOne server","text":"<ol> <li> <p>Before executing <code>LOAD DATA LOCAL</code> in MatrixOne, the table needs to be created in advance.</p> </li> <li> <p>Launch the MySQL Client in the MatrixOne local server for accessing the local file system.</p> <pre><code>mysql -h &lt;mo-host-ip&gt; -P 6001 -uroot -p111 --local-infile\n</code></pre> </li> <li> <p>Execute <code>LOAD DATA LOCAL</code> with the corresponding file path in MySQL client.</p> <pre><code>mysql&gt; LOAD DATA LOCAL INFILE '/tmp/xxx.csv'\nINTO TABLE table_name\nFIELDS TERMINATED BY ',' OPTIONALLY ENCLOSED BY '\"' LINES TERMINATED BY \"\\r\\n\";\n</code></pre> </li> </ol>"},{"location":"MatrixOne/Develop/import-data/bulk-load/load-csv/#example-using-load-data-with-docker-version","title":"Example using <code>Load data</code> with <code>docker</code> version","text":"<p>If you install MatrixOne by <code>docker</code>, the file system is inside the docker image by default. To work with local directory, you need to bind a local directory to the container. In the following example, the local file system path <code>~/tmp/docker_loaddata_demo/</code> is binded to the MatrixOne docker image, with a mapping to the <code>/ssb-dbgen-path</code> path inside the docker. We will walk you through the whole process of loading data with MatrixOne 1.2.3 docker version in this example.</p> <ol> <li> <p>Download the dataset file and store the data in ~/tmp/docker_loaddata_demo/:</p> <pre><code>cd ~/tmp/docker_loaddata_demo/\nwget https://community-shared-data-1308875761.cos.ap-beijing.myqcloud.com/lineorder_flat.tar.bz2\n</code></pre> </li> <li> <p>Unzip the dataset:</p> <pre><code>tar -jxvf lineorder_flat.tar.bz2\n</code></pre> </li> <li> <p>Use Docker to launch MatrixOne, and mount the directory ~/tmp/docker_loaddata_demo/ that stores data files to a directory in the container. The container directory is /sb-dbgen-path as an example:</p> <pre><code>sudo docker run --name matrixone --privileged -d -p 6001:6001 -v ~/tmp/docker_loaddata_demo/:/ssb-dbgen-path:rw matrixorigin/matrixone:1.2.3\n</code></pre> </li> <li> <p>Connect to MatrixOne server:</p> <pre><code>mysql -h 127.0.0.1 -P 6001 -uroot -p111\n</code></pre> <p>Note: If your data file is on a different machine from the MatrixOne server, that is, the data file is on the client machine you are using, then you need to use the command line to connect to the MatrixOne service host: <code>mysql -h &lt;mo-host -ip&gt; -P 6001 -uroot -p111 --local-infile</code>; and the imported command line needs to use <code>LOAD DATA LOCAL INFILE</code> syntax.</p> </li> <li> <p>Create lineorder_flat tables in MatrixOne, and import the dataset into MatriOne:</p> <pre><code>mysql&gt; create database if not exists ssb;\nmysql&gt; use ssb;\nmysql&gt; drop table if exists lineorder_flat;\nmysql&gt; CREATE TABLE lineorder_flat(\n  LO_ORDERKEY bigint key,\n  LO_LINENUMBER int,\n  LO_CUSTKEY int,\n  LO_PARTKEY int,\n  LO_SUPPKEY int,\n  LO_ORDERDATE date,\n  LO_ORDERPRIORITY char(15),\n  LO_SHIPPRIORITY tinyint,\n  LO_QUANTITY double,\n  LO_EXTENDEDPRICE double,\n  LO_ORDTOTALPRICE double,\n  LO_DISCOUNT double,\n  LO_REVENUE int unsigned,\n  LO_SUPPLYCOST int unsigned,\n  LO_TAX double,\n  LO_COMMITDATE date,\n  LO_SHIPMODE char(10),\n  C_NAME varchar(25),\n  C_ADDRESS varchar(25),\n  C_CITY char(10),\n  C_NATION char(15),\n  C_REGION char(12),\n  C_PHONE char(15),\n  C_MKTSEGMENT char(10),\n  S_NAME char(25),\n  S_ADDRESS varchar(25),\n  S_CITY char(10),\n  S_NATION char(15),\n  S_REGION char(12),\n  S_PHONE char(15),\n  P_NAME varchar(22),\n  P_MFGR char(6),\n  P_CATEGORY char(7),\n  P_BRAND char(9),\n  P_COLOR varchar(11),\n  P_TYPE varchar(25),\n  P_SIZE int,\n  P_CONTAINER char(10)\n);\nmysql&gt; load data infile '/ssb-dbgen-path/lineorder_flat.tbl' into table lineorder_flat FIELDS TERMINATED BY ',' OPTIONALLY ENCLOSED BY '\"' LINES TERMINATED BY '\\n';\n</code></pre> </li> <li> <p>After the import is successful, you can run SQL statements to check the rows of imported data:</p> <pre><code>select count(*) from lineorder_flat;\n/*\n    expected results:\n */\n+----------+\n| count(*) |\n+----------+\n| 10272594 |\n+----------+\n</code></pre> </li> </ol>"},{"location":"MatrixOne/Develop/import-data/bulk-load/load-csv/#constraints","title":"Constraints","text":"<p>The loaded csv file format supports JSON. However, you need to ensure that the JSON does not contain field termination symbols. If the JSON does contain field termination symbols, wrap the JSON with double quotation marks. For example:</p> <ul> <li>Right csv file example: <code>\"{\"a\":1, \"b\":2}\", 2</code></li> <li>Wrong csv file example: <code>{\"a\":1, \"b\":2}, 2</code></li> </ul>"},{"location":"MatrixOne/Develop/import-data/bulk-load/load-jsonline/","title":"Load jsonlines format data","text":"<p>This document will guide you on how to import JSONLines (that is .jl or .jsonl file) data to MatrixOne.</p>"},{"location":"MatrixOne/Develop/import-data/bulk-load/load-jsonline/#about-jsonlines-format","title":"About JSONLines format","text":"<p>JSON(JavaScript Object Notation) is a popular file format for about two decades, nowadays became de-facto of data exchange format standard, replacing XML, that was a huge buzzword in the early 2000's. If you are not familiar with JSON format, please help yourself to know about it with this official documentation.</p> <p>JSONLines text format, also called newline-delimited JSON, is a convenient format for storing structured data that may be processed one record at a time. Basically, JSONL is a file format that allows one JSON object per line with lines delimited by a newline character <code>\\n</code>.  Each line of the file is independent, so commas are not required at the beginning or ending of lines.  Nor does the entire contents of the file need to be enclosed in square or curly braces.</p> <p>JSONLines is appealing format for data streaming. Since every new line means a separate entry makes the JSON Lines formatted file streamable. It doesn't require custom parsers. Just read a line, parse as JSON, read a line, parse as JSON\u2026 and so on.</p> <p>The JSON Lines format has three requirements:</p> <ul> <li> <p>UTF-8 Encoding: JSON allows encoding Unicode strings with only ASCII escape sequences, however those escapes will be hard to read when viewed in a text editor. The author of the JSON Lines file may choose to escape characters to work with plain ASCII files.</p> </li> <li> <p>Each Line is a Valid JSON Value: The most common values will be objects or arrays, but any JSON value is permitted.</p> </li> <li> <p>Line Separator is '\\n': This means '\\r\\n' is also supported because surrounding white space is implicitly ignored when parsing JSON values.</p> </li> </ul>"},{"location":"MatrixOne/Develop/import-data/bulk-load/load-jsonline/#valid-jsonlines-format-for-matrixone","title":"Valid JSONLines format for MatrixOne","text":"<p>JSONLines format only requires a valid JSON value for each line. But MatrixOne requires a more structured JSONLines format, only an JSON object or an JSON array with the same type of values and a plain structure are allowed in MatrixOne. If your JSONLines file has nested structures, MatrixOne doesn't support loading it for now.</p> <p>A valid object JSONLines example:</p> <pre><code>{\"id\":1,\"father\":\"Mark\",\"mother\":\"Charlotte\"}\n{\"id\":2,\"father\":\"John\",\"mother\":\"Ann\"}\n{\"id\":3,\"father\":\"Bob\",\"mother\":\"Monika\"}\n</code></pre> <p>Invalid object JSONLines example (with nested structure):</p> <pre><code>{\"id\":1,\"father\":\"Mark\",\"mother\":\"Charlotte\",\"children\":[\"Tom\"]}\n{\"id\":2,\"father\":\"John\",\"mother\":\"Ann\",\"children\":[\"Jessika\",\"Antony\",\"Jack\"]}\n{\"id\":3,\"father\":\"Bob\",\"mother\":\"Monika\",\"children\":[\"Jerry\",\"Karol\"]}\n</code></pre> <p>A valid array JSONLines example, it needs to look like a CSV format.</p> <pre><code>[\"Name\", \"Session\", \"Score\", \"Completed\"]\n[\"Gilbert\", \"2013\", 24, true]\n[\"Alexa\", \"2013\", 29, true]\n[\"May\", \"2012B\", 14, false]\n[\"Deloise\", \"2012A\", 19, true]\n</code></pre> <p>Invalid array JSONLines example (Data type and column numbers don't match): [\"Gilbert\", \"2013\", 24, true, 100] [\"Alexa\", \"2013\", \"twenty nine\", true] [\"May\", \"2012B\", 14, \"no\"] [\"Deloise\", \"2012A\", 19, true, 40]</p>"},{"location":"MatrixOne/Develop/import-data/bulk-load/load-jsonline/#syntax","title":"Syntax","text":"<ul> <li>Scenario 1: The data file is in the same machine with the MatrixOne server.</li> </ul> <pre><code>LOAD DATA INFILE\n    {'filepath'='FILEPATH', 'compression'='COMPRESSION_FORMAT', 'format'='FILE_FORMAT', 'jsondata'='object'/'array'} INTO TABLE table_name [IGNORE x LINES/ROWS] [PARALLEL {'TRUE' | 'FALSE'}];\n</code></pre> <ul> <li>Scenario 2: The data file is in separate machines with the MatrixOne server.</li> </ul> <pre><code>LOAD DATA LOCAL INFILE\n    {'filepath'='FILEPATH', 'compression'='COMPRESSION_FORMAT', 'format'='FILE_FORMAT', 'jsondata'='object'/'array'} INTO TABLE table_name [IGNORE x LINES/ROWS] [PARALLEL {'TRUE' | 'FALSE'}];\n</code></pre> <p>Parameter Description</p> Parameter Value Required/Optional Description filepath String Required The file path. compression auto/none/bz2/gzip/lz4 Optional Compression algorithm format. format csv/jsonline Optional the loading file format. default is csv. jsondata object/array Optional jsonline format. If <code>format</code> is jsonline, must specify jsondata. table_name String Required table name to load into x Number Optional lines to be ignored while loading <p>DDL guidelines for JSONLines format data</p> <p>Before load JSONLines data into MatrixOne, we need to firstly create a table. As JSON data type is not the same as MatrixOne data type, we need a guideline for DDL.</p> JSON Type MatrixOne Type String VARCHAR (with a certain length limit) String TEXT (without knowing the limit of this string) String DATETIME or TIMESTAMP (with format as \"YYYY-MM-DD HH:MM:SS.XXXXXX\") String DATE (with format as \"YYYY-MM-DD\") String TIME (with format as \"HH-MM-SS.XXXXXX\") Number INT (with interger numbers) Number FLOAT or DOUBLE (with floating numbers) Boolean BOOL(true/false) Object JSON type Array JSON type Null All types have been supported. <p>For example, We can create a MatrixOne table with such a DDL for a JSONLines format file as below.</p> <pre><code>mysql&gt; create table t1 (name varchar(100), session varchar(100), score int, completed bool);\n</code></pre> <pre><code>[\"Name\", \"Session\", \"Score\", \"Completed\"]\n[\"Gilbert\", \"2013\", 24, true]\n[\"Alexa\", \"2013\", 29, true]\n[\"May\", \"2012B\", 14, false]\n[\"Deloise\", \"2012A\", 19, true]\n</code></pre> <p>Some examples</p> <p>These are some full SQL examples to load a JSONLines file to MatrixOne.</p> <pre><code>#Load a BZIP2 compressed jsonline object file\nload data infile {'filepath'='data.bzip2', 'compression'='bz2','format'='jsonline','jsondata'='object'} into table db.a\n\n#Load a plain jsonline array file\nload data infile {'filepath'='data.jl', 'format'='jsonline','jsondata'='array'} into table db.a\n\n#Load a gzip compressed jsonline array file and ignore the first line\nload data infile {'filepath'='data.jl.gz', 'compression'='gzip','format'='jsonline','jsondata'='array'} into table db.a ignore 1 lines;\n</code></pre>"},{"location":"MatrixOne/Develop/import-data/bulk-load/load-jsonline/#tutorial","title":"Tutorial","text":"<p>In this tutorial, we will guide you through loading two jsonline files with object and array jsonformat.</p> <ol> <li> <p>Prepare the data files. You can also download and use the .jl file we prepared. The data directory needs to be with in the same machine as MatrixOne server. The following steps are illustrated with sample data.</p> <ul> <li>Example data file 1:jsonline_object.jl</li> <li>Example data file  2:jsonline_array.jl</li> </ul> </li> <li> <p>Open your terminal, enter into the directory where the .jl file resides, and run the following command line to display the contents of the file:</p> <pre><code>&gt; cd /$filepath\n&gt; head jsonline_object.jl\n{\"col1\":true,\"col2\":1,\"col3\":\"var\",\"col4\":\"2020-09-07\",\"col5\":\"2020-09-07 00:00:00\",\"col6\":\"2020-09-07 00:00:00\",\"col7\":\"18\",\"col8\":121.11}\n{\"col1\":\"true\",\"col2\":\"1\",\"col3\":\"var\",\"col4\":\"2020-09-07\",\"col5\":\"2020-09-07 00:00:00\",\"col6\":\"2020-09-07 00:00:00\",\"col7\":\"18\",\"col8\":\"121.11\"}\n{\"col6\":\"2020-09-07 00:00:00\",\"col7\":\"18\",\"col8\":\"121.11\",\"col4\":\"2020-09-07\",\"col5\":\"2020-09-07 00:00:00\",\"col1\":\"true\",\"col2\":\"1\",\"col3\":\"var\"}\n{\"col2\":1,\"col3\":\"var\",\"col1\":true,\"col6\":\"2020-09-07 00:00:00\",\"col7\":\"18\",\"col4\":\"2020-09-07\",\"col5\":\"2020-09-07 00:00:00\",\"col8\":121.11}\n&gt; head jsonline_array.jl\n[true,1,\"var\",\"2020-09-07\",\"2020-09-07 00:00:00\",\"2020-09-07 00:00:00\",\"18\",121.11]\n[\"true\",\"1\",\"var\",\"2020-09-07\",\"2020-09-07 00:00:00\",\"2020-09-07 00:00:00\",\"18\",\"121.11\"]\n</code></pre> </li> <li> <p>Install and Launch MatrixOne in the same machine, launch MySQL Client to connect to MatrixOne.</p> <pre><code>mysql -h 127.0.0.1 -P 6001 -uroot -p111\n</code></pre> <p>Note: If your data file is on a different machine from the MatrixOne server, that is, the data file is on the client machine you are using, then you need to use the command line to connect to the MatrixOne service host: <code>mysql -h &lt;mo-host -ip&gt; -P 6001 -uroot -p111 --local-infile</code>; and the imported command line needs to use <code>LOAD DATA LOCAL INFILE</code> syntax.</p> <p>Info</p> <p>The login account in the above code snippet is the initial account; please change the initial password after logging in to MatrixOne; see Password Management.</p> </li> <li> <p>Create tables in MatrixOne:</p> <pre><code>create database db1;\nuse db1;\ndrop table if exists t1;\ncreate table t1(col1 bool,col2 int,col3 varchar, col4 date,col5 datetime,col6 timestamp,col7 decimal,col8 float);\ndrop table if exists t2;\ncreate table t2(col1 bool,col2 int,col3 varchar, col4 date,col5 datetime,col6 timestamp,col7 decimal,col8 float);\n</code></pre> </li> <li> <p>Execute <code>LOAD DATA</code> with the corresponding file path in MySQL client, import the jsonline_object.jl  and the file jsonline_array.jl into MatrixOne:</p> <pre><code>load data infile {'filepath'='$filepath/jsonline_object.jl','format'='jsonline','jsondata'='object'} into table t1;\nload data infile {'filepath'='$filepath/jsonline_array.jl','format'='jsonline','jsondata'='array'} into table t2;\n</code></pre> </li> <li> <p>After the import is successful, you can run SQL statements to check the results of imported data:</p> <pre><code>select * from t1;\ncol1    col2    col3    col4    col5    col6    col7    col8\ntrue    1   var 2020-09-07  2020-09-07 00:00:00 2020-09-07 00:00:00 18  121.11\ntrue    1   var 2020-09-07  2020-09-07 00:00:00 2020-09-07 00:00:00 18  121.11\ntrue    1   var 2020-09-07  2020-09-07 00:00:00 2020-09-07 00:00:00 18  121.11\ntrue    1   var 2020-09-07  2020-09-07 00:00:00 2020-09-07 00:00:00 18  121.11\nselect * from t2;\ncol1    col2    col3    col4    col5    col6    col7    col8\ntrue    1   var 2020-09-07  2020-09-07 00:00:00 2020-09-07 00:00:00 18  121.11\ntrue    1   var 2020-09-07  2020-09-07 00:00:00 2020-09-07 00:00:00 18  121.11\n</code></pre> </li> </ol> <p>Note</p> <p>If you use Docker to launch MatrixOne, when you try to import the jsonline file, please make sure that you have a data directory mounted to the container. You can check on the load csv tutorial about the loading with docker installation.</p>"},{"location":"MatrixOne/Develop/import-data/bulk-load/load-s3/","title":"Load data from S3","text":""},{"location":"MatrixOne/Develop/import-data/bulk-load/load-s3/#overview","title":"Overview","text":"<p>S3 (Simple Storage Service) object storage refers to Amazon's Simple Storage Service. You can also store almost any type and size of data with S3-compatible object storage, including data lakes, cloud-native applications, and mobile apps. If you are unfamiliar with S3 object service, you may look up some basic introductions in AWS.</p> <p>AWS S3 has been remarkably successful for over a decade, so it became the de facto standard for object storage. Thus almost every mainstream public cloud vendors provide an S3-compatible object storage service.</p> <p>MatrixOne supports loading files from S3-compatible object storage services into databases. MatrixOne supports AWS and mainstream cloud vendors in China (Alibaba Cloud, Tencent Cloud).</p> <p>In MatrixOne, there are two methods to import the data from S3-compatible object storage:</p> <ul> <li>Use <code>Load data</code> with an s3option to load the file into MatrixOne. This method will load the data into MatrixOne, and all next queries will happen inside MatrixOne.</li> <li>Create an <code>external table</code> with an s3option mapping to an S3 file, and query this external table directly. This method allows data access through an S3-compatible object storage service; each query's networking latency will be counted.</li> </ul>"},{"location":"MatrixOne/Develop/import-data/bulk-load/load-s3/#method-1-load-data","title":"Method 1: LOAD DATA","text":""},{"location":"MatrixOne/Develop/import-data/bulk-load/load-s3/#syntax","title":"Syntax","text":"<pre><code>LOAD DATA\n| URL s3options {\"endpoint\"='&lt;string&gt;', \"access_key_id\"='&lt;string&gt;', \"secret_access_key\"='&lt;string&gt;', \"bucket\"='&lt;string&gt;', \"filepath\"='&lt;string&gt;', \"region\"='&lt;string&gt;', \"compression\"='&lt;string&gt;'}\nINTO TABLE tbl_name\n[{FIELDS | COLUMNS}\n[TERMINATED BY 'string']\n[[OPTIONALLY] ENCLOSED BY 'char']\n]\n[IGNORE number {LINES | ROWS}]\n[PARALLEL {'TRUE' | 'FALSE'}]\n</code></pre> <p>Parameter Description</p> Parameter Description endpoint A endpoint is a URL that can conncect to object storage service. For example: s3.us-west-2.amazonaws.com access_key_id Access key ID secret_access_key Secret access key bucket S3 Bucket to access filepath relative file path. regex expression is supported as /files/*.csv. region object storage service region compression Compressed format of S3 files. If empty or \"none\", it indicates uncompressed files. Supported fields or Compressed format are \"auto\", \"none\", \"gzip\", \"bz2\", and \"lz4\". <p>The other paramaters are identical to a ordinary LOAD DATA, see LOAD DATA for more details.</p> <p>Statement Examples:</p> <pre><code># LOAD a csv file from AWS S3 us-east-1 region, test-load-mo bucket, without compression\nLOAD DATA URL s3option{\"endpoint\"='s3.us-east-1.amazonaws.com', \"access_key_id\"='XXXXXX', \"secret_access_key\"='XXXXXX', \"bucket\"='test-load-mo', \"filepath\"='test.csv', \"region\"='us-east-1', \"compression\"='none'} INTO TABLE t1 FIELDS TERMINATED BY ',' ENCLOSED BY '\\\"' LINES TERMINATED BY '\\n';\n\n# LOAD all csv files from Alibaba Cloud OSS Shanghai region, test-load-data bucket, without compression\nLOAD DATA URL s3option{\"endpoint\"='oss-cn-shanghai.aliyuncs.com', \"access_key_id\"='XXXXXX', \"secret_access_key\"='XXXXXX', \"bucket\"='test-load-data', \"filepath\"='/test/*.csv', \"region\"='oss-cn-shanghai', \"compression\"='none'} INTO TABLE t1 FIELDS TERMINATED BY ',' ENCLOSED BY '\\\"' LINES TERMINATED BY '\\n';\n\n# LOAD a csv file from Tencent Cloud COS Shanghai region, test-1252279971 bucket, without bz2 compression\nLOAD DATA URL s3option{\"endpoint\"='cos.ap-shanghai.myqcloud.com', \"access_key_id\"='XXXXXX', \"secret_access_key\"='XXXXXX', \"bucket\"='test-1252279971', \"filepath\"='test.csv.bz2', \"region\"='ap-shanghai', \"compression\"='bz2'} INTO TABLE t1 FIELDS TERMINATED BY ',' ENCLOSED BY '\\\"' LINES TERMINATED BY '\\n';\n</code></pre> <p>Note</p> <p>MatrixOne provides security assurance for S3 authentication information, such as <code>access_key_id</code> and <code>secret_access_key</code> sensitive information will be hidden in the system table (statement_info) records to ensure your account security.</p>"},{"location":"MatrixOne/Develop/import-data/bulk-load/load-s3/#tutorial-load-a-file-from-aws-s3","title":"Tutorial: Load a file from AWS S3","text":"<p>In this tutorial, we will walk you through the process of loading a .csv file from AWS S3; we assume that you already have an AWS account and already have your data file ready in your S3 service. If you do not already have that, please sign up and upload your data file first; you may check on the AWS S3 official tutorial. The process for Alibaba Cloud OSS and Tencent Cloud COS is similar to AWS S3.</p> <p>Note</p> <p>This code example does not show account information such as access_key_id and secret_access_key because of account privacy. You can read this document to understand the main steps; specific data and account information will not be shown.</p> <ol> <li> <p>Download the data file. Enter into AWS S3 &gt; buckets, create a bucket test-loading with a public access and upload the file char_varchar_1.csv.</p> <p></p> <p></p> </li> <li> <p>Get or create your AWS api key. Enter into Your Account Name &gt; Security Credentials, get your existing Access Key or create a new one.</p> <p></p> <p></p> <p>You can get the access key id and secret access key from the downloaded credentials or this webpage.</p> <p></p> </li> <li> <p>Launch the MySQL Client, create tables in MatrixOne, for example:</p> <pre><code>create database db;\nuse db;\ndrop table if exists t1;\ncreate table t1(col1 char(225), col2 varchar(225), col3 text, col4 varchar(225));\n</code></pre> </li> <li> <p>Import the file into MatrixOne:</p> <pre><code>LOAD DATA URL s3option{\"endpoint\"='s3.us-east-1.amazonaws.com', \"access_key_id\"='XXXXXX', \"secret_access_key\"='XXXXXX', \"bucket\"='test-loading', \"filepath\"='char_varchar_1.csv', \"region\"='us-east-1', \"compression\"='none'} INTO TABLE t1;\n</code></pre> </li> <li> <p>After the import is successful, you can run SQL statements to check the result of imported data:</p> <pre><code>mysql&gt; select * from t1;\n+-----------+-----------+-----------+-----------+\n| col1      | col2      | col3      | col4      |\n+-----------+-----------+-----------+-----------+\n| a         | b         | c         | d         |\n| a         | b         | c         | d         |\n| 'a'       | 'b'       | 'c'       | 'd'       |\n| 'a'       | 'b'       | 'c'       | 'd'       |\n| aa,aa     | bb,bb     | cc,cc     | dd,dd     |\n| aa,       | bb,       | cc,       | dd,       |\n| aa,,,aa   | bb,,,bb   | cc,,,cc   | dd,,,dd   |\n| aa',',,aa | bb',',,bb | cc',',,cc | dd',',,dd |\n| aa\"aa     | bb\"bb     | cc\"cc     | dd\"dd     |\n| aa\"aa     | bb\"bb     | cc\"cc     | dd\"dd     |\n| aa\"aa     | bb\"bb     | cc\"cc     | dd\"dd     |\n| aa\"\"aa    | bb\"\"bb    | cc\"\"cc    | dd\"\"dd    |\n| aa\"\"aa    | bb\"\"bb    | cc\"\"cc    | dd\"\"dd    |\n| aa\",aa    | bb\",bb    | cc\",cc    | dd\",dd    |\n| aa\"\",aa   | bb\"\",bb   | cc\"\",cc   | dd\"\",dd   |\n|           |           |           |           |\n|           |           |           |           |\n| NULL      | NULL      | NULL      | NULL      |\n|           |           |           |           |\n| \"         | \"         | \"         | \"         |\n| \"\"        | \"\"        | \"\"        | \"\"        |\n+-----------+-----------+-----------+-----------+\n21 rows in set (0.03 sec)\n</code></pre> </li> </ol>"},{"location":"MatrixOne/Develop/import-data/bulk-load/load-s3/#method-2-specify-s3-file-to-an-external-table","title":"Method 2: Specify S3 file to an external table","text":""},{"location":"MatrixOne/Develop/import-data/bulk-load/load-s3/#syntax_1","title":"Syntax","text":"<pre><code>create external table t(...) URL s3option{\"endpoint\"='&lt;string&gt;', \"access_key_id\"='&lt;string&gt;', \"secret_access_key\"='&lt;string&gt;', \"bucket\"='&lt;string&gt;', \"filepath\"='&lt;string&gt;', \"region\"='&lt;string&gt;', \"compression\"='&lt;string&gt;'}     [{FIELDS | COLUMNS}\n[TERMINATED BY 'string']\n[[OPTIONALLY] ENCLOSED BY 'char']\n]\n[IGNORE number {LINES | ROWS}];\n</code></pre> <p>Note</p> <p>MatrixOne only supports <code>select</code> on external tables. <code>Delete</code>, <code>insert</code>, and <code>update</code> are not supported.</p> <p>Parameter Description</p> Parameter Description endpoint A endpoint is a URL that can conncect to object storage service. For example: s3.us-west-2.amazonaws.com access_key_id Access key ID secret_access_key Secret access key bucket S3 Bucket to access filepath relative file path. regex expression is supported as /files/*.csv. region object storage service region compression Compressed format of S3 files. If empty or \"none\", it indicates uncompressed files. Supported fields or Compressed format are \"auto\", \"none\", \"gzip\", \"bz2\", and \"lz4\". <p>The other paramaters are identical to a ordinary LOAD DATA, see LOAD DATA for more details.</p> <p>For more information about External Table, see CREATE EXTERNAL TABLE.</p> <p>Statement Examples:</p> <pre><code>## Create a external table for a .csv file from AWS S3\ncreate external table t1(col1 char(225)) url s3option{\"endpoint\"='s3.us-east-1.amazonaws.com', \"access_key_id\"='XXXXXX', \"secret_access_key\"='XXXXXX', \"bucket\"='test-loading', \"filepath\"='test.csv', \"region\"='us-east-1', \"compression\"='none'} fields terminated by ',' enclosed by '\\\"' lines terminated by '\\n';\n\n## Create a external table for a .csv file compressed with BZIP2 from Tencent Cloud\ncreate external table t1(col1 char(225)) url s3option{\"endpoint\"='cos.ap-shanghai.myqcloud.com', \"access_key_id\"='XXXXXX', \"secret_access_key\"='XXXXXX', \"bucket\"='test-1252279971', \"filepath\"='test.csv.bz2', \"region\"='ap-shanghai', \"compression\"='bz2'} fields terminated by ',' enclosed by '\\\"' lines terminated by '\\n' ignore 1 lines;\n</code></pre>"},{"location":"MatrixOne/Develop/import-data/bulk-load/load-s3/#tutorial-create-an-external-table-with-s3-file","title":"Tutorial: Create an external table with S3 file","text":"<p>This tutorial will walk you through the whole process of creating an external table with a .csv file from AWS S3.</p> <p>Note</p> <p>This code example does not show account information such as access_key_id and secret_access_key because of account privacy. You can read this document to understand the main steps; specific data and account information will not be shown.</p> <ol> <li> <p>Download the data file. Enter into AWS S3 &gt; buckets, create a bucket test-loading with a public access and upload the file char_varchar_1.csv.</p> <p></p> <p></p> </li> <li> <p>Get or create your AWS api key. Enter into Your Account Name &gt; Security Credentials, get your existing Access Key or create a new one.</p> <p></p> <p></p> <p>You can get the access key id and secret access key from the downloaded credentials or this webpage.</p> <p></p> </li> <li> <p>Launch the MySQL Client, and specify the S3 file to an external table:</p> <pre><code>create database db;\nuse db;\ndrop table if exists t1;\ncreate external table t1(col1 char(225), col2 varchar(225), col3 text, col4 varchar(225)) url s3option{\"endpoint\"='s3.us-east-1.amazonaws.com', \"access_key_id\"='XXXXXX', \"secret_access_key\"='XXXXXX', \"bucket\"='test-loading', \"filepath\"='char_varchar_1.csv', \"region\"='us-east-1', \"compression\"='none'} fields terminated by ',' enclosed by '\\\"' lines terminated by '\\n';\n</code></pre> </li> <li> <p>After the import is successful, you can run SQL statements to check the result of the imported data. You can see that the query speed is significantly slower than querying from a local table.</p> <pre><code>select * from t1;\n+-----------+-----------+-----------+-----------+\n| col1      | col2      | col3      | col4      |\n+-----------+-----------+-----------+-----------+\n| a         | b         | c         | d         |\n| a         | b         | c         | d         |\n| 'a'       | 'b'       | 'c'       | 'd'       |\n| 'a'       | 'b'       | 'c'       | 'd'       |\n| aa,aa     | bb,bb     | cc,cc     | dd,dd     |\n| aa,       | bb,       | cc,       | dd,       |\n| aa,,,aa   | bb,,,bb   | cc,,,cc   | dd,,,dd   |\n| aa',',,aa | bb',',,bb | cc',',,cc | dd',',,dd |\n| aa\"aa     | bb\"bb     | cc\"cc     | dd\"dd     |\n| aa\"aa     | bb\"bb     | cc\"cc     | dd\"dd     |\n| aa\"aa     | bb\"bb     | cc\"cc     | dd\"dd     |\n| aa\"\"aa    | bb\"\"bb    | cc\"\"cc    | dd\"\"dd    |\n| aa\"\"aa    | bb\"\"bb    | cc\"\"cc    | dd\"\"dd    |\n| aa\",aa    | bb\",bb    | cc\",cc    | dd\",dd    |\n| aa\"\",aa   | bb\"\",bb   | cc\"\",cc   | dd\"\",dd   |\n|           |           |           |           |\n|           |           |           |           |\n| NULL      | NULL      | NULL      | NULL      |\n|           |           |           |           |\n| \"         | \"         | \"         | \"         |\n| \"\"        | \"\"        | \"\"        | \"\"        |\n+-----------+-----------+-----------+-----------+\n21 rows in set (1.32 sec)\n</code></pre> </li> <li> <p>(Optional)If you need to import external table data into a data table in MatrixOne, you can use the following SQL statement:</p> <p>Create a new table t2 in MatrixOne:</p> <pre><code>create table t2(col1 char(225), col2 varchar(225), col3 text, col4 varchar(225));\n</code></pre> <p>Import the external table t1 to t2:</p> <pre><code>insert into t2 select * from t1;\n</code></pre> </li> </ol>"},{"location":"MatrixOne/Develop/import-data/bulk-load/using-source/","title":"Load data by using the <code>source</code>","text":"<p>This document will guide you to use the <code>source</code> command to import data into MatrixOne in batches.</p>"},{"location":"MatrixOne/Develop/import-data/bulk-load/using-source/#syntax","title":"Syntax","text":"<pre><code>SOURCE /path/to/your/sql_script.sql;\n</code></pre> <p><code>/path/to/your/sql_script.sql</code> is the absolute path to the SQL script file. When executing this command, the client will read the specified SQL script file and execute all its SQL statements.</p>"},{"location":"MatrixOne/Develop/import-data/bulk-load/using-source/#tutorial","title":"Tutorial","text":"<p>This tutorial will guide you on migrating data from MySQL to MatrixOne using the <code>source</code> command.</p>"},{"location":"MatrixOne/Develop/import-data/bulk-load/using-source/#before-you-start","title":"Before you start","text":"<p>Make sure you have already Deployed and Launched standalone MatrixOne.</p>"},{"location":"MatrixOne/Develop/import-data/bulk-load/using-source/#steps","title":"Steps","text":""},{"location":"MatrixOne/Develop/import-data/bulk-load/using-source/#1-dump-mysql-data","title":"1. Dump MySQL data","text":"<p>We suppose you have full access to your MySQL instances.</p> <p>Firstly, we use <code>mysqldump</code> to dump MySQL table structures and data to a single file with the following command. You can take a look at this wonderful tutorial if you are not familiar with <code>mysqldump</code>. The syntax is as below:</p> <pre><code>mysqldump -h IP_ADDRESS -uUSERNAME -pPASSWORD -d DB_NAME1 DB_NAME2 ... OUTPUT_FILE_NAME.SQL\n</code></pre> <p>For example, this following command dumps all table structures and data of the database <code>test</code> to a single file named <code>a.sql</code>.</p> <pre><code>mysqldump -h 127.0.0.1 -uroot -proot -d test &gt; a.sql\n</code></pre>"},{"location":"MatrixOne/Develop/import-data/bulk-load/using-source/#2-import-into-matrixone","title":"2. Import into MatrixOne","text":"<p>Import the whole table structures and data into MatrixOne.</p> <ol> <li>Open a MySQL terminal and connect to MatrixOne.</li> <li>Import the SQL file into MatrixOne by the <code>source</code> command.</li> </ol> <pre><code>mysql&gt; source '/YOUR_PATH/a.sql'\n</code></pre> <p>If your SQL file is big, you can use the following command to run the import task in the background. For example:</p> <pre><code>nohup mysql -h 127.0.0.1 -P 6001 -uroot -p111 -e 'source /YOUR_PATH/a.sql' &amp;\n</code></pre> <p>Info</p> <p>The login account in the above code snippet is the initial account; please change the initial password after logging in to MatrixOne; see Password Management.</p>"},{"location":"MatrixOne/Develop/import-data/bulk-load/using-source/#3-check-data","title":"3. Check data","text":"<p>After the import is successful, you can run the following SQL statement to check the import results:</p> <pre><code>select * from tool;\n</code></pre>"},{"location":"MatrixOne/Develop/import-data/bulk-load/using-source/#constraints","title":"Constraints","text":"<p>MatrixOne 1.2.3 version already supports MySQL table creation statements, so you can smoothly migrate MySQL tables to MatrixOne. However, it should be noted that during the migration process, some keywords incompatible with MySQL, such as <code>engine=</code>, will be automatically ignored in MatrixOne and will not affect the migration of the table structure.</p> <p>However, it should be noted that although MatrixOne supports MySQL table creation statements, manual modification is still required if the migrated table contains incompatible data types, triggers, functions, or stored procedures. For more detailed compatibility information, see MySQL Compatibility.</p>"},{"location":"MatrixOne/Develop/read-data/cte/","title":"Common Table Expression","text":"<p>A CTE (Common table expression) is a named temporary result set that exists only within the execution scope of a single SQL statement (such as <code>SELECT</code>, <code>INSERT</code>, <code>UPDATE</code>, or <code>DELETE</code>).</p> <p>Like derived tables, CTEs are not stored as objects and persist only for the duration of query execution; Unlike derived tables, CTEs can be self-referenced or referenced multiple times in the same query. In addition, CTEs provide better readability and performance than derived tables.</p> <p>Use Cases:</p> <ul> <li>CTEs can reuse the same subquery in multiple places, avoiding redundant logic.</li> <li>They can simplify recursive queries, such as querying tree-structured data.</li> <li>Complex queries can be broken down into smaller parts using CTEs, making the query logic clearer and more understandable.</li> </ul> <p>Common Table Expressions are divided into two types: non-recursive and recursive:</p> <ul> <li>Non-recursive CTE refers to an expression in which the CTE does not reference itself. It is used to build a one-time temporary result set and does not involve recursion. Non-recursive CTE Statement:</li> </ul> <pre><code>WITH &lt;query_name&gt; AS (\n&lt;query_definition&gt;\n)\nSELECT ... FROM &lt;query_name&gt;;\n</code></pre> <ul> <li>Recursive CTE refers to an expression in which the CTE references itself. It handles data with recursive structures, such as trees or graphs. A recursive CTE includes a base query (initial condition) in its definition, then performs recursive operations on the result of that base query until a stop condition is met. Recursive CTE Statement:</li> </ul> <pre><code>WITH RECURSIVE &lt;query_name&gt; AS (\n&lt;query_definition&gt;\n)\nSELECT ... FROM &lt;query_name&gt;;\n</code></pre>"},{"location":"MatrixOne/Develop/read-data/cte/#before-you-start","title":"Before you start","text":"<p>Make sure you have already Deployed standalone MatrixOne.</p>"},{"location":"MatrixOne/Develop/read-data/cte/#examples-of-using-cte-statements","title":"Examples of Using CTE Statements","text":"<p>Suppose we want to create a table named <code>EMPLOYEES</code> that includes a hierarchical relationship among employees. We will then use non-recursive and recursive Common Table Expressions (CTEs) to query the employee hierarchy.</p> <p>First, let's create the <code>EMPLOYEES</code> table and insert some sample data:</p> <pre><code>CREATE TABLE EMPLOYEES (\nEMPLOYEE_ID INT PRIMARY KEY,\nNAME VARCHAR(50),\nMANAGER_ID INT\n);\n\nINSERT INTO EMPLOYEES (EMPLOYEE_ID, NAME, MANAGER_ID) VALUES\n(1, 'Alice', NULL),\n(2, 'Bob', 1),\n(3, 'Carol', 1),\n(4, 'David', 2),\n(5, 'Eve', 2),\n(6, 'Frank', 3),\n(7, 'Grace', 3),\n(8, 'Hannah', 4),\n(9, 'Ian', 4);\n</code></pre> <p>Next, we'll use a recursive CTE to query the employee hierarchy:</p> <pre><code>WITH RECURSIVE EmployeeHierarchy AS (\nSELECT EMPLOYEE_ID, NAME, MANAGER_ID, 0 AS LEVEL\nFROM EMPLOYEES\nWHERE MANAGER_ID IS NULL\n\nUNION ALL\n\nSELECT e.EMPLOYEE_ID, e.NAME, e.MANAGER_ID, eh.LEVEL + 1\nFROM EMPLOYEES e\nINNER JOIN EmployeeHierarchy eh ON e.MANAGER_ID = eh.EMPLOYEE_ID\n)\nSELECT * FROM EmployeeHierarchy;\n+-------------+--------+------------+-------+\n| employee_id | name   | manager_id | level |\n+-------------+--------+------------+-------+\n|           1 | Alice  |       NULL |     0 |\n|           2 | Bob    |          1 |     1 |\n|           3 | Carol  |          1 |     1 |\n|           4 | David  |          2 |     2 |\n|           5 | Eve    |          2 |     2 |\n|           6 | Frank  |          3 |     2 |\n|           7 | Grace  |          3 |     2 |\n|           8 | Hannah |          4 |     3 |\n|           9 | Ian    |          4 |     3 |\n+-------------+--------+------------+-------+\n9 rows in set (0.01 sec)\n</code></pre> <p>Then, we'll use a non-recursive CTE to query employee information:</p> <pre><code>WITH EmployeeInfo AS (\nSELECT EMPLOYEE_ID, NAME, MANAGER_ID\nFROM EMPLOYEES\n)\nSELECT * FROM EmployeeInfo;\n+-------------+--------+------------+\n| employee_id | name   | manager_id |\n+-------------+--------+------------+\n|           1 | Alice  |       NULL |\n|           2 | Bob    |          1 |\n|           3 | Carol  |          1 |\n|           4 | David  |          2 |\n|           5 | Eve    |          2 |\n|           6 | Frank  |          3 |\n|           7 | Grace  |          3 |\n|           8 | Hannah |          4 |\n|           9 | Ian    |          4 |\n+-------------+--------+------------+\n9 rows in set (0.00 sec)\n</code></pre> <p>We used a recursive CTE named <code>EmployeeHierarchy</code>, which first selects top-level managers (<code>MANAGER_ID IS NULL</code>), and then recursively joins to find each employee's direct subordinates while keeping track of the hierarchy level. This allows us to query the detailed information of the employee hierarchy using the CTE.</p> <p>The non-recursive CTE example selects basic information of all employees from the <code>EMPLOYEES</code> table, including <code>EMPLOYEE_ID</code>, <code>NAME</code>, and <code>MANAGER_ID</code>.</p> <p>The <code>RECURSIVE</code> keyword is needed to declare a recursive CTE.</p> <p>For more information on using CTEs, see WITH (Common Table Expressions).</p>"},{"location":"MatrixOne/Develop/read-data/multitable-join-query/","title":"Multi-table Join Queries","text":"<p>In many scenarios, you need to use one query to get data from multiple tables. You can use the <code>JOIN</code> statement to combine the data from two or more tables.</p>"},{"location":"MatrixOne/Develop/read-data/multitable-join-query/#before-you-start","title":"Before you start","text":"<p>Make sure you have already Deployed standalone MatrixOne.</p>"},{"location":"MatrixOne/Develop/read-data/multitable-join-query/#preparation","title":"Preparation","text":"<ol> <li> <p>Download the dataset:</p> <pre><code>https://community-shared-data-1308875761.cos.ap-beijing.myqcloud.com/tpch/tpch-1g.zip\n</code></pre> </li> <li> <p>Create the database and tables:</p> <pre><code>create database d1;\nuse d1;\nCREATE TABLE NATION  ( N_NATIONKEY  INTEGER NOT NULL,\nN_NAME       CHAR(25) NOT NULL,\nN_REGIONKEY  INTEGER NOT NULL,\nN_COMMENT    VARCHAR(152),\nPRIMARY KEY (N_NATIONKEY));\n\nCREATE TABLE REGION  ( R_REGIONKEY  INTEGER NOT NULL,\nR_NAME       CHAR(25) NOT NULL,\nR_COMMENT    VARCHAR(152),\nPRIMARY KEY (R_REGIONKEY));\n\nCREATE TABLE PART  ( P_PARTKEY     INTEGER NOT NULL,\nP_NAME        VARCHAR(55) NOT NULL,\nP_MFGR        CHAR(25) NOT NULL,\nP_BRAND       CHAR(10) NOT NULL,\nP_TYPE        VARCHAR(25) NOT NULL,\nP_SIZE        INTEGER NOT NULL,\nP_CONTAINER   CHAR(10) NOT NULL,\nP_RETAILPRICE DECIMAL(15,2) NOT NULL,\nP_COMMENT     VARCHAR(23) NOT NULL,\nPRIMARY KEY (P_PARTKEY));\n\nCREATE TABLE SUPPLIER ( S_SUPPKEY     INTEGER NOT NULL,\nS_NAME        CHAR(25) NOT NULL,\nS_ADDRESS     VARCHAR(40) NOT NULL,\nS_NATIONKEY   INTEGER NOT NULL,\nS_PHONE       CHAR(15) NOT NULL,\nS_ACCTBAL     DECIMAL(15,2) NOT NULL,\nS_COMMENT     VARCHAR(101) NOT NULL,\nPRIMARY KEY (S_SUPPKEY));\n\nCREATE TABLE PARTSUPP ( PS_PARTKEY     INTEGER NOT NULL,\nPS_SUPPKEY     INTEGER NOT NULL,\nPS_AVAILQTY    INTEGER NOT NULL,\nPS_SUPPLYCOST  DECIMAL(15,2)  NOT NULL,\nPS_COMMENT     VARCHAR(199) NOT NULL,\nPRIMARY KEY (PS_PARTKEY, PS_SUPPKEY));\n\nCREATE TABLE CUSTOMER ( C_CUSTKEY     INTEGER NOT NULL,\nC_NAME        VARCHAR(25) NOT NULL,\nC_ADDRESS     VARCHAR(40) NOT NULL,\nC_NATIONKEY   INTEGER NOT NULL,\nC_PHONE       CHAR(15) NOT NULL,\nC_ACCTBAL     DECIMAL(15,2)   NOT NULL,\nC_MKTSEGMENT  CHAR(10) NOT NULL,\nC_COMMENT     VARCHAR(117) NOT NULL,\nPRIMARY KEY (C_CUSTKEY));\n\nCREATE TABLE ORDERS  ( O_ORDERKEY       BIGINT NOT NULL,\nO_CUSTKEY        INTEGER NOT NULL,\nO_ORDERSTATUS    CHAR(1) NOT NULL,\nO_TOTALPRICE     DECIMAL(15,2) NOT NULL,\nO_ORDERDATE      DATE NOT NULL,\nO_ORDERPRIORITY  CHAR(15) NOT NULL,\nO_CLERK          CHAR(15) NOT NULL,\nO_SHIPPRIORITY   INTEGER NOT NULL,\nO_COMMENT        VARCHAR(79) NOT NULL,\nPRIMARY KEY (O_ORDERKEY));\n\nCREATE TABLE LINEITEM ( L_ORDERKEY    BIGINT NOT NULL,\nL_PARTKEY     INTEGER NOT NULL,\nL_SUPPKEY     INTEGER NOT NULL,\nL_LINENUMBER  INTEGER NOT NULL,\nL_QUANTITY    DECIMAL(15,2) NOT NULL,\nL_EXTENDEDPRICE  DECIMAL(15,2) NOT NULL,\nL_DISCOUNT    DECIMAL(15,2) NOT NULL,\nL_TAX         DECIMAL(15,2) NOT NULL,\nL_RETURNFLAG  CHAR(1) NOT NULL,\nL_LINESTATUS  CHAR(1) NOT NULL,\nL_SHIPDATE    DATE NOT NULL,\nL_COMMITDATE  DATE NOT NULL,\nL_RECEIPTDATE DATE NOT NULL,\nL_SHIPINSTRUCT CHAR(25) NOT NULL,\nL_SHIPMODE     CHAR(10) NOT NULL,\nL_COMMENT      VARCHAR(44) NOT NULL,\nPRIMARY KEY (L_ORDERKEY, L_LINENUMBER));\n</code></pre> </li> <li> <p>Load data into the created tables:</p> <pre><code>load data infile '/YOUR_TPCH_DATA_PATH/nation.tbl' into table NATION FIELDS TERMINATED BY '|' OPTIONALLY ENCLOSED BY '\"' LINES TERMINATED BY '\\n';\n\nload data infile '/YOUR_TPCH_DATA_PATH/region.tbl' into table REGION FIELDS TERMINATED BY '|' OPTIONALLY ENCLOSED BY '\"' LINES TERMINATED BY '\\n';\n\nload data infile '/YOUR_TPCH_DATA_PATH/part.tbl' into table PART FIELDS TERMINATED BY '|' OPTIONALLY ENCLOSED BY '\"' LINES TERMINATED BY '\\n';\n\nload data infile '/YOUR_TPCH_DATA_PATH/supplier.tbl' into table SUPPLIER FIELDS TERMINATED BY '|' OPTIONALLY ENCLOSED BY '\"' LINES TERMINATED BY '\\n';\n\nload data infile '/YOUR_TPCH_DATA_PATH/partsupp.tbl' into table PARTSUPP FIELDS TERMINATED BY '|' OPTIONALLY ENCLOSED BY '\"' LINES TERMINATED BY '\\n';\n\nload data infile '/YOUR_TPCH_DATA_PATH/orders.tbl' into table ORDERS FIELDS TERMINATED BY '|' OPTIONALLY ENCLOSED BY '\"' LINES TERMINATED BY '\\n';\n\nload data infile '/YOUR_TPCH_DATA_PATH/customer.tbl' into table CUSTOMER FIELDS TERMINATED BY '|' OPTIONALLY ENCLOSED BY '\"' LINES TERMINATED BY '\\n';\n\nload data infile '/YOUR_TPCH_DATA_PATH/lineitem.tbl' into table LINEITEM FIELDS TERMINATED BY '|' OPTIONALLY ENCLOSED BY '\"' LINES TERMINATED BY '\\n';\n</code></pre> </li> </ol> <p>Then you can query data in MatrixOne with the created table.</p>"},{"location":"MatrixOne/Develop/read-data/multitable-join-query/#join-types","title":"Join Types","text":""},{"location":"MatrixOne/Develop/read-data/multitable-join-query/#inner-join","title":"<code>INNER JOIN</code>","text":"<p>The join result of an inner join returns only rows that match the join condition.</p> Statement Image SELECT  FROM TableA A INNER JOIN TableB B ON A.Key=B.Key <p>There are two ways of writing an <code>inner join</code> that are completely equivalent in results:</p> <pre><code>mysql&gt; SELECT   l_orderkey,\nSUM(l_extendedprice * (1 - l_discount)) AS revenue,\no_orderdate,\no_shippriority\nFROM\nCUSTOMER,\nORDERS,\nLINEITEM\nWHERE\nc_mktsegment = 'BUILDING'\nAND c_custkey = o_custkey\nAND l_orderkey = o_orderkey\nAND o_orderdate &lt; DATE '1995-03-15'\nAND l_shipdate &gt; DATE '1995-03-15'\nGROUP BY l_orderkey , o_orderdate , o_shippriority\nORDER BY revenue DESC , o_orderdate\nLIMIT 10;\n+------------+---------------------+-------------+----------------+\n| l_orderkey | revenue             | o_orderdate | o_shippriority |\n+------------+---------------------+-------------+----------------+\n|    2456423 | 406181.011100000000 | 1995-03-05  |              0 |\n|    3459808 | 405838.698900000000 | 1995-03-04  |              0 |\n|     492164 | 390324.061000000000 | 1995-02-19  |              0 |\n|    1188320 | 384537.935900000000 | 1995-03-09  |              0 |\n|    2435712 | 378673.055800000000 | 1995-02-26  |              0 |\n|    4878020 | 378376.795200000000 | 1995-03-12  |              0 |\n|    5521732 | 375153.921500000000 | 1995-03-13  |              0 |\n|    2628192 | 373133.309400000000 | 1995-02-22  |              0 |\n|     993600 | 371407.459500000000 | 1995-03-05  |              0 |\n|    2300070 | 367371.145200000000 | 1995-03-13  |              0 |\n+------------+---------------------+-------------+----------------+\n10 rows in set (0.20 sec)\n</code></pre> <p>Write as <code>Join</code>, the syntax is as follows:</p> <pre><code>mysql&gt; SELECT   l_orderkey,\nSUM(l_extendedprice * (1 - l_discount)) AS revenue,\no_orderdate,\no_shippriority\nFROM\nCUSTOMER\njoin ORDERS on c_custkey = o_custkey\njoin LINEITEM on l_orderkey = o_orderkey\nWHERE\nc_mktsegment = 'BUILDING'\nAND o_orderdate &lt; DATE '1995-03-15'\nAND l_shipdate &gt; DATE '1995-03-15'\nGROUP BY l_orderkey , o_orderdate , o_shippriority\nORDER BY revenue DESC , o_orderdate\nLIMIT 10;\n+------------+---------------------+-------------+----------------+\n| l_orderkey | revenue             | o_orderdate | o_shippriority |\n+------------+---------------------+-------------+----------------+\n|    2456423 | 406181.011100000000 | 1995-03-05  |              0 |\n|    3459808 | 405838.698900000000 | 1995-03-04  |              0 |\n|     492164 | 390324.061000000000 | 1995-02-19  |              0 |\n|    1188320 | 384537.935900000000 | 1995-03-09  |              0 |\n|    2435712 | 378673.055800000000 | 1995-02-26  |              0 |\n|    4878020 | 378376.795200000000 | 1995-03-12  |              0 |\n|    5521732 | 375153.921500000000 | 1995-03-13  |              0 |\n|    2628192 | 373133.309400000000 | 1995-02-22  |              0 |\n|     993600 | 371407.459500000000 | 1995-03-05  |              0 |\n|    2300070 | 367371.145200000000 | 1995-03-13  |              0 |\n+------------+---------------------+-------------+----------------+\n10 rows in set (0.20 sec)\n</code></pre>"},{"location":"MatrixOne/Develop/read-data/multitable-join-query/#left-join-and-right-join","title":"<code>LEFT JOIN</code> and <code>RIGHT JOIN</code>","text":"<p>Outer joins are further divided into left join and right join, and equivalent semantics can be achieved between the two:</p> <ul> <li><code>LEFT JOIN</code></li> </ul> <p>The <code>LEFT JOIN</code> returns all the rows in the left table and the values \u200b\u200bin the right table that match the join condition. If no rows are matched in the right table, it will be filled with NULL.</p> Statement Image SELECT  FROM TableA A LEFT JOIN TableB B ON A.Key=B.Key SELECT  FROM TableA A LEFT JOIN TableB B ON A.Key=B.Key WHERE B.Key IS NULL <ul> <li><code>RIGHT JOIN</code></li> </ul> <p>A <code>RIGHT JOIN</code> returns all the records in the right table and the values \u200b\u200bin the left table that match the join condition. If there is no matching value, it is filled with NULL.</p> Statement Image SELECT  FROM TableA A RIGHT JOIN TableB B ON A.Key=B.Key SELECT  FROM TableA A RIGHT JOIN TableB B ON A.Key=B.Key WHERE A.Key IS NULL <p>The example is as below:</p> <pre><code>SELECT\nc_custkey, COUNT(o_orderkey) AS c_count\nFROM\nCUSTOMER\nLEFT OUTER JOIN ORDERS ON (c_custkey = o_custkey\nAND o_comment NOT LIKE '%special%requests%')\nGROUP BY c_custkey limit 10;\n\n+-----------+---------+\n| c_custkey | c_count |\n+-----------+---------+\n|    147457 |      16 |\n|    147458 |       7 |\n|    147459 |       0 |\n|    147460 |      16 |\n|    147461 |       7 |\n|    147462 |       0 |\n|    147463 |      14 |\n|    147464 |      11 |\n|    147465 |       0 |\n|    147466 |      17 |\n+-----------+---------+\n10 rows in set (0.93 sec)\n</code></pre> <p>Or:</p> <pre><code>SELECT\nc_custkey, COUNT(o_orderkey) AS c_count\nFROM\nORDERS\nRIGHT OUTER JOIN CUSTOMER ON (c_custkey = o_custkey\nAND o_comment NOT LIKE '%special%requests%')\nGROUP BY c_custkey limit 10;\n\n+-----------+---------+\n| c_custkey | c_count |\n+-----------+---------+\n|    147457 |      16 |\n|    147458 |       7 |\n|    147459 |       0 |\n|    147460 |      16 |\n|    147461 |       7 |\n|    147462 |       0 |\n|    147463 |      14 |\n|    147464 |      11 |\n|    147465 |       0 |\n|    147466 |      17 |\n+-----------+---------+\n10 rows in set (0.93 sec)\n</code></pre>"},{"location":"MatrixOne/Develop/read-data/multitable-join-query/#full-join","title":"<code>FULL JOIN</code>","text":"<p>A <code>full join</code> is the union of left and right outer joins. The join table contains all records from the joined tables or is filled with <code>NULL</code> if a matching record is missing.</p> <pre><code>SELECT\nc_custkey, COUNT(o_orderkey) AS c_count\nFROM\nCUSTOMER\nFULL JOIN ORDERS ON (c_custkey = o_custkey\nAND o_comment NOT LIKE '%special%requests%')\nGROUP BY c_custkey limit 10;\n\n+-----------+---------+\n| c_custkey | c_count |\n+-----------+---------+\n|         1 |       6 |\n|         2 |       7 |\n|         4 |      20 |\n|         5 |       4 |\n|         7 |      16 |\n|         8 |      13 |\n|        10 |      20 |\n|        11 |      13 |\n|        13 |      18 |\n|        14 |       9 |\n+-----------+---------+\n10 rows in set (0.77 sec)\n</code></pre> <p>The <code>full join</code> can also be rewritten to obtain the same semantics:</p> <pre><code>SELECT\nc_custkey, COUNT(o_orderkey) AS c_count\nFROM\nCUSTOMER\nLEFT OUTER JOIN ORDERS ON (c_custkey = o_custkey\nAND o_comment NOT LIKE '%special%requests%')\nGROUP BY c_custkey\nUNION\nSELECT\nc_custkey, COUNT(o_orderkey) AS c_count\nFROM\nCUSTOMER\nLEFT OUTER JOIN ORDERS ON (c_custkey = o_custkey\nAND o_comment NOT LIKE '%special%requests%')\nWHERE c_custkey IS NULL\nGROUP BY c_custkey\nlimit 10;\n\n+-----------+---------+\n| c_custkey | c_count |\n+-----------+---------+\n|    147457 |      16 |\n|    147458 |       7 |\n|    147459 |       0 |\n|    147460 |      16 |\n|    147461 |       7 |\n|    147462 |       0 |\n|    147463 |      14 |\n|    147464 |      11 |\n|    147465 |       0 |\n|    147466 |      17 |\n+-----------+---------+\n10 rows in set (1.09 sec)\n</code></pre>"},{"location":"MatrixOne/Develop/read-data/multitable-join-query/#implicit-join","title":"Implicit join","text":"<p>Before the <code>JOIN</code> statement that explicitly declared a join was added to the SQL standard, it was possible to join two or more tables in a SQL statement using the <code>FROM t1, t2</code> clause, and specify the conditions for the join using the <code>WHERE t1.id = t2.id</code> clause. You can understand it as an implicit join, which uses the inner join to join tables.</p>"},{"location":"MatrixOne/Develop/read-data/query-data-single-table/","title":"Query Data from a Single Table","text":"<p>This document describes how to use SQL to query data from a single table in a database.</p>"},{"location":"MatrixOne/Develop/read-data/query-data-single-table/#before-you-start","title":"Before you start","text":"<p>Make sure you have already Deployed standalone MatrixOne.</p>"},{"location":"MatrixOne/Develop/read-data/query-data-single-table/#preparation","title":"Preparation","text":"<p>Create a database named token_demo firstly:</p> <pre><code>CREATE DATABASE token_demo;\nUSE token_demo;\n</code></pre> <p>Create a table named token_count to prepare for querying:</p> <pre><code>CREATE TABLE token_count (\nid int,\ntoken varchar(100) DEFAULT '' NOT NULL,\ncount int DEFAULT 0 NOT NULL,\nqty int,\nphone char(1) DEFAULT '' NOT NULL,\ntimes datetime DEFAULT '2000-01-01 00:00:00' NOT NULL\n);\nINSERT INTO token_count VALUES (21,'e45703b64de71482360de8fec94c3ade',3,7800,'n','1999-12-23 17:22:21');\nINSERT INTO token_count VALUES (22,'e45703b64de71482360de8fec94c3ade',4,5000,'y','1999-12-23 17:22:21');\nINSERT INTO token_count VALUES (18,'346d1cb63c89285b2351f0ca4de40eda',3,13200,'b','1999-12-23 11:58:04');\nINSERT INTO token_count VALUES (17,'ca6ddeb689e1b48a04146b1b5b6f936a',4,15000,'b','1999-12-23 11:36:53');\nINSERT INTO token_count VALUES (16,'ca6ddeb689e1b48a04146b1b5b6f936a',3,13200,'b','1999-12-23 11:36:53');\nINSERT INTO token_count VALUES (26,'a71250b7ed780f6ef3185bfffe027983',5,1500,'b','1999-12-27 09:44:24');\nINSERT INTO token_count VALUES (24,'4d75906f3c37ecff478a1eb56637aa09',3,5400,'y','1999-12-23 17:29:12');\nINSERT INTO token_count VALUES (25,'4d75906f3c37ecff478a1eb56637aa09',4,6500,'y','1999-12-23 17:29:12');\nINSERT INTO token_count VALUES (27,'a71250b7ed780f6ef3185bfffe027983',3,6200,'b','1999-12-27 09:44:24');\nINSERT INTO token_count VALUES (28,'a71250b7ed780f6ef3185bfffe027983',3,5400,'y','1999-12-27 09:44:36');\nINSERT INTO token_count VALUES (29,'a71250b7ed780f6ef3185bfffe027983',4,17700,'b','1999-12-27 09:45:05');\n</code></pre>"},{"location":"MatrixOne/Develop/read-data/query-data-single-table/#simple-query","title":"Simple query","text":"<p>Execute the following SQL statement in a MySQL client:</p> <pre><code>mysql&gt; SELECT id, token FROM token_count;\n</code></pre> <p>Result is as below:</p> <pre><code>+------+----------------------------------+\n| id   | token                            |\n+------+----------------------------------+\n|   21 | e45703b64de71482360de8fec94c3ade |\n|   22 | e45703b64de71482360de8fec94c3ade |\n|   18 | 346d1cb63c89285b2351f0ca4de40eda |\n|   17 | ca6ddeb689e1b48a04146b1b5b6f936a |\n|   16 | ca6ddeb689e1b48a04146b1b5b6f936a |\n|   26 | a71250b7ed780f6ef3185bfffe027983 |\n|   24 | 4d75906f3c37ecff478a1eb56637aa09 |\n|   25 | 4d75906f3c37ecff478a1eb56637aa09 |\n|   27 | a71250b7ed780f6ef3185bfffe027983 |\n|   28 | a71250b7ed780f6ef3185bfffe027983 |\n|   29 | a71250b7ed780f6ef3185bfffe027983 |\n+------+----------------------------------+\n</code></pre>"},{"location":"MatrixOne/Develop/read-data/query-data-single-table/#filter-results","title":"Filter results","text":"<p>To filter query results, you can use the <code>WHERE</code> statement.</p> <pre><code>mysql&gt; SELECT * FROM token_count WHERE id = 25;\n</code></pre> <p>Result is as below:</p> <pre><code>+------+----------------------------------+-------+------+-------+---------------------+\n| id   | token                            | count | qty  | phone | times               |\n+------+----------------------------------+-------+------+-------+---------------------+\n|   25 | 4d75906f3c37ecff478a1eb56637aa09 |     4 | 6500 | y     | 1999-12-23 17:29:12 |\n+------+----------------------------------+-------+------+-------+---------------------+\n</code></pre>"},{"location":"MatrixOne/Develop/read-data/query-data-single-table/#sort-results","title":"Sort results","text":"<p>To sort query results, you can use the <code>ORDER BY</code> statement.</p> <p>For example, the following SQL statement can be used to sort the data in the token_count table in descending order (DESC) by times column.</p> <pre><code>mysql&gt; SELECT id, token, times FROM token_count ORDER BY times DESC;\n</code></pre> <p>Result is as below:</p> <pre><code>+------+----------------------------------+---------------------+\n| id   | token                            | times               |\n+------+----------------------------------+---------------------+\n|   29 | a71250b7ed780f6ef3185bfffe027983 | 1999-12-27 09:45:05 |\n|   28 | a71250b7ed780f6ef3185bfffe027983 | 1999-12-27 09:44:36 |\n|   26 | a71250b7ed780f6ef3185bfffe027983 | 1999-12-27 09:44:24 |\n|   27 | a71250b7ed780f6ef3185bfffe027983 | 1999-12-27 09:44:24 |\n|   24 | 4d75906f3c37ecff478a1eb56637aa09 | 1999-12-23 17:29:12 |\n|   25 | 4d75906f3c37ecff478a1eb56637aa09 | 1999-12-23 17:29:12 |\n|   21 | e45703b64de71482360de8fec94c3ade | 1999-12-23 17:22:21 |\n|   22 | e45703b64de71482360de8fec94c3ade | 1999-12-23 17:22:21 |\n|   18 | 346d1cb63c89285b2351f0ca4de40eda | 1999-12-23 11:58:04 |\n|   17 | ca6ddeb689e1b48a04146b1b5b6f936a | 1999-12-23 11:36:53 |\n|   16 | ca6ddeb689e1b48a04146b1b5b6f936a | 1999-12-23 11:36:53 |\n+------+----------------------------------+---------------------+\n</code></pre>"},{"location":"MatrixOne/Develop/read-data/query-data-single-table/#limit-the-number-of-query-results","title":"Limit the number of query results","text":"<p>To limit the number of query results, you can use the <code>LIMIT</code> statement.</p> <pre><code>mysql&gt; SELECT id, token, times FROM token_count ORDER BY times DESC LIMIT 5;\n</code></pre> <p>Result is as below:</p> <pre><code>+------+----------------------------------+---------------------+\n| id   | token                            | times               |\n+------+----------------------------------+---------------------+\n|   29 | a71250b7ed780f6ef3185bfffe027983 | 1999-12-27 09:45:05 |\n|   28 | a71250b7ed780f6ef3185bfffe027983 | 1999-12-27 09:44:36 |\n|   26 | a71250b7ed780f6ef3185bfffe027983 | 1999-12-27 09:44:24 |\n|   27 | a71250b7ed780f6ef3185bfffe027983 | 1999-12-27 09:44:24 |\n|   24 | 4d75906f3c37ecff478a1eb56637aa09 | 1999-12-23 17:29:12 |\n+------+----------------------------------+---------------------+\n</code></pre>"},{"location":"MatrixOne/Develop/read-data/query-data-single-table/#aggregate-queries","title":"Aggregate queries","text":"<p>To have a better understanding of the overall data situation, you can use the <code>GROUP BY</code> statement to aggregate query results.</p> <p>For example, you can group basic information by <code>id</code>, <code>count</code>, and <code>times</code> columns and count them separately:</p> <pre><code>mysql&gt; SELECT id, count, times FROM token_count GROUP BY id, count, times ORDER BY times DESC LIMIT 5;\n</code></pre> <p>Result is as below:</p> <pre><code>+------+-------+---------------------+\n| id   | count | times               |\n+------+-------+---------------------+\n|   29 |     4 | 1999-12-27 09:45:05 |\n|   28 |     3 | 1999-12-27 09:44:36 |\n|   26 |     5 | 1999-12-27 09:44:24 |\n|   27 |     3 | 1999-12-27 09:44:24 |\n|   24 |     3 | 1999-12-23 17:29:12 |\n+------+-------+---------------------+\n</code></pre>"},{"location":"MatrixOne/Develop/read-data/subquery/","title":"Subquery","text":"<p>This document describes how to use subquery statements in MatrixOne.</p>"},{"location":"MatrixOne/Develop/read-data/subquery/#overview","title":"Overview","text":"<p>An subquery is a query within another SQL query. With subquery, the query result can be used in another query.</p> <p>In most cases, there are five types of subqueries:</p> <ul> <li>Scalar Subquery, such as <code>SELECT (SELECT s1 FROM t2) FROM t1</code>.</li> <li>Derived Tables, such as <code>SELECT t1.s1 FROM (SELECT s1 FROM t2) t1</code>.</li> <li>Existential Test, such as <code>WHERE NOT EXISTS(SELECT ... FROM t2)</code>, <code>WHERE t1.a IN (SELECT ... FROM t2)</code>.</li> <li>Quantified Comparison, such as <code>WHERE t1.a = ANY(SELECT ... FROM t2)</code>, <code>WHERE t1.a = ANY(SELECT ... FROM t2)</code>.</li> <li>Subquery as a comparison operator operand, such as <code>WHERE t1.a &gt; (SELECT ... FROM t2)</code>.</li> </ul> <p>For more information on SQL statement, see SUBQUERY.</p> <p>In addition, from the execution of SQL statements, subquery generally has the following two types:</p> <ul> <li> <p>Correlated Subquery: In Correlated Subquery nested in databases, the inner and outer queries would not be independent, and the inner queries would depend on the outer queries.The execution sequence is as follows:</p> <ul> <li> <p>Queries a record from the outer query.</p> </li> <li> <p>Put the queried records into the inner query, then put the records that meet the conditions into the outer query.</p> </li> <li> <p>Repeat the above steps</p> </li> </ul> <p>For example: <code>select * from tableA where tableA.cloumn &amp;lt; (select column from tableB where tableA.id = tableB.id))</code></p> </li> <li> <p>Self-contained Subquery: In a database nested query, the inner query is entirely independent of the outer query. The execution sequence is as follows:</p> <ul> <li> <p>Execute the inner query first.</p> </li> <li> <p>The result of the inner query is carried into the outer layer, and then the outer query is executed.</p> </li> </ul> <p>For example: <code>select * from tableA where tableA.column = (select tableB.column from tableB)</code></p> </li> </ul> <p>Key Feature:</p> <ul> <li> <p>Subqueries allow structured queries so that each part of a query statement can be separated.</p> </li> <li> <p>Subqueries provides another way to perform operations that require complex <code>JOIN</code> and <code>UNION</code>.</p> </li> </ul>"},{"location":"MatrixOne/Develop/read-data/subquery/#example","title":"Example","text":""},{"location":"MatrixOne/Develop/read-data/subquery/#before-you-start","title":"Before you start","text":"<p>Make sure you have already Deployed standalone MatrixOne.</p>"},{"location":"MatrixOne/Develop/read-data/subquery/#preparation","title":"Preparation","text":"<ol> <li> <p>Download the dataset:</p> <pre><code>https://community-shared-data-1308875761.cos.ap-beijing.myqcloud.com/tpch/tpch-1g.zip\n</code></pre> </li> <li> <p>Create the database and tables:</p> <pre><code>create database d1;\nuse d1;\nCREATE TABLE NATION  ( N_NATIONKEY  INTEGER NOT NULL,\nN_NAME       CHAR(25) NOT NULL,\nN_REGIONKEY  INTEGER NOT NULL,\nN_COMMENT    VARCHAR(152),\nPRIMARY KEY (N_NATIONKEY));\n\nCREATE TABLE REGION  ( R_REGIONKEY  INTEGER NOT NULL,\nR_NAME       CHAR(25) NOT NULL,\nR_COMMENT    VARCHAR(152),\nPRIMARY KEY (R_REGIONKEY));\n\nCREATE TABLE PART  ( P_PARTKEY     INTEGER NOT NULL,\nP_NAME        VARCHAR(55) NOT NULL,\nP_MFGR        CHAR(25) NOT NULL,\nP_BRAND       CHAR(10) NOT NULL,\nP_TYPE        VARCHAR(25) NOT NULL,\nP_SIZE        INTEGER NOT NULL,\nP_CONTAINER   CHAR(10) NOT NULL,\nP_RETAILPRICE DECIMAL(15,2) NOT NULL,\nP_COMMENT     VARCHAR(23) NOT NULL,\nPRIMARY KEY (P_PARTKEY));\n\nCREATE TABLE SUPPLIER ( S_SUPPKEY     INTEGER NOT NULL,\nS_NAME        CHAR(25) NOT NULL,\nS_ADDRESS     VARCHAR(40) NOT NULL,\nS_NATIONKEY   INTEGER NOT NULL,\nS_PHONE       CHAR(15) NOT NULL,\nS_ACCTBAL     DECIMAL(15,2) NOT NULL,\nS_COMMENT     VARCHAR(101) NOT NULL,\nPRIMARY KEY (S_SUPPKEY));\n\nCREATE TABLE PARTSUPP ( PS_PARTKEY     INTEGER NOT NULL,\nPS_SUPPKEY     INTEGER NOT NULL,\nPS_AVAILQTY    INTEGER NOT NULL,\nPS_SUPPLYCOST  DECIMAL(15,2)  NOT NULL,\nPS_COMMENT     VARCHAR(199) NOT NULL,\nPRIMARY KEY (PS_PARTKEY, PS_SUPPKEY));\n\nCREATE TABLE CUSTOMER ( C_CUSTKEY     INTEGER NOT NULL,\nC_NAME        VARCHAR(25) NOT NULL,\nC_ADDRESS     VARCHAR(40) NOT NULL,\nC_NATIONKEY   INTEGER NOT NULL,\nC_PHONE       CHAR(15) NOT NULL,\nC_ACCTBAL     DECIMAL(15,2)   NOT NULL,\nC_MKTSEGMENT  CHAR(10) NOT NULL,\nC_COMMENT     VARCHAR(117) NOT NULL,\nPRIMARY KEY (C_CUSTKEY));\n\nCREATE TABLE ORDERS  ( O_ORDERKEY       BIGINT NOT NULL,\nO_CUSTKEY        INTEGER NOT NULL,\nO_ORDERSTATUS    CHAR(1) NOT NULL,\nO_TOTALPRICE     DECIMAL(15,2) NOT NULL,\nO_ORDERDATE      DATE NOT NULL,\nO_ORDERPRIORITY  CHAR(15) NOT NULL,\nO_CLERK          CHAR(15) NOT NULL,\nO_SHIPPRIORITY   INTEGER NOT NULL,\nO_COMMENT        VARCHAR(79) NOT NULL,\nPRIMARY KEY (O_ORDERKEY));\n\nCREATE TABLE LINEITEM ( L_ORDERKEY    BIGINT NOT NULL,\nL_PARTKEY     INTEGER NOT NULL,\nL_SUPPKEY     INTEGER NOT NULL,\nL_LINENUMBER  INTEGER NOT NULL,\nL_QUANTITY    DECIMAL(15,2) NOT NULL,\nL_EXTENDEDPRICE  DECIMAL(15,2) NOT NULL,\nL_DISCOUNT    DECIMAL(15,2) NOT NULL,\nL_TAX         DECIMAL(15,2) NOT NULL,\nL_RETURNFLAG  CHAR(1) NOT NULL,\nL_LINESTATUS  CHAR(1) NOT NULL,\nL_SHIPDATE    DATE NOT NULL,\nL_COMMITDATE  DATE NOT NULL,\nL_RECEIPTDATE DATE NOT NULL,\nL_SHIPINSTRUCT CHAR(25) NOT NULL,\nL_SHIPMODE     CHAR(10) NOT NULL,\nL_COMMENT      VARCHAR(44) NOT NULL,\nPRIMARY KEY (L_ORDERKEY, L_LINENUMBER));\n</code></pre> </li> <li> <p>Load data into the created tables:</p> <pre><code>load data infile '/YOUR_TPCH_DATA_PATH/nation.tbl' into table NATION FIELDS TERMINATED BY '|' OPTIONALLY ENCLOSED BY '\"' LINES TERMINATED BY '\\n';\n\nload data infile '/YOUR_TPCH_DATA_PATH/region.tbl' into table REGION FIELDS TERMINATED BY '|' OPTIONALLY ENCLOSED BY '\"' LINES TERMINATED BY '\\n';\n\nload data infile '/YOUR_TPCH_DATA_PATH/part.tbl' into table PART FIELDS TERMINATED BY '|' OPTIONALLY ENCLOSED BY '\"' LINES TERMINATED BY '\\n';\n\nload data infile '/YOUR_TPCH_DATA_PATH/supplier.tbl' into table SUPPLIER FIELDS TERMINATED BY '|' OPTIONALLY ENCLOSED BY '\"' LINES TERMINATED BY '\\n';\n\nload data infile '/YOUR_TPCH_DATA_PATH/partsupp.tbl' into table PARTSUPP FIELDS TERMINATED BY '|' OPTIONALLY ENCLOSED BY '\"' LINES TERMINATED BY '\\n';\n\nload data infile '/YOUR_TPCH_DATA_PATH/orders.tbl' into table ORDERS FIELDS TERMINATED BY '|' OPTIONALLY ENCLOSED BY '\"' LINES TERMINATED BY '\\n';\n\nload data infile '/YOUR_TPCH_DATA_PATH/customer.tbl' into table CUSTOMER FIELDS TERMINATED BY '|' OPTIONALLY ENCLOSED BY '\"' LINES TERMINATED BY '\\n';\n\nload data infile '/YOUR_TPCH_DATA_PATH/lineitem.tbl' into table LINEITEM FIELDS TERMINATED BY '|' OPTIONALLY ENCLOSED BY '\"' LINES TERMINATED BY '\\n';\n</code></pre> </li> </ol> <p>Then you can query data in MatrixOne with the created table.</p>"},{"location":"MatrixOne/Develop/read-data/subquery/#self-contained-subquery","title":"Self-contained subquery","text":"<p>For a self-contained subquery that uses subquery as operand of comparison operators (<code>&gt;</code>, <code>&gt;=</code>, <code>&lt;</code>, <code>&lt;=</code>, <code>=</code> , or <code>! =</code>), the inner subquery queries only once, and MatrixOne rewrites it as a constant during the execution plan phase.</p> <pre><code>mysql&gt; select p.p_name from (select * from part where p_brand='Brand#21' and p_retailprice between 1100 and 1200)  p, partsupp ps where p.p_partkey=ps.ps_partkey and p.p_name like '%pink%' limit 10;\n</code></pre> <p>The inner subquery is executed before MatrixOne executes the above query:</p> <pre><code>mysql&gt; select * from part where p_brand='Brand#21' and p_retailprice between 1100 and 1200\n</code></pre> <p>Result is as below:</p> <pre><code>+-----------------------------------+\n| p_name                            |\n+-----------------------------------+\n| olive chartreuse smoke pink tan   |\n| olive chartreuse smoke pink tan   |\n| olive chartreuse smoke pink tan   |\n| olive chartreuse smoke pink tan   |\n| pink sienna dark bisque turquoise |\n| pink sienna dark bisque turquoise |\n| pink sienna dark bisque turquoise |\n| pink sienna dark bisque turquoise |\n| honeydew orchid cyan magenta pink |\n| honeydew orchid cyan magenta pink |\n+-----------------------------------+\n10 rows in set (0.06 sec)\n</code></pre> <p>For self-contained subqueries such as Existential Test and Quantified Comparison, MatrixOne rewrites and replaces them with equivalent queries for better performance.</p>"},{"location":"MatrixOne/Develop/read-data/subquery/#correlated-subquery","title":"Correlated subquery","text":"<p>For correlated subquery, because the inner subquery references the columns from the outer query, each subquery is executed once for each row of the outer query. That is, assuming that the outer query gets 10 million results, the subquery will also be executed 10 million times, which will consume more time and resources.</p> <p>Therefore, in the process of processing, MatrixOne will try to Decorrelate of Correlated Subquery to improve the query efficiency at the execution plan level.</p> <pre><code>mysql&gt; select p_name from part where P_PARTKEY in (select PS_PARTKEY from PARTSUPP where PS_SUPPLYCOST&gt;=500) and p_name like '%pink%' limit 10;\n</code></pre> <p>Rewrites it to an equivalent join query:</p> <pre><code>select p_name from part join partsupp on P_PARTKEY=PS_PARTKEY where PS_SUPPLYCOST&gt;=500 and p_name like '%pink%' limit 10;\n</code></pre> <p>Result is as below:</p> <pre><code>+------------------------------------+\n| p_name                             |\n+------------------------------------+\n| papaya red almond hot pink         |\n| turquoise hot smoke green pink     |\n| purple cornsilk red pink floral    |\n| pink cyan purple white burnished   |\n| sandy dark pink indian cream       |\n| powder cornsilk chiffon slate pink |\n| rosy light black pink orange       |\n| pink white goldenrod ivory steel   |\n| cornsilk dim pink tan sienna       |\n| lavender navajo steel sandy pink   |\n+------------------------------------+\n10 rows in set (0.23 sec)\n</code></pre> <p>As a best practice, in actual development, it is recommended to avoid querying through a correlated subquery if you can write another equivalent query with better performance.</p>"},{"location":"MatrixOne/Develop/read-data/views/","title":"Views","text":"<p>This document describes how to use views in MatrixOne.</p>"},{"location":"MatrixOne/Develop/read-data/views/#overview","title":"Overview","text":"<p>A view acts as a virtual table, whose schema is defined by the <code>SELECT</code> statement that creates the view.</p> <p>Key Feature:</p> <ul> <li> <p>Simplified user action: The view mechanism allows users to focus on the data they care about. If the data is not directly from the base table, you can define views to make the database look simple and simplify the user's data query operation.</p> </li> <li> <p>Multiple perspectives on the same data: The view mechanism enables different users to view the same data differently, which is necessary when many users share the same database.</p> </li> <li> <p>Provides a degree of logical independence for refactoring the database: Physical data independence means that the user's application does not depend on the physical structure of the database. The logical independence of the data indicates that when the database is restructured, such as adding new relationships or adding new fields to existing relationships, the user's application is not affected. Hierarchical databases and mesh databases can support the physical independence of data but can not fully support logical independence.</p> </li> </ul>"},{"location":"MatrixOne/Develop/read-data/views/#before-you-start","title":"Before you start","text":"<p>Make sure you have already Deployed standalone MatrixOne.</p>"},{"location":"MatrixOne/Develop/read-data/views/#preparation","title":"Preparation","text":"<p>Create two tables to prepare for using the VIEW:</p> <pre><code>CREATE TABLE t00(a INTEGER);\nINSERT INTO t00 VALUES (1),(2);\nCREATE TABLE t01(a INTEGER);\nINSERT INTO t01 VALUES (1);\n</code></pre> <p>Query the table t00:</p> <pre><code>mysql&gt; select * from t00;\n+------+\n| a    |\n+------+\n|    1 |\n|    2 |\n+------+\n</code></pre> <p>Query the table t01:</p> <pre><code>mysql&gt; select * from t01;\n+------+\n| a    |\n+------+\n|    1 |\n+------+\n</code></pre>"},{"location":"MatrixOne/Develop/read-data/views/#create-a-view","title":"Create a view","text":"<p>A complex query can be defined as a view with the CREATE VIEW statement. The syntax is as follows:</p> <pre><code>CREATE VIEW view_name AS query;\n</code></pre> <p>you cannot create a view with the same name as an existing view or table.</p> <p>Example:</p> <pre><code>CREATE VIEW v0 AS SELECT t00.a, t01.a AS b FROM t00 LEFT JOIN t01 USING(a);\nQuery OK, 0 rows affected (0.02 sec)\n</code></pre>"},{"location":"MatrixOne/Develop/read-data/views/#query-views","title":"Query views","text":"<p>Once a view is created, you can use the <code>SELECT</code> statement to query the view just like a normal table.</p> <pre><code>mysql&gt; SELECT * FROM v0;\n+------+------+\n| a    | b    |\n+------+------+\n|    1 |    1 |\n|    2 | NULL |\n+------+------+\n</code></pre>"},{"location":"MatrixOne/Develop/read-data/views/#get-view-related-information","title":"Get view related information","text":"<p>Use the <code>SHOW CREATE TABLE|VIEW view_name</code> statement:</p> <pre><code>mysql&gt; SHOW CREATE VIEW v0;\n+------+----------------------------------------------------------------------------+\n| View | Create View                                                                |\n+------+----------------------------------------------------------------------------+\n| v0   | CREATE VIEW v0 AS SELECT t00.a, t01.a AS b FROM t00 LEFT JOIN t01 USING(a) |\n+------+----------------------------------------------------------------------------+\n1 row in set (0.00 sec)\n</code></pre>"},{"location":"MatrixOne/Develop/read-data/views/#drop-view","title":"Drop view","text":"<p>Use the <code>DROP VIEW view_name;</code> statement to drop a view.</p> <pre><code>mysql&gt; DROP VIEW v0;\n</code></pre>"},{"location":"MatrixOne/Develop/read-data/window-function/time-window/","title":"Time window","text":"<p>In a timing scenario, data is usually streamed, and streamed data is usually endless. We can't know when the data source will continue/stop sending data, so processing aggregate events (count, sum, etc.) on a stream will be handled differently than in a batch. Time windows (Windows) are generally used on time-series data streams to limit the scope of aggregations, such as Count of Website Hits in the Last 2 Minutes. The concept of a time window is equivalent to helping us collect a dynamic table of finite data based on acquisition time, and we can aggregate the data in the table. Over time, this window slides forward, continuously capturing new data for calculations.</p> <p>The time window is divided into Tumble Window and Sliding Window. Tumble Window has a fixed time window length with no overlap in each window time. Sliding Window's time window length is also fixed, but there is overlap between the windows to capture data changes more frequently.</p> <p>When users use the time window feature, they can do calculations within each time window, which slides forward as time passes. When defining a continuous query, you need to specify the size of the time window and the incremental time the next window goes forward.</p>"},{"location":"MatrixOne/Develop/read-data/window-function/time-window/#downsampling","title":"Downsampling","text":"<p>Downsampling refers to the process of extracting smaller, more manageable subsets of data from large amounts of data. This is especially important when dealing with large-scale time series data, reducing storage requirements, improving query efficiency, and providing clearer trend maps in data visualization. The time window function is the core capability of the database to implement the downsampling function. By defining the time window, we can aggregate the data within each window to achieve downsampling. The size of the time window and the sliding distance determine the granularity of the downsampling.</p>"},{"location":"MatrixOne/Develop/read-data/window-function/time-window/#timesheet-and-time-window-syntax","title":"Timesheet and Time Window Syntax","text":"<p>In MatrixOne, a time window needs to be used in conjunction with a timing table, which is a table that must have <code>ts</code> as the primary key when it is built and is of type <code>timestamp</code>.</p> <pre><code>DDL Clause:\nCREATE TABLE TS_TBL (ts timestamp(6) primary key, SIGNAL1 FLOAT, SIGNAL2 DOUBLE, ...);\n\ntime_window_clause:\nINTERVAL(timestamp_col, interval_val, time_unit) [SLIDING (sliding_val)] [fill_clause]\n\ntime_unit:\nSECOND | MINUTE | HOUR | DAY\n\nfill_clause:\nFILL(NONE | PREV | NEXT | NULL | VALUE, val | LINEAR)\n</code></pre> <p>When creating a timing table, the <code>ts</code> column can specify the precision of <code>timestamp</code> up to <code>timestamp(6)</code> (microsecond level).</p> <p>Parameter meaning in INTERVAL statement:</p> <ul> <li>timestamp_col: timestamp column.</li> <li>interval_val: length of the time window.</li> <li>time_unit: unit of time (seconds, minutes, hours, days).</li> <li>SLIDING (sliding_val): Optionally, specifies the time distance the window slides.</li> <li>FILL(fill_method): Optionally, specifies how to populate the data within the window.</li> </ul> <p>INTERVAL (timestamp_col, interval_val) acts on the data to produce the equivalent time period interval_val window, and SLIDING is used to specify the sliding_val time distance the window slides forward.</p> <ul> <li> <p>Tumble window when interval_val equals sliding_val.</p> </li> <li> <p>Sliding window when interval_val is greater than sliding_val.</p> </li> </ul> <p>Other instructions for use:</p> <ul> <li>The INTERVAL and SLIDING clauses need to be used in conjunction with aggregate or select functions, which are currently supported in the time window: max, min, sum, avg, count aggregate functions.</li> <li>The window width of the aggregation time period is specified by the keyword INTERVAL with a minimum interval of 1 second.</li> <li>The time series increases strictly monotonously in the results returned by the time window.</li> <li>interval_val must be a positive integer.</li> <li>When querying with INTERVAL, _wstart(ts), _wend(ts) are pseudo-columns generated from the window, the start and end times of the window, respectively.</li> </ul> <p>Example of use:</p> <p>This example demonstrates how to slide every 5 minutes over a 10-minute time window, giving a maximum and minimum temperature every 5 minutes.</p> <pre><code>mysql&gt; drop table if exists sensor_data;\nCREATE TABLE sensor_data (ts timestamp(3) primary key, temperature FLOAT);\nINSERT INTO sensor_data VALUES('2023-08-01 00:00:00', 25.0);\nINSERT INTO sensor_data VALUES('2023-08-01 00:05:00', 26.0);\nINSERT INTO sensor_data VALUES('2023-08-01 00:15:00', 28.0);\nINSERT INTO sensor_data VALUES('2023-08-01 00:20:00', 30.0);\nINSERT INTO sensor_data VALUES('2023-08-01 00:25:00', 27.0);\nINSERT INTO sensor_data VALUES('2023-08-01 00:30:00', null);\nINSERT INTO sensor_data VALUES('2023-08-01 00:35:00', null);\nINSERT INTO sensor_data VALUES('2023-08-01 00:40:00', 28);\nINSERT INTO sensor_data VALUES('2023-08-01 00:45:00', 38);\nINSERT INTO sensor_data VALUES('2023-08-01 00:50:00', 31);\ninsert into sensor_data values('2023-07-31 23:55:00', 22);\nmysql&gt; select _wstart, _wend, max(temperature), min(temperature) from sensor_data where ts &gt; \"2023-08-01 00:00:00.000\" and ts &lt; \"2023-08-01 00:50:00\" interval(ts, 10, minute) sliding(5, minute);\n+-------------------------+-------------------------+------------------+------------------+\n| _wstart                 | _wend                   | max(temperature) | min(temperature) |\n+-------------------------+-------------------------+------------------+------------------+\n| 2023-08-01 00:00:00.000 | 2023-08-01 00:10:00.000 |               26 |               26 |\n| 2023-08-01 00:05:00.000 | 2023-08-01 00:15:00.000 |               26 |               26 |\n| 2023-08-01 00:10:00.000 | 2023-08-01 00:20:00.000 |               28 |               28 |\n| 2023-08-01 00:15:00.000 | 2023-08-01 00:25:00.000 |               30 |               28 |\n| 2023-08-01 00:20:00.000 | 2023-08-01 00:30:00.000 |               30 |               27 |\n| 2023-08-01 00:25:00.000 | 2023-08-01 00:35:00.000 |               27 |               27 |\n| 2023-08-01 00:30:00.000 | 2023-08-01 00:40:00.000 |             NULL |             NULL |\n| 2023-08-01 00:35:00.000 | 2023-08-01 00:45:00.000 |               28 |               28 |\n| 2023-08-01 00:40:00.000 | 2023-08-01 00:50:00.000 |               38 |               28 |\n| 2023-08-01 00:45:00.000 | 2023-08-01 00:55:00.000 |               38 |               38 |\n+-------------------------+-------------------------+------------------+------------------+\n10 rows in set (0.04 sec)\n</code></pre>"},{"location":"MatrixOne/Develop/read-data/window-function/time-window/#interpolation","title":"interpolation","text":"<p>Missing values are often encountered when processing timing data. The interpolation (FILL) feature allows us to populate these missing values in a variety of ways, ensuring continuity and integrity of the data, which is critical to the data analysis and downsampling process. The <code>FIll</code> clause of the time window acts to populate the aggregate results.</p> <p>MatrixOne offers several interpolation methods to accommodate different data processing needs:</p> <ul> <li>FILL(NONE): No padding, i.e. column unchanged</li> <li>FILL(VALUE, expr): Populate expr results</li> <li>FILL(PREV): Populate data with previous non-NULL value</li> <li>FILL(NEXT): Populate data with next non-NULL value</li> <li>FILL(LINEAR): Linear interpolation padding based on nearest non-NULL value before and after</li> </ul> <p>Example of use:</p> <p>This example adds interpolation logic to the previous table and populates it with NULL values.</p> <pre><code>select _wstart(ts), _wend(ts), max(temperature), min(temperature) from sensor_data where ts &gt; \"2023-08-01 00:00:00.000\" and ts &lt; \"2023-08-01 00:50:00.000\" interval(ts, 10, minute) sliding(5, minute) fill(prev);\n_wstart         |          _wend          |   max(temperature)   |   min(temperature)   |\n==================================================================================================\n2023-08-01 00:00:00.000 | 2023-08-01 00:10:00.000 |           26.0000000 |           26.0000000 |\n2023-08-01 00:05:00.000 | 2023-08-01 00:15:00.000 |           26.0000000 |           26.0000000 |\n2023-08-01 00:10:00.000 | 2023-08-01 00:20:00.000 |           28.0000000 |           28.0000000 |\n2023-08-01 00:15:00.000 | 2023-08-01 00:25:00.000 |           30.0000000 |           28.0000000 |\n2023-08-01 00:20:00.000 | 2023-08-01 00:30:00.000 |           30.0000000 |           27.0000000 |\n2023-08-01 00:25:00.000 | 2023-08-01 00:35:00.000 |           27.0000000 |           27.0000000 |\n2023-08-01 00:30:00.000 | 2023-08-01 00:40:00.000 |           27.0000000 |           27.0000000 |\n2023-08-01 00:35:00.000 | 2023-08-01 00:45:00.000 |           28.0000000 |           28.0000000 |\n2023-08-01 00:40:00.000 | 2023-08-01 00:50:00.000 |           38.0000000 |           28.0000000 |\n2023-08-01 00:45:00.000 | 2023-08-01 00:55:00.000 |           38.0000000 |           38.0000000 |\n</code></pre>"},{"location":"MatrixOne/Develop/read-data/window-function/window-function/","title":"Window function","text":"<p>A Window Function is a special function that can perform computation operations on a window (Window) in a query result set. Window functions can be used to group, sort, and aggregate result sets, while also being able to calculate correlation values for each row of data within each window without changing the number of rows in the result set. That is, through window functions, the result set can be analyzed and processed flexibly without introducing additional subqueries or join operations.</p> <p>SQL window functions have a wide range of applications in a variety of business scenarios:</p> <ol> <li> <p>Intra-row comparison: Compares a value in each row to other rows in the same group, such as calculating the difference between each employee's salary and the average departmental salary. At this point, you can use the window function.</p> </li> <li> <p>Data ranking: Window functions can easily generate ranking information for data. For example, if you want to see the ranking of sales, you can use the <code>RANK()</code> or <code>ROW_NUMBER()</code> functions.</p> </li> <li> <p>Rolling Calculation: Calculates the moving average. You can define the window range of the window function and then perform a rolling calculation.</p> </li> </ol>"},{"location":"MatrixOne/Develop/read-data/window-function/window-function/#list-of-window-functions","title":"List of window functions","text":"<ul> <li> <p>Most aggregate functions can also be used as window functions, for example, <code>SUM()</code>, <code>AVG()</code>, <code>COUNT()</code> These aggregate functions can be used with window functions to calculate the sum, average, or count of a column within a window. Aggregate functions and reference documentation for windowable functions supported by MatrixOne can be found at:</p> <ul> <li>AVG</li> <li>COUNT</li> <li>MAX</li> <li>SUM</li> <li>MIN</li> </ul> </li> <li> <p>See the following table for other window functions:</p> </li> </ul> Function name Description DENSE_RANK() Use to assign a rank to rows in the dataset, always assigning a consecutive rank to the next value, even if the previous value has the same rank. RANK() Assign a rank value to each row in the query result set, rows of the same value will have the same rank, and the next rank value will skip the same number of rows. ROW_NUMBER() Assign a unique integer value to each row in the query result set, determining the order based on the specified sort rules."},{"location":"MatrixOne/Develop/read-data/window-function/window-function/#how-to-use-window-functions","title":"How to use window functions","text":"<p>Using a window function usually requires the following steps:</p> <ol> <li> <p>Define Window: By using the OVER clause to define the scope of a window, you can specify the window's sort rule, partitioning method, row range, etc.</p> </li> <li> <p>Write a window function: In a <code>SELECT</code> statement, list the window function with other columns, specifying the columns and actions that need to be computed within the window.</p> </li> </ol> <p>Here is an example that demonstrates how to use the window function to calculate the total sales for each department and the sales ranking for each employee within the department:</p> <pre><code>CREATE TABLE SalesTable (\nDepartment VARCHAR(50),\nEmployee VARCHAR(50),\nSales INT\n);\n\nINSERT INTO SalesTable (Department, Employee, Sales) VALUES\n('Marketing', 'John', 1000),\n('Marketing', 'Jane', 1200),\n('Sales', 'Alex', 900),\n('Sales', 'Bob', 1100),\n('HR', 'Alice', 800),\n('HR', 'Charlie', 850);\n\nSELECT\nDepartment,\nEmployee,\nSales,\nSUM(Sales) OVER(PARTITION BY Department) AS DepartmentSales,\nRANK() OVER(PARTITION BY Department ORDER BY Sales DESC) AS SalesRank\nFROM\nSalesTable;\n+------------+----------+-------+-----------------+-----------+\n| department | employee | sales | DepartmentSales | SalesRank |\n+------------+----------+-------+-----------------+-----------+\n| HR         | Charlie  |   850 |            1650 |         1 |\n| HR         | Alice    |   800 |            1650 |         2 |\n| Marketing  | Jane     |  1200 |            2200 |         1 |\n| Marketing  | John     |  1000 |            2200 |         2 |\n| Sales      | Bob      |  1100 |            2000 |         1 |\n| Sales      | Alex     |   900 |            2000 |         2 |\n+------------+----------+-------+-----------------+-----------+\n6 rows in set (0.01 sec)\n</code></pre> <p>In the above example, the <code>PARTITION BY</code> clause is used to partition the result set by department, and then the <code>SUM()</code> function calculates the total sales for each department. Meanwhile, the <code>ORDER BY</code> clause specifies a descending order of sales, and the <code>RANK()</code> function assigns a ranking to employees within each department based on sales.</p>"},{"location":"MatrixOne/Develop/schema-design/create-database/","title":"Create a Database","text":"<p>This document describes how to create a database using SQL and various programming languages and lists the rules of database creation. In this document, the modatabase application is taken as an example to walk you through the steps of database creation.</p>"},{"location":"MatrixOne/Develop/schema-design/create-database/#before-you-start","title":"Before you start","text":"<p>Before creating a database, do the following:</p> <ul> <li>Build a MatrixOne Cluster in MatrixOne.</li> <li>Read the Database Schema Design Overview.</li> </ul>"},{"location":"MatrixOne/Develop/schema-design/create-database/#what-is-database","title":"What is database","text":"<p>Database objects in MatrixOne contain tables, views and other objects.</p>"},{"location":"MatrixOne/Develop/schema-design/create-database/#create-databases","title":"Create databases","text":"<p>To create a database, you can use the <code>CREATE DATABASE</code> statement.</p> <pre><code>CREATE DATABASE IF NOT EXISTS `modatabase`;\n</code></pre> <p>For more information on <code>CREATE DATABASE</code> statement, see CREATE DATABASE.</p>"},{"location":"MatrixOne/Develop/schema-design/create-database/#view-databases","title":"View databases","text":"<p>To view the databases in a cluster, use the <code>SHOW DATABASES</code> statement.</p> <pre><code>SHOW DATABASES;\n</code></pre> <p>The following is an example output:</p> <pre><code>+--------------------+\n| Database           |\n+--------------------+\n| mo_catalog         |\n| system             |\n| system_metrics     |\n| mysql              |\n| information_schema |\n| modatabase         |\n+--------------------+\n</code></pre>"},{"location":"MatrixOne/Develop/schema-design/create-database/#rules-in-database-creation","title":"Rules in database creation","text":"<ul> <li> <p>Follow the Database Naming Conventions and name your database meaningfully.</p> </li> <li> <p>You can create your own database using the <code>CREATE DATABASE</code> statement and change the current database using the <code>USE {databasename};</code> statement in a SQL session.</p> </li> <li> <p>Use the account user or user to create objects such as database, roles, and new users. Grant only the necessary privileges to roles and users. For more information, see Access control in MatrixOne.</p> </li> </ul>"},{"location":"MatrixOne/Develop/schema-design/create-secondary-index/","title":"Create a secondary index","text":""},{"location":"MatrixOne/Develop/schema-design/create-secondary-index/#what-is-a-secondary-index","title":"What is a secondary index","text":"<p>Indexes identified on non-primary keys and secondary indexes are also called non-clustered indexes, which are used to improve query performance and speed up data retrieval. The secondary index does not directly store table data. Still, it indexes a part of the data (such as a column), allowing the database system to locate the table rows containing specific values quickly.</p> <p>Secondary indexes can help speed up query operations, especially when querying large tables. Secondary indexes can also support sorting, grouping, and join operations, which usually require sorting or matching a portion of the data in the table.</p>"},{"location":"MatrixOne/Develop/schema-design/create-secondary-index/#before-you-start","title":"Before you start","text":"<p>Before reading this document, make sure that the following tasks are completed:</p> <ul> <li>Build a MatrixOne Cluster in MatrixOne.</li> <li>Read the Database Schema Design Overview.</li> <li>The database has been created.</li> </ul>"},{"location":"MatrixOne/Develop/schema-design/create-secondary-index/#use-secondary-index","title":"Use secondary index","text":"<p>Create a secondary index. You can create a secondary index through the<code>CREATE INDEX</code> statement, specify the column for which the index is aimed, and other indexing options.</p> <p>The syntax structure is<code>'CREATE INDEX index_name on table_name (column_name);</code></p> <p><code>index_name</code> is the name of the index, <code>table_name</code> is the name of the table on which the index is to be created, and <code>column_name</code> is the name of the column used to create the index.</p> <p>For example, if you want to create a secondary index on the <code>last_name</code> column of a table named <code>employees</code>, you can use the following SQL statement:</p> <pre><code>CREATE INDEX idx_lastname ON employees (last_name);\n</code></pre> <p>Use a secondary index: You can use a secondary index in a query statement to locate data rows. The SQL query optimizer will automatically select the appropriate index to perform the query operation for the best performance. Such as:</p> <pre><code>SELECT * FROM employees WHERE last_name = 'Smith';\n</code></pre> <p>In this example, the query optimizer will use the <code>idx_lastname</code> index to locate the data row whose <code>last_name</code> is <code>smith</code>.</p> <p>It should be noted that creating an index will increase the storage and maintenance costs of the database, and it may also affect performance when inserting, updating, and deleting data. Therefore, when creating a secondary index, it is necessary to carefully consider its impact on database performance and make the necessary optimizations and adjustments.</p>"},{"location":"MatrixOne/Develop/schema-design/create-secondary-index/#examples","title":"Examples","text":"<pre><code>CREATE TABLE users (id INT PRIMARY KEY,\nname VARCHAR(50),\nage INT,\nemail VARCHAR(50)\n);\n-- create a secondary index on the table to speed up the speed of querying users by name\nCREATE INDEX idx_users_name ON users(name);\n-- Insert data\nINSERT INTO users VALUES ('1', 'John', '30', 'john@gmail.com');\nINSERT INTO users VALUES ('2', 'Tommy', '50', 'tom@gmail.com');\nINSERT INTO users VALUES ('3', 'Ann', '33', 'ann@gmail.com');\n-- Perform the following query, the database can use the secondary index to quickly find all users with the name 'John' without having to scan the entire table\nmysql&gt; SELECT * FROM users WHERE name = 'John';\n+------+------+------+----------------+\n| id   | name | age  | email          |\n+------+------+------+----------------+\n|    1 | John |   30 | john@gmail.com |\n+------+------+------+----------------+\n1 row in set (0.00 sec)\n</code></pre>"},{"location":"MatrixOne/Develop/schema-design/create-secondary-index/#constraints","title":"Constraints","text":"<p>Currently MatrixOne only implements secondary indexes syntactically, and does not achieve performance improvements.</p>"},{"location":"MatrixOne/Develop/schema-design/create-table-as-select/","title":"Using CTAS to replicate tables","text":""},{"location":"MatrixOne/Develop/schema-design/create-table-as-select/#what-is-ctas","title":"What is CTAS","text":"<p>CTAS (Create Table As Select), is a SQL statement used to quickly create a new table (replicate table) based on an existing table or query result. When the CTAS statement is executed, a new table is created directly from the data generated by the SELECT clause, and the column structure and data type of the new table are consistent with the result set in the SELECT clause.</p>"},{"location":"MatrixOne/Develop/schema-design/create-table-as-select/#application-scenarios","title":"Application scenarios","text":"<p>CTAS has a wide range of application scenarios, including:</p> <ul> <li> <p>Data Migration: Using CTAS, you can quickly migrate data from one table to another, while changing the storage structure and distribution strategy of tables to accommodate different queries and storage needs.</p> </li> <li> <p>Data backup: CTAS can be used to create backup copies of data, which is useful for data recovery and historical data analysis.</p> </li> <li> <p>Table structure changes: When you need to modify the table structure (such as adding or removing columns, changing data types, etc.), CTAS can create a new table to reflect these changes without affecting the original table.</p> </li> <li> <p>Data Science and Machine Learning: In data science projects, CTAS can be used to prepare data sets and create clean, formatted data tables suitable for training machine learning models.</p> </li> </ul> <p>CTAS is an efficient SQL operation that dramatically improves the efficiency of data processing and analysis by simplifying data management processes and enhancing operational flexibility. However, when applying CTAS, the level of support for CTAS by the target database system and its potential impact on system performance need to be taken into account to ensure data synchronization and operational accuracy and effectiveness.</p>"},{"location":"MatrixOne/Develop/schema-design/create-table-as-select/#prepare-before-you-start","title":"Prepare before you start","text":"<p>Completed standalone deployment of MatrixOne.</p>"},{"location":"MatrixOne/Develop/schema-design/create-table-as-select/#how-to-use-ctas","title":"How to use CTAS","text":""},{"location":"MatrixOne/Develop/schema-design/create-table-as-select/#grammar","title":"Grammar","text":"<p><code>CTAS</code> statements typically take the following form:</p> <p><code>sql CREATE [TEMPORARY] TABLE table_name as select</code></p> <p>See chapter Create Table As Select for more syntax descriptions</p>"},{"location":"MatrixOne/Develop/schema-design/create-table-as-select/#cases","title":"Cases","text":"<p>Suppose we have an e-commerce platform and we want to create a data table to analyze the details of each order including order number, customer ID, order date, product ID, product quantity and product price.</p> <pre><code>CREATE TABLE orders(\norder_id int auto_increment PRIMARY KEY,\ncustomer_id int,\norder_date date,\nproduct_id int,\nquantity int,\nprice float\n);\n\nINSERT INTO orders(customer_id,order_date,product_id,quantity,price) values(30,\"2023-04-01\",5001,2,19.99);\nINSERT INTO orders(customer_id,order_date,product_id,quantity,price) values(40,\"2023-04-02\",5002,1,29.99);\nINSERT INTO orders(customer_id,order_date,product_id,quantity,price) values(30,\"2023-04-03\",5001,1,19.99);\n\nmysql&gt; select * from orders;\n+----------+-------------+------------+------------+----------+-------+\n| order_id | customer_id | order_date | product_id | quantity | price |\n+----------+-------------+------------+------------+----------+-------+\n|        1 |          30 | 2023-04-01 |       5001 |        2 | 19.99 |\n|        2 |          40 | 2023-04-02 |       5002 |        1 | 29.99 |\n|        3 |          30 | 2023-04-03 |       5001 |        1 | 19.99 |\n+----------+-------------+------------+------------+----------+-------+\n3 rows in set (0.00 sec)\n\n--For analysis purposes, we want to calculate the total price for each order and create a new table containing the order number, customer ID, order date, and total order price.\nCREATE TABLE orders_analysis AS\nSELECT order_id,\ncustomer_id,\norder_date,\nproduct_id,\nquantity,\nprice,\nCAST((quantity * price) AS float) AS total_price\nFROM orders;\n\nmysql&gt; select * from orders_analysis;\n+----------+-------------+------------+------------+----------+-------+-------------+\n| order_id | customer_id | order_date | product_id | quantity | price | total_price |\n+----------+-------------+------------+------------+----------+-------+-------------+\n|        1 |          30 | 2023-04-01 |       5001 |        2 | 19.99 |       39.98 |\n|        2 |          40 | 2023-04-02 |       5002 |        1 | 29.99 |       29.99 |\n|        3 |          30 | 2023-04-03 |       5001 |        1 | 19.99 |       19.99 |\n+----------+-------------+------------+------------+----------+-------+-------------+\n3 rows in set (0.00 sec)\n</code></pre> <p>In this example, the CTAS statement not only copies the columns in the original table, but also adds a new calculated column, total_price, which calculates the total price of the order line item by multiplying the number of products per order by the price. This gives us a new table suitable for sales analysis that can be used directly to generate reports or for further data analysis.</p> <p>This example demonstrates the power of CTAS in data conversion and preparation, which facilitates data analysis by allowing us to clean and convert data while creating new tables.</p>"},{"location":"MatrixOne/Develop/schema-design/create-table/","title":"Create a Table","text":"<p>This document introduces how to create tables using the SQL statement and the related best practices. In the previous document, you created a database named modatabase. In this document, you will create a table in the database.</p>"},{"location":"MatrixOne/Develop/schema-design/create-table/#before-you-start","title":"Before you start","text":"<p>Before reading this document, make sure that the following tasks are completed:</p> <ul> <li>Build a MatrixOne Cluster in MatrixOne.</li> <li>Read the Database Schema Design Overview.</li> <li>The database has been created.</li> </ul>"},{"location":"MatrixOne/Develop/schema-design/create-table/#what-is-a-table","title":"What is a table","text":"<p>A table is a logical object in MatrixOne cluster that is subordinate to the database. It is used to store the data.</p> <p>Tables save data records in the form of rows and columns. A table has at least one column. If you have defined n columns, each row of data has exactly the same fields as the n columns.</p>"},{"location":"MatrixOne/Develop/schema-design/create-table/#name-a-table","title":"Name a table","text":"<p>The first step for creating a table is to give your table a name. Do not use meaningless names that will cause great distress to yourself or your colleagues in the future. It is recommended that you follow your company or organization's table naming convention.</p> <p>The <code>CREATE TABLE</code> statement usually takes the following form:</p> <pre><code>CREATE TABLE {table_name} ({elements});\n</code></pre> <p>For more information on <code>CREATE TABLE</code> statement, see CREATE TABLE.</p> <p>Parameter description</p> <ul> <li> <p>{table_name}: The name of the table to be created.</p> </li> <li> <p>{elements}: A comma-separated list of table elements, such as column definitions and primary key definitions.</p> </li> </ul>"},{"location":"MatrixOne/Develop/schema-design/create-table/#define-columns","title":"Define columns","text":"<p>A column is subordinate to a table. Each table has at least one column. Columns provide a structure to a table by dividing the values in each row into small cells of a single data type.</p> <p>Column definitions typically take the following form.</p> <pre><code>{column_name} {data_type} {column_qualification}\n</code></pre> <p>Parameter description</p> <ul> <li>{column_name}: The column name.</li> <li>{data_type}: The column data type.</li> <li>{column_qualification}: Column qualifications.</li> </ul> <p>Suppose you need to create a table to store the NATION information in the modatabase database.</p> <pre><code>CREATE TABLE NATION(\nN_NATIONKEY  INTEGER NOT NULL,\nN_NAME       CHAR(25) NOT NULL,\nN_REGIONKEY  INTEGER NOT NULL,\nN_COMMENT    VARCHAR(152),\n);\n</code></pre> <p>Explanations</p> <p>The following table explains the fields in the above example:</p> Field name Data type Function Explanation N_NATIONKEY INTEGER The unique identifier of the nation All identifiers should be of type INTEGER N_NAME CHAR Ethnic name Ethnic name is char type, and no more than 25 characters N_REGIONKEY INTEGER Region code, unique identifier All identifiers should be of type INTEGER N_COMMENT VARCHAR comment information varchar type, and no more than 152 characters <p>MatrixOne supports many other column data types, including the integer types, floating-point types, date and time types. For more information, see Data Types.</p> <p>Create a complex table</p> <p>Create a new table named ORDERS.</p> <pre><code>CREATE TABLE ORDERS(\nO_ORDERKEY       BIGINT NOT NULL,\nO_CUSTKEY        INTEGER NOT NULL,\nO_ORDERSTATUS    CHAR(1) NOT NULL,\nO_TOTALPRICE     DECIMAL(15,2) NOT NULL,\nO_ORDERDATE      DATE NOT NULL,\nO_ORDERPRIORITY  CHAR(15) NOT NULL,\nO_CLERK          CHAR(15) NOT NULL,\nO_SHIPPRIORITY   INTEGER NOT NULL,\nO_COMMENT        VARCHAR(79) NOT NULL,\nPRIMARY KEY (O_ORDERKEY)\n);\n</code></pre> <p>This table contains more data types than the NATION table:</p> Field name Data type Function Explanation O_TOTALPRICE DECIMAL O_TOTALPRICE is used to mark the price The precision is 15, and the scale is 2; that is, the accuracy represents the total number of digits in the field value, and the scale means how many digits there are after the decimal point, for example decimal(5,2), that is, the precision is 5 when the ratio is 2, its value ranges from -999.99 to 999.99. decimal(6,1), when the accuracy is 6, and the scale is 1, its value range is from -99999.9 to 99999.9. O_ORDERDATE DATE Date value Date of the order"},{"location":"MatrixOne/Develop/schema-design/create-table/#select-primary-key","title":"Select primary key","text":"<p>A primary key is a column or a set of columns in a table whose values uniquely identify a row in the table.</p> <p>The primary key is defined in the <code>CREATE TABLE</code> statement. The primary key constraint requires that all constrained columns contain only <code>non-NULL</code> values.</p> <p>A table can be created without a primary key or with a non-integer primary key.</p>"},{"location":"MatrixOne/Develop/schema-design/create-table/#set-default-value","title":"Set default value","text":"<p>To set a default value on a column, use the <code>DEFAULT</code> constraint. The default value allows you to insert data without specifying a value for each column.</p> <p>You can use <code>DEFAULT</code> together with supported SQL functions to move the calculation of defaults out of the application layer, thus saving resources of the application layer. The resources consumed by the calculation do not disappear and are moved to the MatrixOne cluster. The following exemplifies setting the default value in the t1 table:</p> <pre><code>create table t1(a int default (1), b int);\ninsert into t1(b) values(1), (1);\n&gt; select * from t1;\n+------+------+\n| a    | b    |\n+------+------+\n|    1 |    1 |\n|    1 |    1 |\n+------+------+\n2 rows in set (0.01 sec)\n</code></pre> <p>The default value of a is 1.</p> <p>You can also set the default value to the time when the value was inserted; see the simple example below:</p> <pre><code>-- Create the table and set the default value to the current time\nCREATE TABLE t2 (\nid INT PRIMARY KEY,\nname VARCHAR(50),\ncreated_at DATETIME DEFAULT NOW()\n);\n\nINSERT INTO t2 (id, name) VALUES\n(1, 'John'),\n(2, 'Jane'),\n(3, 'Mike');\n\n&gt; SELECT * FROM t2;\n+------+------+---------------------+\n| id | name | created_at |\n+------+------+---------------------+\n| 1 | John | 2023-07-10 11:57:27 |\n| 2 | Jane | 2023-07-10 11:57:27 |\n| 3 | Mike | 2023-07-10 11:57:27 |\n+------+------+---------------------+\n3 rows in set (0.00 sec)\n</code></pre> <p>After executing the above insert statement, each row's <code>created_at</code> column will be automatically set to the current time.</p>"},{"location":"MatrixOne/Develop/schema-design/create-table/#prevent-duplicate-values","title":"Prevent duplicate values","text":"<p>If you need to prevent duplicate values in a column, you can use the <code>UNIQUE</code> constraint.</p> <p>For example, to make sure that <code>N_NATIONKEY</code> are unique, you can rewrite the table creation SQL statement for the NATION table like this:</p> <pre><code>CREATE TABLE NATION(\nN_NATIONKEY  INTEGER NOT NULL,\nN_NAME       CHAR(25) NOT NULL,\nN_REGIONKEY  INTEGER NOT NULL,\nN_COMMENT    VARCHAR(152),\nUNIQUE KEY (N_NATIONKEY)\n);\n</code></pre> <p>If you try to insert the same value ofN_NATIONKEY in the NATION table, an error is returned.</p>"},{"location":"MatrixOne/Develop/schema-design/create-table/#prevent-null-values","title":"Prevent null values","text":"<p>If you need to prevent null values in a column, you can use the <code>NOT NULL</code> constraint.</p> <p>Use the nation's name as an example. In addition to the unique value of the national, it is also hoped that the name of the nation cannot be empty, so here you can write the creation SQL of the NATION table as follows:</p> <pre><code>CREATE TABLE NATION(\nN_NATIONKEY  INTEGER NOT NULL,\nN_NAME       CHAR(25) NOT NULL,\nN_REGIONKEY  INTEGER NOT NULL,\nN_COMMENT    VARCHAR(152),\nPRIMARY KEY (N_NATIONKEY)\n);\n</code></pre>"},{"location":"MatrixOne/Develop/schema-design/create-table/#execute-the-show-tables-statement","title":"Execute the SHOW TABLES statement","text":"<p>To view all tables under the modatabase database, use the <code>SHOW TABLES</code> statement.</p> <pre><code>SHOW TABLES IN `modatabase`;\n</code></pre> <p>Running results:</p> <pre><code>+----------------------+\n| tables_in_modatabase |\n+----------------------+\n| nation               |\n| orders               |\n+----------------------+\n</code></pre>"},{"location":"MatrixOne/Develop/schema-design/create-table/#guidelines-to-follow-when-creating-a-table","title":"Guidelines to follow when creating a table","text":"<p>This section provides guidelines you need to follow when creating a table.</p>"},{"location":"MatrixOne/Develop/schema-design/create-table/#guidelines-to-follow-when-naming-a-table","title":"Guidelines to follow when naming a table","text":"<ul> <li> <p>Use a fully-qualified table name (for example, <code>CREATE TABLE {database_name}. {table_name}</code>). If you do not specify the database name, MatrixOne uses the current database in your SQL session. If you do not use <code>USE {databasename};</code> to specify the database in your SQL session, MatrixOne returns an error.</p> </li> <li> <p>Use meaningful table names. For example, if you need to create a NATION table, you can use names: NATION, t_user,users, or follow your company or organization's naming convention.</p> </li> <li> <p>Multiple words are separated by an underscore, and it is recommended that the name is no more than 32 characters.</p> </li> <li> <p>Create a separate DATABASE for tables of different business modules and add comments accordingly.</p> </li> </ul>"},{"location":"MatrixOne/Develop/schema-design/create-table/#guidelines-to-follow-when-defining-columns","title":"Guidelines to follow when defining columns","text":"<ul> <li> <p>Check the data types supported.</p> </li> <li> <p>Check the guidelines to follow for selecting primary keys and decide whether to use primary key columns.</p> </li> <li> <p>Check adding column constraints and decide whether to add constraints to the columns.</p> </li> <li> <p>Use meaningful column names. It is recommended that you follow your company or organization's table naming convention. If your company or organization does not have a corresponding naming convention, refer to the column naming convention.</p> </li> </ul>"},{"location":"MatrixOne/Develop/schema-design/create-table/#guidelines-to-follow-when-selecting-primary-key","title":"Guidelines to follow when selecting primary key","text":"<ul> <li>Define a primary key or unique index within the table.</li> <li>Try to select meaningful columns as primary keys.</li> <li>For performance reasons, try to avoid storing extra-wide tables. It is not recommended that the number of table fields is over 60 and that the total data size of a single row is over 64K. It is recommended to split fields with too much data length to another table.</li> <li>It is not recommended to use complex data types.</li> <li>For the fields to be joined, ensure that the data types are consistent and avoid implicit conversion.</li> <li>Avoid defining primary keys on a single monotonic data column. If you use a single monotonic data column (for example, a column with the AUTO_INCREMENT attribute) to define the primary key, it might impact the write performance.</li> </ul>"},{"location":"MatrixOne/Develop/schema-design/create-temporary-table/","title":"Create Temporary Table","text":""},{"location":"MatrixOne/Develop/schema-design/create-temporary-table/#what-is-a-temporary-table","title":"What is a temporary table","text":"<p>A temporary table is a unique one that is only visible in the current session after creation. At the end of the current session, the database automatically drops the temporary table and frees all space; you can also use the <code>DROP TABLE</code> to drop the temporary table.</p> <p>You can use temporary tables to hold some intermediate results in a session; for example, you may need to query these results multiple times, or these results are a subset of other queries.</p>"},{"location":"MatrixOne/Develop/schema-design/create-temporary-table/#advantages-of-temporary-tables","title":"Advantages of temporary tables","text":"<p>Temporary tables have several uses and advantages in database design:</p> <ul> <li> <p>Data Isolation: Temporary tables are independent in each session or transaction. This means that two temporary tables with the same name can exist in two different sessions without affecting each other.</p> </li> <li> <p>Simplify complex queries: If a query is very complex and involves multiple joins and subqueries, you can save the query results to a temporary table and then perform operations on this temporary table, thereby simplifying the query and improving performance.</p> </li> <li> <p>Improve performance: Saving data in temporary tables can significantly improve query performance for complex queries with large data sets. The access speed is fast because the temporary table is stored in memory.</p> </li> <li> <p>Protect data: Use temporary tables to avoid modification of original data. When you need to perform operations that may change the original data, you can store the data in a temporary table and then perform functions on the temporary table to avoid changing the original data by mistake.</p> </li> <li> <p>Save storage space: Temporary tables are automatically deleted when no longer needed, saving storage space.</p> </li> <li> <p>Helpful for debugging: In complex nested queries, temporary tables can store intermediate results to help debug and verify the output of each step.</p> </li> </ul> <p>Note that temporary tables are not omnipotent, they also have some limitations, such as being only accessible within the current session, and once the session ends, the temporary table disappears.</p>"},{"location":"MatrixOne/Develop/schema-design/create-temporary-table/#before-you-start","title":"Before you start","text":"<p>Before reading this document, make sure that the following tasks are completed:</p> <ul> <li>Build a MatrixOne Cluster in MatrixOne.</li> <li>Read the Database Schema Design Overview.</li> <li>The database has been created.</li> </ul>"},{"location":"MatrixOne/Develop/schema-design/create-temporary-table/#how-to-use-temporary-tables","title":"How to use temporary tables","text":"<p>The syntax for using a temporary table is the same as for a regular table, except that the TEMPORARY keyword is added before the statement that creates the table:</p> <pre><code>CREATE TEMPORARY TABLE temp_table_name (column_list);\n</code></pre> <p>You can use the same table name for temporary and regular tables without conflicts because they are in different namespaces. However, two temporary tables cannot share the same name in the session.</p> <p>Note</p> <ol> <li>Even though temporary tables can have the same name as permanent tables, it is not recommended as this may result in unexpected data loss. For example, if the connection to the database server is lost and you automatically reconnect to the server, you cannot distinguish between temporary and permanent tables. Then, you issue a <code>DROP TABLE</code> statement. This time, the permanent table may be deleted instead of the temporary table. This result is unpredictable.</li> <li>When you use the 'SHOW TABLES' command to display a list of data tables, you cannot see a list of temporary tables either.</li> </ol>"},{"location":"MatrixOne/Develop/schema-design/create-temporary-table/#example","title":"Example","text":"<pre><code>-- Create a temporary table 'temp_employees'\nCREATE TEMPORARY TABLE temp_employees (\nemployee_id INT AUTO_INCREMENT, -- auto-increment employee ID\nfirst_name VARCHAR(50), -- employee name\nlast_name VARCHAR(50), -- employee last name\nemail VARCHAR(100), -- employee email address\nPRIMARY KEY (employee_id) -- set 'employee_id' as the primary key\n);\n\n-- Insert some data into the 'temp_employees' table\nINSERT INTO temp_employees (first_name, last_name, email)\nVALUES ('John', 'Doe', 'john.doe@example.com'),\n('Jane', 'Doe', 'jane.doe@example.com'),\n('Jim', 'Smith', 'jim.smith@example.com'),\n('Jack', 'Johnson', 'jack.johnson@example.com'),\n('Jill', 'Jackson', 'jill.jackson@example.com');\n\n-- Query the temporary table to view all employee information\nSELECT * FROM temp_employees;\n+-------------+------------+-----------+--------------------------+\n| employee_id | first_name | last_name | email                    |\n+-------------+------------+-----------+--------------------------+\n|           1 | John       | Doe       | john.doe@example.com     |\n|           2 | Jane       | Doe       | jane.doe@example.com     |\n|           3 | Jim        | Smith     | jim.smith@example.com    |\n|           4 | Jack       | Johnson   | jack.johnson@example.com |\n|           5 | Jill       | Jackson   | jill.jackson@example.com |\n+-------------+------------+-----------+--------------------------+\n5 rows in set (0.01 sec)\n\n-- At the end of this session, the temporary table 'temp_employees' will be dropped automatically\n</code></pre>"},{"location":"MatrixOne/Develop/schema-design/create-view/","title":"Create View","text":""},{"location":"MatrixOne/Develop/schema-design/create-view/#what-is-view","title":"What is View","text":"<p>View is a visual, read-only virtual table based on the result set of an SQL statement, whose content is defined by the query. Unlike ordinary tables (tables that store data), views do not contain data but are only formatted displays of query results based on the base table (the table being queried). You can think of a view as a window on a table; the data in this window is reflected on other tables. When a view is queried, the database applies its SQL query to its underlying tables.</p>"},{"location":"MatrixOne/Develop/schema-design/create-view/#advantages-of-views","title":"Advantages of Views","text":"<ul> <li> <p>Simplify queries: For complex queries, you can create views to hide the complexity of the query, and you only need to select data from the view without remembering complex query statements.</p> </li> <li> <p>Add an extra layer of security: Views can restrict user's access to specific database fields and only display the fields they need to see, which can protect the security of the data.</p> </li> <li> <p>Maintain data consistency: Creating a view can maintain data consistency if multiple queries need to use the same query clause.</p> </li> <li> <p>Logical abstraction: Views can represent functional parts of base table data, summaries, and information from several tables.</p> </li> </ul> <p>But Views also have disadvantages:</p> <ul> <li> <p>Performance: Querying data from a database view can be slow, especially if the view is created based on other views.</p> </li> <li> <p>Depends on other tables: A view will be created based on the underlying tables of the database. Not all views support updating data, depending on the definition of the view and its underlying tables.</p> </li> </ul>"},{"location":"MatrixOne/Develop/schema-design/create-view/#before-you-start","title":"Before you start","text":"<p>Before reading this document, make sure that the following tasks are completed:</p> <ul> <li>Build a MatrixOne Cluster in MatrixOne.</li> <li>Read the Database Schema Design Overview.</li> <li>The database has been created.</li> </ul>"},{"location":"MatrixOne/Develop/schema-design/create-view/#how-to-use-views","title":"How to use views","text":"<p>The syntax for creating a view is as follows:</p> <pre><code>CREATE VIEW view_name AS\nSELECT column1, column2, ...\nFROM table_name\nWHERE condition;\n</code></pre> <p>After creating a view, you can query it like any other table:</p> <pre><code>SELECT column1, column2, ...\nFROM view_name;\n</code></pre>"},{"location":"MatrixOne/Develop/schema-design/create-view/#example","title":"Example","text":"<pre><code>-- Create a table called 'orders'\nCREATE TABLE orders (\norder_id INT AUTO_INCREMENT,\ncustomer_id INT,\norder_date DATE,\norder_amount DOUBLE,\nPRIMARY KEY (order_id)\n);\n\n-- Insert some data into the 'orders' table\nINSERT INTO orders (customer_id, order_date, order_amount)\nVALUES (1, '2023-01-01', 99.99),\n(1, '2023-01-03', 29.99),\n(2, '2023-01-03', 49.99),\n(3, '2023-01-05', 89.99),\n(1, '2023-01-07', 59.99),\n(2, '2023-01-07', 19.99);\n\n-- Create a view called 'order_summary' that shows the total order quantity and total order amount for each customer\nCREATE VIEW order_summary AS\nSELECT customer_id, COUNT(*) as order_count, SUM(order_amount) as total_amount\nFROM orders\nGROUP BY customer_id;\n\n--  Query view\nmysql&gt; SELECT *\nFROM order_summary;\n+-------------+-------------+--------------+\n| customer_id | order_count | total_amount |\n+-------------+-------------+--------------+\n|           1 |           3 |       189.97 |\n|           2 |           2 |        69.98 |\n|           3 |           1 |        89.99 |\n+-------------+-------------+--------------+\n3 rows in set (0.01 sec)\n</code></pre>"},{"location":"MatrixOne/Develop/schema-design/overview/","title":"Database Schema Design Overview","text":"<p>This document provides the basics of MatrixOne database schema design. This document introduces terminology related to MatrixOne databases and subsequent data read and write examples.</p>"},{"location":"MatrixOne/Develop/schema-design/overview/#key-concept-in-matrixone","title":"Key concept in MatrixOne","text":"<p>Database Schema: The database schema mentioned in this article is the same as the logical object database. It is the same as MySQL.</p>"},{"location":"MatrixOne/Develop/schema-design/overview/#database","title":"Database","text":"<p>A database in MatrixOne is a collection of objects such as tables.</p> <p>To view the default database contained by MatrixOne, ues <code>SHOW DATABASES;</code> statment.</p> <p>To create a new database, ues <code>CREATE DATABASE database_name;</code> statement.</p>"},{"location":"MatrixOne/Develop/schema-design/overview/#table","title":"Table","text":"<p>A table is a collection of related data in a database.</p> <p>Each table consists of rows and columns. Each value in a row belongs to a specific column. Each column allows only a single data type. To further qualify columns, you can add some constraints.</p>"},{"location":"MatrixOne/Develop/schema-design/overview/#index","title":"Index","text":"<p>An index is a data structure used to find data in database tables quickly. It can be seen as a 'table of contents' that contains pointers to the data of each row in the table, making it possible for queries to locate data that meets specific conditions more quickly.</p> <p>The indexes commonly used in databases include primary key indexes, secondary indexes, etc. Among them, unique indexes are used to ensure the uniqueness of specific columns or combinations of columns, ordinary indexes are used to improve query performance, and full-text indexes are used for full-text search in text data.</p> <p>There are two common types of indexes, namely:</p> <ul> <li>Primary Key: Primary key index, that is, the index that identifies the primary key column. The primary key index uniquely identifies each row of data in the table.</li> <li>Secondary index: Secondary index is the index identified on the non-primary key. The secondary index, also called a non-clustered index, is used to improve query performance and speed up data retrieval.</li> </ul>"},{"location":"MatrixOne/Develop/schema-design/overview/#other-supported-logical-objects","title":"Other supported logical objects","text":"<p>MatrixOne supports the following logical objects at the same level as table:</p> <ul> <li> <p>View: a view acts as a virtual table, whose schema is defined by the SELECT statement that creates the view.</p> </li> <li> <p>Temporary table: a table whose data is not persistent.</p> </li> </ul>"},{"location":"MatrixOne/Develop/schema-design/overview/#vector","title":"Vector","text":"<p>MatrixOne now supports storing and querying vectors. Vectors are lists of numbers typically generated by AI models such as large language models.</p> <p>For more information, see vector</p>"},{"location":"MatrixOne/Develop/schema-design/overview/#access-control","title":"Access Control","text":"<p>MatrixOne supports both user-based and role-based access control. To allow users to view, modify, or delete data, for more information, see Access control in MatrixOne.</p>"},{"location":"MatrixOne/Develop/schema-design/vector/","title":"Vectors","text":""},{"location":"MatrixOne/Develop/schema-design/vector/#what-are-vectors","title":"What Are Vectors","text":"<p>A vector is a numerical representation that encodes data content, such as text or audio, using embedding models. These vectors can be effectively stored and queried alongside relational data. Vector queries encompass tasks like locating nearest neighbors, which can significantly improve search retrievals, as seen in applications like facial recognition or enhancing Generative AI results.</p>"},{"location":"MatrixOne/Develop/schema-design/vector/#vector-database-use-cases","title":"Vector database Use Cases","text":"<p>The database's capability to manage vectors reflects its capacity to store, retrieve, and analyze vector-based data. These vectors often play a pivotal role in complex data analysis, machine learning, and mining projects. Vector databases offer a wide range of versatile use cases:</p> <ul> <li> <p>Generative AI Applications: These databases can serve as a backend for Generative AI applications, enabling them to fetch the nearest neighbor results in response to user-provided queries, enhancing the output quality and relevance.</p> </li> <li> <p>Advanced Object Recognition: They are invaluable for developing advanced object recognition platforms that discern similarities among diverse datasets. This has practical applications in plagiarism detection, facial recognition, and DNA matching.</p> </li> <li> <p>Personalized Recommendation Systems: Vector databases can be leveraged to augment recommendation systems by incorporating user preferences and choices. This leads to more accurate and tailored recommendations, improving the user experience and engagement.</p> </li> <li> <p>Anomaly Detection: Vector databases can store feature vectors representing normal behavior. Anomalies can then be detected by comparing incoming vectors to the stored ones. This is useful in cybersecurity and industrial quality control.</p> </li> </ul>"},{"location":"MatrixOne/Develop/schema-design/vector/#before-you-start","title":"Before you start","text":"<p>Before reading this document, make sure that the following tasks are completed:</p> <ul> <li>Build a MatrixOne Cluster in MatrixOne.</li> <li>Read the Database Schema Design Overview.</li> <li>The database has been created.</li> </ul>"},{"location":"MatrixOne/Develop/schema-design/vector/#how-to-use-vectors","title":"How to Use Vectors","text":"<p>The syntax for using vectors is the same as that for regular table creation, data insertion, and data querying:</p>"},{"location":"MatrixOne/Develop/schema-design/vector/#creating","title":"Creating","text":"<p>Using the following SQL statement, you can create two vector columns, one of type Float32 and the other of type Float64. You can also set the dimensions for both vector columns to 3.</p> <pre><code>create table t1(a int, b vecf32(3), c vecf64(3));\n</code></pre>"},{"location":"MatrixOne/Develop/schema-design/vector/#inserting","title":"Inserting","text":"<p>MatrixOne supports inserting vectors in two formats.</p> <p>Textual Format</p> <pre><code>insert into t1 values(1, \"[1,2,3]\", \"[4,5,6]\");\n</code></pre> <p>Binary Format</p> <p>Suppose you are working with Python NumPy arrays. In that case, you can directly insert the NumPy array into MatrixOne by performing hexadecimal encoding on the array instead of converting it into a comma-separated textual format. This approach is faster when inserting vectors with higher dimensions.</p> <pre><code>insert into t1 (a, b) values (2, cast(unhex(\"7e98b23e9e10383b2f41133f\") as blob));\n\n-- \"7e98b23e9e10383b2f41133f\" represents the hexadecimal encoding of the little-endian []float32{0.34881967, 0.0028086076, 0.5752134}\n</code></pre>"},{"location":"MatrixOne/Develop/schema-design/vector/#querying","title":"Querying","text":"<p>Vector columns can also be read in two formats.</p> <p>Textual Format</p> <pre><code>mysql&gt; select a, b from t1;\n+------+---------------------------------------+\n| a    | b                                     |\n+------+---------------------------------------+\n|    1 | [1, 2, 3]                             |\n|    2 | [0.34881967, 0.0028086076, 0.5752134] |\n+------+---------------------------------------+\n2 rows in set (0.00 sec)\n</code></pre> <p>Binary Format</p> <p>The binary format is very useful if you need to directly read the vector result set into a NumPy array with minimal conversion cost.</p> <pre><code>mysql&gt; select hex(b) from t1;\n+--------------------------+\n| hex(b)                   |\n+--------------------------+\n| 0000803f0000004000004040 |\n| 7e98b23e9e10383b2f41133f |\n+--------------------------+\n2 rows in set (0.00 sec)\n</code></pre>"},{"location":"MatrixOne/Develop/schema-design/vector/#example-top-k-queries","title":"Example - Top K Queries","text":"<p>Top K queries are a database query operation that retrieves the top K data items or records from a database. These queries find application in various scenarios, including recommendation systems, search engines, and data analysis, among other fields.</p> <p>First, we create a table named <code>t1</code> that contains vector data <code>b</code> and insert some sample data. Then, we perform top K queries using the given SQL statements for <code>l1_distance</code>, <code>l2_distance</code>, cosine similarity, and cosine distance, limiting the results to the top 5 matches.</p> <pre><code>-- Sample table 't1' with vector data 'b'\nCREATE TABLE t1 (\nid int,\nb vecf64(3)\n);\n\n-- Insert some sample data\nINSERT INTO t1 (id,b) VALUES (1, '[1,2,3]'), (2, '[4,5,6]'), (3, '[2,1,1]'), (4, '[7,8,9]'), (5, '[2,2,2]'), (6, '[3,1,2]');\n\nmysql&gt; select * from t1;\n+------+-----------+\n| id   | b         |\n+------+-----------+\n|    1 | [1, 2, 3] |\n|    2 | [4, 5, 6] |\n|    3 | [2, 1, 1] |\n|    4 | [7, 8, 9] |\n|    5 | [2, 2, 2] |\n|    6 | [3, 1, 2] |\n+------+-----------+\n6 rows in set (0.01 sec)\n\n-- Top K Queries using l1_distance\nmysql&gt; SELECT * FROM t1 ORDER BY l1_norm(b - '[3,1,2]') LIMIT 5;\n+------+-----------+\n| id   | b         |\n+------+-----------+\n|    6 | [3, 1, 2] |\n|    5 | [2, 2, 2] |\n|    3 | [2, 1, 1] |\n|    1 | [1, 2, 3] |\n|    2 | [4, 5, 6] |\n+------+-----------+\n5 rows in set (0.00 sec)\n\n-- Top K Queries using l2_distance\nmysql&gt; SELECT * FROM t1 ORDER BY l2_distance(b,'[3,1,2]') LIMIT 5;\n+------+-----------+\n| id   | b         |\n+------+-----------+\n|    6 | [3, 1, 2] |\n|    5 | [2, 2, 2] |\n|    3 | [2, 1, 1] |\n|    1 | [1, 2, 3] |\n|    2 | [4, 5, 6] |\n+------+-----------+\n5 rows in set (0.00 sec)\n\n-- Top K Queries using cosine similarity\nmysql&gt; SELECT * FROM t1 ORDER BY cosine_similarity(b, '[3,1,2]') LIMIT 5;\n+------+-----------+\n| id   | b         |\n+------+-----------+\n|    1 | [1, 2, 3] |\n|    2 | [4, 5, 6] |\n|    4 | [7, 8, 9] |\n|    5 | [2, 2, 2] |\n|    3 | [2, 1, 1] |\n+------+-----------+\n5 rows in set (0.00 sec)\n\n-- Top K Queries using cosine distance\nmysql&gt; SELECT * FROM t1 ORDER BY cosine_distance(b, '[3,1,2]') LIMIT 5;\n+------+-----------+\n| id   | b         |\n+------+-----------+\n|    6 | [3, 1, 2] |\n|    3 | [2, 1, 1] |\n|    5 | [2, 2, 2] |\n|    4 | [7, 8, 9] |\n|    2 | [4, 5, 6] |\n+------+-----------+\n5 rows in set (0.00 sec)\n</code></pre> <p>These queries demonstrate retrieving the top 5 vectors most similar to the given vector <code>[3,1,2]</code> using different distance and similarity measures. With these queries, you can find the data that best matches your target vector based on different measurement criteria.</p>"},{"location":"MatrixOne/Develop/schema-design/vector/#best-practices","title":"Best Practices","text":"<ul> <li> <p>Casting between Vectors: When casting a vector from one type to another, it is also advisable to specify the dimension. For instance:</p> <pre><code>SELECT b + CAST(\"[1,2,3]\" AS vecf32(3)) FROM t1;\n</code></pre> <p>This practice ensures accuracy and consistency in vector-type conversions.</p> </li> <li> <p>Utilizing Binary Format: To enhance overall insertion performance, consider using binary rather than textual format. Ensure the array is in little-endian format before converting it into hexadecimal encoding. Here's a sample Python code:</p> <pre><code>import binascii\n\n# 'value' is a NumPy object\ndef to_binary(value):\n    if value is None:\n        return value\n\n   # Little-endian float array\n   value = np.asarray(value, dtype='&lt;f')\n\n   if value.ndim != 1:\n       raise ValueError('expected ndim to be 1')\n\n   return binascii.b2a_hex(value)\n</code></pre> <p>This approach can significantly improve data insertion efficiency.</p> </li> </ul>"},{"location":"MatrixOne/Develop/schema-design/vector/#constriants","title":"Constriants","text":"<ul> <li>Currently, MatrixOne Vector type supports float32 and float64 types.</li> <li>Vector cannot be Primary Key or Unique Key.</li> <li>Vector maximum dimension is 65535.</li> </ul>"},{"location":"MatrixOne/Develop/schema-design/vector/#reference","title":"Reference","text":"<p>For more documentation on vector functions, see:</p> <ul> <li>inner_product()</li> <li>l1_norm()</li> <li>l2_norm()</li> <li>l2_distance()</li> <li>cosine_similarity()</li> <li>cosine_distance()</li> <li>vector_dims()</li> <li>normalize_l2()</li> <li>Arithemetic Operators</li> <li>Misc Functions</li> </ul>"},{"location":"MatrixOne/Develop/schema-design/data-integrity/auto-increment-integrity/","title":"AUTO INCREMENT Constraint","text":"<p>The Auto-Increment Constraint is a feature in MatrixOne that automatically generates a unique identifier value for a column in a table. When inserting new rows, it allows you to automatically generate an incrementing unique value for the specified auto-increment column. This feature is handy in many cases, such as for primary keys or identifiers.</p> <p>Auto-Increment Constraint Features</p> <p>The Auto-Increment Constraint simplifies the generation and management of identifiers. When using an auto-increment column, there are a few things to keep in mind:</p> <ul> <li>Auto-increment columns are usually used as primary keys, so their uniqueness should be ensured.</li> <li>The data type of the auto-increment column should be chosen appropriately based on the requirements, typically an integer type.</li> <li>The values of the auto-increment column are automatically generated when inserting new rows and cannot be manually specified.</li> <li>The auto-increment values are unique within the table and automatically increment with subsequent insert operations.</li> <li>The auto-increment value's starting value and increment step can be customized by modifying the table definition.</li> </ul> <p>Please use the auto-increment constraint to simplify the generation and management of identifiers based on the specific table structure and requirements, ensuring data integrity and uniqueness.</p>"},{"location":"MatrixOne/Develop/schema-design/data-integrity/auto-increment-integrity/#syntax","title":"Syntax","text":"<p>When creating a table, you can define an auto-increment constraint for a column. Typically, the data type of the auto-increment column is an integer type such as <code>INT</code> or <code>BIGINT</code>. To add an auto-increment constraint to a column, use the <code>AUTO_INCREMENT</code> keyword when creating the table.</p> <pre><code>CREATE TABLE table_name (\ncolumn_name data_type AUTO_INCREMENT,\n...\nPRIMARY KEY (primary_key_column)\n);\n</code></pre> <ul> <li><code>table_name</code>: The name of the table.</li> <li><code>column_name</code>: The column's name to be defined as auto-increment.</li> <li><code>data_type</code>: The data type of the column, usually an integer type such as <code>INT</code> or <code>BIGINT.</code></li> <li><code>primary_key_column</code>: The primary key column of the table.</li> </ul>"},{"location":"MatrixOne/Develop/schema-design/data-integrity/auto-increment-integrity/#example","title":"Example","text":"<p>Here is an example of creating a table with an auto-increment column:</p> <pre><code>-- Create an employees' table with an 'id' column defined as an auto-increment column. The 'id' column has a data type of 'INT' and the auto-increment constraint is specified using the 'AUTO_INCREMENT' keyword. The 'id' column is set as the table's primary key.\nCREATE TABLE employees (\nid INT AUTO_INCREMENT,\nname VARCHAR(50),\ndepartment VARCHAR(50),\nPRIMARY KEY (id)\n);\n\n-- Insert data into the table and let the auto-increment column generate unique identifier values. No values are specified for the 'id' column, and an incrementing unique value is automatically generated for the 'id' column when inserting new rows. The value of the 'id' column will automatically increment with each new row inserted.\nINSERT INTO employees (name, department)\nVALUES ('John Doe', 'HR'),\n('Jane Smith', 'Marketing'),\n('Mike Johnson', 'IT');\n\n-- The 'id' column values will be auto-incremented, generating a unique identifier value for each new row inserted.\nmysql&gt; SELECT * FROM employees;\n+------+--------------+------------+\n| id   | name         | department |\n+------+--------------+------------+\n|    1 | John Doe     | HR         |\n|    2 | Jane Smith   | Marketing  |\n|    3 | Mike Johnson | IT         |\n+------+--------------+------------+\n3 rows in set (0.01 sec)\n</code></pre>"},{"location":"MatrixOne/Develop/schema-design/data-integrity/auto-increment-integrity/#constraints","title":"Constraints","text":"<ol> <li>MatrixOne currently does not support modifying auto-increment values' starting and increment steps using the <code>ALTER TABLE</code> statement.</li> <li>In MatrixOne, only syntax supports using the system variable <code>set @@auto_increment_increment=n</code> to set the incremental step size, and only syntax supports using the system variable <code>set @@auto_increment_offset=n</code> to set the default auto-increment column initial value, but it does not take effect; currently supports setting the initial value <code>AUTO_INCREMENT=n</code> of the auto-increment column, but the step size is still 1 by default.</li> </ol>"},{"location":"MatrixOne/Develop/schema-design/data-integrity/foreign-key-constraints/","title":"FOREIGN KEY integrity constraints","text":"<p>FOREIGN KEY constraints can keep related data consistent when cross-referencing associated data across tables.</p> <p>Rules</p> <p>When defining FOREIGN KEY, the following rules need to be followed:</p> <ul> <li> <p>The parent table must already exist in the database or be a table currently being created. In the latter case, the parent table and the slave table are the same table, such a table is called a self-referential table, and this structure is called self-referential integrity.</p> </li> <li> <p>A primary key must be defined for the parent table.</p> </li> <li> <p>Primary keys cannot contain null values, but null values are allowed in foreign keys. In other words, as long as every non-null value in the foreign key appears in the specified primary key, the content of the foreign key is correct.</p> </li> <li> <p>Specify the column name or combination of column names after the table name of the parent table. This column or combination of columns must be the primary or candidate key of the primary table.</p> </li> <li> <p>The number of columns in the foreign key must be the same as the number of columns in the primary key of the parent table.</p> </li> <li> <p>The data type of the column in the foreign key must be the same as the data type of the corresponding column in the primary key of the parent table.</p> </li> <li> <p>The foreign key's value must be consistent with the primary key's value in the main table.</p> </li> </ul> <p>Foreign Key Characteristics</p> <ul> <li> <p>Foreign key self-referencing: is when a column in a table references the primary key of the same table. This design is often used to represent hierarchical or parent-child relationships, such as organizational structures, classified directories, and so on.</p> </li> <li> <p>Multi-column foreign key: This type of foreign key is when two or more columns in a table jointly reference another table's primary key. In other words, these columns together define the reference to another table. They must exist in the form of a group and need to meet the foreign key constraint simultaneously.</p> </li> <li> <p>Multi-level foreign key: This situation usually involves three or more tables, and they have a dependency relationship. A table's foreign key can be another table's primary key, and this table's foreign key can be the primary key of a third table, forming a multi-level foreign key situation.</p> </li> </ul>"},{"location":"MatrixOne/Develop/schema-design/data-integrity/foreign-key-constraints/#syntax","title":"Syntax","text":"<p>Foreign keys are defined in the child table, and the primary foreign key constraint syntax is as follows:</p> <pre><code>&gt; CREATE TABLE child_table (\n    ...,\n    foreign_key_column data_type,\n    FOREIGN KEY (foreign_key_column) REFERENCES parent_table (parent_key_column)\n    [ON DELETE reference_option]\n    [ON UPDATE reference_option]\n);\n\nreference_option:\n    RESTRICT | CASCADE | SET NULL | NO ACTION\n</code></pre> <p>Explanation</p> <p>In the above syntax structure of a foreign key constraint, the following are explanations for each parameter:</p> <ul> <li><code>child_table</code>: The name of the child table, which contains the foreign key.</li> <li><code>foreign_key_column</code>: The column's name in the child table references the parent table.</li> <li><code>data_type</code>: The data type of the foreign key column.</li> <li><code>parent_table</code>: The name of the referenced parent table.</li> <li><code>parent_key_column</code>: The name of the primary key column in the parent table establishing the relationship.</li> <li><code>[ON DELETE reference_option]</code>: An optional parameter used to specify actions to be taken when records in the parent table are deleted.<ul> <li><code>RESTRICT</code>: If related foreign key data exists in the referenced table, deletion of data in the table is not allowed. This prevents accidental deletion of related data, ensuring data consistency.</li> <li><code>CASCADE</code>: When data in the referenced table is deleted, associated foreign key data is also deleted. This is used for cascading deletion of related data to maintain data integrity.</li> <li><code>SET NULL</code>: When data in the referenced table is deleted, the value of the foreign key column is set to NULL. This is used to retain foreign key data while disconnecting it from the referenced data upon deletion.</li> <li><code>NO ACTION</code>: Indicates no action is taken; it only checks for the existence of associated data. This is similar to <code>RESTRICT</code> but may have minor differences in some databases.</li> </ul> </li> <li><code>[ON UPDATE reference_option]</code>: An optional parameter used to specify actions to be taken when records in the parent table are updated. Possible values are the same as <code>[ON DELETE reference_option]</code>.</li> </ul> <p>These parameters collectively define a foreign key constraint, ensuring the data integrity relationship between the child and parent tables.</p>"},{"location":"MatrixOne/Develop/schema-design/data-integrity/foreign-key-constraints/#examples","title":"Examples","text":""},{"location":"MatrixOne/Develop/schema-design/data-integrity/foreign-key-constraints/#example-1","title":"Example 1","text":"<pre><code>-- Create a table named t1, containing two columns: a and b. The column a is of type int and is set as the primary key, while the column b is of type varchar with a length of 5.\ncreate table t1(a int primary key, b varchar(5));\n\n-- Create a table named t2, containing three columns: a, b, and c. The column a is of type int, the column b is of type varchar with a length of 5. The column c is of type int, and is set as a foreign key, establishing a relationship with the column a in table t1.\ncreate table t2(a int ,b varchar(5), c int, foreign key(c) references t1(a));\n\n-- Insert two rows of data into table t1: (101, 'abc') and (102, 'def').\nmysql&gt; insert into t1 values(101,'abc'),(102,'def');\nQuery OK, 2 rows affected (0.01 sec)\n\n-- Insert two rows of data into table t2: (1, 'zs1', 101) and (2, 'zs2', 102), where 101 and 102 are the primary keys in table t1.\nmysql&gt; insert into t2 values(1,'zs1',101),(2,'zs2',102);\nQuery OK, 2 rows affected (0.01 sec)\n\n-- Insert a row of data into table t2: (3, 'xyz', null), where null means that this row of data has no associated primary key in column c (the foreign key column).\nmysql&gt; insert into t2 values(3,'xyz',null);\nQuery OK, 1 row affected (0.01 sec)\n\n-- Attempt to insert a row of data into table t2: (3, 'xxa', 103). However, 103 does not exist in the primary keys of table t1, so the insertion fails due to violation of the foreign key constraint.\nmysql&gt; insert into t2 values(3,'xxa',103);\nERROR 20101 (HY000): internal error: Cannot add or update a child row: a foreign key constraint fails\n</code></pre> <p>Example Explanation: In the above example, column c of t2 can only refer to the value or null value of column a in t1, so the operation of inserting row 1 and row 2 of t1 can be successfully inserted, but row 3 103 in the row is not a value in column a of t1, which violates the foreign key constraint, so the insert fails.</p>"},{"location":"MatrixOne/Develop/schema-design/data-integrity/foreign-key-constraints/#example-2-foreign-key-self-reference","title":"Example 2 - Foreign key self-reference","text":"<pre><code>-- Create a table named categories to store product categorization information.\nCREATE TABLE categories (\nid INT AUTO_INCREMENT PRIMARY KEY,\nname VARCHAR(255) NOT NULL,\nparent_id INT,\nFOREIGN KEY (parent_id) REFERENCES categories(id)\n);\n\nmysql&gt; INSERT INTO categories (name) VALUES ('Electronics'),('Books');\nQuery OK, 2 rows affected (0.01 sec)\n\nmysql&gt; INSERT INTO categories (name, parent_id) VALUES ('Laptops', 1),('Smartphones', 1),('Science Fiction', 2),('Mystery', 2);\nQuery OK, 4 rows affected (0.01 sec)\n\nmysql&gt; select * from categories;\n+------+-----------------+-----------+\n| id   | name            | parent_id |\n+------+-----------------+-----------+\n|    1 | Electronics     |      NULL |\n|    2 | Books           |      NULL |\n|    3 | Laptops         |         1 |\n|    4 | Smartphones     |         1 |\n|    5 | Science Fiction |         2 |\n|    6 | Mystery         |         2 |\n+------+-----------------+-----------+\n6 rows in set (0.01 sec)\n</code></pre> <p>Example Explanation:In the above code, we have created a table named <code>categories</code> to store the category information of the products and first inserted two top level categories <code>Electronics</code> and <code>Books</code>. Then, we added subcategories to each of the top-level categories, for example, <code>Laptops</code> and <code>Smartphones</code> are subcategories of <code>Electronics</code>, and <code>Science Fiction</code> and <code>Mystery</code> are subcategories of <code>Books</code>.</p>"},{"location":"MatrixOne/Develop/schema-design/data-integrity/foreign-key-constraints/#example-3-multi-column-foreign-key","title":"Example 3 - Multi-column foreign key","text":"<pre><code>-- Creating a \"Student\" table to store student information\nCREATE TABLE Student (\nStudentID INT, -- Student ID field, integer\nName VARCHAR(100), -- Student name field, string with a maximum length of 100\nPRIMARY KEY (StudentID) -- Setting the StudentID as the primary key of this table\n);\n\n-- Creating a \"Course\" table to store course information\nCREATE TABLE Course (\nCourseID INT, -- Course ID field, integer\nCourseName VARCHAR(100), -- Course name field, string with a maximum length of 100\nPRIMARY KEY (CourseID) -- Setting the CourseID as the primary key of this table\n);\n\n-- Creating a \"StudentCourse\" table to store student course selection information\nCREATE TABLE StudentCourse (\nStudentID INT, -- Student ID field, integer, corresponds to the StudentID field in the Student table.\nCourseID INT, -- Course ID field, integer, corresponds to the CourseID field in the Course table.\nPRIMARY KEY (StudentID, CourseID), -- Setting the combination of StudentID and CourseID as the primary key of this table\nFOREIGN KEY (StudentID) REFERENCES Student(StudentID), -- Setting the StudentID field as the foreign key, referencing the StudentID field in the Student table\nFOREIGN KEY (CourseID) REFERENCES Course(CourseID) -- Setting the CourseID field as the foreign key, referencing the CourseID field in the Course table\n);\n</code></pre> <p>Example Explanation: In the above example, there are three tables: the <code>Student</code> table, the <code>Course</code> table, and the <code>StudentCourse</code> table for recording which students have chosen which courses. In this case, the <code>Student ID</code> and <code>Course ID</code> in the course selection table can serve as foreign keys, jointly referencing the primary keys of the student table and the course table.</p>"},{"location":"MatrixOne/Develop/schema-design/data-integrity/foreign-key-constraints/#example-4-multi-level-foreign-key","title":"Example 4 - Multi-level foreign key","text":"<pre><code>-- Creating a \"Country\" table to store country information\nCREATE TABLE Country (\nCountryID INT, -- Country ID field, integer\nCountryName VARCHAR(100), -- Country name field, string with a maximum length of 100\nPRIMARY KEY (CountryID) -- Setting the CountryID as the primary key of this table\n);\n\n-- Creating a \"State\" table to store state/province information\nCREATE TABLE State (\nStateID INT, -- State/province ID field, integer\nStateName VARCHAR(100), -- State/province name field, string with a maximum length of 100\nCountryID INT, -- Country ID field, integer, corresponds to the CountryID field in the Country table.\nPRIMARY KEY (StateID), -- Setting the StateID as the primary key of this table\nFOREIGN KEY (CountryID) REFERENCES Country(CountryID) -- Setting the CountryID field as the foreign key, referencing the CountryID field in the Country table\n);\n\n-- Creating a \"City\" table to store city information\nCREATE TABLE City (\nCityID INT, -- City ID field, integer\nCityName VARCHAR(100), -- City name field, string with a maximum length of 100\nStateID INT, -- State/province ID field, integer, corresponds to the StateID field in the State table\nPRIMARY KEY (CityID), -- Setting the CityID as the primary key of this table\nFOREIGN KEY (StateID) REFERENCES State(StateID) -- Setting the StateID field as the foreign key, referencing the StateID field in the State table\n);\n</code></pre> <p>Example Explanation: In the above example, there are three tables: the <code>Country</code> table, the <code>State</code> table, and the <code>City</code> table. The <code>State</code> table has a field, <code>CountryID</code>, which is the primary key of the <code>Country</code> table and is also the foreign key of the <code>State</code> table. The <code>City</code> table has a field, <code>StateID</code>, which is the <code>State</code> table's primary key and the <code>City</code> table's foreign key. This forms a multi-level foreign key situation.</p>"},{"location":"MatrixOne/Develop/schema-design/data-integrity/not-null-constraints/","title":"NOT NULL integrity constraints","text":"<p>The NOT NULL constraint can restrict a column from containing NULL values.</p>"},{"location":"MatrixOne/Develop/schema-design/data-integrity/not-null-constraints/#syntax","title":"Syntax","text":"<pre><code>&gt; column_name data_type NOT NULL;\n</code></pre> <p>You cannot insert a <code>NULL</code> value into a column that contains a <code>NOT NULL</code> constraint or update an old value to <code>NULL</code>.</p>"},{"location":"MatrixOne/Develop/schema-design/data-integrity/not-null-constraints/#examples","title":"Examples","text":"<pre><code>create table t1(a int not null,b int);\nmysql&gt; insert into t1 values(null,1);\nERROR 3819 (HY000): constraint violation: Column 'a' cannot be null\nmysql&gt; insert into t1 values(1,null);\nQuery OK, 1 row affected (0.01 sec)\nmysql&gt; update t1 set a=null where a=1;\nERROR 3819 (HY000): constraint violation: Column 'a' cannot be null\n</code></pre> <p>Example Explanation: In the above example, because there is a non-null constraint in column a, the execution of the first insert statement will fail, the second statement satisfies the non-null constraint in column a, and there is no non-null constraint in column b so that it can be inserted successfully. The update statement fails because it triggers the non-null constraint of column a.</p>"},{"location":"MatrixOne/Develop/schema-design/data-integrity/overview-of-integrity-constraint-types/","title":"Data Integrity Constraints Overview","text":"<p>In MatrixOne, to ensure the data's correctness, integrity, and validity, restrictions are added to specific columns in the table creation statement to ensure that the information stored in the database complies with specific rules. These restrictions are called constraints. For example, if the execution result of a DML statement violates the integrity constraint, the statement will be rolled back, and an error message will be returned.</p>"},{"location":"MatrixOne/Develop/schema-design/data-integrity/overview-of-integrity-constraint-types/#integrity-constraints-types","title":"Integrity Constraints Types","text":"<p>There are various constraints in MatrixOne, and different constraints have different restrictions on database behavior. Currently, supported constraints are table-level constraints:</p> <ul> <li>NOT NULL integrity constraints:</li> </ul> <p>The non-null constraint means that the data in a specific column cannot have a null value (NULL), and the data that violates the constraint cannot be inserted or updated in the corresponding column. In MatrixOne, a table can have zero, one, or more not-null constraints.</p> <ul> <li>UNIQUE KEY integrity constraints</li> </ul> <p>The unique key constraint means that in a specific column or a combination of multiple columns stored in a table, the value of this column (or column set) in the inserted or updated data row is unique. In MatrixOne, zero, one, or more unique key constraints are allowed in a table, but unlike other relational databases, the unique key constraints of MatrixOne must also be non-empty.</p> <ul> <li> <p>PRIMARY KEY integrity constraints</p> <p>The primary key constraint means that in a specific column or a combination of multiple columns stored in a table, each data row can be uniquely determined by a specific key value and is not empty. There can only be, at most, one primary key constraint in a table.</p> </li> <li> <p>FOREIGN KEY integrity constraints</p> </li> </ul> <p>A foreign key constraint means that a column or columns in another table reference a column or a combination of columns stored in one table. The referenced table is usually called the parent table, and the referenced table is called the child table. The child table refers to the data of the corresponding column of the parent table, which can only be the data or null value of the parent table. This kind of constraint is called a foreign key constraint.</p> <ul> <li>AUTO INCREMENT constraint</li> </ul> <p>An auto-increment constraint is a feature that automatically generates a unique identifying value for a column in a table. It allows you to automatically generate an incremental unique value for a specified auto-increment column when a new row is inserted.</p>"},{"location":"MatrixOne/Develop/schema-design/data-integrity/primary-key-constraints/","title":"PRIMARY KEY integrity constraints","text":"<p>PRIMARY KEY constraints can be used to ensure that a key value uniquely identifies each data row in a table. And at most, one <code>PRIMARY KEY</code> constraint can be defined on each database table.</p> <p>Rules</p> <p>When defining PRIMARY KEY, the following rules need to be followed:</p> <ul> <li> <p>Uniqueness: The value of the primary key column must be unique; each row in the table must have a different primary key value.</p> </li> <li> <p>Non-nullness: The values \u200b\u200bof the primary key columns cannot be null, i.e., they cannot contain NULL values.</p> </li> <li> <p>Immutability: The value of the primary key column cannot be changed or updated after insertion. This is to keep the primary key unique. If you need to change the primary key value, you usually need to delete the original row first and then insert a new one with the new primary key value.</p> </li> <li> <p>Minimality: The primary key can be composed of a single column or a combination of multiple columns. Composite primary keys can uniquely identify rows, but their composite values \u200b\u200bmust be unique and cannot have repeated combinations.</p> </li> <li> <p>Referential integrity: The primary key is usually used as a reference for the foreign key (Foreign Key).</p> </li> <li> <p>Automatically create indexes: Primary key columns will automatically create indexes to improve retrieval performance.</p> </li> </ul>"},{"location":"MatrixOne/Develop/schema-design/data-integrity/primary-key-constraints/#syntax","title":"Syntax","text":"<pre><code>&gt; column_name data_type PRIMARY KEY;\n</code></pre>"},{"location":"MatrixOne/Develop/schema-design/data-integrity/primary-key-constraints/#examples","title":"Examples","text":"<pre><code>mysql&gt; create table t1(a int primary key, b int, c int, primary key(b,c));\nERROR 20301 (HY000): invalid input: more than one primary key defined\nmysql&gt; create table t2(a int, b int, c int, primary key(b,c));\nQuery OK, 0 rows affected (0.01 sec)\n\nmysql&gt; create table t3(a int, b int, c int, primary key(a));\nQuery OK, 0 rows affected (0.02 sec)\n\nmysql&gt; insert into t2 values(1,1,1);\nQuery OK, 1 row affected (0.02 sec)\n\nmysql&gt; insert into t2 values(1,1,2);\nQuery OK, 1 row affected (0.01 sec)\n\nmysql&gt; insert into t3 values(1,1,1);\nQuery OK, 1 row affected (0.01 sec)\n\nmysql&gt; insert into t3 values(2,1,1);\nQuery OK, 1 row affected (0.01 sec)\n</code></pre> <p>Example Explanation: In the above example, t1 contains two sets of primary keys, so the creation fails. t2 and t3 have only one set of primary keys so they can be created. None of the four insert statements violated the constraints, and all were executed successfully.</p>"},{"location":"MatrixOne/Develop/schema-design/data-integrity/primary-key-constraints/#constraints","title":"Constraints","text":"<p>MatrixOne does not currently support deleting <code>PRIMARY KEY</code> constraints.</p>"},{"location":"MatrixOne/Develop/schema-design/data-integrity/unique-key-constraints/","title":"UNIQUE KEY integrity constraints","text":"<p>The UNIQUE KEY constraint can be used to ensure that the values \u200b\u200bof the columns or column groups of the data rows to be inserted or updated are unique and that the values \u200b\u200bof a column or a column set in any two rows of the table are not repeated. The unique key must also be non-Null.</p>"},{"location":"MatrixOne/Develop/schema-design/data-integrity/unique-key-constraints/#syntax","title":"Syntax","text":"<pre><code>&gt; column_name data_type UNIQUE KEY;\n</code></pre>"},{"location":"MatrixOne/Develop/schema-design/data-integrity/unique-key-constraints/#examples","title":"Examples","text":"<pre><code>create table t1(a int unique key, b int, c int, unique key(b,c));\nmysql&gt; insert into t1 values(1,1,1);\nQuery OK, 1 row affected (0.01 sec)\nmysql&gt; insert into t1 values(2,1,1);\nERROR 20307 (HY000): Duplicate entry '3a15013a1501' for key '__mo_index_idx_col'\nmysql&gt; insert into t1 values(1,1,2);\nERROR 20307 (HY000): Duplicate entry '1' for key '__mo_index_idx_col'\n</code></pre> <p>Example Explanation: In the above example, there are two unique key constraints in column a and columns (b,c). When inserting data, the second insert statement violates the unique constraint of (b,c) and duplicates the value of the first insert, so the insert fails. The third insert statement violates the constraint on column a, so the insert fails.</p>"},{"location":"MatrixOne/Develop/udf/udf-python-advanced/","title":"UDF-Python-Advanced","text":"<p>This document will guide you on how to use the advanced features of UDF, including building UDF in phython files, whl packages.</p>"},{"location":"MatrixOne/Develop/udf/udf-python-advanced/#prepare-before-you-start","title":"Prepare before you start","text":""},{"location":"MatrixOne/Develop/udf/udf-python-advanced/#environment-configuration","title":"Environment Configuration","text":"<p>Before you begin, confirm that you have downloaded and installed the following software:</p> <ul> <li> <p>Verify that you have installed Python 3.8 (or plus), check the Python version using the following code to confirm that the installation was successful:</p> <pre><code>#To check with Python installation and its version\npython3 -V\n</code></pre> <p>Note</p> <p>If you have both Pyhon2 and Python3 in your operating system, you need to configure it globally for Python3 before using UDF, for example by renaming <code>/usr/bin/python</code> and then creating a python3 softlink there with the same name, an example of the relevant command:</p> <pre><code>mv /usr/bin/python /usr/bin/python.bak\nln -s /usr/local/python3/bin/python3 /usr/bin/python\n</code></pre> </li> <li> <p>Download and install the <code>protobuf</code> and <code>grpcio</code> tools and use the following code to download and install the <code>protobuf</code> and <code>grpcio</code> tools:</p> <pre><code>pip3 install protobuf\npip3 install grpcio\n</code></pre> </li> <li> <p>Verify that you have completed installing the MySQL client.</p> </li> </ul>"},{"location":"MatrixOne/Develop/udf/udf-python-advanced/#start-matrixone","title":"Start MatrixOne","text":"<ol> <li> <p>Follow the steps in the Quick Start chapter to complete the deployment of MatrixOne using mo_ctl. When the deployment is complete, execute the following command to modify the configuration of mo_ctl:</p> <pre><code>mo_ctl set_conf MO_CONF_FILE=\"\\${MO_PATH}/matrixone/etc/launch-with-python-udf-server/launch.toml\"\n</code></pre> </li> <li> <p>After modifying the configuration, you need to start (or restart) the MatrixOne service for the configuration to take effect, such as starting the MatrixOne service with mo_ctl:</p> <pre><code>mo_ctl start\n</code></pre> </li> <li> <p>Wait for the MatrixOne service to start normally (if MatrixOne is starting for the first time, background initialization will take about ten seconds before connecting after initialization is complete). Execute the following command to access the MatrixOne service:</p> <pre><code>mo_ctl connect\n</code></pre> <p>You will be taken to the mysql client command line tool after a successful connection.</p> </li> </ol>"},{"location":"MatrixOne/Develop/udf/udf-python-advanced/#import-phython-file-to-build-udf","title":"Import phython file to build UDF","text":"<p>Embedded UDFs write function bodies directly in SQL, which can inflate SQL statements and be detrimental to code maintenance if the function logic is complex. To avoid this, we can write the UDF function body in an external, separate Python file, and then create the function in MatrixOne by importing the Python file.</p> <ol> <li> <p>Prepare your python files</p> <p>You can write python code from the original SQL function body inside the <code>/opt/add_func.py</code> file:</p> <pre><code>python def add(a, b): return a + b \n</code></pre> </li> <li> <p>Creating a UDF Function</p> <p>Use the following command to create the function. We use the import keyword to import the add_func.py file under the specified path.</p> <pre><code>mysql create or replace function py_add_2(a int, b int) returns int language python import '/opt/add_func.py' -- absolute path to python file in OS handler 'add';\n</code></pre> </li> <li> <p>Call the UDF function</p> <p>Once the function has been created, the UDF function can be called with a function name + a parameter list of the matching type, for example:</p> <pre><code>select py_add_2(12345,23456);\n+-------------------------+\n|  py_add(12345, 23456)   |\n+-------------------------+\n|                   35801 |\n+-------------------------+\n1 row in set (0.02 sec)\n</code></pre> </li> </ol>"},{"location":"MatrixOne/Develop/udf/udf-python-advanced/#import-whl-package-to-build-udf","title":"Import whl package to build UDF","text":"<p>WHL file is a standard built-in package format for python distribution that allows installation packages to run without building source distributions. WHL file is essentially a ZIP file.</p>"},{"location":"MatrixOne/Develop/udf/udf-python-advanced/#preparations","title":"Preparations","text":"<ol> <li> <p>Before building the whl package, we need to install the following tools:</p> <pre><code>bash pip install setuptools wheel\n# setuptools: for building and packaging Python libraries\n# wheel: Used to generate .whl files\n</code></pre> </li> </ol>"},{"location":"MatrixOne/Develop/udf/udf-python-advanced/#build-a-whl-package","title":"Build a whl package","text":"<ol> <li> <p>Create the file and its contents according to the following file structure</p> <p>We use a simple Python project directory, <code>func_add</code> (folder names can be arbitrarily named), with the following directory structure:</p> <pre><code>func_add/\n\u251c\u2500\u2500 add_udf.py\n\u2514\u2500\u2500 setup.py\n</code></pre> <p>where <code>add_udf.py</code> is a normally executable Python code file that implements the function method body logic or can be treated as a module. The code in <code>add_udf.py</code> is for example:</p> <pre><code># function\n\ndef add(a, b):\n    return a + b\n</code></pre> <p>The <code>setup.py</code> file is used to define metadata, configuration information, etc. for the library, with code such as:</p> <pre><code># setup.py\n\nfrom setuptools import setup\n\nsetup( name=\"udf\", version=\"1.0.0\",\n# The python file name containing the function body is the module name after removing the extension name .py\npy\\_modules=\\[\"add\\_udf\"] ) \n</code></pre> </li> <li> <p>Build a whl package</p> <p>Once the project file is written in place, execute the following command inside the <code>func_add</code> directory to build the wheel package:</p> <p><code>bash  python setup.py bdist_wheel</code></p> <p>When the packaging is complete, the <code>udf-1.0.0-py3-none-any.whl</code> file is generated in the <code>func_add/dist</code> directory.</p> </li> </ol>"},{"location":"MatrixOne/Develop/udf/udf-python-advanced/#create-and-call-udf-functions","title":"Create and call UDF functions","text":"<ol> <li> <p>Creating a UDF Function</p> <p>Copy the whl package to the planned function repository directory, such as the path: <code>/opt/udf/udf-1.0.0-py3-none-any.whl</code>, and use the whl package in the create statement to create the UDF function. An example of the create statement is as follows:</p> <pre><code>create or replace function py_add_3(a int, b int)\nreturns int language python import '/opt/udf/udf-1.0.0-py3-none-any.whl' -- wheel The directory in which the package resides \nhandler 'add_udf.add'; -- Specifies the add function that calls the add_udf module in the whl package\n</code></pre> </li> <li> <p>Call the UDF function</p> <p>Once the function has been created, the UDF function can be called with a function name + a parameter list of the matching type, for example:</p> <pre><code>select py_add_3(12345,23456);\n+-------------------------+\n|  py_add(12345, 23456)   |\n+-------------------------+\n|                   35801 |\n+-------------------------+\n1 row in set (0.02 sec)\n</code></pre> </li> </ol>"},{"location":"MatrixOne/Develop/udf/udf-python-advanced/#function-vector","title":"Function Vector","text":"<p>In some scenarios, we would expect the python function to receive multiple tuples at once to improve its efficiency. As in model inference, we usually do this in a batch, where batch is the vector of the tuple, and MatrixOne provides the vector option of the function to handle this situation. We still use the py_add function as an example to show the use of the vector option.</p> <ol> <li> <p>Create a data table named grades under the udf_test library:</p> <pre><code>create table grades(chinese int,math int); </code></pre> </li> <li> <p>Insert several pieces of test data:</p> <pre><code>insert into grades values(97,100),(85,89),(79,99); </code></pre> </li> <li> <p>View the data in the following table:</p> <pre><code>select * from grades;\n+---------+------+\n| chinese | math |\n+---------+------+\n|      97 |  100 |\n|      85 |   89 |\n|      79 |   99 |\n+---------+------+\n</code></pre> </li> <li> <p>Create a UDF function by executing the following command We use <code>add.vector = True</code> to mark the python function add to receive two int lists (vectors) instead of int values:</p> <pre><code>create or replace function py_add_4(a int, b int) returns int language python as $$ def add(a, b): \\# a, b are list return \\[a\\[i] + b\\[i] for i in range(len(a))] add.vector = True $$ handler 'add'; </code></pre> </li> <li> <p>Call the UDF function</p> <p>The function is also called by its name and argument list, where the argument list we can use two integer field columns in the grades table, for example:</p> <pre><code>select py_add_4(chinese,math) as Total from grades;\n+-------+\n| Total |\n+-------+\n|   197 |\n|   174 |\n|   178 |\n+-------+\n</code></pre> <p>With the vector option, we are free to choose the processing form of the function, such as a tuple at a time, or a tuple at a time.</p> </li> </ol>"},{"location":"MatrixOne/Develop/udf/udf-python-advanced/#machine-learning-case-credit-card-fraud-detection","title":"Machine Learning Case: Credit Card Fraud Detection","text":"<p>This section describes the use of python UDF in the machine learning inference pipeline, using Credit Card Fraud Detection as an example. (The code is detailed in github-demo and includes the following files to be downloaded and written)</p>"},{"location":"MatrixOne/Develop/udf/udf-python-advanced/#environment-configuration_1","title":"Environment Configuration","text":"<p>In this section, we need to make sure that the local python environment has numpy and scikit-learn and joblib installed.</p> <pre><code>pip install numpy pip install scikit-learn pip install joblib </code></pre>"},{"location":"MatrixOne/Develop/udf/udf-python-advanced/#background-and-data","title":"Background and data","text":"<p>Credit card companies need to identify fraudulent transactions to prevent customers' credit cards from being used maliciously. (See kaggle Credit Card Fraud Detection for more details)</p> <p>The data set contains transactions made by European cardholders using credit cards in September 2013. The data format is as follows:</p> Column Name Type Meaning Time int Number of seconds elapsed between this transaction and the first transaction in the dataset V1~V28 double Features extracted using PCA (to protect user identity and sensitive features) Amount double Transaction Amount Class int 1: fraudulent transactions, 0: Non-fraudulent transactions <p>Let's take the data according to 8: 1: The scale of 1 is divided into a training set, a validation set, and a test set. Since the training process is not the focus of this article, it is not covered too much here.</p> <p>We store the test set as new data emerging from the production process in the MO. Click here to get the <code>ddl.sql</code> file, import the data table with the following statement and some of the test data:</p> <pre><code>source /your_download_path/ddl.sql </code></pre>"},{"location":"MatrixOne/Develop/udf/udf-python-advanced/#preparing-the-python-whl-package","title":"Preparing the python-whl package","text":"<ol> <li> <p>Write <code>detection.py</code>:</p> <pre><code># coding = utf-8\n# -*\\- coding:utf-8 -*-\nimport decimal import os from typing import List\n\nimport joblib import numpy as np\n\nmodel\\_path = os.path.join(os.path.dirname(os.path.abspath(__file__)), 'model\\_with\\_scaler')\n\n\ndef detect(featuresList: List\\[List\\[int]], amountList: List\\[decimal.Decimal]) -&gt; List\\[bool]: model\\_with\\_scaler = joblib.load(model\\_path)\n\n    columns_features = np.array(featuresList)\n    column_amount = np.array(amountList, dtype='float').reshape(-1, 1)\n    column_amount = model_with_scaler['amount_scaler'].transform(column_amount)\n    data = np.concatenate((columns_features, column_amount), axis=1)\n    predictions = model_with_scaler['model'].predict(data)\n    return [pred == 1 for pred in predictions.tolist()]\n\n\ndetect.vector = True \n</code></pre> </li> <li> <p>Write <code>__init__.py</code>:</p> <pre><code># coding = utf-8\n# -*- coding:utf-8 -*-\nfrom .detection import detect\n</code></pre> </li> <li> <p>Click to download the trained model <code>model_with_scaler</code></p> </li> <li> <p>Write <code>setup.py</code>:</p> <pre><code># coding = utf-8\n# -*- coding:utf-8 -*-\nfrom setuptools import setup, find_packages\n\nsetup(\n    name=\"detect\",\n    version=\"1.0.0\",\n    packages=find_packages(),\n    package_data={\n        'credit': ['model_with_scaler']\n    },\n)\n</code></pre> </li> <li> <p>Organize the above files into the following structure:</p> <pre><code>|-- demo/\n    |-- credit/\n        |-- __init__.py\n        |-- detection.py        # inference function\n|-- model_with_scaler   # model\n|-- setup.py\n</code></pre> </li> <li> <p>Go to the directory <code>demo</code> and build the wheel package detect-1.0.0-py3-none-any.whl with the following command:</p> <pre><code>python setup.py bdist_wheel </code></pre> </li> </ol>"},{"location":"MatrixOne/Develop/udf/udf-python-advanced/#fraud-detection-using-udf","title":"Fraud detection using udf","text":"<ol> <li> <p>To create a udf function:</p> <pre><code>create or replace function py_detect(features json, amount decimal) returns bool language python import 'your_code_path/detect-1.0.0-py3-none-any.whl' -- replace with handler 'credit.detect';\nhandler 'credit.detect';-- detect function under credit module\n</code></pre> </li> <li> <p>Call the udf function for fraud detection:</p> <pre><code>select id, py_detect(features, amount) as is_fraud from credit_card_transaction limit 10;\n</code></pre> <p>Output:</p> <pre><code>+---------+----------+\n| id      | is_fraud |\n+---------+----------+\n|       1 | false    |\n|       2 | false    |\n|       3 | true     |\n|       4 | false    |\n|       5 | false    |\n|       6 | false    |\n|       7 | false    |\n|       8 | true     |\n|       9 | false    |\n|      10 | false    |\n+---------+----------+\n</code></pre> </li> </ol> <p>At this point, we have completed the reasoning for the credit card fraud detection task in MO.</p> <p>As the case shows, we can easily use python UDF for tasks that SQL cannot solve. Python UDF greatly improves development efficiency by both extending the semantics of SQL and eliminating the need for us to manually program data movement and transformation.</p>"},{"location":"MatrixOne/Develop/udf/udf-python-advanced/#reference-documents","title":"Reference Documents","text":"<p>For base usage of UDF in MatrixOne, see UDF Base Usage.</p> <p>For specific parameters that MatrixOne creates for UDFs, see Creating UDFs.</p> <p>For specific parameters for MatrixOne deletion of UDFs, see Removing UDFs.</p>"},{"location":"MatrixOne/Develop/udf/udf-python/","title":"UDF-Python","text":"<p>You can write handlers for user-defined functions (UDFs) in Python. This document will guide you through how to create a simple Python UDF, including usage environment requirements, UDF creation, viewing, use, and deletion.</p>"},{"location":"MatrixOne/Develop/udf/udf-python/#prepare-before-you-start","title":"Prepare before you start","text":""},{"location":"MatrixOne/Develop/udf/udf-python/#environment-configuration","title":"Environment Configuration","text":"<p>Before you begin, confirm that you have downloaded and installed the following software:</p> <ul> <li> <p>Verify that you have installed Python 3.8 (or plus), check the Python version using the following code to confirm that the installation was successful:</p> <pre><code>#To check with Python installation and its version \npython3 -V\n</code></pre> <p>Note</p> <p>If you have both Pyhon2 and Python3 in your operating system, you need to configure it globally for Python3 before using UDF, for example by renaming <code>/usr/bin/python</code> and then creating a python3 softlink there with the same name, an example of the relevant command:</p> <pre><code>mv /usr/bin/python /usr/bin/python.bak\nln -s /usr/local/python3/bin/python3 /usr/bin/python\n</code></pre> </li> <li> <p>Download and install the <code>protobuf</code> and <code>grpcio</code> tools and use the following code to download and install the <code>protobuf</code> and <code>grpcio</code> tools:</p> <pre><code>pip3 install protobuf pip3 install grpcio \n</code></pre> </li> <li> <p>Verify that you have completed installing the MySQL client.</p> </li> </ul>"},{"location":"MatrixOne/Develop/udf/udf-python/#start-matrixone","title":"Start MatrixOne","text":"<ol> <li> <p>Follow the steps in the Quick Start chapter to complete the deployment of MatrixOne using mo_ctl. When the deployment is complete, execute the following command to modify the configuration of mo_ctl:</p> <pre><code>mo_ctl set_conf MO_CONF_FILE=\"\\${MO_PATH}/matrixone/etc/launch-with-python-udf-server/launch.toml\" </code></pre> </li> <li> <p>After modifying the configuration, you need to start (or restart) the MatrixOne service for the configuration to take effect, such as starting the MatrixOne service with mo_ctl:</p> <pre><code>mo_ctl start </code></pre> </li> <li> <p>Wait for the MatrixOne service to start normally (if MatrixOne is starting for the first time, background initialization will take about ten seconds before connecting after initialization is complete). Execute the following command to access the MatrixOne service:</p> <pre><code>mo_ctl connect \n</code></pre> <p>You will be taken to the mysql client command line tool after a successful connection.</p> </li> </ol>"},{"location":"MatrixOne/Develop/udf/udf-python/#embedded-build-udf","title":"Embedded Build UDF","text":"<p>MatrixOne supports creating UDFs in SQL by writing function bodies directly in Python code using the AS keyword. UDFs created in this form are called embedded UDFs.</p> <ol> <li> <p>Create a test library</p> <p>Before you can create a UDF function, you need to create a test library:</p> <pre><code>mysql&gt; create database udf_test; Query 0k, 1 row affected (0.02 sec) mysql&gt; use udf_test; Database changed </code></pre> </li> <li> <p>Creating a UDF Function</p> <p>Within the target library, the CREATE command can be executed in conjunction with Python statements to create UDF functions. For example, use the following SQL to define a function named py_add that defines a list of arguments to receive two arguments of type int . The function function returns the sum of the two arguments, with the specific function logic in the python code after as . Then, use the handler keyword to specify the name of the python function called:</p> <pre><code>create or replace function py_add(a int, b int) returns int language python as $$\ndef add(a, b):\nreturn a + b\n$$\nhandler 'add';\n</code></pre> <p>Note</p> <p>The current version of matrixone does not check the python syntax when creating a UDF. Users need to guarantee the correctness of the python syntax themselves, or they will get an error when executing subsequent execution functions.</p> </li> <li> <p>Call the UDF function</p> <p>Once the function has been created, the UDF function can be called with a function name + a parameter list of the matching type, for example:</p> <pre><code>select py_add(12345,23456);\n+-------------------------+\n|  py_add(12345, 23456)   |\n+-------------------------+\n|                   35801 |\n+-------------------------+\n1 row in set (0.02 sec)\n</code></pre> </li> </ol>"},{"location":"MatrixOne/Develop/udf/udf-python/#delete-udf","title":"Delete UDF","text":"<p>Created UDF functions can be removed by <code>drop function</code> command. MatrixOne fully identifies a UDF function by its <code>function name (</code>parameter list), so deleting a UDF function requires explicitly specifying the function name and parameter list, for example:</p> <pre><code>sql drop function py_add(int, int); \n</code></pre>"},{"location":"MatrixOne/Develop/udf/udf-python/#view-udf","title":"View UDF","text":"<p>Information about created UDF functions is saved in the metadata of MatrixOne. You can obtain the UDF details already in MatrixOne by querying the system table <code>mo_catalog.mo_user_defined_function</code>, for example:</p> <pre><code>mysql&gt; select * from mo_catalog.mo_user_defined_function\\G\n*************************** 1. row ***************************\nfunction_id: 9000016\nname: py_add\nowner: 0\nargs: [{\"name\": \"a\", \"type\": \"int\"}, {\"name\": \"b\", \"type\": \"int\"}]\nrettype: int\nbody: {\"handler\":\"add\",\"import\":false,\"body\":\"\\ndef add(a, b):\\n  return a + b\\n\"}\nlanguage: python\ndb: udf_test\ndefiner: root\nmodified_time: 2023-12-26 13:59:39\ncreated_time: 2023-12-26 13:59:39\ntype: FUNCTION\nsecurity_type: DEFINER\ncomment: character_set_client: utf8mb4\ncollation_connection: utf8mb4_0900_ai_ci\ndatabase_collation: utf8mb4_0900_ai_ci\n</code></pre>"},{"location":"MatrixOne/Develop/udf/udf-python/#reference-documents","title":"Reference Documents","text":"<p>For advanced usage of UDF in MatrixOne, see UDF Advanced Usage.</p> <p>For specific parameters that MatrixOne creates for UDFs, see Creating UDFs.</p> <p>For specific parameters for MatrixOne deletion of UDFs, see Removing UDFs.</p>"},{"location":"MatrixOne/FAQs/deployment-faqs/","title":"Deployment Frequently Asked Questions","text":""},{"location":"MatrixOne/FAQs/deployment-faqs/#environmentally-relevant","title":"Environmentally relevant","text":"<p>What OS version is required to deploy MatrixOne?</p> <ul> <li>MatrixOne currently supports the operating systems in the table.</li> </ul> Linux OS Version Debian 11.0 or later Ubuntu LTS 20.04 or later Red Hat Enterprise Linux 9.0 or later releases Oracle Enterprise Linux 9.0 or later releases CentOS 7.0 or later releases <p>For Linux systems with lower kernels, it is recommended to deploy with a binary package built on musl libc if you are using a binary package installation deployment, as detailed in the recommended installation environment chapter in the Standalone Deployment Matrixone overview.</p> <ul> <li>MatrixOne also supports the macOS operating system and is currently only recommended to run in test and development environments.</li> </ul> macOS \u7248\u672c macOS Monterey 12.3 or later <ul> <li>As a domestic database, MatrixOne is currently compatible with and supported by the following domestic operating systems:</li> </ul> OS OS Version CPU Memory OpenCloudOS v8.0 / v9.0 x86 CPU;4 Core 16 GB openEuler 20.03 x86 / ARM CPU;4 Core 16 GB TencentOS Server v2.4 / v3.1 x86 CPU;4 Core 16 GB UOS V20 ARM CPU;4 Core 16 GB KylinOS V10 ARM CPU;4 Core 16 GB KylinSEC v3.4 x86 / ARM CPU;4 Core 16 GB <p>Can I use MatrixOne properly under Red Hat systems like CentOS 7?</p> <p>MatrixOne does not have strict operating system requirements and supports use under CentOS 7, but CentOS 7 was discontinued at the end of June 24 and a newer version of the operating system is recommended.</p> <p>Does MatrixOne support deployment in homegrown environments?</p> <p>For the domestic operating system and chip, the chip we have adapted to Pang Peng and Haiguang, the operating system has adapted to Galactic Kirin, Euler, Kirin Shinan.</p> <p>Where can I deploy MatrixOne?</p> <p>MatrixOne can be deployed on premise, in a public cloud, in a private cloud, or on kubernetes.</p> <p>Does MatrixOne support distributed deployment on Aliyun ecs servers?</p> <p>Currently K8S based on ECS or Aliyun ACK is required for distributed deployment.</p> <p>Do cluster deployments only support K8s? Can you physically distribute local deployment?</p> <p>If there is no k8s and minio environment ahead of time. Our installation tools come with k8s and minio and can also be deployed on a physical machine with one click.</p> <ul> <li>Does the current non-k8s version support master-slave configuration?</li> </ul> <p>MatrixOne does not currently support a non-k8s version of the master-slave configuration and will do so later.</p> <p>Can a production environment only be deployed in k8s mode?</p> <p>Yes, for distributed stability and scalability, we recommend that production systems be deployed with k8s. If you don't have k8s out of the box, you can deploy with managed k8s to reduce complexity.</p>"},{"location":"MatrixOne/FAQs/deployment-faqs/#hardware-related","title":"Hardware related","text":"<p>What are MatrixOne's configuration requirements for deploying hardware?</p> <p>In standalone installations, MatrixOne can currently run on 64-bit universal hardware server platforms with Intel x86-64 and ARM architectures.</p> <p>Server hardware configuration requirements and recommendations for development, test, and production environments are as follows:</p> <ul> <li>Development and Test Environment Requirements</li> </ul> CPU Memory Local Storage 4 core+ 16 GB+ SSD/HDD 200 GB+ <p>Macbook M1/M2 with ARM architecture is also suitable for development environments.</p> <ul> <li>Production environment requirements</li> </ul> CPU Memory Local Storage 16 core+ 64 GB+ SSD/HDD 500 GB+ <p>In the case of distributed installations, MatrixOne can refer to the Cluster Topology Planning Overview for server hardware configuration requirements and recommendations for development, test, and production environments.</p>"},{"location":"MatrixOne/FAQs/deployment-faqs/#configuration-related","title":"Configuration related","text":"<p>Do you need to change any settings during installation?</p> <p>Normally, you don't need to change any settings when you install. The <code>launch.toml</code> default setting makes it entirely possible to run MatrixOne directly. But if you need to customize the listening port, IP address, path to store data files, you can modify the corresponding <code>cn.toml</code>, <code>tn.toml</code>, or <code>log.toml</code>. Details of parameter configuration within these files can be found in the General Parameters Configuration</p> <p>What should I do when I want to save MatrixOne's data directory to a file directory that I specify?</p> <p>When you start MatrixOne with Docker, you can mount the data directory you specified to the Docker container, see Mounting directories to the Docker container.</p> <p>When you compile and launch MatrixOne using source or binary packages, you can do this by modifying the default data directory path in the configuration file: open the MatrixOne configuration file directory <code>matrixone/etc/launch-with-proxy</code>, modify the configuration parameter <code>data-dir = \"</code>./mo-data\" in the three files <code>cn.toml</code>, <code>tn.toml</code> and <code>log.toml</code> to <code>data-dir = \"your_local_path\"</code>, save it and restart MatrixOne.</p>"},{"location":"MatrixOne/FAQs/deployment-faqs/#tools-related","title":"Tools related","text":"<p>Can binary package installations be managed via mo_ctl?</p> <p>By setting the path to the MO_PATH configuration binary package, you can use mo_ctl to manage it.</p> <p>Does the mo_ctl tool support source deployment upgrades</p> <p>The upgrade command allows you to specify the corresponding version or commitid for fine-grained upgrades, setting the current version MO_PATH with care, and the compilation environment.</p> <p>Does the mo_ctl tool support deployment of matrixOne clusters</p> <p>Not currently supported, later consider joining cluster deployment and management.</p> <p>helm install operator, how about seeing if the installation worked?</p> <p>Use helm list -A to see.</p> <p>How do operators deployed in helm mode uninstall?</p> <p>Uninstall by specifying a name and namespace through the helm uninstall command.</p> <p>Is the version of operator required for deployment?</p> <p>operator is used to manage the matrixOne cluster, so the operator version is as consistent as possible with the version of the cluster. For example, if we have a cluster with version 1.0.0-rc2 installed, the operator version corresponding to the earlier installation should also be 1.0.0-rc2. If a consistent version of operator is not found, a similar version of operator is recommended.</p>"},{"location":"MatrixOne/FAQs/deployment-faqs/#error-reporting-related","title":"Error reporting related","text":"<p>When I finish installing the MySQL client, opening a terminal and running <code>mysql</code> generates an error <code>command not found: mysql</code>, how do i fix this?</p> <p>This error report is the reason the environment variable is not set. Open a new terminal and execute the following command:</p> Linux EnvironmentMacOS Environment <pre><code>echo 'export PATH=\"/path/to/mysql/bin:$PATH\"' &gt;&gt; ~/.bash_profile\nsource ~/.bash_profile\n</code></pre> <p>Replace `/path/to/mysql/bin' in the above code with the installation path for MySQL on your system. Typically it is '/usr/local/mysql/bin', if you are unsure of the MySQL installation path you can find it using the following command:</p> <pre><code>whereis mysql\n</code></pre> <p>After macOS 10, use 'zsh' as the default 'shell'. Use zsh here as an example, and if you use another 'shell' you can convert it yourself.</p> <pre><code>echo export PATH=/path/to/mysql/bin:$PATH &gt;&gt; ~/.zshrc\nsource ~/.zshrc\n</code></pre> <p>Replace `/path/to/mysql/bin' in the above code with the installation path for MySQL on your system. Typically it is '/usr/local/mysql/bin', if you are unsure of the MySQL installation path you can find it using the following command:</p> <pre><code>whereis mysql\n</code></pre> <p>When I install and choose to install build MatrixOne from source, I get the following error or build failure indication. How do I continue?</p> <p>Error: <code>Get \"https://proxy.golang.org/...\": dial tcp 142.251.43.17:443: i/o timeout</code></p> <p>Because MatrixOne requires many GO libraries as dependencies, it downloads the GO libraries at the same time as it builds. The error reported above is a download timeout error, mainly due to network issues.</p> <ul> <li> <p>If you're using a mainland Chinese network, you need to set up your GO environment to a Chinese mirror site to speed up the download of the GO library.</p> </li> <li> <p>If you check your GO environment via <code>go env</code>, you may see <code>GOPROXY=\"https://proxy.golang.org,direct\"</code>, then you need to set the following:</p> </li> </ul> <pre><code>go env -w GOPROXY=https://goproxy.cn,direct \n</code></pre> <p>Once setup is complete, <code>make build</code> should be completed soon.</p> <p>When I test MatrixOne via MO-Tester, how do I resolve the <code>too many open files</code> error I generate?</p> <p>To test MatrixOne, MO-Tester quickly opens and closes many SQL files, and soon reaches the maximum open file limit for Linux and MacOS systems, which is what causes the <code>too many open files</code> error.</p> <ul> <li>For MacOS systems, you can set limits on opening files with a simple command:</li> </ul> <pre><code>ulimit -n 65536 \n</code></pre> <ul> <li>For Linux systems, refer to the detailed guide to set the ulimit to 100,000.</li> </ul> <p>Once setup is complete, there will be no <code>too many open files</code> error.</p> <p>My PC is an M1 chip and when I run an SSB test I find that I can't compile successfully ssb-dbgen</p> <p>PCs with hardware configured as M1 chips also need to be configured as follows before compiling <code>ssb-dbgen</code>:</p> <ol> <li> <p>Download and install GCC11.</p> </li> <li> <p>Enter the command to confirm that gcc-11 succeeded:</p> <p><code>gcc-11 -v</code></p> <p>The following results indicate success:</p> <pre><code>Using built-in specs.\nCOLLECT_GCC=gcc-11\nCOLLECT_LTO_WRAPPER=/opt/homebrew/Cellar/gcc@11/11.3.0/bin/../libexec/gcc/aarch64-apple-darwin21/11/lto-wrapper\nTarget: aarch64-apple-darwin21\nConfigured with: ../configure --prefix=/opt/homebrew/opt/gcc@11 --libdir=/opt/homebrew/opt/gcc@11/lib/gcc/11 --disable-nls --enable-checking=release --with-gcc-major-version-only --enable-languages=c,c++,objc,obj-c++,fortran --program-suffix=-11 --with-gmp=/opt/homebrew/opt/gmp --with-mpfr=/opt/homebrew/opt/mpfr --with-mpc=/opt/homebrew/opt/libmpc --with-isl=/opt/homebrew/opt/isl --with-zstd=/opt/homebrew/opt/zstd --with-pkgversion='Homebrew GCC 11.3.0' --with-bugurl=https://github.com/Homebrew/homebrew-core/issues --build=aarch64-apple-darwin21 --with-system-zlib --with-sysroot=/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk\nThread model: posix\nSupported LTO compression algorithms: zlib zstd\ngcc version 11.3.0 (Homebrew GCC 11.3.0)\n</code></pre> </li> <li> <p>Manually modify the bm_utils.c configuration file in the ssb-dbgen directory:</p> <ul> <li> <p>Modify <code>#include &lt;malloc.h&gt;</code> on line 41 to <code>#include &lt;sys/malloc.h&gt;</code></p> </li> <li> <p>Change <code>open(fullpath, ((*mode == 'r')?O_RDONLY:O_WRONLY)|O_CREAT|O_LARGEFILE,0644);</code> in line 398 to <code>open(fullpath, ((*mode == 'r')?O_RDONLY:O_WRONLY)|O_CREAT,0644);</code> to <code>open(fullpath, ((*mode == 'r')? WRONLY)|O_CREAT,0644);</code></p> </li> </ul> </li> <li> <p>Manually modify the varsub.c configuration file in the ssb-dbgen directory:</p> <ul> <li>Modify <code>#include &lt;malloc.h&gt;</code> on line 5 to <code>#include &lt;sys/malloc.h&gt;</code></li> </ul> </li> <li> <p>Manually modify the makefile configuration file in the ssb-dbgen directory:</p> <ul> <li>Modify <code>CC = gcc</code> on line 5 to <code>CC = gcc-11</code></li> </ul> </li> <li> <p>Go to the ssb-dbgen directory again and compile:</p> <pre><code>cd ssb-dbgen make \n</code></pre> </li> <li> <p>View the ssb-dbgen directory and generate the dbgen executable, indicating that the compilation was successful.</p> </li> </ol> <p>I built MatrixOne in the main branch first, now switch to another version before building panic</p> <p>This problem can occur when MatrixOne version switching involves versions prior to 0.8.0 and the <code>make build</code> command is used. This is an incompatibility issue caused by the MatrixOne datastore format upgrade, but will continue to be compatible since version 0.8.0.</p> <p>Note</p> <p>In this case, we strongly recommend that you reinstall the latest stable version of MatrixOne for subsequent data compatibility, and recommend using the mo_ctl tool for quick build and startup.</p> <p>Specifically, prior to MatrixOne version 0.8.0, after performing <code>make build</code>, a data directory file named mo-data was automatically generated to hold the data. If you switch to another branch and do <code>make build</code> again, the mo-data data directory is not automatically deleted, which may cause a panic situation due to incompatible data formats.</p> <p>To fix this, you need to clean up the mo-data data directory (that is, execute the <code>rm -rf mo-data</code> command) before rebuilding MatrixOne.</p> <p>The following reference code example uses an earlier build process:</p> <pre><code>[root ~]# cd matrixone // Go to matrixone file directory \n[root ~]# git branch // View current branch * 0.8.0 \n[root ~]# make build // Build matrixone \n... // Omit build process code here. If you want to switch to a different version at this point, for example version 0.7.0 [root ~]# git checkout 0.7.0 // switch to version 0.7.0 \n[root ~]# rm -rf mo-data // clean up the data directory \n[root ~]# make build // build matrixone ... // omit the build process code here \n</code></pre> <p>I connect proxy with CN tag and login to MatrixOne cluster with password validation error</p> <ul> <li> <p>Cause of problem: The connection string was incorrectly written. Connecting to a MatrixOne cluster via a MySQL client supports extending the user name field by adding <code>?</code>,<code>?</code> after the user name You can then follow the CN group label with <code>=</code> between the key and value of the CN group label and comma <code>,</code> between multiple key-values.</p> </li> <li> <p>Workaround: Refer to the following example.</p> </li> </ul> <p>Suppose in your MatrixOne <code>mo.yaml</code> configuration file, the configuration of the CN group looks like this:</p> <pre><code>## Only part of the code is shown\n...\n- cacheVolume:\nsize: 100Gi\ncnLabels:\n- key: workload\nvalues:\n- bk\n...\n</code></pre> <p>Connecting to the MatrixOne cluster via a MySQL client, you can use the following command example: <code>mysql -u root?workload=bk -p111 -h 10.206.16.10 -P 31429</code>. where <code>workload=bk</code> is the CN tag, connected using <code>=</code>.</p> <p>There is a pod called job-bucket that keeps getting up when installing the latest operator. How should I troubleshoot it?</p> <p>Can see if there is no secret. It may be that the minio connection information is not configured to connect to the minio.</p> <p>Similarly, the command to export data using the <code>mo-dump</code> tool, you can refer to the example using the following command: <code>mo-dump -u \"dump?workload=bk\" -h 10.206.16.10 -P 31429 -db tpch_10g &gt; /tmp/mo/tpch_10g.sql</code>.</p>"},{"location":"MatrixOne/FAQs/product-faqs/","title":"Product Frequently Asked Questions","text":""},{"location":"MatrixOne/FAQs/product-faqs/#product-related","title":"Product related","text":"<p>What is MatrixOne?</p> <p>MatrixOne is a future-proof, hyperconverged, heterogeneous cloud-native database that supports hybrid workloads such as transaction/analysis/streaming with a hyperconverged data engine and cross-room/multi-site/cloud-side collaboration with a heterogeneous cloud-native architecture. MatrixOne wanted to simplify the costs of data system development and operations, reduce data fragmentation between complex systems, and break down the boundaries of data convergence. To learn more about MatrixOne, you can browse the Introduction to MatrixOne.</p> <p>Is MatrixOne developed based on MySQL or another database?</p> <p>MatrixOne is a new database built from scratch. MatrixOne is compatible with some of MySQL's syntax and semantics, and will produce more semantics in the future than MySQL, so we can make it a more powerful hyper-converged database. For compatibility with MySQL, see MySQL compatibility.</p> <p>What programming language was MatrixOne developed in?</p> <p>MatrixOne currently primarily uses Golang as the primary programming language.</p> <p>What programming languages are currently supported for connecting to MatrixOne?</p> <p>MatrixOne supports Java, Python, Golang languages, and ORM connections. Other languages can also connect MO as MySQL.</p> <p>What compression algorithm does MatrixOne column storage use?</p> <p>MatrixOne column storage currently uses the LZ4 compression algorithm and does not support modification via configuration.</p> <p>Can I upgrade the lower version to the latest version?</p> <p>Both MatrixOne 0.8.0 and above can be upgraded directly from a lower version to the latest version using <code>mo_ctl upgrade latest</code>. You can refer to the mo_ctl tool. Versions prior to 0.8.0 are recommended to back up data, reload and import if required for upgrades.</p> <p>Is MatrixOne stable now? Which version is recommended?</p> <p>MatrixOne is now available in version 1.2.3. We've done a lot of optimization work on stability, and it's ready to be used in the production business.</p> <p>Is there a cloud version of MatrixOne? Want a quick test to see.</p> <p>There is. Now mo cloud has started public testing. Details View MatrixOne Cloud Documentation</p>"},{"location":"MatrixOne/FAQs/product-faqs/#architecture-related","title":"Architecture related","text":"<p>Are MatrixOne permissions also designed based on the RBAC model? Is it possible to grant permissions directly to the user?</p> <p>MatrixOne's rights management is designed and implemented using a combination of role-based access control (RBAC) and autonomous access control (DAC) security models. MatrixOne does not support granting rights directly to users and requires authorization through roles.</p> <p>How does a highly available architecture work?</p> <p>There is currently no highly available architecture for the standalone version of MatrixOne, and the highly available architecture for the master-slave version is still being designed. Distributed versions are inherently highly available, and both k8s and s3 are inherently highly available architectures. MatrixOne's nodes cn and tn are stateless, hang can be pulled up at any time, the log service is stateful, its 3 nodes are a distributed architecture that provides a raft group, hang 1 is okay, keep running, hang 2 systems will be unavailable.</p> <p>Does the current tn node of the k8s cluster node support expansion?</p> <p>Scaling is not yet supported by the current tn node of MatrixOne.</p> <p>What are the various components used for? Minimize how many instances do you need to deploy? Can you support non-stop non-sensual expansion later?</p> <p>The MatrixOne core has 4 components, proxy,cn,tn,log service. cn is the stateless compute node, tn is the transaction node, and log service is the log of the transaction, equivalent to WAL. proxy is used for load balancing and resource group management. It can be done in 3 physical/virtual machines if they are all deployed in a hybrid. Senseless expansion is possible, mo is memory separated, and the expansion of storage is the expansion of s3. The calculated expansion is cn, itself based on k8s, cn stateless, and a container that can be expanded quickly.</p> <p>How is resource isolation achieved between multiple tenants?</p> <p>The resource isolation core of MatrixOne is that the ACCOUNT can correspond to the resource group of the CN Set, or the tenant isolation can be considered the container isolation of the CN. In addition to different resource groups that can be assigned by multi-tenants, CN resource groups can be further assigned within a single tenant based on business type for more granular control. For a complete description of resource isolation, see Load and Tenant Isolation</p> <p>Can the table engine in MySQL be migrated directly? Is it compatible with engines like InnoDB?</p> <p>MatrixOne does not support MySQL's InnoDB, MyISAM and other engines, but can use MySQL's statements directly. MatrixOne ignores these engines, and there is only one storage engine in MatrixOne, TAE, which has been developed completely independently and can be applied to all kinds of scenarios in a friendly manner without using ENGINE=XXX to replace the engine.</p>"},{"location":"MatrixOne/FAQs/product-faqs/#functionally-related","title":"Functionally related","text":"<p>What applications does MatrxOne support?</p> <p>MatrixOne provides users with the ultimate HTAP service. MatrixOne can be used in enterprise data centers, big data analytics and other scenarios.</p> <p>Which database is MatrixOne compatible with?</p> <p>MatrixOne remains highly compatible with MySQL 8.0 in usage, including SQL syntax, transfer protocols, operators and functions, and more. A list of differences with MySQL 8.0 compatibility can be found in the MySQL compatibility list.</p> <p>How about MySQL compatibility, is it used directly as MySQL in BI?</p> <p>MatrixOne is highly compatible with MySQL 8.0 and is generally consistent with MySQL in terms of communication protocols, SQL syntax, connectivity tools, and development mode. Many administrative and ecological tools can also reuse MySQL's tools. BI can be used directly as MySQL, please refer to FineBI for visual reports, Yonghong BI for visual reports and Superset for visual monitoring.</p>"},{"location":"MatrixOne/FAQs/product-faqs/#database-comparison-related","title":"Database Comparison Related","text":"<p>How does MatrixOne stand-alone and MySQL performance compare?</p> <p>The standalone version of MatrixOne slightly outperforms MySQL in TP performance, but far outperforms MySQL in Load, Stream Write, Analyze queries.</p> <p>What is the difference with HTAP database TiDB?</p> <p>MatrixOne is not the same architecture as TiDB. MatrixOne is memory-separated, a cloud-based shared storage architecture with data in one place, one copy, and HTAP implemented with one engine. And TiDB is Share nothing architecture, data to be fragmented, TiKV to do TP, TiFlash to do AP, using two engines with an ETL to do the HTAP, data to be stored in two copies.</p>"},{"location":"MatrixOne/FAQs/product-faqs/#other","title":"Other","text":"<ul> <li>Can I participate in contributing to the MatrixOne project?</li> </ul> <p>MatrixOne is an open source project entirely on Github and all developers are welcome to contribute. See our Contribution Guide for more information.</p> <ul> <li>Is there an alternative to official documentation for MatrixOne knowledge acquisition?</li> </ul> <p>Currently, MatrixOne documentation is the most important and timely way to gain knowledge about MatrixOne. In addition, we have a number of technology communities at Slack and WeChat. For any requests, please contact opensource@matrixorigin.io.</p>"},{"location":"MatrixOne/FAQs/sql-faqs/","title":"SQL Frequently Asked Questions","text":""},{"location":"MatrixOne/FAQs/sql-faqs/#basic-function-related","title":"Basic function related","text":"<p>Is MatrixOne case sensitive to identifiers?</p> <p>MatrixOne is case-insensitive by default for identifiers and supports case-sensitive support with the lower_case_table_names parameter, which is described in more detail in Case Sensitive Support</p> <p>What SQL statements does MatrixOne support?</p> <p>SQL statements currently supported by MatrixOne can refer to SQL statement classification.</p> <p>What data types does MatrixOne support?</p> <p>MatrixOne currently supports common integer, floating point, string, time date, boolean, enumeration, binary, JSON types, see Data Type Overview.</p> <p>What types of character sets does MatrixOne support?</p> <p>MatrixOne supports the UTF-8 character set by default and currently supports only UTF-8.</p> <p>What constraints and indexes does MatrixOne support?</p> <p>MatrixOne currently supports Primary Key, Unique Key, Not Null, Foreign Key, Auto Increment constraint, and Secondary Index. Secondary indexes currently only implement syntax support, not acceleration. In addition, MatrixOne provides a sort key (Cluster by) for orphaned key tables, which helps us sort the columns we need to query ahead of time and accelerate the query.</p> <p>What query types does MatrixOne support?</p> <p>MatrixOne supports most common SQL queries:</p> <p>Basic Query: Supports common grouping, deduplication, filtering, sorting, qualifying, regular expression and other basic query capabilities.</p> <p>Advanced Query: Supports advanced query capabilities such as views, subqueries, joins, combinations, common table expressions (CTEs), window functions, and Prepare preprocessing.</p> <p>Aggregate Functions: Supports common AVG, COUNT, MIN, MAX, SUM and other aggregate functions.</p> <p>System Functions and Operators: Supports common strings, date and time, mathematical functions and common operators.</p> <p>What are the reserved keywords for MatrixOne?</p> <p>A list of reserved keywords for MatrixOne can be found in Keywords.</p> <p>When using the reserved keyword as an identifier, it must be wrapped in back quotation marks, otherwise an error will occur. When using non-reserved keywords as identifiers, you can use them directly without wrapping them in back quotes.</p> <p>Materialized views are not supported by the MatrixOne branch?</p> <p>MatrixOne does not currently support materialized views, and with current AP performance support, direct analysis can also result in a higher analysis experience. The materialized view feature is also already in MatrixOne's Roadmap. If you have a high rigidity need for a materialized view, feel free to mention Issue to describe your scenario:https://github.com/matrixorigin/matrixone/issues</p> <p>The MatrixOne branch does not support Geometry?</p> <p>Not yet supported, will be supported later.</p> <p>Are functions and keywords in MatrixOne case sensitive?</p> <p>Case-insensitive. In MatrixOne, there is only one case where you need to be case sensitive: if you create tables and properties with names in ``,`` you need to be case sensitive. query this table name or attribute name, then the table name and attribute name also need to be included in .</p> <p>Does MatrixOne support transactions? What is the supported transaction isolation level?</p> <p>MatrixOne supports transaction capabilities of ACID (atomicity, consistency, isolation, persistence), supports pessimistic and optimistic transactions, and uses pessimistic transactions by default. Read Committed isolation levels are used when pessimistic transactions are used, and Snapshot Isolation isolation levels are used when switching to optimistic transactions.</p> <p>Are functions and keywords in MatrixOne case sensitive?</p> <p>Case-insensitive. In MatrixOne, there is only one case where you need to be case sensitive: if you create tables and properties with names in ``,`` you need to be case sensitive. query this table name or attribute name, then the table name and attribute name also need to be included in .</p>"},{"location":"MatrixOne/FAQs/sql-faqs/#data-importexport-related","title":"Data Import/Export Related","text":"<p>How do I import data into MatrixOne?</p> <p>MatrixOne supports the same <code>INSERT</code> data insertion statements as MySQL, real-time data writing via <code>INSERT</code>, and offline bulk import statements for <code>LOAD DATA</code>.</p> <p>How do I export data from MatrixOne to a file?</p> <p>In MatrixOne, you can use the binary tool <code>mo-dump</code> to export data to SQL or csv files, or <code>SELECT INTO to</code> export <code>csv</code> files.</p> <p>How to export only table structure via mo-dump tool?</p> <p>You can specify not to export data by adding the -no-data parameter to the export command.</p> <p>Some fields are missing from a json object imported using load data, does the import report an error?</p> <p>An error is reported, and in import json, there are more fields than in the table, which can be imported normally, but the extra fields are ignored, and if there are fewer, they cannot be imported.</p> <p>Is it possible to write relative paths to import files while performing source import?</p> <p>Yes, but to prevent errors relative to your current path using the mysql client, or to recommend writing the full path, also note the file permissions issue.</p> <p>Is it possible to optimize when importing a large file using the load data command?</p> <p>You can turn on parallel imports by specifying PARALLEL to true when importing. For example, for a large file of 2 Gs, two threads are used to load it, and the second thread is split-positioned to the 1G position and then read back and loaded. This allows two threads to read large files simultaneously, each reading 1G of data. You can also slice the data file yourself.</p> <p>Is there a transaction for load data import?</p> <p>All load statements are transactional.</p> <p>source Do triggers and stored procedures involved when importing sql take effect?</p> <p>Currently if there are incompatible data types, triggers, functions or stored procedures in sql, you still need to modify them manually, otherwise execution will report an error.</p> <p>Does mo-dump support batch export of multiple databases?</p> <p>Exporting a backup of a single database is currently only supported. If you have multiple databases to back up, you need to manually run mo-dump multiple times.</p> <p>Does MatrixOne support importing data from Minio?</p> <p>Yes, the load data command supports importing data from local files, S3 object storage services, and S3 compatible object storage services into matrixone, while Minio is also based on the S3 protocol, so it is also supported, see Local Object Storage for details</p> <p>When MatrixOne imports and exports data, if there is an encoding problem that causes the data to be scrambled, how do we generally solve it</p> <p>Since matrixone only supports UTF8 as an encoding by default and cannot be changed, if there is a garbled code when importing data, we can't solve it by modifying the character set of the database and tables. We can try converting the data encoding to UTF8. Common conversion tools are iconv and recode, such as: Convert GBK encoded data to UTF-8 encoded: iconv -f GBK -t UTF8 t1.sql &gt; t1_utf8.sql.</p> <p>What permissions are required when importing and exporting MatrixOne?</p> <p>If you are a tenant administrator, you can import and export directly through the default role. For normal users, you need 'insert' permission to import tables when importing; 'select' permission to export tables when exporting by select...into outfile; and 'select' permission to all tables (table*.) and 'show tables' permission to all libraries (database.*) when exporting by mo-dump.</p>"},{"location":"MatrixOne/FAQs/sql-faqs/#permission-related","title":"Permission related","text":"<p>Can regular users grant MOADMIN roles?</p> <p>No, MOADMIN is the highest cluster administrator privilege and only the root user has it.</p>"},{"location":"MatrixOne/FAQs/sql-faqs/#other","title":"Other","text":"<p>What is <code>sql_mode</code> in MatrixOne?</p> <p>MatrixOne's default <code>sql_mode</code> is <code>only_full_group_by</code> in MySQL. So all <code>select</code> fields in the default query syntax, except those in the aggregate function, must appear in <code>group by</code> . But MatrixOne also supports modifying <code>sql_mode</code> to be compatible with the incomplete specification of <code>group by</code> syntax.</p> <p>show tables in MatrixOne cannot view temporary tables, how can I see if it was created successfully?</p> <p>Currently it can be viewed through the \"show create table temporary table name\" . Since temporary tables are only visible in the current session after they are created, at the end of the current session the database automatically deletes the temporary table and frees up all space, which is usually human-aware during its lifetime.</p> <p>How do I view my Query execution plan?</p> <p>To see how MatrixOne executes on a given query, you can use the <code>EXPLAIN</code> statement, which prints out the query plan.</p> <pre><code>EXPLAIN SELECT col1 FROM tbl1; \n</code></pre>"},{"location":"MatrixOne/Get-Started/basic-sql/","title":"Explore SQL with MatrixOne","text":"<p>MatrixOne is compatible with MySQL, you can use MySQL statements directly in most of the cases. For unsupported features, see MySQL Compatibility, and for more information on connecting to MatriOne, see Using client connect to the MatrixOne server.</p>"},{"location":"MatrixOne/Get-Started/basic-sql/#what-is-sql","title":"What is SQL?","text":"<p>The Structured Query Language (SQL) is used to manage a relational database management system (RDBMS). The scope of SQL includes data insertion, query, update, and delete, database schema creation and modification, and data access control.</p>"},{"location":"MatrixOne/Get-Started/basic-sql/#how-many-types-sql-does-matrixone-have","title":"How many types SQL does MatrixOne have?","text":"<p>SQL is divided into the following 6 types according to their functions in MatrixOne:</p> <ul> <li> <p>DDL (Data Definition Language): It is used to define database objects, including databases, tables, and views. Such as <code>CREATE</code>, <code>ALTER</code>, and <code>DROP</code>.</p> </li> <li> <p>DML (Data Manipulation Language): It is used to manipulate application related records. Such as <code>SELECT</code>, <code>DELETE</code>, and <code>INSERT</code>.</p> </li> <li> <p>DQL (Data Query Language): It is used to query the records after conditional filtering. Such as <code>SELECT...FROM...[WHERE]</code>.</p> </li> <li> <p>TCL (Transaction Control Language): It is used to manage transactions. Such as <code>COMMIT</code>,<code>ROLLBACK</code>, or <code>SET TRANSACTION</code>.</p> </li> <li> <p>DCL (Data Control Language): It is used to define access privileges and security levels. Such as <code>CREATET ACCOUNT</code>, <code>DROP ACCOUNT</code>, and <code>GRANT</code>.</p> </li> <li> <p>Other: Other types of management languages \u200b\u200bin MatrixOne are not directly related to data and are a general term for the acquisition and modification of database parameters and resource allocation. Such as <code>SHOW</code>, <code>SET variable</code>, and <code>KILL</code>.</p> </li> </ul>"},{"location":"MatrixOne/Get-Started/basic-sql/#basic-sql-about-show-create-and-drop-a-database","title":"Basic SQL about SHOW, CREATE and DROP a database","text":"<p>A database in MatrixOne can be considered as a collection of objects such as tables.</p> <ul> <li>To show the list of databases, use the <code>SHOW DATABASES</code> statement:</li> </ul> <pre><code>SHOW DATABASES;\n</code></pre> <ul> <li>To create the database named dbdemo, use the <code>CREATE DATABASE db_name [options];</code> statement, for example:</li> </ul> <pre><code>CREATE DATABASE dbdemo;\n</code></pre> <p>or:</p> <pre><code>CREATE DATABASE IF NOT EXISTS dbdemo;\n</code></pre> <p>Add <code>IF NOT EXISTS</code> to prevent an error if the database exists.</p> <ul> <li>To use the database named dbdemo, use the following statement:</li> </ul> <pre><code>USE dbdemo;\n</code></pre> <ul> <li>To show all the tables in a database, use the <code>SHOW TABLES</code> statement:</li> </ul> <pre><code>SHOW TABLES FROM dbdemo;\n</code></pre> <ul> <li>To delete a database, use the <code>DROP DATABASE</code> statement:</li> </ul> <pre><code>DROP DATABASE dbdemo;\n</code></pre>"},{"location":"MatrixOne/Get-Started/basic-sql/#basic-sql-about-create-show-and-drop-a-table","title":"Basic SQL about CREATE, SHOW, and DROP a table","text":"<ul> <li>To create a table, use the <code>CREATE TABLE</code> statement:</li> </ul> <pre><code>CREATE TABLE table_name column_name data_type constraint;\n</code></pre> <p>For example, to create a table named person which includes fields such as number, name, and birthday, use the following statement:</p> <pre><code>CREATE TABLE person (\nid INT(11),\nname VARCHAR(255),\nbirthday DATE\n);\n</code></pre> <ul> <li>To view the statement that creates the table (DDL), use the <code>SHOW CREATE</code> statement:</li> </ul> <pre><code>SHOW CREATE table person;\n</code></pre> <p>Expected result:</p> <pre><code>+--------+-----------------------------------------------------------------------------------------------------------------+\n| Table  | Create Table                                                                                                    |\n+--------+-----------------------------------------------------------------------------------------------------------------+\n| person | CREATE TABLE `person` (\n`id` INT DEFAULT NULL,\n`name` VARCHAR(255) DEFAULT NULL,\n`birthday` DATE DEFAULT NULL\n) |\n+--------+-----------------------------------------------------------------------------------------------------------------+\n1 row in set (0.01 sec)\n</code></pre> <ul> <li>To delete a table, use the <code>DROP TABLE</code> statement:</li> </ul> <pre><code>DROP TABLE person;\n</code></pre>"},{"location":"MatrixOne/Get-Started/basic-sql/#basic-sql-about-insert-update-and-delete-data","title":"Basic SQL about INSERT, UPDATE, and DELETE data","text":"<p>Common DML features are adding, modifying, and deleting table records. The corresponding commands are <code>INSERT</code>, <code>UPDATE</code>, <code>REPLACE</code> and <code>DELETE</code>.</p> <ul> <li>To insert data into a table, use the <code>INSERT</code> statement:</li> </ul> <pre><code>INSERT INTO person VALUES(1,'tom','20170912');\n</code></pre> <ul> <li>To insert a record containing data of some fields into a table, use the <code>INSERT</code> statement:</li> </ul> <pre><code>INSERT INTO person(id,name) VALUES('2','bob');\n</code></pre> <ul> <li>To update some fields of a record in a table, use the <code>UPDATE</code> statement:</li> </ul> <pre><code>UPDATE person SET birthday='20180808' WHERE id=2;\n</code></pre> <ul> <li>To replace some field data of table records in the table, use the <code>UPDATE</code> statement:</li> </ul> <pre><code>REPLACE INTO person SET birthday='20180809' WHERE id=2;\n</code></pre> <ul> <li>To delete the data in a table, use the <code>DELETE</code> statement:</li> </ul> <pre><code>DELETE FROM person WHERE id=2;\n</code></pre> <p>Note</p> <p>The <code>UPDATE</code> and <code>DELETE</code> statements without the <code>WHERE</code> clause as a filter operate on the entire table.</p>"},{"location":"MatrixOne/Get-Started/basic-sql/#basic-sql-about-query-data","title":"Basic SQL about Query data","text":"<p>DQL is used to retrieve the desired data rows from a table or multiple tables.</p> <ul> <li>To view the data in a table, use the <code>SELECT</code> statement:</li> </ul> <pre><code>SELECT * FROM person;\n</code></pre> <p>Expected result:</p> <pre><code>+------+------+------------+\n| id   | name | birthday   |\n+------+------+------------+\n|    1 | tom  | 2017-09-12 |\n+------+------+------------+\n1 row in set (0.00 sec)\n</code></pre> <ul> <li>To query a specific column, add the column name after the <code>SELECT</code> keyword:</li> </ul> <pre><code>SELECT name FROM person;\n+------+\n| name |\n+------+\n| tom  |\n+------+\n1 rows in set (0.00 sec)\n</code></pre> <p>Use the <code>WHERE</code> clause to filter all records that match the conditions and then return the result:</p> <pre><code>SELECT * FROM person where id&lt;5;\n</code></pre> <p>Expected result:</p> <pre><code>+------+------+------------+\n| id   | name | birthday   |\n+------+------+------------+\n|    1 | tom  | 2017-09-12 |\n+------+------+------------+\n1 row in set (0.00 sec)\n</code></pre>"},{"location":"MatrixOne/Get-Started/basic-sql/#basic-sql-about-create-grant-and-drop-a-user","title":"Basic SQL about CREATE, GRANT, and DROP a user","text":"<p><code>CREATE</code>, <code>GRANT</code>, and <code>DROP</code> are usually used to create or delete users, and manage user privileges.</p> <ul> <li>To create a user, use the <code>CREATE USER</code> statement. The following example creates a user named mouser with the password 111:</li> </ul> <pre><code>&gt; CREATE USER mouser IDENTIFIED BY '111';\nQuery OK, 0 rows affected (0.10 sec)\n</code></pre> <ul> <li>To create a role for the user:</li> </ul> <pre><code>&gt; CREATE ROLE role_r1;\nQuery OK, 0 rows affected (0.05 sec)\n</code></pre> <ul> <li>To grant mouser the role_r1:</li> </ul> <pre><code>&gt; GRANT role_r1 to mouser;\nQuery OK, 0 rows affected (0.04 sec)\n</code></pre> <ul> <li>To grant mouser the privilege to create table in the dbdemo database:</li> </ul> <pre><code>GRANT create table on database * to role_r1;\n</code></pre> <ul> <li>To check the privileges of mouser:</li> </ul> <pre><code>&gt; SHOW GRANTS for mouser@localhost;\n+-------------------------------------------------------+\n| Grants for mouser@localhost                           |\n+-------------------------------------------------------+\n| GRANT create table ON database * `mouser`@`localhost` |\n| GRANT connect ON account  `mouser`@`localhost`        |\n+-------------------------------------------------------+\n2 rows in set (0.02 sec)\n</code></pre> <p>You have successfully granted the permission of <code>create table</code> in the database to mouser.</p> <ul> <li>To delete mouser:</li> </ul> <pre><code>DROP USER mouser;\n</code></pre> <p>Privilege management is a huge but very useful function. For more information, see Privilege Management.</p>"},{"location":"MatrixOne/Get-Started/install-standalone-matrixone/","title":"Deploy standalone MatrixOne","text":"<p>The applicable scenario of the standalone version of MatrixOne is to use a single development machine to deploy MatrixOne and experience the essential functions of MatrixOne, which is the same as using MySQL for the standalone version.</p> <p>Recommended operating system</p> <p>MatrixOne supports Linux and MacOS. For quick start, we recommend the following hardware specifications:</p> Operating System Operating System Version CPU Memory Debian 11 and later x86 / ARM CPU; 4 Cores 16 GB Ubuntu 20.04 and later x86 / ARM CPU; 4 Cores 16 GB CentOS 7 and later x86 / ARM CPU;4 \u6838 16 GB macOS Monterey 12.3 and later x86 / ARM CPU; 4 Cores 16 GB <p>Note</p> <p>If you are currently using a Linux kernel version lower than 5.0, due to the limitation of the linux kernel, the deployment of Matrixone using binary packages built based on glibc may report errors related to glibc, in this case, you can choose to use the **binary packages built based on musl libc in the Binary Package Deployment for deployment. musl libc is a lightweight C standard library for Linux, and using musl libc to package your application allows you to generate static binaries that do not depend on the system C library. musl libc is a lightweight C standard library designed for Linux systems. In addition, since CentOS 8 is no longer officially supported and CentOS 7 will end its maintenance cycle on June 30, 2024, users currently using these versions may be at some risk. Therefore, we recommend that users use other operating system versions.</p> <p>For more information on the required operating system versions for deploying MatrixOne, see Hardware and Operating system requirements.</p>"},{"location":"MatrixOne/Get-Started/install-standalone-matrixone/#support-for-domestic-systems","title":"Support for domestic systems","text":"<p>As a domestic database, MatrixOne is currently compatible with and supports the following domestic operating systems:</p> Operating System Operating System Version CPU Memory OpenCloudOS v8.0 / v9.0 x86 CPU;4 Cores 16 GB openEuler 20.03 x86 / ARM CPU;4 Cores 16 GB TencentOS Server v2.4 / v3.1 x86 CPU;4 Cores 16 GB UOS V20 ARM CPU;4 Cores 16 GB KylinOS V10 ARM CPU;4 Cores 16 GB KylinSEC v3.0 x86 / ARM CPU;4 Cores 16 GB <p>NOTE: Supported domestic CPUs include TengCloud S2500, FT2000+/64, Kunpeng 916, Kunpeng 920 and Haikuang H620-G30.</p>"},{"location":"MatrixOne/Get-Started/install-standalone-matrixone/#deploy-on-macos","title":"Deploy on macOS","text":"<p>You can install and connect to MatrixOne on macOS in one of three ways that work best for you:</p> <ul> <li>Building from source code</li> <li>Using binary package</li> <li>Using Docker</li> </ul>"},{"location":"MatrixOne/Get-Started/install-standalone-matrixone/#deploy-on-linux","title":"Deploy on Linux","text":"<p>You can install and connect to MatrixOne on Linux in one of three ways that work best for you:</p> <ul> <li>Building from source code</li> <li>Using binary package</li> <li>Using Docker</li> </ul>"},{"location":"MatrixOne/Get-Started/install-standalone-matrixone/#reference","title":"Reference","text":"<ul> <li> <p>For more information on the method of connecting to MatrixOne, see:</p> <ul> <li>Connecting to MatrixOne with Database Client Tool</li> <li>Connecting to MatrixOne with JDBC</li> <li>Connecting to MatrixOne with Python.</li> </ul> </li> <li> <p>For more information on the questions of deployment,see Deployment FAQs.</p> </li> <li> <p>For more information on distributed installation, see MatrixOne Distributed Cluster Deployment.</p> </li> </ul>"},{"location":"MatrixOne/Get-Started/install-on-linux/install-on-linux-method1/","title":"Building from source code in Linux","text":"<p>This document will guide you to deploy a standalone MatrixOne in a Linux environment using source code. You can use the mo_ctl tool to help you deploy and manage MatrixOne.</p> <p>MatrixOne supports x86 and ARM Linux systems. This article uses the Debian11.1 x86 architecture as an example to to show the entire deployment process. If you use the Ubuntu system, it should be noted that there is no root authority by default. It is recommended to add <code>sudo</code> to all the commands in the process.</p>"},{"location":"MatrixOne/Get-Started/install-on-linux/install-on-linux-method1/#pre-dependency-reference","title":"Pre-dependency Reference","text":"<p>To install and use the stand-alone MatrixOne through source code, you need to depend on the following software packages.</p> Dependent software Version golang 1.22.3 or later gcc gcc8.5 or later git 2.20 or later MySQL Client 8.0 or later"},{"location":"MatrixOne/Get-Started/install-on-linux/install-on-linux-method1/#step-1-install-dependency","title":"Step 1: Install Dependency","text":""},{"location":"MatrixOne/Get-Started/install-on-linux/install-on-linux-method1/#1-install-go","title":"1. Install Go","text":"<ol> <li> <p>Click Go Download and install to enter its official documentation, and follow the installation steps to complete the Go installation.</p> </li> <li> <p>To verify whether Go is installed, please execute the code <code>go version</code>. When Go is installed successfully, the example code line is as follows:  </p> <pre><code>go version go1.22.4 linux/amd64\n</code></pre> </li> </ol>"},{"location":"MatrixOne/Get-Started/install-on-linux/install-on-linux-method1/#2-install-gcc","title":"2. Install GCC","text":"<ol> <li> <p>Debian 11.1 generally comes with GCC version 9.0 or above. To verify whether the GCC is installed:</p> <pre><code>gcc -v\nbash: gcc: command not found\n</code></pre> <p>As shown in the code, the version of GCC is not displayed, the GCC environment needs to be installed.</p> </li> <li> <p>Click GCC Download and install to enter its official documentation, and follow the installation steps to complete the GCC installation.</p> </li> <li> <p>To verify whether GCC is installed, execute the code <code>gcc -v</code>. When GCC is installed successfully, the example code line is as follows (only part of the code is displayed):</p> <pre><code>Using built-in specs.\nCOLLECT_GCC=gcc\n...\nThread model: posix\ngcc version 9.3.1 20200408 (Red Hat 9.3.1-2) (GCC)\n</code></pre> </li> </ol>"},{"location":"MatrixOne/Get-Started/install-on-linux/install-on-linux-method1/#3-install-git","title":"3. Install Git","text":"<ol> <li> <p>To verify whether Git is installed, execute the code <code>git version</code>. As shown in the code, if the version of git is not displayed, it means that Git needs to be installed.</p> <pre><code>git version\n-bash: git: command not found\n</code></pre> </li> <li> <p>Install Git with the following command:</p> <pre><code>sudo apt install git\n</code></pre> </li> <li> <p>To verify whether Git is installed, please execute the code <code>git version</code>, the code line example of a successful installation is as follows:</p> <pre><code>git version\ngit version 2.40.0\n</code></pre> </li> </ol>"},{"location":"MatrixOne/Get-Started/install-on-linux/install-on-linux-method1/#4-install-mysql-client","title":"4. Install MySQL Client","text":"<p>The Debian11.1 version does not have MySQL Client installed by default, so it needs to be downloaded and installed manually.</p> <ol> <li> <p>To install MySQL Client, you need to use the <code>wget</code> download tool, <code>wget</code> is used to download files from the specified URL. Execute the following commands in sequence to install <code>wget</code>:</p> <pre><code>## Update the software source list cache\nsudo apt udpate\n## install wget\nsudo apt install wget\n</code></pre> <p>After the installation is complete, please enter the following command to verify:</p> <pre><code>wget -V\n</code></pre> <p>The result of a successful installation (only a part of the code is displayed) is as follows:</p> <pre><code>GNU Wget 1.21.3 built on linux-gnu.\n...\nCopyright (C) 2015 Free Software Foundation, Inc.\n...\n</code></pre> </li> <li> <p>Execute the following commands in sequence to install MySQL Client:</p> <pre><code>wget https://dev.mysql.com/get/mysql-apt-config_0.8.22-1_all.deb\nsudo dpkg -i ./mysql-apt-config_0.8.22-1_all.deb\nsudo apt update\nsudo apt install mysql-client\n</code></pre> </li> <li> <p>Execute the command <code>mysql --version</code> to test whether MySQL is available. The result of the successful installation is as follows:</p> <pre><code>mysql --version\nmysql  Ver 8.0.33 for Linux on x86_64 (MySQL Community Server - GPL)\n</code></pre> </li> </ol>"},{"location":"MatrixOne/Get-Started/install-on-linux/install-on-linux-method1/#step-2-install-the-mo_ctl-tool","title":"Step 2: Install the mo_ctl tool","text":"<p>mo_ctl is a command-line tool for deploying, installing, and managing MatrixOne. It is very convenient to perform various operations on MatrixOne. See mo_ctl Tool for complete usage details.</p>"},{"location":"MatrixOne/Get-Started/install-on-linux/install-on-linux-method1/#1-install-the-mo_ctl-tool","title":"1. Install the mo_ctl tool","text":"<p>The mo_ctl tool can be installed through the following command:</p> <pre><code>wget https://raw.githubusercontent.com/matrixorigin/mo_ctl_standalone/main/install.sh &amp;&amp; bash +x ./install.sh\n</code></pre> <p>After the installation is complete, verify whether the installation is successful through the <code>mo_ctl</code> command:</p> <pre><code>root@VM-16-2-debian:~# mo_ctl\nUsage             : mo_ctl [option_1] [option_2]\n\n[option_1]      : available: connect | ddl_connect | deploy | get_branch | get_cid | get_conf | help | pprof | precheck | restart | set_conf | sql | start | status | stop | uninstall | upgrade | watchdog\n  1) connect      : connect to mo via mysql client using connection info configured\n  2) ddl_convert  : convert ddl file to mo format from other types of database\n  3) deploy       : deploy mo onto the path configured\n  4) get_branch   : upgrade or downgrade mo from current version to a target commit id or stable version\n  5) get_cid      : print mo git commit id from the path configured\n  6) get_conf     : get configurations\n  7) help         : print help information\n  8) pprof        : collect pprof information\n  9) precheck     : check pre-requisites for mo_ctl\n  10) restart     : a combination operation of stop and start\n  11) set_conf    : set configurations\n  12) sql         : execute sql from string, or a file or a path containg multiple files\n  13) start       : start mo-service from the path configured\n  14) status      : check if there's any mo process running on this machine\n  15) stop        : stop all mo-service processes found on this machine\n  16) uninstall   : uninstall mo from path MO_PATH=/data/mo//matrixone\n  17) upgrade     : upgrade or downgrade mo from current version to a target commit id or stable version\n  18) watchdog    : setup a watchdog crontab task for mo-service to keep it alive  \n  e.g.            : mo_ctl status\n\n  [option_2]        : Use \" mo_ctl [option_1] help \" to get more info\n  e.g.            : mo_ctl deploy help\n</code></pre>"},{"location":"MatrixOne/Get-Started/install-on-linux/install-on-linux-method1/#2-set-mo_ctl-parameters","title":"2. Set mo_ctl parameters","text":"<p>Some parameters in the mo_ctl tool need to be set and you can view all current parameters through <code>mo_ctl get_conf</code>.</p> <pre><code>root@VM-16-2-debian:~# mo_ctl get_conf\n2023-08-23 18:23:35.444 UTC+0800    [INFO]    Below are all configurations set in conf file /root/mo_ctl/conf/env.sh\nMO_PATH=\"/data/mo/\"\nMO_LOG_PATH=\"${MO_PATH}/matrixone/logs\"\nMO_HOST=\"127.0.0.1\"\nMO_PORT=\"6001\"\nMO_USER=\"root\"\nMO_PW=\"111\"\nMO_DEPLOY_MODE=\"host\"\nMO_REPO=\"matrixorigin/matrixone\"\nMO_IMAGE_PREFIX=\"nightly\"\nMO_IMAGE_FULL=\"\"\nMO_CONTAINER_NAME=\"mo\"\nMO_CONTAINER_PORT=\"6001\"\nMO_CONTAINER_DEBUG_PORT=\"12345\"\nCHECK_LIST=(\"go\" \"gcc\" \"git\" \"mysql\" \"docker\")\nGCC_VERSION=\"8.5.0\"\nCLANG_VERSION=\"13.0\"\nGO_VERSION=\"1.22\"\nMO_GIT_URL=\"https://github.com/matrixorigin/matrixone.git\"\nMO_DEFAULT_VERSION=\"v1.2.3\"\nGOPROXY=\"https://goproxy.cn,direct\"\nSTOP_INTERVAL=\"5\"\nSTART_INTERVAL=\"2\"\nMO_DEBUG_PORT=\"9876\"\nMO_CONF_FILE=\"${MO_PATH}/matrixone/etc/launch/launch.toml\"\nRESTART_INTERVAL=\"2\"\nPPROF_OUT_PATH=\"/tmp/pprof-test/\"\nPPROF_PROFILE_DURATION=\"30\"\n</code></pre> <p>Generally, the parameters that need to be adjusted are as follows:</p> <pre><code>mo_ctl set_conf MO_PATH=\"yourpath\" # Set custom MatrixOne download path\nmo_ctl set_conf MO_GIT_URL=\"https://githubfast.com/matrixorigin/matrixone.git\" # For the problem of slow downloading from the original GitHub address, set image download address\nmo_ctl set_conf MO_DEFAULT_VERSION=\"v1.2.3\" # Set the version of MatrixOne downloaded\nmo_ctl set_conf MO_DEPLOY_MODE=git  # Deployment Configuration\n</code></pre>"},{"location":"MatrixOne/Get-Started/install-on-linux/install-on-linux-method1/#step-3-get-matrixone-code","title":"Step 3: Get MatrixOne code","text":"<p>Depending on your needs, choose whether you want to keep your code up to date, or if you want to get the latest stable version of the code.</p> Get the MatrixOne(Develop Version) code to buildGet the MatrixOne(Stable Version) code to build <p>The main branch is the default branch, the code on the main branch is always up-to-date but not stable enough.</p> <pre><code>mo_ctl deploy main\n</code></pre> <pre><code>mo_ctl deploy v1.2.3\n</code></pre>"},{"location":"MatrixOne/Get-Started/install-on-linux/install-on-linux-method1/#step-4-launch-matrixone-server","title":"Step 4: Launch MatrixOne server","text":"<p>Launch the MatrixOne service through the <code>mo_ctl start</code> command.</p> <p>If the operation is regular, the following log will appear. The relevant operation logs of MatrixOne will be in <code>/yourpath/matrixone/logs/</code>.</p> <pre><code>root@VM-16-2-debian:~# mo_ctl start\n2023-07-07_09:55:01    [INFO]    No mo-service is running\n2023-07-07_09:55:01    [INFO]    Starting mo-service: cd /data/mo/matrixone/matrixone/ &amp;&amp; /data/mo/matrixone/matrixone/mo-service -daemon -debug-http :9876 -launch /data/mo/matrixone/matrixone/etc/launch/launch.toml &gt;/data/mo/matrixone/logs/stdout-20230707_095501.log 2&gt;/data/mo/matrixone/logs/stderr-20230707_095501.log\n2023-07-07_09:55:01    [INFO]    Wait for 2 seconds\n2023-07-07_09:55:03    [INFO]    At least one mo-service is running. Process info:\n2023-07-07_09:55:03    [INFO]    root      748128       1  2 09:55 ?        00:00:00 /data/mo/matrixone/matrixone/mo-service -daemon -debug-http :9876 -launch /data/mo/matrixone/matrixone/etc/launch/launch.toml\n2023-07-07_09:55:03    [INFO]    Pids:\n2023-07-07_09:55:03    [INFO]    748128\n2023-07-07_09:55:03    [INFO]    Start succeeded\n</code></pre> <p>Note</p> <p>The initial startup of MatrixOne approximately takes 20 to 30 seconds. After a brief wait, you can connect to MatrixOne using the MySQL client.</p>"},{"location":"MatrixOne/Get-Started/install-on-linux/install-on-linux-method1/#step-5-connect-to-matrixone","title":"Step 5: Connect to MatrixOne","text":"<p>One-click connection to MatrixOne service through <code>mo_ctl connect</code> command.</p> <p>This command will invoke the MySQL Client tool to connect to the MatrixOne service automatically.</p> <pre><code>root@VM-16-2-debian:~# mo_ctl connect\n2023-07-07_10:30:20    [INFO]    Checking connectivity\n2023-07-07_10:30:20    [INFO]    Ok, connecting for user ...\nmysql: [Warning] Using a password on the command line interface can be insecure.\nWelcome to the MySQL monitor.  Commands end with ; or \\g.\nYour MySQL connection id is 15\nServer version: 8.0.30-MatrixOne-v1.2.3 MatrixOne\n\nCopyright (c) 2000, 2023, Oracle and/or its affiliates.\n\nOracle is a registered trademark of Oracle Corporation and/or its\naffiliates. Other names may be trademarks of their respective\nowners.\n\nType 'help;' or '\\h' for help. Type '\\c' to clear the current input statement.\n\nmysql&gt;\n</code></pre> <p>Note</p> <p>The above connection and login account is the initial accounts <code>root</code> and the password <code>111</code>; please change the initial password after logging in to MatrixOne; see MatrixOne Password Management. After changing the login username or password, you must set a new username and password through <code>mo_ctl set_conf</code>. For details, please refer to mo_ctl Tool.</p>"},{"location":"MatrixOne/Get-Started/install-on-linux/install-on-linux-method2/","title":"Using binary package in Linux","text":"<p>This document will guide you to deploy a stand-alone version of MatrixOne in a Linux environment using binary packages. This installation solution does not need to install pre-dependencies and compile source packages. You can use the mo_ctl tool to help you deploy and manage MatrixOne.</p> <p>MatrixOne supports x86 and ARM Linux systems. This article uses the Debian11.1 x86 architecture as an example to to show the entire deployment process. If you use the Ubuntu system, it should be noted that there is no root authority by default. It is recommended to add <code>sudo</code> to all the commands in the process.</p>"},{"location":"MatrixOne/Get-Started/install-on-linux/install-on-linux-method2/#pre-dependency-reference","title":"Pre-dependency Reference","text":"<p>Only the MySQL Client tool must be installed to deploy and install MatrixOne through the binary package.</p> Dependent software Version MySQL Client 8.0 or later"},{"location":"MatrixOne/Get-Started/install-on-linux/install-on-linux-method2/#step-1-install-dependency","title":"Step 1: Install Dependency","text":""},{"location":"MatrixOne/Get-Started/install-on-linux/install-on-linux-method2/#1-install-wget-or-curl","title":"1. Install <code>wget</code> or <code>curl</code>","text":"<p>We'll provide a method of Using binary package to install MatrixOne. If you prefer to use the command line, you can pre-install <code>wget</code> or <code>curl</code>.</p> <p>Tips: It is recommended that you download and install one of these two tools to facilitate future operations.</p> Install <code>wget</code>Install <code>curl</code> <p>The <code>wget</code> tool is used to download files from the specified URL. <code>wget</code> is a unique file download tool; it is very stable and has a download speed.</p> <p>Execute the following commands in sequence to install <code>wget</code>:</p> <pre><code>## Update the software source list cache\nsudo apt udpate\n## install wget\nsudo apt install wget\n</code></pre> <p>After the installation is complete, please enter the following command to verify:</p> <pre><code>wget -V\n</code></pre> <p>The result of a successful installation (only a part of the code is displayed) is as follows:</p> <pre><code>GNU Wget 1.21.3 built on linux-gnu.\n...\nCopyright (C) 2015 Free Software Foundation, Inc.\n...\n</code></pre> <p><code>curl</code> is a file transfer tool that works from the command line using URL rules. <code>curl</code> is a comprehensive transfer tool that supports file upload and download.</p> <p>Go to the Curl website according to the official installation guide to install <code>curl</code>.  To verify that <code>curl</code> is installed successfully, use the following command line:</p> <pre><code>curl --version\n</code></pre> <p>The successful installation results (only part of the code is displayed) are as follows:</p> <pre><code>curl 7.84.0 (x86_64-pc-linux-gnu) libcurl/7.84.0 OpenSSL/1.1.1k-fips zlib/1.2.11\nRelease-Date: 2022-06-27\n...\n</code></pre>"},{"location":"MatrixOne/Get-Started/install-on-linux/install-on-linux-method2/#2-install-mysql-client","title":"2. Install MySQL Client","text":"<p>The Debian11.1 version does not have MySQL Client installed by default, so it needs to be downloaded and installed manually.</p> <ol> <li> <p>Execute the following commands in sequence to install MySQL Client:</p> <pre><code>wget https://dev.mysql.com/get/mysql-apt-config_0.8.22-1_all.deb\nsudo dpkg -i ./mysql-apt-config_0.8.22-1_all.deb\nsudo apt update\nsudo apt install mysql-client\n</code></pre> </li> <li> <p>Execute the command <code>mysql --version</code> to test whether MySQL is available. The result of the successful installation is as follows:</p> <pre><code>mysql --version\nmysql  Ver 8.0.33 for Linux on x86_64 (MySQL Community Server - GPL)\n</code></pre> </li> </ol>"},{"location":"MatrixOne/Get-Started/install-on-linux/install-on-linux-method2/#step-2-download-binary-packages-and-decompress","title":"Step 2: Download binary packages and decompress","text":"<p>Download Method 1 and Download Method 2 need to install the download tools <code>wget</code> or <code>curl</code> first.</p> Downloading method 1: Using <code>wget</code> to install binary packagesDownloading method 2: Using <code>curl</code> to install binary packagesDownloading method 3: Go to the page and download <p>Binary for x86 architecture system:</p> <pre><code>mkdir -p /root/matrixone &amp; cd /root/\nwget https://github.com/matrixorigin/matrixone/releases/download/v1.2.3/mo-v1.2.3-linux-x86_64.zip\nunzip -d matrixone/ mo-v1.2.3-linux-x86_64.zip\n</code></pre> <p>Binary for ARM architecture system:</p> <pre><code>mkdir -p /root/matrixone &amp; cd /root/\nwget https://github.com/matrixorigin/matrixone/releases/download/v1.2.3/mo-v1.2.3-linux-arm64.zip\nunzip -d matrixone/ mo-v1.2.3-linux-arm64.zip\n</code></pre> <p>Binary for x86 architecture system:</p> <pre><code>mkdir -p /root/matrixone &amp; cd /root/\ncurl -OL https://github.com/matrixorigin/matrixone/releases/download/v1.2.3/mo-v1.2.3-linux-x86_64.zip\nunzip -d matrixone/ mo-v1.2.3-linux-x86_64.zip\n</code></pre> <p>Binary for ARM architecture system:</p> <pre><code>mkdir -p /root/matrixone &amp; cd /root/\ncurl -OL https://github.com/matrixorigin/matrixone/releases/download/v1.2.3/mo-v1.2.3-linux-arm64.zip\nunzip -d matrixone/ mo-v1.2.3-linux-arm64.zip\n</code></pre> <p>If you want a more intuitive way to download the page, go to the version 1.2.3, pull down to find the Assets column, and click the installation package mo-v1.2.3-linux-x86_64.zip or mo-v1.2.3-linux-arm64.zip can be downloaded.</p>"},{"location":"MatrixOne/Get-Started/install-on-linux/install-on-linux-method2/#step-3-install-the-mo_ctl-tool","title":"Step 3: Install the mo_ctl tool","text":"<p>mo_ctl is a command-line tool for deploying, installing, and managing MatrixOne. It is very convenient to perform various operations on MatrixOne. See mo_ctl Tool for complete usage details.</p>"},{"location":"MatrixOne/Get-Started/install-on-linux/install-on-linux-method2/#1-install-the-mo_ctl-tool","title":"1. Install the mo_ctl tool","text":"<p>The mo_ctl tool can be installed through the following command:</p> <pre><code>wget https://raw.githubusercontent.com/matrixorigin/mo_ctl_standalone/main/install.sh &amp;&amp; bash +x ./install.sh\n</code></pre>"},{"location":"MatrixOne/Get-Started/install-on-linux/install-on-linux-method2/#2-set-mo_ctl-parameters","title":"2. Set mo_ctl parameters","text":"<p>The parameters that need to be adjusted are as follows:</p> <pre><code>mo_ctl set_conf MO_PATH=\"/yourpath/mo-v1.2.3-xx-xx\" # Set the MO_PATH to the directory where the binary files are extracted\nmo_ctl set_conf MO_CONF_FILE=\"/yourpath/mo-v1.2.3-xx-xx/etc/launch/launch.toml\" # Set the MO_CONF_FILE path\nmo_ctl set_conf MO_DEPLOY_MODE=binary  #Deployment Configuration\n</code></pre>"},{"location":"MatrixOne/Get-Started/install-on-linux/install-on-linux-method2/#step-4-launch-matrixone-server","title":"Step 4: Launch MatrixOne server","text":"<p>Launch the MatrixOne service through the <code>mo_ctl start</code> command.</p> <p>If the operation is regular, the following log will appear. The relevant operation logs of MatrixOne will be in <code>/yourpath/mo-v1.2.3-xx-xx/matrixone/logs/</code>.</p> <pre><code>root@VM-16-2-debian:~# mo_ctl start\n2024-03-07 14:34:04.942 UTC+0800    [INFO]    No mo-service is running\n2024-03-07 14:34:04.998 UTC+0800    [INFO]    Get conf succeeded: MO_DEPLOY_MODE=\"binary\"\n2024-03-07 14:34:05.024 UTC+0800    [INFO]    GO memory limit(Mi): 14745\n2024-03-07 14:34:05.072 UTC+0800    [INFO]    Starting mo-service: cd /Users/admin/mo-v1.2.3-linux-arm64/ &amp;&amp; GOMEMLIMIT=14745MiB /Users/admin/mo-v1.2.3-linux-arm64/mo-service -daemon -debug-http :9876 -launch /Users/admin/mo-v1.2.3-linux-arm64/etc/launch/launch.toml &gt;/Users/admin/mo-v1.2.3-linux-arm64/matrixone/logs/stdout-20240307_143405.log 2&gt;/Users/admin/mo-v1.2.3-linux-arm64/matrixone/logs/stderr-20240307_143405.log\n2024-03-07 14:34:05.137 UTC+0800    [INFO]    Wait for 2 seconds\n2024-03-07 14:34:07.261 UTC+0800    [INFO]    At least one mo-service is running. Process info: \n  501 27145     1   0  2:34\u4e0b\u5348 ??         0:00.18 /Users/admin/mo-v1.2.3-linux-arm64/mo-service -daemon -debug-http :9876 -launch /Users/admin/mo-v1.2.3-linux-arm64/etc/launch/launch.toml\n2024-03-07 14:34:07.284 UTC+0800    [INFO]    List of pid(s): \n27145\n2024-03-07 14:34:07.308 UTC+0800    [INFO]    Start succeeded\n</code></pre> <p>Note</p> <p>The initial startup of MatrixOne approximately takes 20 to 30 seconds. After a brief wait, you can connect to MatrixOne using the MySQL client.</p>"},{"location":"MatrixOne/Get-Started/install-on-linux/install-on-linux-method2/#step-5-connect-to-matrixone","title":"Step 5: Connect to MatrixOne","text":"<p>One-click connection to MatrixOne service through <code>mo_ctl connect</code> command.</p> <p>This command will invoke the MySQL Client tool to connect to the MatrixOne service automatically.</p> <pre><code>root@VM-16-2-debian:~# mo_ctl connect\n2024-03-07 14:34:59.902 UTC+0800    [INFO]    Checking connectivity\n2024-03-07 14:34:59.942 UTC+0800    [INFO]    Ok, connecting for user ... \nWelcome to the MySQL monitor.  Commands end with ; or \\g.\nYour MySQL connection id is 426\nServer version: 8.0.30-MatrixOne-v1.2.3 MatrixOne\n\nCopyright (c) 2000, 2018, Oracle and/or its affiliates. All rights reserved.\n\nOracle is a registered trademark of Oracle Corporation and/or its\naffiliates. Other names may be trademarks of their respective\nowners.\n\nType 'help;' or '\\h' for help. Type '\\c' to clear the current input statement.\n\nmysql&gt;\n</code></pre> <p>Note</p> <p>The above connection and login account is the initial accounts <code>root</code> and the password <code>111</code>; please change the initial password after logging in to MatrixOne; see MatrixOne Password Management. After changing the login username or password, you must set a new username and password through <code>mo_ctl set_conf</code>. For details, please refer to mo_ctl Tool.</p>"},{"location":"MatrixOne/Get-Started/install-on-linux/install-on-linux-method3/","title":"Using Docker","text":"<p>This document will guide you build standalone MatrixOne using Docker.</p>"},{"location":"MatrixOne/Get-Started/install-on-linux/install-on-linux-method3/#step-1-pre-dependency-reference","title":"Step 1: Pre-dependency Reference","text":""},{"location":"MatrixOne/Get-Started/install-on-linux/install-on-linux-method3/#download-and-install-docker","title":"Download and install Docker","text":"<ol> <li> <p>Click Get Docker, enter into the Docker's official document page, depending on your operating system, download and install the corresponding Docker. It is recommended to choose Docker version 20.10.18 or later and strive to maintain consistency between the Docker client and Docker server versions.</p> </li> <li> <p>After the installation, you can verify the Docker version by using the following lines:</p> <pre><code>docker --version\n</code></pre> <p>The successful installation results are as follows:</p> <pre><code>Docker version 20.10.18, build 100c701\n</code></pre> </li> <li> <p>Execute the following command in your terminal, start Docker and check whether the running status is successfully:</p> <pre><code>systemctl start docker\nsystemctl status docker\n</code></pre> <p>The following code example indicates that Docker is running. <code>Active: active (running)</code> shows that Docker is running.</p> <pre><code>docker.service - Docker Application Container Engine\n   Loaded: loaded (/usr/lib/systemd/system/docker.service; disabled; vendor preset: disabled)\n   Active: active (running) since Sat 2022-11-26 17:48:32 CST; 6s ago\n     Docs: https://docs.docker.com\n Main PID: 234496 (dockerd)\n    Tasks: 8\n   Memory: 23.6M\n</code></pre> </li> </ol>"},{"location":"MatrixOne/Get-Started/install-on-linux/install-on-linux-method3/#install-and-configure-mysql-client","title":"Install and configure MySQL Client","text":"<p>The Debian11.1 version does not have MySQL Client installed by default, so it needs to be downloaded and installed manually.</p> <ol> <li> <p>Execute the following commands in sequence:</p> <pre><code>wget https://dev.mysql.com/get/mysql-apt-config_0.8.22-1_all.deb\nsudo dpkg -i ./mysql-apt-config_0.8.22-1_all.deb\nsudo apt update\nsudo apt install mysql-client\n</code></pre> </li> <li> <p>Execute the command <code>mysql --version</code> to test whether MySQL is available. The result of the successful installation is as follows:</p> <pre><code>mysql --version\nmysql Ver 8.0.33 for Linux on x86_64 (MySQL Community Server - GPL)\n</code></pre> </li> </ol>"},{"location":"MatrixOne/Get-Started/install-on-linux/install-on-linux-method3/#step-2-deploying-matrixone","title":"Step 2: Deploying  MatrixOne","text":""},{"location":"MatrixOne/Get-Started/install-on-linux/install-on-linux-method3/#docker-deployment","title":"Docker Deployment","text":"<p>Create and run the container of MatrixOne</p> <p>It will pull the image from Docker Hub if not exists. You can choose to pull the stable version image or the develop version image.</p> Stable Version Image(1.2.3 version)Develop Version Image <pre><code>docker pull matrixorigin/matrixone:1.2.3\ndocker run -d -p 6001:6001 --name matrixone matrixorigin/matrixone:1.2.3\n</code></pre> <p>If you are using the network in mainland China, you can pull the MatrixOne stable version image on Alibaba Cloud:</p> <pre><code>docker pull registry.cn-shanghai.aliyuncs.com/matrixorigin/matrixone:1.2.3\ndocker run -d -p 6001:6001 --name matrixone registry.cn-shanghai.aliyuncs.com/matrixorigin/matrixone:1.2.3\n</code></pre> <p>If you want to pull the develop version image, see Docker Hub, get the image tag. An example as below:</p> <pre><code>docker pull matrixorigin/matrixone:nightly-commitnumber\ndocker run -d -p 6001:6001 --name matrixone matrixorigin/matrixone:nightly-commitnumber\n</code></pre> <p>If you are using the network in mainland China, you can pull the MatrixOne develop version image on Alibaba Cloud:</p> <pre><code>docker pull registry.cn-shanghai.aliyuncs.com/matrixorigin/matrixone:nightly-commitnumber\ndocker run -d -p 6001:6001 --name matrixone registry.cn-shanghai.aliyuncs.com/matrixorigin/matrixone:nightly-commitnumber\n</code></pre> <p>Note: The nightly version is updated once a day.</p> <p>If your Docker version is lower than 20.10.18 or the Docker client and server versions are inconsistent, upgrading to the latest stable version before attempting is recommended. If you choose to proceed with the current versions, you need to add the parameter <code>--privileged=true</code> to the <code>docker run</code> command, as shown below:</p> <pre><code>docker run -d -p 6001:6001 --name matrixone --privileged=true matrixorigin/matrixone:1.2.3\n</code></pre> <p>Note</p> <p>The initial startup of MatrixOne approximately takes 20 to 30 seconds. After a brief wait, you can connect to MatrixOne using the MySQL client.</p> <p>If you need to mount data directories or customize configure files, see Mount the directory to Docker container.</p>"},{"location":"MatrixOne/Get-Started/install-on-linux/install-on-linux-method3/#mo_ctl-deployment","title":"Mo_ctl Deployment","text":"<p>mo_ctl is a command-line tool for deploying, installing, and managing MatrixOne. It is very convenient to perform various operations on MatrixOne. See mo_ctl Tool for complete usage details.</p> <ul> <li>Install the mo_ctl tool</li> </ul> <p>The mo_ctl tool can be installed through the following command:</p> <pre><code>wget https://raw.githubusercontent.com/matrixorigin/mo_ctl_standalone/main/install.sh &amp;&amp; bash +x ./install.sh\n</code></pre> <ul> <li>Set mo_ctl parameters</li> </ul> <p>The parameters that need to be adjusted are as follows:</p> <pre><code>mo_ctl set_conf MO_CONTAINER_DATA_HOST_PATH=\"/yourpath/mo/\" # Set the data directory for host\nmo_ctl set_conf MO_CONTAINER_IMAGE=\"matrixorigin/matrixone:1.1.2\" # Set image\nmo_ctl set_conf MO_DEPLOY_MODE=docker # Deployment Configuration\n</code></pre> <pre><code>MO_CONTAINER_NAME=\"mo\" # mo container name\nMO_CONTAINER_PORT=\"6001\" # mo port\nMO_CONTAINER_DEBUG_PORT=\"12345\" #container debug port\nMO_CONTAINER_CONF_HOST_PATH=\"\" # configuration file path\nMO_CONTAINER_CONF_CON_FILE=\"/etc/quickstart/launch.toml\" # configuration file\nMO_CONTAINER_LIMIT_MEMORY=\"\" # Memory limitations,Unit:m\nMO_CONTAINER_MEMORY_RATIO=90 # Memory default percentage\nMO_CONTAINER_AUTO_RESTART=\"yes\" # Set container automatic restart or not\nMO_CONTAINER_LIMIT_CPU=\"\" # cpu limitations,Unit: Number of cores\nMO_CONTAINER_EXTRA_MOUNT_OPTION=\"\" # additional mounting parameters,such as -v xx:xx:xx\n</code></pre> <ul> <li>Install Matrixone</li> </ul> <p>Depending on your needs, choose whether you want to keep your code up to date, or if you want to get the latest stable version of the code.</p> Get the MatrixOne(Develop Version) code to buildGet the MatrixOne(Stable Version) code to build <p>The main branch is the default branch, the code on the main branch is always up-to-date but not stable enough.</p> <pre><code>mo_ctl deploy main\n</code></pre> <pre><code>mo_ctl deploy v1.2.3\n</code></pre> <ul> <li>Launch MatrixOne server</li> </ul> <pre><code>mo_ctl start\n</code></pre> <p>Note</p> <p>The initial startup of MatrixOne approximately takes 20 to 30 seconds. After a brief wait, you can connect to MatrixOne using the MySQL client.</p>"},{"location":"MatrixOne/Get-Started/install-on-linux/install-on-linux-method3/#step-3-connect-to-matrixone","title":"Step 3: Connect to MatrixOne","text":"<p>In addition to using the MySQL client to connect to MatrixOne, you can also use the mo_ctl tool to connect when the mo_ctl tool is deployed. This section introduces the specific operations of two connection methods.</p> <ul> <li>MySQL client</li> </ul> <p>You can use the MySQL command-line client to connect to MatrixOne server. Open a new terminal window and enter the following command:</p> <pre><code>```\nmysql -h 127.0.0.1 -P 6001 -uroot -p\nEnter password:  # The default initial password is 111\n```\n</code></pre> <ul> <li>mo_ctl tool</li> </ul> <p>One-click connection to MatrixOne service through <code>mo_ctl connect</code> command.</p> <p>This command will invoke the MySQL Client tool to connect to the MatrixOne service automatically.</p> <pre><code>root@VM-16-2-debian:~# mo_ctl connect\n2023-07-07_10:30:20    [INFO]    Checking connectivity\n2023-07-07_10:30:20    [INFO]    Ok, connecting for user ...\nmysql: [Warning] Using a password on the command line interface can be insecure.\nWelcome to the MySQL monitor.  Commands end with ; or \\g.\nYour MySQL connection id is 15\nServer version: 8.0.30-MatrixOne-v1.2.3 MatrixOne\n\nCopyright (c) 2000, 2023, Oracle and/or its affiliates.\n\nOracle is a registered trademark of Oracle Corporation and/or its\naffiliates. Other names may be trademarks of their respective\nowners.\n\nType 'help;' or '\\h' for help. Type '\\c' to clear the current input statement.\n\nmysql&gt;\n</code></pre> <p>Note</p> <p>The above connection and login account is the initial accounts <code>root</code> and the password <code>111</code>; please change the initial password after logging in to MatrixOne; see MatrixOne Password Management. After changing the login username or password, you must set a new username and password through <code>mo_ctl set_conf</code>. For details, please refer to mo_ctl Tool.</p>"},{"location":"MatrixOne/Get-Started/install-on-macos/install-on-macos-method1/","title":"Building from source code in macOS","text":"<p>This document will guide you to deploy a standalone version of MatrixOne in a macOS environment using source code. You can use the mo_ctl tool to help you deploy and manage MatrixOne.</p> <p>MatrixOne supports x86 and ARM macOS systems. This article uses the Macbook M1 ARM version as an example to show the entire deployment process.</p>"},{"location":"MatrixOne/Get-Started/install-on-macos/install-on-macos-method1/#pre-dependency-reference","title":"Pre-dependency Reference","text":"<p>To install and use the stand-alone MatrixOne through source code, you need to depend on the following software packages.</p> Dependent software Version golang 1.22.3 or later gcc/clang gcc8.5 or later, clang13.0 or later git 2.20 or later MySQL Client 8.0 or later"},{"location":"MatrixOne/Get-Started/install-on-macos/install-on-macos-method1/#step-1-install-dependency","title":"Step 1: Install Dependency","text":""},{"location":"MatrixOne/Get-Started/install-on-macos/install-on-macos-method1/#1-install-go","title":"1. Install Go","text":"<ol> <li> <p>Click Go Download and install to enter its official documentation, and follow the installation steps to complete the Go installation.</p> </li> <li> <p>To verify whether Go is installed, please execute the code <code>go version</code>. When Go is installed successfully, the example code line is as follows:</p> <pre><code>&gt; go version\ngo version go1.22.5 darwin/arm64\n</code></pre> </li> </ol>"},{"location":"MatrixOne/Get-Started/install-on-macos/install-on-macos-method1/#2-install-gccclang","title":"2. Install GCC/Clang","text":"<ol> <li> <p>macOS generally has its own Clang compiler, which plays the same role as GCC. To verify whether the GCC is installed:</p> <pre><code>gcc -v\nbash: gcc: command not found\n</code></pre> <p>As shown in the code, the version of GCC is not displayed, the GCC/Clang environment needs to be installed.</p> </li> <li> <p>Click GCC Download and install to enter its official documentation, and follow the installation steps to complete the GCC installation. Or you can install Clang through Apple's official Xcode.</p> </li> <li> <p>To verify whether GCC/Clang is installed, please execute the code <code>gcc -v</code>. When GCC is installed successfully, the example code line is as follows:</p> <pre><code>Apple clang version 14.0.3 (clang-1403.0.22.14.1)\nTarget: arm64-apple-darwin22.5.0\nThread model: posix\nInstalledDir: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin\n</code></pre> </li> </ol>"},{"location":"MatrixOne/Get-Started/install-on-macos/install-on-macos-method1/#3-install-git","title":"3. Install Git","text":"<p>Install Git via the Official Documentation.</p> <p>Use the command <code>git version</code> to check whether the installation is successful. The code example of a successful installation is as follows:</p> <pre><code>&gt; git version\ngit version 2.40.0\n</code></pre>"},{"location":"MatrixOne/Get-Started/install-on-macos/install-on-macos-method1/#4-install-and-configure-mysql-client","title":"4. Install and configure MySQL Client","text":"<ol> <li> <p>Click MySQL Community Downloads to enter into the MySQL client download and installation page. According to your operating system and hardware environment, drop down to select Select Operating System &gt; macOS, then drop down to select Select OS Version, and select the download installation package to install as needed.</p> </li> <li> <p>Configure the MySQL client environment variables:</p> <ol> <li> <p>Open a new terminal window and enter the following command:</p> <pre><code>cd ~\nsudo vim .bash_profile\n</code></pre> </li> <li> <p>After pressing Enter on the keyboard to execute the above command, you need to enter the root user password, which is the root password you set in the installation window when you installed the MySQL client. If no password has been set, press Enter to skip the password.</p> </li> <li> <p>After entering/skiping the root password, you will enter .bash_profile, click i on the keyboard to enter the insert state, and you can enter the following command at the bottom of the file:</p> <pre><code>export PATH=${PATH}:/usr/local/mysql/bin\n</code></pre> </li> </ol> </li> <li> <p>After the input is completed, click esc on the keyboard to exit the insert state, and enter <code>:wq</code> at the bottom to save and exit.</p> </li> <li> <p>Enter the command <code>source .bash_profile</code>, press Enter to execute, and run the environment variable.</p> </li> <li> <p>To test whether MySQL is available:</p> <p>Run the command <code>mysql --version</code>, if MySQL client is installed successfully, the example code line is as follows: <code>mysql  Ver 8.0.31 for macos12 on arm64 (MySQL Community Server - GPL)</code></p> </li> </ol>"},{"location":"MatrixOne/Get-Started/install-on-macos/install-on-macos-method1/#step-2-install-the-mo_ctl-tool","title":"Step 2: Install the mo_ctl tool","text":"<p>mo_ctl is a command-line tool for deploying, installing, and managing MatrixOne. It is very convenient to perform various operations on MatrixOne. See mo_ctl Tool for complete usage details.</p> <ol> <li> <p>First, install the <code>wget</code> download tool: Go to the Homebrew page and follow the steps to install Homebrew first, then install <code>wget</code>. To verify whether <code>wget</code> is installed successfully, you can use the following command line:</p> <pre><code>wget -V\n</code></pre> <p>The successful installation results (only part of the code is displayed) are as follows:</p> <pre><code>GNU Wget 1.21.3 \u5728 darwin21.3.0 \u4e0a\u7f16\u8bd1\n...\nCopyright \u00a9 2015 Free Software Foundation, Inc.\n...\n</code></pre> </li> <li> <p>The mo_ctl tool can be installed through the following command:</p> <pre><code>wget https://raw.githubusercontent.com/matrixorigin/mo_ctl_standalone/main/install.sh &amp;&amp; sudo -u $(whoami) bash +x ./install.sh\n</code></pre> </li> <li> <p>After the installation is complete, verify whether the installation is successful through the <code>mo_ctl</code> command:</p> <pre><code>&gt; mo_ctl\nUsage             : mo_ctl [option_1] [option_2]\n\n[option_1]      : available: connect | ddl_connect | deploy | get_branch | get_cid | get_conf | help | pprof | precheck | restart | set_conf | sql | start | status | stop | uninstall | upgrade | watchdog\n1) connect      : connect to mo via mysql client using connection info configured\n2) ddl_convert  : convert ddl file to mo format from other types of database\n3) deploy       : deploy mo onto the path configured\n4) get_branch   : upgrade or downgrade mo from current version to a target commit id or stable version\n5) get_cid      : print mo git commit id from the path configured\n6) get_conf     : get configurations\n7) help         : print help information\n8) pprof        : collect pprof information\n9) precheck     : check pre-requisites for mo_ctl\n10) restart     : a combination operation of stop and start\n11) set_conf    : set configurations\n12) sql         : execute sql from string, or a file or a path containg multiple files\n13) start       : start mo-service from the path configured\n14) status      : check if there's any mo process running on this machine\n15) stop        : stop all mo-service processes found on this machine\n16) uninstall   : uninstall mo from path MO_PATH=/data/mo//matrixone\n17) upgrade     : upgrade or downgrade mo from current version to a target commit id or stable version\n18) watchdog    : setup a watchdog crontab task for mo-service to keep it alive\ne.g.            : mo_ctl status\n[option_2]      : Use \" mo_ctl [option_1] help \" to get more info\ne.g.            : mo_ctl deploy help\n</code></pre> </li> </ol>"},{"location":"MatrixOne/Get-Started/install-on-macos/install-on-macos-method1/#set-mo_ctl-parameters","title":"Set mo_ctl parameters","text":"<p>Some parameters in the mo_ctl tool need to be set and you can view all current parameters through <code>mo_ctl get_conf</code>.</p> <pre><code>&gt; mo_ctl get_conf\n2023-07-07_15:31:24    [INFO]    Below are all configurations set in conf file /Users/username/mo_ctl/conf/env.sh\nMO_PATH=\"/Users/username/mo/matrixone\"\nMO_LOG_PATH=\"${MO_PATH}/matrixone/logs\"\nMO_HOST=\"127.0.0.1\"\nMO_PORT=\"6001\"\nMO_USER=\"root\"\nMO_PW=\"111\"\nMO_DEPLOY_MODE=\"host\"\nMO_REPO=\"matrixorigin/matrixone\"\nMO_IMAGE_PREFIX=\"nightly\"\nMO_IMAGE_FULL=\"\"\nMO_CONTAINER_NAME=\"mo\"\nMO_CONTAINER_PORT=\"6001\"\nMO_CONTAINER_DEBUG_PORT=\"12345\"\nCHECK_LIST=(\"go\" \"gcc\" \"git\" \"mysql\" \"docker\")\nGCC_VERSION=\"8.5.0\"\nCLANG_VERSION=\"13.0\"\nGO_VERSION=\"1.22\"\nMO_GIT_URL=\"https://github.com/matrixorigin/matrixone.git\"\nMO_DEFAULT_VERSION=\"v1.2.3\"\nGOPROXY=\"https://goproxy.cn,direct\"\nSTOP_INTERVAL=\"5\"\nSTART_INTERVAL=\"2\"\nMO_DEBUG_PORT=\"9876\"\nMO_CONF_FILE=\"${MO_PATH}/matrixone/etc/launch/launch.toml\"\nRESTART_INTERVAL=\"2\"\nPPROF_OUT_PATH=\"/tmp/pprof-test/\"\nPPROF_PROFILE_DURATION=\"30\"\n</code></pre> <p>Generally, the parameters that need to be adjusted are as follows:</p> <pre><code>mo_ctl set_conf MO_PATH=\"yourpath\" # Set custom MatrixOne download path\nmo_ctl set_conf MO_GIT_URL=\"https://githubfast.com/matrixorigin/matrixone.git\" # For the problem of slow downloading from the original GitHub address, set image download address\nmo_ctl set_conf MO_DEFAULT_VERSION=\"v\" # Set the version of MatrixOne downloaded\nmo_ctl set_conf MO_DEPLOY_MODE=git  # Deployment Configuration\n</code></pre>"},{"location":"MatrixOne/Get-Started/install-on-macos/install-on-macos-method1/#step-3-get-matrixone-code","title":"Step 3: Get MatrixOne code","text":"<p>Depending on your needs, choose whether you want to keep your code up to date, or if you want to get the latest stable version of the code.</p> Get the MatrixOne(Develop Version) code to buildGet the MatrixOne(Stable Version) code to build <p>The main branch is the default branch, the code on the main branch is always up-to-date but not stable enough.</p> <pre><code>mo_ctl deploy main\n</code></pre> <pre><code>mo_ctl deploy v1.2.3\n</code></pre>"},{"location":"MatrixOne/Get-Started/install-on-macos/install-on-macos-method1/#step-4-launch-matrixone-server","title":"Step 4: Launch MatrixOne server","text":"<p>Launch the MatrixOne service through the <code>mo_ctl start</code> command.</p> <p>If the operation is regular, the following log will appear. The relevant operation logs of MatrixOne will be in <code>/yourpath/matrixone/logs/</code>.</p> <pre><code>&gt; mo_ctl start\n2023-07-07_15:33:45    [INFO]    No mo-service is running\n2023-07-07_15:33:45    [INFO]    Starting mo-service: cd /Users/username/mo/matrixone/matrixone/ &amp;&amp; /Users/username/mo/matrixone/matrixone/mo-service -daemon -debug-http :9876 -launch /Users/username/mo/matrixone/matrixone/etc/launch/launch.toml &gt;/Users/username/mo/matrixone/matrixone/logs/stdout-20230707_153345.log 2&gt;/Users/username/mo/matrixone/matrixone/logs/stderr-20230707_153345.log\n2023-07-07_15:33:45    [INFO]    Wait for 2 seconds\n2023-07-07_15:33:48    [INFO]    At least one mo-service is running. Process info:\n2023-07-07_15:33:48    [INFO]      501 66932     1   0  3:33PM ??         0:00.27 /Users/username/mo/matrixone/matrixone/mo-service -daemon -debug-http :9876 -launch /Users/username/mo/matrixone/matrixone/etc/launch/launch.toml\n2023-07-07_15:33:48    [INFO]    Pids:\n2023-07-07_15:33:48    [INFO]    66932\n2023-07-07_15:33:48    [INFO]    Start succeeded\n</code></pre> <p>Note</p> <p>The initial startup of MatrixOne approximately takes 20 to 30 seconds. After a brief wait, you can connect to MatrixOne using the MySQL client.</p>"},{"location":"MatrixOne/Get-Started/install-on-macos/install-on-macos-method1/#step-5-connect-to-matrixone","title":"Step 5: Connect to MatrixOne","text":"<p>One-click connection to MatrixOne service through <code>mo_ctl connect</code> command.</p> <p>This command will invoke the MySQL Client tool to connect to the MatrixOne service automatically.</p> <pre><code>&gt; mo_ctl connect\n2023-07-07_10:30:20    [INFO]    Checking connectivity\n2023-07-07_10:30:20    [INFO]    Ok, connecting for user ...\nmysql: [Warning] Using a password on the command line interface can be insecure.\nWelcome to the MySQL monitor.  Commands end with ; or \\g.\nYour MySQL connection id is 15\nServer version: 8.0.30-MatrixOne-v1.2.3 MatrixOne\n\nCopyright (c) 2000, 2023, Oracle and/or its affiliates.\n\nOracle is a registered trademark of Oracle Corporation and/or its\naffiliates. Other names may be trademarks of their respective\nowners.\n\nType 'help;' or '\\h' for help. Type '\\c' to clear the current input statement.\n\nmysql&gt;\n</code></pre> <p>Note</p> <p>The above connection and login account is the initial accounts <code>root</code> and the password <code>111</code>; please change the initial password after logging in to MatrixOne; see MatrixOne Password Management. After changing the login username or password, you must set a new username and password through <code>mo_ctl set_conf</code>. For details, please refer to mo_ctl Tool.</p>"},{"location":"MatrixOne/Get-Started/install-on-macos/install-on-macos-method2/","title":"Using binary package in macOS","text":"<p>This document will guide you to deploy a stand-alone version of MatrixOne in a macOS environment using binary packages. This installation solution does not need to install pre-dependencies and compile source packages. You can use the mo_ctl tool to help you deploy and manage MatrixOne.</p> <p>MatrixOne supports x86 and ARM macOS systems. This article uses the Macbook M1 ARM version as an example to show the entire deployment process.</p>"},{"location":"MatrixOne/Get-Started/install-on-macos/install-on-macos-method2/#pre-dependency-reference","title":"Pre-dependency Reference","text":"<p>Only the MySQL Client tool must be installed to deploy and install MatrixOne through the binary package.</p> Dependent software Version MySQL Client 8.0 or later"},{"location":"MatrixOne/Get-Started/install-on-macos/install-on-macos-method2/#step-1-install-dependency","title":"Step 1: Install Dependency","text":""},{"location":"MatrixOne/Get-Started/install-on-macos/install-on-macos-method2/#install-and-configure-mysql-client","title":"Install and configure MySQL Client","text":"<ol> <li> <p>Click MySQL Community Downloads to enter into the MySQL client download and installation page. According to your operating system and hardware environment, drop down to select Select Operating System &gt; macOS, then drop down to select Select OS Version, and select the download installation package to install as needed.</p> </li> <li> <p>Configure the MySQL client environment variables:</p> <ol> <li> <p>Open a new terminal window and enter the following command:</p> <pre><code>cd ~\nsudo vim .bash_profile\n</code></pre> </li> <li> <p>After pressing Enter on the keyboard to execute the above command, you need to enter the root user password, which is the root password you set in the installation window when you installed the MySQL client. If no password has been set, press Enter to skip the password.</p> </li> <li> <p>After entering/skiping the root password, you will enter .bash_profile, click i on the keyboard to enter the insert state, and you can enter the following command at the bottom of the file:</p> <pre><code>export PATH=${PATH}:/usr/local/mysql/bin\n</code></pre> </li> </ol> </li> <li> <p>After the input is completed, click esc on the keyboard to exit the insert state, and enter <code>:wq</code> at the bottom to save and exit.</p> </li> <li> <p>Enter the command <code>source .bash_profile</code>, press Enter to execute, and run the environment variable.</p> </li> <li> <p>To test whether MySQL is available:</p> <p>Run the command <code>mysql --version</code>, if MySQL client is installed successfully, the example code line is as follows: <code>mysql  Ver 8.0.31 for macos12 on arm64 (MySQL Community Server - GPL)</code></p> </li> </ol>"},{"location":"MatrixOne/Get-Started/install-on-macos/install-on-macos-method2/#step-2-download-binary-packages-and-decompress","title":"Step 2: Download binary packages and decompress","text":""},{"location":"MatrixOne/Get-Started/install-on-macos/install-on-macos-method2/#1-install-wget-or-curl","title":"1. Install <code>wget</code> or <code>curl</code>","text":"<p>We'll provide a method of Using binary package to install MatrixOne. If you prefer to use the command line, you can pre-install <code>wget</code> or <code>curl</code>.</p> <p>Tips: It is recommended that you download and install one of these two tools to facilitate future operations.</p> Install <code>wget</code>Install <code>curl</code> <p>The <code>wget</code> tool is used to download files from the specified URL. <code>wget</code> is a unique file download tool; it is very stable and has a download speed.</p> <p>Go to the Homebrew page and follow the instructions to install Homebrew first and then install <code>wget</code>.  To verify that <code>wget</code> is installed successfully, use the following command line:</p> <pre><code>wget -V\n</code></pre> <p>The successful installation results (only part of the code is displayed) are as follows:</p> <pre><code>GNU Wget 1.21.3 \u5728 darwin21.3.0 \u4e0a\u7f16\u8bd1.\n...\nCopyright \u00a9 2015 Free Software Foundation, Inc.\n...\n</code></pre> <p><code>curl</code> is a file transfer tool that works from the command line using URL rules. <code>curl</code> is a comprehensive transfer tool that supports file upload and download.</p> <p>Go to the Curl website according to the official installation guide to install <code>curl</code>.  To verify that <code>curl</code> is installed successfully, use the following command line:</p> <pre><code>curl --version\n</code></pre> <p>The successful installation results (only part of the code is displayed) are as follows:</p> <pre><code>curl 7.84.0 (x86_64-apple-darwin22.0) libcurl/7.84.0 (SecureTransport) LibreSSL/3.3.6 zlib/1.2.21 nghttp2/1.47.0\nRelease-Date: 2022-06-27\n...\n</code></pre>"},{"location":"MatrixOne/Get-Started/install-on-macos/install-on-macos-method2/#2-download-binary-packages-and-decompress","title":"2. Download binary packages and decompress","text":"<p>Download Method 1 and Download Method 2 need to install the download tools <code>wget</code> or <code>curl</code> first.</p> Downloading method 1: Using <code>wget</code> to install binary packagesDownloading method 2: Using <code>curl</code> to install binary packagesDownloading method 3: Go to the page and download <p>Binary for x86 architecture system:</p> <pre><code>mkdir -p /User/username/mo/matrixone &amp; cd /User/username/mo\nwget https://github.com/matrixorigin/matrixone/releases/download/v1.2.3/mo-v1.2.3-darwin-x86_64.zip\nunzip -d matrixone/ mo-v1.2.3-darwin-x86_64.zip\n</code></pre> <p>Binary for ARM architecture system:</p> <pre><code>mkdir -p /User/username/mo/matrixone &amp; cd /User/username/mo\nwget https://github.com/matrixorigin/matrixone/releases/download/v1.2.3/mo-v1.2.3-darwin-arm64.zip\nunzip -d matrixone/ mo-v1.2.3-darwin-arm64.zip\n</code></pre> <p>Binary for x86 architecture system:</p> <pre><code>mkdir -p /User/username/mo/matrixone &amp; cd /User/username/mo\ncurl -OL https://github.com/matrixorigin/matrixone/releases/download/v1.2.3/mo-v1.2.3-darwin-x86_64.zip\nunzip -d matrixone/ mo-v1.2.3-darwin-x86_64.zip\n</code></pre> <p>Binary for ARM architecture system:</p> <pre><code>mkdir -p /User/username/mo/matrixone &amp; cd /User/username/mo\ncurl -OL https://github.com/matrixorigin/matrixone/releases/download/v1.2.3/mo-v1.2.3-darwin-arm64.zip\nunzip -d matrixone/ mo-v-darwin-arm64.zip\n</code></pre> <p>If you want a more intuitive way to download the page, go to the version 1.2.3, pull down to find the Assets column, and click the installation package mo-v1.2.3-darwin-x86_64.zip or mo-v1.2.3-darwin-arm64.zip can be downloaded.</p>"},{"location":"MatrixOne/Get-Started/install-on-macos/install-on-macos-method2/#step-3-install-the-mo_ctl-tool","title":"Step 3: Install the mo_ctl tool","text":"<p>mo_ctl is a command-line tool for deploying, installing, and managing MatrixOne. It is very convenient to perform various operations on MatrixOne. See mo_ctl Tool for complete usage details.</p>"},{"location":"MatrixOne/Get-Started/install-on-macos/install-on-macos-method2/#1-install-the-mo_ctl-tool","title":"1. Install the mo_ctl tool","text":"<p>The mo_ctl tool can be installed through the following command:</p> <pre><code>wget https://raw.githubusercontent.com/matrixorigin/mo_ctl_standalone/main/install.sh &amp;&amp; sudo -u $(whoami) bash +x ./install.sh\n</code></pre>"},{"location":"MatrixOne/Get-Started/install-on-macos/install-on-macos-method2/#2-set-mo_ctl-parameters","title":"2. Set mo_ctl parameters","text":"<p>The parameters that need to be adjusted are as follows:</p> <pre><code>mo_ctl set_conf MO_PATH=\"/yourpath/mo-v1.2.3-xx-xx\" # Set the MO_PATH to the directory where the binary files are extracted\nmo_ctl set_conf MO_CONF_FILE=\"/yourpath/mo-v1.2.3-xx-xx/etc/launch/launch.toml\" # Set the MO_CONF_FILE path\nmo_ctl set_conf MO_DEPLOY_MODE=binary  #Deployment Configuration\n</code></pre>"},{"location":"MatrixOne/Get-Started/install-on-macos/install-on-macos-method2/#step-4-launch-matrixone-server","title":"Step 4: Launch MatrixOne server","text":"<p>Launch the MatrixOne service through the <code>mo_ctl start</code> command.</p> <p>If the operation is regular, the following log will appear. The relevant operation logs of MatrixOne will be in `/yourpath/mo-v1.2.3-xx-xx/matrixone/logs/ .</p> <pre><code>&gt; mo_ctl start\n2024-03-07 14:34:04.942 UTC+0800    [INFO]    No mo-service is running\n2024-03-07 14:34:04.998 UTC+0800    [INFO]    Get conf succeeded: MO_DEPLOY_MODE=\"binary\"\n2024-03-07 14:34:05.024 UTC+0800    [INFO]    GO memory limit(Mi): 14745\n2024-03-07 14:34:05.072 UTC+0800    [INFO]    Starting mo-service: cd /Users/admin/mo-v1.2.3-darwin-arm64/ &amp;&amp; GOMEMLIMIT=14745MiB /Users/admin/mo-v1.2.3-darwin-arm64/mo-service -daemon -debug-http :9876 -launch /Users/admin/mo-v1.2.3-darwin-arm64/etc/launch/launch.toml &gt;/Users/admin/mo-v1.2.3-darwin-arm64/matrixone/logs/stdout-20240307_143405.log 2&gt;/Users/admin/mo-v1.2.3-darwin-arm64/matrixone/logs/stderr-20240307_143405.log\n2024-03-07 14:34:05.137 UTC+0800    [INFO]    Wait for 2 seconds\n2024-03-07 14:34:07.261 UTC+0800    [INFO]    At least one mo-service is running. Process info: \n  501 27145     1   0  2:34\u4e0b\u5348 ??         0:00.18 /Users/admin/mo-v1.2.3-darwin-arm64/mo-service -daemon -debug-http :9876 -launch /Users/admin/mo-v1.2.3-darwin-arm64/etc/launch/launch.toml\n2024-03-07 14:34:07.284 UTC+0800    [INFO]    List of pid(s): \n27145\n2024-03-07 14:34:07.308 UTC+0800    [INFO]    Start succeeded\n</code></pre> <p>Note</p> <p>The initial startup of MatrixOne approximately takes 20 to 30 seconds. After a brief wait, you can connect to MatrixOne using the MySQL client.</p>"},{"location":"MatrixOne/Get-Started/install-on-macos/install-on-macos-method2/#step-5-connect-to-matrixone","title":"Step 5: Connect to MatrixOne","text":"<p>One-click connection to MatrixOne service through <code>mo_ctl connect</code> command.</p> <p>This command will invoke the MySQL Client tool to connect to the MatrixOne service automatically.</p> <pre><code>&gt; mo_ctl connect\n2024-03-07 14:34:59.902 UTC+0800    [INFO]    Checking connectivity\n2024-03-07 14:34:59.942 UTC+0800    [INFO]    Ok, connecting for user ... \nWelcome to the MySQL monitor.  Commands end with ; or \\g.\nYour MySQL connection id is 426\nServer version: 8.0.30-MatrixOne-v1.2.3 MatrixOne\n\nCopyright (c) 2000, 2018, Oracle and/or its affiliates. All rights reserved.\n\nOracle is a registered trademark of Oracle Corporation and/or its\naffiliates. Other names may be trademarks of their respective\nowners.\n\nType 'help;' or '\\h' for help. Type '\\c' to clear the current input statement.\n\nmysql&gt;\n</code></pre> <p>Note</p> <p>The above connection and login account is the initial accounts <code>root</code> and the password <code>111</code>; please change the initial password after logging in to MatrixOne; see MatrixOne Password Management. After changing the login username or password, you must set a new username and password through <code>mo_ctl set_conf</code>. For details, please refer to mo_ctl Tool.</p>"},{"location":"MatrixOne/Get-Started/install-on-macos/install-on-macos-method3/","title":"Using Docker","text":"<p>This document will guide you build standalone MatrixOne using Docker.</p>"},{"location":"MatrixOne/Get-Started/install-on-macos/install-on-macos-method3/#step-1-pre-dependency-reference","title":"Step 1: Pre-dependency Reference","text":""},{"location":"MatrixOne/Get-Started/install-on-macos/install-on-macos-method3/#download-and-install-docker","title":"Download and install Docker","text":"<ol> <li> <p>Click Get Docker, enter into the Docker's official document page, depending on your operating system, download and install the corresponding Docker.  It is recommended to choose Docker version 20.10.18 or later and strive to maintain consistency between the Docker client and Docker server versions.</p> </li> <li> <p>After the installation, you can verify the Docker version by using the following lines:</p> <pre><code>docker --version\n</code></pre> <p>The successful installation results are as follows:</p> <pre><code>Docker version 20.10.17, build 100c701\n</code></pre> </li> <li> <p>Open your local Docker client and launch Docker.</p> </li> </ol>"},{"location":"MatrixOne/Get-Started/install-on-macos/install-on-macos-method3/#install-and-configure-mysql-client","title":"Install and configure MySQL Client","text":"<ol> <li> <p>Click MySQL Community Downloads to enter into the MySQL client download and installation page. According to your operating system and hardware environment, drop down to select Select Operating System &gt; macOS, then drop down to select Select OS Version, and select the download installation package to install as needed.</p> </li> <li> <p>Configure the MySQL client environment variables:</p> <ol> <li> <p>Open a new terminal window and enter the following command:</p> <pre><code>cd ~\nsudo vim .bash_profile\n</code></pre> </li> <li> <p>After pressing Enter on the keyboard to execute the above command, you need to enter the root user password, which is the root password you set in the installation window when you installed the MySQL client. If no password has been set, press Enter to skip the password.</p> </li> <li> <p>After entering/skiping the root password, you will enter .bash_profile, click i on the keyboard to enter the insert state, and you can enter the following command at the bottom of the file:</p> <pre><code>export PATH=${PATH}:/usr/local/mysql/bin\n</code></pre> </li> </ol> </li> <li> <p>After the input is completed, click esc on the keyboard to exit the insert state, and enter <code>:wq</code> at the bottom to save and exit.</p> </li> <li> <p>Enter the command <code>source .bash_profile</code>, press Enter to execute, and run the environment variable.</p> </li> <li> <p>To test whether MySQL is available:</p> <p>Run the command <code>mysql --version</code>, if MySQL client is installed successfully, the example code line is as follows: <code>mysql  Ver 8.0.31 for macos12 on arm64 (MySQL Community Server - GPL)</code></p> </li> </ol>"},{"location":"MatrixOne/Get-Started/install-on-macos/install-on-macos-method3/#step-2-deploying-matrixone","title":"Step 2: Deploying  MatrixOne","text":""},{"location":"MatrixOne/Get-Started/install-on-macos/install-on-macos-method3/#docker-deployment","title":"Docker Deployment","text":"<p>Create and run the container of MatrixOne</p> <p>It will pull the image from Docker Hub if not exists. You can choose to pull the stable version image or the develop version image.</p> Stable Version Image(1.2.3 version)Develop Version Image <pre><code>docker pull matrixorigin/matrixone:1.2.3\ndocker run -d -p 6001:6001 --name matrixone matrixorigin/matrixone:1.2.3\n</code></pre> <p>If you are using the network in mainland China, you can pull the MatrixOne stable version image on Alibaba Cloud:</p> <pre><code>docker pull registry.cn-shanghai.aliyuncs.com/matrixorigin/matrixone:1.2.3\ndocker run -d -p 6001:6001 --name matrixone registry.cn-shanghai.aliyuncs.com/matrixorigin/matrixone:1.2.3\n</code></pre> <p>If you want to pull the develop version image, see Docker Hub, get the image tag. An example as below:</p> <pre><code>docker pull matrixorigin/matrixone:nightly-commitnumber\ndocker run -d -p 6001:6001 --name matrixone matrixorigin/matrixone:nightly-commitnumber\n</code></pre> <p>If you are using the network in mainland China, you can pull the MatrixOne develop version image on Alibaba Cloud:</p> <pre><code>docker pull registry.cn-shanghai.aliyuncs.com/matrixorigin/matrixone:nightly-commitnumber\ndocker run -d -p 6001:6001 --name matrixone registry.cn-shanghai.aliyuncs.com/matrixorigin/matrixone:nightly-commitnumber\n</code></pre> <p>Note: The nightly version is updated once a day.</p> <p>If your Docker version is lower than 20.10.18 or the Docker client and server versions are inconsistent, upgrading to the latest stable version before attempting is recommended. If you choose to proceed with the current versions, you need to add the parameter <code>--privileged=true</code> to the <code>docker run</code> command, as shown below:</p> <pre><code>docker run -d -p 6001:6001 --name matrixone --privileged=true matrixorigin/matrixone:1.2.3\n</code></pre> <p>Note</p> <p>The initial startup of MatrixOne approximately takes 20 to 30 seconds. After a brief wait, you can connect to MatrixOne using the MySQL client.</p> <p>If you need to mount data directories or customize configure files, see Mount the directory to Docker container.</p>"},{"location":"MatrixOne/Get-Started/install-on-macos/install-on-macos-method3/#mo_ctl-deployment","title":"Mo_ctl Deployment","text":"<p>mo_ctl is a command-line tool for deploying, installing, and managing MatrixOne. It is very convenient to perform various operations on MatrixOne. See mo_ctl Tool for complete usage details.</p> <ul> <li>Install the mo_ctl tool</li> </ul> <p>The mo_ctl tool can be installed through the following command:</p> <pre><code>wget https://raw.githubusercontent.com/matrixorigin/mo_ctl_standalone/main/install.sh &amp;&amp; bash +x ./install.sh\n</code></pre> <ul> <li>Set mo_ctl parameters</li> </ul> <p>The parameters that need to be adjusted are as follows:</p> <pre><code>mo_ctl set_conf MO_CONTAINER_DATA_HOST_PATH=\"/yourpath/mo/\" # Set the data directory for host\nmo_ctl set_conf MO_CONTAINER_IMAGE=\"matrixorigin/matrixone:1.2.3\" # Set image\nmo_ctl set_conf MO_DEPLOY_MODE=docker # Deployment Configuration\n</code></pre> <pre><code>MO_CONTAINER_NAME=\"mo\" # mo container name\nMO_CONTAINER_PORT=\"6001\" # mo port\nMO_CONTAINER_DEBUG_PORT=\"12345\" #container debug port\nMO_CONTAINER_CONF_HOST_PATH=\"\" # configuration file path\nMO_CONTAINER_CONF_CON_FILE=\"/etc/quickstart/launch.toml\" # configuration file\nMO_CONTAINER_LIMIT_MEMORY=\"\" # Memory limitations,Unit:m\nMO_CONTAINER_MEMORY_RATIO=90 # Memory default percentage\nMO_CONTAINER_AUTO_RESTART=\"yes\" # Set container automatic restart or not\nMO_CONTAINER_LIMIT_CPU=\"\" # cpu limitations,Unit: Number of cores\nMO_CONTAINER_EXTRA_MOUNT_OPTION=\"\" # additional mounting parameters,such as -v xx:xx:xx\n</code></pre> <ul> <li>Install Matrixone</li> </ul> <p>Depending on your needs, choose whether you want to keep your code up to date, or if you want to get the latest stable version of the code.</p> Get the MatrixOne(Develop Version) code to buildGet the MatrixOne(Stable Version) code to build <p>The main branch is the default branch, the code on the main branch is always up-to-date but not stable enough.</p> <pre><code>mo_ctl deploy main\n</code></pre> <pre><code>mo_ctl deploy v1.2.3\n</code></pre> <ul> <li>Launch MatrixOne server</li> </ul> <pre><code>mo_ctl start\n</code></pre> <p>Note</p> <p>The initial startup of MatrixOne approximately takes 20 to 30 seconds. After a brief wait, you can connect to MatrixOne using the MySQL client.</p>"},{"location":"MatrixOne/Get-Started/install-on-macos/install-on-macos-method3/#step-3-connect-to-matrixone","title":"Step 3: Connect to MatrixOne","text":"<p>In addition to using the MySQL client to connect to MatrixOne, you can also use the mo_ctl tool to connect when the mo_ctl tool is deployed. This section introduces the specific operations of two connection methods.</p> <ul> <li>MySQL client</li> </ul> <p>You can use the MySQL command-line client to connect to MatrixOne server. Open a new terminal window and enter the following command:</p> <pre><code>```\nmysql -h 127.0.0.1 -P 6001 -uroot -p\nEnter password:  # The default initial password is 111\n```\n</code></pre> <ul> <li>mo_ctl tool</li> </ul> <p>One-click connection to MatrixOne service through <code>mo_ctl connect</code> command.</p> <p>This command will invoke the MySQL Client tool to connect to the MatrixOne service automatically.</p> <pre><code>root@VM-16-2-debian:~# mo_ctl connect\n2023-07-07_10:30:20    [INFO]    Checking connectivity\n2023-07-07_10:30:20    [INFO]    Ok, connecting for user ...\nmysql: [Warning] Using a password on the command line interface can be insecure.\nWelcome to the MySQL monitor.  Commands end with ; or \\g.\nYour MySQL connection id is 15\nServer version: 8.0.30-MatrixOne-v1.2.3 MatrixOne\n\nCopyright (c) 2000, 2023, Oracle and/or its affiliates.\n\nOracle is a registered trademark of Oracle Corporation and/or its\naffiliates. Other names may be trademarks of their respective\nowners.\n\nType 'help;' or '\\h' for help. Type '\\c' to clear the current input statement.\n\nmysql&gt;\n</code></pre> <p>Note</p> <p>The above connection and login account is the initial accounts <code>root</code> and the password <code>111</code>; please change the initial password after logging in to MatrixOne; see MatrixOne Password Management. After changing the login username or password, you must set a new username and password through <code>mo_ctl set_conf</code>. For details, please refer to mo_ctl Tool.</p>"},{"location":"MatrixOne/Maintain/mo-directory-structure/","title":"MatrixOne Directory Structure","text":"<p>After MatrixOne has been installed and connected, the MatrixOne automatically generates the following directories for storing data files or metadata information.</p> <p>Enter into the matrixone directory and execute <code>ls</code> to view the directory structure. The related directory structure and uses are as follows:</p> <p>matrixone    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0//MatrixOne main directory |-- etc   \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0//configuration file directory \u2502\u00a0\u00a0\u00a0\u00a0 |-- quickstart \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0//configration file directory |-- mo-data  \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0//data file directory \u2502\u00a0\u00a0\u00a0\u00a0 |-- local   \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0//local fileservice directory \u2502\u00a0\u00a0\u00a0\u00a0 \u2502\u00a0\u00a0\u00a0\u00a0 |-- cnservice\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0//cn node information directory \u2502\u00a0\u00a0\u00a0\u00a0 \u2502\u00a0\u00a0\u00a0\u00a0 |-- dnservice   \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0//TN node information directory \u2502\u00a0\u00a0\u00a0\u00a0 |-- etl  \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0//external table directory \u2502\u00a0\u00a0\u00a0\u00a0 \u2502\u00a0\u00a0\u00a0\u00a0      |-- sys \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0//Which account does the external table information belong to \u2502\u00a0\u00a0\u00a0\u00a0 \u2502\u00a0\u00a0\u00a0\u00a0          |--  logs \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0//type of statistics \u2502\u00a0\u00a0\u00a0\u00a0 \u2502\u00a0\u00a0\u00a0\u00a0             |-- 2022 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0//the year of statistics \u2502\u00a0\u00a0\u00a0\u00a0 \u2502\u00a0\u00a0\u00a0\u00a0                 |-- 10  \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0//month of statistics \u2502\u00a0\u00a0\u00a0\u00a0 \u2502\u00a0\u00a0\u00a0\u00a0                     |-- 27 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0//the number of days of statistics \u2502\u00a0\u00a0\u00a0\u00a0 \u2502\u00a0\u00a0\u00a0\u00a0                         |-- metric \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0//system indicators storage directory \u2502\u00a0\u00a0\u00a0\u00a0 \u2502\u00a0\u00a0\u00a0\u00a0                         |-- rawlog \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0//log storage directory \u2502\u00a0\u00a0\u00a0\u00a0 \u2502\u00a0\u00a0\u00a0\u00a0                         |-- statement_info \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0//information storage directory \u2502\u00a0\u00a0\u00a0\u00a0 \u2502\u00a0\u00a0       \u00a0\u00a0|-- merged \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0//Merge records of past external table information \u2502\u00a0\u00a0\u00a0\u00a0 \u2502\u00a0\u00a0\u00a0\u00a0                |--  2022 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0//the year of statistics \u2502\u00a0\u00a0\u00a0\u00a0 \u2502\u00a0\u00a0\u00a0\u00a0                    |--  10  \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0//month of statistics \u2502\u00a0\u00a0\u00a0\u00a0 \u2502\u00a0\u00a0\u00a0\u00a0                       |--  27 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0//the number of days of statistics \u2502\u00a0\u00a0\u00a0\u00a0 \u2502\u00a0\u00a0\u00a0\u00a0                         |-- metric \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0//system indicators storage directory \u2502\u00a0\u00a0\u00a0\u00a0 \u2502\u00a0\u00a0\u00a0\u00a0                         |-- rawlog \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0//log storage directory \u2502\u00a0\u00a0\u00a0\u00a0 \u2502\u00a0\u00a0\u00a0\u00a0                         |-- statement_info \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0//information storage directory \u2502\u00a0\u00a0\u00a0\u00a0 |-- logservice  \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0//logservice directory |   \u00a0\u00a0  \u00a0|-- 7c4dccb4-4d3c-41f8-b482-5251dc7a41bf \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0//logservice node directory (randomly generated uuid) \u2502\u00a0\u00a0\u00a0\u00a0     |--hostname \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0//MatrixOne server domain name \u2502\u00a0\u00a0\u00a0\u00a0     \u2502\u00a0\u00a0\u00a0\u00a0 |-- 00000000000000000001 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0//snapshot directory \u2502\u00a0\u00a0\u00a0\u00a0     |    \u00a0\u00a0\u00a0|-- exported-snapshot \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0//exporting snapshot Directory |\u00a0 \u00a0\u00a0\u00a0\u2502\u00a0\u00a0\u00a0\u00a0   |-- snapshot-part-n \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0//snapshot partial directory \u2502\u00a0\u00a0\u00a0\u00a0     \u2502\u00a0\u00a0\u00a0\u00a0     |-- tandb \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0//bootstrap directory |-- s3  \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0//data storage directory</p>"},{"location":"MatrixOne/Maintain/mo_ctl/","title":"mo_ctl Tool","text":"<p><code>mo_ctl</code> is a command-line tool that helps you deploy and install MatrixOne, start and stop control, and connect to the database.</p>"},{"location":"MatrixOne/Maintain/mo_ctl/#feature-overview","title":"Feature Overview","text":"<p>The operating systems that <code>mo_ctl</code> has adapted so far are shown in the table below:</p> OS Version Debian 11 and above Ubuntu 20.04 and above macOS Monterey 12.3 and above <p>The current function list of <code>mo_ctl</code> is shown in the table below.</p> Command Function <code>mo_ctl help</code> See a list of statements and functions for the <code>mo_ctl</code> tool itself <code>mo_ctl precheck</code> Check dependencies required for MatrixOne source code installation, namely golang, gcc, git, MySQL Client <code>mo_ctl deploy</code> Download and install and compile the corresponding version of MatrixOne; the default is to install the latest stable version <code>mo_ctl start</code> Start MatrixOne service <code>mo_ctl status</code> Check if the MatrixOne service is running <code>mo_ctl stop</code> Stop all MatrixOne service processes <code>mo_ctl restart</code> Restart MatrixOne service <code>mo_ctl connect</code> Call MySQL Client to connect to MatrixOne service <code>mo_ctl upgrade</code> Upgrade/downgrade MatrixOne from the current version to a release version or commit id version <code>mo_ctl set_conf</code> Set various usage parameters <code>mo_ctl get_conf</code> View current parameters <code>mo_ctl uninstall</code> Uninstall MatrixOne from MO_PATH path <code>mo_ctl watchdog</code> Set a scheduled task to ensure the availability of MatrixOne service, check the status of MatrixOne every minute, and automatically pull up the service if the service is found to be suspended <code>mo_ctl sql</code> Execute SQL directly through commands or a text file composed of SQL <code>mo_ctl ddl_convert</code> A tool to convert MySQL DDL statements into MatrixOne statements <code>mo_ctl get_cid</code> View the source version of the current MatrixOne download repository <code>mo_ctl get_branch</code> View the branch version of the current MatrixOne download repository <code>mo_ctl pprof</code> Used to collect MatrixOne profiling data"},{"location":"MatrixOne/Maintain/mo_ctl/#install-mo_ctl","title":"Install mo_ctl","text":"<p>Depending on whether you have internet access, you can choose to install the <code>mo_ctl</code> tool online or offline; you need to be careful to consistently execute commands as root or with sudo privileges (and add sudo before each command). Meanwhile, <code>install.sh</code> will use the <code>unzip</code> command to decompress the <code>mo_ctl</code> package; please ensure the <code>unzip</code> command is installed.</p>"},{"location":"MatrixOne/Maintain/mo_ctl/#install-online","title":"Install Online","text":"<pre><code>wget https://raw.githubusercontent.com/matrixorigin/mo_ctl_standalone/main/install.sh &amp;&amp; sudo bash +x ./install.sh\n\n# alternate address\nwget https://ghproxy.com/https://github.com/matrixorigin/mo_ctl_standalone/blob/main/install.sh &amp;&amp; sudo bash +x install.sh\n</code></pre> <p>For users running this command in a macOS environment, if you are a non-root user, run <code>install.sh</code> with the following statement:</p> <pre><code>sudo -u $(whoami) bash +x ./install.sh\n</code></pre>"},{"location":"MatrixOne/Maintain/mo_ctl/#install-offline","title":"Install Offline","text":"<pre><code># 1. First, download the installation script to the local computer, and then upload it to the installation machine\nwget https://raw.githubusercontent.com/matrixorigin/mo_ctl_standalone/main/install.sh\nwget https://github.com/matrixorigin/mo_ctl_standalone/archive/refs/heads/main.zip -O mo_ctl.zip\n\n# alternate address\nwget https://ghproxy.com/https://github.com/matrixorigin/mo_ctl_standalone/blob/main/install.sh\nwget https://ghproxy.com/https://github.com/matrixorigin/mo_ctl_standalone/archive/refs/heads/main.zip -O mo_ctl.zip\n\n# 2. Install from offline package\nbash +x ./install.sh mo_ctl.zip\n</code></pre>"},{"location":"MatrixOne/Maintain/mo_ctl/#quick-start","title":"Quick Start","text":"<p>You can quickly install and deploy the stand-alone version of MatrixOne through the following steps. For more information, see Deploy standalone MatrixOne.</p> <ol> <li> <p>Use the <code>mo_ctl help</code> command to view the tool guide.</p> </li> <li> <p>Use the <code>mo_ctl precheck</code> command to check whether the pre-dependency conditions are met.</p> </li> <li> <p>Use the <code>mo_ctl get_conf</code> command to set relevant parameters, and the possible parameter configurations are as follows:</p> <pre><code># check default parameter values\nmo_ctl set_conf MO_PATH=\"/data/mo/matrixone\" # set your own mo path\nmo_ctl set_conf MO_GIT_URL=\"https://ghproxy.com/https://github.com/matrixorigin/matrixone.git\" # in case have network issues, you can set this conf by overwriting default value MO_GIT_URL=\"https:// github.com/matrixorigin/matrixone.git\"\n</code></pre> </li> <li> <p>Use the <code>mo_ctl deploy</code>command to install and deploy the latest stable version of MatrixOne.</p> </li> <li> <p>Use the <code>mo_ctl start</code> command to launch the MatrixOne service with the command .</p> </li> <li> <p>Use the <code>mo_ctl connect</code> command to connect to the MatrixOne service.</p> </li> </ol>"},{"location":"MatrixOne/Maintain/mo_ctl/#reference-command-guide","title":"Reference command guide","text":""},{"location":"MatrixOne/Maintain/mo_ctl/#help-print-reference-guide","title":"help - print reference guide","text":"<pre><code>mo_ctl help\nUsage             : mo_ctl [option_1] [option_2]\n\n[option_1]      : available: connect | ddl_connect | deploy | get_branch | get_cid | get_conf | help | pprof | precheck | query | restart | set_conf | sql | start | status | stop | uninstall | upgrade | watchdog\n  1) connect      : connect to mo via mysql client using connection info configured\n  2) ddl_convert  : convert ddl file to mo format from other types of database\n  3) deploy       : deploy mo onto the path configured\n  4) get_branch   : upgrade or downgrade mo from current version to a target commit id or stable version\n  5) get_cid      : print mo git commit id from the path configured\n  6) get_conf     : get configurations\n  7) help         : print help information\n  8) pprof        : collect pprof information\n  9) precheck     : check pre-requisites for mo_ctl\n  10) restart     : a combination operation of stop and start\n  11) set_conf    : set configurations\n  12) sql         : execute sql from string, or a file or a path containg multiple files\n  13) start       : start mo-service from the path configured\n  14) status      : check if there's any mo process running on this machine\n  15) stop        : stop all mo-service processes found on this machine\n  16) uninstall   : uninstall mo from path MO_PATH=/data/mo/20230712_1228//matrixone\n  17) upgrade     : upgrade or downgrade mo from current version to a target commit id or stable version\n  18) watchdog    : setup a watchdog crontab task for mo-service to keep it alive\n  e.g.            : mo_ctl status\n\n  [option_2]      : Use \" mo_ctl [option_1] help \" to get more info\n  e.g.            : mo_ctl deploy help\n</code></pre> <p>Use <code>mo_ctl [option_1] help</code> for instructions on using the next-level <code>mo_ctl [option_1]</code> functionality.</p>"},{"location":"MatrixOne/Maintain/mo_ctl/#precheck-check-pre-dependency","title":"precheck - check pre-dependency","text":"<p>Before installing MatrixOne from the source code, use <code>mo_ctl precheck</code> to check the pre-dependency conditions. The pre-dependence depends on <code>go</code>/<code>gcc</code>/<code>git</code>/<code>mysql(client)</code>.</p> <pre><code>mo_ctl precheck help\nUsage         : mo_ctl precheck # check pre-requisites for mo_ctl\n   Check list : go gcc git mysql\n</code></pre>"},{"location":"MatrixOne/Maintain/mo_ctl/#deploy-install-matrixone","title":"deploy - install MatrixOne","text":"<p>Use <code>mo_ctl deploy [mo_version] [force]</code> to install and deploy a stable version of MatrixOne, or a specified version. The <code>force</code> option can delete the existing version of MatrixOne in the same directory and force a new version to be reinstalled.</p> <pre><code>mo_ctl deploy help\nUsage         : mo_ctl deploy [mo_version] [force] # deploy mo onto the path configured\n  [mo_version]: optional, specify an mo version to deploy\n  [force]     : optional, if specified will delete all content under MO_PATH and deploy from beginning\n  e.g.        : mo_ctl deploy             # default, same as mo_ctl deploy v1.2.3\n              : mo_ctl deploy main        # deploy development latest version\n              : mo_ctl deploy d29764a     # deploy development version d29764a\n              : mo_ctl deploy v1.2.3       # deploy stable verson v1.2.3\n              : mo_ctl deploy force       # delete all under MO_PATH and deploy verson v1.2.3\n              : mo_ctl deploy v1.2.3 force # delete all under MO_PATH and deploy stable verson v1.2.3 from beginning\n</code></pre>"},{"location":"MatrixOne/Maintain/mo_ctl/#start-launch-matrixone","title":"start - launch MatrixOne","text":"<p>Use <code>mo_ctl start</code> to start MatrixOne service; the startup file path is located under <code>MO_PATH</code>.</p> <pre><code>mo_ctl start help\nUsage         : mo_ctl start # start mo-service from the path configured\n</code></pre>"},{"location":"MatrixOne/Maintain/mo_ctl/#stop-stop-matrixone","title":"stop - stop MatrixOne","text":"<p>Use <code>mo_ctl stop [force]</code> to stop all MatrixOne services on local machine, and if multiple MatrixOne services are running, they will also be stopped.</p> <pre><code> mo_ctl stop help\nUsage : mo_ctl stop [force] # stop all mo-service processes found on this machine\n [force] : optional, if specified, will try to kill mo-services with -9 option, so be very carefully\n  e.g.: mo_ctl stop # default, stop all mo-service processes found on this machine\n              : mo_ctl stop force # stop all mo-services with kill -9 command\n</code></pre>"},{"location":"MatrixOne/Maintain/mo_ctl/#restart-restart-matrixone","title":"restart - restart MatrixOne","text":"<p>Use <code>mo_ctl restart [force]</code> to stop all MatrixOne services on this machine and restart the MatrixOne services located in the path of <code>MO_PATH</code>.</p> <pre><code>mo_ctl restart help\nUsage         : mo_ctl restart [force] # a combination operation of stop and start\n [force]      : optional, if specified, will try to kill mo-services with -9 option, so be very carefully\n  e.g.        : mo_ctl restart         # default, stop all mo-service processes found on this machine and start mo-serivce under path of conf MO_PATH\n              : mo_ctl restart force   # stop all mo-services with kill -9 command and start mo-serivce under path of conf MO_PATH\n</code></pre>"},{"location":"MatrixOne/Maintain/mo_ctl/#connect-using-mysql-client-to-connect-matrixone","title":"connect - using mysql-client to connect MatrixOne","text":"<p>Use <code>mo_ctl connect</code> to connect to MatrixOne service, the connection parameters are set by <code>mo_ctl</code> tool.</p> <pre><code>mo_ctl connect help\nUsage         : mo_ctl connect # connect to mo via mysql client using connection info configured\n</code></pre>"},{"location":"MatrixOne/Maintain/mo_ctl/#status-check-the-status-of-matrixone","title":"status - Check the status of MatrixOne","text":"<p>Use <code>mo_ctl status</code> to check whether MatrixOne is running or not.</p> <pre><code>mo_ctl status help\nUsage         : mo_ctl status # check if there's any mo process running on this machine\n</code></pre>"},{"location":"MatrixOne/Maintain/mo_ctl/#get_cid-print-matrixone-code-commit-id","title":"get_cid - print MatrixOne code commit id","text":"<p>Use <code>mo_ctl get_cid</code> to print the MatrixOne repository commit id under the current <code>MO_PATH</code> path.</p> <pre><code>mo_ctl get_cid help\nUsage : mo_ctl get_cid # print mo commit id from the path configured\n</code></pre>"},{"location":"MatrixOne/Maintain/mo_ctl/#get_branch-print-matrixone-code-commit-id","title":"get_branch - print MatrixOne code commit id","text":"<p>Use <code>mo_ctl get_branch</code> to print the MatrixOne codebase branch under the current <code>MO_PATH</code> path.</p> <pre><code>mo_ctl get_branch help\nUsage           : mo_ctl get_branch        # print which git branch mo is currently on\n</code></pre>"},{"location":"MatrixOne/Maintain/mo_ctl/#pprof-collect-performance-information","title":"pprof - Collect performance information","text":"<p>Use <code>mo_ctl pprof [item] [duration]</code> to collect related performance information of MatrixOne, mainly for developers to debug.</p> <pre><code>mo_ctl pprof help\nUsage         : mo_ctl pprof [item] [duration] # collect pprof information\n  [item]      : optional, specify what pprof to collect, available: profile | heap | allocs\n  1) profile  : default, collect profile pprof for 30 seconds\n  2) heap     : collect heap pprof at current moment\n  3) allocs   : collect allocs pprof at current moment\n  [duration]  : optional, only valid when [item]=profile, specifiy duration to collect profile\n  e.g.        : mo_ctl pprof\n              : mo_ctl pprof profile    # collect duration will use conf value PPROF_PROFILE_DURATION from conf file or 30 if it's not set\n              : mo_ctl pprof profile 30\n              : mo_ctl pprof heap\n</code></pre>"},{"location":"MatrixOne/Maintain/mo_ctl/#set_conf-configuration-parameters","title":"set_conf - configuration parameters","text":"<p>Use <code>mo_ctl set_conf [conf_list]</code> to configure 1 or more usage parameters.</p> <pre><code>mo_ctl set_conf help\nUsage         : mo_ctl setconf [conf_list] # set configurations\n [conf_list]  : configuration list in key=value format, seperated by comma\n  e.g.        : mo_ctl setconf MO_PATH=/data/mo/matrixone,MO_PW=M@trix0riginR0cks,MO_PORT=6101  # set multiple configurations\n              : mo_ctl setconf MO_PATH=/data/mo/matrixone                                       # set single configuration\n</code></pre>"},{"location":"MatrixOne/Maintain/mo_ctl/#get_conf-get-parameter-list","title":"get_conf - get parameter list","text":"<p>Use <code>mo_ctl get_conf [conf_list]</code> to get one or more current configuration items.</p> <pre><code>mo_ctl get_conf help\nUsage         : mo_ctl getconf [conf_list] # get configurations\n [conf_list]  : optional, configuration list in key, seperated by comma.\n              : use 'all' or leave it as blank to print all configurations\n  e.g.        : mo_ctl getconf MO_PATH,MO_PW,MO_PORT  # get multiple configurations\n              : mo_ctl getconf MO_PATH                # get single configuration\n              : mo_ctl getconf all                    # get all configurations\n              : mo_ctl getconf                        # get all configurations\n</code></pre>"},{"location":"MatrixOne/Maintain/mo_ctl/#mo_ctl-get_conf-detailed-parameter-list","title":"mo_ctl get_conf - Detailed Parameter List","text":"<p>Using <code>mo_ctl get_conf</code> will print a list of all the parameters used by the current tool. Their meanings and value ranges are shown in the table below.</p> Parameter Name Function Value Specification MO_PATH Location of MatrixOne's code repository and executables Folder path MO_LOG_PATH Location of MatrixOne's logs Folder path, default: ${MO_PATH}/matrixone/logs MO_HOST IP address for connecting to MatrixOne service IP address, default: 127.0.0.1 MO_PORT Port number for connecting to MatrixOne service Port number, default: 6001 MO_USER Username for connecting to MatrixOne service Username, default: root MO_PW Password for connecting to MatrixOne service Password, default: 111 CHECK_LIST Dependencies required for precheck Default: (\"go\" \"gcc\" \"git\" \"mysql\") GCC_VERSION gcc version to be checked in precheck Default: 8.5.0 GO_VERSION go version to be checked in precheck Default: 1.22 MO_GIT_URL Repository URL for fetching MatrixOne source code Default: https://github.com/matrixorigin/matrixone.git MO_DEFAULT_VERSION Default version of MatrixOne to be fetched Default: v1.2.3 GOPROXY Address of GOPROXY used for faster dependency retrieval in China Default: https://goproxy.cn, direct STOP_INTERVAL Interval to wait for service status check after stopping the service Default: 5 seconds START_INTERVAL Interval to wait for service status check after starting the service Default: 2 seconds MO_DEBUG_PORT Debug port for MatrixOne, usually used by developers Default: 9876 MO_CONF_FILE Launch configuration file for MatrixOne Default: ${MO_PATH}/matrixone/etc/launch/launch.toml RESTART_INTERVAL Interval to wait for service status check after restarting the service Default: 2 seconds PPROF_OUT_PATH Output path for collecting golang performance data Default: /tmp/pprof-test/ PPROF_PROFILE_DURATION Duration for collecting golang performance data Default: 30 seconds"},{"location":"MatrixOne/Maintain/mo_ctl/#ddl_convert-ddl-format-conversion","title":"ddl_convert - DDL format conversion","text":"<p>Use <code>mo_ctl ddl_convert [options] [src_file] [tgt_file]</code> to convert a DDL file from other database syntax formats to MatrixOne's DDL format, currently only supported by <code>mysql_to_mo</code> mode.</p> <pre><code>mo_ctl ddl_convert help\nUsage           : mo_ctl ddl_convert [options] [src_file] [tgt_file] # convert a ddl file to mo format from other types of database\n [options]      : available: mysql_to_mo\n [src_file]     : source file to be converted, will use env DDL_SRC_FILE from conf file by default\n [tgt_file]     : target file of converted output, will use env DDL_TGT_FILE from conf file by default\n  e.g.          : mo_ctl ddl_convert mysql_to_mo /tmp/mysql.sql /tmp/mo.sql\n</code></pre>"},{"location":"MatrixOne/Maintain/mo_ctl/#sql-execute-sql","title":"sql - Execute SQL","text":"<p>Use <code>mo_ctl sql [sql]</code> to execute SQL text or SQL files.</p> <pre><code>mo_ctl sql help\nUsage           : mo_ctl sql [sql]                 # execute sql from string, or a file or a path containg multiple files\n  [sql]         : a string quote by \"\", or a file, or a path\n  e.g.          : mo_ctl sql \"use test;select 1;\"  # execute sql \"use test;select 1\"\n                : mo_ctl sql /data/q1.sql          # execute sql in file /data/q1.sql\n                : mo_ctl sql /data/                # execute all sql files with .sql postfix in /data/\n</code></pre>"},{"location":"MatrixOne/Maintain/mo_ctl/#uninstall-uninstall-matrixone","title":"uninstall - Uninstall MatrixOne","text":"<p>Use <code>mo_ctl uninstall</code> to uninstall MatrixOne from MO_PATH.</p> <pre><code>mo_ctl uninstall help\nUsage           : mo_ctl uninstall        # uninstall mo from path MO_PATH=/data/mo//matrixone\n                                          # note: you will need to input 'Yes/No' to confirm before uninstalling\n</code></pre>"},{"location":"MatrixOne/Maintain/mo_ctl/#upgrade-upgradedowngrade-matrixone-version","title":"upgrade - upgrade/downgrade MatrixOne version","text":"<p>Use <code>mo_ctl upgrade version</code> or <code>mo_ctl upgrade commitid</code> to upgrade or downgrade MatrixOne from the current version to a stable version or a commit id version.</p> <pre><code>mo_ctl upgrade help\nUsage           : mo_ctl upgrade [version_commitid]   # upgrade or downgrade mo from current version to a target commit id or stable version\n [commitid]     : a commit id such as '38888f7', or a stable version such as 'v1.2.3'\n                : use 'latest' to upgrade to latest commit on main branch if you don't know the id\n  e.g.          : mo_ctl upgrade 38888f7              # upgrade/downgrade to commit id 38888f7 on main branch\n                : mo_ctl upgrade latest               # upgrade/downgrade to latest commit on main branch\n                : mo_ctl upgrade v1.2.3                # upgrade/downgrade to stable version v1.2.3\n</code></pre>"},{"location":"MatrixOne/Maintain/mo_ctl/#watchdog-keep-alive-matrixone","title":"watchdog - Keep Alive MatrixOne","text":"<p>Use <code>mo_ctl watchdog [options]</code> to set a scheduled task to ensure the availability of MatrixOne service, check the status of MatrixOne every minute, and automatically pull up the service if it finds that the service is suspended.</p> <pre><code>mo_ctl watchdog help\nUsage           : mo_ctl watchdog [options]   # setup a watchdog crontab task for mo-service to keep it alive\n [options]      : available: enable | disable | status\n  e.g.          : mo_ctl watchdog enable      # enable watchdog service for mo, by default it will check if mo-servie is alive and pull it up if it's dead every one minute\n                : mo_ctl watchdog disable     # disable watchdog\n                : mo_ctl watchdog status      # check if watchdog is enabled or disabled\n                : mo_ctl watchdog             # same as mo_ctl watchdog status\n</code></pre>"},{"location":"MatrixOne/Maintain/mount-data-by-docker/","title":"Mount directory to Docker container","text":"<p>This document will teach you how to mount the data directory or your customized configuration file to the Docker container when you launch MatrixOne by using Docker.</p>"},{"location":"MatrixOne/Maintain/mount-data-by-docker/#mount-the-data-directory","title":"Mount the data directory","text":"<p>To ensure the safety of the data directory, mount the local data directory to the Docker container by the following steps:</p> <ol> <li> <p>To check if MatrixOne has been running in Docker, execute the following command:</p> <pre><code>docker ps -a\n</code></pre> </li> <li> <p>To stop the running container if MatrixOne has been running in Docker, execute the following command:</p> <pre><code>docker stop &lt;containerID&gt;\ndocker rm &lt;containerID&gt;\n</code></pre> <p>Skip this step if MatrixOne is not running in Docker.</p> </li> <li> <p>Mount the local empty directory to the Docker container directory /mo-data, execute the following command:</p> <pre><code>sudo docker run --name &lt;name&gt; --privileged -d -p 6001:6001 -v ${local_data_path}/mo-data:/mo-data:rw matrixorigin/matrixone:1.2.3\n</code></pre> Parameters Description ${local_data_path}/mo-data:/mo-data mount the local disk directory ${local_data_path}/mo-data to the container directory /mo-data Tips: The local data directory to be mounted must be an empty directory. </li> </ol>"},{"location":"MatrixOne/Maintain/mount-data-by-docker/#mount-the-customized-configuration-file","title":"Mount the customized configuration file","text":"<p>If you need to modify the configuration file. In that case, it would be best to copy the configuration file in Docker to your local directory and then mount the local directory where the configuration file is stored to the Docker container directory. Refer to the following steps to mount the configuration file to the Docker container:</p> <ol> <li> <p>To check if MatrixOne has been running in Docker, execute the following command:</p> <pre><code>docker ps -a\n</code></pre> </li> <li> <p>To launch MatrixOne MatrixOne has not been running in Docker, execute the following command:</p> <pre><code>docker run -d -p 6001:6001 --name matrixone --privileged=true matrixorigin/matrixone:1.2.3\n</code></pre> </li> <li> <p>Check the containerID that MatrixOne has been running in Docker, and copy the configuration file directory to the local directory:</p> <pre><code>docker ps -a\ndocker cp &lt;containerID&gt;:/etc .\n</code></pre> </li> <li> <p>To stop the MatrixOne when the copy is completed, execute the following command:</p> <pre><code>docker stop &lt;containerID&gt;\ndocker rm &lt;containerID&gt;\n</code></pre> </li> <li> <p>(Optional) Modify the configuration file and save it.</p> </li> <li> <p>Mount the configuration file to the Docker container directory and launch MatrixOne. Execute the following command:</p> <pre><code>sudo docker run --name &lt;name&gt; --privileged -d -p 6001:6001 -v ${local_config_path}/etc:/etc:rw  --entrypoint \"/mo-service\" matrixorigin/matrixone:1.2.3 -launch /etc/launch/launch.toml\n</code></pre> Parameters Description ${local_config_path}/etc:/etc mount the local customize configration directory ${local_config_path}/etc to the container directory /etc --entrypoint \"/mo-service\" Specifies that the container starts the MatrixOne service -launch /etc/launch/launch.toml launch mode in /etc/ </li> </ol> <p>For more information on the description of Docker run, run the commands <code>docker run --help</code>.</p>"},{"location":"MatrixOne/Maintain/backup-restore/backup-restore-overview/","title":"MatrixOne Backup and Recovery Overview","text":"<p>Database backup and recovery is one of the core operations of any database management system and an important guarantee of data security and availability. MatrixOne also provides flexible and robust database backup and recovery capabilities to ensure the integrity and continuity of user data. This article describes the importance of MatrixOne database backup and recovery, backup strategies, and backup methods.</p>"},{"location":"MatrixOne/Maintain/backup-restore/backup-restore-overview/#backup-and-recovery-strategies","title":"Backup and recovery strategies","text":"<p>Under different disaster recovery scenarios, a database backup can be used to restore health.</p> <p>Here are backup recovery methods for different scenarios:</p> <ol> <li> <p>Operating system crash:</p> <ul> <li>If there is a physical backup: After a crash, restore the entire database state through a physical backup, restore the backup to a normal hardware environment, and apply redo logs to ensure data consistency.</li> <li>If there is a logical backup: Rebuild the database schema and data on the new server through a logical backup. Install the database software and execute the SQL statements in the logical backup to create tables, indexes, etc. before importing the data.</li> </ul> </li> <li> <p>Power supply (detection) failed:</p> <ul> <li>If there is a physical backup: After failure, the database can be restored through a physical backup, restoring the backup to a normal hardware environment, and applying redo logs to ensure data consistency.</li> <li>If there is a logical backup: Again, rebuild the database on the new server through a logical backup.</li> </ul> </li> <li> <p>File system crash:</p> <ul> <li>If there is a physical backup: Restore the database using a physical backup, restore the backup to a normal hardware environment, and apply redo logs to ensure data consistency.</li> <li>If there is a logical backup: After a crash, rebuild the database schema and data on the new server.</li> </ul> </li> <li> <p>Hardware issues (hard drives, motherboards, etc.):</p> <ul> <li>If there is a physical backup: restore the database through a physical backup, restore the backup to a new hardware environment, and apply redo logs to ensure data consistency.</li> <li>If there is a logical backup: Use the logical backup to rebuild the database in the new hardware environment.</li> </ul> </li> </ol> <p>The following strategies can be followed for backup recovery:</p> <ol> <li> <p>Frequency of backups: Determine the frequency of backups, usually divided into full and incremental backups. Full backups take up more storage and time, but restore faster, while incremental backups are more economical.</p> </li> <li> <p>Backup storage: Choose a secure backup storage location to ensure backup data is not vulnerable to corruption or loss. Offline storage media or cloud storage is often used to house backups.</p> </li> <li> <p>Backup Retention Period: Determine the retention period for backup data for retrieval and recovery of historical data when needed. Develop appropriate data retention policies based on regulations and business needs.</p> </li> </ol> <p>Whatever the recovery scenario, the following principles should be followed:</p> <ol> <li>Consider stopping database operation to prevent data changes.</li> <li>Select the appropriate backup for recovery based on the backup type.</li> <li>Restore the backup file.</li> <li>Consider applying the appropriate redo logs to ensure data consistency.</li> <li>Start the database and perform the necessary tests.</li> </ol>"},{"location":"MatrixOne/Maintain/backup-restore/backup-restore-overview/#database-backup-method","title":"Database backup method","text":"<p>MatrixOne offers a variety of backup methods that take into account factors such as database requirements, performance, resources, and recovery time.</p> <p>The MatrixOne database provides multiple backup tools to meet different scenarios and needs:</p> <ol> <li> <p>mo-dump: Used to export data and patterns from a database. It generates recoverable SQL scripts for logical backups.</p> </li> <li> <p>mo-backup: for physical backup and recovery. <code>mo-backup</code> is a physical backup and recovery tool for MatrixOne enterprise-class services that helps you protect your MatrixOne databases and perform reliable recovery operations when needed.</p> </li> </ol> <p>!!! note         mo-backup Physical backup and recovery tool for enterprise level services, you need to contact your MatrixOne account manager for the tool download path.</p>"},{"location":"MatrixOne/Maintain/backup-restore/backup-restore-overview/#logical-backup-and-recovery","title":"Logical Backup and Recovery","text":""},{"location":"MatrixOne/Maintain/backup-restore/backup-restore-overview/#backup-with-select-into-outfile","title":"Backup with <code>SELECT INTO OUTFILE</code>","text":"<p>Use the <code>SELECT ... INTO OUTFILE</code> command to export the retrieved data to a file in format, created by the MatrixOne service and only on the MatrixOne server host. Export to client file system is not supported, export directory do not rename files to avoid overwriting new files.</p> <p>For operational steps and examples, see <code>SELECT INTO...OUTFILE</code></p>"},{"location":"MatrixOne/Maintain/backup-restore/backup-restore-overview/#backup-with-mo-dump","title":"Backup with <code>mo-dump</code>","text":"<p>MatrixOne supports logical backups using the <code>mo-dump</code> tool to generate SQL statements that can be used to recreate database objects and data.</p> <p>For operational steps and examples, see the <code>mo-dump tool Write</code> Out</p>"},{"location":"MatrixOne/Maintain/backup-restore/backup-restore-overview/#bulk-import-recovery-using-the-command-line","title":"Bulk Import Recovery Using the Command Line","text":"<p>MatrixOne supports inserting large numbers of rows into database tables using the <code>LOAD DATA</code> command. It also supports importing table structures and data into the entire database using the <code>SOURCE</code> command.</p> <p>For more information, see Batch Import</p>"},{"location":"MatrixOne/Maintain/backup-restore/backup-restore-overview/#physical-backup-and-recovery","title":"Physical Backup and Recovery","text":""},{"location":"MatrixOne/Maintain/backup-restore/backup-restore-overview/#backup-and-restore-with-mo_br","title":"Backup and restore with <code>mo_br</code>","text":"<p>MatrixOne supports regular physical and snapshot backups using the <code>mo_br</code> tool.</p> <p>See the <code>mo-br User Guide</code> for steps and examples</p>"},{"location":"MatrixOne/Maintain/backup-restore/backup-restore-overview/#using-sql-backup-and-recovery","title":"Using SQL Backup and Recovery","text":"<p>MatrixOne supports snapshot backup and recovery using SQL.</p> <p>Refer to the documentation for methods of snapshot backup and recovery using SQL:</p> <ul> <li>CREATE SNAPSHOT</li> <li>DROP SNAPSHOT</li> <li>SHOW SNAPSHOTS</li> <li>RESTORE ACCOUNT</li> </ul>"},{"location":"MatrixOne/Maintain/backup-restore/key-concepts/","title":"Backup and Recovery Related Concepts","text":""},{"location":"MatrixOne/Maintain/backup-restore/key-concepts/#physical-snapshot-and-logical-backups","title":"Physical, snapshot and logical backups","text":""},{"location":"MatrixOne/Maintain/backup-restore/key-concepts/#physical-backup","title":"Physical backup","text":"<p>Physical backup is the process of copying database files directly to backup media such as tape, hard drives, etc. This method copies all physical blocks of the database to backup media, including data files, control files, and redo log files. Backed-up data is binary data that is actually stored on disk, and recovery operations are usually quick.</p>"},{"location":"MatrixOne/Maintain/backup-restore/key-concepts/#snapshot-backup","title":"snapshot backup","text":"<p>Database snapshot backup is a form of physical backup, but unlike traditional physical backup, it creates an instant copy of data by capturing a read-only static view of the database at a specific point in time. This backup method utilizes an incremental storage mechanism that records only blocks of data that have changed since the last snapshot, making efficient use of storage space. Snapshot backups support fast recovery because they provide a complete, consistent view of the database for data protection, report generation, analysis, and other scenarios that require data consistency. In addition, they typically rely on the snapshot capabilities of the underlying storage system to provide a secure copy of data access to the database without affecting its proper operation.</p>"},{"location":"MatrixOne/Maintain/backup-restore/key-concepts/#logical-backup","title":"Logical backup","text":"<p>A logical backup is a backup of logical objects (such as tables, indexes, stored procedures, etc.) in a database through SQL statements. This backup method exports definitions and data for logical objects to a backup file, but does not involve binary data for database files. While recovery is slower, backup data is often easier to read and modify.</p>"},{"location":"MatrixOne/Maintain/backup-restore/key-concepts/#the-difference","title":"The difference","text":"<p>Data physical backup, logical backup, and snapshot backup are three different data protection strategies: physical backup creates a full copy of the database by directly replicating the database's storage files for rapid recovery and large-scale data migration; logical backup exports the logical structure of the database, such as SQL statements, to store data and structure in text to facilitate data migration across platforms and versions; and snapshot backup is a read-only view of the database at a given point in time, using incremental storage technology to record changes for rapid recovery to a specific point in time state, often dependent on storage system support.</p>"},{"location":"MatrixOne/Maintain/backup-restore/key-concepts/#full-incremental-and-differential-backups","title":"Full, incremental, and differential backups","text":""},{"location":"MatrixOne/Maintain/backup-restore/key-concepts/#full-backup","title":"Full backup","text":"<p>Full backup backs up the entire data set to the storage device, including all files and folders. Although often time consuming and requiring large storage space, data can be fully restored without additional backup files.</p>"},{"location":"MatrixOne/Maintain/backup-restore/key-concepts/#incremental-backup","title":"incremental backup","text":"<p>Incremental backups back up only recently changed or added files or blocks. Back up only changes since the last backup, usually with less backup time and storage. Usually performed between regular full backups to ensure backup data is kept up to date. All incremental and up-to-date full backups are used to restore data.</p>"},{"location":"MatrixOne/Maintain/backup-restore/key-concepts/#differential-backup","title":"Differential backup","text":"<p>Differential backups are backups of data that has changed since the last full backup, so backup data is larger and takes longer than incremental backups. When restoring data, simply restore the most recent full backup and then the most recent differential backup. The backup and recovery process is relatively simple due to shorter recovery times without relying on previously backed up data.</p>"},{"location":"MatrixOne/Maintain/backup-restore/key-concepts/#differences-between-full-incremental-and-differential-backups","title":"Differences between full, incremental, and differential backups","text":"<ul> <li>Full backup provides full data backup, but requires more time and storage.</li> <li>Incremental backups are suitable for environments with less data change, saving backup storage space and time, but with long recovery times and reliance on front backup data.</li> <li>Differential backup is suitable for environments with more data changes, larger backup data, shorter recovery time than incremental backup, and a relatively simple backup recovery process.</li> </ul>"},{"location":"MatrixOne/Maintain/backup-restore/key-concepts/#recovery","title":"Recovery","text":""},{"location":"MatrixOne/Maintain/backup-restore/key-concepts/#physical-recovery","title":"Physical Recovery","text":"<p>Physical recovery is database recovery using physical backups. Typically used for critical failures such as hard disk failures, operating system failures, or file system failures. In physical recovery, use professional recovery tools or software to read the actual data blocks in a backup file or storage medium and try to repair the damaged blocks.</p> <p>Physical recovery has the advantage of quickly restoring the database by processing blocks directly without SQL statements or other high-level operations. In addition, physical recovery restores all database objects, including tables, indexes, stored procedures, etc.</p>"},{"location":"MatrixOne/Maintain/backup-restore/key-concepts/#full-versus-incomplete-recovery","title":"Full versus incomplete recovery","text":"<ul> <li>Full Recovery: Apply all redo logs from the backup set and restore the data to a committed state for all logs in the backup.</li> <li>Incomplete Recovery: Apply a backup set of partial redo logs or add-ons to restore the database to a point in time that the backup redo logs contain.</li> </ul>"},{"location":"MatrixOne/Maintain/backup-restore/modump-backup-restore/","title":"mo-dump Backup and Recovery","text":"<p>For businesses that produce a lot of data every day, it's important to back up the database. In case of system crash or hardware failure, or user misoperation, you can recover data and restart the system without data loss.</p> <p>In addition, data backups serve as safeguards before upgrading a MatrixOne installation, while data backups can also be used to transfer a MatrixOne installation to another system.</p> <p>MatrixOne supports logical backups via the <code>mo-dump</code> utility. <code>modump</code> is a command-line utility that generates logical backups of MatrixOne databases. It generates SQL statements that can be used to recreate database objects and data. You can find its syntax description and usage guide in the mo-dump chapter.</p> <p>We'll walk through a simple example of how to use the <code>mo-dump</code> utility to complete the data backup and restore process.</p>"},{"location":"MatrixOne/Maintain/backup-restore/modump-backup-restore/#steps","title":"Steps","text":""},{"location":"MatrixOne/Maintain/backup-restore/modump-backup-restore/#1-deployment-of-mo-dump","title":"1. Deployment of mo-dump","text":"<p>See the mo-dump tool writing chapter to complete the deployment of <code>the mo-dump</code> tool.</p>"},{"location":"MatrixOne/Maintain/backup-restore/modump-backup-restore/#2-generate-a-backup-of-a-single-database","title":"2. Generate a backup of a single database","text":"<p>An example is the database t and its table t1 created using the following SQL:</p> <pre><code>DROP DATABASE IF EXISTS `t`;\nCREATE DATABASE `t`;\nUSE `t`;\ncreate table t1\n(\n    c1  int primary key auto_increment,\n    c2  tinyint not null default 4,\n    c3  smallint,\n    c4  bigint,\n    c5  tinyint unsigned,\n    c6  smallint unsigned,\n    c7  int unsigned,\n    c8  bigint unsigned,\n    c9  float,\n    c10 double,\n    c11 date,\n    c12 datetime,\n    c13 timestamp on update current_timestamp,\n    c14 char,\n    c15 varchar,\n    c16 json,\n    c17 decimal,\n    c18 text,\n    c19 blob,\n    c20 uuid\n);\ninsert into t1 values (1, 1, 1, 1, 1, 1, 1, 1, 1, 1, '2019-01-01', '2019-01-01 00:00:00', '2019-01-01 00:00:00', 'a', 'a', '{\"a\":1}','1212.1212', 'a', 'aza', '00000000-0000-0000-0000-000000000000');\n</code></pre> <p>If you want to generate a backup of a single database, you can run the following command. This command will generate a backup of the database named t with the structure and data in the t.sql file.</p> <pre><code>./mo-dump -u root -p 111 -h 127.0.0.1 -P 6001 -db t &gt; t.sql\n</code></pre> <p>If you want to generate a backup of a single table in the database, you can run the following command. This command generates a backup of the t1 table of the database named t, which contains the structure and data in the t.sql file.</p> <pre><code>./mo-dump -u root -p 111 -db t -tbl t1 &gt; t1.sql\n</code></pre> <p>Note</p> <p>If you want to generate a backup of multiple databases/tables, you need to separate the database names/table names with <code>,</code> .</p>"},{"location":"MatrixOne/Maintain/backup-restore/modump-backup-restore/#3-restore-backup-to-matrixone-server","title":"3. Restore Backup to MatrixOne Server","text":"<p>Restoring an exported sql file to a MatrixOne database is relatively simple. To recover your database, you must first create an empty database and use the MySQL client to recover.</p> <p>Connect MatrixOne to the same server as the MySQL client and make sure the exported sql file is also on the same server.</p> <pre><code>mysql&gt; create database t if not exists;\nmysql&gt; source /YOUR_SQL_FILE_PATH/t.sql\n</code></pre> <p>After successfully executing the above command, execute the following command to check if all objects were created on the named t database.</p> <pre><code>mysql&gt; use t;\nmysql&gt; show tables;\nmysql&gt; select count(*) from t1;\n</code></pre>"},{"location":"MatrixOne/Maintain/backup-restore/mobr-backup-restore/mobr-physical-backup-restore/","title":"mo_br regular physical backup recovery","text":""},{"location":"MatrixOne/Maintain/backup-restore/mobr-backup-restore/mobr-physical-backup-restore/#overview-of-principles","title":"Overview of principles","text":"<p>A regular physical backup of a database is a direct copy of the database's physical storage files, including data files, log files, and control files, to create a separate copy of the database. This process is usually performed at the file system level and can be achieved by operating system commands. The resulting backup is a full backup of the database, containing all the data and objects. Backup files can be stored on multiple media and can be compressed and encrypted to save space and improve security. On recovery, these files can be copied directly to the desired location to quickly restore the entire database. In addition, physical backups support cross-platform migration for disaster recovery and database migration scenarios, but may require more storage space and time.</p> <p>A full backup is a backup process that backs up all data in a database. It creates a full copy of the database, which usually requires more storage space and longer to complete. Because it contains all the data, full backups are simpler to restore and can be restored directly to the state they were in.</p> <p>Incremental backups are backups of data that has changed since the last backup. It replicates only blocks or data files that have been modified between backups, so backup sets are typically smaller and faster. Incremental backups can save storage space and backup time, but can be more complex when data is restored because a series of incremental backups need to be applied sequentially to restore to the latest state.</p> <p>MatrixOne supports incremental and full physical backup restores using <code>mo_br</code>:</p> <p>Note</p> <p>mo_br Backup and recovery tool for enterprise services, you need to contact your MatrixOne account manager for the tool download path.</p>"},{"location":"MatrixOne/Maintain/backup-restore/mobr-backup-restore/mobr-physical-backup-restore/#examples","title":"Examples","text":""},{"location":"MatrixOne/Maintain/backup-restore/mobr-backup-restore/mobr-physical-backup-restore/#example-1-full-backup-recovery","title":"Example 1 Full Backup Recovery","text":"<ul> <li>Connect mo to create databases db1, db2.</li> </ul> <pre><code>create database db1;\ncreate database db2;\n\nmysql&gt; show databases;\n+--------------------+\n| Database           |\n+--------------------+\n| db1                |\n| db2                |\n| information_schema |\n| mo_catalog         |\n| mo_debug           |\n| mo_task            |\n| mysql              |\n| system             |\n| system_metrics     |\n+--------------------+\n9 rows in set (0.00 sec)\n</code></pre> <ul> <li>Create a full backup</li> </ul> <pre><code>./mo_br backup --host \"127.0.0.1\" --port 6001 --user \"dump\" --password \"111\" --backup_dir \"filesystem\"  --path \"/Users/admin/soft/backuppath/syncback1\"\n\nBackup ID\n    25536ff0-126f-11ef-9902-26dd28356ef3\n\n./mo_br list\n+--------------------------------------+-------+----------------------------------------+---------------------------+--------------+---------------------------+-----------------------+------------+\n|                  ID                  | SIZE  |                  PATH                  |          AT TIME          |   DURATION   |       COMPLETE TIME       |       BACKUPTS        | BACKUPTYPE |\n+--------------------------------------+-------+----------------------------------------+---------------------------+--------------+---------------------------+-----------------------+------------+\n| 25536ff0-126f-11ef-9902-26dd28356ef3 | 65 MB |      BackupDir: filesystem  Path:      | 2024-05-15 11:56:44 +0800 | 8.648091083s | 2024-05-15 11:56:53 +0800 | 1715745404915410000-1 |    full    |\n|                                      |       | /Users/admin/soft/backuppath/syncback1 |                           |              |                           |                       |            |\n+--------------------------------------+-------+----------------------------------------+---------------------------+--------------+---------------------------+-----------------------+------------+\n</code></pre> <ul> <li>Connect mo Delete database db1 and build database db3.</li> </ul> <pre><code>drop database db1;\ncreate database db3;\n\nmysql&gt; show databases;\n+--------------------+\n| Database           |\n+--------------------+\n| db2                |\n| db3                |\n| information_schema |\n| mo_catalog         |\n| mo_debug           |\n| mo_task            |\n| mysql              |\n| system             |\n| system_metrics     |\n+--------------------+\n9 rows in set (0.00 sec)\n</code></pre> <ul> <li>Stop mo service, delete mo-data, restore backup</li> </ul> <pre><code>mo_ctl stop\nrm -rf /Users/admin/soft/matrixone/mo-data\n\n./mo_br restore 25536ff0-126f-11ef-9902-26dd28356ef3  --restore_dir filesystem --restore_path \"/Users/admin/soft/matrixone\"\nFrom:\n    BackupDir: filesystem\n    Path: /Users/admin/soft/backuppath/syncback1\n\nTo\n    BackupDir: filesystem\n    Path: /Users/admin/soft/matrixone\n\nTaePath\n    ./mo-data/shared\nrestore tae file path ./mo-data/shared, parallelism 1,  parallel count num: 1\nrestore file num: 1, total file num: 733, cost : 549\u00b5s\nCopy tae file 1\n    018f7a41-1881-7999-bbd6-858c3d4acc18_00000 =&gt; mo-data/shared/018f7a41-1881-7999-bbd6-858c3d4acc18_00000\n    ... \n</code></pre> <ul> <li>Start mo, check recovery</li> </ul> <pre><code>mo_ctl start\n</code></pre> <pre><code>mysql&gt; show databases;\n+--------------------+\n| Database           |\n+--------------------+\n| db1                |\n| db2                |\n| information_schema |\n| mo_catalog         |\n| mo_debug           |\n| mo_task            |\n| mysql              |\n| system             |\n| system_metrics     |\n+--------------------+\n9 rows in set (0.00 sec)\n</code></pre> <p>As you can see, the recovery was successful.</p>"},{"location":"MatrixOne/Maintain/backup-restore/mobr-backup-restore/mobr-physical-backup-restore/#example-2-incremental-backup-recovery","title":"Example 2 Incremental Backup Recovery","text":"<ul> <li>Connect mo Create databases db1, db2</li> </ul> <pre><code>create database db1;\ncreate database db2;\n\nmysql&gt; show databases;\n+--------------------+\n| Database           |\n+--------------------+\n| db1                |\n| db2                |\n| information_schema |\n| mo_catalog         |\n| mo_debug           |\n| mo_task            |\n| mysql              |\n| system             |\n| system_metrics     |\n+--------------------+\n9 rows in set (0.00 sec)\n</code></pre> <ul> <li>Creating Full Backups</li> </ul> <pre><code>./mo_br backup --host \"127.0.0.1\" --port 6001 --user \"dump\" --password \"111\" --backup_dir \"filesystem\"  --path \"/Users/admin/soft/backuppath/syncback2\"\n\nBackup ID\n    2289638c-1284-11ef-85e4-26dd28356ef3\n</code></pre> <ul> <li>Create incremental backups based on the above full backup</li> </ul> <pre><code>./mo_br backup --host \"127.0.0.1\" --port 6001 --user \"dump\" --password \"111\" --backup_dir \"filesystem\"  --path \"/Users/admin/soft/backuppath/syncback2\" --backup_type \"incremental\" --base_id \"2289638c-1284-11ef-85e4-26dd28356ef3\"\n\nBackup ID\n    81531c5a-1284-11ef-9ba3-26dd28356ef3\n\n./mo_br list\n+--------------------------------------+-------+----------------------------------------+---------------------------+--------------+---------------------------+-----------------------+-------------+\n|                  ID                  | SIZE  |                  PATH                  |          AT TIME          |   DURATION   |       COMPLETE TIME       |       BACKUPTS        | BACKUPTYPE  |\n+--------------------------------------+-------+----------------------------------------+---------------------------+--------------+---------------------------+-----------------------+-------------+\n| 2289638c-1284-11ef-85e4-26dd28356ef3 | 70 MB |      BackupDir: filesystem  Path:      | 2024-05-15 14:26:59 +0800 | 9.927034917s | 2024-05-15 14:27:09 +0800 | 1715754419668571000-1 |    full     |\n|                                      |       | /Users/admin/soft/backuppath/syncback2 |                           |              |                           |                       |             |\n| 81531c5a-1284-11ef-9ba3-26dd28356ef3 | 72 MB |      BackupDir: filesystem  Path:      | 2024-05-15 14:29:38 +0800 | 2.536263666s | 2024-05-15 14:29:41 +0800 | 1715754578690660000-1 | incremental |\n|                                      |       | /Users/admin/soft/backuppath/syncback2 |                           |              |                           |                       |             |\n+--------------------------------------+-------+----------------------------------------+---------------------------+--------------+---------------------------+-----------------------+-------------+\n</code></pre> <p>Comparing the time consumption of incremental and full backups, you can see that incremental backups take less time.</p> <ul> <li>Connect mo Delete database db1 and build database db3.</li> </ul> <pre><code>drop database db1;\ncreate database db3;\n\nmysql&gt; show databases;\n+--------------------+\n| Database           |\n+--------------------+\n| db2                |\n| db3                |\n| information_schema |\n| mo_catalog         |\n| mo_debug           |\n| mo_task            |\n| mysql              |\n| system             |\n| system_metrics     |\n+--------------------+\n9 rows in set (0.00 sec)\n</code></pre> <ul> <li>Stop mo service, delete mo-data, restore backup</li> </ul> <pre><code>mo_ctl stop\nrm -rf /Users/admin/soft/matrixone/mo-data\n\n./mo_br restore 81531c5a-1284-11ef-9ba3-26dd28356ef3  --restore_dir filesystem --restore_path \"/Users/admin/soft/matrixone\"\n2024/05/15 14:35:27.910925 +0800 INFO malloc/malloc.go:43 malloc {\"max buffer size\": 2147483648, \"num shards\": 8, \"classes\": 23, \"min class size\": 128, \"max class size\": 1048576, \"buffer objects per class\": 22}\nFrom:\n    BackupDir: filesystem\n    Path: /Users/admin/soft/backuppath/syncback2\n\nTo\n    BackupDir: filesystem\n    Path: /Users/admin/soft/matrixone\n\nTaePath\n    ./mo-data/shared\n...\n</code></pre> <ul> <li>Start mo, check recovery</li> </ul> <pre><code>mo_ctl start\n</code></pre> <pre><code>mysql&gt; show databases;\n+--------------------+\n| Database           |\n+--------------------+\n| db1                |\n| db2                |\n| information_schema |\n| mo_catalog         |\n| mo_debug           |\n| mo_task            |\n| mysql              |\n| system             |\n| system_metrics     |\n+--------------------+\n9 rows in set (0.00 sec)\n</code></pre> <p>As you can see, the recovery was successful.</p>"},{"location":"MatrixOne/Maintain/backup-restore/mobr-backup-restore/mobr-snapshot-backup-restore/","title":"mo_br tool for snapshot backup recovery","text":""},{"location":"MatrixOne/Maintain/backup-restore/mobr-backup-restore/mobr-snapshot-backup-restore/#snapshot-backup-recovery-implementation-principles","title":"Snapshot Backup Recovery Implementation Principles","text":"<p>Database snapshot backup restores by creating a read-only static view of the database at a specific point in time, known as a snapshot. Snapshots utilize the storage system's copy-on-write (COW) technology to copy and store the original data page only before it is modified, creating a stateful copy of the database at the time the snapshot was created. When you need to recover data, you can pick the data from the snapshot and copy or restore it to a new or existing database. Snapshot files are initially small and grow as the source database changes, so their size needs to be monitored and managed as necessary. Snapshots must be on the same server instance as the source database, and since they are read-only, writes cannot be made directly on them. Note that snapshot recovery operations overwrite the current data, so caution is required.</p>"},{"location":"MatrixOne/Maintain/backup-restore/mobr-backup-restore/mobr-snapshot-backup-restore/#application-scenarios","title":"Application scenarios","text":"<p>Database snapshots are a powerful tool to improve database availability and performance in multiple scenarios. Here are some application scenarios for snapshots:</p> <ul> <li> <p>Data Backup and Recovery: Snapshots can be used as a way to backup a database, allowing a read-only copy of the database to be created for data backup and recovery without stopping the database service.</p> </li> <li> <p>Reports and Data Analysis: Snapshots can be used to avoid impacting online transactions when databases are required to remain static for report generation or data analysis.</p> </li> <li> <p>Development and testing: Before developing a new feature or testing system, a copy of the database can be created by snapshot so that testing can be done without affecting the production environment.</p> </li> <li> <p>Data migration: During data migration, snapshots can be used to ensure data consistency and avoid data changes during migration.</p> </li> <li> <p>High-risk operational protection: Before performing operations that may have an impact on database stability, such as database upgrades, structural changes, etc., snapshots can be created so that they can be quickly restored if the operation fails.</p> </li> </ul>"},{"location":"MatrixOne/Maintain/backup-restore/mobr-backup-restore/mobr-snapshot-backup-restore/#matrixone-support-for-snapshots","title":"MatrixOne support for snapshots","text":"<p>MatrixOne supports two ways to perform tenant-level snapshot backup restores:</p> <ul> <li>sql statement</li> <li>mo_br tool</li> </ul> <p>This document focuses on using <code>mo_br</code> for tenant-level snapshot backup restores.</p> <p>Note</p> <p>mo_br Backup and recovery tool for enterprise services, you need to contact your MatrixOne account manager for the tool download path.</p>"},{"location":"MatrixOne/Maintain/backup-restore/mobr-backup-restore/mobr-snapshot-backup-restore/#prepare-before-you-start","title":"Prepare before you start","text":"<ul> <li> <p>Completed standalone deployment of MatrixOne</p> </li> <li> <p>Completed mo_br tool deployment</p> </li> </ul>"},{"location":"MatrixOne/Maintain/backup-restore/mobr-backup-restore/mobr-snapshot-backup-restore/#examples","title":"Examples","text":""},{"location":"MatrixOne/Maintain/backup-restore/mobr-backup-restore/mobr-snapshot-backup-restore/#example-1-table-level-recovery","title":"Example 1 Table Level Recovery","text":"<ul> <li>Connecting Matrixone System Tenants to Execute Table-Building Statements</li> </ul> <pre><code>create db if not exists snapshot_read;\nuse snapshot_read;\ncreate table test_snapshot_read (a int);\nINSERT INTO test_snapshot_read (a) VALUES(1), (2), (3), (4), (5),(6), (7), (8), (9), (10), (11), (12),(13), (14), (15), (16), (17), (18), (19), (20),(21), (22), (23), (24), (25), (26), (27), (28), (29), (30),(31), (32), (33), (34), (35), (36), (37), (38), (39), (40),(41), (42), (43), (44), (45), (46), (47), (48), (49), (50),(51), (52), (53), (54), (55), (56), (57), (58), (59), (60),(61), (62), (63), (64), (65), (66), (67), (68), (69), (70),(71), (72), (73), (74), (75), (76), (77), (78), (79), (80), (81), (82), (83), (84), (85), (86), (87), (88), (89), (90),(91), (92), (93), (94), (95), (96), (97), (98), (99), (100);\n\nmysql&gt; select count(*) from snapshot_read.test_snapshot_read;\n+----------+\n| count(*) |\n+----------+\n|      100 |\n+----------+\n</code></pre> <ul> <li>Create a snapshot</li> </ul> <pre><code>./mo_br snapshot create --host \"127.0.0.1\" --port 6001 --user \"dump\" --password \"111\" --level \"account\" --sname \"sp_01\" --account \"sys\" \n\n./mo_br snapshot show --host \"127.0.0.1\" --port 6001 --user \"dump\" --password \"111\" --account \"sys\"\nSNAPSHOT NAME           TIMESTAMP           SNAPSHOT LEVEL  ACCOUNT NAME    DATABASE NAME   TABLE NAME \nsp_01           2024-05-10 02:06:08.01635   account         sys                                         \n</code></pre> <ul> <li>Connect the Matrixone system tenant by deleting some of the data in the table.</li> </ul> <pre><code>delete from snapshot_read.test_snapshot_read where a &lt;= 50;\n\nmysql&gt; select count(*) from snapshot_read.test_snapshot_read;\n+----------+\n| count(*) |\n+----------+\n|       50 |\n+----------+\n</code></pre> <ul> <li>Table level restored to this tenant</li> </ul> <pre><code>./mo_br snapshot restore --host \"127.0.0.1\" --port 6001 --user \"dump\" --password \"111\" --account \"sys\" --db \"snapshot_read\" --table \"test_snapshot_read\" --sname \"sp_01\"\n</code></pre> <ul> <li>Connect Matrixone System Tenant Query Recovery</li> </ul> <pre><code>mysql&gt; select count(*) from snapshot_read.test_snapshot_read;\n+----------+\n| count(*) |\n+----------+\n|      100 |\n+----------+\n</code></pre>"},{"location":"MatrixOne/Maintain/backup-restore/mobr-backup-restore/mobr-snapshot-backup-restore/#example-2-database-level-recovery","title":"Example 2 Database Level Recovery","text":"<ul> <li>Connect Matrixone system tenant to execute sql statement</li> </ul> <pre><code>create db if not exists snapshot_read;\nuse snapshot_read;\ncreate table test_snapshot_read (a int);\nINSERT INTO test_snapshot_read (a) VALUES(1), (2), (3), (4), (5),(6), (7), (8), (9), (10), (11), (12),(13), (14), (15), (16), (17), (18), (19), (20),(21), (22), (23), (24), (25), (26), (27), (28), (29), (30),(31), (32), (33), (34), (35), (36), (37), (38), (39), (40),(41), (42), (43), (44), (45), (46), (47), (48), (49), (50),(51), (52), (53), (54), (55), (56), (57), (58), (59), (60),(61), (62), (63), (64), (65), (66), (67), (68), (69), (70),(71), (72), (73), (74), (75), (76), (77), (78), (79), (80), (81), (82), (83), (84), (85), (86), (87), (88), (89), (90),(91), (92), (93), (94), (95), (96), (97), (98), (99), (100);\ncreate table test_snapshot_read_1(a int);\nINSERT INTO test_snapshot_read_1 (a) VALUES(1), (2), (3), (4), (5),(6), (7), (8), (9), (10), (11), (12),(13), (14), (15), (16), (17), (18), (19), (20),(21), (22), (23), (24), (25), (26), (27), (28), (29), (30),(31), (32), (33), (34), (35), (36), (37), (38), (39), (40),(41), (42), (43), (44), (45), (46), (47), (48), (49), (50),(51), (52), (53), (54), (55), (56), (57), (58), (59), (60),(61), (62), (63), (64), (65), (66), (67), (68), (69), (70),(71), (72), (73), (74), (75), (76), (77), (78), (79), (80), (81), (82), (83), (84), (85), (86), (87), (88), (89), (90),(91), (92), (93), (94), (95), (96), (97), (98), (99), (100);\n\nmysql&gt; select count(*) from snapshot_read.test_snapshot_read;\n+----------+\n| count(*) |\n+----------+\n|      200 |\n+----------+\n1 row in set (0.00 sec)\n\nmysql&gt; select count(*) from snapshot_read.test_snapshot_read_1;\n+----------+\n| count(*) |\n+----------+\n|      100 |\n+----------+\n1 row in set (0.01 sec)\n</code></pre> <ul> <li>Create a snapshot</li> </ul> <pre><code>./mo_br snapshot create --host \"127.0.0.1\" --port 6001 --user \"dump\" --password \"111\" --level \"account\" --sname \"sp_02\" --account \"sys\"\n\n./mo_br snapshot show --host \"127.0.0.1\" --port 6001 --user \"dump\" --password \"111\" --account \"sys\"\nSNAPSHOT NAME           TIMESTAMP           SNAPSHOT LEVEL  ACCOUNT NAME    DATABASE NAME   TABLE NAME \nsp_02           2024-05-10 02:47:15.638519  account         sys                                         \n</code></pre> <ul> <li>Connection Matrixone system tenant deletes some data</li> </ul> <pre><code>delete from snapshot_read.test_snapshot_read where a &lt;= 50;\ndelete from snapshot_read.test_snapshot_read_1 where a &gt;= 50;\n\nmysql&gt; select count(*) from snapshot_read.test_snapshot_read;\n+----------+\n| count(*) |\n+----------+\n|      100 |\n+----------+\n1 row in set (0.00 sec)\n\nmysql&gt; select count(*) from snapshot_read.test_snapshot_read_1;\n+----------+\n| count(*) |\n+----------+\n|       49 |\n+----------+\n1 row in set (0.01 sec)\n</code></pre> <ul> <li>Database level restore to this tenant</li> </ul> <pre><code>./mo_br snapshot restore --host \"127.0.0.1\" --port 6001 --user \"dump\" --password \"111\" --account \"sys\" --db \"snapshot_read\" --sname \"sp_02\"\n</code></pre> <ul> <li>Connect Matrixone System Tenant Query Recovery</li> </ul> <pre><code>mysql&gt; select count(*) from snapshot_read.test_snapshot_read;\n+----------+\n| count(*) |\n+----------+\n|      200 |\n+----------+\n1 row in set (0.00 sec)\n\nmysql&gt; select count(*) from snapshot_read.test_snapshot_read_1;\n+----------+\n| count(*) |\n+----------+\n|      100 |\n+----------+\n1 row in set (0.00 sec)\n</code></pre>"},{"location":"MatrixOne/Maintain/backup-restore/mobr-backup-restore/mobr-snapshot-backup-restore/#example-3-tenant-level-recovery","title":"Example 3 Tenant Level Recovery","text":"<p>Tenant Level Recovery</p> <ul> <li>Connect Matrixone system tenant to execute sql statement</li> </ul> <pre><code>create database if not exists snapshot_read;\n\nmysql&gt; show databases;\n+--------------------+\n| Database           |\n+--------------------+\n| information_schema |\n| mo_catalog         |\n| mo_debug           |\n| mo_task            |\n| mysql              |\n| snapshot_read      |\n| system             |\n| system_metrics     |\n+--------------------+\n8 rows in set (0.00 sec)\n</code></pre> <ul> <li>Create a snapshot</li> </ul> <pre><code>./mo_br snapshot create --host \"127.0.0.1\" --port 6001 --user \"dump\" --password \"111\" --level \"account\" --sname \"sp_03\" --account \"sys\"\n\n./mo_br snapshot show --host \"127.0.0.1\" --port 6001 --user \"dump\" --password \"111\"\nSNAPSHOT NAME           TIMESTAMP           SNAPSHOT LEVEL  ACCOUNT NAME    DATABASE NAME   TABLE NAME \nsp_03           2024-05-11 03:20:16.065685  account         sys                                                                 \n</code></pre> <ul> <li>Connecting Matrixone System Tenant Delete Database</li> </ul> <pre><code>drop database snapshot_read;\n\nmysql&gt; show databases;\n+--------------------+\n| Database           |\n+--------------------+\n| information_schema |\n| mo_catalog         |\n| mo_debug           |\n| mo_task            |\n| mysql              |\n| system             |\n| system_metrics     |\n+--------------------+\n7 rows in set (0.01 sec)\n</code></pre> <ul> <li>Tenant level restored to this tenant</li> </ul> <pre><code>./mo_br snapshot restore --host \"127.0.0.1\" --port 6001 --user \"dump\" --password \"111\" --account \"sys\" --sname \"sp_03\"\n</code></pre> <ul> <li>Tenant level restored to new tenant</li> </ul> <pre><code>./mo_br snapshot restore --host \"127.0.0.1\" --port 6001 --user \"dump\" --password \"111\" --account \"sys\" --sname \"sp_03\" --new_account \"acc2\" --new_admin_name \"admin\" --new_admin_password \"111\";\n</code></pre> <ul> <li>Connect Matrixone System Tenant Query Recovery</li> </ul> <pre><code>mysql&gt; show databases;\n+--------------------+\n| Database           |\n+--------------------+\n| information_schema |\n| mo_catalog         |\n| mo_debug           |\n| mo_task            |\n| mysql              |\n| snapshot_read      |\n| system             |\n| system_metrics     |\n+--------------------+\n8 rows in set (0.00 sec)\n</code></pre> <ul> <li>Connect New Tenant acc2 Query Recovery</li> </ul> <pre><code>mysql&gt; show databases;\n+--------------------+\n| Database           |\n+--------------------+\n| information_schema |\n| mo_catalog         |\n| mysql              |\n| snapshot_read      |\n| system             |\n| system_metrics     |\n+--------------------+\n6 rows in set (0.00 sec)\n</code></pre>"},{"location":"MatrixOne/Maintain/backup-restore/mobr-backup-restore/mobr/","title":"mo_br Backup and Recovery","text":"<p>Database physical backup and snapshot backup are two important data protection strategies that play an important role in many scenarios. Physical backups enable fast and complete database recovery by replicating the physical files of the database, such as data files and log files, and are especially suitable for overall database migration or disaster recovery situations. Snapshot backup, on the other hand, provides a fast and storage-efficient way of backing up data by recording its status at a specific point in time, for scenarios that require point-in-time recovery or read-only query operations, such as report generation or data analysis. The combination of physical backup recovery, which can take longer, and snapshot backup, which provides fast data access, provides comprehensive protection of the database, ensuring data security and business continuity.</p> <p>MatrixOne supports regular physical and snapshot backups via the <code>mo_br</code> utility. This section describes how <code>mo_br</code> is used.</p> <p>Note</p> <p>mo_br Physical backup and recovery tool for enterprise level services, you need to contact your MatrixOne account manager for the tool download path.</p>"},{"location":"MatrixOne/Maintain/backup-restore/mobr-backup-restore/mobr/#reference-command-guide","title":"Reference Command Guide","text":"<p>help - Print Reference Guide</p> <pre><code>./mo_br help\nthe backup and restore tool for the matrixone\n\nUsage:\n  mo_br [flags]\n  mo_br [command]\n\nAvailable Commands:\n  backup      backup the matrixone data\n  check       check the backup\n  completion  Generate the autocompletion script for the specified shell\n  delete      delete the backup\n  help        Help about any command\n  list        search the backup\n  restore     restore the matrixone data\n  snapshot    Manage snapshots\n\nFlags:\n      --config string      config file (default \"./mo_br.toml\")\n  -h, --help               help for mo_br\n      --log_file string    log file (default \"console\")\n      --log_level string   log level (default \"error\")\n\nUse \"mo_br [command] --help\" for more information about a command.\n</code></pre>"},{"location":"MatrixOne/Maintain/backup-restore/mobr-backup-restore/mobr/#physical-backup","title":"Physical backup","text":""},{"location":"MatrixOne/Maintain/backup-restore/mobr-backup-restore/mobr/#create-a-backup","title":"Create a backup","text":""},{"location":"MatrixOne/Maintain/backup-restore/mobr-backup-restore/mobr/#syntax-structure","title":"Syntax structure","text":"<pre><code>mo_br backup\n    --host\n    --port \n    --user \n    --password \n    --backup_dir s3|filesystem \n        //s3 oss minio\n            --endpoint\n            --access_key_id \n            --secret_access_key \n            --bucket \n            --filepath\n            --region \n            --compression \n            --role_arn \n            --is_minio\n            --parallelism \n        //filesystem\n            --path\n            --parallelism\n    --meta_path \n    //incremental backup required\n    --backup_type\n    --base_id\n</code></pre> <p>Parameter description</p> parameters clarification host Target MatrixOne's IP port port number user user password User's password backup_dir Destination path type for backups. s3 or filesystem endpoint URL to connect to the service that backs up to s3 access_key_id Access key ID for backup to s3 secret_access_key Secret access key for backup to s3 bucket Backup to the bucket s3 needs access to filepath Relative file paths for backups to s3 region Backup to s3's object storage service area compression The compressed format of the files backed up to s3. role_arn The resource name of the role backed up to s3. is_minio Specify whether the backup to s3 is a minio path Local file system backup path parallelism parallelism meta_path Specifies the location of the meta file. It can only be a path in the file system. If not specified, the default is the mo_br.meta file in the same directory. backup_type Specifies that the backup type is incremental, incremental. base_id The ID of the last backup, mainly used to determine the timestamp of the last backup."},{"location":"MatrixOne/Maintain/backup-restore/mobr-backup-restore/mobr/#examples","title":"Examples","text":"<ul> <li>Full backup to local file system</li> </ul> <pre><code>./mo_br backup --host \"127.0.0.1\" --port 6001 --user \"dump\" --password \"111\" --backup_dir \"filesystem\"  --path \"yourpath\"\n</code></pre> <ul> <li>Full backup to minio</li> </ul> <pre><code>./mo_br backup --host \"127.0.0.1\" --port 6001 --user \"dump\" --password \"111\" --backup_dir \"s3\"  --endpoint \"http://127.0.0.1:9000\" --access_key_id \"S0kwLuB4JofVEIAxxxx\" --secret_access_key \"X24O7t3hccmqUZqvqvmLN8464E2Nbr0DWOu9xxxx\" --bucket \"bucket1\" --filepath \"/backup1\" --is_minio\n</code></pre> <ul> <li>Incremental backup to local file system</li> </ul> <pre><code>./mo_br backup --host \"127.0.0.1\" --port 6001 --user \"dump\" --password \"111\" --backup_dir \"filesystem\"  --path \"yourpath\" --backup_type \"incremental\" --base_id \"xxx\"\n</code></pre>"},{"location":"MatrixOne/Maintain/backup-restore/mobr-backup-restore/mobr/#view-backups","title":"View backups","text":""},{"location":"MatrixOne/Maintain/backup-restore/mobr-backup-restore/mobr/#syntax-structure_1","title":"Syntax structure","text":"<pre><code>mo_br list\n    -- ID\n     // To query the backup data. If the backup is on s3(oss minio), you need to specify the\n      --access_key_id \n      --secret_access_key \n    --not_check_data \n    --meta_path \n</code></pre> <p>Parameter description</p> parameters clarification ID ID of the backup access_key_id Access key ID of the backup to s3 secret_access_key Secret access key for the backup to s3 not_check_data View only the information in the meta. Does not check the backup data. The default without this parameter is that it will check the backed up files. Currently, it will only check if the backup file exists. meta_path Specifies the location of the meta file. If not specified, the default is the mo_br.meta file in the same directory."},{"location":"MatrixOne/Maintain/backup-restore/mobr-backup-restore/mobr/#examples_1","title":"Examples","text":"<ul> <li>View a list of all backups</li> </ul> <pre><code>./mo_br list\n+--------------------------------------+--------+--------------------------------+---------------------------+--------------+---------------------------+\n|                  ID                  |  SIZE  |              PATH              |          AT TIME          |   DURATION   |       COMPLETE TIME       |\n+--------------------------------------+--------+--------------------------------+---------------------------+--------------+---------------------------+\n| 4d21b228-10dd-11ef-9497-26dd28356ef2 | 586 kB |  BackupDir: filesystem  Path:  | 2024-05-13 12:00:12 +0800 | 1.700945333s | 2024-05-13 12:00:13 +0800 |\n|                                      |        |    /Users/admin/soft/backup    |                           |              |                           |\n| 01108122-10f9-11ef-9359-26dd28356ef2 | 8.3 MB |  BackupDir: filesystem  Path:  | 2024-05-13 15:18:28 +0800 | 3.394437375s | 2024-05-13 15:18:32 +0800 |\n|                                      |        |    /Users/admin/soft/backup    |                           |              |                           |\n+--------------------------------------+--------+--------------------------------+---------------------------+--------------+---------------------------+\n</code></pre> <ul> <li>View the list of backups with the specified ID, the ID determined by list detects the backed up files.</li> </ul> <pre><code>./mo_br list 4d21b228-10dd-11ef-9497-26dd28356ef2\n+--------------------------------------+--------+--------------------------------+---------------------------+--------------+---------------------------+\n|                  ID                  |  SIZE  |              PATH              |          AT TIME          |   DURATION   |       COMPLETE TIME       |\n+--------------------------------------+--------+--------------------------------+---------------------------+--------------+---------------------------+\n| 4d21b228-10dd-11ef-9497-26dd28356ef2 | 586 kB |  BackupDir: filesystem  Path:  | 2024-05-13 12:00:12 +0800 | 1.700945333s | 2024-05-13 12:00:13 +0800 |\n|                                      |        |    /Users/admin/soft/backup    |                           |              |                           |\n+--------------------------------------+--------+--------------------------------+---------------------------+--------------+---------------------------+\n\nChecking the backup data(currently,no checksum)...\n\ncheck: /backup_meta\ncheck: /mo_meta\ncheck: hakeeper/hk_data\ncheck: tae/tae_list\ncheck: tae/tae_sum\ncheck: config/log.toml_018f70d1-3100-7762-b28b-8f85ac4ed3cd\ncheck: config/tn.toml_018f70d1-310e-78fc-ac96-aa5e06981bd7\n...\n</code></pre>"},{"location":"MatrixOne/Maintain/backup-restore/mobr-backup-restore/mobr/#delete-backup","title":"Delete Backup","text":""},{"location":"MatrixOne/Maintain/backup-restore/mobr-backup-restore/mobr/#syntax-structure_2","title":"Syntax structure","text":"<pre><code>mo_br delete ID  \n    //To delete backup data. If the backup is on s3 (oss minio), you need to specify the\n      --access_key_id \n      --secret_access_key\n    --not_delete_data\n    --meta_path\n</code></pre> <p>Parameter description</p> parameters clarification ID ID of the backup to be deleted access_key_id Access key ID of the backup to s3 secret_access_key Secret access key for the backup to s3 not_delete_data Only the information in the meta is deleted. Backup data is not deleted. meta_path Specifies the location of the meta file. If not specified, the default is the mo_br.meta file in the same directory."},{"location":"MatrixOne/Maintain/backup-restore/mobr-backup-restore/mobr/#examples_2","title":"Examples","text":"<ul> <li>Delete Local File System Backup</li> </ul> <pre><code>./mo_br delete e4cade26-3139-11ee-8631-acde48001122\n</code></pre> <ul> <li>Delete a backup on minio.</li> </ul> <pre><code>./mo_br delete e4cade26-3139-11ee-8631-acde48001122 --access_key_id \"S0kwLuB4JofVEIAxWTqf\" --secret_access_key \"X24O7t3hccmqUZqvqvmLN8464E2Nbr0DWOu9Qs5A\"\n</code></pre>"},{"location":"MatrixOne/Maintain/backup-restore/mobr-backup-restore/mobr/#restore-backup","title":"Restore Backup","text":""},{"location":"MatrixOne/Maintain/backup-restore/mobr-backup-restore/mobr/#syntax-structure_3","title":"Syntax structure","text":"<ul> <li>Restore a backup with the specified ID</li> </ul> <pre><code>mo_br restore ID\n    //Reads the backup data with the specified ID. If the backup is on s3(oss minio), you need to specify the\n    --backup_access_key_id\n    --backup_secret_access_key \n\n    //Destination path to restore restore_directory\n    --restore_dir s3|filesystem \n        //s3 \n            --restore_endpoint \n            --restore_access_key_id \n            --restore_secret_access_key \n            --restore_bucket \n            --restore_filepath \n            --restore_region \n            --restore_compression \n            --restore_role_arn \n            --restore_is_minio\n        //filesystem\n            --restore_path \n            --dn_config_path \n    --meta_path \n    --checksum\n    --parallelism \n</code></pre> <p>Parameter description</p> parameters clarification ID ID to be recovered backup_access_key_id Access key ID of the backup in s3 backup_secret_access_key Secret access key backed up in s3 restore_dir Destination path type for recovery. Use when specifying the destination path for recovery. s3 restore_endpoint Connect to the URL to restore to the S3 service restore_access_key_id Access key ID restored to s3 restore_secret_access_key Recover the secret access key to s3 restore_bucket Recover to the bucket that s3 needs to access restore_filepath Relative file path to restore to s3 restore_region Restore the object storage service area to s3 restore_compression The compressed format of the S3 file restored to s3. restore_role_arn Resource name of the role restored to s3. restore_is_minio Specifies whether the recovered s3 is a minio restore_path Restore to local path dn_config_path dn Configuration path meta_path Specifies the location of the meta file. It can only be a path in the file system. If not specified, the default is the mo_br.meta file in the same directory. checksum Parallelism of tae file replication during recovery, default is 1 parallelism parallelism <ul> <li>Do not specify a restore backup ID</li> </ul> <pre><code>//Recovery\nmo_br restore\n    --backup_dir s3|filesystem Destination path type for backups. Used when specifying the destination path for backups.\n        //s3 \n            --backup_endpoint \n            --backup_access_key_id \n            --backup_secret_access_key\n            --backup_bucket\n            --backup_filepath\n            --backup_region \n            --backup_compression \n            --backup_role_arn \n            --backup_is_minio\n        //filesystem\n            --backup_path \n    //Destination path to restore restore_directory\n    --restore_dir s3|filesystem //Destination path type for recovery. Used when specifying the destination path for recovery.\n        //s3 \n            --restore_endpoint \n            --restore_access_key_id \n            --restore_secret_access_key \n            --restore_bucket \n            --restore_filepath\n            --restore_region \n            --restore_compression \n            --restore_role_arn \n            --restore_is_minio\n        //filesystem\n            --restore_path \n            --dn_config_path \n    --meta_path \n    --checksum\n    --parallelism\n</code></pre> <p>Parameter description</p> parameters clarification backup_dir Destination path type for recovery. Use when specifying the destination path for recovery. s3 backup_endpoint Connect to the URL of the backup on s3 backup_access_key_id Access key ID of the backup in s3 backup_secret_access_key \u5907\u4efd\u5728 s3 \u7684 Secret access key backup_bucket Backup bucket in s3 backup_filepath Relative file paths for backups in s3 backup_region Backup service area in s3 backup_compression The compressed format of the files backed up in s3. backup_role_arn The resource name of the role backed up in s3. backup_is_minio Specifies whether the backup s3 is minio backup_path Path to local backup restore_dir The type of destination path to recover. To specify the destination path for recovery, use. s3 or filesystem restore_endpoint Connect to the URL to restore to the S3 service restore_access_key_id Access key ID restored to s3 restore_secret_access_key Recover the secret access key to s3 restore_bucket Recover to the bucket that s3 needs to access restore_filepath Relative file path to restore to s3 restore_region Restore the object storage service area to s3 restore_compression The compressed format of the S3 file restored to s3. restore_role_arn Resource name of the role restored to s3. restore_is_minio Specifies whether the recovered s3 is a minio restore_path Restore the path to the local matrixone dn_config_path dn Configuration path meta_path Specifies the location of the meta file. It can only be a path in the file system. If not specified, the default is the mo_br.meta file in the same directory. checksum Parallelism of tae file replication during recovery, default is 1 parallelism parallelism"},{"location":"MatrixOne/Maintain/backup-restore/mobr-backup-restore/mobr/#examples_3","title":"Examples","text":"<p>Restore from File System to File System</p> <p>Step one: Stop mo, delete mo-data</p> <p>Step Two: Execute the following recovery command</p> <pre><code>./mo_br restore fb26fd88-41bc-11ee-93f8-acde48001122 --restore_dir filesystem --restore_path \"your_mopath\"\n</code></pre> <p>After recovery a new mo-data file is generated at matrixone</p> <p>Step three: Start mo</p>"},{"location":"MatrixOne/Maintain/backup-restore/mobr-backup-restore/mobr/#verify-the-check-code-for-the-backup","title":"Verify the check code for the backup","text":"<p>Read each file in the backup folder and its sha256 file. Calculates the sha256 value of the file and compares it to the sha256 file value. The sha256 file is created when the file is created or updated.</p>"},{"location":"MatrixOne/Maintain/backup-restore/mobr-backup-restore/mobr/#syntax-structure_4","title":"Syntax structure","text":"<ul> <li>Verify a backup of an ID</li> </ul> <pre><code>mo_br check ID\n    //Checks the backup data for the specified ID. If the backup is on s3 (oss minio), you need to specify \n      --backup_access_key_id string\n      --backup_secret_access_key string\n    --meta_path string //Specifies the meta file location. If not specified, the default is the mo_br.meta file in the same directory.\n</code></pre> <p>Parameter description</p> parameters clarification backup_access_key_id Access key ID of the backup in s3 backup_secret_access_key Secret access key backed up in s3 meta_path Specifies the location of the meta file. It can only be a path in the file system. If not specified, the default is the mo_br.meta file in the same directory. <ul> <li>Verify the backup, specifying the path to the backup</li> </ul> <pre><code>mo_br check\n    --backup_dir s3|filesystem \n        //s3 \n            --backup_endpoint\n            --backup_access_key_id\n            --backup_secret_access_key \n            --backup_bucket\n            --backup_filepath \n            --backup_region \n            --backup_compression\n            --backup_role_arn \n            --backup_is_minio\n        //filesystem\n            --backup_path\n    --meta_path \n</code></pre> <p>Parameter description</p> parameters clarification backup_dir The type of path where the backup is located, which must be specified if no ID is specified. s3 or filesystem backup_endpoint Connect to the URL of the backup on s3 backup_access_key_id Access key ID of the backup in s3 backup_secret_access_key Secret access key backed up in s3 backup_bucket Backup bucket in s3 backup_filepath Relative file paths for backups in s3 backup_region Backup service area in s3 backup_compression The compressed format of the files backed up in s3. backup_role_arn The resource name of the role backed up in s3. backup_is_minio Specifies whether the backup s3 is minio backup_path Path to local backup meta_path Specifies the location of the meta file. It can only be a path in the file system. If not specified, the default is the mo_br.meta file in the same directory."},{"location":"MatrixOne/Maintain/backup-restore/mobr-backup-restore/mobr/#examples_4","title":"Examples","text":"<ul> <li>Verify a backup of an ID</li> </ul> <pre><code>./mo_br check  1614f462-126c-11ef-9af3-26dd28356ef3\n+--------------------------------------+--------+-----------------------------------+---------------------------+---------------+---------------------------+\n|                  ID                  |  SIZE  |               PATH                |          AT TIME          |   DURATION    |       COMPLETE TIME       |\n+--------------------------------------+--------+-----------------------------------+---------------------------+---------------+---------------------------+\n| 1614f462-126c-11ef-9af3-26dd28356ef3 | 126 MB |   BackupDir: filesystem  Path:    | 2024-05-15 11:34:28 +0800 | 22.455633916s | 2024-05-15 11:34:50 +0800 |\n|                                      |        | /Users/admin/soft/incbackup/back2 |                           |               |                           |\n+--------------------------------------+--------+-----------------------------------+---------------------------+---------------+---------------------------+\n\nChecking the backup data...\n\ncheck: /backup_meta\ncheck: /mo_meta\ncheck: hakeeper/hk_data\ncheck: tae/tae_list\ncheck: tae/tae_sum\ncheck: config/launch.toml_018f7a50-d300-7017-8580-150edf08733e\n...\n</code></pre> <ul> <li>Verify backups in a backup directory</li> </ul> <pre><code>(base) admin@admindeMacBook-Pro mo-backup % ./mo_br check --backup_dir filesystem --backup_path /Users/admin/soft/incbackup/back2\n2024/05/15 11:40:30.011160 +0800 INFO malloc/malloc.go:42 malloc {\"max buffer size\": 1073741824, \"num shards\": 16, \"classes\": 23, \"min class size\": 128, \"max class size\": 1048576, \"buffer objects per class\": 23}\ncheck: /backup_meta\ncheck: /mo_meta\ncheck: hakeeper/hk_data\ncheck: tae/tae_list\ncheck: tae/tae_sum\ncheck: config/launch.toml_018f7a50-d300-7017-8580-150edf08733e\ncheck: config/log.toml_018f7a50-d30c-7ed0-85bc-191e9f1eb753\n...\n</code></pre>"},{"location":"MatrixOne/Maintain/backup-restore/mobr-backup-restore/mobr/#snapshot-backup","title":"snapshot backup","text":""},{"location":"MatrixOne/Maintain/backup-restore/mobr-backup-restore/mobr/#create-a-snapshot","title":"Create a snapshot","text":""},{"location":"MatrixOne/Maintain/backup-restore/mobr-backup-restore/mobr/#syntax-structure_5","title":"Syntax structure","text":"<pre><code>mo_br snapshot create\n    --host\n    --port \n    --user\n    --password \n    --level \n    --account \n    --sname \n</code></pre> <p>Parameter description</p> Parameters Description host Target MatrixOne's IP port port number user user password User's password level Scope of snapshot backup, only account is supported for the time being account Tenant object name for snapshot backups sname Snapshot name"},{"location":"MatrixOne/Maintain/backup-restore/mobr-backup-restore/mobr/#examples_5","title":"Examples","text":"<ul> <li>To create a snapshot for system tenant sys:</li> </ul> <pre><code>./mo_br snapshot create --host \"127.0.0.1\" --port 6001 --user \"dump\" --password \"111\" --level \"account\" --sname \"snapshot_01\" --account \"sys\"\n</code></pre> <ul> <li>System tenant creates snapshot for normal tenant acc1:</li> </ul> <pre><code> ./mo_br snapshot create --host \"127.0.0.1\" --port 6001 --user \"dump\" --password \"111\" --level \"account\" --sname \"snapshot_02\" --account \"acc1\" \n</code></pre> <ul> <li> <p>Normal tenant creation snapshot:</p> <ul> <li>Create Normal Tenant acc1</li> </ul> <pre><code>create account acc1 admin_name admin IDENTIFIED BY '111';\n</code></pre> <ul> <li>acc1 Create snapshot</li> </ul> <pre><code>./mo_br snapshot create  --host \"127.0.0.1\" --port 6001 --user \"acc1#admin\" --password \"111\" --level \"account\" --account \"acc1\" --sname \"snapshot_03\"\n</code></pre> </li> </ul>"},{"location":"MatrixOne/Maintain/backup-restore/mobr-backup-restore/mobr/#view-snapshots","title":"View snapshots","text":""},{"location":"MatrixOne/Maintain/backup-restore/mobr-backup-restore/mobr/#syntax-structure_6","title":"Syntax structure","text":"<pre><code>mo_br snapshot show\n    --host\n    --port \n    --user \n    --password \n    --account \n    --db \n    --table \n    --sname \n    --beginTs \n    --endTs\n</code></pre> <p>Parameter description</p> Parameters Description host Target MatrixOne's IP port port number user subscribers password User's password account Tenant name to filter, for sys administrators only db The name of the database to be filtered table Table name to filter sname Name of the snapshot to filter beginTs Start time of the snapshot timestamp to be filtered endTs The end time of the snapshot timestamp to be filtered"},{"location":"MatrixOne/Maintain/backup-restore/mobr-backup-restore/mobr/#examples_6","title":"Examples","text":"<ul> <li>To view snapshots created under System Tenants:</li> </ul> <pre><code>./mo_br snapshot show --host \"127.0.0.1\" --port 6001 --user \"dump\" --password \"111\"\nSNAPSHOT NAME           TIMESTAMP           SNAPSHOT LEVEL  ACCOUNT NAME    DATABASE NAME   TABLE NAME \nsnapshot_02     2024-05-11 02:29:23.07401   account         acc1                                        \nsnapshot_01     2024-05-11 02:26:03.462462  account         sys  \n</code></pre> <ul> <li>View the snapshot created under acc1:</li> </ul> <pre><code>./mo_br snapshot show --host \"127.0.0.1\" --port 6001 --user \"acc1#admin\" --password \"111\"\nSNAPSHOT NAME           TIMESTAMP           SNAPSHOT LEVEL  ACCOUNT NAME    DATABASE NAME   TABLE NAME \nsnapshot_03     2024-05-11 02:29:31.572512  account         acc1     \n</code></pre> <ul> <li>View the snapshot created for tenant acc1 under System Tenant and filter the start time:</li> </ul> <pre><code>./mo_br snapshot show --host \"127.0.0.1\" --port 6001 --user \"dump\" --password \"111\" --account \"acc1\" --beginTs \"2024-05-11 00:00:00\"     \nSNAPSHOT NAME           TIMESTAMP           SNAPSHOT LEVEL  ACCOUNT NAME    DATABASE NAME   TABLE NAME \nsnapshot_02     2024-05-11 02:29:23.07401   account         acc1 \n</code></pre>"},{"location":"MatrixOne/Maintain/backup-restore/mobr-backup-restore/mobr/#delete-snapshot","title":"Delete Snapshot","text":""},{"location":"MatrixOne/Maintain/backup-restore/mobr-backup-restore/mobr/#syntax-structure_7","title":"Syntax structure","text":"<pre><code>mo_br snapshot drop\n    --host\n    --port \n    --user \n    --password \n    --sname \n</code></pre> <p>Parameter description</p> Parameters Description host Target MatrixOne's IP port port number user subscribers password User's password sname Name of the snapshot to filter"},{"location":"MatrixOne/Maintain/backup-restore/mobr-backup-restore/mobr/#examples_7","title":"Examples","text":"<ul> <li>To delete a snapshot created by a system tenant:</li> </ul> <pre><code>./mo_br snapshot drop --host \"127.0.0.1\" --port 6001 --user \"dump\" --password \"111\" --sname \"snapshot_01\"\n</code></pre> <ul> <li>To delete a snapshot created by a normal tenant:</li> </ul> <pre><code>./mo_br snapshot drop --host \"127.0.0.1\" --port 6001 --user \"acc1#admin\" --password \"111\" --sname \"snapshot_03\" \n</code></pre>"},{"location":"MatrixOne/Maintain/backup-restore/mobr-backup-restore/mobr/#restoring-a-snapshot","title":"Restoring a snapshot","text":""},{"location":"MatrixOne/Maintain/backup-restore/mobr-backup-restore/mobr/#syntax-structure_8","title":"Syntax structure","text":"<pre><code>mo_br snapshot restore\n    --host \n    --port \n    --user \n    --password \n    --sname \n    --account \n    --db \n    --table \n    --newaccount \n    --newaccountadmin \n    --newaccountpwd \n</code></pre> <p>Parameter description</p> Parameters Description host Target MatrixOne's IP port port number user subscribers password User's password sname Name of the snapshot to be restored account The name of the tenant to restore, for sys administrators only db Name of the database to be recovered table The name of the table to be recovered newaccount Newly created tenant name newaccountadmin tenant manager newaccountpwd Tenant Administrator Password <p>NOTE: Only system tenants can perform restore data to a new tenant, and only tenant-level restores are allowed.</p>"},{"location":"MatrixOne/Maintain/backup-restore/mobr-backup-restore/mobr/#examples_8","title":"Examples","text":"<ul> <li>Table level restored to this tenant</li> </ul> <pre><code>./mo_br snapshot restore --host \"127.0.0.1\" --port 6001 --user \"dump\" --password \"111\" --account \"sys\" --db \"snapshot_read\" --table \"test_snapshot_read\" --sname \"sp_01\"\n</code></pre> <ul> <li>Database level restore to this tenant</li> </ul> <pre><code>./mo_br snapshot restore --host \"127.0.0.1\" --port 6001 --user \"dump\" --password \"111\" --account \"sys\" --db \"snapshot_read\" --sname \"sp_02\"\n</code></pre> <ul> <li>Tenant level restored to this tenant</li> </ul> <pre><code>./mo_br snapshot restore --host \"127.0.0.1\" --port 6001 --user \"dump\" --password \"111\" --account \"sys\" --sname \"sp_03\"\n</code></pre> <ul> <li>Tenant level restored to new tenant</li> </ul> <pre><code>./mo_br snapshot restore --host \"127.0.0.1\" --port 6001 --user \"dump\" --password \"111\" --account \"sys\" --sname \"sp_03\" --new_account \"acc2\" --new_admin_name \"admin\" --new_admin_password \"111\";\n</code></pre>"},{"location":"MatrixOne/Migrate/migrate-from-mysql-to-matrixone/","title":"Migrate data from MySQL to MatrixOne","text":"<p>This document will guide you on how to migrate data from MySQL to MatrixOne.</p> <p>MatrixOne maintains a high degree of compatibility with MySQL syntax, so no other operations are required during the migration process to achieve seamless migration.</p>"},{"location":"MatrixOne/Migrate/migrate-from-mysql-to-matrixone/#data-type-difference","title":"Data type difference","text":"<p>In MatrixOne, while maintaining the same name as MySQL, there are slight differences in accuracy and range between data types and MySQL. For more information, see Data Types.</p>"},{"location":"MatrixOne/Migrate/migrate-from-mysql-to-matrixone/#online-migration","title":"Online Migration","text":"<p>This chapter will guide you to use third-party tools - DBeaver to migrate data from MySQL to MatrixOne.</p> <ul> <li>Applicable scenarios: scenarios where the amount of data is small (recommended less than 1GB), and the migration speed is not sensitive.</li> </ul>"},{"location":"MatrixOne/Migrate/migrate-from-mysql-to-matrixone/#preparation","title":"Preparation","text":"<ul> <li>Springboard machine with a graphical interface: it can connect to the source of MySQL and the target of MatrixOne.</li> <li>Data Migration Tool: Download DBeaver on the springboard machine.</li> </ul>"},{"location":"MatrixOne/Migrate/migrate-from-mysql-to-matrixone/#step-1-migrate-table-structure","title":"Step 1: Migrate table structure","text":"<p>Here we take the TPCH dataset as an example and migrate the 8 tables of the TPCH dataset from MySQL to MatrixOne.</p> <ol> <li> <p>Open DBeaver, select the table to be migrated from MySQL, right-click and select Generate SQL &gt; DDL Click Copy, first copy this SQL to a text editor for text editing Name the filer as tpch_ddl.sql and save it locally on the springboard machine.</p> <p></p> </li> <li> <p>Connect to MatrixOne and create a new database and table in MatrixOne:</p> <pre><code>create database tpch;\nuse tpch;\nsource '/YOUR_PATH/tpch_ddl.sql'\n</code></pre> </li> </ol>"},{"location":"MatrixOne/Migrate/migrate-from-mysql-to-matrixone/#step-2-migrate-data","title":"Step 2: Migrate data","text":"<ol> <li> <p>Open DBeaver, select the table to be migrated from MySQL, right-click and select Export Data:</p> <p></p> </li> <li> <p>In the Conversion Target &gt; Export Target window, select Database, click Next; in the Table Mapping window, select Target Container, and select the MatrixOne database for the target container tpch:</p> <p></p> <p></p> </li> <li> <p>In the Extraction Settings and Data Loading Settings windows, set the number of selected extractions and inserts. To trigger MatrixOne's direct write S3 strategy, it is recommended to fill in 5000:</p> <p></p> <p></p> </li> <li> <p>After completing the settings, DBeaver starts to migrate the data, and after completion, DBeaver will prompt that the migration is successful.</p> </li> </ol>"},{"location":"MatrixOne/Migrate/migrate-from-mysql-to-matrixone/#step-3-check-the-data","title":"Step 3: Check the data","text":"<p>After the migration is complete, the data can be inspected as follows:</p> <ul> <li> <p>Use <code>select count(*) from &lt;table_name&gt;</code> to confirm whether the data volume of the source database and target databases' data volume is consistent.</p> </li> <li> <p>Compare the results through related queries; you can also refer to the Complete TPCH testing query example to compare the results.</p> </li> </ul>"},{"location":"MatrixOne/Migrate/migrate-from-mysql-to-matrixone/#offline-migration","title":"Offline Migration","text":"<p>This chapter will guide you through importing to MatrixOne through offline files.</p> <ul> <li>Applicable scenarios: scenarios with a large amount of data (more significant than 1GB) and sensitive to migration speed.</li> </ul>"},{"location":"MatrixOne/Migrate/migrate-from-mysql-to-matrixone/#preparation_1","title":"Preparation","text":"<ul> <li>Springboard machine with a graphical interface: it can be connected to the source end of MySQL and the target end of MatrixOne.</li> <li>Data Migration Tool: Download DBeaver to the springboard machine.</li> <li>Install <code>mysqldump</code> in MySQL server. If you are not familiar with how to use <code>mysqldump</code>, see mysqldump tutorial</li> </ul>"},{"location":"MatrixOne/Migrate/migrate-from-mysql-to-matrixone/#step-1-migrate-table-structure_1","title":"Step 1: Migrate table structure","text":"<p>Here we take the TPCH dataset as an example and migrate the 8 tables of the TPCH dataset from MySQL to MatrixOne.</p> <ol> <li> <p>Open DBeaver, select the table to be migrated from MySQL, right-click and select Generate SQL &gt; DDL &gt; Copy, first copy this SQL to a text editor, and name the text editor tpch_ddl.sql, saved locally on the springboard machine.</p> <p></p> </li> <li> <p>Connect to MatrixOne and create a new database and table in MatrixOne:</p> <pre><code>create database tpch;\nuse tpch;\nsource '/YOUR_PATH/tpch_ddl.sql'\n</code></pre> </li> </ol>"},{"location":"MatrixOne/Migrate/migrate-from-mysql-to-matrixone/#step-2-migrate-data_1","title":"Step 2: Migrate data","text":"<p>MatrixOne has two data migration methods to choose from: <code>INSERT</code> and <code>LOAD DATA</code>. When the amount of data is greater than 1GB, it is recommended to use <code>LOAD DATA</code> first, followed by <code>INSERT</code>.</p>"},{"location":"MatrixOne/Migrate/migrate-from-mysql-to-matrixone/#load-data","title":"LOAD DATA","text":"<ol> <li> <p>Use <code>mysqldump</code> to export the MySQL data table as a CSV format file. Make sure you have write access to the file path and check the <code>secure_file_priv</code> configuration:</p> <pre><code>mysqldump -u root -p -t -T /{filepath} tpch --fields-terminated-by='|'\n</code></pre> </li> <li> <p>Connect to MatrixOne and import the exported CSV data into MatrixOne:</p> <pre><code>mysql&gt; load data infile '/{filepath}/lineitem.txt' INTO TABLE lineitem FIELDS TERMINATED BY '|' lines TERMINATED BY '\\n' parallel 'true';\nmysql&gt; load data infile '/{filepath}/nation.txt' INTO TABLE nation FIELDS TERMINATED BY '|' lines TERMINATED BY '\\n' parallel 'true';\nmysql&gt; load data infile '/{filepath}/part.txt' INTO TABLE part FIELDS TERMINATED BY '|' lines TERMINATED BY '\\n' parallel 'true';\nmysql&gt; load data infile '/{filepath}/customer.txt' INTO TABLE customer FIELDS TERMINATED BY '|' lines TERMINATED BY '\\n' parallel 'true';\nmysql&gt; load data infile '/{filepath}/orders.txt' INTO TABLE orders FIELDS TERMINATED BY '|' lines TERMINATED BY '\\n' parallel 'true';\nmysql&gt; load data infile '/{filepath}/supplier.txt' INTO TABLE supplier FIELDS TERMINATED BY '|' lines TERMINATED BY '\\n' parallel 'true';\nmysql&gt; load data infile '/{filepath}/region.txt' INTO TABLE region FIELDS TERMINATED BY '|' lines TERMINATED BY '\\n' parallel 'true';\nmysql&gt; load data infile '/{filepath}/partsupp.txt' INTO TABLE partsupp FIELDS TERMINATED BY '|' lines TERMINATED BY '\\n' parallel 'true';\n</code></pre> </li> </ol> <p>For more operation examples of <code>LOAD DATA</code>, see Bulk Load Overview.</p>"},{"location":"MatrixOne/Migrate/migrate-from-mysql-to-matrixone/#insert","title":"INSERT","text":"<p>The <code>INSERT</code> statement needs to use <code>mysqldump</code> to export the logical statement first and then import it into MatrixOne:</p> <ol> <li> <p>Use <code>mysqldump</code> to export data. To ensure that MatrixOne directly writes to S3 when inserting, inserting as large a batch as possible is recommended. The <code>net_buffer_length</code> parameter should start at 10MB:</p> <pre><code>mysqldump -t tpch -uroot -p --net_buffer_length=10m &gt; tpch_data.sql\n</code></pre> </li> <li> <p>On the MatrixOne side, execute the SQL file, there will be an error message during the process, but it will not affect the data insertion:</p> <pre><code>source '/YOUR_PATH/tpch_data.sql'\n</code></pre> </li> </ol> <p>For more examples of <code>INSERT</code> operations, see Insert Data.</p>"},{"location":"MatrixOne/Migrate/migrate-from-mysql-to-matrixone/#step-3-check-the-data_1","title":"Step 3: Check the data","text":"<p>After the migration is complete, the data can be inspected as follows:</p> <ul> <li> <p>Use <code>select count(*) from &lt;table_name&gt;</code> to confirm whether the data volume of the source database and target databases' data volume is consistent.</p> </li> <li> <p>Compare the results through related queries; you can also refer to the Complete a TPCH Test with MatrixOne query example to compare the results.</p> </li> </ul>"},{"location":"MatrixOne/Migrate/migrate-from-mysql-to-matrixone/#reference-example","title":"Reference example","text":"<p>If you are a novice and want to migrate a small amount of data, see Import data by using the <code>source</code> command.</p>"},{"location":"MatrixOne/Migrate/migrate-from-mysql-to-matrixone/#constraints","title":"Constraints","text":"<p>MatrixOne v1.1.2 version already supports MySQL table creation statements, so you can smoothly migrate MySQL tables to MatrixOne. However, it should be noted that during the migration process, some keywords incompatible with MySQL, such as <code>engine=</code>, will be automatically ignored in MatrixOne and will not affect the migration of the table structure.</p> <p>However, it should be noted that although MatrixOne supports MySQL table creation statements, manual modification is still required if the migrated table contains incompatible data types, triggers, functions, or stored procedures. For more detailed compatibility information, see MySQL Compatibility.</p>"},{"location":"MatrixOne/Migrate/migrate-from-oracle-to-matrixone/","title":"Migrate data from SQL Server to MatrixOne","text":"<p>This document will guide you on how to migrate data from Oracle to MatrixOne.</p> <p>Oracle is currently the most widely used commercial database in the world. Its usage scenarios and popularity rank first in DBEngine all year round. MatrixOne can also support the scenario of migrating data from Oracle. According to the size of Oracle data, this article still recommends using online and offline modes for migration.</p>"},{"location":"MatrixOne/Migrate/migrate-from-oracle-to-matrixone/#data-type-difference","title":"Data type difference","text":"<p>There are many differences between MatrixOne and Oracle's built-in data types. Other types can replace some differences, and some cannot be supported temporarily. The specific list is as follows:</p> Oracle MatrixOne varchar2 replace with text nchar/nvarcahr replace with char/varchar NUMBER(3,0), NUMBER(5,0) replace with smallint NUMBER(10,0) replace with int NUMBER(38,0) replace with bitint NUMBER(n,p) (p&gt;0) replace with decimal(n,p) binary_float/binary_double replace with float/double long replace with text long raw replace with blob raw replace with varbinary clob/nclob replace with text bfile Not supported yet rowid/urowid Not Supported user-defined types Not supported yet any Not supported yet xml Not supported yet spatial Not supported yet"},{"location":"MatrixOne/Migrate/migrate-from-oracle-to-matrixone/#online-migration","title":"Online Migration","text":"<p>This chapter will guide you to use third-party tools - DBeaver to migrate data from Oracle to MatrixOne.</p> <p>Through DBeaver, the source data is obtained in batches, and then the data is inserted into the target database as <code>INSERT</code>. If an error is reported during the migration process that the heap space is insufficient, please try to adjust the size of each batch of fetched and inserted data.</p> <ul> <li> <p>Applicable scenarios: scenarios where the amount of data is small (recommended less than 1GB), and the migration speed is not sensitive.</p> </li> <li> <p>The recommended configuration of the springboard machine where DBeaver is installed: RAM 16GB or more.</p> </li> </ul>"},{"location":"MatrixOne/Migrate/migrate-from-oracle-to-matrixone/#preparation","title":"Preparation","text":"<ul> <li>Springboard machine with a graphical interface: it can connect to the source of Oracle and the target of MatrixOne.</li> <li>Data Migration Tool: Download DBeaver on the springboard machine.</li> </ul>"},{"location":"MatrixOne/Migrate/migrate-from-oracle-to-matrixone/#step-1-migrate-table-structure","title":"Step 1: Migrate table structure","text":"<p>Here we take the TPCH dataset as an example and migrate the 8 tables of the TPCH dataset from Oracle to MatrixOne.</p> <ol> <li> <p>Open DBeaver, select the table to be migrated from Oracle, right-click and select Generate SQL &gt; DDL Click Copy, first copy this SQL to a text editor for text editing Name the filer as oracle_ddl.sql and save it locally on the springboard machine.</p> <p></p> </li> <li> <p>Use the following command to replace keywords not supported by MatrixOne in the oracle_ddl.sql file:</p> <pre><code># The commands executed by the Linux system are as follows:\nsed -i '/CHECK (/d' /YOUR_PATH/oracle_ddl.sql\nsed -i '/CREATE UNIQUE INDEX/g' /YOUR_PATH/oracle_ddl.sql\nsed -i 's/NUMBER(3,0)/smallint/g' /YOUR_PATH/oracle_ddl.sql\nsed -i 's/NUMBER(5,0)/smallint/g' /YOUR_PATH/oracle_ddl.sql\nsed -i 's/NUMBER(10,0)/int/g' /YOUR_PATH/oracle_ddl.sql\nsed -i 's/NUMBER(38,0)/bigint/g' /YOUR_PATH/oracle_ddl.sql\nsed -i 's/NUMBER/decimal/g' /YOUR_PATH/oracle_ddl.sql\nsed -i 's/VARCHAR2/varchar/g' /YOUR_PATH/oracle_ddl.sql\n\n# The commands executed by the MacOS system are as follows:\nsed -i '' '/CHECK (/d' /YOUR_PATH/oracle_ddl.sql\nsed -i '' '/CREATE UNIQUE INDEX/g' /YOUR_PATH/oracle_ddl.sql\nsed -i '' 's/NUMBER(3,0)/smallint/g' /YOUR_PATH/oracle_ddl.sql\nsed -i '' 's/NUMBER(5,0)/smallint/g' /YOUR_PATH/oracle_ddl.sql\nsed -i '' 's/NUMBER(10,0)/int/g' /YOUR_PATH/oracle_ddl.sql\nsed -i '' 's/NUMBER(38,0)/bigint/g' /YOUR_PATH/oracle_ddl.sql\nsed -i '' 's/NUMBER/decimal/g' /YOUR_PATH/oracle_ddl.sql\nsed -i '' 's/VARCHAR2/varchar/g' /YOUR_PATH/oracle_ddl.sql\n</code></pre> </li> <li> <p>Connect to MatrixOne and create a new database and table in MatrixOne:</p> <pre><code>create database tpch;\nuse tpch;\nsource '/YOUR_PATH/oracle_ddl.sql'\n</code></pre> </li> </ol>"},{"location":"MatrixOne/Migrate/migrate-from-oracle-to-matrixone/#step-2-migrate-data","title":"Step 2: Migrate data","text":"<ol> <li> <p>Open DBeaver, select the table to be migrated from Oracle, right-click and select Export Data:</p> <p></p> </li> <li> <p>In the Conversion Target &gt; Export Target window, select Database, click Next; in the Table Mapping window, select Target Container, and select the MatrixOne database for the target container tpch:</p> <p></p> <p></p> </li> <li> <p>In the Extraction Settings and Data Loading Settings windows, set the number of selected extractions and inserts. To trigger MatrixOne's direct write S3 strategy, it is recommended to fill in 5000:</p> <p></p> <p></p> </li> <li> <p>After completing the settings, DBeaver starts to migrate the data, and after completion, DBeaver will prompt that the migration is successful.</p> </li> </ol>"},{"location":"MatrixOne/Migrate/migrate-from-oracle-to-matrixone/#step-3-check-the-data","title":"Step 3: Check the data","text":"<p>After the migration is complete, the data can be inspected as follows:</p> <ul> <li> <p>Use <code>select count(*) from &lt;table_name&gt;</code> to confirm whether the data volume of the source database and target databases' data volume is consistent.</p> </li> <li> <p>Compare the results through related queries; you can also refer to the Complete TPCH testing query example to compare the results.</p> </li> </ul>"},{"location":"MatrixOne/Migrate/migrate-from-oracle-to-matrixone/#offline-migration","title":"Offline Migration","text":"<p>This chapter will guide you through importing to MatrixOne through offline files.</p> <ul> <li>Applicable scenarios: scenarios with a large amount of data (more significant than 1GB) and sensitive to migration speed.</li> </ul>"},{"location":"MatrixOne/Migrate/migrate-from-oracle-to-matrixone/#preparation_1","title":"Preparation","text":"<ul> <li>Springboard machine with a graphical interface: it can be connected to the source end of Oracle and the target end of MatrixOne.</li> <li>Data Migration Tool: Download DBeaver to the springboard machine.</li> </ul>"},{"location":"MatrixOne/Migrate/migrate-from-oracle-to-matrixone/#step-1-migrate-table-structure_1","title":"Step 1: Migrate table structure","text":"<p>Here we take the TPCH dataset as an example and migrate the 8 tables of the TPCH dataset from Oracle to MatrixOne.</p> <ol> <li> <p>Open DBeaver, select the table to be migrated from Oracle, right-click and select Generate SQL &gt; DDL &gt; Copy, first copy this SQL to a text editor, and name the text editor oracle_ddl.sql, saved locally on the springboard machine.</p> <p></p> </li> <li> <p>Use the following command to replace keywords that MatrixOne does not support in the oracle_ddl.sql file:</p> <pre><code># The commands executed by the Linux system are as follows:\nsed -i '/CHECK (/d' /YOUR_PATH/oracle_ddl.sql\nsed -i '/CREATE UNIQUE INDEX/g' /YOUR_PATH/oracle_ddl.sql\nsed -i 's/NUMBER(3,0)/smallint/g' /YOUR_PATH/oracle_ddl.sql\nsed -i 's/NUMBER(5,0)/smallint/g' /YOUR_PATH/oracle_ddl.sql\nsed -i 's/NUMBER(10,0)/int/g' /YOUR_PATH/oracle_ddl.sql\nsed -i 's/NUMBER(38,0)/bigint/g' /YOUR_PATH/oracle_ddl.sql\nsed -i 's/NUMBER/decimal/g' /YOUR_PATH/oracle_ddl.sql\nsed -i 's/VARCHAR2/varchar/g' /YOUR_PATH/oracle_ddl.sql\n\n# The commands executed by the MacOS system are as follows:\nsed -i '' '/CHECK (/d' /YOUR_PATH/oracle_ddl.sql\nsed -i '' '/CREATE UNIQUE INDEX/g' /YOUR_PATH/oracle_ddl.sql\nsed -i '' 's/NUMBER(3,0)/smallint/g' /YOUR_PATH/oracle_ddl.sql\nsed -i '' 's/NUMBER(5,0)/smallint/g' /YOUR_PATH/oracle_ddl.sql\nsed -i '' 's/NUMBER(10,0)/int/g' /YOUR_PATH/oracle_ddl.sql\nsed -i '' 's/NUMBER(38,0)/bigint/g' /YOUR_PATH/oracle_ddl.sql\nsed -i '' 's/NUMBER/decimal/g' /YOUR_PATH/oracle_ddl.sql\nsed -i '' 's/VARCHAR2/varchar/g' /YOUR_PATH/oracle_ddl.sql\n</code></pre> </li> <li> <p>Connect to MatrixOne and create a new database and table in MatrixOne:</p> <pre><code>create database tpch;\nuse tpch;\nsource '/YOUR_PATH/oracle_ddl.sql'\n</code></pre> </li> </ol>"},{"location":"MatrixOne/Migrate/migrate-from-oracle-to-matrixone/#step-2-migrate-data_1","title":"Step 2: Migrate data","text":"<p>MatrixOne has two data migration methods to choose from: <code>INSERT</code> and <code>LOAD DATA</code>. When the amount of data is greater than 1GB, it is recommended to use <code>LOAD DATA</code> first, followed by <code>INSERT</code>.</p>"},{"location":"MatrixOne/Migrate/migrate-from-oracle-to-matrixone/#load-data","title":"LOAD DATA","text":"<p>Use DBeaver to export the Oracle data table to CSV format first, and use MatrixOne's parallel loading function to migrate the data to MatrixOne:</p> <ol> <li> <p>Open DBeaver, select the table to be migrated, right-click and select Export Data to export the Oracle data table as a CSV format file:</p> <p></p> </li> <li> <p>In the Conversion Goals &gt; Export Goals window, select CSV and click Next:</p> <p></p> <p></p> <p></p> </li> <li> <p>Connect to MatrixOne and import the exported CSV data into MatrixOne:</p> <pre><code>mysql&gt; load data infile '/{filepath}/lineitem.txt' INTO TABLE lineitem FIELDS TERMINATED BY '|' lines TERMINATED BY '\\n' parallel 'true';\nmysql&gt; load data infile '/{filepath}/nation.txt' INTO TABLE nation FIELDS TERMINATED BY '|' lines TERMINATED BY '\\n' parallel 'true';\nmysql&gt; load data infile '/{filepath}/part.txt' INTO TABLE part FIELDS TERMINATED BY '|' lines TERMINATED BY '\\n' parallel 'true';\nmysql&gt; load data infile '/{filepath}/customer.txt' INTO TABLE customer FIELDS TERMINATED BY '|' lines TERMINATED BY '\\n' parallel 'true';\nmysql&gt; load data infile '/{filepath}/orders.txt' INTO TABLE orders FIELDS TERMINATED BY '|' lines TERMINATED BY '\\n' parallel 'true';\nmysql&gt; load data infile '/{filepath}/supplier.txt' INTO TABLE supplier FIELDS TERMINATED BY '|' lines TERMINATED BY '\\n' parallel 'true';\nmysql&gt; load data infile '/{filepath}/region.txt' INTO TABLE region FIELDS TERMINATED BY '|' lines TERMINATED BY '\\n' parallel 'true';\nmysql&gt; load data infile '/{filepath}/partsupp.txt' INTO TABLE partsupp FIELDS TERMINATED BY '|' lines TERMINATED BY '\\n' parallel 'true';\n</code></pre> </li> </ol> <p>For more operation examples of <code>LOAD DATA</code>, see Bulk Load Overview.</p>"},{"location":"MatrixOne/Migrate/migrate-from-oracle-to-matrixone/#insert","title":"INSERT","text":"<p>The <code>INSERT</code> statement needs to use DBeaver to export the logical statement first and then import it into MatrixOne:</p> <ol> <li> <p>Use DBeaver to export data: Open DBeaver, select the table to be migrated from Oracle, right-click, and select Export Data &gt; SQL. To ensure that MatrixOne directly writes to S3 when inserting, it is recommended to insert parameters in batches The number of data rows per statement is set to 5000:</p> <p></p> <p></p> <p></p> </li> <li> <p>On the MatrixOne side, execute the SQL file:</p> <pre><code>source '/YOUR_PATH/oracle_data.sql'\n</code></pre> </li> </ol> <p>For more examples of <code>INSERT</code> operations, see Insert Data.</p>"},{"location":"MatrixOne/Migrate/migrate-from-oracle-to-matrixone/#step-3-check-the-data_1","title":"Step 3: Check the data","text":"<p>After the migration is complete, the data can be inspected as follows:</p> <ul> <li> <p>Use <code>select count(*) from &lt;table_name&gt;</code> to confirm whether the data volume of the source database and target databases' data volume is consistent.</p> </li> <li> <p>Compare the results through related queries; you can also refer to the Complete a TPCH Test with MatrixOne query example to compare the results.</p> </li> </ul>"},{"location":"MatrixOne/Migrate/migrate-from-postgresql-to-matrixone/","title":"Migrate data from PostgreSQL to MatrixOne","text":"<p>This document will guide you in migrating data from PostgreSQL to MatrixOne.</p> <p>PostgreSQL is currently one of the world's most advanced open-source relational databases, with an extensive range of data types, object types, SQL models, and other features. It holds a significant position in various fields, such as enterprise, education, and research. Depending on the size of your PostgreSQL data, this document recommends utilizing online and offline migration methods.</p>"},{"location":"MatrixOne/Migrate/migrate-from-postgresql-to-matrixone/#data-type-difference","title":"Data type difference","text":"<p>There are several differences in data types between MatrixOne and the ones provided by PostgreSQL. Some differences can be replaced using alternative types, while others might not be supported temporarily. Additionally, PostgreSQL supports a three-tier logical structure: Database - Schema - Table. This means you can create multiple schemas within a single database containing multiple tables. This hierarchical structure allows for better organization and data management. On the other hand, MatrixOne follows a two-tier logical structure: Database - Table. In MatrixOne, tables are directly created within the database, resulting in some differences during the migration process.</p> <p>The specific list is as follows:</p> PostgreSQL MatrixOne serial replaced by auto-incrementing columns money replace with decimal bytea replace with binary or varbinary geometric Not supported yet network adress replace with char or varchar bit string Not supported yet text search Not supported yet xml Not supported yet array Not supported yet composite Not supported yet range Not supported yet domain Not supported yet object identifier Not supported yet pg_lsn Not supported yet pseudo Not supported yet"},{"location":"MatrixOne/Migrate/migrate-from-postgresql-to-matrixone/#online-migration","title":"Online Migration","text":"<p>This chapter will guide you to use third-party tools - DBeaver to migrate data from PostgreSQL to MatrixOne.</p> <p>Through DBeaver, the source data is obtained in batches, and then the data is inserted into the target database as <code>INSERT</code>. If an error is reported during the migration process that the heap space is insufficient, please try to adjust the size of each batch of fetched and inserted data.</p> <ul> <li> <p>Applicable scenarios: scenarios where the amount of data is small (recommended less than 1GB), and the migration speed is not sensitive.</p> </li> <li> <p>The recommended configuration of the springboard machine where DBeaver is installed: RAM 16GB or more.</p> </li> </ul>"},{"location":"MatrixOne/Migrate/migrate-from-postgresql-to-matrixone/#preparation","title":"Preparation","text":"<ul> <li>Springboard machine with a graphical interface: it can connect to the source of Oracle and the target of MatrixOne.</li> <li>Data Migration Tool: Download DBeaver on the springboard machine.</li> <li>DDL translation tool: download pg2mysql on the springboard machine, and note that the springboard machine needs to have a Python environment.</li> </ul>"},{"location":"MatrixOne/Migrate/migrate-from-postgresql-to-matrixone/#step-1-migrate-table-structure","title":"Step 1: Migrate table structure","text":"<p>Here we take the TPCH dataset as an example and migrate the 8 tables of the TPCH dataset from PostgreSQL to MatrixOne.</p> <ol> <li> <p>Open DBeaver, select the table to be migrated from Oracle, right-click and select Generate SQL &gt; DDL Click Copy, first copy this SQL to a text editor for text editing Name the filer as pg_ddl.sql and save it locally on the springboard machine.</p> <p></p> </li> <li> <p>Use <code>pg2mysql</code> translation tool to convert pg_ddl.sql file to MySQL format DDL:**</p> <p>a. First, run the following command to replace <code>bpchar</code> in the pg_ddl.sql file with <code>char</code>:</p> <pre><code>```\n# The commands executed by the Linux system are as follows:\nsed -i 's/bpchar/char/g' pg_ddl.sql\n\n# For MacOS systems, the commands used are as follows:\nsed -i '' 's/bpchar/char/g' pg_ddl.sql\n```\n</code></pre> <p>b. Next, use the <code>pg2mysql</code> translation tool to convert the pg_ddl.sql file to MySQL format and save the output to the mysql_ddl.sql file:</p> <pre><code>```\n# The commands executed by both Linux and MacOS systems are as follows:\n./pg2mysql.pl &lt; pg_ddl.sql &gt; mysql_ddl.sql\n```\n</code></pre> <p>c. The converted DDL retains the original Postgresql schema name. If necessary, you can execute the following command, replacing the schema name with the database name in MySQL:</p> <pre><code>```\n# The commands executed by the Linux system are as follows:\nsed -i 's/{schema_name}/{database_name}/g' mysql_ddl.sql\n\n# For MacOS systems, the commands used are as follows:\nsed -i '' 's/{schema_name}/{database_name}/g' mysql_ddl.sql\n```\n</code></pre> <p>d. Finally, you may need to uniformly replace <code>numeric</code> in the mysql_ddl.sql file with <code>decimal</code>, which can be achieved by the following command:</p> <pre><code>```\n# The commands executed by the Linux system are as follows:\nsed -i 's/numeric/decimal/g' mysql_ddl.sql\n\n# For MacOS systems, the commands used are as follows:\nsed -i '' 's/numeric/decimal/g' mysql_ddl.sql\n```\n</code></pre> </li> <li> <p>Connect to MatrixOne and create a new database and table in MatrixOne:</p> <pre><code>create database tpch;\nuse tpch;\nsource '/YOUR_PATH/mysql_ddl.sql'\n</code></pre> </li> </ol>"},{"location":"MatrixOne/Migrate/migrate-from-postgresql-to-matrixone/#step-2-migrate-data","title":"Step 2: Migrate data","text":"<ol> <li> <p>Open DBeaver, select the table to be migrated from PostgreSQL, right-click and select Export Data:</p> <p></p> </li> <li> <p>In the Conversion Target &gt; Export Target window, select Database, click Next; in the Table Mapping window, select Target Container, and select the MatrixOne database for the target container tpch:</p> <p></p> <p></p> </li> <li> <p>In the Extraction Settings and Data Loading Settings windows, set the number of selected extractions and inserts. To trigger MatrixOne's direct write S3 strategy, it is recommended to fill in 5000:</p> <p></p> <p></p> </li> <li> <p>After completing the settings, DBeaver starts to migrate the data, and after completion, DBeaver will prompt that the migration is successful.</p> </li> </ol>"},{"location":"MatrixOne/Migrate/migrate-from-postgresql-to-matrixone/#step-3-check-the-data","title":"Step 3: Check the data","text":"<p>After the migration is complete, the data can be inspected as follows:</p> <ul> <li> <p>Use <code>select count(*) from &lt;table_name&gt;</code> to confirm whether the data volume of the source database and target databases' data volume is consistent.</p> </li> <li> <p>Compare the results through related queries; you can also refer to the Complete TPCH testing query example to compare the results.</p> </li> </ul>"},{"location":"MatrixOne/Migrate/migrate-from-postgresql-to-matrixone/#offline-migration","title":"Offline Migration","text":"<p>This chapter will guide you through importing to MatrixOne through offline files.</p> <ul> <li>Applicable scenarios: scenarios with a large amount of data (more significant than 1GB) and sensitive to migration speed.</li> </ul>"},{"location":"MatrixOne/Migrate/migrate-from-postgresql-to-matrixone/#preparation_1","title":"Preparation","text":"<ul> <li>Springboard machine with a graphical interface: it can be connected to the source end of PostgreSQL and the target end of MatrixOne.</li> <li> <p>Data Migration Tool: Download DBeaver to the springboard machine.</p> </li> <li> <p>Install <code>pgdump</code> in PostgreSQL server. If you are not familiar with how to use <code>pgdump</code>, see pgdump tutorial</p> </li> </ul>"},{"location":"MatrixOne/Migrate/migrate-from-postgresql-to-matrixone/#step-1-migrate-table-structure_1","title":"Step 1: Migrate table structure","text":"<p>Here we take the TPCH dataset as an example and migrate the 8 tables of the TPCH dataset from MySQL to MatrixOne.</p> <ol> <li> <p>Open DBeaver, select the table to be migrated from PostgreSQL, right-click and select Generate SQL &gt; DDL &gt; Copy, first copy this SQL to a text editor, and name the text editor pg_ddl.sql, saved locally on the springboard machine.</p> <p></p> </li> <li> <p>Use <code>pg2mysql</code> translation tool to convert pg_ddl.sql file to MySQL format DDL:**</p> <p>a. First, run the following command to replace <code>bpchar</code> in the pg_ddl.sql file with <code>char</code>:</p> <pre><code>```\n# The commands executed by the Linux system are as follows:\nsed -i 's/bpchar/char/g' pg_ddl.sql\n\n# For MacOS systems, the commands used are as follows:\nsed -i '' 's/bpchar/char/g' pg_ddl.sql\n```\n</code></pre> <p>b. Next, use the <code>pg2mysql</code> translation tool to convert the pg_ddl.sql file to MySQL format and save the output to the mysql_ddl.sql file:</p> <pre><code>```\n# The commands executed by both Linux and MacOS systems are as follows:\n./pg2mysql.pl &lt; pg_ddl.sql &gt; mysql_ddl.sql\n```\n</code></pre> <p>c. The converted DDL retains the original Postgresql schema name. If necessary, you can execute the following command, replacing the schema name with the database name in MySQL:</p> <pre><code>```\n# The commands executed by the Linux system are as follows:\nsed -i 's/{schema_name}/{database_name}/g' mysql_ddl.sql\n\n# For MacOS systems, the commands used are as follows:\nsed -i '' 's/{schema_name}/{database_name}/g' mysql_ddl.sql\n```\n</code></pre> <p>d. Finally, you may need to uniformly replace <code>numeric</code> in the mysql_ddl.sql file with <code>decimal</code>, which can be achieved by the following command:</p> <pre><code>```\n# The commands executed by the Linux system are as follows:\nsed -i 's/numeric/decimal/g' mysql_ddl.sql\n\n# For MacOS systems, the commands used are as follows:\nsed -i '' 's/numeric/decimal/g' mysql_ddl.sql\n```\n</code></pre> </li> <li> <p>Connect to MatrixOne and create a new database and table in MatrixOne:</p> <pre><code>create database tpch;\nuse tpch;\nsource '/YOUR_PATH/mysql_ddl.sql'\n</code></pre> </li> </ol>"},{"location":"MatrixOne/Migrate/migrate-from-postgresql-to-matrixone/#step-2-migrate-data_1","title":"Step 2: Migrate data","text":"<p>MatrixOne has two data migration methods to choose from: <code>INSERT</code> and <code>LOAD DATA</code>. When the amount of data is greater than 1GB, it is recommended to use <code>LOAD DATA</code> first, followed by <code>INSERT</code>.</p>"},{"location":"MatrixOne/Migrate/migrate-from-postgresql-to-matrixone/#load-data","title":"LOAD DATA","text":"<ol> <li> <p>Export the PostgreSQL data table to CSV format in the PostgreSQL database command line environment:</p> <pre><code>postgres=# \\c tpch;\npostgres=# COPY tpch.nation TO '/{filepath}/nation.tbl' DELIMITER '|';\npostgres=# COPY tpch.region TO '/{filepath}/region.tbl' DELIMITER '|';\npostgres=# COPY tpch.customer TO '/{filepath}/customer.tbl' DELIMITER '|';\npostgres=# COPY tpch.part TO '/{filepath}/part.tbl' DELIMITER '|';\npostgres=# COPY tpch.supplier TO '/{filepath}/supplier.tbl' DELIMITER '|';\npostgres=# COPY tpch.partsupp TO '/{filepath}/partsupp.tbl' DELIMITER '|';\npostgres=# COPY tpch.lineitem TO '/{filepath}/lineitem.tbl' DELIMITER '|';\npostgres=# COPY tpch.orders TO '/{filepath}/orders.tbl' DELIMITER '|';\n</code></pre> </li> <li> <p>Connect to MatrixOne and import the exported CSV data into MatrixOne:</p> <pre><code>mysql&gt; load data infile '/{filepath}/lineitem.tbl' INTO TABLE lineitem FIELDS TERMINATED BY '|' lines TERMINATED BY '\\n' parallel 'true';\nmysql&gt; load data infile '/{filepath}/nation.tbl' INTO TABLE nation FIELDS TERMINATED BY '|' lines TERMINATED BY '\\n' parallel 'true';\nmysql&gt; load data infile '/{filepath}/part.tbl' INTO TABLE part FIELDS TERMINATED BY '|' lines TERMINATED BY '\\n' parallel 'true';\nmysql&gt; load data infile '/{filepath}/customer.tbl' INTO TABLE customer FIELDS TERMINATED BY '|' lines TERMINATED BY '\\n' parallel 'true';\nmysql&gt; load data infile '/{filepath}/orders.tbl' INTO TABLE orders FIELDS TERMINATED BY '|' lines TERMINATED BY '\\n' parallel 'true';\nmysql&gt; load data infile '/{filepath}/supplier.tbl' INTO TABLE supplier FIELDS TERMINATED BY '|' lines TERMINATED BY '\\n' parallel 'true';\nmysql&gt; load data infile '/{filepath}/region.tbl' INTO TABLE region FIELDS TERMINATED BY '|' lines TERMINATED BY '\\n' parallel 'true';\nmysql&gt; load data infile '/{filepath}/partsupp.tbl' INTO TABLE partsupp FIELDS TERMINATED BY '|' lines TERMINATED BY '\\n' parallel 'true';\n</code></pre> </li> </ol> <p>For more operation examples of <code>LOAD DATA</code>, see Bulk Load Overview.</p>"},{"location":"MatrixOne/Migrate/migrate-from-postgresql-to-matrixone/#insert","title":"INSERT","text":"<p>The <code>INSERT</code> statement needs to use <code>pgdump</code> to export the logical statement first and then import it into MatrixOne:</p> <ol> <li> <p>Use <code>pgdump</code> to export data. To ensure that MatrixOne directly writes to S3 when inserting, inserting as large a batch as possible is recommended. The <code>net_buffer_length</code> parameter should start at 10MB:</p> <pre><code>$ pg_dump -U postgres --no-acl --no-owner --inserts --rows-per-insert 5000  --format p --data-only --schema=tpch tpch -f pg_data.sql\n</code></pre> </li> <li> <p>On the MatrixOne side, execute the SQL file, there will be an error message during the process, but it will not affect the data insertion:</p> <pre><code>source '/YOUR_PATH/pg_data.sql'\n</code></pre> </li> </ol> <p>For more examples of <code>INSERT</code> operations, see Insert Data.</p>"},{"location":"MatrixOne/Migrate/migrate-from-postgresql-to-matrixone/#step-3-check-the-data_1","title":"Step 3: Check the data","text":"<p>After the migration is complete, the data can be inspected as follows:</p> <ul> <li> <p>Use <code>select count(*) from &lt;table_name&gt;</code> to confirm whether the data volume of the source database and target databases' data volume is consistent.</p> </li> <li> <p>Compare the results through related queries; you can also refer to the Complete a TPCH Test with MatrixOne query example to compare the results.</p> </li> </ul>"},{"location":"MatrixOne/Migrate/migrate-from-postgresql-to-matrixone/#reference-example","title":"Reference example","text":"<p>If you are a novice and want to migrate a small amount of data, see Import data by using the <code>source</code> command.</p>"},{"location":"MatrixOne/Migrate/migrate-from-sqlserver-to-matrixone/","title":"Migrate data from SQL Server to MatrixOne","text":"<p>This document will guide you on how to migrate data from SQL Server to MatrixOne.</p> <p>SQLServer is widely used in various industries as a mature commercial database, and its functions and performance are outstanding. As a relational database, MatrixOne also supports multiple database migration modes from SQLServer.</p>"},{"location":"MatrixOne/Migrate/migrate-from-sqlserver-to-matrixone/#data-type-difference","title":"Data type difference","text":"<p>There are many differences between MatrixOne and SQL Server's built-in data types. Other types can replace some differences, and some cannot be supported temporarily. The specific list is as follows:</p> SQLServer MatrixOne real replace with double money, smallmoney replace with decimal datetimeoffset use timestampmap with timezone substitution nchar/nvarchar/ntext replace with char/varchar/text image replace with blob uniqueidentifier replace with uuid bit Not supported yet rowversion Not supported yet hierarchyid Not supported yet sql_variant Not supported yet xml Not supported yet geometry Not supported yet geography Not supported yet"},{"location":"MatrixOne/Migrate/migrate-from-sqlserver-to-matrixone/#online-migration","title":"Online Migration","text":"<p>This chapter will guide you to use third-party tools - DBeaver to migrate data from SQL Server to MatrixOne.</p> <p>Through DBeaver, the source data is obtained in batches, and then the data is inserted into the target database as <code>INSERT</code>. If an error is reported during the migration process that the heap space is insufficient, please try to adjust the size of each batch of fetched and inserted data.</p> <ul> <li> <p>Applicable scenarios: scenarios where the amount of data is small (recommended less than 1GB), and the migration speed is not sensitive.</p> </li> <li> <p>The recommended configuration of the springboard machine where DBeaver is installed: RAM 16GB or more.</p> </li> </ul>"},{"location":"MatrixOne/Migrate/migrate-from-sqlserver-to-matrixone/#preparation","title":"Preparation","text":"<ul> <li>Springboard machine with a graphical interface: it can connect to the source of SQL Server and the target of MatrixOne.</li> <li>Data Migration Tool: Download DBeaver on the springboard machine.</li> </ul>"},{"location":"MatrixOne/Migrate/migrate-from-sqlserver-to-matrixone/#step-1-migrate-table-structure-and-data","title":"Step 1: Migrate table structure and data","text":"<p>Here we take the TPCH dataset as an example and migrate the 8 tables of the TPCH dataset from SQL Server to MatrixOne.</p> <ol> <li> <p>Open DBeaver, select the table to be migrated from SQL Server, right-click and select Export Data:</p> <p></p> </li> <li> <p>In the Conversion Target &gt; Export Target window, select Database, click Next; in the Table Mapping window, select Target Container, and select the MatrixOne database for the target container tpch:</p> <p></p> <p></p> </li> <li> <p>In the Extraction Settings and Data Loading Settings windows, set the number of selected extractions and inserts. To trigger MatrixOne's direct write S3 strategy, it is recommended to fill in 5000:</p> <p></p> <p></p> </li> <li> <p>After completing the settings, DBeaver starts to migrate the data, and after completion, DBeaver will prompt that the migration is successful.</p> </li> </ol>"},{"location":"MatrixOne/Migrate/migrate-from-sqlserver-to-matrixone/#step-3-check-the-data","title":"Step 3: Check the data","text":"<p>After the migration is complete, the data can be inspected as follows:</p> <ul> <li> <p>Use <code>select count(*) from &lt;table_name&gt;</code> to confirm whether the data volume of the source database and target databases' data volume is consistent.</p> </li> <li> <p>Compare the results through related queries; you can also refer to the Complete TPCH testing query example to compare the results.</p> </li> </ul>"},{"location":"MatrixOne/Migrate/migrate-from-sqlserver-to-matrixone/#offline-migration","title":"Offline Migration","text":"<p>This chapter will guide you through importing to MatrixOne through offline files.</p> <ul> <li>Applicable scenarios: scenarios with a large amount of data (more significant than 1GB) and sensitive to migration speed.</li> </ul>"},{"location":"MatrixOne/Migrate/migrate-from-sqlserver-to-matrixone/#preparation_1","title":"Preparation","text":"<ul> <li>Springboard machine with a graphical interface: it can be connected to the source end of SQL Server and the target end of MatrixOne.</li> <li>Data Migration Tool: Download DBeaver to the springboard machine.</li> </ul>"},{"location":"MatrixOne/Migrate/migrate-from-sqlserver-to-matrixone/#step-1-migrate-table-structure","title":"Step 1: Migrate table structure","text":"<p>Here we take the TPCH dataset as an example and migrate the 8 tables of the TPCH dataset from SQL Server to MatrixOne.</p> <ol> <li> <p>Open DBeaver, select the table to be migrated from SQL Server, right-click and select Generate SQL &gt; DDL &gt; Copy, first copy this SQL to a text editor, and name the text editor sqlserver_ddl.sql, saved locally on the springboard machine.</p> <p></p> </li> <li> <p>Connect to MatrixOne and create a new database and table in MatrixOne:</p> <pre><code>create database tpch;\nuse tpch;\nsource '/YOUR_PATH/sqlserver_ddl.sql'\n</code></pre> </li> </ol>"},{"location":"MatrixOne/Migrate/migrate-from-sqlserver-to-matrixone/#step-2-migrate-data","title":"Step 2: Migrate data","text":"<p>MatrixOne has two data migration methods to choose from: <code>INSERT</code> and <code>LOAD DATA</code>. When the amount of data is greater than 1GB, it is recommended to use <code>LOAD DATA</code> first, followed by <code>INSERT</code>.</p>"},{"location":"MatrixOne/Migrate/migrate-from-sqlserver-to-matrixone/#load-data","title":"LOAD DATA","text":"<p>Use DBeaver to export the SQL Server data table to CSV format first, and use MatrixOne's parallel loading function to migrate the data to MatrixOne:</p> <ol> <li> <p>Open DBeaver, select the table to be migrated, right-click and select Export Data to export the SQL Server data table as a CSV format file:</p> <p></p> </li> <li> <p>In the Conversion Goals &gt; Export Goals window, select CSV and click Next:</p> <p></p> <p></p> <p></p> </li> <li> <p>Connect to MatrixOne and import the exported CSV data into MatrixOne:</p> <pre><code>mysql&gt; load data infile '/{filepath}/lineitem.txt' INTO TABLE lineitem FIELDS TERMINATED BY '|' lines TERMINATED BY '\\n' parallel 'true';\nmysql&gt; load data infile '/{filepath}/nation.txt' INTO TABLE nation FIELDS TERMINATED BY '|' lines TERMINATED BY '\\n' parallel 'true';\nmysql&gt; load data infile '/{filepath}/part.txt' INTO TABLE part FIELDS TERMINATED BY '|' lines TERMINATED BY '\\n' parallel 'true';\nmysql&gt; load data infile '/{filepath}/customer.txt' INTO TABLE customer FIELDS TERMINATED BY '|' lines TERMINATED BY '\\n' parallel 'true';\nmysql&gt; load data infile '/{filepath}/orders.txt' INTO TABLE orders FIELDS TERMINATED BY '|' lines TERMINATED BY '\\n' parallel 'true';\nmysql&gt; load data infile '/{filepath}/supplier.txt' INTO TABLE supplier FIELDS TERMINATED BY '|' lines TERMINATED BY '\\n' parallel 'true';\nmysql&gt; load data infile '/{filepath}/region.txt' INTO TABLE region FIELDS TERMINATED BY '|' lines TERMINATED BY '\\n' parallel 'true';\nmysql&gt; load data infile '/{filepath}/partsupp.txt' INTO TABLE partsupp FIELDS TERMINATED BY '|' lines TERMINATED BY '\\n' parallel 'true';\n</code></pre> </li> </ol> <p>For more operation examples of <code>LOAD DATA</code>, see Bulk Load Overview.</p>"},{"location":"MatrixOne/Migrate/migrate-from-sqlserver-to-matrixone/#insert","title":"INSERT","text":"<p>The <code>INSERT</code> statement needs to use DBeaver to export the logical statement first and then import it into MatrixOne:</p> <ol> <li> <p>Use DBeaver to export data: Open DBeaver, select the table to be migrated from SQL Server, right-click, and select Export Data &gt; SQL. To ensure that MatrixOne directly writes to S3 when inserting, it is recommended to insert parameters in batches The number of data rows per statement is set to 5000:</p> <p></p> <p></p> <p></p> </li> <li> <p>Use the following command to replace keywords that MatrixOne does not support in the sqlserver_ddl.sql file:</p> <pre><code># The commands executed by the Linux system are as follows:\nsed -i 's/,N/,/g' mssql_data.sql\n\n# The commands executed by the MacOS system are as follows:\nsed -i '' 's/,N/,/g' mssql_data.sql\n</code></pre> </li> <li> <p>On the MatrixOne side, execute the SQL file:</p> <pre><code>ues tpch;\nsource '/YOUR_PATH/sqlserver_ddl.sql'\n</code></pre> </li> </ol> <p>For more examples of <code>INSERT</code> operations, see Insert Data.</p>"},{"location":"MatrixOne/Migrate/migrate-from-sqlserver-to-matrixone/#step-3-check-the-data_1","title":"Step 3: Check the data","text":"<p>After the migration is complete, the data can be inspected as follows:</p> <ul> <li> <p>Use <code>select count(*) from &lt;table_name&gt;</code> to confirm whether the data volume of the source database and target databases' data volume is consistent.</p> </li> <li> <p>Compare the results through related queries; you can also refer to the Complete a TPCH Test with MatrixOne query example to compare the results.</p> </li> </ul>"},{"location":"MatrixOne/Migrate/migrate-overview/","title":"migrating data to MatrixOne Overview","text":""},{"location":"MatrixOne/Migrate/migrate-overview/#matrixone-tools-and-functions-for-migrating-data","title":"MatrixOne tools and functions for migrating data","text":"<p>When using MatrixOne, it is sometimes necessary to migrate data from other databases to MatrixOne. Due to differences between different databases, data migration requires some extra work. To facilitate users to import external data quickly, MatrixOne provides a variety of tools and functions.</p> <p>Here are some of the standard tools and functions:</p>"},{"location":"MatrixOne/Migrate/migrate-overview/#load-data","title":"LOAD DATA","text":"<p>Like MySQL, MatrixOne provides the <code>LOAD DATA</code> function, allowing users to quickly and parallelly import external CSV files or JSON files into tables that match the table structure.</p>"},{"location":"MatrixOne/Migrate/migrate-overview/#source","title":"SOURCE","text":"<p>In MatrixOne, you can also use the <code>SOURCE</code> command to migrate data and table structures to the target database.</p> <p>For more information on bulk import using <code>LOAD DATA</code> or <code>SOURCE</code>, see Bulk Load Overview.</p>"},{"location":"MatrixOne/Migrate/migrate-overview/#reference","title":"Reference","text":"<p>MatrixOne provides the following documents to help you quickly understand how to migrate data from other databases to MatrixOne:</p> <ul> <li>Migrate data from MySQL to MatrixOne</li> <li>Migrate data from Oracle to MatrixOne</li> <li>Migrate data from SQL Server to MatrixOne</li> <li>Migrate data from PostgreSQL to MatrixOne</li> </ul>"},{"location":"MatrixOne/Overview/matrixone-feature-list/","title":"MatrixOne Features","text":"<p>This document lists the features supported by the latest version of MatrixOne and features that are common and in MatrixOne's roadmap but not currently supported.</p>"},{"location":"MatrixOne/Overview/matrixone-feature-list/#data-definition-language-ddl","title":"Data definition language (DDL)","text":"Data definition Language(DDL) Supported(Y)/Not supported (N) /Experimental (E) CREATE DATABASE Y DROP DATABASE Y ALTER DATABASE N CREATE TABLE Y ALTER TABLE E, The clauses: <code>CHANGE [COLUMN]</code>, <code>MODIFY [COLUMN]</code>, <code>RENAME COLUMN</code>, <code>ADD [CONSTRAINT [symbol]] PRIMARY KEY</code>, <code>DROP PRIMARY KEY</code>, and <code>ALTER COLUMN ORDER BY</code> can be used in ALTER It can be freely combined in the TABLE statement. Still, it is not supported to be used with other clauses for the time being. RENAME TABLE N, Can be replaced by <code>ALTER TABLE tbl RENAME TO new_tbl</code> DROP TABLE Y CREATE INDEX Y, Secondary indexes have no speedup DROP INDEX Y MODIFY COLUMN N PRIMARY KEY Y CREATE VIEW Y ALTER VIEW Y DROP VIEW Y TRUNCATE TABLE Y AUTO_INCREMENT Y SEQUENCE Y TEMPORARY TABLE Y CREATE STREAM E, Only some types are supported PARTITION BY E, Only some types are supported CHARSET, COLLATION N, Only UTF8 is supported by default"},{"location":"MatrixOne/Overview/matrixone-feature-list/#data-manipulationquery-language-dmldql","title":"Data manipulation/query language (DML/DQL)","text":"SQL Statement Supported(Y)/Not supported (N) /Experimental (E) SELECT Y INSERT Y UPDATE Y DELETE Y REPLACE Y INSERT ON DUPLICATE KEY UPDATE Y LOAD DATA Y SELECT INTO Y INNER/LEFT/RIGHT/OUTER JOIN Y UNION, UNION ALL Y EXCEPT, INTERSECT Y GROUP BY, ORDER BY Y CLUSTER BY Y SUBQUERY Y (Common Table Expressions, CTE) Y BEGIN/START TRANSACTION, COMMIT, ROLLBACK Y EXPLAIN Y EXPLAIN ANALYZE Y LOCK/UNLOCK TABLE N User-defined Variables Y"},{"location":"MatrixOne/Overview/matrixone-feature-list/#advanced-sql-features","title":"Advanced SQL Features","text":"Advanced SQL Features Supported(Y)/Not supported (N) /Experimental (E) PREPARE Y STORED PROCEDURE N TRIGGER N EVENT SCHEDULER N UDF Y Materialized VIEW N"},{"location":"MatrixOne/Overview/matrixone-feature-list/#stream-calculation","title":"Stream Calculation","text":"Stream Computing Capabilities Supported (Y) / Not Supported (N) / Experimental Features (E) Dynamic Tables E Kafka Connectors E Materialized View N (incremental) Materialized View N"},{"location":"MatrixOne/Overview/matrixone-feature-list/#timing","title":"Timing","text":"Timing Supported (Y) / Not Supported (N) / Experimental Features (E) Timing Table Y Sliding window Y Downsampling Y Interpolation Y TTL(Time To Live) N ROLLUP Y"},{"location":"MatrixOne/Overview/matrixone-feature-list/#data-types","title":"Data types","text":"Data type categories Data types Supported(Y)/Not supported (N) /Experimental (E) Integer Numbers TINYINT/SMALLINT/INT/BIGINT (UNSIGNED) Y BIT N Real Numbers FLOAT Y DOUBLE Y String Types CHAR Y VARCHAR Y BINARY Y VARBINARY Y TINYTEXT/TEXT/MEDIUMTEXT/LONGTEXT Y ENUM Y, Not support Filtering ENUM values and Sorting ENUM values SET N Binary Types TINYBLOB/BLOB/MEDIUMBLOB/LONGBLOB Y Time and Date Types DATE Y TIME Y DATETIME Y TIMESTAMP Y YEAR Y Boolean BOOL Y Decimal Types DECIMAL Y, up to 38 digits JSON Types JSON Y vector type VECTOR N Spatial Type SPATIAL N"},{"location":"MatrixOne/Overview/matrixone-feature-list/#indexing-and-constraints","title":"Indexing and constraints","text":"Indexing and constraints Supported(Y)/Not supported (N) /Experimental (E) PRIMARY KEY Y Composite PRIMARY KEY Y UNIQUE KEY Y Secondary KEY Y, Syntax only implementation FOREIGN KEY Y Enforced Constraints on Invalid Data Y ENUM and SET Constraints N NOT NULL Constraint Y AUTO INCREMENT Constraint Y"},{"location":"MatrixOne/Overview/matrixone-feature-list/#transactions","title":"Transactions","text":"Transactions Supported(Y)/Not supported (N) /Experimental (E) Pessimistic transactions Y Optimistic transactions Y Distributed Transaction Y Snapshot Isolation Y READ COMMITTED Y"},{"location":"MatrixOne/Overview/matrixone-feature-list/#functions-and-operators","title":"Functions and Operators","text":"Functions and Operators Categories Supported(Y)/Not supported (N) /Experimental (E) Aggregate Functions Y Mathematical Y Datetime Y String Y CAST Y Flow Control Functions E Window Functions Y JSON Functions Y System Functions Y Other Functions Y Operators Y"},{"location":"MatrixOne/Overview/matrixone-feature-list/#partition","title":"PARTITION","text":"PARTITION Supported(Y)/Not supported (N) /Experimental (E) KEY(column_list) E HASH(expr) E RANGE(expr) N RANGE COLUMNS N LIST N LIST COLUMNS N"},{"location":"MatrixOne/Overview/matrixone-feature-list/#import-and-export","title":"Import and Export","text":"Import and Export Supported(Y)/Not supported (N) /Experimental (E) LOAD DATA Y SOURCE Y Load data from S3 Y modump Y mysqldump N"},{"location":"MatrixOne/Overview/matrixone-feature-list/#security-and-access-control","title":"Security and Access Control","text":"Security Supported(Y)/Not supported (N) /Experimental (E) Transport Layer Encryption TLS Y Encryption at rest Y Import from Object Storage Y Role-Based Access Control (RBAC) Y Multi-Account Y"},{"location":"MatrixOne/Overview/matrixone-feature-list/#backup-and-restore","title":"Backup and Restore","text":"Backup and Restore Supported(Y)/Not supported (N) /Experimental (E) Logical Backup and Restore Y, Only the modump tool is supported Physical Backup and Restore Y"},{"location":"MatrixOne/Overview/matrixone-feature-list/#management-tool","title":"Management Tool","text":"Management Tool Supported(Y)/Not supported (N) /Experimental (E) Stand-alone mo_ctl deployment management Y Distributed mo_ctl deployment management E, Enterprise Edition only Visual management platform E, Public cloud version only System Logging Y System indicator monitoring Y Slow query log Y SQL record Y Kubernetes operator Y"},{"location":"MatrixOne/Overview/matrixone-feature-list/#deployment-method","title":"Deployment Method","text":"Deployment Method Supported(Y)/Not supported (N) /Experimental (E) Stand-alone environment privatization deployment Y Distributed environment privatization deployment Y, self-built Kubernetes and minIO object storage Alibaba Cloud distributed self-built deployment Y, ACK+OSS Tencent Cloud Distributed Self-built Deployment Y, TKE+COS AWS distributed self-built deployment Y, EKS+S3 Public Cloud Serverless Y, MatrixOne Cloud, Support AWS, Alibaba Cloud"},{"location":"MatrixOne/Overview/matrixone-introduction/","title":"MatrixOne Introduction","text":"<p>MatrixOne is a hyper-converged cloud &amp; edge native distributed database with a structure that separates storage, computation, and transactions to form a consolidated HSTAP data engine. This engine enables a single database system to accommodate diverse business loads such as OLTP, OLAP, and stream computing. It also supports deployment and utilization across public, private, and edge clouds, ensuring compatibility with diverse infrastructures.</p> <p>MatrixOne touts significant features, including real-time HTAP, multi-tenancy, stream computation, extreme scalability, cost-effectiveness, enterprise-grade availability, and extensive MySQL compatibility. MatrixOne unifies tasks traditionally performed by multiple databases into one system by offering a comprehensive ultra-hybrid data solution. This consolidation simplifies development and operations, minimizes data fragmentation, and boosts development agility.</p> <p></p> <p>MatrixOne is optimally suited for scenarios requiring real-time data input, large data scales, frequent load fluctuations, and a mix of procedural and analytical business operations. It caters to use cases such as mobile internet apps, IoT data applications, real-time data warehouses, SaaS platforms, and more.</p>"},{"location":"MatrixOne/Overview/matrixone-introduction/#key-features","title":"Key Features","text":""},{"location":"MatrixOne/Overview/matrixone-introduction/#hyper-converged-engine","title":"Hyper-converged Engine","text":"<ul> <li> <p>Monolithic Engine</p> <p>HTAP data engine that supports a mix of workloads such as TP, AP, time series, and machine learning within a single database.</p> </li> <li> <p>Built-in Streaming Engine</p> <p>Built-in stream computing engine that enables real-time data inflow, transformation, and querying.</p> </li> </ul>"},{"location":"MatrixOne/Overview/matrixone-introduction/#cloud-edge-native","title":"Cloud &amp; Edge Native","text":"<ul> <li> <p>Storage-Computation Separation Structure</p> <p>Separates the storage, computation, and transaction layers, leveraging a containerized design for ultimate scalability.</p> </li> <li> <p>Multi-Infrastructure Compatibility</p> <p>MatrixOne provides industry-leading latency control with optimized consistency protocol.</p> </li> </ul>"},{"location":"MatrixOne/Overview/matrixone-introduction/#extreme-performance","title":"Extreme Performance","text":"<ul> <li> <p>High-Performance Execution Engine</p> <p>The flexible combination of Compute Node and Transaction node accommodates point queries and batch processing, delivering peak performance for OLTP and OLAP.</p> </li> <li> <p>Enterprise-Grade High Availability</p> <p>Establishes a consistently shared log under a leading Multi-Raft replication state machine model. It ensures high cluster availability while preventing data duplication, thus achieving RTO=0.</p> </li> </ul>"},{"location":"MatrixOne/Overview/matrixone-introduction/#ease-of-use","title":"Ease of Use","text":"<ul> <li> <p>Built-in Multi-Tenancy Capability</p> <p>Offers inherent multi-tenancy, where tenants are isolated from each other, independently scalable yet uniformly manageable. This feature simplifies the complexity of multi-tenancy design in upper-level applications.</p> </li> <li> <p>High Compatibility with MySQL</p> <p>MatrixOne exhibits high compatibility with MySQL 8.0, including transmission protocol, SQL syntax, and ecosystem tools, lowering usage and migration barriers.</p> </li> </ul>"},{"location":"MatrixOne/Overview/matrixone-introduction/#cost-effective","title":"Cost-Effective","text":"<ul> <li> <p>Efficient Storage Design</p> <p>Employs cost-effective object storage as primary storage. High availability can be achieved through erasure coding technology with only about 150% data redundancy. It also provides high-speed caching capabilities, balancing cost and performance via a multi-tiered storage strategy that separates hot and cold data.</p> </li> <li> <p>Flexible Resource Allocation</p> <p>Users can adjust the resource allocation ratio for OLTP and OLAP according to business conditions, maximizing resource utilization.</p> </li> </ul>"},{"location":"MatrixOne/Overview/matrixone-introduction/#enterprise-level-security-and-compliance","title":"Enterprise-Level Security and Compliance","text":"<pre><code>  MatrixOne employs Role-Based Access Control (RBAC), TLS connections, and data encryption to establish a multi-tiered security defense system, safeguarding enterprise-level data security and compliance.\n</code></pre>"},{"location":"MatrixOne/Overview/matrixone-introduction/#user-values","title":"User Values","text":"<ul> <li> <p>Simplify Database Management and Maintenance</p> <p>With business evolution, the number of data engines and middleware enterprises employ increases. Each data engine relies on 5+ essential components and stores 3+ data replicas. Each engine must be independently installed, monitored, patched, and upgraded. This results in high and uncontrollable data engine selection, development, and operations costs. Under MatrixOne's unified architecture, users can employ a single database to serve multiple data applications, reducing the number of introduced data components and technology stacks by 80% and significantly simplifying database management and maintenance costs.</p> </li> <li> <p>Reduce Data Fragmentation and Inconsistency</p> <p>Data flow and copy between databases make data sync and consistency increasingly tricky. The unified and incrementally materialized view of MatrixOne allows the downstream to support real-time upstream updates and achieve end-to-end data processing without redundant ETL processes.</p> </li> <li> <p>Decoupling Data Architecture From Infrastructure</p> <p>Currently, the architecture design across different infrastructures is complicated, causing new data silos between cloud and edge, cloud and on-premise. MatrixOne is designed with a unified architecture to support simplified data management and operations across different infrastructures.</p> </li> <li> <p>Extremely Fast Complex Query Performance</p> <p>Poor business agility results from slow, complex queries and redundant intermediate tables in current data warehousing solutions. MatrixOne supports blazing-fast experience even for star and snowflake schema queries, improving business agility with real-time analytics.</p> </li> <li> <p>An Solid OLTP-like OLAP Experience</p> <p>Current data warehousing solutions have the following problems: high latency and absence of immediate visibility for data updates. MatrixOne brings OLTP (Online Transactional Processing) level consistency and high availability to CRUD operations in OLAP (Online Analytical Processing).</p> </li> <li> <p>Seamless and Non-disruptive Scaling</p> <p>It is challenging to balance performance and scalability to achieve an optimum price-performance ratio in current data warehousing solutions. MatrixOne's disaggregated storage and compute architecture makes it fully automated and efficient to scale in/out and up/down without disrupting applications.</p> </li> </ul>"},{"location":"MatrixOne/Overview/matrixone-introduction/#scenarios","title":"Scenarios","text":"<ul> <li> <p>Traditional Application System Scenarios Requiring Scalability and Analytical Reporting Capabilities</p> <p>With the expansion of businesses, the performance needs of traditional single-machine databases cannot meet enterprises' usual systems such as OA, ERP, CRM, etc., especially during special periods requiring business analysis. Many enterprises equip a separate analytical database system to meet statistical report needs at essential points like month-end, quarter-end, etc. Using MatrixOne; these needs can be met with a single database system, providing strong scalability that seamlessly scales with business growth.</p> </li> <li> <p>Dashboard/BI Report Scenarios Requiring Real-Time Analytical Capabilities</p> <p>For typical OLAP-type applications in enterprises, such as dashboards, BI reports, etc., analyzing massive amounts of data often leads to a performance bottleneck when the data volume is significantly large, resulting in poor timeliness. MatrixOne's robust analysis performance and scalability enable the acceleration of various complex and large-scale SQL queries, providing a near-instant experience and enhancing enterprise decision-making analysis's agility.</p> </li> <li> <p>Data Platform Scenarios for Real-Time Influx and Processing of Massive Heterogeneous Data Applications</p> <p>With the extensive use of sensor and network technology, numerous IoT devices generate substantial data, such as manufacturing factory production lines, new energy vehicles, city security surveillance cameras, etc. Their scale can easily reach hundreds of TB or even PB levels. The demand for digitization also requires enterprises to store and use these data increasingly. Traditional database solutions cannot meet the requirements of such massive and large-scale real-time data writing and processing applications. MatrixOne's powerful streaming data writing and processing capabilities and robust scalability can adapt to any load and data volume scale, fully meeting these requirements.</p> </li> <li> <p>Data Middle-End Scenarios Where Various Internal Enterprise Data Converges</p> <p>Medium and large enterprises often have multiple business systems. To fully understand the enterprise's overall status, many enterprises build a data middle-end that connects data sources from various systems. Traditional solutions to carry the data middle-end are based on the Hadoop system, which is complex, posing high development and operation thresholds for many enterprises. MatrixOne's one-stop HTAP architecture makes using a data middle-end as convenient as using MySQL, significantly reducing costs.</p> </li> <li> <p>Business Scenarios with Dramatic and Frequent Internet Business Fluctuations</p> <p>Internet applications such as games, e-commerce, entertainment, social networking, news, etc., have a massive user base, and the business fluctuates dramatically and frequently. During hot events, these applications often need many computing resources to support business needs. MatrixOne's fully cloud-native architecture has superior scalability, enabling automatic and rapid scaling with business changes, significantly reducing user operation and maintenance difficulties.</p> </li> <li> <p>Enterprise SaaS Service Business Scenarios</p> <p>Enterprise SaaS applications have seen explosive growth in recent years. In developing SaaS applications, they all need to consider their multi-tenant model. Traditional schemes offer two modes of multi-tenant shared database instances and single-tenant exclusive database instances, but they face the dilemma of management cost and isolation. MatrixOne comes with multi-tenant capabilities; tenants are naturally load-isolated and can be independently scaled. At the same time, it provides unified management capabilities, balancing the enterprise's needs for cost, management simplicity, and isolation, making it an optimal choice for SaaS applications.</p> </li> </ul>"},{"location":"MatrixOne/Overview/matrixone-introduction/#learn-more","title":"Learn More","text":"<p>This section describes the basic introduction of MatrixOne. If you want to learn more detailed information about MatrixOne, see the following content:</p> <ul> <li>MatrixOne Architecture</li> <li>Deploy standalone MatrixOne</li> </ul>"},{"location":"MatrixOne/Overview/whats-new/","title":"What's New","text":"<p>The lastest version of MatrixOne is v24.1.2.3, releases on 12th Sep, 2024. See the following:</p> <ul> <li>v24.1.2.3 Release Notes</li> </ul>"},{"location":"MatrixOne/Overview/architecture/architecture-cold-hot-data-separation/","title":"Detailed Caching and Hot-Cold Data Separation Architecture","text":"<p>Data caching and hot-cold data separation are key features of MatrixOne, where data is classified into hot and cold based on the frequency of use and managed differently. This design allows MatrixOne to maintain excellent performance while keeping operating costs low.</p>"},{"location":"MatrixOne/Overview/architecture/architecture-cold-hot-data-separation/#technical-architecture","title":"Technical Architecture","text":"<p>In the overall architecture of MatrixOne, two parts are responsible for persistent data storage. One is the object storage shared by the entire MatrixOne distributed cluster, which is the primary storage device of the cluster. The other is the local storage on each compute node (CN), mainly used for data caching. The primary storage contains all data of the entire cluster, while the cache only saves data extracted from the primary storage during recent queries. In addition, the memory of CN nodes is also used as part of the data cache.</p> <p></p> <p>When a user initiates a query, the system first checks whether the cache of the CN to which the user is connected already contains the required data. If it exists, the system directly returns the result to the user, prioritizing memory over disk. Suppose the required data is not found in the cache of the currently connected CN. In that case, the system queries the global metadata information to see if the required data exists in the cache of other available CNs for this user, checking memory first and then disk. If it exists, the system redirects the request to the CN containing this data, processes it, and returns the result to the user. If the data searched for is not in the cache of any available CN, the system initiates a read request to the object storage and returns the result to the user.</p> <p></p> <p>When a user queries data from object storage, the queried data block will be filled into the corresponding position according to the cache query order. For example, if a user queries 100M of data from object storage, this 100M of data will first be written into the memory of the CN node to which the user is connected and then written into the disk cache of this CN node. Each time a new query is generated, the data in the cache will be updated according to this rule. Whether in memory or disk, data replacement in the CN cache follows the LRU (Least Recently Used) principle. With this mechanism, the most recent data is always in the easiest-to-get position, while relatively unpopular data will gradually be removed from the cache.</p>"},{"location":"MatrixOne/Overview/architecture/architecture-cold-hot-data-separation/#product-features","title":"Product Features","text":"<p>The features of data caching and hot-cold data separation bring unique advantages to the product. To show more specifically, we will show a simple example.</p>"},{"location":"MatrixOne/Overview/architecture/architecture-cold-hot-data-separation/#environment-configuration","title":"Environment Configuration","text":"<p>The environment introduced in this chapter will be based on the environment of MatrixOne Distributed Cluster Deployment. Please ensure that the entire MatrixOne is installed.</p> <ol> <li> <p>Prepare a table named <code>pe</code> and the corresponding CSV data. This CSV data table is 35.8MB, with 1,048,575 rows of data. We will use the following SQL statement to create two databases and load the same data table into the <code>pe</code> table in both databases.</p> <pre><code>create database stock;\ndrop table if exists stock.pe;\ncreate table stock.pe (\nts_code VARCHAR(255) DEFAULT null,\ntrade_date VARCHAR(255) DEFAULT null,\npe FLOAT DEFAULT null,\npb FLOAT DEFAULT null\n);\nload data local infile '/XXX/pe.csv' into table stock.pe fields TERMINATED BY '\\t';\n\ncreate database stock2;\ndrop table if exists stock2.pe;\ncreate table stock2.pe (\nts_code VARCHAR(255) DEFAULT null,\ntrade_date VARCHAR(255) DEFAULT null,\npe FLOAT DEFAULT null,\npb FLOAT DEFAULT null\n);\nload data local infile '/XXX/pe.csv' into table stock.pe fields TERMINATED BY '\\t';\n</code></pre> </li> <li> <p>Next, perform the corresponding cache configuration. In the cluster yaml settings of MatrixOne, TN, Log Service, and CN all have cache-related settings. However, you only need to focus on the CN cache directly related to the query, and the primary cache size is managed by <code>memoryCacheSize</code> and <code>diskCacheSize</code>.</p> <pre><code>metadata:\nname: mo\nnamespace: mo-hn\nspec:\ncnGroups:\n- name: cn-set1\n# Intermediate configuration omitted\nsharedStorageCache: # Core parameters for configuring CN cache\nmemoryCacheSize: 250Mi # CN's memory cache, Mi stands for MB\ndiskCacheSize: 1Gi # CN's disk cache, Gi stands for GB\n</code></pre> </li> </ol> <p>When both parameters are set to \"1\", the cache is turned off, and all query requests from MatrixOne will interact directly with the underlying object storage, significantly reducing the efficiency of queries.</p> <p>To simplify the display, you can first turn off the memory cache here and only set a specific size of the disk cache. Since the original data will be compressed to a particular ratio according to the data type after being stored, you need to set the disk cache to 20MB first, which is enough to store the compressed 35.8MB data file.</p> <pre><code>metadata:\nname: mo\nnamespace: mo-hn\nspec:\ncnGroups:\n- name: cn-set1\n## Omitted intermediate configuration\nsharedStorageCache: # Core parameters for configuring CN cache\nmemoryCacheSize: \"1\" # CN's memory cache, Mi stands for MB\ndiskCacheSize: 20Mi # CN's disk cache, Gi stands for GB\n</code></pre>"},{"location":"MatrixOne/Overview/architecture/architecture-cold-hot-data-separation/#query-acceleration","title":"Query Acceleration","text":"<p>After completing the above settings and starting the MatrixOne cluster, you can experience the effect of cache acceleration through the results of multiple queries. Here, you can run a full table scan of <code>stock.pe</code> multiple times in a row.</p> <pre><code>mysql&gt; select * from stock.pe into outfile \"test01.txt\";\nEmpty set (6.53 sec)\n\nmysql&gt; select * from stock.pe into outfile \"test02.txt\";\nEmpty set (4.01 sec)\n\nmysql&gt; select * from stock.pe into outfile \"test03.txt\";\nEmpty set (3.84 sec)\n\nmysql&gt; select * from stock.pe into outfile \"test04.txt\";\nEmpty set (3.96 sec)\n</code></pre> <p>The above results show that the first query is noticeably slower because it needs to fetch data from object storage. However, since the data has been cached to the disk in the subsequent three queries, the query speed has significantly improved.</p>"},{"location":"MatrixOne/Overview/architecture/architecture-cold-hot-data-separation/#cache-replacement","title":"Cache Replacement","text":"<p>Next, you can alternate and run a full table scan of <code>stock.pe</code> and <code>stock2.pe</code> multiple times.</p> <pre><code>mysql&gt; select * from stock2.pe into outfile \"test05.txt\";\nEmpty set (5.84 sec)\n\nmysql&gt; select * from stock2.pe into outfile \"test06.txt\";\nEmpty set (4.27 sec)\n\nmysql&gt; select * from stock2.pe into outfile \"test07.txt\";\nEmpty set (4.15 sec)\n\nmysql&gt; select * from stock.pe into outfile \"test08.txt\";\nEmpty set (6.37 sec)\n\nmysql&gt; select * from stock.pe into outfile \"test09.txt\";\nEmpty set (4.14 sec)\n\nmysql&gt; select * from stock.pe into outfile \"test10.txt\";\nEmpty set (3.81 sec)\n</code></pre> <p>You might notice that each time the data table for the query is switched, the query efficiency significantly decreases. This is due to the cache replacement mechanism. You only set a small cache, which is just enough to store the complete data of a table. Therefore, when you alternate queries, the old cache data is replaced. The new query needs to fetch data from the object storage, and when queried again, since the data has been cached, the query speed is improved.</p>"},{"location":"MatrixOne/Overview/architecture/architecture-cold-hot-data-separation/#query-preheating","title":"Query Preheating","text":"<p>In many business scenarios, we often need to accelerate the queries due to a large amount of data or complex queries. The cache mechanism of MatrixOne can accelerate queries by preheating the data.</p> <p>For example, the following SQL query:</p> <pre><code>SELECT pe1.ts_code, pe1.pe, pe1.pb\nFROM stock2.pe as pe1\nWHERE pe1.pe = (SELECT min(pe2.pe)\nFROM stock2.pe as pe2\nWHERE pe1.ts_code = pe2.ts_code)\nORDER BY trade_date\nDESC LIMIT 1;\n</code></pre> <p>If not optimized, the execution speed is as follows:</p> <pre><code>SELECT pe1.ts_code, pe1.pe, pe1.pb\nFROM stock2.pe as pe1\nWHERE pe1.pe = (SELECT min(pe2.pe)\nFROM stock2.pe as pe2\nWHERE pe1.ts_code = pe2.ts_code)\nORDER BY trade_date\nDESC LIMIT\n\n1;\n+-----------+------+--------+\n| ts_code   | pe   | pb     |\n+-----------+------+--------+\n| 000038.SZ |    0 | 1.2322 |\n+-----------+------+--------+\n1 row in set (5.21 sec)\n</code></pre> <p>This SQL query only involves the query of the <code>stock2.pe</code> table. We can preheat the table data to the cache by pre-scanning the complete table data, so the query can significantly improve the speed of this SQL query.</p> <pre><code>mysql&gt; select * from stock2.pe into outfile \"test11.txt\";\nEmpty set (6.48 sec)\n\nmysql&gt; SELECT pe1.ts_code, pe1.pe, pe1.pb FROM stock2.pe as pe1 WHERE pe1.pe = (SELECT min(pe2.pe) FROM stock2.pe as pe2 WHERE pe1.ts_code = pe2.ts_code) ORDER BY trade_date DESC LIMIT 1;\n+-----------+------+---------+\n| ts_code   | pe   | pb      |\n+-----------+------+---------+\n| 000068.SZ |    0 | 14.6959 |\n+-----------+------+---------+\n1 row in set (2.21 sec)\n</code></pre> <p>This feature is particularly suitable for some fixed report calculation scenarios. Users can preheat the data involved in the query and then perform the query, which can significantly improve the query effect.</p>"},{"location":"MatrixOne/Overview/architecture/architecture-logservice/","title":"Detailed Logservice Architecture","text":"<p>Logservice plays a vital role in MatrixOne. It is an independent service used by external components through RPC for log management.</p> <p>Logservice uses the dragonboat library based on the Raft protocol (a multi-raft group's Go language open source implementation) and usually uses local disks to store logs in multiple copies, similar to the management of WAL (Write-Ahead Log). The transaction commits must only be written to the Logservice without writing the data to S3. Additional components write batches of data to S3 asynchronously. Such a design ensures low latency when the transaction commits, and multiple copies provide high data reliability.</p>"},{"location":"MatrixOne/Overview/architecture/architecture-logservice/#logservice-architecture","title":"Logservice Architecture","text":"<p>The architecture of Logservice consists of two parts: client and server. The server includes modules such as handler, dragonboat, and RSM (Replicated State Machine), while the client includes several key interfaces. The collaborative relationship between them is shown in the figure below:</p> <p></p>"},{"location":"MatrixOne/Overview/architecture/architecture-logservice/#client","title":"Client","text":"<p>Logservice client is mainly invoked by TN (Transaction node) and provides the following key interfaces:</p> <ul> <li><code>Close()</code>: Close the client connection.</li> <li><code>Config()</code>: Get client-related configuration.</li> <li><code>GetLogRecord()</code>: returns a <code>pb.LogRecord</code> variable containing an 8-byte LSN (log sequence number), a 4-byte record type, and a data field of type <code>[]byte</code>. The data field consists of 4 bytes for <code>pb.UserEntryUpdate</code>, 8 for the replica TN ID, and <code>payload []byte</code>.</li> <li><code>Append()</code>: Append <code>pb.LogRecord</code> to Logservice and return LSN. The parameter <code>pb.LogRecord</code> can be reused on the calling side.</li> <li><code>Read()</code>: Read logs starting from the specified <code>firstLsn</code> from the Logservice until maxSize is reached. The returned LSN is used as the starting point for the next read.</li> <li><code>Truncate()</code>: Delete the logs before the specified LSN to free up disk space.</li> <li><code>GetTruncatedLsn()</code>: Returns the LSN of the most recently deleted log.</li> <li><code>GetTSOTimestamp()</code>: Request the specified timestamps from TSO (Timestamp Oracle). The caller occupies the scope of <code>[returned value, returned value + count]</code>. This method currently needs to be used.</li> </ul> <p>The Logservice client sends a request to the Logservice server through MO-RPC, and the server interacts with <code>Raft</code>/<code>dragonboat</code> and returns the result.</p>"},{"location":"MatrixOne/Overview/architecture/architecture-logservice/#server","title":"Server","text":""},{"location":"MatrixOne/Overview/architecture/architecture-logservice/#server-handler","title":"Server Handler","text":"<p>The server side of Logservice receives requests from clients and handles them. The entry function is <code>(*Service).handle()</code>, and different requests are processed by calling other methods:</p> <ul> <li>Append: Appends logs to Logservice, ultimately invoking the <code>(*NodeHost) SyncPropose()</code> method of Dragonboat for synchronous proposal. It waits for the log to be committed and applied before returning, and the return value is the LSN (Log Sequence Number) after a successful log write.</li> <li>Read: Reads log entries from the log database. It first calls the <code>(*NodeHost) SyncRead()</code> method to perform a linear read from the state machine up to the current LSN and then calls the <code>(*NodeHost) QueryRaftLog()</code> method to read log entries from the log database based on the LSN.</li> <li>Truncate: Truncates logs in the log database to free up disk space. It's important to note that here, only the latest truncatable LSN in the state machine is updated, and the actual truncation operation still needs to be performed.</li> <li>Connect: Establishes a connection with the Logservice server and attempts to read and write the state machine for state checking.</li> <li>Heartbeat: Includes heartbeats to Logservice, CN, and TN. This request updates the status information of each entity in the HAKeeper's state machine and synchronizes the tick of HAKeeper. When the HAKeeper performs checks, it compares the offline time based on the tick, and if it's offline, it triggers removal or shutdown operations.</li> <li>Get XXX: Retrieves relevant information from the state machine.</li> </ul>"},{"location":"MatrixOne/Overview/architecture/architecture-logservice/#bootstrap","title":"Bootstrap","text":"<p>Bootstrap is the process that occurs when the logservice server starts, and it is carried out through HAKeeper's shard ID 0. The entry function is <code>(*Service) BootstrapHAKeeper</code>. Regardless of how many replicas are configured, each logservice process starts a replica of HAKeeper during startup. Each replica sets up members (replicas) upon startup, and the HAKeeper shard starts Raft with these members as the default replica count. After completing the leader election in Raft, it executes setting the initial cluster information (<code>set initial cluster info</code>), sets the shard to count for logs and TNs, and sets the replica count for logs. Once the replica count is set, any excess HAKeeper replicas will be stopped.</p>"},{"location":"MatrixOne/Overview/architecture/architecture-logservice/#heartbeat","title":"Heartbeat","text":"<p>This heartbeat is sent from Logservice, CN, and TN to HAKeeper, rather than being a heartbeat between Raft replicas. It serves two primary purposes:</p> <ol> <li>Sending the status information of each replica to HAKeeper through heartbeats, allowing HAKeeper's state machine to update replica information.</li> <li>Retrieving commands that replicas need to execute from HAKeeper upon heartbeat response.</li> </ol> <p>The heartbeat process in Logservice is illustrated in the following diagram, and the process is similar for CN and TN.</p> <p></p> <p>By default, the heartbeat is executed once per second, and its mechanism is as follows:</p> <ol> <li>Generate heartbeat information for all shard replicas on the storage level, including shard ID, node information, term, leader, etc.</li> <li>Send the request to the server side of Logservice.</li> <li>Upon receiving the request, the server invokes the <code>(*Service) handleLogHeartbeat()</code> method to process it and uses propose to send the heartbeat to Raft.</li> <li>Upon receiving the heartbeat, the state machine of HAKeeper calls the <code>(*stateMachine) handleLogHeartbeat()</code> method to process it, primarily performing the following tasks:<ul> <li>Updating the LogState in the state machine: Invoking the <code>(*LogState) Update()</code> method to update storage and shard information.</li> <li>Retrieving commands from the <code>ScheduleCommands</code> of the state machine and returning them to the initiating end for execution.</li> </ul> </li> </ol> <p>The principles of CN and TN sending heartbeats to HAKeeper are also similar.</p>"},{"location":"MatrixOne/Overview/architecture/architecture-logservice/#replicated-state-machine-rsm","title":"Replicated State Machine (RSM)","text":"<p>Logservice and HAKeeper have an in-memory replicated state machine model where all data is stored in memory. They both implement the IStateMachine interface, and the key methods are as follows:</p> <ul> <li><code>Update()</code>: After completing a propose and commit (i.e., when a majority of replicas have finished writing), the <code>Update()</code> method is called to update the data in the state machine. The user implements the <code>Update()</code> method and must be side-effect free, meaning that the same input must yield the same output. Otherwise, it can lead to an unstable state machine. The results of the <code>Update()</code> method are returned through the Result structure, and if an error occurs, the error field is not empty.</li> <li><code>Lookup()</code>: Used to retrieve data from the state machine. The data type to be retrieved is specified through the <code>interface{}</code> parameter, and the result is also of type <code>interface{}</code>. Therefore, users need to define the data in the state machine, pass the corresponding data type, and then perform type assertion. <code>Lookup()</code> is a read-only method and should not modify the data in the state machine.</li> <li><code>SaveSnapshot()</code>: Creates a snapshot by writing the data from the state machine to an <code>io.Writer</code> interface, typically a file handle. Thus, the snapshot is ultimately saved to a local disk file. <code>ISnapshotFileCollection</code> represents a list of files outside the state machine's file system (if any), which will also be stored in the snapshot. The third parameter is to notify the snapshot process that the Raft replica has stopped, terminating the snapshot operation.</li> <li><code>RecoverFromSnapshot()</code>: Recovers the state machine data by reading the latest snapshot data from an <code>io.Reader</code>. <code>[]SnapshotFile</code> represents an additional list of files directly copied to the state machine's data directory. The third parameter controls the snapshot operation's recovery, stopping it when Raft replica operations are being performed.</li> <li><code>Close()</code>: Closes the state machine and performs any necessary cleanup tasks.</li> </ul>"},{"location":"MatrixOne/Overview/architecture/architecture-logservice/#read-write-process","title":"Read-Write Process","text":"<p>In Logservice, the general process for a read-write request is as follows:</p>"},{"location":"MatrixOne/Overview/architecture/architecture-logservice/#write-process","title":"Write Process","text":"<ol> <li>The request is forwarded to the leader node if the connected node is not the leader. Upon receiving the request, the leader node writes the log entry to its local disk.</li> <li>Simultaneously, the request is asynchronously sent to follower nodes. Upon receiving the request, each follower node writes the log entry to its local disk.</li> <li>Once most nodes have completed the write, the commit index is updated, and other follower nodes are notified through heartbeat messages.</li> <li>The leader node executes the state machine operations (apply) after the write is committed.</li> <li>The result is returned to the client after the state machine operations are completed.</li> <li>Each follower node independently executes its state machine operations upon receiving the commit index from the leader.</li> </ol>"},{"location":"MatrixOne/Overview/architecture/architecture-logservice/#read-process","title":"Read Process","text":"<p>Reading data can be divided into two scenarios:</p> <ul> <li> <p>Reading data from the state machine.</p> <ul> <li>The client initiates a read request, and when the request reaches the leader node, the current commit index is recorded.</li> <li>The leader node sends heartbeat requests to all nodes to confirm its leader status. Once most nodes respond and confirm it as the leader, it can respond to the read request.</li> <li>Wait for the apply index to be greater than or equal to the commit index.</li> <li>Once the condition is met, the data can be read from the state machine and returned to the client.</li> </ul> </li> </ul> <p></p> <ul> <li> <p>Reading log entries from the log database (log db).</p> <ul> <li>This process typically occurs during cluster restart.</li> <li>During restart, replicas first need to recover the state machine data from the snapshot, then start reading log entries from the log database based on the index position recorded in the snapshot and apply them to the state machine.</li> <li>After this operation is completed, replicas can participate in leader elections.</li> <li>When a leader is elected in the cluster, the Transaction nodes (TN) connect to the Logservice cluster and start reading log entries from the last checkpoint position of a replica's log database. These log entries are replayed into the Transaction node's in-memory data.</li> </ul> </li> </ul> <p></p>"},{"location":"MatrixOne/Overview/architecture/architecture-logservice/#truncation","title":"Truncation","text":"<p>As the log entries in Logservice's log database continue to grow, it can lead to insufficient disk space. Therefore, regular disk space release is needed, achieved through truncation.</p> <p>Logservice uses an in-memory-based state machine that only stores some metadata and status information, such as tick, state, and LSN (Log Sequence Number), without recording user data. User data is recorded by the Transaction nodes (TN) themselves. You can think of it as a master-slave architecture, where the state machines are separate, and the TN and Logservice maintain their respective state machines.</p> <p>In this design with separate state machines, a simple snapshot mechanism can cause issues:</p> <p></p> <ol> <li>When a TN sends a truncation request and sets the truncation index to 100, the applied index of the Logservice's state machine is 200. This means that logs before index 200 will be deleted, and a snapshot will be generated at that position. Note: The truncation index is not equal to the applied index.</li> <li>The cluster restarts.</li> <li>The Logservice's state machine applies the snapshot with index 200, sets the first index to 200 (deleting logs before index 200), and replays logs before providing the service.</li> <li>When the TN reads log entries from Logservice, starting from index 100, it fails to read because the logs before index 200 have been deleted, resulting in an error.</li> </ol> <p>To address the above problem, the current truncation workflow is as follows:</p> <p></p> <ol> <li>The TN sends a truncation request and updates the truncation LSN (truncateLsn) in the Logservice's state machine. Only the value is updated, and no snapshot/truncation operation is executed.</li> <li>Each Logservice server internally starts a truncation worker that periodically sends truncation requests (Truncate Request). It's important to note that the Exported parameter in this request is true, indicating that the snapshot is not visible to the system and is only exported to a specified directory.</li> <li>The truncation worker also checks the list of currently exported snapshots to see if there are any snapshots with an index greater than the truncation LSN in the Logservice's state machine. If there are, the snapshot closest to the truncation LSN is imported into the system to make it effective and visible to the system.</li> <li>All replicas perform the same operations to ensure that the snapshot LSN of both state machines is consistent. This allows reading the corresponding log entries when the cluster restarts.</li> </ol>"},{"location":"MatrixOne/Overview/architecture/architecture-logtail/","title":"Logtail Protocol Architecture","text":"<p>The Logtail protocol is a logging synchronization protocol between Computation Nodes (CN) and Transaction Nodes (TN). It serves as the foundation for the collaboration between CN and TN in the context of the MatrixOne cloud-native transaction and analytics engine. This article provides an in-depth look at the Logtail protocol's core purpose, contents, and generation process.</p> <p>TAE, or the MatrixOne cloud-native transaction and analytics engine, currently involves the following responsibilities related to TN nodes:</p> <ul> <li>Processing committed transactions.</li> <li>Providing Logtail services to CN.</li> <li>Storing the most recent transaction data in object storage and pushing log windows.</li> </ul> <p>Steps 1 and 3 lead to state changes, such as successful data writes into memory or object storage. Logtail is a logging synchronization protocol designed to synchronize partial states from TN to CN, allowing CN to reconstruct the required readable data at a low cost locally. As a key protocol in the MatrixOne storage-compute separation architecture, Logtail possesses the following characteristics:</p> <ul> <li>It is a log-replication state machine connecting CN and TN in tandem.</li> <li> <p>Logtail supports two retrieval modes: pull and push.</p> <ul> <li>Push offers higher real-time capabilities by continuously synchronizing incremental logs from TN to CN.</li> <li>Pull supports snapshot synchronization for specified time intervals and can also synchronize subsequent incremental log information on demand.</li> </ul> </li> <li> <p>Logtail supports table-level subscriptions and collections, enhancing flexibility in multiple CN support and contributing to load balancing.</p> </li> </ul>"},{"location":"MatrixOne/Overview/architecture/architecture-logtail/#logtail-protocol-contents","title":"Logtail Protocol Contents","text":"<p>The Logtail protocol consists of in-memory data and metadata, with the primary distinction being whether the data has been archived for object storage.</p> <p>Updates generated by a single transaction <code>commit</code> exist in Logtail as in-memory data before being archived to object storage. Any modifications to data can be categorized as inserts and deletes:</p> <ul> <li>For inserts, Logtail information includes the data row's row-id, commit timestamp, and the columns defined in the table.</li> <li>Logtail information contains the row-id, commit timestamp, and primary vital columns for deletes. Once CN receives this in-memory data, it organizes it into a memory-based B-tree structure to facilitate query services.</li> </ul> <p>In-memory data cannot be retained indefinitely in memory, as this would increase memory pressure. Due to time or capacity constraints, in-memory data is flushed to object storage, forming an object. Each object comprises one or more data blocks, with each block being the smallest storage unit for table data, and the number of rows in each block does not exceed a fixed limit, currently set at 8192 rows. Once the flush is complete, Logtail passes the metadata of the blocks to CN, which filters out the visible block list based on transaction timestamps, reads the block contents, and combines them with in-memory data to obtain a complete data view at a specific moment.</p> <p>The process above outlines the basic steps. With the introduction of performance optimizations, more details will become apparent, including:</p>"},{"location":"MatrixOne/Overview/architecture/architecture-logtail/#1-checkpoints","title":"1. Checkpoints","text":"<p>When TN has been running for a while, it performs a checkpoint at a specific moment, archiving all data before that time to object storage. Therefore, all this metadata is consolidated into a \"compression package.\" When a newly launched CN connects to TN and requests Logtail for the first time, if the subscription timestamp is greater than the checkpoint timestamp, TN can directly transmit checkpoint metadata (a string) to Logtail, allowing CN to read block information generated before the checkpoint now, reducing the network burden of sharing block metadata from scratch and relieving TN's I/O pressure.</p>"},{"location":"MatrixOne/Overview/architecture/architecture-logtail/#2-memory-cleanup","title":"2. Memory Cleanup","text":"<p>When TN passes block metadata to CN, it cleans up the previously transmitted in-memory data based on block identifiers. However, data updates may occur during TN transaction flushing, such as new delete operations appearing on flushed blocks. If the strategy is rollback and retried, the already written data becomes invalid. In the case of loads with frequent updates, a significant amount of rollback operations may occur, wasting TN resources. To avoid this situation, TN continues to commit, rendering in-memory data generated after the start of the flush process unremovable from CN. Logtail's block metadata includes a timestamp, indicating that in-memory data for the block can only be cleared from memory before this timestamp. These uncleared updates will be asynchronously written to disk during the next flush and subsequently removed by CN.</p>"},{"location":"MatrixOne/Overview/architecture/architecture-logtail/#3-faster-reads","title":"3. Faster Reads","text":"<p>Blocks that have already been archived to object storage may continue to generate delete operations. Therefore, when reading these blocks, in-memory deleted data must be considered. CN maintains an additional block B-tree index to determine which blocks need to be combined with in-memory data. When applying Logtail to modify this index, caution should be exercised, increasing index entries when processing in-memory data and decreasing them when processing block metadata. This index includes only the blocks that need to be checked against in-memory data, which can result in a significant performance boost for a large number of blocks.</p>"},{"location":"MatrixOne/Overview/architecture/architecture-logtail/#logtail-generation","title":"Logtail Generation","text":"<p>As mentioned earlier, Logtail can be obtained through pull and push. These two modes have different characteristics, and they will be explained separately.</p>"},{"location":"MatrixOne/Overview/architecture/architecture-logtail/#1-pull","title":"1. Pull","text":"<p>As previously explained, pull effectively synchronizes table snapshots and generates incremental log information.</p> <p>To achieve this, TN maintains a sorted list of transaction handles, the logtail table, ordered by transaction preparation time. Given any moment, a binary search can be performed on the transaction handles within the range, which provides which blocks have been updated by that transaction. By iterating through these blocks, a complete log can be obtained. To expedite the search process, transaction handles are paginated, with the bornTs of each page being the minimum preparation time of the transaction handles within that page. The first level of binary search is performed on these pages.</p> <p>Based on the logtail table, from the moment a pull request is received, the primary workflow is as follows:</p> <ol> <li> <p>Adjust the request's time range based on existing checkpoints, which may provide data earlier than the request.</p> </li> <li> <p>Take a snapshot of the logtail table, iterate through the relevant transaction handles within this snapshot using a RespBuilder in visitor mode, and collect the committed log information.</p> </li> <li> <p>Convert the collected log information into the Logtail protocol format and return it as a response to CN.</p> </li> </ol> <p></p> <pre><code>type RespBuilder interface {\n  OnDatabase(database *DBEntry) error\n  OnPostDatabase(database *DBEntry) error\n  OnTable(table *TableEntry) error\n  OnPostTable(table *TableEntry) error\n  OnPostSegment(segment *SegmentEntry) error\n  OnSegment(segment *SegmentEntry) error\n  OnBlock(block *BlockEntry) error\n  BuildResp() (api.SyncLogtailResp, error)\n  Close()\n}\n</code></pre>"},{"location":"MatrixOne/Overview/architecture/architecture-logtail/#2-push","title":"2. Push","text":"<p>The primary purpose of push is to synchronize incremental logs from TN to CN in a more real-time manner. The process is divided into three stages: subscription, collection, and push.</p> <ul> <li>Subscription: This process is necessary when a new CN starts. The CN establishes an RPC stream with the TN and subscribes to catalog-related tables as a client. The CN can provide external services when database, table, and column information has been synchronized. When TN receives a request to subscribe to</li> </ul> <p>A table goes through the pull process, including all Logtail up to the previous push timestamp in the subscription response. For a CN, Logtail's subscription, unsubscription, and data sending all occur on a single RPC stream. If there is an exception, the CN enters a reconnection process until it recovers. Once the subscription is successful, subsequent Logtail operations involve pushing incremental logs.</p> <ul> <li> <p>Collection: A transaction's completion within TN triggers a callback to collect Logtail within the current transaction. The primary process involves iterating through TxnEntry in the workspace, which serves as a fundamental container for transaction updates directly involved in the commit pipeline. Depending on its type, the corresponding log information is collected and transformed into a Logtail protocol data format. This collection process occurs through a pipeline and runs concurrently with WAL's fsync, reducing blocking.</p> </li> <li> <p>Push: A filtering process is mainly conducted during the push stage. If it is found that a CN has not subscribed to a specific table, it is skipped to avoid pushing data to that CN.</p> </li> </ul> <p>If a table has not been updated for a long time, how does a CN become aware of it? Here, a heartbeat mechanism is introduced, with a default of 2 ms. In TN's commit queue, a heartbeat transaction is placed, which performs no substantial work but consumes a timestamp, triggering a Logtail send to notify CN that all table data had updates sent previously, pushing the CN's timestamp watermark.</p> <p></p>"},{"location":"MatrixOne/Overview/architecture/architecture-matrixone-operator/","title":"Matrixone-Operator Design and Implementation Details","text":"<p>MatrixOne is a cloud-native distributed database that naturally adapts to cloud infrastructure and is optimized for cloud-oriented cost models. And unlike typical SaaS services, databases in serious scenarios often need to follow the application, running on the same infrastructure as the application, out of a need for performance and data security. To serve as many users as possible, MatrixOne needs to adapt to all types of public, private, and even hybrid clouds. And the largest of these conventions is Kubernetes (K8S). That's why MatrixOne uses K8S as the default operating environment for distributed deployments, adapting to different clouds in a unified way. MatrixOne-Operator is exactly MatrixOne's automated deployment operations software on the K8S. It extends the K8S to provide external operations management capabilities of the MatrixOne cluster in a K8S-style declarative API.</p> <p>This article will explain the design and implementation of MatrixOne-Operator and share our empirical thinking.</p>"},{"location":"MatrixOne/Overview/architecture/architecture-matrixone-operator/#matrixone-operator-design","title":"MatrixOne-Operator Design","text":"<p>Although K8S natively provides a StatefulSet API to serve the orchestration of stateful apps, K8S natively does not support managing app state due to the difficulty of uniform abstraction of app layer state across different stateful apps. To solve this problem, the Operator model emerged. A typical K8S Operator consists of an API and a controller:</p> <ul> <li>API</li> </ul> <p>Typically declared through K8S' CustomResourceDefinition (CRD) object, after committing a K8S CRD to K8S's api-server, the api-server registers a corresponding Restful API with itself. All K8SClients can get, LIST, POST, DELETE, etc. on this newly declared API in a similar way to manipulating native resources. By convention, within each API object, the <code>.spec</code> structure is managed by the user to declare the desired state of the object, and the <code>.status</code> structure is managed by the controller below to expose the actual state of the object.</p> <ul> <li>Controller</li> </ul> <p>A controller is an ongoing piece of code that monitors (watches) a range of K8S objects, including the API objects we just defined. Then, automation is performed based on the expected state of these objects and the actual state collected from the reality (note: the actual state here is collected from the reality and rewritten into <code>.status</code>, not directly from <code>.status</code>) to drive the actual state to the desired state. The process continues in a loop, graphically known as a control loop, and in some places with a more classical word, reconciliation loop, cleverly keeping the flavors aligned with K8S's word for \"orchestration.\"</p> <p>The following diagram provides a general description of the process using the simplified MatrixOneCluster API as an example:</p> <p>MatrixOne-Operator provides not only load-based APIs such as MatrixOneCluster for managing MO clusters, but also task-based APIs such as backup recovery and resource-based APIs such as object buckets. Each API and their controller are designed with unique considerations in mind, but invariably, all APIs and controllers are built in the above pattern. Next, we'll continue exploring the tradeoffs in each API design.</p>"},{"location":"MatrixOne/Overview/architecture/architecture-matrixone-operator/#cluster-api-design","title":"Cluster API Design","text":"<p>A distributed MO cluster consists of multiple components such as log services, transaction nodes, compute nodes, and proxies, where compute nodes also have explicit heterogeneous requirements to achieve model optimization for load and capabilities across clouds, cloud edges, and more. Centralizing the management of an entire cluster into one API object and declaring another controller to manage, while easy to use, is a code maintenance nightmare. Therefore, MatrixOne-Operator made the principle of loosely coupled fine-grained APIs clear at the beginning of its design, designing clear APIs with responsibilities such as LogSet, CNSet, ProxySet, BucketClaim, and controllers that are independent of each other. To maintain ease of use, the MatrixOneCluster API was also introduced. Responsible for MatrixOneCluster controllers not duplicating the work of other controllers\u2014when a cluster requires a LogSet to provide logging services, the MatrixOneCluster controller simply creates a LogSet object and delegates the rest to the LogSet controller.</p> <p>With this design, while there are many APIs, users always only need to care about the MatrixOneCluster API, and the developers of MatrixOne-Operator are adding features or solving problems, often with problem domains no larger than a fine-grained API and controller.</p> <p>Of course, there are certain dependencies between multiple API objects, such as transaction nodes and compute nodes that rely on HAKeeper running in the log service to get cluster information for service discovery. This requires that the logging service be started and HAKeeper bootstrap completed when the cluster is deployed before the transaction and compute nodes can continue to start. While this type of logic can be implemented by a MatrixOneCluster controller, it also means that the business knowledge of other controllers is compromised and the implementation of the individual controls still creates coupling. Therefore, in mo-operator, we implement the business logic that creates dependencies between all components on the relying party, which exposes itself to the outside world only through the convention <code>.status</code> field. For example, when a controller is tuning a CNset, it actively waits for the LogSet pointed to by the CNSet to be ready before following up. Neither the LogSet controller nor the upper MatrixOneCluster controller need to be aware of this.</p> <p>The loosely coupled fine-grained API adapts well to CN's heterogeneous orchestration scenarios. In MatrixOne-Operator, in addition to the convenient usage of declaring multiple CN groups in MatrixOneCluster for heterogeneous orchestration, it is also possible to directly create a CNSet to join an existing cluster, which means that the new CNSet can be deployed in another set of K8S clusters with network-level support for MO orchestration across clouds or cloud-side scenarios.</p> <p>During iterations of individual controllers, MatrixOne-Operator also tends to add new features by adding new API objects. For example, when implementing object storage management, MatrixOne-Operator needs to ensure that there is no intersection between object storage paths used by different clusters and that they are cleaned up automatically after the cluster is destroyed. MatrixOne-Operator's solution is to add a BucketClaim API that references the control logic of K8S PersistentVolumeClaim to complete lifecycle management of an object storage path in a standalone controller, avoiding complex race condition handling and code coupling issues.</p>"},{"location":"MatrixOne/Overview/architecture/architecture-matrixone-operator/#controller-implementation","title":"Controller implementation","text":"<p>K8S provides the controller-runtime package to help developers implement their own controllers, but for versatility the interface design is relatively low-level:</p> <pre><code>Reconcile(ctx context.Context, req Request)(Result, error) \n</code></pre> <p>The controller needs to implement the Reconcile interface, which is then registered through the controller-runtime interface, declare the objects to listen on, and some filtering rules for listening. The controller-runtime calls the controller's Reconcile method each time the object changes or retries Reconcile, and passes the identifier of the target object in the req parameter. There will be a lot of template code within this interface, usually represented by pseudocode:</p> <pre><code>func tuning(Namespace+Name of object A) {\n  Get the Spec of object A\n  if object A is being deleted {\n    Execute the cleanup logic\n    update the cleanup progress to A.status\n    remove finalizer on object A\n  } else {\n    Add finalizer to A\n    Execute the tuning logic\n    Update tuning progress to A.status\n  }\n}\n</code></pre> <p>Similar logic recurs in various community controller implementations, and developers need to care about a lot more than business: handling finalizers correctly to ensure that resources are not leaked, updating progress and errors to status in a timely manner to increase visibility, and more detailed loggers with context and kubeClient with cache issues.</p> <p>Since there is no need to consider versatility, there is a more specialized abstraction within MatrixOne-Operator, designing the Actor interface:</p> <pre><code>type Actor[T client.Object] interface {  \n    Observe(*Context[T]) (Action[T], error)  \n    Finalize(*Context[T]) (done bool, err error)  \n}\n\ntype Action[T client.Object] func(*Context[T]) error\n</code></pre> <p>Behind that, the generic controller framework logic takes care of all the logic and details similar to the template code above, preparing within Context[T] the objects that currently need to be reconciled and the Logger, EventRecorder, KubeClient objects that have already taken care of the context. Finally:</p> <ul> <li> <p>When tuning an undeleted object, call Actor.Observe to have real business logic perform the tuning;</p> </li> <li> <p>When tuning an object in progress, Actor.Finalize is called to perform resource cleanup behavior within the business logic, retrying until Finalize returns completion before removing the object's finalizer.</p> </li> </ul> <p>The state machine for an object is as follows:</p> <p>Under this process, a controller is straightforward about the implementation of both the create and destroy parts of API object lifecycle management. Nothing more than calling K8S's API to request storage, deploy workloads, configure service discovery, or conversely destroying all external resources created while the API is in the delete phase, in conjunction with MO's operational knowledge. The object's updated tuning operation is also regular diff logic to MatrixOneCluster's. The cnSets field, for example, can be represented by the following pseudocode:</p> <pre><code>func sync(c MatrixOneCluster) {\n  existingCNSets := Collect all CNSets for this cluster\n  for _, desired := range c.spec.CNSets {\n    cnSet := build CNSet(desired)\n    if _, ok := existingCNSets[cnSet.Name]; ok {\n      // 1. CNSet exist,update CNSet\n      ....\n      // 2. Marks this cnSet as needed in the desired state.\n      delete(existingCNSets, cnSet.Name)\n    } else {\n      // CNSet does not exist, create\n      ....\n    }\n  }\n  for _, orphan := range existingCNSets {\n    // Cleanup for CNSets that actually exist but do not exist in the desired state\n  }\n}\n</code></pre> <p>More error-prone is ConfigMap / Secret's update logic. MO, like many apps, requires a configuration file and restarts to reread the configuration each time it is updated, which is usually stored with K8S native ConfigMap objects. One easy place to tread the pit is that the contents of the ConfigMap object are mutable, whereas most apps tend to read the configuration file within the ConfigMap only once at startup and never reload later. Therefore, viewing the content within the ConfigMap that the Pod is currently referencing does not determine the configuration that the Pod is currently using (it is possible that the ConfigMap content has changed since startup). Also, if you want to update your app on a rolling basis after a ConfigMap change, a common practice is to make a hash of the contents of the ConfigMap into the PodTemplate's Annotation and update this Annotation after each update of the ConfigMap change triggers a rolling update of your app. But this can also happen unexpectedly by modifying ConfigMap in place:</p> <p>For example, let's assume that the ConfigMap Hash in Annotation is updated from 123 to 321, and 321 is not ready after startup because of a problem with the ConfigMap configuration. At this point, with the right policy configuration, the rolling update will get stuck to avoid a wider failure range. However, a new version of ConfigMap has also been read within the Pod that has not yet been updated, and as soon as a container restart or Pod rebuild occurs, problems occur. This obviously doesn't behave the same as updating mirrors or other fields. When updating other fields, the green pod still belongs to the old ReplicaSet/ControllerRevision, neither reboot nor rebuild will start with the new version of the configuration, and the fault range is manageable.</p> <p>The root of the problem is that the contents of the ConfigMap are not within the spec of the Pod, and directly modifying the contents of the ConfigMap conflicts with the Pod's immutable infrastructure principles.</p> <p>Therefore, MatrixOne-Operator designs all objects that will be referenced within the Pod to be immutable. In the case of ConfigMap, each time a component's configuration is updated via CRD, MatrixOne-Operator generates a new ConfigMap and rolls all copies of the component onto this new ConfigMap:</p> <p>Based on this principle, at any given moment we can clarify the information within all Pods via the current Pod Spec. The problem of rolling updates is also solved.</p>"},{"location":"MatrixOne/Overview/architecture/architecture-matrixone-operator/#application-state-management","title":"Application State Management","text":"<p>In addition to lifecycle management of the app itself, MatrixOne-Operator has an important responsibility to manage the state of the app itself. However, distributed systems often manage their own application state based on heartbeats or similar mechanisms, so why do you have to do this more in Operator?</p> <p>The reason is that Operator has knowledge of automated O&amp;M within its code, for example Operator knows exactly which Pod is to be rebuilt/restarted next during the rolling update process. So it's possible to adjust in-app status ahead of time, such as migrating loads on the Pod to minimize the impact of rolling updates. There are two common implementations of such application state management logic:</p> <ul> <li> <p>Synchronize app status within the Pod's own various lifecycle hooks, such as InitContainer, PostStart Hook, and PreStop Hook.</p> </li> <li> <p>Call the app interface within Operator's tuning loop to adjust the app state.</p> </li> </ul> <p>Mode 1 is simpler to implement, while Mode 2 is more self-contained and free to cope better with complex scenarios. For example, when shrinking a CNSet, migrate the session on the condensed CN Pod to another CN Pod before stopping the CN Pod. If this action is placed in Pod PreStop Hook, it cannot be undone. In the actual scenario, there is a set of CNs that are shrunk and then expanded before the shrunk is complete (especially after auto-scaling is turned on). At this point, the tuning loop within Operator can calculate that the CNs that are still offline can be directly multiplexed at this point, calling the management interface inside the MO to restore the CN to the service state, not migrating the session to the other CNs and accepting the new session back to the Proxy without having to expand a new CN.</p>"},{"location":"MatrixOne/Overview/architecture/architecture-matrixone-operator/#summary","title":"Summary","text":"<p>As a mainstream option to extend the orchestration capabilities of K8S, the Operator model has evolved to today have mature base libraries and tool chains, and there are plenty of mature open source projects in the community to reference. Developing an Operator on K8S is no longer a new topic. But the real complexity is always hidden in the details of the actual business, and solving these problems requires a thorough understanding that combines knowledge of K8S and its own business systems domain. As a cloud-native distributed database, MatrixOne shares many of its design concepts and domain knowledge with other cloud-native systems. Hopefully this short article will not only help you understand the design implementation of mo-operator, but also give you an empirical reference when designing your own Operator.</p>"},{"location":"MatrixOne/Overview/architecture/architecture-matrixone-operator/#reference-documents","title":"Reference Documents","text":"<p>To learn about MatrixOne-Operator deployment operations, see Chapter Operator Administration</p>"},{"location":"MatrixOne/Overview/architecture/architecture-proxy/","title":"Detailed Proxy Architecture","text":"<p>Proxy, the sole component in MatrixOne responsible for load balancing and SQL request distribution, adapts to various scenarios by implementing session-level SQL routing through CN grouping and Proxy's SQL distribution.</p> <p>The architecture diagram of its SQL request distribution is as follows:</p> <ul> <li>The Kubernetes Library layer utilizes built-in Kubernetes features to ensure high availability and load balancing of the Proxy layer.</li> <li>SQL Proxy implements long connections, allowlists, and SQL request distribution, achieving load balancing and request forwarding for CNs.</li> <li>CN does not have the concept of read-only replicas and is divided only by manual grouping.</li> </ul>"},{"location":"MatrixOne/Overview/architecture/architecture-proxy/#technical-implementation","title":"Technical Implementation","text":"<p>Based on the multi-CN architecture of MatrixOne's storage-compute separation and the responsibilities of Proxy, the concept of CN label groups is introduced in HAKeeper and Proxy, that is, CN collections with fixed names and quantities.</p> <p>As shown in the figure above, the technical implementation process is explained as follows:</p> <ol> <li>Create different CN labels through configuration options in the <code>yaml</code> file (including configuration, replica count, and tenant).</li> <li>When the MatrixOne cluster starts, MatrixOne will launch the same number of Pods according to the replica count of each CN label, and HAKeeper will uniformly apply the corresponding labels.</li> <li>MatrixOne Operator (i.e., MatrixOne cluster resource manager in Kubernetes) is responsible for dynamically maintaining the CN quantity within the CN label group. After a CN node goes down, it launches the same number of CNs.</li> <li> <p>The Proxy component determines the connection session parameters and forwards a specific session to the corresponding CN group, implementing SQL routing.</p> </li> <li> <p>If a session request does not have a matching CN label, it will search for CNs with empty labels. If found, it will connect to the CN group with blank labels; otherwise, the connection will fail.</p> </li> <li>During expansion, Proxy migrates existing connections based on the session count of existing CN nodes, moving existing sessions to new CN nodes. The session count of the migrated nodes is close to being balanced, achieving load balancing.</li> <li> <p>During contraction, the Proxy migrates existing sessions of CN nodes that are about to go offline to other nodes. The session count of the migrated nodes is close to being balanced, thus achieving load balancing.</p> </li> <li> <p>Proxy is responsible for intra-group load balancing within the same CN label group.</p> </li> </ol> <p>The Proxy analyzes the parameters in the session request to determine whether the request matches the CN label. In implementing SQL routing, session parameters are used to find the CN label group matching the request. Specifically, the Proxy may examine specific fields in the CN label, such as tenant information, replica count, etc., to route the request to the appropriate CN label group. This way, the Proxy can match session requests with CN labels and ensure that requests are routed to the correct CN node.</p>"},{"location":"MatrixOne/Overview/architecture/architecture-proxy/#reference","title":"Reference","text":"<p>To learn more about implementing load balancing through Proxy, see Using Proxy for Tenant and Load Independent Resource Management.</p>"},{"location":"MatrixOne/Overview/architecture/architecture-tae/","title":"Transactional Analytical Engine Architecture","text":"<p>MatrixOne's storage engine is called the Transactional Analytical Engine (TAE).</p> <p></p>"},{"location":"MatrixOne/Overview/architecture/architecture-tae/#storage-engine-architecture","title":"Storage Engine Architecture","text":"<p>The Transactional Analytical Engine (TAE) organizes data into column blocks, the minor IO units. Currently, these blocks are organized with a fixed number of rows. For columns of the Blob type, special handling is performed.</p> <p>TAE organizes data in the form of tables, and the data of each table is structured as a Log-structured Merge-tree (LSM) tree. The current implementation of TAE is a three-level LSM tree, including L0, L1, and L2. L0 is relatively tiny and stored entirely in memory, while L1 and L2 are persisted on disk.</p> <p>In TAE, L0 consists of transient blocks, where data is unsorted. On the other hand, L1 consists of sorted blocks that contain sorted data. New data is permanently inserted into the latest transient block. When the number of rows in a transient block exceeds a limit due to inserted data, the block is sorted by the primary key and then flushed into L1 as a sorted block. If the number of sorted blocks exceeds the maximum limit for a segment, a merge sort method is used to sort and write them into L2.</p> <p>Both L1 and L2 store data sorted by the primary key. The main difference between the two is that L1 ensures data is sorted within a block, while L2 ensures data is sorted within each segment. A segment is a logical concept equivalent to row groups or sets in other implementations. A segment can be compressed based on the number of updates (delete) operations, resulting in a new segment. Additionally, multiple segments can be merged into a new segment. These operations are performed by background asynchronous tasks, with scheduling strategies that balance write amplification and read amplification.</p>"},{"location":"MatrixOne/Overview/architecture/architecture-tae/#key-features","title":"Key Features","text":"<ul> <li>Suitable for AP scenarios: TAE offers efficient data compression, high query efficiency, fast aggregate operations, and concurrent solid processing capabilities. Therefore, TAE performs better and is more suitable for analytics processing and data warehousing scenarios, especially with large-scale data.</li> <li>Flexible workload adaptation: By introducing the concept of Column Families, TAE allows flexible workload adaptation. For example, if all columns belong to the same Column Family (i.e., all column data is stored together), it behaves similarly to row storage. If each column is an independent Column Family (i.e., each column is stored independently), it behaves like a column storage. Users can easily switch between row and column storage by specifying it in the DDL table definition.</li> </ul>"},{"location":"MatrixOne/Overview/architecture/architecture-tae/#indexing-and-metadata-management","title":"Indexing and Metadata Management","text":"<p>Like traditional column storage engines, TAE introduces Zonemap (min/max data) information at the block and segment levels. As a transactional storage engine, TAE implements complete primary key constraint functionality, including support for multi-column primary keys and global auto-increment IDs. A primary key index is automatically created for each table to ensure data deduplication during data insertion to satisfy the primary key constraint and enable filtering based on the primary key.</p> <p>Primary key deduplication is a critical step in data insertion. TAE achieves a balance in the following aspects:</p> <ul> <li>Query performance</li> <li>Memory usage</li> <li>Data layout matching</li> </ul> <p>From an indexing granularity perspective, TAE can be divided into table-level indexing and segment-level indexing. For example, there can be one table-level index or one index per segment. Since TAE's table data consists of multiple segments, each undergoing compression/merging processes from L1 to L3, transitioning from unordered to ordered, table-level indexing is unfavorable. Therefore, TAE's indexing is built at the segment level.</p> <p>In segment-level indexing, there are two segments: append-only and non-dependable. For non-appendable segments, the segment-level index is a two-tier structure consisting of a Bloom filter and a Zone map. Dependable segments are composed of at least one dependable block and multiple non-appendable blocks. The index of the dependable block is an ART-tree (Adaptive Radix Tree) structure and a Zonemap, which reside in memory. The non-appendable blocks contain a Bloom filter and a Zone map.</p> <p></p>"},{"location":"MatrixOne/Overview/architecture/architecture-tae/#buffer-management","title":"Buffer Management","text":"<p>In a stable storage engine, efficient memory management is crucial for buffer management. Although buffer management is theoretically just the concept of a least-recently-used (LRU) cache, databases do not directly use the operating system's page cache to replace the cache manager, especially for transactional (TP) databases.</p> <p>In MatrixOne, a cache manager is used to manage memory buffer areas. Each buffer node has a fixed size and is allocated to four areas:</p> <ol> <li>Mutable: A fixed-size buffer area used to store transient column blocks from L0.</li> <li>SST: A buffer area used to store blocks from L1 and L2.</li> <li>Index</li> </ol> An area for storing index information. 4. Redo log: Stores uncommitted transaction data, with at least one buffer needed per transaction. <p>Each buffer node can be in either the Loaded or Unloaded state. When a user requests a pin operation on a buffer node from the cache manager, the reference count of the node is increased if it is in the Loaded state. If the node is in the Unloaded state, it is read from disk or remote storage, increasing the reference count. When there is insufficient memory, the system removes some nodes from memory based on the LRU strategy to free up space. When a user unpins a node, they close the node handle. If the reference count is 0, the node becomes a candidate for removal, while it remains in memory if the reference count is greater than 0.</p>"},{"location":"MatrixOne/Overview/architecture/architecture-tae/#write-ahead-log-and-log-replay","title":"Write-Ahead Log and Log Replay","text":"<p>In TAE, the handling of redo logs is optimized to make the column storage engine's Write-Ahead Log (WAL) design more efficient. Unlike a row storage engine, TAE only records redo logs during transaction commits instead of recording them for each write operation. Utilizing the cache manager reduces the usage of input/output (IO), especially for short-lived transactions that may require rollbacks, thereby avoiding IO events. Additionally, TAE can support large or long-running transactions.</p> <p>The format of the log entry header in TAE's redo log follows the structure below:</p> Item Byte Size GroupID 4 LSN 8 Length 8 Type 1 <p>The transaction log entries include the following types:</p> Type Data Type Value Description AC int8 0x10 Full write operations of a committed transaction PC int8 0x11 Partial write operations of a committed transaction UC int8 0x12 Partial write operations of an uncommitted transaction RB int8 0x13 Transaction rollback CKP int8 0x40 Checkpoint <p>Most transactions have only one log entry, but larger or longer transactions may require multiple entries. Therefore, a transaction's log may contain one or more UC-type log entries, one PC-type log entry, or just one AC-type log entry. UC-type log entries are allocated to a dedicated group.</p> <p>In TAE, the payload of a transaction log entry contains multiple transaction nodes. Transaction nodes include data manipulation language (DML) operations such as delete, add, update, and data definition language (DDL) operations such as create/delete table, create/delete database, etc. Each transaction node is a sub-item of a committed log entry and can be understood as part of the transaction log. Active transaction nodes share a fixed-size memory space and are managed by the cache manager. When there is insufficient space, some transaction nodes are unloaded, and their corresponding log entries are saved in the redo log. These log entries are replayed and applied to their respective transaction nodes during loading.</p> <p>A checkpoint is a safe point where the state machine can apply log entries during a system restart. Log entries before the checkpoint are no longer needed and will be physically destroyed at the appropriate time. TAE records information about the last checkpoint through groups, allowing log replay to start from the last checkpoint during system restart.</p> <p>TAE's WAL and log replay components have been independently abstracted into a code module called log store. It provides an abstraction for low-level log storage and access operations, which can be adapted to different implementations ranging from single-node to distributed systems. At the physical level, the behavior of a store is similar to that of a message queue. Starting from version 0.6 of MatrixOne, we have evolved towards a cloud-native version, using a separate shared log service as the log service. Therefore, in future versions, TAE's log store will be appropriately modified to access the external shared log service directly, eliminating the dependency on local storage.</p>"},{"location":"MatrixOne/Overview/architecture/architecture-tae/#transaction-processing","title":"Transaction Processing","text":"<p>TAE ensures transaction isolation by employing the Multi-Version Concurrency Control (MVCC) mechanism. Each transaction is equipped with a consistent read view determined by the transaction's start time, ensuring that the data read within the transaction never reflects modifications made by other concurrent transactions. TAE provides fine-grained optimistic concurrency control, and conflicts occur only when updates are made to the same row and column. Transactions use value versions that existed at the start of the transaction and do not lock them during read operations. When two transactions attempt to update the same value, the second fails due to a write-write conflict.</p> <p>In TAE's architecture, a table consists of multiple segments, each resulting from multiple transactions. Therefore, a segment can be represented as <code>$[T{start}, T{end}]$</code> (\u00b7 is the commit time of the earliest transaction, \u00b7 is the commit time of the latest transaction). To compress and merge segments, an additional dimension is added to the representation of a segment: <code>$([T{start} T{end}]$</code>, <code>[T{create}, T{drop}])$</code> where <code>$T{create}$</code> is the creation time of the segment and <code>$T{drop}$</code> is the deletion time of the segment. When <code>$T{drop} = 0$</code>, it indicates that the segment has not been dropped. The representation of blocks is the same as that of segments: <code>$([T{start}, T{end}]$</code>, <code>[T{create}, T{drop}])$</code>. When a transaction is committed, its read view is determined by the commit time: <code>$(Txn{commit} \\geqslant T{create}) \\bigcap ((T{drop} = 0) \\bigcup (T{drop} &gt; Txn{commit}))$</code>.</p> <p>Background asynchronous tasks handle the generation and transformation of segments. To ensure data consistency during data reading, TAE incorporates these asynchronous tasks into the transaction processing framework, as shown in the example below:</p> <p></p> <p>Block <code>$Block1 {L0}$</code> in layer L0 is created at time <code>$t1$</code> and contains data from <code>$Txn1$</code>, <code>$Txn2$</code>, <code>$Txn3$</code>, and <code>$Txn4$</code>. Block <code>$Block1 {L0}$</code> starts sorting at <code>$t11$</code>; its read view is the baseline plus one uncommitted update node. Sorting and persisting blocks may take a long time. Before the committed sorted block <code>$Block2 {L1}$</code> is flushed, there are two committed transactions <code>$Txn5$</code>, <code>$Txn6$</code>, and one uncommitted transaction <code>$Txn7$</code>. When <code>$Txn7$</code> is committed at <code>$t16$</code>, it fails because <code>$Block1 {L0}$</code> has already been terminated. The update nodes <code>$Txn5$</code> and <code>$Txn6$</code> committed during the period <code>$(t11, t16)$</code> will be merged into a new update node, which will be committed together with <code>$Block2 {L1}$</code> at `$t16</p> <p>$`.</p> <p></p> <p>The compaction process terminates a series of blocks or segments and atomically creates a new block or segment (or builds an index). Unlike regular transactions, this process often takes longer, and we do not want to block, update, or delete transactions involving the blocks or segments in question. Therefore, we extend the read view to include the metadata of blocks and segments. During the execution of a transaction, each write operation checks for write-write conflicts. If a conflict occurs, the transaction is terminated prematurely.</p>"},{"location":"MatrixOne/Overview/architecture/architecture-tae/#mvcc-multi-version-concurrency-control","title":"MVCC (Multi-Version Concurrency Control)","text":"<p>The version storage mechanism of a database determines how the system stores different versions of tuples and the information contained in each version. TAE creates a lock-free linked list called the version chain based on the pointer fields of data tuples. The version chain allows the database to locate the desired version of a tuple accurately. Therefore, the storage mechanism for version data is an essential consideration in the design of a database storage engine.</p> <p>One solution is to use an append-only mechanism to store all tuple versions of a table in the same storage space. Due to the inability to maintain a lock-free bidirectional linked list, the version chain can only point in one direction: from old to new (O2N) or from new to old (N2O).</p> <p>Another similar solution is time travel, which keeps the information of the version chain separate while maintaining the primary version of tuples in the main table.</p> <p>The third solution is to maintain the primary version of tuples in the main table and a series of incremental versions in separate storage. When updating existing tuples, the database acquires a continuous space from the incremental storage to create a new incremental version that only contains the original values of the modified attributes rather than the entire tuple. The database then directly updates the primary version in the main table.</p> <p>Each of the above solutions has characteristics that impact its performance in OLTP workloads. For LSM trees, due to their inherent append-only structure, they are closer to the first solution. However, the linked list of the version chain may need to be made apparent.</p> <p>TAE currently chooses a variant of the third solution:</p> <p></p> <p>In heavy updates, the old version data of LSM tree structures can lead to significant read amplification. The cache manager maintains the version chain in TAE, and when it needs to be replaced, it is merged with the primary table data to generate new blocks. Thus, it is semantically in-place updates but implemented as copy-on-write, which is necessary for cloud storage. The newly generated blocks have less read amplification, which is advantageous for frequent AP queries after updates.</p>"},{"location":"MatrixOne/Overview/architecture/architecture-transaction-lock/","title":"Transaction and Lock Mechanisms Architecture","text":"<p>This article provides an in-depth look into the implementation details of the transaction and lock mechanisms in MatrixOne.</p>"},{"location":"MatrixOne/Overview/architecture/architecture-transaction-lock/#transaction-features-in-matrixone","title":"Transaction Features in MatrixOne","text":"<p>MatrixOne supports default pessimistic transactions and Read Committed isolation level. It also supports optimistic transactions based on Snapshot Isolation. However, optimistic and pessimistic transactions cannot run simultaneously in a cluster. In a cluster, you either use the pessimistic or optimistic transaction models.</p>"},{"location":"MatrixOne/Overview/architecture/architecture-transaction-lock/#transaction-architecture-in-matrixone","title":"Transaction Architecture in MatrixOne","text":"<p>MatrixOne's cluster comprises three built-in services: CN (Compute Node), TN (Transaction Node), LogService, and an external object storage service.</p>"},{"location":"MatrixOne/Overview/architecture/architecture-transaction-lock/#cn-compute-node","title":"CN (Compute Node)","text":"<p>CN is the compute node responsible for executing most computational tasks. Each transaction client, such as JDBC or MySQL clients, establishes a connection with a CN, and transactions initiated are created on the corresponding CN. Each transaction is allocated a workspace on the CN to store temporary data. When a transaction is committed, the data in the workspace is sent to the TN node for processing.</p>"},{"location":"MatrixOne/Overview/architecture/architecture-transaction-lock/#tn-transaction-node","title":"TN (Transaction Node)","text":"<p>TN is the transaction node responsible for handling transaction commits from all CN nodes. TN's responsibilities include writing the transaction's commit log to the LogService and writing the committed data to memory. When the memory data reaches certain conditions, TN writes the committed data to external object storage and cleans up related logs.</p>"},{"location":"MatrixOne/Overview/architecture/architecture-transaction-lock/#logservice","title":"LogService","text":"<p>LogService is a logging node similar to the TN node's Write-Ahead Logging (WAL) system. It uses the Raft protocol to store logs as multiple replicas, ensuring high availability and consistency. LogService can be used to recover TN nodes at any time.</p> <p>It's important to note that logs stored in LogService do not grow indefinitely. When the log size reaches a certain threshold, TN writes the data corresponding to the logs in LogService to external object storage and truncates the logs. This truncated log data is called \"LogTail,\" and together with the data stored in external object storage, constitutes the complete data of the MatrixOne database.</p>"},{"location":"MatrixOne/Overview/architecture/architecture-transaction-lock/#clock-scheme","title":"Clock Scheme","text":"<p>MatrixOne employs the Hybrid Logical Clocks (HLC) clock scheme and integrates it with the built-in MatrixOne Remote Procedure Call (MORPC) for clock synchronization between CN and TN nodes.</p>"},{"location":"MatrixOne/Overview/architecture/architecture-transaction-lock/#read-operations-in-transactions","title":"Read Operations in Transactions","text":"<p>Transaction operations occur on CN nodes, where they can view data versions using Multi-Version Concurrency Control (MVCC) depending on the transaction's snapshot timestamp (SnapshotTS).</p> <p>Once a transaction determines its SnapshotTS, it must access two datasets: one stored in object storage and the other in LogTail. CN can directly access data stored in object storage and provides caching for improved data read performance. Data in LogTail is distributed in the memory of TN nodes.</p> <p>In previous versions, CN nodes used a \"Pull Mode,\" which means they only actively synchronized LogTail data with TN after a transaction began. This led to performance issues, high latency, and reduced throughput. However, starting from version 0.8, MatrixOne introduced a \"Push Mode.\" In this mode, LogTail synchronization is no longer initiated at the beginning of a transaction but is based on CN-level subscriptions. TN nodes push incremental LogTail to subscribed CN nodes whenever there are changes.</p> <p>In Push Mode, each CN node continuously receives LogTail updates from TN nodes and maintains the same memory data structures as TN nodes, along with the timestamp of the last consumed LogTail. Once a transaction's SnapshotTS is determined, it only needs to wait for the timestamp of the previously consumed LogTail to be greater than or equal to SnapshotTS, indicating that the CN has the complete SnapshotTS dataset.</p>"},{"location":"MatrixOne/Overview/architecture/architecture-transaction-lock/#data-visibility","title":"Data Visibility","text":"<p>The data a transaction can read depends on its SnapshotTS.</p> <p>If every transaction uses the latest timestamp as SnapshotTS, it can read any data committed before it. This ensures that the data read is always the most recent but comes with a performance cost.</p> <p>In Pull Mode, transactions must wait until all transactions that occurred before the SnapshotTS are committed. The newer the SnapshotTS, the more transactions it needs to wait for, resulting in higher latency.</p> <p>In Push Mode, CN nodes must wait until all transactions before the SnapshotTS have consumed their Commit LogTail. Like in Pull Mode, the newer the SnapshotTS, the more transactions must be delayed, leading to higher latency.</p> <p>However, it's not always necessary to read the latest data. MatrixOne provides two data freshness levels:</p> <ol> <li> <p>Using the current timestamp as SnapshotTS always to view the latest data.</p> </li> <li> <p>Using the maximum LogTail timestamp, the CN node has consumed as SnapshotTS.</p> </li> </ol> <p>For the second approach, it has the advantage of minimal transaction latency, allowing immediate read and write operations. However, it introduces a problem: if multiple transactions are on the same database connection, the subsequent transaction may not see the writes of the previous transaction. This happens because when the subsequent transaction starts, the TN node hasn't yet pushed the Commit LogTail of the last transaction to the current CN node, causing the subsequent transaction to use an older SnapshotTS and not see the writes of the previous transaction.</p> <p>To address this issue, MatrixOne maintains two timestamps: the CommitTS of the last transaction on the current CN node (CNCommitTS) and the CommitTS of the previous transaction in the session (database connection) (SessionCommitTS). Additionally, two data visibility levels are provided: session-level data visibility, which uses Max(SessionCommitTS, LastLogTailTS) as the transaction's SnapshotTS to ensure visibility of data within the same session, and CN-level data visibility, which uses Max(CNCommitTS, LastLogTailTS) as the transaction's SnapshotTS to ensure visibility of data within the same CN node.</p>"},{"location":"MatrixOne/Overview/architecture/architecture-transaction-lock/#read-committed-rc","title":"Read Committed (RC)","text":"<p>The previous sections primarily introduced how transactions are processed in MatrixOne. MatrixOne previously only supported SI isolation level, implemented on top of MVCC with multiple data versions. However, MatrixOne now supports the Read Committed (RC) isolation level.</p> <p>To implement the RC isolation level on top of multiple versions, SI transactions need to maintain consistent snapshots. In RC, one consistent snapshot is no longer for the entire transaction lifecycle but for each query. Each query starts with the current timestamp as the transaction's SnapshotTS to ensure it can see previously committed data.</p> <p>In RC mode, for statements with updates (UPDATE, DELETE, SELECT FOR UPDATE), once a write-write conflict occurs, indicating that other concurrent transactions have modified the data involved in the query, RC must see the latest committed data. If the conflicting transaction has already been committed, RC needs to update the transaction's SnapshotTS and retry the query.</p>"},{"location":"MatrixOne/Overview/architecture/architecture-transaction-lock/#pessimistic-transactions","title":"Pessimistic Transactions","text":"<p>This chapter explains how MatrixOne implements pessimistic transactions and related design considerations.</p>"},{"location":"MatrixOne/Overview/architecture/architecture-transaction-lock/#core-issues-to-address","title":"Core Issues to Address","text":"<p>Implementing pessimistic transactions in MatrixOne requires addressing several key issues:</p>"},{"location":"MatrixOne/Overview/architecture/architecture-transaction-lock/#providing-lock-services","title":"Providing Lock Services","text":"<p>Lock services are used to lock individual records, ranges, or even entire tables. When a transaction needs to lock resources in read/write operations, it should implement lock waiting if lock conflicts are detected. In a deadlock cycle, a deadlock detection mechanism should be in place to resolve deadlocks.</p>"},{"location":"MatrixOne/Overview/architecture/architecture-transaction-lock/#scalable-lock-service-performance","title":"Scalable Lock Service Performance","text":"<p>MatrixOne's transactions can occur on any CN node. When multiple nodes access the lock service simultaneously, the lock service must be scalable.</p>"},{"location":"MatrixOne/Overview/architecture/architecture-transaction-lock/#removing-conflict-detection-in-tn-nodes-commit-phase","title":"Removing Conflict Detection in TN Node's Commit Phase","text":"<p>In a pessimistic mode, multiple TN nodes exist in the MatrixOne cluster. Thus, it is necessary to remove conflict detection safely.</p> <p>The Commit phase of TN nodes.</p>"},{"location":"MatrixOne/Overview/architecture/architecture-transaction-lock/#lock-service","title":"Lock Service","text":"<p>MatrixOne has implemented LockService to provide lock services, including locking, unlocking, lock conflict detection, lock waiting, and deadlock detection.</p> <p>LockService is not a separately deployed component but a part of CN. In a MatrixOne cluster, each CN's LockService instance is aware of other LockService instances, coordinating the work of LockService across the entire cluster. Each CN only accesses its local LockService instance and is unaware of other LockService instances. From the perspective of a CN, the current node's LockService behaves like a local component.</p>"},{"location":"MatrixOne/Overview/architecture/architecture-transaction-lock/#locktable","title":"LockTable","text":"<p>Lock information is stored in a LockTable component, and one LockService can contain multiple LockTables.</p> <p>In the MatrixOne cluster, when a lock service for a table is accessed for the first time, the LockService creates a LockTable instance, which is then attached to the current CN's LockService instance. Across the entire cluster, a LockTable will have one local LockTable and multiple remote LockTable instances. Only the local LockTable genuinely holds lock information, while the remote LockTable is a proxy for accessing the local LockTable.</p>"},{"location":"MatrixOne/Overview/architecture/architecture-transaction-lock/#locktableallocator","title":"LockTableAllocator","text":"<p>LockTableAllocator is a component used to allocate LockTables, and it maintains the distribution of all LockTables in memory within the MatrixOne cluster.</p> <p>LockTableAllocator is not a separately deployed component but is part of TN. Because the binding between LockTable and LockService is mutable (e.g., if LockTableAllocator detects a CN going offline, the binding relationship changes), each change in critical results in an increase in the compulsory version number.</p> <p>Within the time window of transaction initiation and transaction submission, the binding relationship between LockTable and LockService may change. Such inconsistency might lead to data conflicts and invalidate the pessimistic transaction model. Therefore, LockTableAllocator is a component of TN and checks whether the binding relationship has changed before processing the transaction's submission. If an outdated binding relationship is detected for a transaction's access to LockTable, the transaction is aborted to ensure correctness.</p>"},{"location":"MatrixOne/Overview/architecture/architecture-transaction-lock/#distributed-deadlock-detection","title":"Distributed Deadlock Detection","text":"<p>Locks held by all active transactions are distributed across the local LockTables of multiple LockServices, requiring a distributed deadlock detection mechanism.</p> <p>Each LockService has a deadlock detection module with a detection mechanism as follows:</p> <ul> <li>Maintain a waiting queue in memory for each lock.</li> <li>When a new conflict occurs, add the transaction to the waiting queue of the lock holder.</li> <li>Start an asynchronous task to check for waiting cycles among all transactions holding locks recursively. If remote transactions' locks are encountered, fetch all lock information held by remote transactions using RPC.</li> </ul>"},{"location":"MatrixOne/Overview/architecture/architecture-transaction-lock/#reliability","title":"Reliability","text":"<p>Critical data of the entire lock service is stored in memory, including lock information, LockTable, and the binding relationship of LockTable and LockService. For lock information recorded internally in the local LockTable, if a CN node crashes, transactions connected to that CN fail as database connections are disconnected. Then, the LockTableAllocator reallocates LockTable and LockService binding relationships to ensure the entire lock service continues to provide service.</p> <p>LockTableAllocator runs in TN, and if TN crashes, HAKeeper will repair a new TN, causing all binding relationships to become invalid. This means that mismatched critical relationships will fail all currently active transactions.</p>"},{"location":"MatrixOne/Overview/architecture/architecture-transaction-lock/#how-to-use-lock-service","title":"How to Use Lock Service","text":"<p>MatrixOne has implemented a Lock operator responsible for invoking and handling the lock service to utilize the lock service effectively.</p> <p>In the SQL planning phase, relevant conditions are handled if it is a pessimistic transaction. During the execution phase, the Lock operator is inserted at the appropriate location.</p> <ul> <li> <p>For <code>INSERT</code> operations, in the planning phase, the Lock operator is inserted before any other Insert operators, and during execution, subsequent operators are executed only after successfully acquiring the lock.</p> </li> <li> <p>For <code>DELETE</code> operations, similar to inserts, the planning phase inserts the Lock operator before other Delete operators, and execution proceeds only after acquiring the lock.</p> </li> <li> <p>The planning phase is split into Delete+Insert for' UPDATE' operations. Thus, there are two lock stages (unless the primary key is unaltered, in which case optimization avoids one of the lock stages).</p> </li> </ul>"},{"location":"MatrixOne/Overview/architecture/architecture-wal/","title":"WAL Technical Details","text":"<p>WAL (Write Ahead Log) is a technology related to database atomicity and persistence that converts random writes into sequential reads and writes when a transaction is committed. Transactional changes occur randomly on pages that are scattered, and the overhead of random writes is greater than sequential writes, which degrades commit performance. WAL only records changes to a transaction, such as adding a line to a block. The new WAL entry is written sequentially at the end of the WAL file when the transaction is committed, and then asynchronously updates those dirty pages after the commit, destroying the corresponding WAL entry and freeing up space.</p> <p>MatrixOne's WAL is a physical log that records where each row of updates occurs, and each time it is played back, the data is not only logically the same, but also the same organization at the bottom.</p>"},{"location":"MatrixOne/Overview/architecture/architecture-wal/#commit-pipeline","title":"Commit Pipeline","text":"<p>Commit Pipeline is a component that handles transaction commits. The memtable is updated before committing, persisting WAL entries, and the time taken to perform these tasks determines the performance of the commit. Persistent WAL entry involves IO and is time consuming. The commit pipeline is used in MatrixOne to asynchronously persist WAL entries without blocking updates in memory.</p> <p></p> <p>The transaction commit process is:</p> <ul> <li> <p>Update the changes to the memtable and update the memtable concurrently before the transaction enters the commit pipeline without blocking each other. The status of these changes is then uncommitted and invisible to any transaction;</p> </li> <li> <p>Enter the commit pipeline to check for conflicts;</p> </li> <li> <p>Persistent WAL entry, collecting WAL entry writes from memory to the backend. Persistent WAL entries are asynchronous, and queues that simply pass the WAL entry to the backend immediately return without waiting for the write to succeed, so that other subsequent transactions are not blocked. The backend handles a batch of entries simultaneously, further accelerating persistence through Group Commit.</p> </li> <li> <p>Updating the state in the memtable makes the transaction visible, and the transaction updates the state in the order in which it was queued, so that the order in which the transaction is visible matches the order in which WAL entries were written in the queue.</p> </li> </ul>"},{"location":"MatrixOne/Overview/architecture/architecture-wal/#checkpoint","title":"Checkpoint","text":"<p>Checkpoint writes dirty data to Storage, destroys old log entries, and frees up space. In MatrixOne, checkpoint is a background-initiated task that flows:</p> <ul> <li> <p>Select an appropriate timestamp as checkpoint and scan for changes before the timestamp. t0 on the diagram is the last checkpoint and t1 is the currently selected checkpoint. Changes that occur between [t0,t1] require staging.</p> </li> <li> <p>Dump DML modifications. DML changes are stored in various blocks in the memtable. Logtail Mgr is a memory module that records which blocks are changed for each transaction. Scan transactions between [t0,t1] on Logtail Mgr, initiate background transactions to dump these blocks onto Storage, and record addresses in metadata. This way, all DML changes committed before t1 can be traced to addresses in the metadata. In order to do checkpoints in time to keep the WAL from growing infinitely, even if the block in the interval changes only one line, it needs to be dumped.</p> </li> </ul> <ul> <li>Scans for Catalog dump DDL and metadata changes. The Catalog is a tree that records all DDL and metadata information, and each node on the tree records the timestamp at which the change occurred. Collect all changes that fall between [t0,t1] when scanning.</li> </ul> <ul> <li>Destroy the old WAL entry. The LSN corresponding to each transaction is stored in Logtail Mgr. Based on the timestamp, find the last transaction before t1 and tell Log Backend to clean up all logs before the LSN of this transaction.</li> </ul>"},{"location":"MatrixOne/Overview/architecture/architecture-wal/#log-backend","title":"Log Backend","text":"<p>MatrixOne's WAL can be written in various Log Backends. The original Log Backend was based on the local file system. For distributed features, we developed our own highly reliable low latency Log Service as the new Log Backend. We abstract a virtual backend to accommodate different log backends, developed by some very lightweight drivers, docking different backends.</p> <p>Driver needs to adapt these interfaces:</p> <ul> <li>Append, write log entry asynchronously when committing a transaction:</li> </ul> <pre><code>Append(entry) (Lsn, error) \n</code></pre> <ul> <li>Read, batch read log entry on reboot:</li> </ul> <pre><code>Read(Lsn, maxSize) (entry, Lsn, error) \n</code></pre> <ul> <li>The Truncate interface destroys all log entries before the LSN, freeing up space:</li> </ul> <pre><code>Truncate(lsn Lsn) error \n</code></pre>"},{"location":"MatrixOne/Overview/architecture/architecture-wal/#group-commit","title":"Group Commit","text":"<p>Group Commit accelerates persistent log entries. Persistent log entry involves IO, is time consuming, and is often a bottleneck for commits. To reduce latency, bulk write log entries to Log Backend. For example, fsync takes a long time in a file system. If each entry is fsynced, it takes a lot of time. In file system-based Log Backend, where multiple entries are written and fsynced only once, the sum of the time costs of these entry swipes approximates the time of one entry swipe.</p> <p></p> <p>Concurrent writes are supported in the Log Service, and the time of each entry swipe can overlap, which also reduces the total time to write an entry and improves the concurrency of commits.</p>"},{"location":"MatrixOne/Overview/architecture/architecture-wal/#handle-out-of-order-lsns-for-log-backend","title":"Handle out-of-order LSNs for Log Backend","text":"<p>To accelerate, concurrent entries are written to Log Backend in an inconsistent order of success and the order in which the requests are made, resulting in inconsistent LSNs generated in Log Backend and logical LSNs passed to the Driver by the upper layers. Truncate and reboot to handle these out-of-order LSNs. In order to ensure that the LSNs in Log Backend are basically ordered and the out-of-order span is not too large, a window of logical LSNs is maintained that stops writing new entries to Log Backend if there are very early log entries that are not being written successfully. For example, if the window is 7 in length and an entry with an LSN of 13 in the figure has not been returned, it blocks an entry with an LSN greater than or equal to 20.</p> <p></p> <p>Destroy the log in Log Backend with the truncate operation, destroying all entries before the specified LSN. entry before this LSN corresponds to a logical LSN that is smaller than the logical truncate point. For example, the logic truncates through 7 in the figure. This entry corresponds to 11 in Log Backend, but the logical LSNs for 5, 6, 7, and 10 in Log Backend are all greater than 7 and cannot be truncate. Log Backend can only truncate 4.</p> <p>On restart, those discontinuous entries at the beginning and end are skipped. For example, when Log Backend on the diagram writes to 14, the entire machine loses power, and the first 8,9,11 are filtered out on reboot based on the last truncate information. When all entries are read and the logical LSNs of 6,14 and the other entries are not continuous, the last 6 and 14 are discarded.</p>"},{"location":"MatrixOne/Overview/architecture/architecture-wal/#specific-format-for-wal-in-matrixone","title":"Specific format for WAL in MatrixOne","text":"<p>Each write transaction corresponds to one log entry and consists of an LSN, Transaction Context, and multiple Commands.</p> <pre><code>+---------------------------------------------------------+\n|                  Transaction Entry                      |\n+-----+---------------------+-----------+-----------+-   -+\n| LSN | Transaction Context | Command-1 | Command-2 | ... |\n+-----+---------------------+-----------+-----------+-   -+\n</code></pre> <p>LSN: Each log entry corresponds to one LSN. The LSN is incremented continuously and is used to delete entries when doing checkpoints.</p> <p>Transaction Context:Logging transaction information</p> <ul> <li>StartTS is the timestamp when the transaction started.</li> <li>CommitTS is the timestamp of the end.</li> <li>Memo records where a transaction changes data. Upon reboot, this information is restored to Logtail Mgr and used for checkpointing.</li> </ul> <pre><code>+---------------------------+\n|   Transaction Context     |\n+---------+----------+------+\n| StartTS | CommitTS | Memo |\n+---------+----------+------+\n</code></pre> <p>Transaction Commands: Each write operation in a transaction corresponds to one or more commands. log entry logs all commands in the transaction.</p> Operator Command DDL Update Catalog Insert Update Catalog Append Delete Delete Compact&amp;Merge Update Catalog <ul> <li> <p>Operators: The DN in MatrixOne is responsible for committing transactions, writing log entries into Log Backend, doing checkpoints. DN supports build library, delete library, build table, delete table, update table structure, insert, delete, while background automatically triggers sorting. The update operation is split into insert and delete.</p> <ul> <li> <p>DDL DDL includes building libraries, deleting libraries, building tables, deleting tables, and updating table structures. The DN records information about tables and libraries in the Catalog. The Catalog in memory is a tree and each node is a catalog entry. catalog entry has 4 classes, database, table, segment and block, where segment and block are metadata that changes when data is inserted and sorted in the background. Each database entry corresponds to one library and each table entry corresponds to one table. Each DDL operation corresponds to a database/table entry, which is logged in entry as Update Catalog Command.</p> </li> <li> <p>Insert The newly inserted data is recorded in the Append Command. The data in the DN is recorded in blocks, which form a segment. If there are not enough blocks or segments in the DN to record the newly inserted data, a new one is created. These changes are documented in the Update Catalog Command. In large transactions, the CN writes the data directly to S3 and the DN commits only the metadata. This way, the data in the Append Command will not be large.</p> </li> <li> <p>Delete The line number where the DN record Delete occurred. When reading, read all the inserted data before subtracting the rows. In a transaction, all deletions on the same block are merged to correspond to a Delete Command.</p> </li> <li> <p>Compact &amp; Merge The DN background initiates a transaction to dump the data in memory onto s3. Sort the data on S3 by primary key for easy filtering when reading. compact occurs on a block and the data within the block is ordered after compact. merge occurs within a segment and involves multiple blocks, after merge the entire segment is ordered. The data before and after compact/merge remains the same, changing only the metadata, deleting the old block/segment, and creating a new block/segment. Each delete/create corresponds to one Update Catalog Command.</p> </li> </ul> </li> <li> <p>Commands</p> </li> </ul> &amp;nbsp&amp;nbsp&amp;nbsp1. &amp;nbspUpdate Catalog <p>The Catalog is database, table, segment, and block from top to bottom. An Updata Catalog Command corresponds to a Catalog Entry. One Update Catalog Command per ddl or with the new metadata. The Update Catalog Command contains Dest and EntryNode.</p> <pre><code>+-------------------+\n|   Update Catalog  |\n+-------+-----------+\n| Dest  | EntryNode |\n+-------+-----------+\n</code></pre> <p>Dest is where this command works, recording the id of the corresponding node and his ancestor node. Upon reboot, via Dest, locate the location of the action on the Catalog.</p> Type Dest Update Database database id Update Table database id,table id Update Segment database id,table id,segment id Update Block atabase id,table id,segment id,block id <p>EntryNode records when an entry was created and deleted. If entry is not deleted, the deletion time is 0. If the current transaction is being created or deleted, the corresponding time is UncommitTS.</p> <pre><code>+-------------------+\n|    Entry Node     |\n+---------+---------+\n| Create@ | Delete@ |\n+---------+---------+\n</code></pre> <p>For segment and block, Entry Node also records metaLoc, deltaLoc, which are the addresses recorded on S3 for data and deletion, respectively.</p> <pre><code> +----------------------------------------+\n |               Entry Node               |\n +---------+---------+---------+----------+\n | Create@ | Delete@ | metaLoc | deltaLoc |\n +---------+---------+---------+----------+\n</code></pre> <p>For tables, Entry Node also documents the table structure schema.</p> <pre><code> +----------------------------+\n |         Entry Node         |\n +---------+---------+--------+\n | Create@ | Delete@ | schema |\n +---------+---------+--------+\n</code></pre> &amp;nbsp&amp;nbsp&amp;nbsp2. &amp;nbspAppend <p>The inserted data and the location of that data are documented in the Append Command.</p> <pre><code>+-------------------------------------------+\n|             Append Command                |\n+--------------+--------------+-   -+-------+\n| AppendInfo-1 | AppendInfo-2 | ... | Batch |\n+--------------+--------------+-   -+-------+\n</code></pre> <ul> <li> <p>Batch is the inserted data.</p> </li> <li> <p>AppendInfo  Data in one Append Data Command may span multiple blocks. Each block corresponds to an Append Info that records the location of the data in Command's Batch pointer to data, and the location destination of the data in the block.</p> </li> </ul> <pre><code>+------------------------------------------------------------------------------+\n|                              AppendInfo                                      |\n+-----------------+------------------------------------------------------------+\n| pointer to data |                     destination                            |\n+--------+--------+-------+----------+------------+----------+--------+--------+\n| offset | length | db id | table id | segment id | block id | offset | length |\n+--------+--------+-------+----------+------------+----------+--------+--------+\n</code></pre> &amp;nbsp&amp;nbsp&amp;nbsp3. &amp;nbspDelete Command <p>Each Delete Command contains only one delete from a block.</p> <pre><code>+---------------------------+\n|      Delete Command       |\n+-------------+-------------+\n| Destination | Delete Mask |\n+-------------+-------------+\n</code></pre> <ul> <li>Destination record on which Block Delete occurred.</li> <li>Delete Mask records the deleted line number.</li> </ul>"},{"location":"MatrixOne/Overview/architecture/matrixone-architecture-design/","title":"MatrixOne Architecture Design","text":""},{"location":"MatrixOne/Overview/architecture/matrixone-architecture-design/#matrixone-overview","title":"MatrixOne Overview","text":"<p>MatrixOne is a future-oriented hyperconverged cloud &amp; edge native DBMS that supports transactional, analytical, and streaming workload with a simplified and distributed database engine working across multiple datacenters, clouds, edges, and other heterogenous infrastructures. This combination of engines is called HSTAP.</p> <p>As a redefinition of the HTAP database, HSTAP aims to meet all the needs of Transactional Processing (TP) and Analytical Processing (AP) within a single database. Compared with the traditional HTAP, HSTAP emphasizes its built-in streaming capability used for connecting TP and AP tables. This provides users with an experience that a database can be used just like a Big Data platform, with which many users are already familiar thanks to the Big Data boom. With minimal integration efforts, MatrixOne frees users from the limitations of Big Data and provides one-stop coverage for all TP and AP scenarios for enterprises.</p>"},{"location":"MatrixOne/Overview/architecture/matrixone-architecture-design/#matrixone-architecture-layers","title":"MatrixOne Architecture Layers","text":"<p>MatrixOne implements three independent layers, each with its object units and responsibilities. Different nodes can freely scale, no longer constrained by other layers. These three layers are:</p> <p></p> <ul> <li>Compute Layer: Based on Compute Nodes (CNs), MatrixOne enables serverless computing and transaction processing with its cache, which is capable of random restarts and scaling.</li> <li>Transaction Layer: Based on Transaction Nodes and Log Services, MatrixOne provides complete logging services and metadata information, with built-in Logtail for recent data storage.</li> <li>Storage Layer: Full data is stored in object storage, represented by S3, implementing a low-cost, infinitely scalable storage method. A unified File Service enables seamless operations on underlying storage by different nodes.</li> </ul> <p></p> <p>After deciding on TAE as the sole storage engine, multiple design adjustments were made to the fused TAE engine, resulting in the TAE storage engine. This engine has the following advantages:</p> <ul> <li>Columnar Storage Management: Uniform columnar storage and compression methods provide inherent performance advantages for OLAP businesses.</li> <li>Transaction Processing: Shared logs and TN nodes jointly support transaction processing for compute nodes.</li> <li>Hot and Cold Separation: Using S3 object storage as the target for File Service, each compute node has its cache.</li> </ul> <p></p> <p>The compute engine is based on the fundamental goal of being compatible with MySQL, with higher requirements for node scheduling, execution plans, and SQL capabilities. The high-performance compute engine has both MPP (massively parallel processing) and experimental architecture:</p> <ul> <li>MySQL Compatible: Supports MySQL protocol and syntax. Fused Engine: Rebuilds execution plans based on DAG, capable of executing both TP and AP.</li> <li>Node Scheduling: Future support for adaptive intra-node and inter-node scheduling, meeting both concurrency and parallelism requirements.</li> <li>Comprehensive SQL Capability: Supports subqueries, window functions, CTE, and spill memory overflow processing.</li> </ul>"},{"location":"MatrixOne/Overview/architecture/matrixone-architecture-design/#matrixone-architecture-design_1","title":"MatrixOne Architecture Design","text":"<p>The MatrixOne architecture is as follows:</p> <p></p> <p>The architecture of MatrixOne is divided into several layers:</p>"},{"location":"MatrixOne/Overview/architecture/matrixone-architecture-design/#cluster-management-layer","title":"Cluster Management Layer","text":"<p>Being responsible for cluster management, it interacts with Kubernetes to obtain resources dynamically when in the cloud-native environment, while in the on-premises deployment, it gets hold of resources based on the configuration. Cluster status is continuously monitored with the role of each node allocated based on resource information. Maintenance works are carried out to ensure that all system components are up and running despite occasional node and network failures. It rebalances the loads on nodes when necessary as well. Major components in this layer are:</p> <ul> <li>Prophet Scheduler: take charge of load balancing and node keep-alive.</li> <li>Resource Manager: being responsible for physical resources provision.</li> </ul>"},{"location":"MatrixOne/Overview/architecture/matrixone-architecture-design/#serverless-layer","title":"Serverless Layer","text":"<p>Serverless Layer is a general term for a series of stateless nodes, which, as a whole, contains three categories:</p> <ul> <li>Background tasks: the most important one is called Offload Worker, which is responsible for offloading expensive compaction tasks and flushing data to S3 storage.</li> <li>SQL compute nodes: responsible for executing SQL requests, here divided into write nodes and read nodes. The former also provides the ability to read the freshest data.</li> <li>Stream task processing node: responsible for executing stream processing requests.</li> </ul>"},{"location":"MatrixOne/Overview/architecture/matrixone-architecture-design/#logreliability-layer","title":"Log(Reliability) Layer","text":"<p>As MatrixOne's Single Source of Truth, data is considered as persistently stored in MatrixOne once it is written into the Log Layer. It is built upon our world-class expertise in the Replicated State Machine model to guarantee state-of-the-art high throughput, high availability, and strong consistency for our data. Following a fully modular and disaggregated design by itself, it is also the central component that helps to decouple the storage and compute layers. This in turn earns our architecture much higher elasticity when compared with traditional NewSQL architecture.</p>"},{"location":"MatrixOne/Overview/architecture/matrixone-architecture-design/#storage-layer","title":"Storage Layer","text":"<p>The storage layer transforms the incoming data from the Log Layer into an efficient form for future processing and storage. This includes cache maintenance for fast accessing data that has already been written to S3.</p> <p>In MatrixOne, TAE (Transactional Analytic Engine) is the primary interface exposed by the Storage Layer, which can support both row and columnar storage together with transaction capabilities. Besides, the Storage Layer includes other internally used storage capabilities as well, e.g. the intermediate storage for streaming.</p>"},{"location":"MatrixOne/Overview/architecture/matrixone-architecture-design/#storage-provision-layer","title":"Storage Provision Layer","text":"<p>As an infrastructure agnostic DBMS, MatrixOne stores data in shared storage of S3 / HDFS, or local disks, on-premise servers, hybrid, and any cloud, or even smart devices. The Storage Provision Layer hides such complexity from upper layers by just presenting them with a unified interface for accessing such diversified storage resources.</p>"},{"location":"MatrixOne/Overview/architecture/matrixone-architecture-design/#matrixone-system-components","title":"MatrixOne System Components","text":"<p>In MatrixOne, to achieve the integration of distributed and multi-engine, a variety of different system components are built to complete the functions of the architecture-related layers:</p>"},{"location":"MatrixOne/Overview/architecture/matrixone-architecture-design/#file-service","title":"File Service","text":"<p>File Service is the component of MatrixOne responsible for reading and writing all storage media. Storage media include memory, disk, object storage, and so on., which provide the following features:</p> <ul> <li>File Service provides a unified interface so that reading and writing of different media can use the same interface.</li> <li>The design of the interface follows the concept of immutable data. After the file is written, no further updates are allowed. The update of the data is realized by generating a new file.</li> <li>This design simplifies operations such as data caching, migration, and verification and is conducive to improving the concurrency of data operations.</li> <li>Based on a unified read-write interface, File Service provides a hierarchical cache and a flexible cache strategy to balance read-write speed and capacity.</li> </ul>"},{"location":"MatrixOne/Overview/architecture/matrixone-architecture-design/#log-service","title":"Log Service","text":"<p>Log Service is a component specially used to process transaction logs in MatrixOne, and it has the following features:</p> <ul> <li>The Raft protocol ensures consistency, and multiple copies are used to ensure availability.</li> <li>Save and process all transaction logs in MatrixOne, ensure that Log Service logs are read and written typically before the transaction is committed, and check and replay the log content when the instance is restarted.</li> <li>After the transaction is submitted and placed, truncate the content of the Log Service to control the size of the Log Service. The content that remains in the Log Service after truncation is called Logtail.</li> <li>If multiple Log Service copies are down at the same time, the entire MatrixOne will be down.</li> </ul>"},{"location":"MatrixOne/Overview/architecture/matrixone-architecture-design/#transaction-node","title":"Transaction Node","text":"<p>The Transaction Node (TN) is the carrier used to run MatrixOne's distributed storage engine TAE, which provides the following features:</p> <ul> <li>Manage metadata information in MatrixOne and transaction log content saved in Log Service.</li> <li>Receive distributed transaction requests sent by Computing Node (CN), adjudicate the read and write requests of distributed transactions, push transaction adjudication results to CN, and push transaction content to Log Service to ensure the ACID characteristics of transactions.</li> <li>Generate a snapshot according to the checkpoint in the transaction to ensure the snapshot isolation of the transaction, and release the snapshot information after the transaction ends.</li> </ul>"},{"location":"MatrixOne/Overview/architecture/matrixone-architecture-design/#computing-node","title":"Computing Node","text":"<p>The computing node (CN) is a component of Matrixone that accesses user requests and processes SQL. The toolkit includes the following modules:</p> <ul> <li>Frontend, it handles the client SQL protocol, accepts the client's message, parses it to get the executable SQL of MatrixOne, calls other modules to execute the SQL, organizes the query results into a message, and returns it to the client.</li> <li>Plan, parse the SQL processed by Frontend, generate a logical execution plan based on MatrixOne's calculation engine and send it to Pipeline.</li> <li>Pipeline, which parses the logical plan, converts the logical plan into an actual execution plan and then runs the execution plan through Pipeline.</li> <li>Disttae, responsible for specific read and write tasks, including synchronizing Logtail from TN and reading data from S3, and sending the written data to TN.</li> </ul>"},{"location":"MatrixOne/Overview/architecture/matrixone-architecture-design/#stream-engine","title":"Stream Engine","text":"<p>Stream Engine is a new component within MatrixOne, serving as an integrated stream engine designed for real-time querying, processing, and enriching data stored in a series of incoming data points, also known as data streams. With Stream Engine, you can employ SQL to define and create streaming processing pipelines, offering real-time data backend services. Additionally, you can utilize SQL to query data within streams and establish connections with non-streaming datasets, thereby further streamlining the data stack.</p>"},{"location":"MatrixOne/Overview/architecture/matrixone-architecture-design/#proxy","title":"Proxy","text":"<p>The Proxy component is a powerful tool mainly used for load balancing and SQL routing. It has the following functions:</p> <ul> <li>Through SQL routing, resource isolation between different accounts is realized, ensuring that the CNs of different accounts will not affect each other.</li> <li>Through SQL routing, users can do a second split in the resource group of the same account, improving resource utilization.</li> <li>The load balancing between different CNs is realized in the second split resource group, making the system more stable and efficient.</li> </ul>"},{"location":"MatrixOne/Overview/architecture/matrixone-architecture-design/#learn-more","title":"Learn More","text":"<p>This page outlines the overall architecture design of MatrixOne. For information on other options that are available when trying out MatrixOne, see the following:</p> <ul> <li>Install MatrixOne</li> <li>MySQL Compatibility</li> <li>What's New</li> </ul>"},{"location":"MatrixOne/Overview/architecture/streaming/","title":"Detailed Stream Engine Architecture","text":"<p>MatrixOne incorporates a built-in stream engine designed for real-time querying, processing, and enriching data stored in a series of incoming data points, known as data streams. Developers can now use SQL to define and create stream processing pipelines as a real-time data backend service. Furthermore, developers can utilize SQL to query data within streams and establish connections with non-streaming datasets, thereby further simplifying the data stack.</p>"},{"location":"MatrixOne/Overview/architecture/streaming/#technical-architecture","title":"Technical Architecture","text":"<p>The technical architecture of the MatrixOne stream engine is illustrated as follows:</p> <p></p> <p>MatrixOne introduced the ability to create streaming tables and implemented a Kafka connector to fulfill the streaming data ingestion requirements of numerous time-series scenarios.</p>"},{"location":"MatrixOne/Overview/architecture/streaming/#connectors","title":"Connectors","text":"<p>Connectors facilitate connecting with external data sources, such as the Kafka connector introduced in MatrixOne 1.0.</p> <p>MatrixOne supports the use of the following statement to establish a connection between connectors and external data sources:</p> <pre><code>CREATE SOURCE | SINK CONNECTOR [IF NOT EXISTS] connector_name CONNECTOR_TYPE WITH (property_name = expression [, ...]);\n</code></pre> <p>Here, the parameter <code>CONNECTOR_TYPE</code> is used to specify the target.</p>"},{"location":"MatrixOne/Overview/architecture/streaming/#streams","title":"Streams","text":"<p>A stream represents an append-only data flow akin to an unbounded table with infinite events. Each stream maps to an event group in the storage layer, such as Kafka topics or MatrixOne tables.</p> <ul> <li>External stream: A stream using an external storage layer via connectors.</li> <li>Internal stream: A stream that utilizes MatrixOne tables as the event storage.</li> </ul> <p>MatrixOne supports the use of the following statement to create streams:</p> <pre><code>CREATE [OR REPLACE] [EXTERNAL] STREAM [IF NOT EXISTS] stream_name\n({ column_name data_type [KEY | HEADERS | HEADER(key)] } [, ...])\nWITH (property_name = expression [, ...]);\n</code></pre> <p>For example, you can refer to the following examples:</p> <pre><code>CREATE EXTERNAL STREAM STUDENTS (ID STRING KEY, SCORE INT)\nWITH (kafka_topic = 'students_topic', value_format = 'JSON', partitions = 4);\n</code></pre> <p>Or:</p> <pre><code>CREATE STREAM STUDENTS (ID STRING KEY, SCORE INT)\n</code></pre> <p>You can also query streams and connect them with other tables and materialized views, as shown below:</p> <pre><code>SELECT * FROM STUDENTS WHERE rank &gt; 5;\n</code></pre> <p>Additionally, you can insert new events, as demonstrated below:</p> <pre><code>INSERT INTO foo (ROWTIME, KEY_COL, COL_A) VALUES (1510923225000, 'key', 'A');\n</code></pre>"},{"location":"MatrixOne/Overview/feature/cost-effective/","title":"Cost-Effective","text":"<p>MatrixOne is a newly designed database, the architectural design philosophy emphasizing high-cost performance. The high cost-performance of MatrixOne is mainly reflected in the following aspects:</p>"},{"location":"MatrixOne/Overview/feature/cost-effective/#single-cluster-supports-mixed-load-htap","title":"Single Cluster Supports Mixed Load HTAP","text":"<p>With the rapid popularization and diversified development of big data applications, traditional data processing solutions are increasingly unable to meet the demand for real-time analysis of massive data. Modern data application requirements tend to consider both high-concurrent OLTP transactional business and large-scale data OLAP analytical business simultaneously.</p> <p>MatrixOne is specifically designed to solve the problem of mixed loads. MatrixOne can support OLTP and OLAP in the same cluster, achieving Hybrid Transaction and Analytical Processing (HTAP). Users no longer need to build two separate database systems for OLTP and OLAP, a single database can support mixed loads. This avoids the cost of building and maintaining two systems and the ETL process of synchronizing data from the OLTP system to the OLAP system. Users can easily handle business and analysis in the same cluster.</p> <p></p>"},{"location":"MatrixOne/Overview/feature/cost-effective/#single-storage-engine-achieves-htap","title":"Single Storage Engine Achieves HTAP","text":"<p>In databases, achieving HTAP usually requires encapsulating an OLTP engine and an OLAP engine into a single database product. Although the conversion process between the two storage engines is hidden from the user, who only sees a unified SQL interface, the data is stored twice, once in each machine, and the cost of hardware and storage is not reduced.</p> <p>Different from the engine mentioned above encapsulation method, MatrixOne achieves HTAP using a single storage engine. As shown below, MatrixOne achieves single-engine HTAP by grouping other computing nodes (CN) and distinguishing between load-running links. When a user's application request enters the MatrixOne cluster, the Proxy module distributes OLAP-like requests to the CN group designed explicitly for OLAP. These requests usually need to read or write data on a large scale and interact directly with object storage via the CN nodes. For OLTP-like requests, such as small amounts of <code>INSERT</code>, <code>UPDATE</code>, and <code>DELETE</code>, these go through another group of CN designed explicitly for OLTP, and the TN nodes handle transaction information and write shared logs to LogService. TN also constantly compresses and merges small transactional data from LogService and writes them back to object storage.</p> <p>In summary, the data written into MatrixOne by users only exists once and is processed by a single storage engine, significantly reducing the cost of storage and computing hardware.</p> <p></p>"},{"location":"MatrixOne/Overview/feature/cost-effective/#flexible-resource-allocation-increases-utilization","title":"Flexible Resource Allocation Increases Utilization","text":"<p>The system primarily serves transactional business based on CRUD in actual data application business scenarios. However, at specific points in time, such as at night, at the end of the month, or at the end of the year, it is necessary to analyze the overall data over a period of time. At this time, if the user only has one database system, they will need to temporarily reduce the business load or conduct OLAP analytical tasks when the business load is low. However, in such cases, there are often problems like long analysis time and cannot affect the long running time of business. If users deploy a separate database system for OLAP analytical business, the actual analytical business is often difficult to maximize, leading to a specific waste of resources.</p> <p>As introduced in the previous section, MatrixOne achieves HTAP by grouping stateless computing nodes and supporting OLTP and OLAP business at the underlying layer through different links. This architecture allows MatrixOne to adjust resources flexibly.</p> <p>Allocation according to actual business needs increases machine utilization and achieves true cost-effectiveness. When CRUD-type business requirements are high, you can allocate more CN nodes to OLTP. In addition, when analytical business requirements increase, you can give more CN nodes to OLAP. These adjustments are fully dynamic and configurable.</p> <p>Take the following diagram as an example; suppose that the user needs 3 computing nodes to handle OLTP business and 3 computing nodes to handle OLAP business. And these hardware resources are fully bound, i.e., nodes serving OLTP cannot provide services for OLAP and vice versa. Moreover, users' planning for machine resources often exceeds the upper limit of actual demand. However, the time to reach the total peak demand is quite limited in real business. If you plan to use the MatrixOne cluster to support these businesses, you can adjust to 4 computing nodes; typically, 3 nodes handle OLTP business, and 1 node takes OLAP business. Then, at the end of the month or other periods when the demand for analysis is high, you can adjust to 1 computing node to handle the OLTP business and 3 computing nodes to run the OLAP business; after the peak period, you can return to the original configuration, thereby improving machine resource utilization by 40%.</p> <p></p>"},{"location":"MatrixOne/Overview/feature/cost-effective/#efficient-and-low-cost-object-storage","title":"Efficient and Low-Cost Object Storage","text":"<p>At the storage level, MatrixOne mainly uses object storage. This storage uses the principle of erasure coding and only needs a redundancy as low as 33% to ensure the high availability of data. Compared with the standard method of providing high availability through multiple copies, erasure coding has a higher space utilization rate under the same reliability.</p> <p>In the MatrixOne cluster, take the minimum configuration recommended by the official Minio for private deployment (4 nodes \u00d7 4 disks) as an example; MatrixOne can support at least 4 disks as erasure coding disks and 12 disks as data disk architecture, with redundancy of 1.33.</p> <p></p> <p>In addition, object storage also supports low-cost storage media such as HDD disks. In usage scenarios where the demand for cluster computing performance is not high, and storage is the main focus, it can further reduce the usage cost.</p>"},{"location":"MatrixOne/Overview/feature/cost-effective/#high-data-compression-ratio-brought-by-column-storage","title":"High data compression ratio brought by column storage","text":"<p>When structured data is stored, the data structure of each column is the same. In the MatrixOne storage layer, data is stored in column format. This feature gives the data better compression characteristics:</p> <ul> <li>Free compression algorithm: Each column is stored separately, and different columns can choose the most suitable compression algorithm for their data structure. These algorithms can use column data characteristics such as duplicate values, ordering, and data type-specific compression techniques to achieve better results. In contrast, the compression algorithms used by traditional row-store databases are often more general and fail to take full advantage of the characteristics of column data.</li> <li>High redundancy of intra-column data: Column storage databases store data in the same column together so that similar values \u200b\u200bwill be clustered together, resulting in higher redundancy, allowing the compression algorithm to more effectively identify and compress the same or Similar data items, thus improving the compression ratio.</li> </ul> <p>The overall data compression rate of MatrixOne can be as low as 1%. The specific compression rate is affected by many factors, such as the data structure of the actual data and the degree of data redundancy.</p> <p>MatrixOne's columnar storage method will significantly compress your actual storage space and greatly reduce your storage costs.</p>"},{"location":"MatrixOne/Overview/feature/cost-effective/#compatibility-with-mysql","title":"Compatibility with MySQL","text":"<p>MatrixOne maintains compatibility with MySQL, the most popular open-source database on the market, regarding syntax, protocol, and ecological tools. This allows users familiar with MySQL or who have used MySQL to migrate and learn at a meager cost.</p> <p>For detailed information on MatrixOne's compatibility with MySQL, please look at the MySQL Compatibility Section.</p>"},{"location":"MatrixOne/Overview/feature/feature-overview/","title":"MatrixOne Features Overview","text":""},{"location":"MatrixOne/Overview/feature/feature-overview/#features","title":"Features","text":"<p>In MatrixOne, it has the following features to make you more efficient in the process of using MatrixOne:</p>"},{"location":"MatrixOne/Overview/feature/feature-overview/#distributed-architecture","title":"Distributed Architecture","text":"<p>In MatrixOne, the distributed storage and computing separation architecture is adopted. The separation of the storage, data, and computing layers enables MatrixOne to flexibly realize node expansion when encountering system resource bottlenecks. At the same time, resources can be allocated more efficiently under the multi-node architecture, avoiding hotspots and resource requisition to a certain extent.</p>"},{"location":"MatrixOne/Overview/feature/feature-overview/#transactions-and-isolation","title":"Transactions and Isolation","text":"<p>In MatrixOne, transactions are isolated using optimistic transactions and snapshots.</p> <p>Optimistic transactions can achieve better performance in a distributed architecture with fewer conflicts. At the same time, snapshot isolation with a higher isolation level can be achieved in terms of implementation. In order to ensure the ACID four elements of the transaction, MatrixOne currently supports and only supports one snapshot isolation level. Compared with the ordinary read-committed isolation level, this is stricter, which can effectively prevent dirty reads and better adapt to distributed optimistic transactions.</p>"},{"location":"MatrixOne/Overview/feature/feature-overview/#cloud-native","title":"Cloud Native","text":"<p>MatrixOne is a cloud-native database. From the storage layer, it adapts to various storage methods such as local disks, AWS S3, and NFS and realizes non-aware management of multiple types of storage through File service. MatrixOne clusters can run stably in a variety of infrastructure environments, can adapt to private enterprise clouds, and provide services in different public cloud vendor environments.</p>"},{"location":"MatrixOne/Overview/feature/feature-overview/#load-balancing","title":"Load Balancing","text":"<p>Under the distributed database architecture, load differences inevitably exist between different nodes, which may lead to performance bottlenecks in specific business scenarios or idle computing resources. Therefore, to ensure that other nodes are kept as close as possible in resource allocation, MatrixOne implements the load-balancing function of computing resources.</p>"},{"location":"MatrixOne/Overview/feature/feature-overview/#sql-routing","title":"SQL Routing","text":"<p>SQL routing is often used in early sub-database and sub-table database scenarios. It determines which instance/library/table to send the request to according to the data distribution after receiving an SQL request.</p> <p>In MatrixOne, although the capacity of the storage engine no longer limits the size of the database, under the multi-CN architecture, there are still scenarios for load balancing between multiple CNs and resource isolation between different accounts. Therefore, in MatrixOne, SQL routing is implemented to send SQL requests to other CN nodes for execution according to predefined rules. This solves the situation that a database instance cannot load many data access requirements.</p>"},{"location":"MatrixOne/Overview/feature/feature-overview/#allowlist","title":"Allowlist","text":"<p>Allowlist is a security policy that controls access to restricted resources, systems, or networks. It is based on a core idea that only authorized and trusted entities are allowed to access, while other unauthorized access attempts are denied. These authorized entities may include specific users, IP addresses, programs, or others. The opposite of an allowlist is a blocklist, a policy that specifies a list of prohibited entities that will be prevented from accessing a restricted resource, system, or network. Under the blocklist policy, entities outside the blocklist can access.</p> <p>The allowlist has the following characteristics:</p> <ul> <li>Only users or systems on the pre-defined list are allowed to access; other users or systems not included in the allowlist are denied access.</li> <li>Using an allowlist policy can improve security but may limit access for legitimate users. Therefore, a trade-off exists between security and user convenience when implementing an allowlist policy.</li> <li>In the database system, the allowlist is mainly used to restrict user access, only allowing specific users to access the database of a particular server or network segment, thereby improving the security of the database.</li> </ul>"},{"location":"MatrixOne/Overview/feature/feature-overview/#multi-account","title":"Multi-Account","text":"<p>The multi-account mode of a single cluster can provide benefits such as resource sharing, simplified management, improved scalability, and security isolation. It is precious for scenarios needing database services for multiple accounts simultaneously.</p> <p>MatrixOne's multi-account mode can provide independent database instances for different accounts and adopts a logical isolation method to ensure the security and independence of each account's data, effectively preventing the risk of data leakage and tampering.</p>"},{"location":"MatrixOne/Overview/feature/feature-overview/#matrixone-key-performance","title":"MatrixOne Key Performance","text":""},{"location":"MatrixOne/Overview/feature/feature-overview/#efficient-storage","title":"Efficient Storage","text":"<p>MatrixOne chooses AWS S3 as an efficient storage solution, meeting the two core requirements of low cost and hot-cold data separation. Its reliable availability ensures low risk in public clouds and provides a compatible version for private deployment.</p> <ul> <li>Low cost: Reducing redundancy to achieve lower costs with acceptable performance.</li> <li>Hot-cold data separation: A necessary condition for fine-grained data management.</li> </ul>"},{"location":"MatrixOne/Overview/feature/feature-overview/#clear-transaction-division-of-labor","title":"Clear Transaction Division of Labor","text":"<ul> <li>CN is responsible for all calculations and transaction logic, while TN is responsible for storing metadata, log information, and transaction adjudication.</li> <li>The Logtail object is introduced in the logs to save associated data from recent logs. Logtail data is regularly written to S3. When CN scales out, Logtail data can be synchronized to the cache in real-time to achieve partial data sharing.</li> <li>Set a threshold for transaction size. Transactions that exceed the threshold are directly written to S3 and logs only record write records. Transactions that do not exceed the threshold are still written by TN, significantly increasing throughput.</li> </ul>"},{"location":"MatrixOne/Overview/feature/feature-overview/#htap-workload-isolation","title":"HTAP Workload Isolation","text":"<p>As an HTAP database, it achieves isolation of different types of workloads:</p> <ul> <li>Server-level isolation: When hardware resources are sufficient, each component runs on a different physical machine and accesses the same object storage.</li> <li>Container-level isolation: When hardware resources are limited, the stateless nature of all nodes is utilized, and containers are used as isolation measures for each node.</li> </ul>"},{"location":"MatrixOne/Overview/feature/feature-overview/#flexible-resource-allocation","title":"Flexible Resource Allocation","text":"<p>As an HTAP database, the ratio of different business scenarios constantly changes, and there are higher requirements for resource allocation. The resource allocation pattern under the old architecture is doomed to be unable to achieve flexible adjustment, and more refined management of each node is needed, including but not limited to the following:</p> <ul> <li>CN node division of labor: Users can divide CN for TP or AP business. When a business resource bottleneck occurs, CN is horizontally scaled out. Dynamically judge the workload of different business CN groups and automatically allocate idle resources to busy groups.</li> <li>Complete isolation of analytical resources is achieved through the logical concept of accounts (accounts). Different accounts can use specified CN resources in a dedicated or shared manner.</li> </ul>"},{"location":"MatrixOne/Overview/feature/high-availability/","title":"High Availability","text":"<p>The high availability of a database is a critical enterprise demand, ensuring the continuous availability of the system, data security, and business continuity. MatrixOne is a highly available distributed database that can meet enterprise demands. This document aims to introduce the high availability features of MatrixOne, including critical functions such as fault recovery, data redundancy, load balancing, and so on.</p>"},{"location":"MatrixOne/Overview/feature/high-availability/#business-requirements","title":"Business Requirements","text":"<p>The business demands high database availability mainly reflect the following aspects:</p> <ul> <li> <p>Continuous Availability: Enterprises need to ensure the continuous operation of their critical business databases to prevent long-term system interruptions or unavailability of services, thus ensuring business continuity and user satisfaction.</p> </li> <li> <p>Fault Recovery: When a database failure occurs, it should quickly and automatically perform fault detection and switch to reduce the system downtime, ensuring the continuity and reliability of the service.</p> </li> <li> <p>Data Protection and Recovery: Data is a vital enterprise asset, so regular database backups are needed, and quick data recovery is required to cope with accidental data loss or damage.</p> </li> <li> <p>Cross-Regional Disaster Recovery: For critical businesses, it may be necessary to set up data centers in different geographical regions, implementing cross-regional disaster recovery to cope with natural disasters, network interruptions, or regional faults.</p> </li> </ul>"},{"location":"MatrixOne/Overview/feature/high-availability/#advantages","title":"Advantages","text":"<p>MatrixOne uses erasure coding for data redundancy checks and synchronizes transaction logs using the Raft protocol. Only when a majority of nodes write successfully can the transaction be committed, ensuring the strong consistency of data and availability even when a minority of replicas fail. MatrixOne's high availability meets the level 4 standard in the finance industry (RPO=0, RTO&lt;30min).</p>"},{"location":"MatrixOne/Overview/feature/high-availability/#architecture","title":"Architecture","text":"<p>The overall technical architecture of MatrixOne is shown in the figure below. We will introduce their high availability according to different component modules.</p> <p></p>"},{"location":"MatrixOne/Overview/feature/high-availability/#resource-scheduling-layer","title":"Resource Scheduling Layer","text":"<p>The technical architecture of MatrixOne is completely cloud-native. All technical components run on Kubernetes in a containerized form. The Kubernetes cluster can ensure continuous availability by adopting a multi-master and multi-slave deployment scheme. Specific deployment topology and system can refer to the Kubernetes official scheme.</p>"},{"location":"MatrixOne/Overview/feature/high-availability/#storage-layer","title":"Storage Layer","text":"<p>MatrixOne uses object storage in the storage layer and recommends deploying with Minio. MinIO, as a mature distributed object storage solution, needs to ensure the high availability of data services and the completeness and consistency of data files. The architecture of the MinIO cluster is distributed, storing data on multiple nodes, and providing high availability and fault tolerance. At the same time, the MinIO cluster uses Erasure Coding technology to ensure the reliability and availability of data. When a node fails, other nodes can use these coded replicas to recover lost data.</p>"},{"location":"MatrixOne/Overview/feature/high-availability/#shared-logs","title":"Shared Logs","text":"<p>The shared log component LogService is the only component in MatrixOne that holds distributed transaction status. This is a three-node architecture following the Raft protocol. Even if one node fails, it can still work typically. It is responsible for ensuring the final consistency of services for the entire MatrixOne cluster.</p>"},{"location":"MatrixOne/Overview/feature/high-availability/#transaction-layer","title":"Transaction Layer","text":"<p>The transaction layer component Transaction node is responsible for conflict detection and arbitration of transaction operations. It is a stateless node. If a failure occurs, Kubernetes can pull it up at any time, and it can generally recover in seconds, ensuring continuous availability. The current version of Transaction node only supports single-node operation, and subsequent versions will add multiple Transaction node schemes to improve availability further.</p>"},{"location":"MatrixOne/Overview/feature/high-availability/#computation-layer","title":"Computation Layer","text":"<p>The computation layer component Compute Node is responsible for parsing front-end Queries, generating, and executing execution plans. It is also a stateless node. If a failure occurs, Kubernetes can pull it up at any time and generally recover in seconds, ensuring continuous availability.</p>"},{"location":"MatrixOne/Overview/feature/high-availability/#proxy","title":"Proxy","text":"<p>The Proxy component in the resource scheduling layer is responsible for grouping computation nodes CN to achieve load isolation and implement user connection level load balancing within the CN group. Proxy also runs in the form of multiple replicas backing each other up to ensure high availability.</p>"},{"location":"MatrixOne/Overview/feature/key-feature-htap/","title":"HTAP","text":"<p>MatrixOne is a database capable of supporting Hybrid Transaction Analytical Processing (HTAP), aiming to provide a solution that fulfills all the requirements for transaction processing (TP) and analytical processing (AP) within a single database. With its decoupled architecture for storage and transaction computations, MatrixOne can support online transactions and real-time statistical analysis in the same data engine while providing an efficient resource isolation mechanism. This design dramatically preserves data freshness, eliminating the need for building real-time data warehouses in many business scenarios, thus helping customers realize their business value.</p>"},{"location":"MatrixOne/Overview/feature/key-feature-htap/#business-requirements","title":"Business Requirements","text":"<p>With the expansion of business scale, the continuous growth of data volume, and the increasing complexity of business systems, traditional online databases have to face the issue of splitting. However, the architecture after splitting cannot meet some needs for associated statistics and real-time analysis. At this time, products like real-time data warehouses come into play. However, due to the complex architecture and high cost of real-time data warehouses, not all enterprises can build a complete ecological link. MatrixOne's HTAP mode was born in response to this situation. It can use one engine to support high concurrent online throughput while providing real-time online analysis capability for massive data. This provides momentum for enterprises to improve efficiency and continuous innovation.</p>"},{"location":"MatrixOne/Overview/feature/key-feature-htap/#advantages","title":"Advantages","text":"<ul> <li>One-stop experience: Satisfy all the needs for transaction processing (TP) and analytical processing (AP) within a single database, and users can enjoy a one-stop experience covering all TP and AP scenarios.</li> <li>Simplified integration work: Users using MatrixOne only need to do a small amount of integration work to achieve extensive use of TP and AP scenarios, especially significantly reducing the complex ETL work from TP database synchronization to AP database.</li> <li>Cost-effective: MatrixOne uses a single storage engine to implement HTAP; compared with traditional multi-engine solutions, users only need to maintain a set of clusters and store one set of data, which can significantly reduce hardware investment.</li> </ul>"},{"location":"MatrixOne/Overview/feature/key-feature-htap/#architecture","title":"Architecture","text":"<p>MatrixOne implements HTAP through modular storage, calculation, transaction architecture, a multi-level storage system, and load processing link isolation mode.</p>"},{"location":"MatrixOne/Overview/feature/key-feature-htap/#modular-separation-of-storage-computation-and-transaction","title":"Modular Separation of Storage, Computation, and Transaction","text":"<p>The overall technical architecture of MatrixOne adopts a separate architecture of storage and computation. The modular design separates the database's computation, storage, and transaction processing into independent modules, thus forming a database system with independent scalability for each component. As shown in the following figure, MatrixOne is composed of three independent layers:</p> <ul> <li>Computation layer, with Compute Node as the unit, realizes serverless computation and transaction processing. It has its Cache, supporting random restarts and scaling; multiple Compute Nodes can calculate parallel to improve query efficiency.</li> <li>Transaction layer, composed of Transaction Node and Log Service, provides complete log service and metadata information, with built-in Logtail for storing recently written new data.</li> <li>Storage layer, all data are saved in object storage represented by S3, which achieves low-cost, infinitely expandable storage method. Through a unified file operation service named File Service, it realizes the invisible operation of different nodes on the underlying storage.</li> </ul>"},{"location":"MatrixOne/Overview/feature/key-feature-htap/#multi-level-storage-system","title":"Multi-level Storage System","text":"<p>As illustrated in the previous section, the storage system of MatrixOne is composed of shared storage for all data, a small number of shared logs, and a stateless cache on the computing nodes.</p> <ul> <li>All data are stored in object storage, the primary storage for the entire database and the only location for data persistence. Object storage has the characteristics of being low-cost and nearly infinitely scalable.</li> <li>The LogService provides shared log services for saving state information of transactions such as writes/updates across the entire cluster. It is the only component in the entire cluster with a state. Therefore, LogService must ensure high availability through three nodes using the distributed Raft protocol. However, it only retains transaction logs for a certain period, which we call Longtail. After some time, there will be TN to help compress historical logs and store them in S3. Therefore, Logtail can maintain a very slim data size, generally a few GB.</li> <li>Each computing node CN has a cache. When a user queries for the first time, it will read related data from object storage and put it into the cache as hot data. When the customer queries the same content again, if the cache is hit, the query result will be returned to the user quickly. The technical feature of cold and hot data separation brought by the cache can refer to Detailed Explanation of Data Caching and Cold-Hot Data Separation Architecture. In addition to reading data from object storage, CN nodes will also subscribe to Logtail data from LogService, and new updates in LogService will be pushed to CN immediately.</li> </ul>"},{"location":"MatrixOne/Overview/feature/key-feature-htap/#load-processing-link-isolation","title":"Load Processing Link Isolation","text":""},{"location":"MatrixOne/Overview/feature/key-feature-htap/#custom-load-isolation","title":"Custom Load Isolation","text":"<p>User requests first enter the MatrixOne cluster and go through the Proxy module. Proxy is a module used to implement the grouping and isolation of computing nodes. This module groups computing nodes CN into several groups through configuration and uses tags to distinguish various tenants or loads, allowing users to set different CN groups to handle other businesses according to different business needs.</p> <p>For specific operations of Proxy using CN groups, refer to Manage CN Groups Using Proxy.</p>"},{"location":"MatrixOne/Overview/feature/key-feature-htap/#isolation-of-tpap-load-links","title":"Isolation of TP/AP Load Links","text":"<p>At the execution level, MatrixOne will route it to different processing links according to the request type, thus realizing the isolation of OLTP and OLAP. Below we will explain how to implement load isolation based on the processing methods of read and write requests.</p>"},{"location":"MatrixOne/Overview/feature/key-feature-htap/#write-request-processing","title":"Write Request Processing","text":"<p>As shown in the figure, when processing write requests (INSERT/UPDATE/DELETE):</p> <ol> <li> <p>CN node will start a transaction and check whether there are primary key conflicts or other transaction-related issues in the write request. If so, it will return an error to the user directly.</p> </li> <li> <p>Next, CN will decide on the operation link based on the data size of the write request. If the data size does not exceed the set threshold (usually 10MB), the CN node will send the data to the TN node. The TN node will perform operations like write conflict detection and transaction arbitration. After confirming no mistakes, these data will be written into LogService as logs to form Longtail.</p> </li> <li> <p>The updated Logtail will be immediately pushed to the CN nodes that have subscribed to Logtail data for queries. If the data size exceeds the threshold, the CN node will directly write the data into object storage and send the commit information to TN. The TN node will perform operations like write conflict detection and transaction arbitration. After confirming no errors, the transaction will be committed.</p> </li> </ol> <p>From the figure above, it is known that small data volume OLTP-type write requests will go through the processing link from CN to TN and then to LogService, while large data volume write requests, such as Load, etc., will mainly go through CN to S3, and a small amount from CN to TN.</p>"},{"location":"MatrixOne/Overview/feature/key-feature-htap/#read-request-processing","title":"Read Request Processing","text":"<p>As shown in the figure, the CN node will first check the subscribed Logtail data when handling read requests. If the data directly hits Logtail, it is in the latest part of the written data and can be directly returned. If it does not hit Logtail, CN will check its cache and other visible CNs. If it hits the cache, it will directly return the result. If it does not hit the cache, CN will judge whether a large amount of data needs to be read through the execution plan. Multiple CN nodes will read in parallel from the object storage if it exceeds a certain threshold (such as 200 block sizes). A single CN node will read from object storage if it does not exceed the threshold.</p> <p>As shown above, OLTP and OLAP read requests will go through the processing link from CN to S3. Through the isolation of CN nodes by Proxy, further isolation of CN can be achieved.</p>"},{"location":"MatrixOne/Overview/feature/key-feature-htap/#scenarios","title":"Scenarios","text":"<p>Whether in finance, telecommunications, manufacturing, or emerging industries like the internet and technology, HTAP has many application scenarios.</p> <p>For example, in the financial field, HTAP databases can meet the needs of high-speed transaction processing and real-time risk management, support high throughput and low latency requirements of financial transactions, and provide real-time data analysis functions to support decision-making and risk monitoring.</p> <p>In the telecommunications industry, HTAP databases can be used for real-time billing and network optimization. They can handle much real-time data, track user communication and network activities, and support real-time analysis and intelligent decision-making to improve service quality, network performance, and user experience.</p> <p>In the Internet of Things field, HTAP databases can be used for device management and real-time monitoring. They can handle many sensor data and device status information and provide real-time device monitoring and management functions. This is significant for real-time decision-making, remote fault diagnosis, and predictive maintenance of IoT systems.</p>"},{"location":"MatrixOne/Overview/feature/key-feature-htap/#real-time-financial-risk-control-system","title":"Real-time Financial Risk Control System","text":"<p>As a leading city commercial bank, a specific bank has a real-time risk control system for its credit card business. This system is mainly responsible for monitoring and evaluating credit card transactions, identifying transaction risks, and taking restrictive measures promptly.</p> <p>The following table shows the core business requirements of this system and how MatrixOne's HTAP can meet these needs:</p> Core Business Requirements Business Type HTAP Capabilities of MatrixOne Real-time acquisition of transaction data Fast and low-latency data writing MatrixOne can efficiently write massive amounts of data concurrently, further enhancing performance by expanding multiple CN nodes and object storage. Offline calculation of a large amount of data indicators, analysis of user behavior and risk factors Complex analytical queries, needing to process data at the TB level MatrixOne can handle massive star and snowflake data analysis and parallel computation across multiple CN nodes can linearly enhance analytical capabilities. Real-time analysis of transaction data, computation of risk indicators Typical AP business, needing to calculate data results within a specified time MatrixOne's parallel computing capabilities of multiple CN nodes can meet the calculation needs of large-scale data reports while providing fast data reading performance. Facing frequent and drastic business fluctuations Need for a flexible, scalable architecture to cope with large load fluctuations MatrixOne's storage and calculation separation architecture has strong scalability. It can quickly scale up and down during business fluctuations to match business needs."},{"location":"MatrixOne/Overview/feature/key-feature-htap/#telecommunications-business-management-system","title":"Telecommunications Business Management System","text":"<p>A specific company is a provincial telecommunications operator serving tens of millions of users, mainly providing telephone communication services, and needs to support the use and statistical analysis of many users.</p> <p>The following table shows the core business scenarios of this system and how MatrixOne's HTAP can meet these needs:</p> Core Business Scenarios Business Type MatrixOne's HTAP Solution Query user call charge deposit status and real-time shutdown High-concurrent short transactions, requiring low latency MatrixOne has OLTP capabilities, and its distributed architecture across multiple CN nodes ensures stable performance under high concurrency while achieving load balancing. Real-time account balance update after user recharge High-concurrent short transactions, requiring low latency MatrixOne's TP capabilities can meet the high-concurrent and low-latency TP requirements, and the distributed architecture across multiple CN nodes provides load balancing features. Bulk adjustment of user packages and effect in the next month Super large transaction, requiring high performance MatrixOne can write directly to S3, avoiding contention in Logservice under high concurrency, thus achieving fast batch data writing. Perform daily, weekly, monthly, quarterly, and annual statistics on user data Typical AP business, needing to calculate data results within a specified time MatrixOne's parallel computing capabilities of multiple CN nodes can meet the calculation needs of large-scale data reports while providing fast data reading performance."},{"location":"MatrixOne/Overview/feature/key-feature-htap/#manufacturing-execution-system","title":"Manufacturing Execution System","text":"<p>A specific company is an electronic product manufacturer with dozens of production lines for various consumer electronic products. Its Manufacturing Execution System (MES) must manage personnel, machines, materials, and processes on the production line and regularly analyze production efficiency and energy consumption issues.</p> <p>The following table shows the core business scenarios of this system and how MatrixOne's HTAP can meet these needs:</p> Core Business Scenarios Business Type MatrixOne's HTAP Solution Manage production, warehousing, and quality High-concurrent short transactions, requiring low latency MatrixOne has OLTP capabilities, distributed across multiple CN nodes to ensure stable performance under high concurrency while achieving load balancing. Real-time collection of a large amount of machine production data High-concurrent multi-data type data writing MatrixOne can efficiently write massive amounts of data concurrently, further enhancing performance by expanding multiple CN nodes and object storage. Analysis of the origin of a large number of historical production records Need for multidimensional query analysis of massive"},{"location":"MatrixOne/Overview/feature/key-feature-multi-accounts/","title":"Multi-Account","text":"<p>MatrixOne is designed in a single-cluster multi-account approach. In this design, account (Account) is a logical concept as a unit of resource allocation and database management. MatrixOne's multi-account mode can provide independent database instances for different accounts and adopts an analytical isolation method to ensure the security and independence of each account's data, effectively preventing the risk of data leakage and tampering.</p>"},{"location":"MatrixOne/Overview/feature/key-feature-multi-accounts/#business-requirements","title":"Business Requirements","text":"<p>As an enterprise's business scales up and data volume continues to grow, alongside the increase in business departments or project teams, the enterprise can perform flexible tenant management according to its individual business needs and scale. This satisfies the independence requirements of different business departments or project teams. Under the multi-tenant mode of MatrixOne, enterprises can easily manage the data resources of each tenant, making the business processes such as data analysis and reporting smoother and more accurate. At the same time, this approach also helps the enterprise improve business efficiency, reduce management costs, and maximize enterprise resource utilization.</p>"},{"location":"MatrixOne/Overview/feature/key-feature-multi-accounts/#advantages","title":"Advantages","text":"<ul> <li> <p>Reduce operating costs: Multiple users can share a database cluster, avoiding deploying and managing multiple sets of clusters, thereby reducing the investment cost of hardware and software.</p> </li> <li> <p>Resource and load isolation: The multi-account mode improves data security and reliability, and the data and load of different users are isolated from each other. Even if a user's data has problems or the load is too high, it will not affect other users.</p> </li> <li> <p>Dynamic Resource Allocation: multi-account can also improve the scalability of the database. Each account can expand or shrink its resources independently and maximize resource usage in the face of different load levels.</p> </li> <li> <p>account Unified Management: Although each account is isolated and operates independently, administrators can still manage other accounts through the system account, such as quickly creating new accounts and deleting old accounts in batches.</p> </li> <li> <p>account data sharing: Data sharing between accounts is required in specific federal statistical query scenarios. MatrixOne provides a complete account data sharing and subscription mechanism to meet the more flexible business analysis needs.</p> </li> <li> <p>Cross-Regional Deployment: When some services span many regions, accounts must associate with areas to provide nearby services. MatrixOne supports different accounts under the same cluster to be distributed in other areas to serve the business nearby.</p> </li> </ul>"},{"location":"MatrixOne/Overview/feature/key-feature-multi-accounts/#architecture","title":"Architecture","text":"<p>The MatrixOne system contains two accounts: system (sys) and common accounts. The system account is built into the MatrixOne cluster, and the system will log in to this account by default after the cluster starts. The primary responsibilities of this account include:</p> <ul> <li>Store and manage system tables related to the cluster.</li> <li>Manage cluster-level functions, such as creating/deleting accounts, modifying system configuration, etc.</li> </ul> <p>In contrast, common accounts are created by system accounts. A common account can be regarded as a database instance, and the account name needs to be specified to connect. Common accounts have the following characteristics:</p> <ul> <li>Possibility to create your user.</li> <li>Can create databases, tables, and all other objects.</li> <li>Have independent information_schema and other system databases.</li> <li>Has independent system variables.</li> <li>Possess other characteristics that a database instance should have.</li> </ul>"},{"location":"MatrixOne/Overview/feature/key-feature-multi-accounts/#multi-account-resource-isolation","title":"Multi-account resource isolation","text":"<p>MatrixOne's distributed cluster adopts a Proxy module and CN resource group technology architecture to realize multi-account resource isolation.</p> <p>When a user connects, the connection will pass through the Proxy module. The Proxy will forward the connection to a CN in the corresponding CN resource group according to the account label information of the CN and select the CN with the lightest load according to the principle of load balancing. In the MatrixOne cluster architecture, CNs are deployed in containers, so CNs are isolated. A CN resource group a account, uses is a set of CNs tagged with the account. If resources are insufficient and need to be expanded, the CN resource group can be expanded horizontally to meet the demand without preempting the resources of other CN resource groups.</p> <p>The architecture diagram is as follows:</p> <p></p>"},{"location":"MatrixOne/Overview/feature/key-feature-multi-accounts/#scenarios","title":"Scenarios","text":"<p>The multi-account capability of MatrixOne can show advantages in the following application scenarios.</p>"},{"location":"MatrixOne/Overview/feature/key-feature-multi-accounts/#multi-account-saas","title":"Multi-account SaaS","text":"<p>Multi-account model design is critical in a SaaS application that serves many enterprise customers.</p>"},{"location":"MatrixOne/Overview/feature/key-feature-multi-accounts/#traditional-architecture","title":"Traditional architecture","text":"<p>Traditional multi-account architectures store and manage data for each account at the database level. There are usually multiple design patterns, such as a shared database pattern (each account shares a database but has its data tables/columns) or an independent database pattern (each account has its database).</p> <p></p> <p>Both traditional models have specific challenges:</p> <ul> <li>The account-shared database mode relies on the application layer to distinguish account logic by SQL and application layer code, and the isolation degree of data and resources is low. It is straightforward to seize the resources of other accounts when the load of a account suddenly increases significantly, resulting in a decline in the entire system's performance. However, only one set of database clusters is used in the account-shared database mode. The resource cost and operation and maintenance management difficulty are relatively low, and the upgrade/expansion/application change only needs to be done once to complete the global change.</li> <li>The account-independent database mode supports each account with an independent database instance. The isolation of resources and data is very high, but resource costs and O&amp;M difficulties are increased. Unifying upgrades and other operation and maintenance actions will be very time-consuming when accounts exceed one hundred.</li> </ul>"},{"location":"MatrixOne/Overview/feature/key-feature-multi-accounts/#matrixone-architecture","title":"MatrixOne Architecture","text":"<p>The multi-account capability of MatrixOne brings a new architectural approach. accounts still share a MatrixOne cluster, and unified account O&amp;M and management can be performed through system accounts. In addition, the isolation of data and resources is realized through the built-in multi-account capability. Each account can independently expand and contract resources, further reducing the difficulty of operation and maintenance. This approach meets not only the requirements for isolation but also the requirements for low resource and operation and maintenance costs.</p> <p></p> Multi-account mode Data isolation degree Resource cost Resource isolation Operation and maintenance complexity account Shared Database Mode Low Low Low Low account Independent Database Mode High High High High MatrixOne Mode High Low High Low"},{"location":"MatrixOne/Overview/feature/key-feature-multi-accounts/#microservice-application-architecture","title":"Microservice Application Architecture","text":"<p>Microservice application architecture is a software architectural pattern that implements an application by developing small services. Each small service typically runs in its process and communicates via a lightweight HTTP API. These services are usually bounded by business modules, which can be developed, deployed independently, and released using automated deployment tools. A microservices approach can help businesses launch new products and services faster, aligning development teams with business goals.</p> <p>Unlike SaaS applications, microservice applications also face the problem of database sharing or independence. It is usually recommended to prepare a separate database for each microservice; this pattern is more suitable for microservice architecture because each service is developed, deployed, and scaled independently. Other services will not be affected when there is a need to upgrade or change the data schema. When a service needs to be expanded, the service can also be partially developed. In addition, if some services require unique database capabilities, such as Elastic Search or vector search, etc., this mode provides more flexible possibilities.</p> <p></p> <p>However, microservices ultimately serve the same business, and data must be shared between different services, so they will also encounter the same dilemma as SaaS application multi-account.</p> <p>The multi-account capability provided by MatrixOne can well balance these two contradictions, which can not only ensure the independence of data and resource expansion of each microservice but also maintain a certain degree of sharing.</p>"},{"location":"MatrixOne/Overview/feature/key-feature-multi-accounts/#group-subsidiariesbusiness-units","title":"Group Subsidiaries/Business Units","text":"<p>Many group companies separate operations with regional subsidiaries or business units, which often operate independently, with total production, sales, and technical support teams, and use their IT systems. However, the group company needs to fully grasp the business status of the subsidiaries, so the subsidiaries need to report a large amount of business data regularly.</p> <p></p> <p>This IT architecture faces precisely the same problem in terms of database design as the previous two scenarios, namely the trade-off between sharing and isolation. In addition, geographical location also needs to be considered in this scenario. Subsidiaries usually have their regional attributes and need to provide services nearby. For example, manufacturing companies are generally located in big cities such as Beijing, Shanghai, Guangzhou, and Shenzhen, but various factories may be scattered in second-and third-tier cities. These factories need to cooperate closely with systems such as ERP and MES. Therefore, these systems often need to be deployed locally in the factory, and the headquarters needs to grasp the situation of each factory, so these systems need to report data to the group company. The traditional deployment architecture usually adopts the method of independently deploying databases, while the application layer implements data synchronization and reporting.</p> <p>The multi-account capability of MatrixOne can well solve the database sharing/isolation dilemma. Since the CN nodes required by the accounts can be deployed to the nearest location of the subsidiary company, a cluster can be naturally formed with other components of the group company under the condition of network connectivity, which is not only convenient for localized business use, but also meets the requirements of efficient data reporting and statistics need.</p>"},{"location":"MatrixOne/Overview/feature/key-feature-multi-accounts/#reference","title":"Reference","text":"<p>For more information on multi-account, see:</p> <ul> <li>Multi-Account Application Scenario</li> <li>Quick Start: Create accounts, Verify Resource Isolation</li> </ul>"},{"location":"MatrixOne/Overview/feature/mysql-compatibility/","title":"MySQL Compatibility","text":"<p>This documentation primarily introduces the compatibility comparison information between the MySQL mode of MatrixOne database and the native MySQL database.</p> <p>MatrixOne is highly compatible with the MySQL 8.0 protocol and commonly used features and syntax of MySQL 8.0. Additionally, MatrixOne provides support for commonly used MySQL-related tools, including Navicat, MySQL Workbench, JDBC, etc. However, due to the different technical architecture of MatrixOne and its ongoing development and improvement, some functionalities are not yet supported. This section will mainly discuss the differences between the MySQL mode of MatrixOne database and the native MySQL database from the following aspects:</p> <ul> <li>DDL Statements</li> <li>DCL Statements</li> <li>DML Statements</li> <li>Advanced SQL Features</li> <li>Data Types</li> <li>Indexes and Constraints</li> <li>Partition</li> <li>Functions and Operators</li> <li>Storage Engine</li> <li>Transaction</li> <li>Security and Permissions</li> <li>Backup and Restore</li> <li>System Variables</li> <li>Programming Language</li> <li>Peripheral Tools</li> </ul>"},{"location":"MatrixOne/Overview/feature/mysql-compatibility/#ddl-statements","title":"DDL statements","text":""},{"location":"MatrixOne/Overview/feature/mysql-compatibility/#about-database","title":"About DATABASE","text":"<ul> <li>A database with a Chinese name is not supported.</li> <li><code>ENCRYPTION</code> are currently supported but do not work.</li> <li><code>ALTER DATABASE</code> is not supported.</li> <li>Only the <code>utf8mb4</code> character set and <code>utf8mb4_bin</code> collation are supported by default and cannot be changed.</li> </ul>"},{"location":"MatrixOne/Overview/feature/mysql-compatibility/#about-table","title":"About TABLE","text":"<ul> <li><code>ENGINE=</code> in the table definition is not supported.</li> <li>The clauses: <code>CHANGE [COLUMN]</code>, <code>MODIFY [COLUMN]</code>, <code>RENAME COLUMN</code>, <code>ADD [CONSTRAINT [symbol]] PRIMARY KEY</code>, <code>DROP PRIMARY KEY</code>, and <code>ALTER COLUMN ORDER BY</code> can be freely combined in <code>ALTER TABLE</code>, these are not supported to be used with other clauses for the time being.</li> <li>Temporary tables currently do not support using <code>ALTER TABLE</code> to modify the table structure.</li> <li>Tables created using <code>CREATE TABLE ... CLUSTER BY...</code> do not allow modifications to the table structure using <code>ALTER TABLE</code>.</li> <li><code>ALTER TABLE</code> does not support <code>PARTITION</code> related operations.</li> <li>Support defining <code>Cluster by column</code> clauses to pre-sort a column to speed up queries.</li> </ul>"},{"location":"MatrixOne/Overview/feature/mysql-compatibility/#about-view","title":"About VIEW","text":"<ul> <li>The <code>with check option</code> clause is not supported, but MatrixOne simply ignores' ENGINE= '.</li> <li>The <code>DEFINER</code> and <code>SQL SECURITY</code> clauses are not supported.</li> </ul>"},{"location":"MatrixOne/Overview/feature/mysql-compatibility/#about-sequence","title":"About SEQUENCE","text":"<ul> <li>MySQL does not support <code>SEQUENCE</code> objects, but MatrixOne can create a sequence through <code>CREATE SEQUENCE</code>, and the syntax of MatrixOne is the same as PostgreSQL.</li> <li>When using <code>SEQUENCE</code> in a table, you must pay attention to the <code>auto_increment</code> and <code>sequence</code> cannot be used together; otherwise, an error will be occured.</li> </ul>"},{"location":"MatrixOne/Overview/feature/mysql-compatibility/#dcl-statement","title":"DCL Statement","text":""},{"location":"MatrixOne/Overview/feature/mysql-compatibility/#about-account","title":"About ACCOUNT","text":"<ul> <li>Multi Account is a unique function of MatrixOne, including related statements such as <code>CREATE/ALTER/DROP ACCOUNT</code>.</li> </ul>"},{"location":"MatrixOne/Overview/feature/mysql-compatibility/#about-permission","title":"About Permission","text":"<ul> <li> <p><code>GRANT</code>, authorization logic is different from MySQL.</p> </li> <li> <p><code>REVOLE</code>, the recovery logic is different from MySQL.</p> </li> </ul>"},{"location":"MatrixOne/Overview/feature/mysql-compatibility/#about-show","title":"About SHOW","text":"<ul> <li>MatrixOne does not support performing SHOW operations on certain objects, including <code>TRIGGER</code>, <code>FUNCTION</code>, <code>EVENT</code>, <code>PROCEDURE</code>, <code>ENGINE</code>, and so on.</li> <li>Due to architectural differences, MatrixOne has implemented some SHOW commands solely for syntactic compatibility; these commands will not produce any output, such as <code>SHOW STATUS/PRIVILEGES</code>, etc.</li> <li>Although some commands have the same syntax as MySQL, their results differ significantly from MySQL due to different implementations. These commands include <code>SHOW GRANTS</code>, <code>SHOW ERRORS</code>, <code>SHOW PROCESSLIST</code>, <code>SHOW VARIABLES</code>.</li> <li>For the purpose of its own management, MatrixOne offers several unique SHOW commands such as <code>SHOW BACKEND SERVERS</code>, <code>SHOW ACCOUNTS</code>, <code>SHOW ROLES</code>, <code>SHOW NODE LIST</code>, and others.</li> </ul>"},{"location":"MatrixOne/Overview/feature/mysql-compatibility/#about-set","title":"About SET","text":"<ul> <li>The system variables in MatrixOne differ significantly from MySQL, with most only providing syntactic compatibility. The parameters that can be set at present include: <code>ROLE</code>, <code>SQL_MODE</code>, and <code>TIME_ZONE</code>.</li> </ul>"},{"location":"MatrixOne/Overview/feature/mysql-compatibility/#dml-statements","title":"DML Statements","text":""},{"location":"MatrixOne/Overview/feature/mysql-compatibility/#about-select","title":"About SELECT","text":"<ul> <li><code>SELECT...FOR UPDATE</code> only supports single-table queries.</li> </ul>"},{"location":"MatrixOne/Overview/feature/mysql-compatibility/#about-insert","title":"About INSERT","text":"<ul> <li>MatrixOne does not support modifiers such as <code>LOW_PRIORITY</code>, <code>DELAYED</code>, <code>HIGH_PRIORITY</code>.</li> </ul>"},{"location":"MatrixOne/Overview/feature/mysql-compatibility/#about-update","title":"About UPDATE","text":"<ul> <li>MatrixOne does not support the use of <code>LOW_PRIORITY</code> and <code>IGNORE</code> modifiers.</li> </ul>"},{"location":"MatrixOne/Overview/feature/mysql-compatibility/#about-delete","title":"About DELETE","text":"<ul> <li>MatrixOne does not support modifiers such as <code>LOW_PRIORITY</code>, <code>QUICK</code>, or <code>IGNORE</code>.</li> </ul>"},{"location":"MatrixOne/Overview/feature/mysql-compatibility/#about-subqueries","title":"About Subqueries","text":"<ul> <li>MatrixOne does not support multi-level associated subqueries in <code>IN</code>.</li> </ul>"},{"location":"MatrixOne/Overview/feature/mysql-compatibility/#about-load","title":"About LOAD","text":"<ul> <li>MatrixOne supports <code>SET</code>, but only in the form of <code>SET columns_name=nullif(expr1,expr2)</code>.</li> <li>MatrixOne supports <code>LOAD DATA LOCAL</code> on the client side, but the <code>--local-infle</code> parameter must be added when connecting.</li> <li>MatrixOne supports the import of <code>JSONlines</code> files but requires some unique syntax.</li> <li>MatrixOne supports importing files from object storage but requires some unique syntax.</li> </ul>"},{"location":"MatrixOne/Overview/feature/mysql-compatibility/#about-explain","title":"About EXPLAIN","text":"<ul> <li>MatrixOne's <code>Explain</code> and <code>Explain Analyze</code> printing formats refer to PostgreSQL, which differs from MySQL.</li> <li>JSON-type output is not supported.</li> </ul>"},{"location":"MatrixOne/Overview/feature/mysql-compatibility/#other","title":"other","text":"<ul> <li>The <code>REPLACE</code> statement does not currently support rows of values \u200b\u200binserted using the <code>VALUES row_constructor_list</code> parameter.</li> </ul>"},{"location":"MatrixOne/Overview/feature/mysql-compatibility/#advanced-sql-features","title":"Advanced SQL Features","text":"<ul> <li>Triggers are not supported.</li> <li>Stored procedures are not supported.</li> <li>Event dispatchers are not supported.</li> <li>Materialized views are not supported.</li> <li>Support for custom functions, Python only, with big differences in use with MySQL.</li> </ul>"},{"location":"MatrixOne/Overview/feature/mysql-compatibility/#stream-computing","title":"Stream Computing","text":"<ul> <li>Streaming is unique to MatrixOne and currently version 1.2.3 only supports Kafka connectors.</li> <li>Kafka connectors need to be created and used with a special syntax.</li> </ul>"},{"location":"MatrixOne/Overview/feature/mysql-compatibility/#data-types","title":"Data Types","text":"<ul> <li>BOOL: Different from MySQL's Boolean value type, which is int, MatrixOne's <code>Boolean</code> value is a new type whose value can only be <code>True</code> or <code>False</code>.</li> <li>DECIMAL: <code>DECIMAL(P, D)</code>, the maximum precision of the effective number P and the number of digits after the decimal point D of MatrixOne is 38 digits, and MySQL is 65 and 30, respectively.</li> <li>Float numbers: The usage of <code>Float(M,D)</code> and <code>Double(M,D)</code> is discarded after MySQL 8.0.17, but MatrixOne still retains this usage.</li> <li>DATETIME: The maximum value range of MySQL is <code>'1000-01-01 00:00:00'</code> to <code>'9999-12-31 23:59:59'</code>, and the maximum range of MatrixOne is <code>'0001-01 -01 00:00:00'</code> to <code>'9999-12-31 23:59:59'</code>.</li> <li>TIMESTAMP: The maximum value range of MySQL is <code>'1970-01-01 00:00:01.000000'</code> UTC to <code>'2038-01-19 03:14:07.999999'</code> UTC, the maximum range of MatrixOne is <code>'0001- 01-01 00:00:00'</code> UTC to <code>'9999-12-31 23:59:59'</code> UTC.</li> <li>MatrixOne supports <code>UUID</code> type.</li> <li>MatrixOne supports vector types.</li> <li>Spatial types are not supported.</li> <li><code>SET</code> types are not supported.</li> <li><code>MEDIUMINT</code> type is not supported.</li> </ul>"},{"location":"MatrixOne/Overview/feature/mysql-compatibility/#indexes-and-constraints","title":"Indexes and Constraints","text":"<ul> <li>MatrixOne supports vector indexing.</li> <li>Secondary indexes only implement syntax and have no speedup effect.</li> <li>Foreign keys do not support the <code>ON CASCADE DELETE</code> cascade delete.</li> </ul>"},{"location":"MatrixOne/Overview/feature/mysql-compatibility/#partition-support","title":"Partition Support","text":"<ul> <li>Supports KEY, HASH, RANGE, RANGE COLUMNS, LIST, LIST COLUMNS.</li> <li>Supports KEY, HASH two kinds of partition cropping, the other four are not yet realized.</li> <li>Sub-partitioning only implements the syntax, not the function.</li> <li>ADD/DROP/TRUNCATE PARTITION is not yet supported.</li> </ul>"},{"location":"MatrixOne/Overview/feature/mysql-compatibility/#matrixone-keywords","title":"MatrixOne Keywords","text":"<ul> <li>MatrixOne and MySQL keywords have many differences, see MatrixOne Keywords.</li> </ul>"},{"location":"MatrixOne/Overview/feature/mysql-compatibility/#functions-and-operators","title":"Functions and Operators","text":""},{"location":"MatrixOne/Overview/feature/mysql-compatibility/#aggregate-functions","title":"Aggregate Functions","text":"<ul> <li>Support MatrixOne-specific Median function.</li> </ul>"},{"location":"MatrixOne/Overview/feature/mysql-compatibility/#date-and-time-functions","title":"Date and Time Functions","text":"<ul> <li>MatrixOne's <code>TO_DATE</code> function is the same as MySQL's <code>STR_TO_DATE</code> function.</li> </ul>"},{"location":"MatrixOne/Overview/feature/mysql-compatibility/#cast-function","title":"CAST Function","text":"<ul> <li>The type conversion rules are pretty different from MySQL; see CAST.</li> </ul>"},{"location":"MatrixOne/Overview/feature/mysql-compatibility/#window-functions","title":"Window functions","text":"<ul> <li>Only <code>RANK</code>, <code>DENSE_RANK</code>, <code>ROW_NUMBER</code> are supported.</li> </ul>"},{"location":"MatrixOne/Overview/feature/mysql-compatibility/#json-functions","title":"JSON functions","text":"<ul> <li>Only <code>JSON_UNQUOTE</code>, <code>JSON_QUOTE</code>, <code>JSON_EXTRACT</code> are supported.</li> </ul>"},{"location":"MatrixOne/Overview/feature/mysql-compatibility/#system-management-functions","title":"System Management functions","text":"<ul> <li><code>CURRENT_ROLE_NAME()</code>, <code>CURRENT_ROLE()</code>, <code>CURRENT_USER_NAME()</code>, <code>CURRENT_USER()</code>, <code>PURGE_LOG()</code> are supported.</li> </ul>"},{"location":"MatrixOne/Overview/feature/mysql-compatibility/#tae-storage-engine","title":"TAE Storage Engine","text":"<ul> <li>MatrixOne's TAE storage engine is independently developed and does not support MySQL's InnoDB, MyISAM, or other engines.</li> <li>There is only a TAE storage engine in MatrixOne; there is no need to use <code>ENGINE=XXX</code> to change the engine.</li> </ul>"},{"location":"MatrixOne/Overview/feature/mysql-compatibility/#security-and-permissions","title":"Security and Permissions","text":"<ul> <li>Only using <code>ALTER USER</code> can change the password.</li> <li>Does not support modifying the upper limit of user connections.</li> <li>Connection IP whitelisting is not supported.</li> <li>Does not support <code>LOAD</code> file authorization management.</li> <li>Can support <code>SELECT INTO</code> file authorization management through the <code>CREATE STAGE</code> section.</li> </ul>"},{"location":"MatrixOne/Overview/feature/mysql-compatibility/#transaction","title":"Transaction","text":"<ul> <li>MatrixOne defaults to optimistic transactions.</li> <li>different from MySQL, DDL statements in MatrixOne are transactional, and DDL operations can be rolled back within a transaction.</li> <li>SET operations within a transaction are not allowed in MatrixOne.</li> <li>Table-level lock <code>LOCK/UNLOCK TABLE</code> is not supported.</li> </ul>"},{"location":"MatrixOne/Overview/feature/mysql-compatibility/#backup-and-restore","title":"Backup and Restore","text":"<ul> <li>Support for physical backups based on the mobackup tool.</li> <li>Snapshot backup support</li> <li>The mysqldump backup tool is not supported, only the mo-dump tool.</li> <li>Binlog log backup is not supported.</li> </ul>"},{"location":"MatrixOne/Overview/feature/mysql-compatibility/#system-variables","title":"System variables","text":"<ul> <li>MatrixOne's lower_case_table_names has 2 modes, default is 1.</li> <li>MatrixOne's sql_mode only supports ONLY_FULL_GROUP_BY.</li> </ul>"},{"location":"MatrixOne/Overview/feature/mysql-compatibility/#system-tables","title":"System Tables","text":"<ul> <li>MatrixOne's system tables have their own unique system tables, but also take into account MySQL's system tables as a whole.  </li> <li>The default mysql and information_schema libraries in MatrixOne are compatible with the MySQL usage model.</li> <li>The system_metrics system library in MatrixOne collects and stores a range of runtime status monitoring data for MatrixOne services.  </li> <li>The system_system library in MatrixOne collects statements and system logs executed by users and systems in MatrixOne.</li> <li>The mo_catalog system library in MatrixOne stores various database objects and metadata in MatrixOne.  </li> </ul>"},{"location":"MatrixOne/Overview/feature/mysql-compatibility/#programming-language","title":"Programming language","text":"<ul> <li>Java, Python, C#, Golang connectors, and ORM are basically supported, and connectors and ORMs in other languages \u200b\u200bmay encounter compatibility issues.</li> </ul>"},{"location":"MatrixOne/Overview/feature/mysql-compatibility/#other-support-tools","title":"Other support tools","text":"<ul> <li>Navicat, DBeaver, MySQL Workbench, and HeidiSQL are basically supported, but the support for table design functions could be better due to the incomplete ability of ALTER TABLE.</li> <li>The xtrabackup backup tool is not supported.</li> </ul>"},{"location":"MatrixOne/Overview/feature/scalability/","title":"Scalability","text":"<p>MatrixOne is a superior integration of heterogeneous cloud-native databases. Its structure is based on a storage, computing, and transaction separation architecture, which boasts impressive elastic scalability that quickly adapts to user workload changes. As data volumes and businesses expand, enterprises' demand for database scalability is ever-increasing.</p> <p>Generally, whether user data grows from 0 to 100TB or concurrent operations increase from several hundred to hundreds of thousands, MatrixOne can meet performance demands through its unparalleled scalability.</p>"},{"location":"MatrixOne/Overview/feature/scalability/#business-requirements","title":"Business Requirements","text":"<p>The demand for database scalability in enterprises primarily originates from the following pain points:</p> <ul> <li>Growth in Data Volume: With business development, an enterprise's data volume will continue to grow. Suppose the scalability of the database could be better. In that case, it might not be able to effectively process a large amount of data, leading to a decline in query speed and affecting the regular operation of the business.</li> <li>Increase in Concurrent Requests: As the number of users grows, the number of concurrent requests a database needs to handle also increases. Suppose the scalability of the database could be better. In that case, it might not effectively process many concurrent requests, leading to an extension in response time and affecting the user experience.</li> <li>Change in Business Needs: The business needs of an enterprise may change over time. Suppose the scalability of the database could be better. In that case, it might be unable to flexibly adapt to these changes, causing the enterprise to invest more resources to adjust and optimize the database.</li> <li>System Availability: If the scalability of the database could be better, it might not effectively handle hardware or network failures, resulting in lower system availability, which affects business continuity.</li> </ul> <p>If a database has good scalability, it can help enterprises improve data processing capabilities, thus effectively coping with the growth of data volume, handling the increase in concurrent requests, and ensuring system availability.</p>"},{"location":"MatrixOne/Overview/feature/scalability/#architecture","title":"Architecture","text":"<p>MatrixOne adopts a comprehensive cloud-native architecture. All components exist in the form of containers and are uniformly managed by Kubernetes. Kubernetes itself has strong container orchestration and management capabilities. In MatrixOne, the manual expansion only requires modifying the Kubernetes configuration.</p> <p></p>"},{"location":"MatrixOne/Overview/feature/scalability/#advantages","title":"Advantages","text":"<p>From the technical architecture perspective, the unparalleled scalability of MatrixOne mainly manifests in the following aspects:</p> <ul> <li> <p>Flexible Expansion of Distributed Architecture: MatrixOne adopts a storage and computing-separated architecture. The separation of the storage, transaction, and computing layers allows MatrixOne to expand nodes when encountering system resource bottlenecks flexibly. The storage layer is mainly based on object storage and partly based on the cache on the computing nodes (CN). The transaction layer is based on stateless transaction nodes (TN). The computing layer is based on stateless computing nodes (CN). The multi-node architecture can more effectively distribute resources and avoid hot spots and resource contention.</p> </li> <li> <p>Infinite Expansion Capability of S3 Object Storage: The core storage of MatrixOne is completely based on S3 object storage. S3 object storage has naturally high availability and infinite scalability, making MatrixOne highly scalable in data storage. No matter how the data scale grows, MatrixOne can meet the demand by expanding S3 storage. In a private deployment environment, MatrixOne builds S3 services based on the open-source MinIO component. MatrixOne can seamlessly utilize the object storage service provided by the public cloud in a public cloud environment.</p> </li> <li> <p>Stateless Computing and Transaction Nodes: MatrixOne's computing nodes (CN) and transaction nodes (TN) are stateless, meaning they can be horizontally expanded anytime. Stateless design means that computing and transaction nodes do not need to store any persistent data</p> </li> </ul> <p>They can be easily added or deleted to cope with different load requirements. This design makes MatrixOne extremely scalable and flexible when dealing with large-scale concurrent requests. (The current 1.0 version TN node does not yet have expansion capabilities, but the TN mainly handles transaction submission information, and the load is lower, so a single TN is enough to take a large-scale cluster, and subsequent versions will improve TN's scalability.)</p> <ul> <li>Independent Scaling for Different Workloads and Accounts: MatrixOne utilizes the Proxy module to group multiple compute nodes (CN) into managed sets known as CN Sets, achieved through labeling. This enables the independent scaling of each CN Set. Users can assign different CN Sets to distinct tenants, ensuring load isolation and separate scaling between tenants. It's also possible to give various CN Sets to diverse workloads, such as read and write workloads, or transactional and analytical workloads, thereby achieving isolation and separate scaling between them.</li> </ul>"},{"location":"MatrixOne/Overview/feature/stream/","title":"Stream","text":""},{"location":"MatrixOne/Overview/feature/stream/#features-of-streaming-data","title":"Features of streaming data","text":"<p>With the rise of real-time data analytics, streaming data is becoming increasingly important in several areas. These data sources include, but are not limited to, real-time social media developments, online retail transactions, real-time market analysis, network security monitoring, instant messaging records, and real-time data on smart city infrastructure. Streaming data has a wide range of applications, such as:</p> <ul> <li>Real-time monitoring system: network traffic monitoring, user online behavior analysis, IoT device status monitoring;</li> <li>E-commerce platform: real-time user shopping behavior tracking, inventory dynamic adjustment, real-time price updates;</li> <li>Real-time interactive applications: social media dynamic real-time streaming, online gamer interaction data;</li> <li>Real-time risk management: financial transaction anomaly monitoring, network security threat detection;</li> <li>Smart city management: real-time traffic flow monitoring, public safety monitoring, environmental quality monitoring.</li> </ul> <p>The distinguishing features of streaming data are real-time and continuity. This means that data is constantly generated and transmitted instantly, reflecting the latest situation at every turn. In addition, due to the large and rapidly changing volume of data streams, traditional data processing methods are often difficult to cope with and require more efficient processing and analysis techniques. Therefore, streaming data processing typically requires:</p> <ul> <li>Real-time data aggregation: real-time aggregation and analysis of continuously flowing data;</li> <li>Dynamic Data Window: Analyzes data streams within a set time period for trend analysis and pattern recognition;</li> <li>High throughput and low latency: processing large amounts of data while ensuring the immediacy and accuracy of data processing.</li> </ul> <p>These characteristics make streaming data play an increasingly important role in modern data-driven decision-making processes, especially in scenarios that require rapid response and real-time insights.</p>"},{"location":"MatrixOne/Overview/feature/stream/#matrixones-ability-to-stream","title":"MatrixOne's ability to stream","text":""},{"location":"MatrixOne/Overview/feature/stream/#source","title":"Source","text":"<p>MatrixOne synchronizes data between external data streams and MatrixOne database tables through Source. By enabling a precise connection and data mapping mechanism, Source not only ensures seamless docking of data streams, but also guarantees data integrity and accuracy.</p>"},{"location":"MatrixOne/Overview/feature/stream/#dynamic-table-dynamic-table","title":"Dynamic Table Dynamic Table","text":"<p>Dynamic Table is the core embodiment of MatrixOne's capabilities on the stream. Dynamic tables capture, process, and transform data flowing into both Source and plain data tables in real time, guaranteeing instant updates and accurate representation of information flows throughout the system. This design not only improves the flexibility and efficiency of data processing, but also optimizes the responsiveness and processing performance of the entire system for complex data scenarios.</p>"},{"location":"MatrixOne/Overview/feature/time-series/","title":"Timing capability","text":""},{"location":"MatrixOne/Overview/feature/time-series/#characteristics-of-time-series-data","title":"Characteristics of Time Series Data","text":"<p>With the development of the Internet of Things, there is a growing demand for time series databases, such as data generated by smart cars, equipment monitoring in factories, and transaction market indicator data in the financial industry. Common business scenarios include:</p> <p>Monitoring software systems: virtual machines, containers, services, applications; Monitoring physical systems: hydrological monitoring, equipment monitoring in manufacturing plants, national security-related data monitoring, communications monitoring, sensor data, blood glucose meters, blood pressure changes, heart rate, etc.; Asset tracking applications: cars, trucks, physical containers, shipping pallets; Financial transaction systems: traditional securities, emerging crypto digital currencies; Event applications: tracking user, customer interaction data; Business intelligence tools: tracking key indicators and the overall health of the business; Internet industry: also has very large amounts of time series data, such as user behavior tracks on websites, log data generated by applications, etc.</p> <p>On the one hand, because of the temporal nature of time series databases, which constantly produce new data over time; on the other hand, the amount of time series data is enormous, with tens or hundreds of millions of pieces of data written every second. These two features make time series databases appear in some business needs, common business needs are:</p> <ol> <li>Get the latest status and query the most recent data (e.g. the latest status of the sensor);</li> <li>Display interval statistics, specify time frames, query statistics such as average, maximum, minimum, count, etc.;</li> <li>Gets the exception data and filters the exception data based on the specified criteria.</li> </ol>"},{"location":"MatrixOne/Overview/feature/time-series/#timing-capabilities-of-matrixone","title":"Timing capabilities of MatrixOne","text":"<p>Currently there are a number of dedicated NoSQL time series databases in the industry, such as InfluxDB, OpenTSDB, TDEngine, etc., and MatrixOne differs from them in that MatrixOne is still a general purpose database to meet the application development of additions, deletions, changes and data analysis of HTAP as the core, but also remains a modeling form of relational data, the query language used is still the classic SQL language, MatrixOne is to add some time series related capabilities to the general purpose database capabilities, positioning somewhat similar to TimeScaleDB. MatrixOne functionally supports time windows, downsampling, interpolation, partitioning and other time series common capabilities, performance can meet the high throughput, high compression, real-time analysis in time series scenarios, while the overall architecture of strong scalability, hot and cold separation, read and write separation and other features are also ideal for time series related scenarios, while maintaining traditional database support for updates, transactions. Therefore, MatrixOne is better suited for business development that requires a normal relational database, but at the same time has hybrid scenarios that require some timing processing power.</p> <p>MatrixOne's timing capabilities are reflected in:</p> <ul> <li>Supports string, number, date and other data types common in traditional databases, but also supports JSON, vector and other types of new types of load, see data types for details.</li> <li>Supports the creation of dedicated timing tables with timestamps as the primary key and arbitrary dimension/indicator columns as detailed in the time window.</li> <li>Provides common time window capabilities to downsample queries at different times, as detailed in Time Window.</li> <li>Supports interpolation capability for null values and provides interpolation methods for different policies, as detailed in the time window.</li> <li>Supports simple and complex query capabilities in a variety of traditional databases. Details can be found in Single Table Query, Multi Table Query, Sub Query, View, CTE.</li> <li>Supports high speed offline import, streaming data write, Insert into write and other ways.</li> <li>Various types of aggregate functions are supported to satisfy the computation of time series data types.</li> </ul>"},{"location":"MatrixOne/Overview/feature/udf/","title":"User Defined Function UDF","text":"<p>You can write user-defined functions (UDFs) to extend the system to do things that the built-in system-defined functions provided by MatrixOne cannot, and you can reuse the UDF several times after you create it.</p>"},{"location":"MatrixOne/Overview/feature/udf/#what-is-udf","title":"What is UDF?","text":"<p>In database management systems, user-defined functions (UDFs) are powerful features that allow users to create custom functions based on specific needs. These functions can be used to perform complex calculations, data conversions, and other functions that may be outside the scope of standard SQL functions.</p>"},{"location":"MatrixOne/Overview/feature/udf/#core-competencies-of-udf","title":"Core competencies of UDF","text":"<ul> <li>Enhanced data processing capabilities: Complex mathematical operations on data, such as advanced statistical analysis or financial model calculations, often exceed the capabilities of standard SQL functions. By creating a UDF, you can perform these complex operations inside the database without exporting the data to an external program for processing.</li> <li>Simplify complex queries: A complex query operation that requires frequent execution can be encapsulated in UDF, simplifying SQL queries and making them clearer and easier to manage.</li> <li>Improve code reuse and maintenance: The same data processing logic may need to be performed in different query and database applications. By creating a UDF, you can reuse the same function wherever that logic is needed, which helps maintain consistency and reduces duplicate code.</li> <li>Optimize performance: Certain types of operations, such as string processing or complex conditional judgments, may be more efficient if implemented at the database level through UDF than at the application layer, as this reduces the burden of data transmission across the network and processing at the application layer.</li> <li>Customization and flexibility: Specific business needs, such as currency conversion, tax calculation, or special date-time processing, may not have a direct corresponding function in standard SQL. With UDF, you can customize these features to your business needs.</li> <li>Cross-platform compatibility: Many database systems support similar UDF creation and execution logic. This means that UDFs developed in one database system, with minor modifications, may be available in another system, increasing the portability of the code.</li> </ul>"},{"location":"MatrixOne/Overview/feature/udf/#matrixone-support-for-udf","title":"MatrixOne support for UDF","text":"<p>In the current release, MatrixOne supports UDF using the Python language.</p> <p>For the base usage of UDF-python in MatrixOne, see UDF-python base usage.</p> <p>For advanced usage of UDF-python in MatrixOne, see UDF-python advanced usage.</p> <p>For specific parameters that MatrixOne creates for UDFs, see Creating UDFs.</p> <p>For specific parameters for MatrixOne deletion of UDFs, see Removing UDFs.</p>"},{"location":"MatrixOne/Overview/matrixone-vs-other_databases/matrixone-positioning%20/","title":"Positioning of MatrixOne","text":"<p>Among the large and complex data technology stack and various database products, MatrixOne is positioned as a SQL relational database focused on one-stop convergence and flexible scalability. MatrixOne was designed to provide a database product with a user experience as simple as MySQL that can handle a variety of business loads and data types, including OLTP and OLAP, while being aware of user load and data volume changesAutomating rapid elastic scaling to simplify the user's current complex multi-database product+ETL legacy data architecture.</p> <p>The database product closest to MatrixOne among the industry's existing database offerings is SingleStore, both of which use a unified storage model that supports the convergence of OLTP, OLAP, and a host of other data loads and data types, while also both having cloud native and flexible scalability as their core architectural capabilities.</p> <p></p> <ul> <li> <p>Architecturally, MatrixOne is a fully cloud-native and containerized database. MatrixOne draws on Snowflake's computational separation design for cloud-native data warehouses, completely handing over storage to shared storage on the cloud, while fully building the compute layer into a stateless container. At the same time, to accommodate the processing of fast write requests by OLTP-type loads, MatrixOne adds the concepts of TN and LogService to support high-frequency writes with block storage, ensures high availability of write log WALs with Raft triple copy consistency guarantee, and asynchronously drops WALs into shared storage. Unlike SingleStore, which extends from the Share-nothing architecture to cloud-native memory separation, it only puts cold data in shared storage (see SingleStore architecture paper) and still requires data fragmentation and rebalancing. MatrixOne, on the other hand, is consistent with Snowflake and is entirely based on shared storage without any data fragmentation.</p> </li> <li> <p>In terms of load types, MatrixOne uses HTAP as its basic core and gradually expands into a variety of load types such as stream computing, timing processing, machine learning, and search. On HTAP's technical route, MatrixOne differs from the TiDB-based dual storage and compute engine route in that MatrixOne implements HTAP directly on a single storage and compute engine, and the storage engine is also a disk drop-row-row-row-row-row-row-row-only architecture, which is also more consistent with SingleStore. Technical routes such as TiDB require internal dual-engine data synchronization, while TP and AP data need to be stored separately, while MatrixOne does not need to do this synchronization and multiple storage. Compared to SingleStore, which already has good support for a variety of business types other than HTAP for streaming computing, search, GIS, machine learning, etc., MatrixOne itself evolved late and is currently less well supported for other load types other than HTAP.</p> </li> <li>Experience-wise, MatrixOne has MySQL as its core compatibility goal, including full MySQL compatibility from transport protocols, SQL syntax, and basic functionality. MatrixOne only has its own unique syntax on capabilities that MySQL does not support, such as streaming writes, vector types, etc. Meanwhile MySQL has some advanced capabilities such as triggers, stored procedures, etc. MatrixOne is not yet supported due to low user usage. In general, MySQL-based applications can be migrated to MatrixOne very easily, while MySQL eco-related tools such as Navicat, DBeaver and other visual management and modeling tools, DataX, Kettle and other ETL tools, as well as Spark, Flink and other computing engines, can be used directly with MySQL-related connectors to interface with MatrixOne.</li> </ul>"},{"location":"MatrixOne/Overview/matrixone-vs-other_databases/matrixone-vs-oltp/","title":"MatrixOne versus common OLTP databases","text":""},{"location":"MatrixOne/Overview/matrixone-vs-other_databases/matrixone-vs-oltp/#general-oltp-database-features","title":"General OLTP Database Features","text":"<p>OLTP refers to a business transaction-oriented database management system. The OLTP database is used to process a large number of short-term transactions, which are typically routine business operations such as order processing, inventory management, banking transactions, etc. It provides high concurrency performance and real-time data processing to meet the needs of enterprises for instant data access.</p> <p>The main features of an OLTP database are as follows:</p> <ul> <li>ACID: The OLTP system must ensure that the entire transaction is properly logged. Transactions typically involve the execution of programs that perform multiple steps or operations. It may be done when all interested parties confirm a transaction, deliver a product/service, or make a certain number of updates to a particular table in the database. Transactions are only properly documented when all steps involved are performed and documented. If there are any errors in any one step, the entire transaction must be aborted and all steps removed from the system. Therefore, OLTP systems must comply with Atomicity, Consistency, Isolation, and Persistence (ACID) to ensure the accuracy of data in the system.</li> <li>High Concurrency: The user base of OLTP systems can be very large, with many users attempting to access the same data simultaneously. The system must ensure that all users attempting to read or write to the system can do so simultaneously. Concurrency control ensures that two users accessing the same data in a database system at the same time will not be able to change that data, or that one user will have to wait for another user to complete processing before changing the data.</li> <li>High availability: OLTP systems must always be available and ready to accept transactions. Failure to process a transaction may result in loss of revenue or legal implications. Transactions can be executed anywhere in the world at any time, so the system must be available 24/7.</li> <li> <p>Fine-grained data access: OLTP databases, which typically provide data access in units of records, support efficient add, delete, and change operations and provide fast transaction commit and rollback capabilities.</p> </li> <li> <p>High reliability: OLTP systems must be resilient in the event of any hardware or software failure.</p> </li> </ul>"},{"location":"MatrixOne/Overview/matrixone-vs-other_databases/matrixone-vs-oltp/#classification-of-oltp-systems-in-the-current-industry","title":"Classification of OLTP systems in the current industry","text":"<p>OLTP databases can also be divided into centralized databases, distributed databases, and cloud-native databases depending on the architecture and technical route.</p> <ul> <li>Most well-known OLTP databases are traditional centralized databases such as Oracle, Microsoft SQL Server, MySQL, PostgreSQL, DB2, etc. Most were born between 1980 and 2000.</li> <li>Typical of Google's 2012 Spanner, the distributed OLTP database uses Share-nothing as the architecture core, scaling through multi-machine data slicing and computing, and distributed consistency through consistency protocols. This architecture is also referred to by many in the industry as NewSQL architecture, representing products such as CockroachDB, SAP HANA, TiDB, Oceanbase, etc.</li> <li>There is also a technical route known as cloud-native OLTP databases such as Aurora, PolarDB, NeonDB, etc. Significantly different from the Share-nothing architecture is the adoption of a shared storage architecture with a more thorough separation of memory and scalability through storage systems with their own scalability in cloud computing systems. MatrixOne is also a cloud-native technology route.</li> </ul> <p>It is worth noting that there are no strict dividing criteria for these three classifications, and each database has gradually begun to integrate the capabilities of other route products as it has evolved in practice. Oracle's RAC architecture, for example, is a typical shared storage architecture with some scalability. Products like CockroachDB and TiDB are also evolving toward cloud-native and shared storage. In practice, OLTP is the most widely needed database scenario, and products along all three technical routes are also used by a large number of users.</p>"},{"location":"MatrixOne/Overview/matrixone-vs-other_databases/matrixone-vs-oltp/#oltp-features-of-matrixone","title":"OLTP Features of MatrixOne","text":"<p>The basic capabilities of MatrixOne meet the characteristics of a typical OLTP database.</p> <ul> <li>Data manipulation and ACID features: MatrixOne supports row-level addition, deletion, and lookup operations, and has transaction capabilities with ACID features. For a detailed description of the capabilities, refer to MatrixOne's transaction description.</li> <li>High Concurrency: MatrixOne can support highly concurrent business requests, reaching a concurrency level of tens of thousands of tpmC in industry-wide TPC-C testing for OLTP, while also increasing based on node expansion.</li> <li>High Availability: MatrixOne itself is based on Kubernetes and shared storage, and has proven scenarios in cloud environments to ensure high availability of both of these underlying components. The design of MatrixOne itself also takes into account the availability and failure recovery mechanisms of each of its components. Details can be found in the highly available introduction to MatrixOne.</li> </ul> <p>As shown in the figure above, MatrixOne belongs to the cloud-native technology route in terms of architectural and technical route classification and is closer to Aurora. The biggest advantage over the Share-nothing architecture is that both storage and compute can be used on demand once storage computing is separated.</p> <p>There are two differences from Aurora:</p> <ul> <li>Aurora exposes the write node to the user layer, where users can only write from a single node. MatrixOne, on the other hand, hides write processing from the internal TN and LogService, allowing all CN nodes to read and write for users.</li> <li>Aurora's shared storage still heavily employs block storage as primary storage and object storage only as backup data storage. MatrixOne, on the other hand, stores objects directly as primary storage for a full amount of data.</li> </ul> <p>Of course, MatrixOne isn't limited to OLTP capabilities, and MatrixOne's ability to accommodate other loads is significantly different from Aurora's positioning.</p> <p></p>"},{"location":"MatrixOne/Overview/matrixone-vs-other_databases/matrixone-vs-oltp/#matrixone-versus-mysql","title":"MatrixOne versus MySQL","text":"<p>Since MatrixOne's primary goal is to be compatible with MySQL, MySQL itself is the world's most popular open source database. A large portion of MatrixOne's users are migrated from open source MySQL to MatrixOne, so here we compare MatrixOne to MySQL in detail.</p> MySQL MatrixOne Versions 8.0.37 Latest Version License GPL License 2.0 Apache License 2.0 Architecture Centralized Databases Distributed Cloud-Native Databases Load Types OLTP, Analytical loads rely on enterprise version of Heatwave HTAP, Time-Series Storage Formats Row Stores Column Stores Storage Engines InnoDB/MyIsam TAE Interaction SQL SQL Deployment Mode Standalone Deployment/Master-Slave Deployment Standalone Deployment/Master-Slave Deployment/Distributed Deployment/K8s Deployment Horizontal Scalability Dependent on Split Database and Split Table Middleware Natural Support Affair capacity Pessimistic transactions/optimistic transactions + ANSI 4 isolation levels (InnoDB Engine) Pessimistic Service/Optimistic Service + RC/SI Data Types Base Numeric, TimeDate, Character, JSON, Space Base Numeric, TimeDate, Character, JSON, Vector Indexes and Constraints Primary key, Secondary key, Unique key, Foreign key Primary key, Secondary key, Unique key, Foreign key Access Control RBAC-Based RBAC-Based Window Functions Base Window Functions Base Window Functions, Time Sliding Window Advanced SQL Capabilities Triggers, Stored Procedures Unsupported Streaming Computing Not Supported Streaming Writes/kafka Connector/Dynamic Tables UDF UDF for SQL and C UDF for SQL and Python Multi-tenancy Not Supported Supported Data Sharing Not Supported Support for Inter-tenant Data Sharing Programming Languages Most Languages Java, Python, Golang Connector and ORM Basic Support Common Visualization Management Tools Navicat, DBeaver, MySQL Workbench, DataGrip, HeidiSQL, etc. Consistent with MySQL Backup Tools Logical Backup, Physical Backup Logical Backup, Physical Backup, Snapshot Backup CDC Competencies Yes No OLTP Performance Standalone excellent, non-scalable Standalone good, scalable OLAP Performance Poor Excellent, Scalable High Volume Write Performance Poor Excellent, Scalable Storage Space Limited to Disk Unlimited Expansion <p>Additional details can be found in MatrixOne's MySQL compatibility details.</p> <p>Overall, MatrixOne is a highly MySQL-compatible cloud-native HTAP database that works seamlessly with most MySQL-based applications. At the same time, MatrixOne naturally has great scalability and the ability to support other types of business loads. In addition, based on MatrixOne's memory separation and multi-tenancy features, users have the flexibility to design their application architecture with MatrixOne as a one-stop shop for load isolation issues previously addressed by applications, middleware, or other databases.</p> <p>For MySQL users, MatrixOne is a more appropriate option if they experience bottlenecks with:</p> <ul> <li>Single-table data reaches more than 10 million levels, and query performance slows down, requiring table-splitting operations.</li> <li>The overall amount of data exceeds the terabyte level and MySQL needs to configure very expensive physical machines.</li> <li>Need to do multi-table association classes, or aggregate analysis queries for larger single tables.</li> <li>Requires large-scale real-time data writes, such as millions of pieces of data per second.</li> <li>Need to do multi-tenant design at the application level, such as SaaS scenarios.</li> <li>need to scale vertically on a regular basis as business application load changes.</li> <li>Requires constant data transfer and collaboration.</li> <li>It needs to be integrated into the K8s environment with the application framework to reduce operational complexity.</li> <li>Need to do streaming data processing such as real-time data writing and processing.</li> <li>Vector data needs to be stored and searched.</li> </ul> <p>In MatrixOne's technical blog, we also have more articles for reference on MySQL vs. MatrixOne and migration.</p> <p>Comprehensive Comparison of MatrixOne and MySQL--Deployment Article</p> <p>Comprehensive Comparison of MatrixOne and MySQL--Multitenant Articles</p> <p>Comprehensive Comparison of MatrixOne and MySQL--Migration Article</p>"},{"location":"MatrixOne/Performance-Tuning/performance-tuning-overview/","title":"SQL Performance Tuning Methods Overview","text":"<p>SQL performance tuning optimizes database queries and operations to improve performance and response time. Several standard performance tuning methods include:</p> <ul> <li> <p>Index optimization: Indexes can speed up queries and improve database performance. By using the correct index type, selecting the right index columns, avoiding excessive indexing, and regularly rebuilding indexes, you can maximize the use of indexes to improve performance.</p> </li> <li> <p>Query optimization: By optimizing the structure of queries, avoiding unnecessary subqueries, using more efficient JOIN statements, and avoiding using OR operators, you can reduce the time and resources required for queries.</p> </li> <li> <p>Table structure optimization: Optimizing table structure, such as selecting the correct data types, avoiding NULL values, using appropriate constraints and default values, normalization, and denormalization, can reduce storage space and query time.</p> </li> <li> <p>Data volume control: By limiting the amount of data returned, paging, caching, using stored procedures, and other methods, you can reduce the time and resources required for queries.</p> </li> <li> <p>Server configuration optimization: By increasing server memory, adjusting database parameters, regularly cleaning logs and caches, and other methods, you can improve database performance and response time.</p> </li> <li> <p>Monitoring and debugging: Using database performance monitoring tools, debugging SQL queries, viewing database logs and error messages, and other methods can help identify and resolve performance issues.</p> </li> </ul> <p>It should be noted that SQL performance tuning is a complex process that requires comprehensive consideration of multiple factors such as database structure, data volume, and query patterns. Continuous testing and validation of optimization results are also necessary to ultimately improve database performance and response time.</p> <p>When executing SQL statements in MatrixOne, the system automatically plans and selects the optimal execution plan rather than simply querying according to the SQL statements. Currently, MatrixOne supports performance tuning through EXPLAIN interpretation of the execution plan and optimizing the physical arrangement of tables. To help you better tune SQL queries in MatrixOne, you can refer to the following documents on execution plans:</p> <ul> <li>MatrixOne Query Execution Plan Overview: Describes the concepts of MatrixOne execution plans.</li> <li>Using EXPLAIN to learn the execution plan: Describes how to use the EXPLAIN statement to understand how MatrixOne executes a query.</li> <li>Performance Tuning Best Practices: Describes the best practices of using Cluster by in MatrixOne for performance tuning and learning how to improve query performance.</li> </ul>"},{"location":"MatrixOne/Performance-Tuning/control-execution-plan/optimizer-hints/","title":"Optimizer Hints","text":"<p>When you determine the problems in the execution plan, such as when the optimizer chooses a query plan that is not optimal, you can use Optimizer Hints to control the generation of the execution plan.</p> <p>The <code>Hint</code> hint command tells the query optimizer how to execute the query statement. By using hints, you can provide queries with information about how to access data to improve query performance. The <code>Hint</code> hint directive often tunes large or complex queries.</p> <p>Hints can be used to modify the execution plan of a query, including choosing a different index, using a different <code>JOIN</code> algorithm, changing the join order, etc. </p> <p>Hints in SQL use comment syntax, and specific comments can be added to query statements to specify hints.</p>"},{"location":"MatrixOne/Performance-Tuning/control-execution-plan/optimizer-hints/#syntax","title":"Syntax","text":"<pre><code>{DELETE|INSERT|SELECT|UPDATE} /*+ hint [text] [hint[text]]... */\n</code></pre>"},{"location":"MatrixOne/Performance-Tuning/control-execution-plan/optimizer-hints/#explanations","title":"Explanations","text":"<ul> <li> <p><code>DELETE</code>, <code>INSERT</code>, <code>SELECT</code>, <code>UPDATE</code> are keywords of SQL statements.</p> </li> <li> <p><code>/*+ */</code> is a comment symbol in the SQL statement.</p> </li> <li> <p><code>hint</code> is the specific instruction for hinting.</p> </li> <li> <p><code>text</code> is the argument to the prompt command.</p> </li> </ul> <p>Here are some commonly used SQL hints:</p> <p><code>/*+ INDEX (table index) */</code>: Specifies to use a specific index to execute the query.</p> <p><code>/*+ FULL (table) */</code>: Specifies to perform a full table scan instead of using an index.</p>"},{"location":"MatrixOne/Performance-Tuning/control-execution-plan/optimizer-hints/#scenarios","title":"Scenarios","text":"<ul> <li> <p>When the query optimizer chooses an inappropriate execution plan, you can use the <code>hint</code> hint to specify a better execution plan. For example, when a query involves multiple tables, the optimizer may choose the wrong join algorithm or join order, resulting in degraded query performance. In this case, hints can be used to specify a better join algorithm or join order.</p> </li> <li> <p>When a query contains complex subqueries or aggregate functions, the <code>hint</code> hint can be used to optimize the execution plan of the query. Because the optimizer cannot analyze complex subqueries or aggregate functions, it may choose the wrong execution plan, resulting in degraded query performance.</p> </li> <li> <p>When the amount of data accessed by the query is vast, the <code>hint</code> hint can be used to optimize the query execution plan. In this case, hints can be used to specify the use of a specific index or join algorithm to improve query performance.</p> </li> </ul> <p>MatrixOne supports the use of <code>hint</code> hints to choose between full table scans or index scans and to optimize the order of multi-table joins.</p> <ul> <li>Select full table scan or use index scan:</li> </ul> <p>An index scan can speed up queries, but in some cases, a full table scan might be faster than an index scan. For example, using indexes can become slow when query conditions are too broad. In this case, the following hint syntax can be used to choose to use a full table scan or an index scan:</p> <pre><code>SELECT /*+ INDEX(table_name index_name) */ column_name FROM table_name WHERE ...\n</code></pre> <p>Among them, table_name is the table name, index_name is the index name, and column_name is the column name. If an index name is specified, the query will scan that index. The query will use a full table scan if no index name is specified.</p> <ul> <li>Optimize the order of multi-table joins:</li> </ul> <p>When a query involves multiple tables, the query optimizer will try to choose the optimal join order. However, in some cases, the optimizer may be unable to select the optimal join order, resulting in degraded query performance. In this case, the following hint syntax can be used to optimize the order of multi-table joins:</p> <pre><code>SELECT /*+ ORDERED */ column_name FROM table1, table2 WHERE table1.column1 = table2.column2;\n</code></pre> <p>Among them, ORDERED specifies that the query should be connected in the order of the tables, that is, connect table1 first and then join table2. This prevents the optimizer from choosing the wrong join order, improving query performance.</p>"},{"location":"MatrixOne/Performance-Tuning/control-execution-plan/optimizer-hints/#example","title":"Example","text":"<pre><code>-- Create a new table called orders\nCREATE TABLE order (\norder_id INT PRIMARY KEY,\ncustomer_id INT,\norder_date DATE,\norder_total DECIMAL(10, 2)\n);\n-- insert datas\nINSERT INTO order (order_id, customer_id, order_date, order_total)\nVALUES\n(1, 101, '2022-05-10', 100.00),\n(2, 102, '2022-05-09', 150.00),\n(3, 103, '2022-05-08', 200.00),\n(4, 104, '2022-05-07', 50.00);\n-- Query all orders of a customer and sort them in descending order by order date\nSELECT order_id, order_date, order_total\nFROM orders\nWHERE customer_id = 123\nORDER BY order_date DESC;\n</code></pre> <p>To optimize this query, we can use the following <code>hint</code> hints:</p> <pre><code>-- Execute the query using an index called idx_customer_id created on the customer_id field\nSELECT /*+ INDEX(orders idx_customer_id) */ order_id, order_date, order_total\nFROM orders\nWHERE customer_id = 123\nORDER BY order_date DESC;\n</code></pre>"},{"location":"MatrixOne/Performance-Tuning/control-execution-plan/optimizer-hints/#constraints","title":"Constraints","text":"<p>Currently <code>/*+ HINT_NAME(t1, t2) */</code> only implements the syntax, and cannot control the execution plan for now.</p>"},{"location":"MatrixOne/Performance-Tuning/explain/explain-aggregation/","title":"Explain Statements Using Aggregation","text":"<p>The aggregation may be used in SQL, and the execution plan of the aggregate query can be interpreted through <code>EXPLAIN</code> statements.</p>"},{"location":"MatrixOne/Performance-Tuning/explain/explain-aggregation/#example","title":"Example","text":"<p>We have prepared a simple example to help you understand the execution plan for interpreting the <code>Aggregation</code> using <code>EXPLAIN</code>.</p> <pre><code>&gt; drop table if exists t1;\n&gt; create table t1 (id int,ti tinyint unsigned,si smallint,bi bigint unsigned,fl float,dl double,de decimal,ch char(20),vch varchar(20),dd date,dt datetime);\n&gt; insert into t1 values(1,1,4,3,1113.32,111332,1113.32,'hello','subquery','2022-04-28','2022-04-28 22:40:11');\n&gt; insert into t1 values(2,2,5,2,2252.05,225205,2252.05,'bye','sub query','2022-04-28','2022-04-28 22:40:11');\n&gt; insert into t1 values(3,6,6,3,3663.21,366321,3663.21,'hi','subquery','2022-04-28','2022-04-28 22:40:11');\n&gt; insert into t1 values(4,7,1,5,4715.22,471522,4715.22,'good morning','my subquery','2022-04-28','2022-04-28 22:40:11');\n&gt; insert into t1 values(5,1,2,6,51.26,5126,51.26,'byebye',' is subquery?','2022-04-28','2022-04-28 22:40:11');\n&gt; insert into t1 values(6,3,2,1,632.1,6321,632.11,'good night','maybe subquery','2022-04-28','2022-04-28 22:40:11');\n&gt; insert into t1 values(7,4,4,3,7443.11,744311,7443.11,'yes','subquery','2022-04-28','2022-04-28 22:40:11');\n&gt; insert into t1 values(8,7,5,8,8758.00,875800,8758.11,'nice to meet','just subquery','2022-04-28','2022-04-28 22:40:11');\n&gt; insert into t1 values(9,8,4,9,9849.312,9849312,9849.312,'see you','subquery','2022-04-28','2022-04-28 22:40:11');\n</code></pre>"},{"location":"MatrixOne/Performance-Tuning/explain/explain-aggregation/#hash-aggregation","title":"Hash Aggregation","text":"<p>The Hash Aggregation algorithm uses a hash table to store intermediate results while performing aggregation. It executes in parallel using multiple threads but consumes more memory than Stream Aggregation.</p> <p>The following is an example of the Hash Aggregation operator:</p> <pre><code>&gt; SELECT /*+ HASH_AGG() */ count(*) FROM t1;\n+----------+\n| count(*) |\n+----------+\n|        9 |\n+----------+\n1 row in set (0.01 sec)\n\nmysql&gt; EXPLAIN SELECT /*+ HASH_AGG() */ count(*) FROM t1;\n+-------------------------------------------+\n| QUERY PLAN                                |\n+-------------------------------------------+\n| Project                                   |\n|   -&gt;  Aggregate                           |\n|         Aggregate Functions: starcount(1) |\n|         -&gt;  Table Scan on db1.t1          |\n+-------------------------------------------+\n4 rows in set (0.01 sec)\n</code></pre>"},{"location":"MatrixOne/Performance-Tuning/explain/explain-joins/","title":"Explain Statements Using JOIN","text":"<p>The SQL Optimizer needs to decide in which order tables should be joined and what is the most efficient join algorithm for a particular SQL statement.</p>"},{"location":"MatrixOne/Performance-Tuning/explain/explain-joins/#example","title":"Example","text":"<p>We have prepared a simple example to help you understand the execution plan for interpreting the <code>JOIN</code> using <code>EXPLAIN</code>.</p> <pre><code>&gt; drop table if exists t1;\n&gt; create table t1 (id int,ti tinyint unsigned,si smallint,bi bigint unsigned,fl float,dl double,de decimal,ch char(20),vch varchar(20),dd date,dt datetime);\n&gt; insert into t1 values(1,1,4,3,1113.32,111332,1113.32,'hello','subquery','2022-04-28','2022-04-28 22:40:11');\n&gt; insert into t1 values(2,2,5,2,2252.05,225205,2252.05,'bye','sub query','2022-04-28','2022-04-28 22:40:11');\n&gt; insert into t1 values(3,6,6,3,3663.21,366321,3663.21,'hi','subquery','2022-04-28','2022-04-28 22:40:11');\n&gt; insert into t1 values(4,7,1,5,4715.22,471522,4715.22,'good morning','my subquery','2022-04-28','2022-04-28 22:40:11');\n&gt; insert into t1 values(5,1,2,6,51.26,5126,51.26,'byebye',' is subquery?','2022-04-28','2022-04-28 22:40:11');\n&gt; insert into t1 values(6,3,2,1,632.1,6321,632.11,'good night','maybe subquery','2022-04-28','2022-04-28 22:40:11');\n&gt; insert into t1 values(7,4,4,3,7443.11,744311,7443.11,'yes','subquery','2022-04-28','2022-04-28 22:40:11');\n&gt; insert into t1 values(8,7,5,8,8758.00,875800,8758.11,'nice to meet','just subquery','2022-04-28','2022-04-28 22:40:11');\n&gt; insert into t1 values(9,8,4,9,9849.312,9849312,9849.312,'see you','subquery','2022-04-28','2022-04-28 22:40:11');\n\n&gt; drop table if exists t2;\n&gt; create table t2 (id int,ti tinyint unsigned,si smallint,bi bigint unsigned,fl float,dl double,de decimal,ch char(20),vch varchar(20),dd date,dt datetime);\n&gt; insert into t2 values(1,1,4,3,1113.32,111332,1113.32,'hello','subquery','2022-04-28','2022-04-28 22:40:11');\n&gt; insert into t2 values(2,2,5,2,2252.05,225205,2252.05,'bye','sub query','2022-04-28','2022-04-28 22:40:11');\n&gt; insert into t2 values(3,6,6,3,3663.21,366321,3663.21,'hi','subquery','2022-04-28','2022-04-28 22:40:11');\n&gt; insert into t2 values(4,7,1,5,4715.22,471522,4715.22,'good morning','my subquery','2022-04-28','2022-04-28 22:40:11');\n&gt; insert into t2 values(5,1,2,6,51.26,5126,51.26,'byebye',' is subquery?','2022-04-28','2022-04-28 22:40:11');\n&gt; insert into t2 values(6,3,2,1,632.1,6321,632.11,'good night','maybe subquery','2022-04-28','2022-04-28 22:40:11');\n&gt; insert into t2 values(7,4,4,3,7443.11,744311,7443.11,'yes','subquery','2022-04-28','2022-04-28 22:40:11');\n&gt; insert into t2 values(8,7,5,8,8758.00,875800,8758.11,'nice to meet','just subquery','2022-04-28','2022-04-28 22:40:11');\n&gt; insert into t2 values(9,8,4,9,9849.312,9849312,9849.312,'see you','subquery','2022-04-28','2022-04-28 22:40:11');\n</code></pre>"},{"location":"MatrixOne/Performance-Tuning/explain/explain-joins/#hash-join","title":"Hash Join","text":"<p>In the <code>Hash Join</code> operation, MatrixOne first reads the smaller tables in t1 and t2 and uses a hash function for each value to be joined to obtain a hash table. Then each row of the other table is scanned, and the hash value is calculated and compared with the hash table generated in the previous step. A new join table is generated based on the joinif any values meet the join criteria.</p> <p>The hash join operator is multi-threaded in MatrixOne and executes in parallel.</p> <p>An example of hash join is as below:</p> <pre><code>&gt; SELECT /*+ HASH_JOIN(t1, t2) */ * FROM t1, t2 WHERE t1.id = t2.id;\n+------+------+------+------+----------+---------+------+--------------+----------------+------------+---------------------+------+------+------+------+----------+---------+------+--------------+----------------+------------+---------------------+\n| id   | ti   | si   | bi   | fl       | dl      | de   | ch           | vch            | dd         | dt                  | id   | ti   | si   | bi   | fl       | dl      | de   | ch           | vch            | dd         | dt                  |\n+------+------+------+------+----------+---------+------+--------------+----------------+------------+---------------------+------+------+------+------+----------+---------+------+--------------+----------------+------------+---------------------+\n|    1 |    1 |    4 |    3 |  1113.32 |  111332 | 1113 | hello        | subquery       | 2022-04-28 | 2022-04-28 22:40:11 |    1 |    1 |    4 |    3 |  1113.32 |  111332 | 1113 | hello        | subquery       | 2022-04-28 | 2022-04-28 22:40:11 |\n|    2 |    2 |    5 |    2 |  2252.05 |  225205 | 2252 | bye          | sub query      | 2022-04-28 | 2022-04-28 22:40:11 |    2 |    2 |    5 |    2 |  2252.05 |  225205 | 2252 | bye          | sub query      | 2022-04-28 | 2022-04-28 22:40:11 |\n|    3 |    6 |    6 |    3 |  3663.21 |  366321 | 3663 | hi           | subquery       | 2022-04-28 | 2022-04-28 22:40:11 |    3 |    6 |    6 |    3 |  3663.21 |  366321 | 3663 | hi           | subquery       | 2022-04-28 | 2022-04-28 22:40:11 |\n|    4 |    7 |    1 |    5 |  4715.22 |  471522 | 4715 | good morning | my subquery    | 2022-04-28 | 2022-04-28 22:40:11 |    4 |    7 |    1 |    5 |  4715.22 |  471522 | 4715 | good morning | my subquery    | 2022-04-28 | 2022-04-28 22:40:11 |\n|    5 |    1 |    2 |    6 |    51.26 |    5126 |   51 | byebye       |  is subquery?  | 2022-04-28 | 2022-04-28 22:40:11 |    5 |    1 |    2 |    6 |    51.26 |    5126 |   51 | byebye       |  is subquery?  | 2022-04-28 | 2022-04-28 22:40:11 |\n|    6 |    3 |    2 |    1 |    632.1 |    6321 |  632 | good night   | maybe subquery | 2022-04-28 | 2022-04-28 22:40:11 |    6 |    3 |    2 |    1 |    632.1 |    6321 |  632 | good night   | maybe subquery | 2022-04-28 | 2022-04-28 22:40:11 |\n|    7 |    4 |    4 |    3 |  7443.11 |  744311 | 7443 | yes          | subquery       | 2022-04-28 | 2022-04-28 22:40:11 |    7 |    4 |    4 |    3 |  7443.11 |  744311 | 7443 | yes          | subquery       | 2022-04-28 | 2022-04-28 22:40:11 |\n|    8 |    7 |    5 |    8 |     8758 |  875800 | 8758 | nice to meet | just subquery  | 2022-04-28 | 2022-04-28 22:40:11 |    8 |    7 |    5 |    8 |     8758 |  875800 | 8758 | nice to meet | just subquery  | 2022-04-28 | 2022-04-28 22:40:11 |\n|    9 |    8 |    4 |    9 | 9849.312 | 9849312 | 9849 | see you      | subquery       | 2022-04-28 | 2022-04-28 22:40:11 |    9 |    8 |    4 |    9 | 9849.312 | 9849312 | 9849 | see you      | subquery       | 2022-04-28 | 2022-04-28 22:40:11 |\n+------+------+------+------+----------+---------+------+--------------+----------------+------------+---------------------+------+------+------+------+----------+---------+------+--------------+----------------+------------+---------------------+\n9 rows in set (0.00 sec)\n\nmysql&gt; EXPLAIN SELECT /*+ HASH_JOIN(t1, t2) */ * FROM t1, t2 WHERE t1.id = t2.id;\n+------------------------------------+\n| QUERY PLAN                         |\n+------------------------------------+\n| Project                            |\n|   -&gt;  Join                         |\n|         Join Type: INNER           |\n|         Join Cond: (t1.id = t2.id) |\n|         -&gt;  Table Scan on db1.t1   |\n|         -&gt;  Table Scan on db1.t2   |\n+------------------------------------+\n6 rows in set (0.01 sec)\n</code></pre> <p>MatrixOne executes the <code>Hash Join</code> operator in the following order:</p> <ol> <li> <p>Scan table t2 and t1 in parallel.</p> </li> <li> <p>Execute the <code>JOIN</code> filter query: <code>(t1.id = t2.id)</code>.</p> </li> <li> <p>Execute <code>INNER JOIN</code>.</p> </li> </ol>"},{"location":"MatrixOne/Performance-Tuning/explain/explain-overview/","title":"MatrixOne Query Execution Plan Overview","text":""},{"location":"MatrixOne/Performance-Tuning/explain/explain-overview/#what-is-query-execution-plan","title":"What is Query Execution Plan?","text":"<p>Execution plan is the specific steps for the database to execute SQL statements, such as accessing data in the table through index or full table scan, connection query implementation method and connection sequence, etc.; the execution plan is based on The details of your tables, columns, indexes, and conditions in the <code>WHERE</code> clause can tell you how the query will be executed or how it has been executed, which can be performed without reading all rows. Huge Queries of tables; joins involving multiple tables can be performed without comparing every combination of rows. If the performance of a SQL statement is not satisfactory, the first thing you should look at is its execution plan. Like most mature database products, MatrixOne database also provides the function of analyzing query statement performance.</p> <p>The MatrixOne query optimizer selects the most efficient execution plan by \"calculating\" the input SQL statement, and this execution plan is the execution plan.</p>"},{"location":"MatrixOne/Performance-Tuning/explain/explain-overview/#use-explain-to-query-the-execution-plan","title":"Use <code>EXPLAIN</code> to query the execution plan","text":"<p>The <code>EXPLAIN</code> statement shows the MatrixOne query execution plan for the SQL statement.</p> <p><code>EXPLAIN</code> works with <code>SELECT</code>, <code>DELETE</code>, <code>INSERT</code>, <code>REPLACE</code>, and <code>UPDATE</code> statements.</p> <p>When <code>EXPLAIN</code> is used with an explainable statement, MatrixOne displays information from the optimizer about the statement execution plan. That is, MatrixOne explains how it would process the statement, including information about how tables are joined and in which order.</p> <p>Note</p> <p>When you use the MatrixOne client to connect to MatrixOne, to read the output result in a clearer way without line wrapping, you can use the <code>pager less -S</code> command. Then, after the <code>EXPLAIN</code> result is output, you can press the right arrow \u2192 button on your keyboard to horizontally scroll through the output.</p>"},{"location":"MatrixOne/Performance-Tuning/explain/explain-overview/#explain-example","title":"EXPLAIN Example","text":"<p>You can see the <code>EXPLAIN</code> example to understand the query execution plan:</p> <p>Data preparation:</p> <pre><code>CREATE TABLE t (id INT NOT NULL PRIMARY KEY auto_increment, a INT NOT NULL, pad1 VARCHAR(255), INDEX(a));\nINSERT INTO t VALUES (1, 1, 'aaa'),(2,2, 'bbb');\nEXPLAIN SELECT * FROM t WHERE a = 1;\n</code></pre> <p>Return result:</p> <pre><code>+------------------------------------------------+\n| QUERY PLAN                                     |\n+------------------------------------------------+\n| Project                                        |\n|   -&gt;  Table Scan on aab.t                      |\n|         Filter Cond: (CAST(t.a AS BIGINT) = 1) |\n+------------------------------------------------+\n</code></pre> <p><code>EXPLAIN</code> does not execute the actual query. <code>EXPLAIN ANALYZE</code> can be used to execute the query and show <code>EXPLAIN</code> information. This can be useful in diagnosing cases where the execution plan selected is suboptimal.</p> <p>EXPLAIN output analysis</p> <ul> <li> <p>QUERY PLAN: the name of an operator.</p> <ul> <li>Filter Cond:Filter conditions</li> <li>Table Scan:scans the table</li> </ul> </li> <li> <p>Project is the parent node of the executive order in the query process. The structure of the Project is tree-like, and the child node \"flows into\" the parent node after the calculation is completed. The parent, child, and sibling nodes may execute parts of the query in parallel.</p> </li> </ul> <p>Range query</p> <p>In the <code>WHERE/HAVING/ON</code> conditions, the MatrixOne optimizer analyzes the result returned by the primary key query. For example, these conditions might include comparison operators of the numeric and date type, such as <code>&gt;</code>, <code>&lt;</code>, <code>=</code>, <code>&gt;=</code>, <code>&lt;=</code>, and the character type such as <code>LIKE</code>.</p>"},{"location":"MatrixOne/Performance-Tuning/explain/explain-subqueries/","title":"Explain Statements Using Subqueries","text":"<p>MatrixOne performs several optimizations to improve the performance of subqueries. This document describes some of these optimizations for common subqueries and how to interpret the output of <code>EXPLAIN</code>.</p> <p>From the execution of SQL statements, subquery generally has the following two types:</p> <ul> <li> <p>Self-contained Subquery: In a database nested query, the inner query is entirely independent of the outer query.</p> <p>For example: <code>select * from t1 where t1.id in (select t2.id from t2 where t2.id&gt;=3);</code>, the execution sequence is as follows:</p> <ul> <li> <p>Execute the inner query first: <code>(select t2.id from t2 where t2.id&gt;=3)</code>.</p> </li> <li> <p>The result of the inner query is carried into the outer layer, and then the outer query is executed.</p> </li> </ul> </li> <li> <p>Correlated Subquery: In Correlated Subquery nested in databases, the inner and outer queries would not be independent, and the inner queries would depend on the outer queries.</p> <p>For example: <code>SELECT * FROM t1 WHERE id in (SELECT id FROM t2 WHERE t1.ti = t2.ti and t2.id&gt;=4);</code>, generally, the execution sequence is as follows:</p> <ul> <li> <p>Queries a record from the outer query: <code>SELECT * FROM t1 WHERE id</code>.</p> </li> <li> <p>Put the queried records into the inner query, then put the records that meet the conditions into the outer query.</p> </li> <li> <p>Repeat the above steps.</p> </li> </ul> <p>However, MatrixOne will rewrite the SQL statement as an equivalent <code>JOIN</code> statement: <code>select t1.* from t1 join t2 on t1.id=t2.id where t2.id&gt;=4;</code></p> </li> </ul>"},{"location":"MatrixOne/Performance-Tuning/explain/explain-subqueries/#example","title":"Example","text":"<p>We have prepared a simple example to help you understand the execution plan for interpreting the <code>SUBQUERY</code> using <code>EXPLAIN</code>.</p> <pre><code>&gt; drop table if exists t1;\n&gt; create table t1 (id int,ti tinyint unsigned,si smallint,bi bigint unsigned,fl float,dl double,de decimal,ch char(20),vch varchar(20),dd date,dt datetime);\n&gt; insert into t1 values(1,1,4,3,1113.32,111332,1113.32,'hello','subquery','2022-04-28','2022-04-28 22:40:11');\n&gt; insert into t1 values(2,2,5,2,2252.05,225205,2252.05,'bye','sub query','2022-04-28','2022-04-28 22:40:11');\n&gt; insert into t1 values(3,6,6,3,3663.21,366321,3663.21,'hi','subquery','2022-04-28','2022-04-28 22:40:11');\n&gt; insert into t1 values(4,7,1,5,4715.22,471522,4715.22,'good morning','my subquery','2022-04-28','2022-04-28 22:40:11');\n&gt; insert into t1 values(5,1,2,6,51.26,5126,51.26,'byebye',' is subquery?','2022-04-28','2022-04-28 22:40:11');\n&gt; insert into t1 values(6,3,2,1,632.1,6321,632.11,'good night','maybe subquery','2022-04-28','2022-04-28 22:40:11');\n&gt; insert into t1 values(7,4,4,3,7443.11,744311,7443.11,'yes','subquery','2022-04-28','2022-04-28 22:40:11');\n&gt; insert into t1 values(8,7,5,8,8758.00,875800,8758.11,'nice to meet','just subquery','2022-04-28','2022-04-28 22:40:11');\n&gt; insert into t1 values(9,8,4,9,9849.312,9849312,9849.312,'see you','subquery','2022-04-28','2022-04-28 22:40:11');\n\n&gt; drop table if exists t2;\n&gt; create table t2 (id int,ti tinyint unsigned,si smallint,bi bigint unsigned,fl float,dl double,de decimal,ch char(20),vch varchar(20),dd date,dt datetime);\n&gt; insert into t2 values(1,1,4,3,1113.32,111332,1113.32,'hello','subquery','2022-04-28','2022-04-28 22:40:11');\n&gt; insert into t2 values(2,2,5,2,2252.05,225205,2252.05,'bye','sub query','2022-04-28','2022-04-28 22:40:11');\n&gt; insert into t2 values(3,6,6,3,3663.21,366321,3663.21,'hi','subquery','2022-04-28','2022-04-28 22:40:11');\n&gt; insert into t2 values(4,7,1,5,4715.22,471522,4715.22,'good morning','my subquery','2022-04-28','2022-04-28 22:40:11');\n&gt; insert into t2 values(5,1,2,6,51.26,5126,51.26,'byebye',' is subquery?','2022-04-28','2022-04-28 22:40:11');\n&gt; insert into t2 values(6,3,2,1,632.1,6321,632.11,'good night','maybe subquery','2022-04-28','2022-04-28 22:40:11');\n&gt; insert into t2 values(7,4,4,3,7443.11,744311,7443.11,'yes','subquery','2022-04-28','2022-04-28 22:40:11');\n&gt; insert into t2 values(8,7,5,8,8758.00,875800,8758.11,'nice to meet','just subquery','2022-04-28','2022-04-28 22:40:11');\n&gt; insert into t2 values(9,8,4,9,9849.312,9849312,9849.312,'see you','subquery','2022-04-28','2022-04-28 22:40:11');\n</code></pre>"},{"location":"MatrixOne/Performance-Tuning/explain/explain-subqueries/#self-contained-subquery","title":"Self-contained Subquery","text":"<pre><code>&gt; select * from t1 where t1.id in (select t2.id from t2 where t2.id&gt;=3);\n+------+------+------+------+----------+---------+------+--------------+----------------+------------+---------------------+\n| id   | ti   | si   | bi   | fl       | dl      | de   | ch           | vch            | dd         | dt                  |\n+------+------+------+------+----------+---------+------+--------------+----------------+------------+---------------------+\n|    3 |    6 |    6 |    3 |  3663.21 |  366321 | 3663 | hi           | subquery       | 2022-04-28 | 2022-04-28 22:40:11 |\n|    4 |    7 |    1 |    5 |  4715.22 |  471522 | 4715 | good morning | my subquery    | 2022-04-28 | 2022-04-28 22:40:11 |\n|    5 |    1 |    2 |    6 |    51.26 |    5126 |   51 | byebye       |  is subquery?  | 2022-04-28 | 2022-04-28 22:40:11 |\n|    6 |    3 |    2 |    1 |    632.1 |    6321 |  632 | good night   | maybe subquery | 2022-04-28 | 2022-04-28 22:40:11 |\n|    7 |    4 |    4 |    3 |  7443.11 |  744311 | 7443 | yes          | subquery       | 2022-04-28 | 2022-04-28 22:40:11 |\n|    8 |    7 |    5 |    8 |     8758 |  875800 | 8758 | nice to meet | just subquery  | 2022-04-28 | 2022-04-28 22:40:11 |\n|    9 |    8 |    4 |    9 | 9849.312 | 9849312 | 9849 | see you      | subquery       | 2022-04-28 | 2022-04-28 22:40:11 |\n+------+------+------+------+----------+---------+------+--------------+----------------+------------+---------------------+\n7 rows in set (0.02 sec)\n\n&gt; explain select * from t1 where t1.id in (select t2.id from t2 where t2.id&gt;=3);\n+---------------------------------------------------------------+\n| QUERY PLAN                                                    |\n+---------------------------------------------------------------+\n| Project                                                       |\n|   -&gt;  Join                                                    |\n|         Join Type: SEMI                                       |\n|         Join Cond: (t1.id = t2.id)                            |\n|         -&gt;  Table Scan on db1.t1                              |\n|         -&gt;  Project                                           |\n|               -&gt;  Table Scan on db1.t2                        |\n|                     Filter Cond: (CAST(t2.id AS BIGINT) &gt;= 3) |\n+---------------------------------------------------------------+\n8 rows in set (0.00 sec)\n</code></pre> <p>The execution sequence is as follows:</p> <ol> <li> <p>Execute the inner query first: <code>(select t2.id from t2 where t2.id&gt;=3)</code>.</p> </li> <li> <p>The result of the inner query is carried into the outer layer, and then the outer query is executed.</p> </li> </ol>"},{"location":"MatrixOne/Performance-Tuning/explain/explain-subqueries/#correlated-subquery","title":"Correlated subquery","text":"<pre><code>&gt; SELECT * FROM t1 WHERE id in (SELECT id FROM t2 WHERE t1.ti = t2.ti and t2.id&gt;=4);\n+------+------+------+------+----------+---------+------+--------------+----------------+------------+---------------------+\n| id   | ti   | si   | bi   | fl       | dl      | de   | ch           | vch            | dd         | dt                  |\n+------+------+------+------+----------+---------+------+--------------+----------------+------------+---------------------+\n|    4 |    7 |    1 |    5 |  4715.22 |  471522 | 4715 | good morning | my subquery    | 2022-04-28 | 2022-04-28 22:40:11 |\n|    5 |    1 |    2 |    6 |    51.26 |    5126 |   51 | byebye       |  is subquery?  | 2022-04-28 | 2022-04-28 22:40:11 |\n|    6 |    3 |    2 |    1 |    632.1 |    6321 |  632 | good night   | maybe subquery | 2022-04-28 | 2022-04-28 22:40:11 |\n|    7 |    4 |    4 |    3 |  7443.11 |  744311 | 7443 | yes          | subquery       | 2022-04-28 | 2022-04-28 22:40:11 |\n|    8 |    7 |    5 |    8 |     8758 |  875800 | 8758 | nice to meet | just subquery  | 2022-04-28 | 2022-04-28 22:40:11 |\n|    9 |    8 |    4 |    9 | 9849.312 | 9849312 | 9849 | see you      | subquery       | 2022-04-28 | 2022-04-28 22:40:11 |\n+------+------+------+------+----------+---------+------+--------------+----------------+------------+---------------------+\n6 rows in set (0.01 sec)\n\nmysql&gt; explain SELECT * FROM t1 WHERE id in (SELECT id FROM t2 WHERE t1.ti = t2.ti and t2.id&gt;=4);\n+---------------------------------------------------------------+\n| QUERY PLAN                                                    |\n+---------------------------------------------------------------+\n| Project                                                       |\n|   -&gt;  Join                                                    |\n|         Join Type: SEMI                                       |\n|         Join Cond: (t1.ti = t2.ti), (t1.id = t2.id)           |\n|         -&gt;  Table Scan on db1.t1                              |\n|         -&gt;  Project                                           |\n|               -&gt;  Table Scan on db1.t2                        |\n|                     Filter Cond: (CAST(t2.id AS BIGINT) &gt;= 4) |\n+---------------------------------------------------------------+\n8 rows in set (0.01 sec)\n</code></pre> <p>MatrixOne will rewrite the SQL statement as an equivalent <code>JOIN</code> statement: <code>select t1.* from t1 join t2 on t1.id=t2.id where t2.id&gt;=4;</code>, the execution sequence is as follows:</p> <ol> <li> <p>Execute the filter query: <code>where t2.id&gt;=4;</code>.</p> </li> <li> <p>Scan Table: <code>Table Scan on db1.t2</code>, and then the result \"flow into\" into the parent node.</p> </li> <li> <p>Scan <code>table table scan on db1.t1</code>.</p> </li> <li> <p>Execute <code>JOIN</code>.</p> </li> </ol>"},{"location":"MatrixOne/Performance-Tuning/explain/explain-views/","title":"EXPLAIN Statements Using Views","text":"<p><code>EXPLAIN</code> displays the tables that a view references, not the name of the view itself. This is because views are only virtual tables and do not store any data themselves. The definition of the view and the rest of the statement are merged together during SQL optimization.</p>"},{"location":"MatrixOne/Performance-Tuning/explain/explain-views/#example","title":"Example","text":"<p>We have prepared a simple example to help you understand the execution plan for interpreting the <code>VIEW</code> using <code>EXPLAIN</code>.</p> <pre><code>&gt; drop table if exists t1;\n&gt; create table t1 (id int,ti tinyint unsigned,si smallint,bi bigint unsigned,fl float,dl double,de decimal,ch char(20),vch varchar(20),dd date,dt datetime);\n&gt; insert into t1 values(1,1,4,3,1113.32,111332,1113.32,'hello','subquery','2022-04-28','2022-04-28 22:40:11');\n&gt; insert into t1 values(2,2,5,2,2252.05,225205,2252.05,'bye','sub query','2022-04-28','2022-04-28 22:40:11');\n&gt; insert into t1 values(3,6,6,3,3663.21,366321,3663.21,'hi','subquery','2022-04-28','2022-04-28 22:40:11');\n&gt; insert into t1 values(4,7,1,5,4715.22,471522,4715.22,'good morning','my subquery','2022-04-28','2022-04-28 22:40:11');\n&gt; insert into t1 values(5,1,2,6,51.26,5126,51.26,'byebye',' is subquery?','2022-04-28','2022-04-28 22:40:11');\n&gt; insert into t1 values(6,3,2,1,632.1,6321,632.11,'good night','maybe subquery','2022-04-28','2022-04-28 22:40:11');\n&gt; insert into t1 values(7,4,4,3,7443.11,744311,7443.11,'yes','subquery','2022-04-28','2022-04-28 22:40:11');\n&gt; insert into t1 values(8,7,5,8,8758.00,875800,8758.11,'nice to meet','just subquery','2022-04-28','2022-04-28 22:40:11');\n&gt; insert into t1 values(9,8,4,9,9849.312,9849312,9849.312,'see you','subquery','2022-04-28','2022-04-28 22:40:11');\n\n&gt; drop table if exists t2;\n&gt; create table t2 (id int,ti tinyint unsigned,si smallint,bi bigint unsigned,fl float,dl double,de decimal,ch char(20),vch varchar(20),dd date,dt datetime);\n&gt; insert into t2 values(1,1,4,3,1113.32,111332,1113.32,'hello','subquery','2022-04-28','2022-04-28 22:40:11');\n&gt; insert into t2 values(2,2,5,2,2252.05,225205,2252.05,'bye','sub query','2022-04-28','2022-04-28 22:40:11');\n&gt; insert into t2 values(3,6,6,3,3663.21,366321,3663.21,'hi','subquery','2022-04-28','2022-04-28 22:40:11');\n&gt; insert into t2 values(4,7,1,5,4715.22,471522,4715.22,'good morning','my subquery','2022-04-28','2022-04-28 22:40:11');\n&gt; insert into t2 values(5,1,2,6,51.26,5126,51.26,'byebye',' is subquery?','2022-04-28','2022-04-28 22:40:11');\n&gt; insert into t2 values(6,3,2,1,632.1,6321,632.11,'good night','maybe subquery','2022-04-28','2022-04-28 22:40:11');\n&gt; insert into t2 values(7,4,4,3,7443.11,744311,7443.11,'yes','subquery','2022-04-28','2022-04-28 22:40:11');\n&gt; insert into t2 values(8,7,5,8,8758.00,875800,8758.11,'nice to meet','just subquery','2022-04-28','2022-04-28 22:40:11');\n&gt; insert into t2 values(9,8,4,9,9849.312,9849312,9849.312,'see you','subquery','2022-04-28','2022-04-28 22:40:11');\n\n&gt; create view v1 as select * from (select * from t1) sub where id &gt; 4;\n&gt; select * from v1;\n+------+------+------+------+----------+---------+------+--------------+----------------+------------+---------------------+\n| id   | ti   | si   | bi   | fl       | dl      | de   | ch           | vch            | dd         | dt                  |\n+------+------+------+------+----------+---------+------+--------------+----------------+------------+---------------------+\n|    5 |    1 |    2 |    6 |    51.26 |    5126 |   51 | byebye       |  is subquery?  | 2022-04-28 | 2022-04-28 22:40:11 |\n|    6 |    3 |    2 |    1 |    632.1 |    6321 |  632 | good night   | maybe subquery | 2022-04-28 | 2022-04-28 22:40:11 |\n|    7 |    4 |    4 |    3 |  7443.11 |  744311 | 7443 | yes          | subquery       | 2022-04-28 | 2022-04-28 22:40:11 |\n|    8 |    7 |    5 |    8 |     8758 |  875800 | 8758 | nice to meet | just subquery  | 2022-04-28 | 2022-04-28 22:40:11 |\n|    9 |    8 |    4 |    9 | 9849.312 | 9849312 | 9849 | see you      | subquery       | 2022-04-28 | 2022-04-28 22:40:11 |\n+------+------+------+------+----------+---------+------+--------------+----------------+------------+---------------------+\n5 rows in set (0.01 sec)\n</code></pre> <p>As shown in the above example, a new VIEW named v1 is created, then query the result of v1. So let's learn the query plan in this <code>VIEW</code>:</p> <pre><code>&gt; explain select * from v1;\n+--------------------------------------------------------------+\n| QUERY PLAN                                                   |\n+--------------------------------------------------------------+\n| Project                                                      |\n|   -&gt;  Project                                                |\n|         -&gt;  Project                                          |\n|               -&gt;  Table Scan on db1.t1                       |\n|                     Filter Cond: (CAST(t1.id AS BIGINT) &gt; 4) |\n+--------------------------------------------------------------+\n5 rows in set (0.00 sec)\n</code></pre> <p>You can see that Project is the parent node in the execution order of this query. It starts from the most indented child node, then \"flows into\" its upper parent node, and finally \"flow into\" the Project parent node.</p> <p>To execute firstly:</p> <ul> <li>Filter Cond: the filter condition</li> </ul> <p>To execute secondly:</p> <ul> <li>Table Scan: scans all tables</li> </ul> <p>The following query is executed similarly to the above:</p> <pre><code>&gt; explain select * from (select * from t1) sub where id &gt; 4;\n+--------------------------------------------------------+\n| QUERY PLAN                                             |\n+--------------------------------------------------------+\n| Project                                                |\n|   -&gt;  Project                                          |\n|         -&gt;  Table Scan on db1.t1                       |\n|               Filter Cond: (CAST(t1.id AS BIGINT) &gt; 4) |\n+--------------------------------------------------------+\n4 rows in set (0.03 sec)\n</code></pre>"},{"location":"MatrixOne/Performance-Tuning/explain/explain-walkthrough/","title":"Using EXPLAIN to learn the execution plan","text":"<p>Because SQL is a declarative language, you cannot automatically tell whether a query is executed efficiently. You must first use the <code>EXPLAIN</code> statement to learn the current execution plan.</p>"},{"location":"MatrixOne/Performance-Tuning/explain/explain-walkthrough/#example","title":"Example","text":"<p>We have prepared a simple example to help you understand how to interpret an execution plan using <code>EXPLAIN</code>.</p> <pre><code>&gt; drop table if exists a;\n&gt; create table a(a int);\n&gt; insert into a values(1),(2),(3),(4),(5),(6),(7),(8);\n&gt; select count(*) from a where a&gt;=2 and a&lt;=8;\n+----------+\n| count(*) |\n+----------+\n|        7 |\n+----------+\n1 row in set (0.00 sec)\n\n&gt; explain select count(*) from a where a&gt;=2 and a&lt;=8;\n+-----------------------------------------------------------------------------------+\n| QUERY PLAN                                                                        |\n+-----------------------------------------------------------------------------------+\n| Project                                                                           |\n|   -&gt;  Aggregate                                                                   |\n|         Aggregate Functions: starcount(1)                                         |\n|         -&gt;  Table Scan on aab.a                                                   |\n|               Filter Cond: (CAST(a.a AS BIGINT) &gt;= 2), (CAST(a.a AS BIGINT) &lt;= 8) |\n+-----------------------------------------------------------------------------------+\n5 rows in set (0.00 sec)\n</code></pre> <p>Above are the execution plan results for this query. Starting from the <code>Filter Cond</code> operator, the execution process of the query is as follows:</p> <ol> <li> <p>Execute the Filter condition <code>Filter Cond</code> first: the integer whose data type is <code>BIGINT</code> and is greater than or equal to 2 and less than or equal to 8 is filtered out. According to the calculation reasoning, it should be <code>(2)</code>,<code>(3)</code>,<code>(4)</code>,<code>(5)</code>,<code>(6)</code>,<code>(7)</code>,<code>(8)</code>.</p> </li> <li> <p>Scan Table in database aab.</p> </li> <li> <p>The number of integers is 7.</p> </li> </ol> <p>In the end, the query result is 7, which means <code>count(*)</code> = 7.</p>"},{"location":"MatrixOne/Performance-Tuning/explain/explain-walkthrough/#assess-the-current-performance","title":"Assess the current performance","text":"<p><code>EXPLAIN</code> only returns the query execution plan but does not execute the query.</p>"},{"location":"MatrixOne/Performance-Tuning/explain/explain-walkthrough/#what-is-explain-analyze","title":"What is EXPLAIN ANALYZE","text":"<p>EXPLAIN ANALYZE is a profiling tool for your queries that will show you where SQL spends time on your query and why. It will plan the query, instrument it and execute it while counting rows and measuring time spent at various points in the execution plan. When execution finishes, EXPLAIN ANALYZE will print the plan and the measurements instead of the query result.</p> <p>n addition to the query plan and estimated costs, which a normal EXPLAIN will print, EXPLAIN ANALYZE also prints the actual costs of individual iterators in the execution plan.</p>"},{"location":"MatrixOne/Performance-Tuning/explain/explain-walkthrough/#how-to-use-explain-analyze","title":"How to use EXPLAIN ANALYZE?","text":"<p>With the above example, to get the actual execution time, you can either execute the query or use <code>EXPLAIN ANALYZE</code>:</p> <pre><code>&gt; explain analyze select count(*) from a where a&gt;=2 and a&lt;=8;\n+-------------------------------------------------------------------------------------------------------------------------------+\n| QUERY PLAN                                                                                                                    |\n+-------------------------------------------------------------------------------------------------------------------------------+\n| Project                                                                                                                       |\n|   Analyze: timeConsumed=0us inputRows=1 outputRows=1 inputSize=8bytes outputSize=8bytes memorySize=8bytes                     |\n|   -&gt;  Aggregate                                                                                                               |\n|         Analyze: timeConsumed=3317us inputRows=2 outputRows=2 inputSize=8bytes outputSize=16bytes memorySize=16bytes          |\n|         Aggregate Functions: starcount(1)                                                                                     |\n|         -&gt;  Table Scan on aab.a                                                                                               |\n|               Analyze: timeConsumed=6643us inputRows=31 outputRows=24 inputSize=96bytes outputSize=64bytes memorySize=64bytes |\n|               Filter Cond: (CAST(a.a AS BIGINT) &gt;= 2), (CAST(a.a AS BIGINT) &lt;= 8)                                             |\n+-------------------------------------------------------------------------------------------------------------------------------+\n8 rows in set (0.00 sec)\n</code></pre> <p>Judging from the printed execution results, when performing aggregate calculations and scanning tables respectively, the following measurements are obtained, which can be used as reference items:</p> <ul> <li>total time consumed: timeConsumed</li> <li>inputRows/outputRows</li> <li>inputSize/outputSize</li> <li>memorySize</li> </ul> <p>With this information, you can analyze queries and understand why they behave the way they do, which can be explored in the following ways:</p> <ul> <li> <p>How long do these queries take to execute? You'll be able to view the <code>timeConsumed</code>.</p> </li> <li> <p>Why execute the current query plan instead of other execution plans? You can look at the row counter. When there is a significant difference (i.e., several orders of magnitude or more) between the estimated and actual number of rows, it means that the optimizer chooses a plan based on the estimate, but looking at the actual execution can give you a good idea of \u200b\u200bwhich execution plan is better.</p> </li> </ul> <p>So using EXPLAIN ANALYZE is analyzing query execution.</p> <p>The example query above takes 0.00 seconds to execute, which is an ideal performance. Also, because the query we executed in this example is simple, it meets the high execution performance.</p> <p>For more information, see EXPLAIN ANALYZE.</p>"},{"location":"MatrixOne/Performance-Tuning/optimization-concepts/1.1-through-partition-pruning/","title":"1.1 through partition pruning","text":""},{"location":"MatrixOne/Performance-Tuning/optimization-concepts/1.1-through-partition-pruning/#partition-pruning","title":"Partition Pruning","text":""},{"location":"MatrixOne/Performance-Tuning/optimization-concepts/1.1-through-partition-pruning/#overview","title":"Overview","text":"<p>Partition pruning is a method used for query optimization, applicable only when dealing with partitioned tables. By analyzing the filtering conditions in a query statement, partition pruning selects the partitions that may satisfy the conditions, thus avoiding scanning partitions that do not match the criteria and significantly reducing the amount of data that needs to be processed.</p> <p>For example:</p> <pre><code>CREATE TABLE t1 (\ncol1 INT NOT NULL,\ncol2 DATE NOT NULL,\ncol3 INT NOT NULL,\nPRIMARY KEY(col1, col3)\n) PARTITION BY KEY(col1, col3) PARTITIONS 4;\n\nINSERT INTO t1 VALUES\n(1, '1980-12-17', 7369),\n(2, '1981-02-20', 7499),\n(3, '1981-02-22', 7521),\n(4, '1981-04-02', 7566),\n(5, '1981-09-28', 7654),\n(6, '1981-05-01', 7698),\n(7, '1981-06-09', 7782),\n(8, '0087-07-13', 7788),\n(9, '1981-11-17', 7839),\n(10, '1981-09-08', 7844),\n(11, '2007-07-13', 7876),\n(12, '1981-12-03', 7900),\n(13, '1987-07-13', 7980),\n(14, '2001-11-17', 7981),\n(15, '1951-11-08', 7982),\n(16, '1927-10-13', 7983),\n(17, '1671-12-09', 7984),\n(18, '1981-11-06', 7985),\n(19, '1771-12-06', 7986),\n(20, '1985-10-06', 7987),\n(21, '1771-10-06', 7988),\n(22, '1981-10-05', 7989),\n(23, '2001-12-04', 7990),\n(24, '1999-08-01', 7991),\n(25, '1951-11-08', 7992),\n(26, '1927-10-13', 7993),\n(27, '1971-12-09', 7994),\n(28, '1981-12-09', 7995),\n(29, '2001-11-17', 7996),\n(30, '1981-12-09', 7997),\n(31, '2001-11-17', 7998),\n(32, '2001-11-17', 7999);\n\nmysql&gt; EXPLAIN VERBOSE SELECT * FROM t1 WHERE (col1 = 1 AND col3 = 7369) OR (col1 = 6 AND col3 = 7698);\n+-----------------------------------------------------------------------------------------------------+\n| QUERY PLAN                                                                                          |\n+-----------------------------------------------------------------------------------------------------+\n| Project (cost=1000.00 outcnt=1000.00 selectivity=1.0000)                                            |\n|   Output: t1.col1, t1.col2, t1.col3                                                                 |\n|   -&gt;  Table Scan on db2.t1 (cost=1000.00 outcnt=1000.00 selectivity=1.0000 blockNum=1)              |\n|         Output: t1.col1, t1.col2, t1.col3                                                           |\n|         Table: 't1' (0:'col1', 1:'col2', 2:'col3')                                                  |\n|         Hit Partition: p0, p2                                                                       |\n|         Filter Cond: (((t1.col1 = 1) and (t1.col3 = 7369)) or ((t1.col1 = 6) and (t1.col3 = 7698))) |\n+-----------------------------------------------------------------------------------------------------+\n7 rows in set (0.00 sec)\n</code></pre> <p>This query prunes the partitions and scans only the p0 and p2 partitions.</p>"},{"location":"MatrixOne/Performance-Tuning/optimization-concepts/1.1-through-partition-pruning/#usage-scenarios-of-partition-pruning-in-key-partitioned-tables","title":"Usage scenarios of Partition Pruning in KEY Partitioned Tables","text":""},{"location":"MatrixOne/Performance-Tuning/optimization-concepts/1.1-through-partition-pruning/#applicable-scenarios-in-key-partitioned-tables","title":"Applicable Scenarios in KEY Partitioned Tables","text":"<p>Only equality comparison query conditions that match the partition key can support partition pruning for KEY partitioned tables.</p> <pre><code>CREATE TABLE t1 (\ncol1 INT NOT NULL,\ncol2 DATE NOT NULL,\ncol3 INT PRIMARY KEY\n) PARTITION BY KEY(col3) PARTITIONS 4;\n\nmysql&gt; EXPLAIN SELECT * FROM t1 WHERE col3 = 7990 OR col3 = 7988;\n+-------------------------------------------------------------------+\n| QUERY PLAN                                                        |\n+-------------------------------------------------------------------+\n| Project                                                           |\n|   -&gt;  Table Scan on db1.t1                                        |\n|         Hit Partition: p0, p1                                     |\n|         Filter Cond: ((t1.col3 = 7990) or (t1.col3 = 7988))       |\n|         Block Filter Cond: ((t1.col3 = 7990) or (t1.col3 = 7988)) |\n+-------------------------------------------------------------------+\n5 rows in set (0.00 sec)\n</code></pre> <p>In this SQL statement, the condition <code>col3 = 7990</code> can determine that all results are located in partition p0. The condition <code>col3 = 7988</code> can determine that all results are situated in partition p1. Since these two conditions are combined using OR, only partitions p0 and p1 need to be scanned, resulting in partition pruning with the outcome of p0 and p1.</p>"},{"location":"MatrixOne/Performance-Tuning/optimization-concepts/1.1-through-partition-pruning/#inapplicable-scenarios-in-key-partitioned-tables","title":"Inapplicable Scenarios in KEY Partitioned Tables","text":""},{"location":"MatrixOne/Performance-Tuning/optimization-concepts/1.1-through-partition-pruning/#scenario-1","title":"Scenario 1","text":"<p>Conditions that cannot determine if the query results are within a single partition, such as <code>between</code>, <code>&gt; &lt; &gt;= &lt;=</code>, and similar conditions, cannot benefit from partition pruning optimization.</p> <pre><code>mysql&gt; EXPLAIN SELECT * FROM t1 WHERE col3 &gt;= 7782;\n+----------------------------------------------+\n| QUERY PLAN                                   |\n+----------------------------------------------+\n| Project                                      |\n|   -&gt;  Table Scan on db1.t1                   |\n|         Hit Partition: all partitions        |\n|         Filter Cond: (t1.col3 &gt;= 7782)       |\n|         Block Filter Cond: (t1.col3 &gt;= 7782) |\n+----------------------------------------------+\n5 rows in set (0.00 sec)\n</code></pre>"},{"location":"MatrixOne/Performance-Tuning/optimization-concepts/1.1-through-partition-pruning/#scenario-2","title":"Scenario 2","text":"<p>In scenarios where filtering conditions can only be obtained during the execution plan generation phase, partition pruning optimization cannot be utilized.</p> <pre><code>mysql&gt; EXPLAIN SELECT * FROM t1 WHERE col3 = (SELECT col3 FROM t2 WHERE t1.col3 = t2.col3 AND t2.col1 &lt; 5);\n+------------------------------------------------------+\n| QUERY PLAN                                           |\n+------------------------------------------------------+\n| Project                                              |\n|   -&gt;  Filter                                         |\n|         Filter Cond: (t1.col3 = t2.col3\n\n)             |\n|         -&gt;  Join                                     |\n|               Join Type: SINGLE                      |\n|               Join Cond: (t1.col3 = t2.col3)         |\n|               -&gt;  Table Scan on db1.t1               |\n|                     Hit Partition: all partitions    |\n|               -&gt;  Table Scan on db1.t2               |\n|                     Hit Partition: all partitions    |\n|                     Filter Cond: (t2.col1 &lt; 5)       |\n|                     Block Filter Cond: (t2.col1 &lt; 5) |\n+------------------------------------------------------+\n12 rows in set (0.00 sec)\n</code></pre> <p>This query retrieves results from a subquery and constructs an equality filter condition <code>col3 = ?</code> for each row read. However, partition pruning only takes effect during the query plan generation phase, not during execution, making it ineffective in this scenario.</p>"},{"location":"MatrixOne/Performance-Tuning/optimization-concepts/1.1-through-partition-pruning/#usage-scenarios-of-partition-pruning-in-hash-partitioned-tables","title":"Usage scenarios of Partition Pruning in HASH Partitioned Tables","text":""},{"location":"MatrixOne/Performance-Tuning/optimization-concepts/1.1-through-partition-pruning/#applicable-scenarios-in-hash-partitioned-tables","title":"Applicable Scenarios in HASH Partitioned Tables","text":"<p>HASH partitioned tables are similar to KEY partitioned tables, where only equality comparison query conditions can benefit from HASH partition pruning.</p> <pre><code>CREATE TABLE employees (\nid INT NOT NULL,\nfname VARCHAR(30),\nlname VARCHAR(30),\nhired DATE NOT NULL DEFAULT '1970-01-01',\nseparated DATE NOT NULL DEFAULT '9999-12-31',\njob_code INT,\nstore_id INT\n)\nPARTITION BY HASH(store_id) PARTITIONS 4;\n\nINSERT INTO employees VALUES\n(10001, 'Georgi', 'Facello', '1953-09-02','1986-06-26',120, 1),\n(10002, 'Bezalel', 'Simmel', '1964-06-02','1985-11-21',150, 7),\n(10003, 'Parto', 'Bamford', '1959-12-03','1986-08-28',140, 3),\n(10004, 'Chirstian', 'Koblick', '1954-05-01','1986-12-01',150, 3),\n(10005, 'Kyoichi', 'Maliniak', '1955-01-21','1989-09-12',150, 18),\n(10006, 'Anneke', 'Preusig', '1953-04-20','1989-06-02',150, 15),\n(10007, 'Tzvetan', 'Zielinski', '1957-05-23','1989-02-10',110, 6),\n(10008, 'Saniya', 'Kalloufi', '1958-02-19','1994-09-15',170, 10),\n(10009, 'Sumant', 'Peac', '1952-04-19','1985-02-18',110, 13),\n(10010, 'Duangkaew', 'Piveteau', '1963-06-01','1989-08-24',160, 10),\n(10011, 'Mary', 'Sluis', '1953-11-07','1990-01-22',120, 8),\n(10012, 'Patricio', 'Bridgland', '1960-10-04','1992-12-18',120, 7),\n(10013, 'Eberhardt', 'Terkki', '1963-06-07','1985-10-20',160, 17),\n(10014, 'Berni', 'Genin', '1956-02-12','1987-03-11',120, 15),\n(10015, 'Guoxiang', 'Nooteboom', '1959-08-19','1987-07-02',140, 8),\n(10016, 'Kazuhito', 'Cappelletti', '1961-05-02','1995-01-27',140, 2),\n(10017, 'Cristinel', 'Bouloucos', '1958-07-06','1993-08-03',170, 10),\n(10018, 'Kazuhide', 'Peha', '1954-06-19','1987-04-03',170, 2),\n(10019, 'Lillian', 'Haddadi', '1953-01-23','1999-04-30',170, 13),\n(10020, 'Mayuko', 'Warwick', '1952-12-24','1991-01-26',120, 1),\n(10021, 'Ramzi', 'Erde', '1960-02-20','1988-02-10',120, 9),\n(10022, 'Shahaf', 'Famili', '1952-07-08','1995-08-22',130, 10),\n(10023, 'Bojan', 'Montemayor', '1953-09-29','1989-12-17',120, 5),\n(10024, 'Suzette', 'Pettey', '1958-09-05','1997-05-19',130, 4),\n(10025, 'Prasadram', 'Heyers', '1958-10-31','1987-08-17',180, 8),\n(10026, 'Yongqiao', 'Berztiss', '1953-04-03','1995-03-20',170, 4),\n(10027, 'Divier', 'Reistad', '1962-07-10','1989-07-07',180, 10),\n(10028, 'Domenick', 'Tempesti', '1963-11-26','1991-10-22',110, 11),\n(10029, 'Otmar', 'Herbst', '1956-12-13','1985-11-20',110, 12),\n(10030, 'Elvis', 'Demeyer', '1958-07-14','1994-02-17',110, 1),\n(10031, 'Karsten', 'Joslin', '1959-01-27','1991-09-01',110, 10),\n(10032, 'Jeong', 'Reistad', '1960-08-09','1990-06-20',120, 19),\n(10033, 'Arif', 'Merlo', '1956-11-14','1987-03-18',120, 14),\n(10034, 'Bader', 'Swan', '1962-12-29','1988-09-21',130, 16),\n(10035, 'Alain', 'Chappelet', '1953-02-08','1988-09-05',130, 3),\n(10036, 'Adamantios', 'Portugali', '1959-08-10','1992-01-03',130, 14),\n(10037, 'Pradeep', 'Makrucki', '1963-07-22','1990-12-05',140, 12),\n(10038, 'Huan', 'Lortz', '1960-07-20','1989-09-20',140, 7),\n(10039, 'Alejandro', 'Brender', '1959-10-01','1988-01-19',110, 20),\n(10040, 'Weiyi', 'Meriste', '1959-09-13','1993-02-14',140, 17);\n\nmysql&gt; EXPLAIN SELECT * FROM employees WHERE store_id = 10;\n+------------------------------------------------+\n| QUERY PLAN                                     |\n+------------------------------------------------+\n| Project                                        |\n|   -&gt;  Table Scan on db1.employees              |\n|         Hit Partition: p0                      |\n|         Filter Cond: (employees.store_id = 10) |\n+------------------------------------------------+\n4 rows in set (0.00 sec)\n</code></pre> <p>In this SQL statement, since the partition key for the partitioned table is <code>store_id</code>, the condition <code>store_id = 10</code> can determine that all results are within a single partition. The value 10 is hashed to partition p0. Therefore, it is only necessary to scan partition p0, without accessing partitions p1, p2, and p3, which do not contain relevant results. As seen in the execution plan, there is only one <code>TableScan</code> operator, specifying <code>Hit Partition</code> as p0, ensuring the effectiveness of partition pruning.</p>"},{"location":"MatrixOne/Performance-Tuning/optimization-concepts/1.1-through-partition-pruning/#inapplicable-scenarios-in-hash-partitioned-tables","title":"Inapplicable Scenarios in HASH Partitioned Tables","text":""},{"location":"MatrixOne/Performance-Tuning/optimization-concepts/1.1-through-partition-pruning/#scenario-1_1","title":"Scenario 1","text":"<p>Conditions that cannot determine if the query results are within a single partition, such as <code>between</code>, <code>&gt; &lt; &gt;= &lt;=</code>, and similar conditions, cannot benefit from partition pruning optimization.</p> <pre><code>CREATE TABLE employees (\nid INT NOT NULL,\nfname VARCHAR(30),\nlname VARCHAR(30),\nhired DATE NOT NULL DEFAULT '1970-01-01',\nseparated DATE NOT NULL DEFAULT '9999-12-31',\njob_code INT,\nstore_id INT\n)\nPARTITION BY HASH(store_id) PARTITIONS 4;\n\nmysql&gt; EXPLAIN SELECT * FROM employees WHERE store_id &gt; 15;\n+------------------------------------------------+\n| QUERY PLAN                                     |\n+------------------------------------------------+\n| Project                                        |\n|   -&gt;  Table Scan on db1.employees              |\n|         Hit Partition: all partitions          |\n|         Filter Cond: (employees.store_id &gt; 15) |\n+------------------------------------------------+\n4 rows in set (0.00 sec)\n</code></pre> <p>In this SQL statement, the condition <code>store_id &gt; 15</code> cannot determine the corresponding Hash partition, and therefore, partition pruning optimization cannot be used.</p>"},{"location":"MatrixOne/Performance-Tuning/optimization-concepts/1.1-through-partition-pruning/#scenario-2_1","title":"Scenario 2","text":"<p>In scenarios where filtering conditions can only be obtained during the execution plan generation phase, partition pruning optimization cannot be utilized.</p> <pre><code>mysql&gt; EXPLAIN SELECT * FROM t1 WHERE col1 = (SELECT store_id FROM employees WHERE employees.store_id = t1.col1 AND employees.id = 10010);\n+---------------------------------------------------------+\n| QUERY PLAN                                              |\n+---------------------------------------------------------+\n| Project                                                 |\n|   -&gt;  Filter                                            |\n|         Filter Cond: (t1.col1 = employees.store_id)     |\n|         -&gt;  Join                                        |\n|               Join Type: SINGLE                         |\n|               Join Cond: (t1.col1 = employees.store_id) |\n|               -&gt;  Table Scan on db1.t1                  |\n|                     Hit Partition: all partitions       |\n|               -&gt;  Table Scan on db1.employees           |\n|                     Hit Partition: all partitions       |\n|                     Filter Cond: (employees.id = 10010) |\n+---------------------------------------------------------+\n11 rows in set (0.01 sec)\n</code></pre> <p>This query retrieves results from a subquery and constructs an equality filter condition <code>col3 = ?</code> for each row read. However, partition pruning only takes effect during the query plan generation phase, not during execution, making it ineffective in this scenario.</p>"},{"location":"MatrixOne/Performance-Tuning/optimization-concepts/1.1-through-partition-pruning/#scenario-3","title":"Scenario 3","text":"<p>Using function expressions as partitioning expressions for HASH partitioned tables is not supported for partition pruning.</p> <pre><code>CREATE TABLE t3 (\ncol1 INT,\ncol2 CHAR(10),\ncol3 DATETIME\n) PARTITION BY HASH (YEAR(col3)) PARTITIONS 4;\n\nINSERT INTO t3 VALUES\n(10001, 'Georgi', '1999-04-05 11:01:02'),\n(10002, 'Bezalel', '2004-04-03 13:11:10'),\n(10003, 'Parto', '1997-04-05 11:01:02'),\n(10004, 'Chirstian', '2004-04-03 13:11:10'),\n(10005, 'Mary', '1998-04-05 11:01:02'),\n(10006, 'Patricio', '2004-04-03 13:11:10'),\n(10007, 'Eberhardt', '1953-09-02 13:11:10'),\n(10008, 'Kazuhide', '1986-06-26 19:21:10'),\n(10009, 'Tempesti', '1956-11-14 08:11:10'),\n(10010, 'Nooteboom', '1987-03-18 23:11:10');\n\nmysql&gt; EXPLAIN SELECT * FROM t3 WHERE YEAR(col3) = 1999;\n+---------------------------------------------+\n| QUERY PLAN                                  |\n+---------------------------------------------+\n| Project                                     |\n|   -&gt;  Table Scan on db1.t3                  |\n|         Hit Partition: all partitions       |\n|         Filter Cond: (YEAR(t3.col3) = 1999) |\n+---------------------------------------------+\n4 rows in set (0.00 sec)\n\nmysql&gt; SELECT * FROM t3 WHERE YEAR(col3) = 1999;\n+-------+--------+---------------------+\n| col1  | col2   | col3                |\n+-------+--------+---------------------+\n| 10001 | Georgi | 1999-04-05 11:01:02 |\n+-------+--------+---------------------+\n1 row in set (0.01 sec)\n</code></pre>"},{"location":"MatrixOne/Performance-Tuning/optimization-concepts/1.1-through-partition-pruning/#performance-tuning-examples-for-partition-pruning","title":"Performance Tuning Examples for Partition Pruning","text":""},{"location":"MatrixOne/Performance-Tuning/optimization-concepts/1.1-through-partition-pruning/#example-1","title":"Example 1","text":"<p>Equality Conditions in KEY Partitioned Table:</p> <pre><code>CREATE TABLE t1 (\ncol1 INT NOT NULL,\ncol2 DATE NOT NULL,\ncol3 INT NOT NULL,\nPRIMARY KEY(col1, col3)\n) PARTITION BY KEY(col1, col3) PARTITIONS 4;\n\nmysql&gt; EXPLAIN SELECT * FROM t1 WHERE col1 = 1 AND col3 = 7369;\n+------------------------------------------------+\n| QUERY PLAN                                     |\n+------------------------------------------------+\n| Project                                        |\n|   -&gt;  Table Scan on db2.t1                     |\n|         Hit Partition: p0                      |\n|         Filter Cond: ((t1.col1 = 1) and (t1.col3 = 7369)) |\n+------------------------------------------------+\n5 rows in set (0.00 sec)\n</code></pre> <p>In this query, only partition p0 is accessed after partition pruning because the query conditions match the data in partition p0.</p>"},{"location":"MatrixOne/Performance-Tuning/optimization-concepts/1.1-through-partition-pruning/#example-2","title":"Example 2","text":"<p><code>OR</code> Conditions in KEY Partitioned Table:</p> <pre><code>mysql&gt; EXPLAIN SELECT * FROM t1 WHERE (col1 = 1 AND col3 = 7369) OR (col1 = 6 AND col3 = 7698);\n+-----------------------------------------------------------------------------------------------------+\n| QUERY PLAN                                                                                          |\n+-----------------------------------------------------------------------------------------------------+\n| Project (cost=1000.00 outcnt=1000.00 selectivity=1.0000)                                            |\n|   Output: t1.col1, t1.col2, t1.col3                                                                 |\n|   -&gt;  Table Scan on db2.t1 (cost=1000.00 outcnt=1000.00 selectivity=1.0000 blockNum=1)              |\n|         Output: t1.col1, t1.col2, t1.col3                                                           |\n|         Table: 't1' (0:'col1', 1:'col2', 2:'col3')                                                  |\n|         Hit Partition: p0, p2                                                                       |\n|         Filter Cond: (((t1.col1 = 1) and (t1.col3 = 7369)) or ((t1.col1 = 6) and (t1.col3 = 7698))) |\n+-----------------------------------------------------------------------------------------------------+\n7 rows in set (0.00 sec)\n</code></pre> <p>This query prunes partitions p0 and p2 because the query conditions match the data in these two partitions.</p>"},{"location":"MatrixOne/Performance-Tuning/optimization-concepts/1.1-through-partition-pruning/#example-3","title":"Example 3","text":"<p>Equality Condition in HASH Partitioned Table:</p> <pre><code>CREATE TABLE employees (\nid INT NOT NULL,\nfname VARCHAR(30),\nlname VARCHAR(30),\nhired DATE NOT NULL DEFAULT '1970-01-01',\nseparated DATE NOT NULL DEFAULT '9999-12-31',\njob_code INT,\nstore_id INT\n) PARTITION BY HASH(store_id) PARTITIONS 4;\n\nmysql&gt; EXPLAIN SELECT * FROM employees WHERE store_id = 10;\n+------------------------------------------------+\n| QUERY PLAN                                     |\n+------------------------------------------------+\n| Project                                        |\n|   -&gt;  Table Scan on db1.employees              |\n|         Hit Partition: p0                      |\n|         Filter Cond: (employees.store_id = 10) |\n+------------------------------------------------+\n4 rows in set (0.00 sec)\n</code></pre> <p>In this query, only partition p0 contains data matching the condition <code>store_id = 10</code>, so only partition p0 is scanned.</p>"},{"location":"MatrixOne/Performance-Tuning/optimization-concepts/1.1-through-partition-pruning/#example-4","title":"Example 4","text":"<p>Multiple Conditions in HASH Partitioned Table:</p> <pre><code>mysql&gt; EXPLAIN SELECT * FROM employees WHERE store_id = 10 OR store_id = 15;\n+---------------------------------------------------+\n| QUERY PLAN                                        |\n+---------------------------------------------------+\n| Project                                           |\n|   -&gt;  Table Scan on db1.employees                 |\n|         Hit Partition: p0, p3                     |\n|         Filter Cond: ((employees.store_id = 10) or (employees.store_id = 15)) |\n+---------------------------------------------------+\n5 rows in set (0.00 sec)\n</code></pre> <p>This query prunes partitions p0 and p3 because these two partitions contain data matching the condition <code>store_id = 10 OR store_id = 15</code>.</p>"},{"location":"MatrixOne/Performance-Tuning/optimization-concepts/1.1-through-partition-pruning/#example-5","title":"Example 5","text":"<p>Scenarios Inapplicable for Partition Pruning:</p> <pre><code>mysql&gt; EXPLAIN SELECT * FROM t1 WHERE col1 &gt; 5;\n+------------------------------------------------+\n| QUERY PLAN                                     |\n+------------------------------------------------+\n| Project                                        |\n|   -&gt;  Table Scan on db1.t1                     |\n|         Hit Partition: all partitions          |\n|         Filter Cond: (t1.col1 &gt; 5)             |\n|         Block Filter Cond: (t1.col1 &gt; 5)       |\n+------------------------------------------------+\n5 rows in set (0.00 sec)\n</code></pre> <p>In this query, the condition <code>col1 &gt; 5</code> cannot determine the corresponding partition, and therefore, partition pruning cannot be used.</p>"},{"location":"MatrixOne/Performance-Tuning/optimization-concepts/1.1-through-partition-pruning/#constraints","title":"Constraints","text":"<p>MatrixOne supports four partitioning methods: <code>Key</code>, <code>Hash</code>, <code>Range</code>, and <code>List</code>:</p> <ul> <li> <p>However, partition pruning is currently supported only for <code>Key</code> and <code>Hash</code> partitioned tables, with pruning for other types planned for future implementation.</p> </li> <li> <p><code>List</code> partitioning and <code>Range</code> partitioning currently do not accelerate query performance.</p> </li> </ul>"},{"location":"MatrixOne/Performance-Tuning/optimization-concepts/through-CN-extensions/","title":"Scaling CN for better performance","text":"<p>MatrixOne is a distributed database; its most distinctive feature is that it can improve the system's overall performance through node expansion. In MatrixOne's storage-computing separation architecture, CN is a stateless computing node, and the rapid expansion of CN nodes is the core of the performance improvement of the entire cluster.</p> <p>Generally, we can extend CN in two ways:</p> <ol> <li> <p>Vertically expand CN nodes: improve performance by adjusting the resources of a single CN node. This includes the improvement of the entire CN resource and cache.</p> </li> <li> <p>Horizontal expansion of CN nodes: Improve performance by increasing the number of CN nodes.</p> </li> </ol> <p>One of the smallest MatrixOne distributed cluster architectures is shown in the following figure:</p> <p></p> <p>CN mainly performs the user's query request. Therefore, the resource size of the CN node is proportional to the computing power. The most direct expansion method is to expand the resources of a single CN node vertically. At the same time, the queried data is stored in the CN cache as hot data. If the cache is hit, the query can be returned directly from the cache without obtaining cold data from the object store. After the upper capacity limit is exceeded, the cache will only replace the data with the LRU algorithm, so the cache size is also helpful for improving performance.</p> <p>In addition, we can also improve performance by horizontally expanding CN nodes. The horizontal expansion has two technical characteristics that can improve performance. First, multiple user connection requests can be dispersed to different CN nodes, spreading the load on each CN. Secondly, other CN nodes also have different caches. When the CN node that receives the query request finds that the request data is not in its cache, it will find the CN node containing the request data cache through the metadata and forward the request to it for processing to improve the cache hit rate.</p> <p>The expansion of the MatrixOne distributed cluster components can be done through the Operator. For the operation method, please look at the expansion and contraction chapter of the MatrixOne cluster. Please note that the vertical expansion of the CN node needs to be carried out on a single node, while the horizontal expansion of the CN node needs to be carried out on multiple nodes.</p>"},{"location":"MatrixOne/Performance-Tuning/optimization-concepts/through-CN-extensions/#how-to-operate","title":"How to operate","text":"<p>The expansion of MatrixOne distributed cluster components can be done through the Operator. For more information, see Scaling MatrixOne Cluster.</p>"},{"location":"MatrixOne/Performance-Tuning/optimization-concepts/through-cluster-by/","title":"Using <code>Cluster by</code> for performance tuning","text":"<p><code>Cluster by</code> is a commonly used performance-tuning technique that can help optimize the execution efficiency of queries. This article explains how to use <code>Cluster by</code> for performance tuning.</p>"},{"location":"MatrixOne/Performance-Tuning/optimization-concepts/through-cluster-by/#what-is-cluster-by","title":"What is <code>Cluster by</code>?","text":"<p><code>Cluster by</code> is a command used to optimize the physical arrangement of a table. When <code>Cluster by</code> is used during table creation, tables without primary keys can be physically sorted according to a specified column. The data rows will be rearranged in the same order as the values of that column. This physical sorting helps improve query performance.</p> <p>The following are some considerations when using <code>Cluster by</code>:</p> <p><code>Cluster by</code> cannot coexist with a primary key because the primary key already specifies the sorting order. Otherwise, it will result in a syntax error.</p> <p><code>Cluster by</code> can only be specified during table creation and does not support dynamic creation.</p> <p>The syntax for using <code>Cluster by</code> is as follows:</p> <ul> <li>Single column syntax: <code>create table() cluster by col;</code></li> <li>Multi-column syntax: <code>create table() cluster by (col1, col2);</code></li> </ul>"},{"location":"MatrixOne/Performance-Tuning/optimization-concepts/through-cluster-by/#how-to-use-cluster-by-for-performance-tuning","title":"How to use <code>Cluster by</code> for performance tuning?","text":"<p>The steps for using <code>Cluster by</code> for performance tuning are as follows:</p> <ol> <li> <p>Determine the column to be sorted.</p> <p>First, it is necessary to determine the column to be sorted. Generally, columns that are frequently used for filtering can be selected. For example, if there is an order table, the orders can be sorted by time. The time column is a commonly used sorting column for data with time series characteristics.</p> </li> <li> <p>Execute the <code>Cluster by</code> command.</p> <p>Once the sorting column is determined, the <code>Cluster by</code> command can be executed during table creation to perform the sorting.</p> <p>Here is an example:</p> <pre><code>create table t1(a int, b int, c varchar(10)) cluster by(a,b,c);\ndesc t1;\n+-------+-------------+------+------+---------+-------+---------+\n| Field | Type        | Null | Key  | Default | Extra | Comment |\n+-------+-------------+------+------+---------+-------+---------+\n| a     | INT(32)     | YES  |      | NULL    |       |         |\n| b     | INT(32)     | YES  |      | NULL    |       |         |\n| c     | VARCHAR(10) | YES  |      | NULL    |       |         |\n+-------+-------------+------+------+---------+-------+---------+\n3 rows in set (0.02 sec)\n</code></pre> <p>In this example, we first create a table named t1. Then, we use the <code>Cluster by</code> command to physically sort the table according to columns a, b, and c. This way, all data rows will be arranged in the order of values of columns a, b, and c.</p> </li> </ol>"},{"location":"MatrixOne/Performance-Tuning/optimization-concepts/through-cluster-by/#how-to-make-the-best-use-of-cluster-by-for-performance-tuning","title":"How to Make the Best Use of Cluster by for Performance Tuning?","text":"<p>There are two ways to make the best use of <code>Cluster by</code> for performance tuning:</p> <ol> <li> <p>Put the most frequently queried columns at the front.</p> <p>In the case of <code>Cluster by</code> with multiple columns, the first column will get the best query acceleration effect because the data distribution of the first column is ultimately ordered. Only when the first column is the same the remaining data will be sorted according to the second column. Therefore, the query acceleration effect of the second column is weaker than that of the first column, and the subsequent columns will decrease. Consequently, it is generally not recommended to specify too many columns in <code>Cluster by</code>; usually, 3-4 columns are sufficient.</p> </li> <li> <p>Put low cardinality columns at the front.</p> <p>Cardinality refers to the number of different values in a column. For example, gender, with only two values, is a typical low cardinality column. For example, ID card numbers are usually not duplicated, which is a high cardinality column. If the tall cardinality column is placed in the first column of <code>Cluster by</code>, the data distribution of the whole table has been thoroughly sorted on the first column, which leads to the subsequent columns not being effective. In this case, it is recommended to use <code>Cluster by</code> for a single column or to build a separate index for the high cardinality column rather than including it in <code>Cluster by</code>.</p> </li> </ol>"},{"location":"MatrixOne/Performance-Tuning/optimization-concepts/through-cluster-by/#to-consider-when-using-cluster-by","title":"To consider when using <code>Cluster by</code>","text":"<ul> <li><code>Cluster by</code> may take a long time to complete on large tables</li> </ul> <p>It may take a long time to complete when using <code>Cluster by</code> on a large table. This is because the operation requires reorganizing, reordering, and storing the data in the table. Therefore, when executing the <code>Cluster by</code> command, the table size and hardware configuration need to be considered.</p> <ul> <li><code>Cluster by</code> may affect the performance of insert and update operations</li> </ul> <p>Using <code>Cluster by</code> to sort data in a table physically may affect the performance of insert and update operations. When specific columns sort the data in a table, insert and update procedures may need to move many rows. Therefore, this impact must be considered when using <code>Cluster by</code>.</p> <ul> <li><code>Cluster by</code> needs to be regularly executed to maintain performance</li> </ul> <p>As data grows and changes, the physical sorting of data in a table may lose its effectiveness. Therefore, the <code>Cluster by</code> command needs to be regularly executed to ensure that the physical sorting of data remains effective.</p> <p>It is important to note that using the <code>Cluster by</code> command needs to be carefully considered. It is recommended first to validate its effects in a testing environment to avoid negative impacts on the data in the table.</p>"},{"location":"MatrixOne/Performance-Tuning/optimization-concepts/through-partition-by/","title":"Performance Tuning with Partitioned Tables","text":""},{"location":"MatrixOne/Performance-Tuning/optimization-concepts/through-partition-by/#what-is-a-partitioned-table","title":"What is a Partitioned Table?","text":"<p>A partitioned table organizes data in a database, which involves dividing the table data into multiple partitions. Each partition acts as an independent sub-table.</p> <p>In MatrixOne, table data is divided into different storage objects based on the key values of one or more table columns. These key values are referred to as data partitions or ranges.</p> <p>A data partition or range is a subset of table rows stored separately from other row sets. The table data is divided into multiple data partitions or ranges based on the specifications provided in the <code>PARTITION BY</code> clause of the <code>CREATE TABLE</code> statement.</p> <p>Partitioned tables can bring many benefits, such as faster query speed, optimized data maintenance, and increased availability. Partitioned tables simplify the reading and writing of table data. When SQL is executed on a partitioned table, the system first determines which partition the data belongs to and then reads or writes only that partition, avoiding operations on all the data in the table.</p>"},{"location":"MatrixOne/Performance-Tuning/optimization-concepts/through-partition-by/#scenarios-for-partitioned-tables","title":"Scenarios for Partitioned Tables","text":"<ul> <li>Improving query performance by scanning only a portion of the table.</li> <li>Improving write performance by inserting, updating, or deleting only a portion of the table data.</li> <li>Batch deleting data within a specific range rather than performing an entire table operation.</li> <li>Fine-tuning and managing data.</li> </ul>"},{"location":"MatrixOne/Performance-Tuning/optimization-concepts/through-partition-by/#what-performance-tuning-can-be-done-with-partitioned-tables","title":"What Performance Tuning can be done with Partitioned Tables?","text":"<ul> <li>Query performance tuning: Using partitioned tables can make queries more efficient by targeting specific partitions, thus improving query efficiency. For example, if a table is partitioned by date, specific data within a certain date range can be queried without scanning the entire table.</li> </ul> <ul> <li>Storage Space Usage Performance Tuning: Partitioned tables can better manage table data and reduce unnecessary storage space usage. For example, if a table is partitioned by time, old partitions can be quickly deleted or archived without affecting data in other partitions.</li> </ul>"},{"location":"MatrixOne/Performance-Tuning/optimization-concepts/through-partition-by/#impact-of-partitioned-tables-on-performance","title":"Impact of Partitioned Tables on Performance","text":"<p>Typically, as data increases within a table, performance gradually decreases. However, if the same data is stored in partitioned tables, data access can be optimized by partitioning data into different storage objects based on different ranges.</p> <p>Compared to full table access, the optimized access method will prioritize accessing specific partitions, making it possible for requests for data addition, deletion, and modification to be more effectively distributed to different partitions, avoiding the occurrence of IO hotspots and ultimately achieving better performance improvements.</p>"},{"location":"MatrixOne/Performance-Tuning/optimization-concepts/through-partition-by/#how-to-use-partitioned-tables-for-tuning","title":"How to Use Partitioned Tables for Tuning","text":"<p>When using partitioned tables, the following prerequisites need to be considered:</p> <ul> <li>The table has a large amount of data distributed according to some rules, such as by year or month.</li> <li>Improved query performance is desired by scanning only a portion of the table.</li> <li>Frequent data reads, and writes are limited to a specific range, while other fields have a lower frequency of reads and write.</li> <li>Frequent data reads and writes typically have certain fixed filtering conditions.</li> </ul>"},{"location":"MatrixOne/Performance-Tuning/optimization-concepts/through-partition-by/#choosing-the-partition-key","title":"Choosing the Partition Key","text":"<p>The partition key is a key factor in physically dividing the table, and choosing the right partition key can significantly improve read and write performance.</p> <p>When selecting a partition key, the following factors need to be considered:</p> <ul> <li>High cardinality: A partition key with high cardinality will result in better data distribution and scalability. For example, for a table with student gender and age attributes, age has a higher cardinality than gender and is more suitable as the partition key.</li> <li>Uniqueness: The partition key should be as unique as possible to avoid a partition becoming a standalone hotspot. Using a composite key can achieve uniqueness. For example, in a company, if more than half of the employees in different departments are in the same city, partitioning the town as the partition key will result in that department becoming a hotspot. However, using a composite key such as department ID + city ID can significantly reduce the probability of a hot partition.</li> </ul>"},{"location":"MatrixOne/Performance-Tuning/optimization-concepts/through-partition-by/#establishing-partitioning-strategy","title":"Establishing Partitioning Strategy","text":"<p>Even if a column with high cardinality and uniqueness is selected as the partitioning key, hotspot partitions may still occur if the partitioning range is inappropriate. Therefore, more sophisticated management is required in the partitioning strategy.</p> <ul> <li>Data distribution should be as evenly as possible to avoid extreme distribution. For example, if student age is used as the partitioning key, the company's age distribution needs to be evaluated to prevent overly concentrated age ranges in a partition. For instance, a school may have many students aged 18-22 but relatively few under 18 or over 22, so each age can be partitioned.</li> <li>Add a random number to disperse the partition. Combine the partitioning key with a random number sequence in high-concurrency write scenarios. For example, in an order system, the number of orders for a particular item is very high. A random number sequence can be added when designing the table, with a value range of 1-10, and used as the partitioning key with the item type. Each time an order is written, a number from 1 to 10 is randomly generated, and these orders are randomly written to 10 partitions, reducing the likelihood of hotspot partitions.</li> </ul>"},{"location":"MatrixOne/Performance-Tuning/optimization-concepts/through-partition-by/#matrixone-partitioned-table-types","title":"MatrixOne Partitioned Table Types","text":"<p>In MatrixOne, multiple partitioning modes are supported for tables, each corresponding to a different partitioning method.</p>"},{"location":"MatrixOne/Performance-Tuning/optimization-concepts/through-partition-by/#range-partition","title":"Range Partition","text":"<p>Range partitioning is a partitioning method based on continuous values. The partitioning key can be an integer type, DATE, or DATETIME in date type. Partitions must not overlap, and the partition definition uses the <code>VALUES LESS THAN</code> operator.</p> <p>Example</p> <p>The following two tables use an integer column and a date column as partitioning keys, respectively:</p> <pre><code>CREATE TABLE members (\nfirstname VARCHAR(25) NOT NULL,\nlastname VARCHAR(25) NOT NULL,\nusername VARCHAR(16) NOT NULL,\nemail VARCHAR(35),\njoined DATE NOT NULL\n)\nPARTITION BY RANGE COLUMNS(joined) (\nPARTITION p0 VALUES LESS THAN ('1960-01-01'),\nPARTITION p1 VALUES LESS THAN ('1970-01-01'),\nPARTITION p2 VALUES LESS THAN ('1980-01-01'),\nPARTITION p3 VALUES LESS THAN ('1990-01-01'),\nPARTITION MySQL :: MySQL 8.0 Reference Manual :: 13.1.20 CREATE TABLE Statement\n)\nPARTITION BY RANGE COLUMNS(joined) (\nPARTITION p0 VALUES LESS THAN ('1960-01-01'),\nPARTITION p1 VALUES LESS THAN ('1970-01-01'),\nPARTITION p2 VALUES LESS THAN ('1980-01-01'),\nPARTITION p3 VALUES LESS THAN ('1990-01-01')\n);\n</code></pre> <p>Note that if the value of the partition column in the data being inserted or updated does not correspond to a partition, the corresponding insert or update operation will fail. For example, if you insert a row with a \"joined\" date of 2000-01-01 but no corresponding partition, the process will fail because the partition cannot be located. So, when performing insert or update operations, you must ensure that the value of the partition column belongs to the corresponding partition.</p>"},{"location":"MatrixOne/Performance-Tuning/optimization-concepts/through-partition-by/#list-partition","title":"List Partition","text":"<p>List partitioning requires each partition to be composed of a defined value list, and each partition member in the list cannot have duplicate values. List partitioning can only use an integer type as the partition key.</p> <p>Example</p> <pre><code>CREATE TABLE employees (\nid INT NOT NULL,\nfname VARCHAR(30),\nlname VARCHAR(30),\nhired DATE NOT NULL DEFAULT '1970-01-01',\nseparated DATE NOT NULL DEFAULT '9999-12-31',\njob_code INT,\nstore_id INT\n)\nPARTITION BY LIST(store_id) (\nPARTITION pNorth VALUES IN (3,5,6,9,17),\nPARTITION pEast VALUES IN (1,2,10,11,19,20),\nPARTITION pWest VALUES IN (4,12,13,14,18),\nPARTITION pCentral VALUES IN (7,8,15,16)\n);\n</code></pre> <p>Please note that if the value of the partitioning column in the data being inserted or updated does not correspond to any partition, the insertion will fail.</p>"},{"location":"MatrixOne/Performance-Tuning/optimization-concepts/through-partition-by/#hash-partition","title":"Hash Partition","text":"<p>Hash partitioning is commonly used to distribute data among different partitions evenly. Common types of hash partitioning include HASH function partitioning and KEY function partitioning.</p> <p>In HASH function partitioning, the column or expression used for partitioning must be explicitly specified, and its type must be an integer. It is also recommended to explicitly specify the number of partitions, which must be a positive integer.</p> <p>Example</p> <pre><code>CREATE TABLE employees (\nid INT NOT NULL,\nfname VARCHAR(30),\nlname VARCHAR(30),\nhired DATE NOT NULL DEFAULT '1970-01-01',\nseparated DATE NOT NULL DEFAULT '9999-12-31',\njob_code INT,\nstore_id INT\n)\nPARTITION BY HASH( YEAR(hired) )\nPARTITIONS 4;\n</code></pre> <p>Unlike HASH function partitioning, KEY function partitioning supports all types of partition keys except for large object types (TEXT/BLOB), and it is unnecessary to specify the number of partitions. When using KEY function partitioning, the database service provides its hashing method, so explicitly defining the number of partitions is unnecessary. For example, the following statement can be used to create a table with a partition key of s1:</p> <pre><code>CREATE TABLE tm1 (\ns1 CHAR(32) PRIMARY KEY\n)\nPARTITION BY KEY(s1);\n</code></pre> <p>It should be noted that if the partition key is the table's primary key column, the system will default to using the primary key column as the partition key if it is not explicitly specified. For example:</p> <pre><code>CREATE TABLE tm1 (\ns1 CHAR(32) PRIMARY KEY\n)\nPARTITION BY KEY();\n</code></pre>"},{"location":"MatrixOne/Performance-Tuning/optimization-concepts/through-partition-by/#composite-partition","title":"Composite Partition","text":"<p>Composite partitioning is a variant of range partitioning and list partitioning that allows combinations of multiple columns in the partition key. Depending on the type of partition key, composite partitioning can be divided into range and list composite partitioning.</p> <p>The types that can be used in composite partitioning include:</p> <ul> <li>All integer types, including [UNSIGNED] SMALLINT/INT/BIGINT</li> <li>Data types, including DATE and DATETIME</li> <li>Character types, including CHAR, VARCHAR, BINARY, and VARBINARY.</li> </ul> <p>Range composite partitioning allows multiple types of columns to be combined, such as:</p> <pre><code>CREATE TABLE rcx (\na INT,\nb INT,\nc CHAR(3),\nd date\n)\nPARTITION BY RANGE COLUMNS(a,d,c) (\nPARTITION p0 VALUES LESS THAN (5,'2022-01-01','ggg'),\nPARTITION p1 VALUES LESS THAN (10,'2012-01-01','mmm'),\nPARTITION p2 VALUES LESS THAN (15,'2002-01-01','sss'),\nPARTITION p3 VALUES LESS THAN (MAXVALUE,MAXVALUE,MAXVALUE)\n);\n</code></pre> <p>List composite partitions allow users to define partitions in the same way that multiple columns can be combined, such as:</p> <pre><code>CREATE TABLE t1 (\na INT,\nb int,\nc date\n)\nPARTITION BY LIST COLUMNS(a,floor(b),c) (\nPARTITION p0 VALUES IN( (0,0,NULL), (NULL,NULL,NULL) ),\nPARTITION p1 VALUES IN( (0,1,'2000-01-01'), (0,2,'2000-01-01'), (0,3,'2000-01-01'), (1,1,'2000-01-01'), (1,2,'2000-01-01') ),\nPARTITION p2 VALUES IN( (1,0,'2000-01-01'), (2,0,'2000-01-01'), (2,1,'2000-01-01'), (3,0,'2000-01-01'), (3,1,'2000-01-01') ),\nPARTITION p3 VALUES IN( (1,3,'2000-01-01'), (2,2,'2000-01-01'), (2,3,'2000-01-01'), (3,2,'2000-01-01'), (3,3,'2000-01-01') )\n);\n</code></pre>"},{"location":"MatrixOne/Performance-Tuning/optimization-concepts/through-partition-by/#constraints","title":"Constraints","text":"<ol> <li> <p>The partition table does not support the following partitions for the time being:</p> <ul> <li>Range partition: Only supports integer and date (date/datetime).</li> <li>List partition: Only supports integers.</li> <li>Hash partition: The HASH function only supports integers .</li> <li>Composite partition: Only supports integers, dates, and strings.</li> </ul> </li> <li> <p>The partition table cannot be used for acceleration for now.</p> </li> </ol>"},{"location":"MatrixOne/Reference/System-tables/","title":"MatrixOne System Databases and Tables","text":"<p>MatrixOne system databases and tables are where MatrixOne stores the system information that you can access through them.MatrixOne creates six system databases at initialization: <code>mo_catalog</code>, <code>information_schema</code>, <code>system_metrcis</code>, <code>system</code>, <code>mysql</code>, and <code>mo_task</code>. system<code>,</code>mysql<code>and</code>mo_task<code>.</code>mo_task` is currently under development and will not have a direct impact on the operations you perform for the time being. Other system database and table functions are described in this document.</p> <p>The system can only modify system databases and tables; you can only read from them.</p>"},{"location":"MatrixOne/Reference/System-tables/#mo_catalog-database","title":"<code>mo_catalog</code> database","text":"<p>The <code>mo_catalog</code> is used to store metadata about MatrixOne objects such as: databases, tables, columns, system variables, tenants, users, and roles.</p> <p>The concept of multi-tenancy was introduced with MatrixOne version 0.6, and the default <code>sys</code> tenant behaves slightly differently from other tenants. The system table <code>mo_account</code>, which serves multi-tenant management, is only visible to <code>sys</code> tenants; it is not visible to other tenants.</p>"},{"location":"MatrixOne/Reference/System-tables/#mo_indexes-table","title":"mo_indexes table","text":"column type comments id BIGINT UNSIGNED(64) index ID table_id BIGINT UNSIGNED(64) ID of the table where the index resides database_id BIGINT UNSIGNED(64) ID of the database where the index resides name VARCHAR(64) name of the index type VARCHAR(11) The type of index, including primary key index (PRIMARY), unique index (UNIQUE), secondary index (MULTIPLE) algo_table_type VARCHAR(11) Algorithm for creating indexes algo_table_type VARCHAR(11) Hidden table types for multi-table indexes algo_params VARCHAR(2048) is_visible TINYINT(8) Whether the index is visible, 1 means visible, 0 means invisible (currently all MatrixOne indexes are visible indexes) hidden TINYINT(8) Whether the index is hidden, 1 is a hidden index, 0 is a non-hidden index comment VARCHAR(2048) Comment information for the index column_name VARCHAR(256) The column name of the constituent columns of the index ordinal_position INT UNSIGNED(32) Column ordinal in index, starting from 1 options TEXT(0) options option information for index index_table_name VARCHAR(5000) The table name of the index table corresponding to the index, currently only the unique index contains the index table"},{"location":"MatrixOne/Reference/System-tables/#mo_table_partitions-table","title":"mo_table_partitions table","text":"column type comments table_id BIGINT UNSIGNED(64) The ID of the current partitioned table. database_id BIGINT UNSIGNED(64) The ID of the database to which the current partitioned table belongs. number SMALLINT UNSIGNED(16) The current partition number. All partitions are indexed in the order they are defined, with 1 assigned to the first partition. name VARCHAR(64) The name of the partition. partition_type VARCHAR(50) Stores the partition type information for the table. For partitioned tables, the values can be \"KEY\", \"LINEAR_KEY\", \"HASH\", \"LINEAR_KEY_51\", \"RANGE\", \"RANGE_COLUMNS\", \"LIST\", \"LIST_COLUMNS\". For non-partitioned tables, the value is an empty string. Note: MatrixOne does not currently support RANGE and LIST partitioning. partition_expression VARCHAR(2048) The expression for the partitioning function used in the CREATE TABLE or ALTER TABLE statement that created the partitioned table's partitioning scheme. description_utf8 TEXT(0) This column is used for RANGE and LIST partitions. For a RANGE partition, it contains the value set in the partition's VALUES LESS THAN clause, which can be an integer or MAXVALUE. For a LIST partition, this column contains the values defined in the partition's VALUES IN clause, which is a comma-separated list of integer values. For partitions with partition_type other than RANGE or LIST, this column is always NULL. Note: MatrixOne does not currently support RANGE and LIST partitioning, so this column is NULL. comment VARCHAR(2048) The text of the comment, if the partition has one. Otherwise, this value is empty. options TEXT(0) Partition options information, currently set to NULL. partition_table_name VARCHAR(1024) The name of the subtable corresponding to the current partition."},{"location":"MatrixOne/Reference/System-tables/#mo_user-table","title":"mo_user table","text":"column type comments user_id int user id, primary key user_host varchar(100) user host address user_name varchar(100) user name authentication_string varchar(100) authentication string encrypted with password status varchar(8) open,locked,expired created_time timestamp user created time expired_time timestamp user expired time login_type varchar(16) ssl/password/other creator int the creator id who created this user owner int the admin id for this user default_role int the default role id for this user"},{"location":"MatrixOne/Reference/System-tables/#mo_account-table-only-visible-for-sys-account","title":"mo_account table (Only visible for <code>sys</code> account)","text":"column type comments account_id int unsigned account id, primary key account_name varchar(100) account name status varchar(100) open/suspend created_time timestamp create time comments varchar(256) comment suspended_time TIMESTAMP Time of the account's status is changed version bigint unsigned the version status of the current account"},{"location":"MatrixOne/Reference/System-tables/#mo_database-table","title":"mo_database table","text":"column type comments dat_id bigint unsigned Primary key ID datname varchar(100) Database name dat_catalog_name varchar(100) Database catalog name, default as <code>def</code> dat_createsql varchar(100) Database creation SQL statement owner int unsigned Role id creator int unsigned User id created_time timestamp Create time account_id int unsigned Account id dat_type varchar(23) Database type, common library or subscription library"},{"location":"MatrixOne/Reference/System-tables/#mo_role-table","title":"mo_role table","text":"column type comments role_id int unsigned role id, primary key role_name varchar(100) role name creator int unsigned user_id owner int unsigned MOADMIN/ACCOUNTADMIN  ownerid created_time timestamp create time comments text comment"},{"location":"MatrixOne/Reference/System-tables/#mo_user_grant-table","title":"mo_user_grant table","text":"column type comments role_id int unsigned ID of the authorized role, associated primary key user_id int unsigned Obtain the user ID of the authorized role and associate the primary key granted_time timestamp granted time with_grant_option bool Whether to allow an authorized user to license to another user or role"},{"location":"MatrixOne/Reference/System-tables/#mo_role_grant-table","title":"mo_role_grant table","text":"column type comments granted_id int the role id being granted, associated primary key grantee_id int the role id to grant others, associated primary key operation_role_id int operation role id operation_user_id int operation user id granted_time timestamp granted time with_grant_option bool Whether to allow an authorized role to be authorized to another user or role"},{"location":"MatrixOne/Reference/System-tables/#mo_role_privs-table","title":"mo_role_privs table","text":"column type comments role_id int role id, associated primary key role_name varchar(100) role name: accountadmin/public obj_type varchar(16) object type: account/database/table, associated primary key obj_id bigint unsigned object id, associated primary key privilege_id int privilege id, associated primary key privilege_name varchar(100) privilege name: the list of privileges privilege_level varchar(100) level of privileges, associated primary key operation_user_id int unsigned operation user id granted_time timestamp granted time with_grant_option bool If permission granting is permitted"},{"location":"MatrixOne/Reference/System-tables/#mo_user_defined_function-table","title":"mo_user_defined_function table","text":"column type comments function_id INT(32) ID of the function, primary key name VARCHAR(100) the name of the function owner INT UNSIGNED(32) ID of the role who created the function args TEXT(0) Argument list for the function rettype VARCHAR(20) return type of the function body TEXT(0) function body language VARCHAR(20) language used by the function db VARCHAR(100) database where the function is located definer VARCHAR(50) name of the user who defined the function modified_time TIMESTAMP(0) time when the function was last modified created_time TIMESTAMP(0) creation time of the function type VARCHAR(10) type of function, default FUNCTION security_type VARCHAR(10) security processing method, uniform value DEFINER comment VARCHAR(5000) Create a comment for the function character_set_client VARCHAR(64) Client character set: utf8mb4 collation_connection VARCHAR(64) Connection sort: utf8mb4_0900_ai_ci database_collation VARCHAR(64) Database connection collation: utf8mb4_0900_ai_ci"},{"location":"MatrixOne/Reference/System-tables/#mo_mysql_compatbility_mode-table","title":"mo_mysql_compatbility_mode table","text":"column type comments configuration_id INT(32) Configuration item id, self-incrementing column, used as primary key to distinguish between different configurations account_id INT(32) Tenant id of the configuration account_name VARCHAR(300) The name of the tenant where the configuration is located dat_name VARCHAR(5000) The name of the database where the configuration resides variable_name VARCHAR(300) The name of the variable variable_value VARCHAR(5000) The name of the database where the configuration resides. variable_value VARCHAR(5000) The value of the variable system_variables BOOL(0) if it is a system variable (compatibility variables are added in addition to system variables)"},{"location":"MatrixOne/Reference/System-tables/#mo_pubs-table","title":"mo_pubs table","text":"column type comments pub_name VARCHAR(64) publication name database_name VARCHAR(5000) The name of the published data database_id BIGINT UNSIGNED(64) ID of the publishing database, corresponding to dat_id in the mo_database table all_table BOOL(0) Whether the publishing library contains all tables in the database corresponding to database_id all_account BOOL(0) Whether all accounts can subscribe to the library table_list TEXT(0) When it is not all table, publish the list of tables contained in the library, and the table name corresponds to the table under the database corresponding to database_id account_list TEXT(0) Account list that is allowed to subscribe to the publishing library when it is not all accounts created_time TIMESTAMP(0) Time when the release repository was created owner INT UNSIGNED(32) The role ID corresponding to the creation of the release library creator INT UNSIGNED(32) The ID of the user who created the release library comment TEXT(0) Remarks for creating a release library"},{"location":"MatrixOne/Reference/System-tables/#mo_stages-table","title":"mo_stages table","text":"column type comments stage_id INT UNSIGNED(32) data stage ID stage_name VARCHAR(64) data stage name url TEXT(0) Path to object storage (without authentication), path to file system stage_credentials TEXT(0) Authentication information, encrypted and saved stage_status VARCHAR(64) ENABLED/DISABLED Default: DISABLED created_time TIMESTAMP(0) creation time comment TEXT(0) comment"},{"location":"MatrixOne/Reference/System-tables/#mo_sessions-view","title":"<code>mo_sessions</code> view","text":"column type comments node_id VARCHAR(65535) Unique identifier of the atrixOne node. Once activated, it cannot be changed. conn_id INT UNSIGNED A unique number associated with the client TCP connection in MatrixOne, automatically generated by Hakeeper. session_id VARCHAR(65535) A unique UUID used to identify a session. a new UUID is generated for each new session. account VARCHAR(65535) Name of the tenant. user VARCHAR(65535) The name of the user. host VARCHAR(65535) The IP address and port on which the CN node receives client requests. db VARCHAR(65535) The name of the database used when executing the SQL. session_start VARCHAR(65535) The timestamp of the session creation. command VARCHAR(65535) Types of MySQL commands, such as COM_QUERY, COM_STMT_PREPARE, COM_STMT_EXECUTE, and so on. info VARCHAR(65535) The SQL statement to execute. A single SQL may contain multiple statements. txn_id VARCHAR(65535) The unique identifier of the associated transaction. statement_id VARCHAR(65535) The unique identifier (UUID) of the SQL statement. statement_type VARCHAR(65535) Types of SQL statements, such as SELECT, INSERT, UPDATE, and so on. query_type VARCHAR(65535) Types of SQL statements such as DQL (Data Query Language), TCL (Transaction Control Language), etc. sql_source_type VARCHAR(65535) The source of the SQL statement, such as external or internal. query_start VARCHAR(65535) The timestamp at which the SQL statement began execution. client_host VARCHAR(65535) The IP address and port number of the client. role VARCHAR(65535) The name of the user's role."},{"location":"MatrixOne/Reference/System-tables/#mo_configurations-view","title":"<code>mo_configurations</code> view","text":"column type comments node_type VARCHAR(65535) Types of nodes: cn (compute node), tn (transaction node), log (log node), proxy (proxy). node_id VARCHAR(65535) The unique identifier of the node. name VARCHAR(65535) The name of the configuration item, possibly accompanied by a nested structure prefix. current_value VARCHAR(65535) The current value of the configuration item. default_value VARCHAR(65535) The default value of the configuration item. internal VARCHAR(65535) Indicates whether the configuration parameter is internal."},{"location":"MatrixOne/Reference/System-tables/#mo_locks-view","title":"<code>mo_locks</code> view","text":"column type comments cn_id VARCHAR(65535) cn's uuid txn_id VARCHAR(65535) The transaction holding the lock. table_id VARCHAR(65535) Locked tables. lock_key VARCHAR(65535) Lock type. Can be <code>point</code> or <code>range</code>. lock_content VARCHAR(65535) The contents of the lock, in hexadecimal. For <code>range</code> locks, an interval; for <code>point</code> locks, a single value. lock_mode VARCHAR(65535) Lock mode. Can be <code>shared</code> or <code>exclusive</code>. lock_status VARCHAR(65535) Lock status, which may be <code>wait</code>, <code>acquired</code> or <code>none</code>. wait. No transaction holds the lock, but there are transactions waiting on the lock. acquired. A transaction holds the lock. none. No transaction holds the lock, and no transaction is waiting on the lock. lock_wait VARCHAR(65535) Transactions waiting on this lock."},{"location":"MatrixOne/Reference/System-tables/#mo_transactions-view","title":"<code>mo_transactions</code> view","text":"column type comments cn_id VARCHAR(65535) ID that uniquely identifies the CN (Compute Node). txn_id VARCHAR(65535) The ID that uniquely identifies the transaction. create_ts VARCHAR(65535) Record the transaction creation timestamp, following the RFC3339Nano format (\"2006-01-02T15:04:05.99999999999Z07:00\"). snapshot_ts VARCHAR(65535) Represents the snapshot timestamp of the transaction, expressed in both physical and logical time. prepared_ts VARCHAR(65535) Indicates the prepared timestamp of the transaction, in the form of physical and logical time. commit_ts VARCHAR(65535) Indicates the commit timestamp of the transaction, in both physical and logical time. txn_mode VARCHAR(65535) Identifies the transaction mode, which can be either pessimistic or optimistic. isolation VARCHAR(65535) Indicates the isolation level of the transaction, either SI (Snapshot Isolation) or RC (Read Committed). user_txn VARCHAR(65535) Indicates a user transaction, i.e., a transaction created by a SQL operation performed by a user connecting to MatrixOne via a client. txn_status VARCHAR(65535) Indicates the current state of the transaction, with possible values including active, committed, aborting, aborted. In the distributed transaction 2PC model, this would also include prepared and committing. table_id VARCHAR(65535) Indicates the ID of the table involved in the transaction. lock_key VARCHAR(65535) Indicates the type of lock, either range or point. lock_content VARCHAR(65535) Point locks represent individual values, range locks represent ranges, usually in the form of \"low - high\". Note that transactions may involve multiple locks, but only the first lock is shown here. lock_mode VARCHAR(65535) Indicates the mode of the lock, either exclusive or shared."},{"location":"MatrixOne/Reference/System-tables/#mo_transactions","title":"<code>mo_transactions</code> \u89c6\u56fe","text":"column type comments cn_id VARCHAR(65535) ID that uniquely identifies the CN (Compute Node). txn_id VARCHAR(65535) The ID that uniquely identifies the transaction. create_ts VARCHAR(65535) Record the transaction creation timestamp, following the RFC3339Nano format (\"2006-01-02T15:04:05.99999999999Z07:00\"). snapshot_ts VARCHAR(65535) Represents the snapshot timestamp of the transaction, expressed in both physical and logical time. prepared_ts VARCHAR(65535) Indicates the prepared timestamp of the transaction, in the form of physical and logical time. commit_ts VARCHAR(65535) Indicates the commit timestamp of the transaction, in both physical and logical time. txn_mode VARCHAR(65535) Identifies the transaction mode, which can be either pessimistic or optimistic. isolation VARCHAR(65535) Indicates the isolation level of the transaction, either SI (Snapshot Isolation) or RC (Read Committed). user_txn VARCHAR(65535) Indicates a user transaction, i.e., a transaction created by a SQL operation performed by a user connecting to MatrixOne via a client. txn_status VARCHAR(65535) Indicates the current state of the transaction, with possible values including active, committed, aborting, aborted. In the distributed transaction 2PC model, this would also include prepared and committing. table_id VARCHAR(65535) Indicates the ID of the table involved in the transaction. lock_key VARCHAR(65535) Indicates the type of lock, either range or point. lock_content VARCHAR(65535) Point locks represent individual values, range locks represent ranges, usually in the form of \"low - high\". Note that transactions may involve multiple locks, but only the first lock is shown here. lock_mode VARCHAR(65535) Indicates the mode of the lock, either exclusive or shared."},{"location":"MatrixOne/Reference/System-tables/#mo_columns-table","title":"mo_columns table","text":"column type comments att_uniq_name varchar(256) Primary Key. Hidden, composite primary key, format is like \"${att_relname_id}-${attname}\" account_id int unsigned accountID att_database_id bigint unsigned databaseID att_database varchar(256) database Name att_relname_id bigint unsigned table id att_relname varchar(256) The table this column belongs to.(references mo_tables.relname) attname varchar(256) The column name atttyp varchar(256) The data type of this column (zero for a dropped column). attnum int The number of the column. Ordinary columns are numbered from 1 up. att_length int bytes count for the type. attnotnull tinyint(1) This represents a not-null constraint. atthasdef tinyint(1) This column has a default expression or generation expression. att_default varchar(1024) default expression attisdropped tinyint(1) This column has been dropped and is no longer valid. A dropped column is still physically present in the table, but is ignored by the parser and so cannot be accessed via SQL. att_constraint_type char(1) p = primary key constraint, n=no constraint att_is_unsigned tinyint(1) unsigned or not att_is_auto_increment tinyint(1) auto increment or not att_comment varchar(1024) comment att_is_hidden tinyint(1) hidden or not attr_has_update tinyint(1) This columns has update expression attr_update varchar(1024) update expression attr_is_clusterby tinyint(1) Whether this column is used as the cluster by keyword to create the table"},{"location":"MatrixOne/Reference/System-tables/#mo_tables-table","title":"mo_tables table","text":"column type comments rel_id bigint unsigned Primary key, table ID relname varchar(100) Name of the table, index, view, and so on. reldatabase varchar(100) The database that contains this relation. reference mo_database.datname reldatabase_id bigint unsigned The database id that contains this relation. reference mo_database.datid relpersistence varchar(100) p = permanent table, t = temporary table relkind varchar(100) r = ordinary table, e = external table, i = index, S = sequence, v = view, m = materialized view rel_comment varchar(100) rel_createsql varchar(100) Table creation SQL statement created_time timestamp Create time creator int unsigned Creator ID owner int unsigned Creator's default role id account_id int unsigned Account id partitioned blob Partition by statement partition_info blob the information of partition viewdef blob View definition statement constraint varchar(5000) Table related constraints catalog_version INT UNSIGNED(0) Version number of the system table"},{"location":"MatrixOne/Reference/System-tables/#system_metrics-database","title":"<code>system_metrics</code> database","text":"<p><code>system_metrics</code> collect the status and statistics of SQL statements, CPU &amp; memory resource usage.</p> <p><code>system_metrics</code> tables have more or less same column types, fields in these tables are described as follows:</p> <ul> <li>collecttime:Collection time</li> <li> <p>value:  the value of the collecting metric</p> </li> <li> <p>node: the MatrixOne node uuid</p> </li> <li>role: the MatrixOne node role, can be CN, TN or LOG.  </li> <li>account: default as \"sys\", the account who fires the SQL request.</li> <li>type:SQL type, can be <code>select</code>, <code>insert</code>, <code>update</code>, <code>delete</code>, <code>other</code> types.</li> </ul>"},{"location":"MatrixOne/Reference/System-tables/#metric-table","title":"<code>metric</code> table","text":"Column Type Comment metric_name VARCHAR(128) metric name, like: sql_statement_total, server_connections, process_cpu_percent, sys_memory_used, .. collecttime DATETIME metric data collect time value DOUBLE metric value node VARCHAR(36) MatrixOne node uuid role VARCHAR(32) MatrixOne node role account VARCHAR(128) account name, default \"sys\" type VARCHAR(32) SQL type: like insert, select, update ... <p>The other tables are all views of the <code>metric</code> table:</p> <ul> <li><code>process_cpu_percent</code> table: Process CPU busy percentage.</li> <li><code>process_open_fs</code> table: Number of open file descriptors.</li> <li><code>process_resident_memory_bytes</code> table: Resident memory size in bytes.</li> <li><code>server_connection</code> table: Server connection numbers.</li> <li><code>sql_statement_errors</code> table: Counter of sql statements executed with errors.</li> <li><code>sql_statement_total</code> table: Counter of executed sql statement.</li> <li><code>sql_transaction_errors</code> table: Counter of transactional statements executed with errors.</li> <li><code>sql_statement_hotspot</code> table: records the most extended SQL query executed by each tenant within each minute. Only those SQL queries whose execution time does not exceed a certain aggregation threshold will be included in the statistics.</li> <li><code>sql_transaction_total</code> table: Counter of transactional sql statement.</li> <li><code>sys_cpu_combined_percent</code> table: System CPU busy percentage, average among all logical cores.</li> <li><code>sys_cpu_seconds_total</code> table: System CPU time spent in seconds, normalized by number of cores</li> <li><code>sys_disk_read_bytes</code> table: System disk read in bytes.</li> <li><code>sys_disk_write_bytes</code> table: System disk write in bytes.</li> <li><code>sys_memory_available</code> table: System memory available in bytes.</li> <li><code>sys_memory_used</code> table: System memory used in bytes.</li> <li><code>sys_net_recv_bytes</code> table: System net received in bytes.</li> <li><code>sys_net_sent_bytes</code> table: System net sent in bytes.</li> </ul>"},{"location":"MatrixOne/Reference/System-tables/#system-database","title":"<code>system</code> database","text":"<p><code>System</code> database stores MatrixOne historical SQL statements, system logs, error information.</p>"},{"location":"MatrixOne/Reference/System-tables/#statement_info-table","title":"<code>statement_info</code> table","text":"<p>It records user and system SQL statement with detailed information.</p> Column Type Comments statement_id VARCHAR(36) statement unique id transaction_id VARCHAR(36) Transaction unique id session_id VARCHAR(36) session unique id account VARCHAR(1024) account name user VARCHAR(1024) user name host VARCHAR(1024) user client ip database VARCHAR(1024) what database current session stay in statement TEXT sql statement statement_tag TEXT note tag in statement(Reserved) statement_fingerprint TEXT note tag in statement(Reserved) node_uuid VARCHAR(36) node uuid, which node gen this data node_type VARCHAR(64) node type in MO, val in [TN, CN, LOG] request_at DATETIME request accept datetime response_at DATETIME response send datetime duration BIGINT exec time, unit: ns status VARCHAR(32) sql statement running status, enum: Running, Success, Failed err_code VARCHAR(1024) error code error TEXT error message exec_plan JSON statement execution plan rows_read BIGINT rows read total bytes_scan BIGINT bytes scan total stats JSON global stats info in exec_plan JSON statement execution plan rows_read BIGINT Read the total number of rows bytes_scan BIGINT Total bytes scanned stats JSON Global statistics in exec_plan statement_type VARCHAR(1024) statement type, val in [Insert, Delete, Update, Drop Table, Drop User, ...] query_type VARCHAR(1024) query type, val in [DQL, DDL, DML, DCL, TCL] role_id BIGINT role id sql_source_type TEXT Type of SQL source internally generated by MatrixOne aggr_count BIGINT(64) the number of statements aggregated result_count BIGINT(64) the number of rows of sql execution results"},{"location":"MatrixOne/Reference/System-tables/#rawlog-table","title":"<code>rawlog</code> table","text":"<p>It records very detailed system logs.</p> Column Type Comments raw_item VARCHAR(1024) Original log entry node_uuid VARCHAR(36) Node uuid, i.e. a node that generates data node_type VARCHAR(64) Node type of TN/CN/Log to which var belongs within MatrixOne span_id VARCHAR(16) The unique ID of the span trace_id VARCHAR(36) trace unique uuid logger_name VARCHAR(1024) Name of the logger timestamp DATETIME Time-stamped actions level VARCHAR(1024) Log level, e.g. debug, info, warn, error, panic, fatal caller VARCHAR(1024) Where the Log is generated: package/file.go:123 message TEXT log message extra JSON Log dynamic fields err_code VARCHAR(1024) error log error TEXT error message stack VARCHAR(4096) Stack information for log_info and error_info span_name VARCHAR(1024) span name, e.g. step name of execution plan, function name in code, ... parent_span_id VARCHAR(16) Parent span unique ID start_time DATETIME span Start time end_time DATETIME span End time duration BIGINT Execution time in ns resource JSON Static resource information span_kind VARCHAR(1024) span type. internal: MO internal generated trace (default); statement: trace_id==statement_id; remote: communicate via morpc statement_id VARCHAR(36) ID of the declaration statement session_id VARCHAR(36) ID of the session <p>The other 3 tables(<code>log_info</code>, <code>span_info</code> and <code>error_info</code>) are views of <code>statement_info</code> and <code>rawlog</code> table.</p>"},{"location":"MatrixOne/Reference/System-tables/#information_schema-database","title":"<code>information_schema</code> database","text":"<p>Information Schema provides an ANSI-standard way of viewing system metadata. MatrixOne also provides a number of custom <code>information_schema</code> tables, in addition to the tables included for MySQL compatibility.</p> <p>Many <code>INFORMATION_SCHEMA</code> tables have a corresponding <code>SHOW</code> command. The benefit of querying <code>INFORMATION_SCHEMA</code> is that it is possible to join between tables.</p>"},{"location":"MatrixOne/Reference/System-tables/#tables-for-mysql-compatibility","title":"Tables for MySQL compatibility","text":"Table Name Description KEY_COLUMN_USAGE Describes the key constraints of the columns, such as the primary key constraint. COLUMNS Provides a list of columns for all tables. PROFILING Provides some profiling information during SQL statement execution. PROCESSLIST Provides similar information to the command <code>SHOW PROCESSLIST</code>. USER_PRIVILEGES Summarizes the privileges associated with the current user. SCHEMATA Provides similar information to <code>SHOW DATABASES</code>. CHARACTER_SETS Provides a list of character sets the server supports. TRIGGERS Provides similar information to <code>SHOW TRIGGERS</code>. TABLES Provides a list of tables that the current user has visibility of. Similar to <code>SHOW TABLES</code>. PARTITIONS Provides information about table partitions. VIEWS Provides information about views in the database. ENGINES Provides a list of supported storage engines. ROUTINES Provides some information about stored procedures. PARAMETERS Provides information about stored procedures' parameters and return values \u200b\u200b. KEYWORDS Provide information about keywords in the database; see Keywords for details."},{"location":"MatrixOne/Reference/System-tables/#character_sets-table","title":"<code>CHARACTER_SETS</code> table","text":"<p>The description of columns in the <code>CHARACTER_SETS</code> table is as follows:</p> <ul> <li><code>CHARACTER_SET_NAME</code>: The name of the character set.</li> <li><code>DEFAULT_COLLATE_NAME</code> The default collation name of the character set.</li> <li><code>DESCRIPTION</code> The description of the character set.</li> <li><code>MAXLEN</code> The maximum length required to store a character in this character set.</li> </ul>"},{"location":"MatrixOne/Reference/System-tables/#columns-table","title":"<code>COLUMNS</code> table","text":"<p>The description of columns in the <code>COLUMNS</code> table is as follows:</p> <ul> <li><code>TABLE_CATALOG</code>: The name of the catalog to which the table with the column belongs. The value is always <code>def</code>.</li> <li><code>TABLE_SCHEMA</code>: The name of the schema in which the table with the column is located.</li> <li><code>TABLE_NAME</code>: The name of the table with the column.</li> <li><code>COLUMN_NAME</code>: The name of the column.</li> <li><code>ORDINAL_POSITION</code>: The position of the column in the table.</li> <li><code>COLUMN_DEFAULT</code>: The default value of the column. If the explicit default value is <code>NULL</code>, or if the column definition does not include the <code>default</code> clause, this value is <code>NULL</code>.</li> <li><code>IS_NULLABLE</code>: Whether the column is nullable. If the column can store null values, this value is <code>YES</code>; otherwise, it is <code>NO</code>.</li> <li><code>DATA_TYPE</code>: The type of data in the column.</li> <li><code>CHARACTER_MAXIMUM_LENGTH</code>: For string columns, the maximum length in characters.</li> <li><code>CHARACTER_OCTET_LENGTH</code>: For string columns, the maximum length in bytes.</li> <li><code>NUMERIC_PRECISION</code>: The numeric precision of a number-type column.</li> <li><code>NUMERIC_SCALE</code>: The numeric scale of a number-type column.</li> <li><code>DATETIME_PRECISION</code>: For time-type columns, the fractional seconds precision.</li> <li><code>CHARACTER_SET_NAME</code>: The name of the character set of a string column.</li> <li><code>COLLATION_NAME</code>: The name of the collation of a string column.</li> <li><code>COLUMN_TYPE</code>: The column type.</li> <li><code>COLUMN_KEY</code>: Whether this column is indexed. This field might have the following values:<ul> <li><code>Empty</code>: This column is not indexed, or this column is indexed and is the second column in a multi-column non-unique index.</li> <li><code>PRI</code>: This column is the primary key or one of multiple primary keys.</li> <li><code>UNI</code>: This column is the first column of the unique index.</li> <li><code>MUL</code>: The column is the first column of a non-unique index, in which a given value is allowed to occur for multiple times.</li> </ul> </li> <li><code>EXTRA</code>: Any additional information of the given column.</li> <li><code>PRIVILEGES</code>: The privilege that the current user has on this column.</li> <li><code>COLUMN_COMMENT</code>: Comments contained in the column definition.</li> <li><code>GENERATION_EXPRESSION</code>: For generated columns, this value displays the expression used to calculate the column value. For non-generated columns, the value is empty.</li> <li><code>SRS_ID</code>: This value applies to spatial columns. It contains the column <code>SRID</code> value that indicates the spatial reference system for values stored in the column.</li> </ul>"},{"location":"MatrixOne/Reference/System-tables/#engines-table","title":"<code>ENGINES</code> table","text":"<p>The description of columns in the <code>ENGINES</code> table is as follows:</p> <ul> <li><code>ENGINES</code>: The name of the storage engine.</li> <li><code>SUPPORT</code>: The level of support that the server has on the storage engine.</li> <li><code>COMMENT</code>: The brief comment on the storage engine.</li> <li><code>TRANSACTIONS</code>: Whether the storage engine supports transactions.</li> <li><code>XA</code>: Whether the storage engine supports XA transactions.</li> <li><code>SAVEPOINTS</code>: Whether the storage engine supports <code>savepoints</code>.</li> </ul>"},{"location":"MatrixOne/Reference/System-tables/#partitions-view","title":"<code>PARTITIONS</code> view","text":"<p>The description of columns in the <code>PARTITIONS</code> View is as follows:</p> <ul> <li><code>TABLE_CATALOG</code>: The name of the catalog to which the table belongs. This value is always def.</li> <li><code>TABLE_SCHEMA</code>: The name of the schema (database) to which the table belongs.</li> <li><code>TABLE_NAME</code>: The name of the table containing the partition.</li> <li><code>PARTITION_NAME</code>: The name of the partition.</li> <li><code>SUBPARTITION_NAME</code>: If the <code>PARTITIONS</code> table row represents a subpartition, the name of subpartition; otherwise NULL.</li> <li><code>PARTITION_ORDINAL_POSITION</code>: All partitions are indexed in the same order as they are defined, with 1 being the number assigned to the first partition. The indexing can change as partitions are added, dropped, and reorganized; the number shown is this column reflects the current order, taking into account any indexing changes.</li> <li><code>SUBPARTITION_ORDINAL_POSITION</code>: Subpartitions within a given partition are also indexed and reindexed in the same manner as partitions are indexed within a table.</li> <li><code>PARTITION_METHOD</code>: One of the values <code>RANGE</code>, <code>LIST</code>, <code>HASH</code>, <code>LINEAR HASH</code>, <code>KEY</code>, or <code>LINEAR KEY</code>. Note: MatrixOne does not currently support RANGE and LIST partitioning.</li> <li><code>SUBPARTITION_METHOD</code>: One of the values <code>HASH</code>, <code>LINEAR HASH</code>, <code>KEY</code>, or <code>LINEAR KEY</code>.</li> <li><code>PARTITION_EXPRESSION</code>: The expression for the partitioning function used in the <code>CREATE TABLE</code> or <code>ALTER TABLE</code> statement that created the table's current partitioning scheme.</li> <li><code>SUBPARTITION_EXPRESSION</code>: This works in the same fashion for the subpartitioning expression that defines the subpartitioning for a table as <code>PARTITION_EXPRESSION</code> does for the partitioning expression used to define a table's partitioning. If the table has no subpartitions, this column is <code>NULL</code>.</li> <li><code>PARTITION_DESCRIPTION</code>: This column is used for <code>RANGE</code> and <code>LIST</code> partitions. For a <code>RANGE</code> partition, it contains the value set in the partition's <code>VALUES LESS THAN</code> clause, which can be either an integer or <code>MAXVALUE</code>. For a <code>LIST</code> partition, this column contains the values defined in the partition's <code>VALUES IN</code> clause, which is a list of comma-separated integer values. For partitions whose <code>PARTITION_METHOD</code> is other than <code>RANGE</code> or <code>LIST</code>, this column is always <code>NULL</code>. Note: MatrixOne does not currently support RANGE and LIST partitioning.</li> <li><code>TABLE_ROWS</code>: The number of table rows in the partition.</li> <li><code>AVG_ROW_LENGTH</code>: The average length of the rows stored in this partition or subpartition, in bytes. This is the same as <code>DATA_LENGTH</code> divided by <code>TABLE_ROWS</code>.</li> <li><code>DATA_LENGTH</code>: The total length of all rows stored in this partition or subpartition, in bytes; that is, the total number of bytes stored in the partition or subpartition.</li> <li><code>INDEX_LENGTH</code>: The length of the index file for this partition or subpartition, in bytes.</li> <li><code>DATA_FREE</code>: The number of bytes allocated to the partition or subpartition but not used.</li> <li><code>CREATE_TIME</code>: The time that the partition or subpartition was created.</li> <li><code>UPDATE_TIME</code>: The time that the partition or subpartition was last modified.</li> <li><code>CHECK_TIME</code>: The last time that the table to which this partition or subpartition belongs was checked.</li> <li><code>CHECKSUM</code>: The checksum value, if any; otherwise <code>NULL</code>.</li> <li><code>PARTITION_COMMENT</code>: The text of the comment, if the partition has one. If not, this value is empty. The maximum length for a partition comment is defined as 1024 characters, and the display width of the <code>PARTITION_COMMENT</code> column is also 1024, characters to match this limit.</li> <li><code>NODEGROUP</code>: This is the nodegroup to which the partition belongs.</li> <li><code>TABLESPACE_NAME</code>: The name of the tablespace to which the partition belongs. The value is always <code>DEFAULT</code>.</li> </ul>"},{"location":"MatrixOne/Reference/System-tables/#processlist-view","title":"<code>PROCESSLIST</code> view","text":"<p>Fields in the <code>PROCESSLIST</code> view are described as follows:</p> <ul> <li><code>NODE_ID</code>: CN node UUID</li> <li><code>CONN_ID</code>: ID of the user connection</li> <li><code>SESSION_ID</code>: ID of the session</li> <li><code>ACCOUNT</code>: tenant name</li> <li><code>USER</code>: user name</li> <li><code>HOST</code>: the listening address of the CN node</li> <li><code>DB</code>: the currently connected database</li> <li><code>SESSION_START</code>: session creation time</li> <li><code>COMMAND</code>: the MySQL protocol command for the statement</li> <li><code>INFO</code>: SQL statement being processed</li> <li><code>TXN_ID</code>: transaction ID</li> <li><code>STATEMENT_ID</code>: Statement ID</li> <li><code>STATEMENT_TYPE</code>: type of statement, Select/Update/Delete, etc.</li> <li><code>QUERY_TYPR</code>: query type, DQL/DDL/DML etc.</li> <li><code>SQL_SOURCE_TYPE</code>: SQL statement source type, external or internal SQL: external_sql/internal_sql</li> <li><code>QUERY_START</code>: Query start time.</li> <li><code>CLIENT_HOST</code>: client address</li> </ul>"},{"location":"MatrixOne/Reference/System-tables/#schemata-view","title":"<code>SCHEMATA</code> view","text":"<p>The <code>SCHEMATA</code> table provides information about databases. The table data is equivalent to the result of the <code>SHOW DATABASES</code> statement. Fields in the <code>SCHEMATA</code> table are described as follows:</p> <ul> <li><code>CATALOG_NAME</code>: The catalog to which the database belongs.</li> <li><code>SCHEMA_NAME</code>: The database name.</li> <li><code>DEFAULT_CHARACTER_SET_NAME</code>: The default character set of the database.</li> <li><code>DEFAULT_COLLATION_NAME</code>: The default collation of the database.</li> <li><code>SQL_PATH</code>: The value of this item is always <code>NULL</code>.</li> <li><code>DEFAULT_TABLE_ENCRYPTION</code>: defines the default encryption setting for databases and general tablespaces.</li> </ul>"},{"location":"MatrixOne/Reference/System-tables/#tables-table","title":"<code>TABLES</code> table","text":"<p>The description of columns in the <code>TABLES</code> table is as follows:</p> <ul> <li><code>TABLE_CATALOG</code>: The name of the catalog which the table belongs to. The value is always <code>def</code>.</li> <li><code>TABLE_SCHEMA</code>: The name of the schema which the table belongs to.</li> <li><code>TABLE_NAME</code>: The name of the table.</li> <li><code>TABLE_TYPE</code>: The type of the table. The base table type is <code>BASE TABLE</code>, the view table type is <code>VIEW</code>, and the <code>INFORMATION_SCHEMA</code> table type is <code>SYSTEM VIEW</code>.</li> <li><code>ENGINE</code>: The type of the storage engine.</li> <li><code>VERSION</code>: Version. The value is <code>10</code> by default.</li> <li><code>ROW_FORMAT</code>: The row format. The value is <code>Compact</code>, <code>Fixed</code>, <code>Dynamic</code>, <code>Compressed</code>, <code>Redundant</code>.</li> <li><code>TABLE_ROWS</code>: The number of rows in the table in statistics. For <code>INFORMATION_SCHEMA</code> tables, <code>TABLE_ROWS</code> is <code>NULL</code>.</li> <li><code>AVG_ROW_LENGTH</code>: The average row length of the table. <code>AVG_ROW_LENGTH</code> = <code>DATA_LENGTH</code> / <code>TABLE_ROWS</code>.</li> <li><code>DATA_LENGTH</code>: Data length. <code>DATA_LENGTH</code> = <code>TABLE_ROWS</code> * the sum of storage lengths of the columns in the tuple.</li> <li><code>MAX_DATA_LENGTH</code>: The maximum data length. The value is currently <code>0</code>, which means the data length has no upper limit.</li> <li><code>INDEX_LENGTH</code>: The index length. <code>INDEX_LENGTH</code> = <code>TABLE_ROWS</code> * the sum of lengths of the columns in the index tuple.</li> <li><code>DATA_FREE</code>: Data fragment. The value is currently <code>0</code>.</li> <li><code>AUTO_INCREMENT</code>: The current step of the auto- increment primary key.</li> <li><code>CREATE_TIME</code>: The time at which the table is created.</li> <li><code>UPDATE_TIME</code>: The time at which the table is updated.</li> <li><code>CHECK_TIME</code>: The time at which the table is checked.</li> <li><code>TABLE_COLLATION</code>: The collation of strings in the table.</li> <li><code>CHECKSUM</code>: Checksum.</li> <li><code>CREATE_OPTIONS</code>: Creates options.</li> <li><code>TABLE_COMMENT</code>: The comments and notes of the table.</li> </ul>"},{"location":"MatrixOne/Reference/System-tables/#user_privileges-table","title":"<code>USER_PRIVILEGES</code> table","text":"<p>The <code>USER_PRIVILEGES</code> table provides information about global privileges.</p> <p>Fields in the <code>USER_PRIVILEGES</code> table are described as follows:</p> <ul> <li><code>GRANTEE</code>: The name of the granted user, which is in the format of <code>'user_name'@'host_name'</code>.</li> <li><code>TABLE_CATALOG</code>: The name of the catalog to which the table belongs. This value is always <code>def</code>.</li> <li><code>PRIVILEGE_TYPE</code>: The privilege type to be granted. Only one privilege type is shown in each row.</li> <li><code>IS_GRANTABLE</code>: If you have the <code>GRANT OPTION</code> privilege, the value is <code>YES</code>; otherwise, the value is <code>NO</code>.</li> </ul>"},{"location":"MatrixOne/Reference/System-tables/#views-view","title":"<code>VIEWS</code> view","text":"<ul> <li><code>TABLE_CATALOG</code>: The name of the catalog the view belongs to. The value is <code>def</code>.</li> <li><code>TABLE_SCHEMA</code>: The name of the database to which the view belongs.</li> <li><code>TABLE_NAME</code>: The name of the view.</li> <li><code>VIEW_DEFINITION</code>: The <code>SELECT</code> statement that provides the view definition. It contains most of what you see in the \"Create Table\" column generated by <code>SHOW Create VIEW</code>.</li> <li><code>CHECK_OPTION</code>: The value of the <code>CHECK_OPTION</code> property. Values are <code>NONE</code>, <code>CASCADE</code>, or <code>LOCAL</code>.</li> <li><code>IS_UPDATABLE</code>: Set a flag called the view updatable flag when <code>CREATE VIEW</code>; if UPDATE and DELETE (and similar operations) are legal for the view, the flag is set to <code>YES(true)</code>. Otherwise, the flag is set to <code>NO(false)</code>.</li> <li><code>DEFINER</code>: The account of the user who created the view, in the format <code>username@hostname</code>.</li> <li><code>SECURITY_TYPE</code>: View the <code>SQL SECURITY</code> attribute. Values \u200b\u200bare <code>DEFINER</code> or <code>INVOKER</code>.</li> <li><code>CHARACTER_SET_CLIENT</code>: The session value of the <code>character_set_client</code> system variable when the view was created.</li> <li><code>COLLATION_CONNECTION</code>: The session value of the <code>collation_connection</code> system variable when the view was created.</li> </ul>"},{"location":"MatrixOne/Reference/System-tables/#statistics-view","title":"<code>STATISTICS</code> view","text":"<p>Obtain detailed information about database table indexes and statistics. For example, you can check whether an index is unique, understand the order of columns within an index, and estimate the number of unique values in an index.</p> <ul> <li><code>TABLE_CATALOG</code>: The catalog name of the table (always 'def').</li> <li><code>TABLE_SCHEMA</code>: The name of the database to which the table belongs.</li> <li><code>TABLE_NAME</code>: The name of the table.</li> <li><code>NON_UNIQUE</code>: Indicates whether the index allows duplicate values. If 0, the index is unique.</li> <li><code>INDEX_SCHEMA</code>: The database name to which the index belongs.</li> <li><code>INDEX_NAME</code>: The name of the index.</li> <li><code>SEQ_IN_INDEX</code>: The position of the column within the index.</li> <li><code>COLUMN_NAME</code>: The name of the column.</li> <li><code>COLLATION</code>: The collation of the column.</li> <li><code>CARDINALITY</code>: An estimated count of unique values in the index.</li> <li><code>SUB_PART</code>: The length of the index part. For the entire column, this value is NULL.</li> <li><code>PACKED</code>: Indicates whether compressed storage is used.</li> <li><code>NULLABLE</code>: Indicates whether the column allows NULL values.</li> <li><code>INDEX_TYPE</code>: The index type (e.g., BTREE, HASH, etc.).</li> <li><code>COMMENT</code>: Comment information about the index.</li> </ul>"},{"location":"MatrixOne/Reference/System-tables/#mysql-database","title":"<code>mysql</code> database","text":""},{"location":"MatrixOne/Reference/System-tables/#grant-system-tables","title":"Grant system tables","text":"<p>These system tables contain grant information about user accounts and their privileges:</p> <ul> <li><code>user</code>: user accounts, global privileges, and other non-privilege columns.</li> <li><code>db</code>: database-level privileges.</li> <li><code>tables_priv</code>: table-level privileges.</li> <li><code>columns_priv</code>: column-level privileges.</li> <li><code>procs_priv</code>: stored procedure and stored function privileges.</li> </ul>"},{"location":"MatrixOne/Reference/access-control-type/","title":"Privilege Control Types","text":"<p>The privilege control of a MatrixOne is classified into System Permission and Object Permission. You can refer to the permissions granted to roles.</p>"},{"location":"MatrixOne/Reference/access-control-type/#system-permission","title":"System Permission","text":"<p>System permissions are the permissions of the initial system account. The system account is the cluster system administrator root, also called the cluster administrator. The system root can create and delete other accounts, and manage accounts. A system root cannot manage other resources of other accounts.</p> Permissions Description CREATE ACCOUNT Create an account. It belongs only to the SYS account. DROP ACCOUNT Delete an account. It belongs only to the SYS account. ALTER ACCOUNT Manage accounts. It belongs only to the SYS account."},{"location":"MatrixOne/Reference/access-control-type/#object-permission","title":"Object Permission","text":"<p>Object permission can be classified into Account Permission, User Permission, Role Permission, Database Permission, and Table Permission.</p>"},{"location":"MatrixOne/Reference/access-control-type/#account-permission","title":"Account Permission","text":"<p>Objects with Account Permission can have the following permissions:</p> Permissions Description CREATE USER Create a user DROP USER Delete a user ALTER USER Modify users CREATE ROLE Create a role DROP ROLE Delete a role CREATE DATABASE Create a database DROP DATABASE Delete a database SHOW DATABASES View all databases in the current account CONNECT Use <code>use [database | role]</code>, execute <code>SELECT</code>  which does not involve concrete object MANAGE GRANTS Permission management. You can authorize roles and inherit permission from roles ALL [PRIVILEGES] All permissions of the Account OWNERSHIP All permissions of the Account. The account can be set using <code>WITH GRANT OPTION</code> SHOW GRANT View the permission list of a role or user under the current account"},{"location":"MatrixOne/Reference/access-control-type/#user-permission","title":"User Permission","text":"<p>Objects with User Permission can have the following permissions:</p> Permissions Description Ownership You can manage all user permission, including modifying user information, passwords, and deleting users, and transfer these permissions to other roles."},{"location":"MatrixOne/Reference/access-control-type/#role-permission","title":"Role Permission","text":"<p>Objects with Role Permission can have the following permissions:</p> Permissions Description Ownership You can manage all rights of a role, including modifying the name, description, and deletion of a role, and transfer these rights to other roles."},{"location":"MatrixOne/Reference/access-control-type/#database-permission","title":"Database Permission","text":"<p>Objects with Database Permission can have the following permissions:</p> Permissions Description SHOW TABLES View all tables in the current database CREATE TABLE Create a table DROP TABLE Delete a table CREATE VIEW Create a view,A view created without the corresponding table permission cannot be queried DROP VIEW Delete a view ALTER TABLE Modify a table ALTER VIEW Modify a view. A view created without the corresponding table permission cannot be queried. ALL [PRIVILEGES] All permission of database OWNERSHIP All permission of database.  The database can be set using <code>WITH GRANT OPTION</code>"},{"location":"MatrixOne/Reference/access-control-type/#table-permission","title":"Table Permission","text":"<p>Objects with Table Permission can have the following permissions:</p> Permissions Description SELECT Execute the <code>SELECT</code> statement INSERT Execute the <code>INSERT</code> statement UPDATE Execute the <code>UPDATE</code> statement TRUNCATE Execute the <code>TRUNCATE TABLE</code> statement DELETE Execute the <code>DELETE</code> statement REFERENCE Allows a table to be referenced as a unique/primary key table for external constraints. View the structure of the table with the <code>DESCRIBE</code> or <code>SHOW</code> command INDEX Create or drop INDEX ALL Specifies all permissions for the table OWNERSHIP Specifies all permissions for the table, append <code>WITH GRANT OPTION</code>"},{"location":"MatrixOne/Reference/access-control-type/#table-routine-level-permission","title":"Table Routine Level Permission","text":"<p>Objects with Table Routine Level Permission can have the following permissions:</p> Permissions Description EXECUTE Permission to execute a function or stored procedure"},{"location":"MatrixOne/Reference/access-control-type/#publish-and-subscribe-permission","title":"Publish and subscribe permission","text":"<p>In MatrixOne, publish-subscribe is data-sharing access to the specified database.</p> <p>Note: Currently, only moadmin and accountadmin roles are supported in MatrixOne to perform publish and subscribe operations.</p> <ul> <li>publisher</li> </ul> <p>The publisher is the party that publishes the data that needs to be shared and synchronized.</p> Permissions Description CREATE PUBLICATION Create Publication ALTER PUBLICATION Modify Publication DROP PUBLICATION Delete a publication SHOW PUBLICATION View Publication SHOW CREATE PUBLICATION View create publication statement <ul> <li>Subscriber</li> </ul> <p>The subscriber is the party that obtains the shared and synchronized data.</p> Permissions Description CREATE DATABASE db_name FROM account_name PUBLICATION CREATE SUBSCRIPTION SHOW SUBSCRIPTIONS View Subscriptions"},{"location":"MatrixOne/Reference/Data-Types/blob-text-type/","title":"The BLOB and TEXT Type","text":"<p>BLOB</p> <ul> <li> <p>A <code>BLOB</code> is a binary large object that can hold a variable amount of data.</p> </li> <li> <p><code>BLOB</code> values are treated as binary strings (byte strings). They have the binary character set and collation, and comparison and sorting are based on the numeric values of the bytes in column values.</p> </li> </ul> <p>TEXT</p> <ul> <li><code>TEXT</code> values are treated as nonbinary strings (character strings). They have a character set other than binary, and values are sorted and compared based on the collation of the character set.</li> </ul> <p>About <code>BLOB</code> and <code>TEXT</code></p> <p>If you assign a value to a <code>BLOB</code> or <code>TEXT</code> type column that exceeds the maximum length for that column, the portion that exceeds the length will be truncated, and a warning will be generated. If a non-whitespace character is truncated, an error (rather than a warning) occurs, and insertion of the value is prohibited. For TEXT, always generate a warning when trimming excess trailing spaces in values \u200b\u200binserted into TEXT columns.</p>"},{"location":"MatrixOne/Reference/Data-Types/data-type-conversion/","title":"Data Type Conversion","text":""},{"location":"MatrixOne/Reference/Data-Types/data-type-conversion/#data-type-conversion","title":"Data Type Conversion","text":"<p>MatrixOne supports the conversion between different data types, the supported and unsupported conversions are listed in the following table.</p> <ul> <li>Castable: explicit conversion with  <code>cast</code> function.</li> <li>Coercible: implicit conversion without <code>cast</code> function.</li> </ul> Source Data Type Target Data Type Castable Coercible BOOLEAN INTEGER \u274c \u274c DECIMAL \u274c \u274c VARCHAR \u2714 \u2714 DATE TIMESTAMP \u2714 \u2714 DATETIME \u2714 \u2714 VARCHAR \u2714 \u2714 DATETIME TIMESTAMP \u2714 \u2714 DATE \u2714 \u2714 VARCHAR \u2714 \u2714 FLOAT(Floating-point number) INTEGER \u274c \u274c DECIMAL \u2714 \u2714 VARCHAR \u2714 \u2714 INTEGER BOOLEAN \u274c \u274c FLOAT \u2714 \u2714 TIMESTAMP \u2714 \u2714 VARCHAR \u2714 \u2714 DECIMAL \u2714 \u2714 TIMESTAMP DATE \u2714 \u2714 DATETIME \u2714 \u2714 VARCHAR \u2714 \u2714 VARCHAR BOOLEAN \u2714 \u2714 DATE \u2714 \u2714 FLOAT \u2714 \u2714 INTEGER \u2714 \u2714 DECIMAL \u2714 \u2714 TIMESTAMP \u2714 \u2714 DATETIME \u2714 \u2714"},{"location":"MatrixOne/Reference/Data-Types/data-types/","title":"Data Types Overview","text":"<p>MatrixOne Data types conforms with MySQL Data types definition.</p> <p>Reference: https://dev.mysql.com/doc/refman/8.0/en/data-types.html</p>"},{"location":"MatrixOne/Reference/Data-Types/data-types/#integer-numbers","title":"Integer Numbers","text":"Data Type Size Min Value Max Value TINYINT 1 byte -128 127 SMALLINT 2 bytes -32768 32767 INT 4 bytes -2147483648 2147483647 BIGINT 8 bytes -9223372036854775808 9223372036854775807 TINYINT UNSIGNED 1 byte 0 255 SMALLINT UNSIGNED 2 bytes 0 65535 INT UNSIGNED 4 bytes 0 4294967295 BIGINT UNSIGNED 8 bytes 0 18446744073709551615"},{"location":"MatrixOne/Reference/Data-Types/data-types/#examples","title":"Examples","text":"<ul> <li>TINYINT and TINYINT UNSIGNED</li> </ul> <pre><code>-- Create a table named \"inttable\" with 2 attributes of a \"tinyint\", a \"tinyint unsigned\",\ncreate table inttable ( a tinyint not null default 1, tinyint8 tinyint unsigned primary key);\ninsert into inttable (tinyint8) values (0),(255), (0xFE), (253);\n\nmysql&gt; select * from inttable order by 2 asc;\n+------+----------+\n| a    | tinyint8 |\n+------+----------+\n|    1 |        0 |\n|    1 |      253 |\n|    1 |      254 |\n|    1 |      255 |\n+------+----------+\n4 rows in set (0.03 sec)\n</code></pre> <ul> <li>SMALLINT and SMALLINT UNSIGNED</li> </ul> <pre><code>-- Create a table named \"inttable\" with 2 attributes of a \"smallint\", a \"smallint unsigned\",\ndrop table inttable;\ncreate table inttable ( a smallint not null default 1, smallint16 smallint unsigned);\ninsert into inttable (smallint16) values (0),(65535), (0xFFFE), (65534), (65533);\n\nmysql&gt; select * from inttable;\n+------+------------+\n| a    | smallint16 |\n+------+------------+\n|    1 |          0 |\n|    1 |      65535 |\n|    1 |      65534 |\n|    1 |      65534 |\n|    1 |      65533 |\n+------+------------+\n5 rows in set (0.01 sec)\n</code></pre> <ul> <li>INT and INT UNSIGNED</li> </ul> <pre><code>-- Create a table named \"inttable\" with 2 attributes of a \"int\", a \"int unsigned\",\ndrop table inttable;\ncreate table inttable ( a int not null default 1, int32 int unsigned primary key);\ninsert into inttable (int32) values (0),(4294967295), (0xFFFFFFFE), (4294967293), (4294967291);\n\nmysql&gt; select * from inttable order by a desc, 2 asc;\n+------+------------+\n| a    | int32      |\n+------+------------+\n|    1 |          0 |\n|    1 | 4294967291 |\n|    1 | 4294967293 |\n|    1 | 4294967294 |\n|    1 | 4294967295 |\n+------+------------+\n5 rows in set (0.01 sec)\n</code></pre> <ul> <li>BIGINT and BIGINT UNSIGNED</li> </ul> <pre><code>-- Create a table named \"inttable\" with 2 attributes of a \"bigint\", a \"bigint unsigned\",\ndrop table inttable;\ncreate table inttable ( a bigint, big bigint primary key );\ninsert into inttable values (122345515, 0xFFFFFFFFFFFFE), (1234567, 0xFFFFFFFFFFFF0);\n\nmysql&gt; select * from inttable;\n+-----------+------------------+\n| a         | big              |\n+-----------+------------------+\n| 122345515 | 4503599627370494 |\n|   1234567 | 4503599627370480 |\n+-----------+------------------+\n2 rows in set (0.01 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/Data-Types/data-types/#real-numbers","title":"Real Numbers","text":"Data Type Size Precision Min Value Max Value Syntax FLOAT32 4 bytes 23 bits -3.40282e+038 3.40282e+038 FLOAT(M, D) M represents the maximum length and D represents the number of decimal places displayed. The value range of M is (1=&lt; M &lt;=255).  The value range of D is (1=&lt; D &lt;=30), and M &gt;= D.  Float numbers with precision show the number of bits with the required precision, and a trailing zero is added when the number of bits falls short. FLOAT64 8 bytes 53 bits -1.79769e+308 1.79769e+308 DOUBLE(M, D) M represents the maximum length and D represents the number of decimal places displayed. The value range of M is (1=&lt; M &lt;=255).  The value range of D is (1=&lt; D &lt;=30), and M &gt;= D.  Float numbers with precision show the number of bits with the required precision, and a trailing zero is added when the number of bits falls short."},{"location":"MatrixOne/Reference/Data-Types/data-types/#examples_1","title":"Examples","text":"<pre><code>-- Create a table named \"floatt1\" with precision, a trailing zero is added when the number of bits falls short\ncreate table floatt1(a float(5, 2));\ninsert into floatt1 values(1), (2.5), (3.56), (4.678);\nmysql&gt; select * from floatt1;\n+------+\n| a    |\n+------+\n| 1.00 |\n| 2.50 |\n| 3.56 |\n| 4.68 |\n+------+\n4 rows in set (0.00 sec)\n\n-- Create a table named \"floattable\" with 1 attributes of a \"float\"\ncreate table floattable ( a float not null default 1, big float(20,5) primary key);\ninsert into floattable (big) values (-1),(12345678.901234567),(92233720368547.75807);\n\nmysql&gt; select * from floattable order by a desc, big asc;\n+------+----------------------+\n| a    | big                  |\n+------+----------------------+\n|    1 |             -1.00000 |\n|    1 |       12345679.00000 |\n|    1 | 92233718038528.00000 |\n+------+----------------------+\n3 rows in set (0.01 sec)\n\nmysql&gt; select min(big),max(big),max(big)-1 from floattable;\n+----------+----------------------+----------------+\n| min(big) | max(big)             | max(big) - 1   |\n+----------+----------------------+----------------+\n| -1.00000 | 92233718038528.00000 | 92233718038527 |\n+----------+----------------------+----------------+\n1 row in set (0.05 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/Data-Types/data-types/#binary-type","title":"Binary type","text":"data type storage space minimum value maximum values grammatical representation descriptive BIT 1bytes 0 18446744073709551615 BIT(M) Data type for storing bit data, M supports the range from 1 to 64, M is 1 by default, if the stored data is less than M bits, then the length will be left zero padded."},{"location":"MatrixOne/Reference/Data-Types/data-types/#examples_2","title":"Examples","text":"<pre><code>create table t1 (a bit);\nmysql&gt; desc  t1;--bit(M)  M DEFAULT 1\n+-------+--------+------+------+---------+-------+---------+\n| Field | Type   | Null | Key  | Default | Extra | Comment |\n+-------+--------+------+------+---------+-------+---------+\n| a     | BIT(1) | YES  |      | NULL    |       |         |\n+-------+--------+------+------+---------+-------+---------+\n1 row in set (0.01 sec)\n\ncreate table t2 (a bit(8));\n\n-- Assigning values with bit-value literal syntax\ninsert into t2 values (0b1);\ninsert into t2 values (b'1');\nmysql&gt; select * from t2;\n+------------+\n| a          |\n+------------+\n| 0x01       |\n| 0x01       |\n+------------+\n2 rows in set (0.00 sec)\n\ntruncate table t2;\n\n--Assigning values with hex-value literal syntax\ninsert into t2 values (0x10);\ninsert into t2 values (x'10');\nmysql&gt; select * from t2;\n+------------+\n| a          |\n+------------+\n| 0x10       |\n| 0x10       |\n+------------+\n2 rows in set (0.00 sec)\n\ntruncate table t2;\n\n--Supports assignment by int type, but the length of the binary representation of int cannot exceed the length of bit type.\ninsert into t2 values (255);--a = b'11111111'\nmysql&gt; insert into t2 values (256);--The length of the binary representation of 256 exceeds 8.\nERROR 20301 (HY000): invalid input: data too long, type width = 8, val = 100000000\n\nmysql&gt; select * from t2;\n+------------+\n| a          |\n+------------+\n| 0xFF       |\n+------------+\n1 row in set (0.00 sec)\n\ntruncate table t2;\n\n--Floating-point data will first be rounded to int type and then assigned according to the int type.\ninsert into t2 values (2.1);--a = b'00000010'\nmysql&gt; select * from t2;\n+------------+\n| a          |\n+------------+\n| 0x02       |\n+------------+\n1 row in set (0.00 sec)\n\ntruncate table t2;\n\n--Character data is stored as its encoded value, and the total length of the encoding into which the entire string is converted must not exceed the bit type.\ninsert into t2 values ('a');--a = b'01100001' \nmysql&gt; insert into t2 values ('\u554a');--utf8('\u554a') = 0xe5958a;\nERROR 20301 (HY000): invalid input: data too long, type width = 8, val = 111001011001010110001010\n\nmysql&gt; select * from t2;\n+------------+\n| a          |\n+------------+\n| 0x61       |\n+------------+\n1 row in set (0.00 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/Data-Types/data-types/#string-types","title":"String Types","text":"Data Type Size Length Syntax Description char 24 bytes 0 ~ 4294967295 CHAR Fixed length string varchar 24 bytes 0 ~ 4294967295 VARCHAR Variable length string binary 255 bytes 0 ~ 65535 BINARY(M) Similar to CHAR, binary string varbinary 255 bytes 0 ~ 65535 VARBINARY(M) Similar to VARCHAR, binary string text 1 GB other types mapping TEXT Long text data, TINY TEXT, MEDIUM TEXT, and LONG TEXT are not distinguished blob 1 GB other types mapping BLOB Long text data in binary form, TINY BLOB, MEDIUM BLOB, and LONG BLOB are not distinguished enum 1 byte or 2 bytes 0 ~ 65535 enum An enumeration. A string object that can have only one value, chosen from the list of values 'value1', 'value2', ..., NULL or the special '' error value. ENUM values are represented internally as integers."},{"location":"MatrixOne/Reference/Data-Types/data-types/#examples_3","title":"Examples","text":"<ul> <li>CHAR and VARCHAR</li> </ul> <pre><code>-- Create a table named \"names\" with 2 attributes of a \"varchar\" and a \"char\"\ncreate table names(name varchar(255),age char(255));\ninsert into names(name, age) values('Abby', '24');\ninsert into names(name, age) values(\"Bob\", '25');\ninsert into names(name, age) values('Carol', \"23\");\ninsert into names(name, age) values(\"Dora\", \"29\");\n\nmysql&gt; select name,age from names;\n+-------+------+\n| name  | age  |\n+-------+------+\n| Abby  | 24   |\n| Bob   | 25   |\n| Carol | 23   |\n| Dora  | 29   |\n+-------+------+\n4 rows in set (0.00 sec)\n</code></pre> <ul> <li>BINARY and VARBINARY</li> </ul> <pre><code>-- Create a table named \"names\" with 2 attributes of a \"varchar\" and a \"char\"\ncreate table names(name varbinary(255),age binary(255));\ninsert into names(name, age) values('Abby', '24');\ninsert into names(name, age) values(\"Bob\", '25');\ninsert into names(name, age) values('Carol', \"23\");\ninsert into names(name, age) values(\"Dora\", \"29\");\n\nmysql&gt; select name,age from names;\n+--------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+\n| name         | age|\nn| 0x41626279   | 0x323400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 |\n| 0x426F62     | 0x|\n| 0x4361726F6C | 0x|\n| 0x446F7261   | 0x|\nn4 rows in set (0.01 sec)\n</code></pre> <ul> <li>TEXT</li> </ul> <pre><code>-- Create a table named \"texttest\" with 1 attribute of a \"text\"\ncreate table texttest (a text);\ninsert into texttest values('abcdef');\ninsert into texttest values('_bcdef');\ninsert into texttest values('a_cdef');\ninsert into texttest values('ab_def');\ninsert into texttest values('abc_ef');\ninsert into texttest values('abcd_f');\ninsert into texttest values('abcde_');\n\nmysql&gt; select * from texttest where a like 'ab\\_def' order by 1 asc;\n+--------+\n| a      |\n+--------+\n| ab_def |\n+--------+\n1 row in set (0.01 sec)\n</code></pre> <ul> <li>BLOB</li> </ul> <pre><code>-- Create a table named \"blobtest\" with 1 attribute of a \"blob\"\ncreate table blobtest (a blob);\ninsert into blobtest values('abcdef');\ninsert into blobtest values('_bcdef');\ninsert into blobtest values('a_cdef');\ninsert into blobtest values('ab_def');\ninsert into blobtest values('abc_ef');\ninsert into blobtest values('abcd_f');\ninsert into blobtest values('abcde_');\n\nmysql&gt; select * from blobtest where a like 'ab\\_def' order by 1 asc;\n+----------------+\n| a              |\n+----------------+\n| 0x61625F646566 |\n+----------------+\n1 row in set (0.01 sec)\n</code></pre> <ul> <li>ENUM</li> </ul> <pre><code>-- Create a table named \"enumtest\" with 1 attribute of a \"enum\"\nCREATE TABLE enumtest (color ENUM('red', 'green', 'blue'));\nINSERT INTO enumtest (color) VALUES ('red');\nmysql&gt; SELECT * FROM enumtest WHERE color = 'green';\n+-------+\n| color |\n+-------+\n| green |\n+-------+\n1 row in set (0.01 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/Data-Types/data-types/#json-types","title":"JSON Types","text":"JSON Data Type Syntax Object Object is enclosed by <code>{}</code>, separated by commas between key-value pairs, and separated by colons <code>:</code> between keys and values.The value/key can be String, Number, Bool, Time and date. Array Array is enclosed by <code>[]</code>, separated by commas between key-value pairs, and separated by colons <code>:</code> between keys and values. The value can be String, Number, Bool, Time and date."},{"location":"MatrixOne/Reference/Data-Types/data-types/#examples_4","title":"Examples","text":"<pre><code>-- Create a table named \"jsontest\" with 1 attribute of a \"json\"\ncreate table jsontest (a json,b int);\ninsert into jsontest values ('{\"t1\":\"a\"}',1),('{\"t1\":\"b\"}',2);\n\nmysql&gt; select * from jsontest;\n+-------------+------+\n| a           | b    |\n+-------------+------+\n| {\"t1\": \"a\"} |    1 |\n| {\"t1\": \"b\"} |    2 |\n+-------------+------+\n2 rows in set (0.01 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/Data-Types/data-types/#time-and-date-types","title":"Time and Date Types","text":"Data Type Size Resolution Min Value Max Value Precision Time 8 bytes microsecond -2562047787:59:59.999999 2562047787:59:59.999999 hh:mm:ss.ssssss Date 4 bytes day 0001-01-01 9999-12-31 YYYY-MM-DD/YYYYMMDD DateTime 8 bytes microsecond 0001-01-01 00:00:00.000000 9999-12-31 23:59:59.999999 YYYY-MM-DD hh:mi:ssssss TIMESTAMP 8 bytes microsecond 0001-01-01 00:00:00.000000 9999-12-31 23:59:59.999999 YYYYMMDD hh:mi:ss.ssssss <p>The Time and Date section type supports the following hint values when inserting data:</p> <ul> <li> <p><code>Time</code>:{t 'xx'},{time 'xx'}</p> </li> <li> <p><code>Date</code>:{d 'xx'},{date 'xx'}</p> </li> <li> <p><code>TIMESTAMP</code>:{ts 'xx'},{timestamp 'xx'}</p> </li> </ul>"},{"location":"MatrixOne/Reference/Data-Types/data-types/#examples_5","title":"Examples","text":"<ul> <li>TIME</li> </ul> <pre><code>-- Create a table named \"timetest\" with 1 attributes of a \"time\"\ncreate table time_02(t1 time);\ninsert into time_02 values(200),(time'23:29:30'),({t'12:11:12'}),('');\n\nmysql&gt; select * from time_02;\n+----------+\n| t1       |\n+----------+\n| 00:02:00 |\n| 23:29:30 |\n| 12:11:12 |\n| NULL     |\n+----------+\n4 rows in set (0.01 sec)\n</code></pre> <ul> <li>DATE</li> </ul> <pre><code>-- Create a table named \"datetest\" with 1 attributes of a \"date\"\ncreate table datetest (a date not null, primary key(a));\ninsert into datetest values ({d'2022-01-01'}), ('20220102'),(date'2022-01-03'),({d now()});\nmysql&gt; select * from datetest;\n+------------+\n| a          |\n+------------+\n| 2022-01-01 |\n| 2022-01-02 |\n| 2022-01-03 |\n| 2024-03-19 |\n+------------+\n4 rows in set (0.00 sec)\n</code></pre> <ul> <li>DATETIME</li> </ul> <pre><code>-- Create a table named \"datetimetest\" with 1 attributes of a \"datetime\"\ncreate table datetimetest (a datetime(0) not null, primary key(a));\ninsert into datetimetest values ('20200101000000'), ('2022-01-02'), ('2022-01-02 00:00:01'), ('2022-01-02 00:00:01.512345');\n\nmysql&gt; select * from datetimetest order by a asc;\n+---------------------+\n| a                   |\n+---------------------+\n| 2020-01-01 00:00:00 |\n| 2022-01-02 00:00:00 |\n| 2022-01-02 00:00:01 |\n| 2022-01-02 00:00:02 |\n+---------------------+\n4 rows in set (0.02 sec)\n</code></pre> <ul> <li>TIMESTAMP</li> </ul> <pre><code>-- Create a table named \"timestamptest\" with 1 attribute of a \"timestamp\"\ncreate table timestamptest (a timestamp(0) not null, primary key(a));\ninsert into timestamptest values ('20200101000000'), (timestamp'2022-01-02 11:30:40'), ({ts'2022-01-02 00:00:01'}), ({ts current_timestamp});\n\nmysql&gt; select * from timestamptest;\n+---------------------+\n| a                   |\n+---------------------+\n| 2020-01-01 00:00:00 |\n| 2022-01-02 11:30:40 |\n| 2022-01-02 00:00:01 |\n| 2024-03-19 17:22:08 |\n+---------------------+\n4 rows in set (0.00 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/Data-Types/data-types/#bool","title":"Bool","text":"Data Type Size True 1 byte False 1 byte"},{"location":"MatrixOne/Reference/Data-Types/data-types/#examples_6","title":"Examples","text":"<pre><code>-- Create a table named \"booltest\" with 2 attribute of a \"boolean\" and b \"bool\"\ncreate table booltest (a boolean,b bool);\ninsert into booltest values (0,1),(true,false),(true,1),(0,false),(NULL,NULL);\n\nmysql&gt; select * from booltest;\n+-------+-------+\n| a     | b     |\n+-------+-------+\n| false | true  |\n| true  | false |\n| true  | true  |\n| false | false |\n| NULL  | NULL  |\n+-------+-------+\n5 rows in set (0.00 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/Data-Types/data-types/#decimal-types","title":"Decimal Types","text":"Data Type Size Precision Syntax Decimal64 8 bytes 18 digits Decimal(N,S)  N is the total number of digits, the range is(1 ~ 18). The decimal point and (for negative numbers) the - sign are not counted in N.If N is omitted, the default value of N should be the largest; that is, the value is 18. S is the number of digits after the decimal point (the scale), the range is(0 ~ N) If S is 0, values have no decimal point or fractional part. If S is omitted, the default is 0, for example, Decimal(10) is equivalent to Decimal(10, 0). For example, Decimal(10,8) represents a number with a total length of 10 and a decimal place of 8. Decimal128 16 bytes 38 digits Decimal(N,S)  N is the total number of digits, the range is(18 ~ 38). The decimal point and (for negative numbers) the - sign are not counted in N.If N is omitted, the default value of N should be the largest; that is, the value is 38. S is the number of digits after the decimal point (the scale), the range is(0 ~ N) If S is 0, values have no decimal point or fractional part. If S is omitted, the default is 0, for example, Decimal(20) is equivalent to Decimal(20, 0).For example, Decimal(20,9) represents a number with a total length of 20 and a decimal place of 9."},{"location":"MatrixOne/Reference/Data-Types/data-types/#examples_7","title":"Examples","text":"<pre><code>-- Create a table named \"decimalTest\" with 2 attribute of a \"decimal\" and b \"decimal\"\ncreate table decimalTest(a decimal(6,3), b decimal(24,18));\ninsert into decimalTest values(123.4567, 123456.1234567891411241355);\n\nmysql&gt; select * from decimalTest;\n+---------+---------------------------+\n| a       | b                         |\n+---------+---------------------------+\n| 123.457 | 123456.123456789141124136 |\n+---------+---------------------------+\n1 row in set (0.01 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/Data-Types/data-types/#uuid-type","title":"UUID Type","text":"UUID type Explanation UUID A UUID value consists of 32 hexadecimal digits and 4 hyphens '-', in the form of 8-4-4-4-12, a standard UUID example: <code>a0eebc99 -9c0b-4ef8-bb6d-6bb9bd380a11</code>."},{"location":"MatrixOne/Reference/Data-Types/data-types/#example","title":"Example","text":"<pre><code>-- Create a new table named 't1' and set the 'a' column as UUID type, and set the 'a' column as the primary key\ncreate table t1(a uuid primary key);\n\n-- Insert a new UUID value into column 'a' of table 't1'\ninsert into t1 values \u200b\u200b(uuid());\n\n-- Query the length of the value of the 'a' column in the 't1' table converted to a string\nmysql&gt; select length(cast(a as varchar)) from t1;\n+----------------------------+\n|length(cast(a as varchar))|\n+----------------------------+\n| 36 |\n+----------------------------+\n1 row in set (0.01 sec)\n\n-- Query all records in the t1 table, whose value is a UUID\nmysql&gt; select * from t1;\n+----------------------------------------+\n| a |\n+----------------------------------------+\n| 948d8e4e-1b00-11ee-b656-5ad2460dea50 |\n+----------------------------------------+\n1 row in set (0.00 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/Data-Types/data-types/#vector-data-type","title":"vector data type","text":"type descriptive vecf32 Vector column type is float32 vecf64 Vector column type is float64"},{"location":"MatrixOne/Reference/Data-Types/data-types/#example_1","title":"Example","text":"<pre><code>create table t1(n1 vecf32(3), n2 vecf64(2));\ninsert into t1 values(\"[1,2,3]\",'[4,5]');\n\nmysql&gt; select * from t1;\n+-----------+--------+\n| n1        | n2     |\n+-----------+--------+\n| [1, 2, 3] | [4, 5] |\n+-----------+--------+\n1 row in set (0.00 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/Data-Types/enum-type/","title":"The ENUM Type","text":"<p>\"ENUM\" is a list of strings used to store a set of predefined discrete values. It can define a type with discrete values, with each enumeration constant representing a specific value.</p> <p>The \"ENUM\" data type is suitable for storing data with limited fixed values, such as status and identification.</p> <p>The advantages of the \"ENUM\" data type are:</p> <p>Improved readability of column values. Compact data storage. When storing \"ENUM\" in MatrixOne, only the numerical index (1, 2, 3, ...) corresponding to the enumeration value is stored.</p>"},{"location":"MatrixOne/Reference/Data-Types/enum-type/#syntax","title":"Syntax","text":"<pre><code>ENUM ('value1', 'value2', ..., 'valuen')\n</code></pre> <p>For example, to define an ENUM column, you can use the following syntax:</p> <pre><code>CREATE TABLE table_name (\n...\ncol ENUM ('value1','value2','value3'),\n...\n);\n</code></pre>"},{"location":"MatrixOne/Reference/Data-Types/enum-type/#explanations","title":"Explanations","text":"<ul> <li><code>ENUM</code> is a keyword used to declare an enumeration type.</li> <li>value1 to valuen is the optional list of choices for this <code>ENUM</code> type. The value of a column using the <code>ENUM</code> type can only be one of the values listed above.</li> <li>Enumeration values can be of type string, int, or time.</li> </ul> <p>Note: You can have multiple enumeration values in the <code>ENUM</code> data type. However, it is recommended to keep the number of enumeration values below 20.</p>"},{"location":"MatrixOne/Reference/Data-Types/enum-type/#example-explanation","title":"Example Explanation","text":"<p>The value of an <code>ENUM</code> type must be selected from a predefined list of values. The following example will help you understand:</p> <pre><code>CREATE TABLE enumtable (\nid INT NOT NULL AUTO_INCREMENT,\ncolor ENUM('red', 'green', 'blue'),\nPRIMARY KEY (id)\n);\n</code></pre> <p>The above statement will create a table named <code>enumtable</code>, which contains an enum type field named <code>color</code>. The value of the <code>color</code> field must be one of <code>red</code>, <code>green</code>, or <code>blue</code>. At the same time, according to the order of column definition, the indexes of <code>red</code>, <code>green</code>, and <code>blue</code> are 1, 2, and 3, respectively.</p>"},{"location":"MatrixOne/Reference/Data-Types/enum-type/#insert-enum-values","title":"Insert ENUM values","text":"<p>When inserting data into a field of an enumeration type, only predefined enumeration values \u200b\u200bor <code>NULL</code> can be inserted. An error is raised if the inserted value is not in the predefined list. For example:</p> <pre><code>INSERT INTO enumtable (id, color) VALUES ('01', 'red');\n-- 'red' is in the predefined list; the insertion was successful\nINSERT INTO enumtable (id, color) VALUES ('02', 'yellow');\n-- 'yellow' is not in the predefined list, an error will be generated\nINSERT INTO enumtable (id, color) VALUES ('03', NULL);\n-- The enumeration member does not define not null; the insertion is successful\n</code></pre> <p>In addition to enumeration values, data can be inserted into ENUM columns using numeric indexes on enumeration members. For example:</p> <pre><code>INSERT INTO enumtable (id, color) VALUES ('04', 2);\n-- Since the index of `green` is 2, this data is successfully inserted\n</code></pre> <ul> <li>NON-NULL CONSTRAINT FOR ENUM RESTRICTIONS</li> </ul> <p>If we defined the <code>color</code> column <code>NOT NULL</code> when creating the table:</p> <pre><code>CREATE TABLE enumtable (\nid INT NOT NULL AUTO_INCREMENT,\ncolor ENUM('red', 'green', 'blue') NOT NULL,\nPRIMARY KEY (id)\n);\n</code></pre> <p>When inserting a new row without specifying a value for the color column, MatrixOne will use the first enumeration member as the default value:</p> <pre><code>INSERT INTO enumtable (id) VALUES ('05');\n-- Here, the first enumeration member `red` will be assigned as the default value for the column with id 05\n</code></pre>"},{"location":"MatrixOne/Reference/Data-Types/enum-type/#features-that-are-different-from-mysql","title":"Features that are different from MySQL","text":"<p>Unlike MySQL, MatrixOne's ENUM type can only be compared with the string type in the WHERE condition.</p> <p>You can see this example:</p> <pre><code>update orders set status= 2 where status='Processing';`\n</code></pre> <p>In this example, you must update the <code>status</code> to 2 for the row whose <code>status</code> is <code>Processing</code>. Due to the nature of the ENUM type, MatrixOne implicitly converts 2 to the string <code>2</code> in the WHERE condition, which is then compared with <code>Processing</code>.</p>"},{"location":"MatrixOne/Reference/Data-Types/enum-type/#constraints","title":"Constraints","text":"<ol> <li>Modifying ENUM enumeration members requires rebuilding the table using the <code>ALTER TABLE</code> statement.</li> <li>MatrixOne does not support Filtering ENUM values and Sorting ENUM values.</li> </ol>"},{"location":"MatrixOne/Reference/Data-Types/fixed-point-types/","title":"Fixed-Point Types (Exact Value) - DECIMAL","text":"<p>The DECIMAL type store exact numeric data values. These types are used when it is important to preserve exact precision, for example with monetary data, or with scientific calculations.</p> <p>In a DECIMAL column declaration, the precision and scale can be (and usually is) specified. For example:</p> <pre><code>salary DECIMAL(5,2)\n</code></pre> <p>In this example, 5 is the precision and 2 is the scale. The precision represents the number of significant digits that are stored for values, and the scale represents the number of digits that can be stored following the decimal point.</p> <p>Standard SQL requires that DECIMAL(5,2) be able to store any value with five digits and two decimals, so values that can be stored in the salary column range from -999.99 to 999.99.</p> <p>In MatrixOne, the syntax DECIMAL(M) is equivalent to DECIMAL(M,0). Similarly, the syntax DECIMAL is equivalent to DECIMAL(M,0), where the implementation is permitted to decide the value of M. MatrixOne supports both of these variant forms of DECIMAL syntax. The default value of M is 10.</p> <p>If the scale is 0, DECIMAL values contain no decimal point or fractional part.</p> <p>In MatrixOne, the maximum number of digits for DECIMAL is 38, but the actual range for a given DECIMAL column can be constrained by the precision or scale for a given column. When such a column is assigned a value with more digits following the decimal point than are permitted by the specified scale, the value is converted to that scale.</p>"},{"location":"MatrixOne/Reference/Data-Types/fixed-point-types/#decimal-data-type-characteristics","title":"DECIMAL Data Type Characteristics","text":"<p>This section discusses the characteristics of the DECIMAL data type (and its synonyms), with particular regard to the following topics:</p> <ul> <li> <p>Maximum number of digits</p> </li> <li> <p>Storage format</p> </li> </ul> <p>The declaration syntax for a DECIMAL column is DECIMAL(M,D). The ranges of values for the arguments are as follows:</p> <p>M is the maximum number of digits (the precision). It has a range of 1 to 38.</p> <p>D is the number of digits to the right of the decimal point (the scale). It has a range of 1 to 38 and must be no larger than M.</p> <p>If D is omitted, the default is 0. If M is omitted, the default is 10.</p> <p>The maximum value of 38 for M means that calculations on DECIMAL values are accurate up to 38 digits.</p> <p>Values for DECIMAL columns are stored using a binary format that packs decimal digits into 8 bytes or 16 bytes. The storage required for remaining digits is given by the following table.</p> Digits Number of Bytes 0-18 8 bytes 19-38 16 bytes <p>For a full explanation of the internal implementation of DECIMAL values, see the Feature Design.</p>"},{"location":"MatrixOne/Reference/Data-Types/json-type/","title":"The JSON Data Type","text":"<p>MatrixOne supports a native JSON data type defined by RFC 7159 that enables efficient access to data in JSON (JavaScript Object Notation) documents. The JSON data type provides these advantages over storing JSON-format strings in a string column:</p> <p>Automatic validation of JSON documents stored in JSON columns. Invalid documents produce an error.</p> <p>Automatically optimize storage format. JSON documents stored in JSON columns are converted to an internal format that permits quick read access to document elements. When the server later must read a JSON value stored in this binary format, the value need not be parsed from a text representation. The binary format is structured to enable the server to look up subobjects or nested values directly by key or array index without reading all values before or after them in the document.</p> <p>The space required to store a JSON document is roughly the same as for <code>BLOB</code> or <code>TEXT</code>.</p>"},{"location":"MatrixOne/Reference/Data-Types/json-type/#json-types","title":"JSON Types","text":"<p>JSON types contain JSON array and JSON object.</p> <ul> <li>A JSON array contains a list of values separated by commas and enclosed within [ and ] characters:</li> </ul> <pre><code>[\"abc\", 10, null, true, false]\n</code></pre> <ul> <li>A JSON object contains a set of key-value pairs separated by commas and enclosed within { and } characters:</li> </ul> <pre><code>{\"k1\": \"value\", \"k2\": 10}\n</code></pre> <p>As the examples illustrate, JSON arrays and objects can contain scalar values that are strings or numbers, the JSON null literal, or the JSON boolean true or false literals. Keys in JSON objects must be strings. Temporal (date,  datetime) scalar values are also permitted:</p> <pre><code>[\"12:18:29.000000\", \"2015-07-29\", \"2015-07-29 12:18:29.000000\"]\n</code></pre> <p>Nesting is permitted within JSON array elements and JSON object key values:</p> <pre><code>[99, {\"id\": \"HK500\", \"cost\": 75.99}, [\"hot\", \"cold\"]]\n{\"k1\": \"value\", \"k2\": [10, 20]}\n</code></pre>"},{"location":"MatrixOne/Reference/Data-Types/json-type/#normalization-of-json-values","title":"Normalization of JSON Values","text":"<p>When a string is parsed and found to be a valid JSON document, it is also normalized. This means that members with keys that duplicate a key found later in the document, reading from left to right, are discarded.</p> <p>Normalization is performed when values are inserted into JSON columns, as shown here:</p> <pre><code>CREATE TABLE t1 (c1 JSON);\nINSERT INTO t1 VALUES\n('{\"x\": 17, \"x\": \"red\"}'),\n('{\"x\": 17, \"x\": \"red\", \"x\": [3, 5, 7]}');\n\nmysql&gt; SELECT c1 FROM t1;\n+------------------+\n| c1               |\n+------------------+\n| {\"x\": \"red\"}     |\n| {\"x\": [3, 5, 7]} |\n+------------------+\n</code></pre>"},{"location":"MatrixOne/Reference/Data-Types/uuid-type/","title":"UUID Type","text":"<p>A UUID is a universally unique identifier consisting of 32 hexadecimal digits followed by 4 hyphens. UUIDs are globally unique, not unique in the database, and even performing a UUID call on two unconnected, standalone devices is expected to generate two different values. UUID is often used to generate a random value for the corresponding row to ensure the uniqueness of each record. . UUIDs are suitable as unique identifiers in a cluster environment.</p> <p>Info</p> <p>Although <code>UUID()</code> values \u200b\u200bare unique, they are not guessable or unpredictable. If unpredictability is desired, UUID values \u200b\u200bshould be generated in other ways.</p> <p><code>UUID()</code> returns a version 1 UUID value conforming to the RFC 4122 standard, which is a 128-bit number, which represents a utf8mb3 composed of five A string of hexadecimal numbers, that is, aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee, the format is explained as follows:</p> <ul> <li> <p>The first three numbers are generated from the low, middle, and high parts of a timestamp. The high part also includes the UUID version number.</p> </li> <li> <p>The fourth number preserves temporal uniqueness in case the timestamp value loses monotonicity (for example, due to daylight saving time).</p> </li> <li> <p>The fifth number is an IEEE 802 node number that provides spatial uniqueness. A random number is substituted if the latter is not available (for example, because the host device has no Ethernet card, or it is unknown how to find the hardware address of an interface on the host operating system). In this case, spatial uniqueness cannot be guaranteed. Nevertheless, a collision should have very low probability.</p> </li> </ul> <p>SQL statement supported by UUID type:</p> <ul> <li>DDL - <code>CREATE</code> statement: Can create a table with a field of type UUID.</li> <li>DML - <code>INSERT</code>/<code>UPDATE</code>/<code>DELETE</code> statement: Allows insert, update and delete operations on UUID type data.</li> <li>DQL - <code>SELECT</code> statement: UUID type fields can be queried, and the query results are displayed as strings on the client side.</li> </ul> <p>SQL statement clauses supported by UUID type:</p> <ul> <li><code>ORDER BY</code> clause: UUID type fields can be used as sorting criteria.</li> <li><code>WHERE</code> clause: UUID type fields can be used in the <code>WHERE</code> clause, and comparison operations are supported.</li> <li><code>HAVING</code> clause: UUID type fields can be used in the <code>HAVING</code> clause, and comparison operations are supported.</li> <li><code>GROUP BY</code> clause: UUID type fields can be used as grouping criteria for <code>GROUP BY</code>.</li> </ul> <p>Other supported UUID type functions:</p> <ul> <li>UUID type field can be set as the table's primary key.</li> <li>UUID type fields can be used as parameters of aggregation functions (such as max, min, and count).</li> <li>UUID type data can be converted between string types.</li> </ul>"},{"location":"MatrixOne/Reference/Data-Types/uuid-type/#examples","title":"Examples","text":"<ul> <li>Example 1:</li> </ul> <pre><code>mysql&gt; select uuid();\n+--------------------------------------+\n| uuid()                               |\n+--------------------------------------+\n| 4aa4f4de-1b00-11ee-b656-5ad2460dea50 |\n+--------------------------------------+\n1 row in set (0.00 sec)\n</code></pre> <ul> <li>Example 2:</li> </ul> <pre><code>drop table if exists t1;\n-- Create a new table 't1' with two columns 'a' and 'b', column 'a' is of type INT and column 'b' is of type float\ncreate table t1(a INT, b float);\n\n-- Insert two rows into table 't1'\ninsert into t1 values(12124, -4213.413), (12124, -42413.409);\n\n-- Query the number of rows in the 't1' table, and generate the length of the uuid() function of each row. Note that the uuid() function generates a new UUID here.\n-- does not depend on any data from the 't1' table, the returned length is 36 because the UUID is a 36 character string with 32 characters and 4 dashes\nmysql&gt; SELECT length(uuid()) FROM t1;\n\n+----------------+\n|length(uuid())|\n+----------------+\n| 36 |\n| 36 |\n+----------------+\n2 rows in set (0.00 sec)\n</code></pre> <ul> <li>Example 3:</li> </ul> <pre><code>-- Create a table named 't1' with a column named 'a' of data type VARCHAR with a maximum length of 20\ncreate table t1(a varchar(20));\n\n-- Insert a row of data in the 't1' table, the value of the 'a' column is '123123sdafsdf'\ninsert into t1 values('123123sdafsdf');\n\n-- Select all rows from table 't1' and return the value of column 'a' for each row, and a newly generated UUID value\nmysql&gt; select uuid(), a from t1;\n+-------------------------------------+---------- -----+\n| uuid() | a |\n+-------------------------------------+---------- -----+\n| 664f1a96-1981-11ee-a041-5ad2460dea50 | 123123sdafsdf |\n+-------------------------------------+---------- -----+\n1 row in set (0.01 sec)\n</code></pre> <ul> <li>Example 4:</li> </ul> <pre><code>-- Create a table named namelists with two fields, id and name\nCREATE TABLE namelists (\nid UUID DEFAULT uuid() PRIMARY KEY, -- the id field is of UUID type, and the default value is the UUID value generated by the uuid() function as the primary key\nname VARCHAR NOT NULL -- the name field is of type VARCHAR and cannot be empty\n);\nINSERT INTO namelists (name) VALUES ('Tom'), ('Jane'), ('Bob');\nmysql&gt; select * from namelists;\n+--------------------------------------+--------+\n| id                                   | name   |\n+--------------------------------------+--------+\n| 61400e9c-1bbc-11ee-b512-5ad2460dea50 | Tom    |\n| 61400ea6-1bbc-11ee-b512-5ad2460dea50 | Jane   |\n| 61400ea6-1bbc-11ee-b513-5ad2460dea50 | Bob    |\n+--------------------------------------+--------+\n3 rows in set (0.00 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/Data-Types/vector-type/","title":"Vector Type","text":"<p>In a database, vectors are usually a set of numbers that are arranged in a particular way to represent some data or feature. These vectors can be one-dimensional arrays, multi-dimensional arrays, or data structures with higher dimensions. MatrixOne support vector data type.</p> <p>In MatrixOne, vectors are designed as a data type similar to Array arrays in programming languages (MatrixOne does not currently support array types), but is a more specific array type. First, it is a one-dimensional array type, meaning it cannot be used to build a Matrix matrix. Also currently only vectors of type <code>float32</code> and <code>float64</code> are supported, called <code>vecf32</code> and <code>vecf64</code> respectively, not numbers of type string and integer.</p> <p>When creating a vector column, we can specify the dimension size of the vector column, such as vecf32(3), which is the length size of the array of vectors and can support up to 65,535 dimensions.</p>"},{"location":"MatrixOne/Reference/Data-Types/vector-type/#how-to-use-vector-types-in-sql","title":"How to use vector types in SQL","text":"<p>The syntax for using vectors is the same as for regular table building, inserting data, querying data.</p>"},{"location":"MatrixOne/Reference/Data-Types/vector-type/#create-a-vector-column","title":"Create a vector column","text":"<p>You can create two vector columns, one of type Float32 and the other of type Float64, as per the following SQL statement, and you can set the dimension of both vector columns to 3.</p> <p>Currently vector types cannot be used as primary or unique keys.</p> <pre><code>create table t1(a int, b vecf32(3), c vecf64(3));\n</code></pre>"},{"location":"MatrixOne/Reference/Data-Types/vector-type/#insert-vector","title":"Insert Vector","text":"<p>MatrixOne supports inserting vectors in two formats.</p> <p>Text Format</p> <pre><code>insert into t1 values(1, \"[1,2,3]\", \"[4,5,6]\");\n</code></pre> <p>binary format</p> <p>If you want to use a Python NumPy array, you can insert that NumPy array directly into MatrixOne by encoding the array in hexadecimal instead of converting it to comma-separated text format. This is faster when inserting vectors with higher dimensions.</p> <pre><code>insert into t1 (a, b) values (2, cast(unhex(\"7e98b23e9e10383b2f41133f\") as blob));\n-- \"7e98b23e9e10383b2f41133f\" for small-endian hexadecimal encoding of []float32{0.34881967, 0.0028086076, 0.5752134}\n```\n\n### query vector\n\nVector columns can also be read in two formats.\n\n**Text Format**\n\n```sql\nmysql&gt; select a, b from t1;\n+------+---------------------------------------+\n| a    | b                                     |\n+------+---------------------------------------+\n|    1 | [1, 2, 3]                             |\n|    2 | [0.34881967, 0.0028086076, 0.5752134] |\n+------+---------------------------------------+\n2 rows in set (0.00 sec)\n</code></pre> <p>binary format</p> <p>Binary format is useful if you need to read the vector result set directly into a NumPy array with minimal conversion costs.</p> <pre><code>mysql&gt; select hex(b) from t1;\n+--------------------------+\n| hex(b)                   |\n+--------------------------+\n| 0000803f0000004000004040 |\n| 7e98b23e9e10383b2f41133f |\n+--------------------------+\n2 rows in set (0.00 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/Data-Types/date-time-data-types/timestamp-initialization/","title":"Automatic Initialization and Updating for TIMESTAMP and DATETIME","text":"<p><code>TIMESTAMP</code> and <code>DATETIME</code> columns can be automatically initialized and updated to the current date and time (that is, the current timestamp).</p> <p>For any <code>TIMESTAMP</code> or <code>DATETIME</code> column in a table, you can assign the current timestamp as the default value, the auto-update value, or both:</p> <ul> <li> <p>An auto-initialized column is set to the current timestamp for inserted rows that specify no value for the column.</p> </li> <li> <p>An auto-updated column is automatically updated to the current timestamp when the value of any other column in the row is changed from its current value. An auto-updated column remains unchanged if all other columns are set to their current values. To prevent an auto-updated column from updating when other columns change, explicitly set it to its current value. To update an auto-updated column even when other columns do not change, explicitly set it to the value it should have (for example, set it to CURRENT_TIMESTAMP).</p> </li> </ul> <p>To specify automatic properties, use the <code>DEFAULT CURRENT_TIMESTAMP</code> and <code>ON UPDATE CURRENT_TIMESTAMP</code> clauses in column definitions. The order of the clauses does not matter. If both are present in a column definition, either can occur first. Any of the synonyms for <code>CURRENT_TIMESTAMP</code> have the same meaning as <code>CURRENT_TIMESTAMP</code>. These are <code>CURRENT_TIMESTAMP()</code>, <code>NOW()</code>.</p> <p>Use of <code>DEFAULT CURRENT_TIMESTAMP</code> and <code>ON UPDATE CURRENT_TIMESTAMP</code> is specific to <code>TIMESTAMP</code> and <code>DATETIME</code>. The DEFAULT clause also can be used to specify a constant (nonautomatic) default value (for example, DEFAULT 0 or DEFAULT '2000-01-01 00:00:00').</p> <p><code>TIMESTAMP</code> or <code>DATETIME</code> column definitions can specify the current timestamp for both the default and auto-update values, for one but not the other, or for neither. Different columns can have different combinations of automatic properties. The following rules describe the possibilities:</p> <ul> <li>With both <code>DEFAULT CURRENT_TIMESTAMP</code> and <code>ON UPDATE CURRENT_TIMESTAMP</code>, the column has the current timestamp for its default value and is automatically updated to the current timestamp.</li> </ul> <pre><code>CREATE TABLE t1 (\n  ts TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n  dt DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP\n);\n</code></pre> <ul> <li>With a <code>DEFAULT</code> clause but no <code>ON UPDATE CURRENT_TIMESTAMP</code> clause, the column has the given default value and is not automatically updated to the current timestamp.</li> </ul> <p>The default depends on whether the DEFAULT clause specifies CURRENT_TIMESTAMP or a constant value. With CURRENT_TIMESTAMP, the default is the current timestamp.</p> <pre><code>CREATE TABLE t1 (\n  ts TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n  dt DATETIME DEFAULT CURRENT_TIMESTAMP\n);\n</code></pre> <p>With a constant, the default is the given value. In this case, the column has no automatic properties at all.</p> <pre><code>CREATE TABLE t1 (\n  ts TIMESTAMP DEFAULT 0,\n  dt DATETIME DEFAULT 0\n);\n</code></pre> <ul> <li>With an <code>ON UPDATE CURRENT_TIMESTAMP</code> clause and a constant <code>DEFAULT</code> clause, the column is automatically updated to the current timestamp and has the given constant default value.</li> </ul> <pre><code>CREATE TABLE t1 (\n  ts TIMESTAMP DEFAULT 0 ON UPDATE CURRENT_TIMESTAMP,\n  dt DATETIME DEFAULT 0 ON UPDATE CURRENT_TIMESTAMP\n);\n</code></pre> <ul> <li>With an <code>ON UPDATE CURRENT_TIMESTAMP</code> clause but no DEFAULT clause, the column is automatically updated to the current timestamp but does not have the current timestamp for its default value.</li> </ul> <p>The default in this case is type dependent. TIMESTAMP has a default of 0 unless defined with the NULL attribute, in which case the default is NULL.</p> <pre><code>CREATE TABLE t1 (\n  ts1 TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,     -- default 0\n  ts2 TIMESTAMP NULL ON UPDATE CURRENT_TIMESTAMP -- default NULL\n);\n</code></pre> <p><code>DATETIME</code> has a default of NULL unless defined with the NOT NULL attribute, in which case the default is 0.</p> <pre><code>CREATE TABLE t1 (\n  dt1 DATETIME ON UPDATE CURRENT_TIMESTAMP,         -- default NULL\n  dt2 DATETIME NOT NULL ON UPDATE CURRENT_TIMESTAMP -- default 0\n);\n</code></pre>"},{"location":"MatrixOne/Reference/Data-Types/date-time-data-types/year-type/","title":"YEAR Type","text":"<p>The YEAR type is a 1-byte data type used to represent year values. It can be declared as YEAR with an implicit display width of 4 characters or equivalently as <code>YEAR(4)</code> with an explicit display width of 4.</p> <p>MatrixOne displays YEAR values in the format YYYY, ranging from the year 0001 to 9999.</p> <p>YEAR accepts input values in various formats:</p> <ul> <li>As 4-digit strings in the range '0001' to '9999'.</li> <li>As 4-digit numbers in the range 0001 to 9999.</li> <li>As 1- or 2-digit strings in the range '0' to '99'. For values in the range '0' to '00' and '00' to '99', MatrixOne automatically adds '00' as the prefix, resulting in values from '0000' to '0099'.</li> <li>The result of functions that return a value acceptable in the context of YEAR, such as the <code>NOW()</code> function.</li> </ul>"},{"location":"MatrixOne/Reference/Data-Types/date-time-data-types/year-type/#two-digit-years-in-dates","title":"Two-Digit Years in Dates","text":"<p>Due to the lack of century information, two-digit years in dates need to be sufficiently clear. To ensure internal storage consistency, MatrixOne must interpret these date values as four-digit numbers.</p> <p>For DATETIME, DATE, and TIMESTAMP types, MatrixOne follows these rules to interpret dates with ambiguous year values:</p> <ul> <li>Year values within the range 00-99 are converted to 0000-0099.</li> </ul> <p>Below are examples of dates involving two-digit years:</p> <ol> <li>Interpreting dates in DATETIME type:</li> </ol> <p>Let's assume we have a column named <code>event_date</code> with DATETIME type, containing the following date values:</p> event_date 2023-07-12 08:30 99-01-15 13:45 23-05-06 09:00 <p>According to the rules, the two-digit year values in these dates are interpreted as:</p> <ul> <li>99-01-15 is interpreted as January 15th, 0099.</li> <li> <p>23-05-06 is interpreted as May 6th, 0023.</p> </li> <li> <p>Interpreting dates in DATE type:</p> </li> </ul> <p>Let's assume we have a column named <code>birth_date</code> with DATE type containing the following date values:</p> birth_date 95-08-21 04-11-30 88-03-17 <p>According to the rules, the two-digit year values in these dates are interpreted as:</p> <ul> <li>95-08-21 is interpreted as August 21st, 0095.</li> <li>04-11-30 is interpreted as November 30th, 0004.</li> <li> <p>88-03-17 is interpreted as March 17th, 0088.</p> </li> <li> <p>Interpreting dates in YEAR type:</p> </li> </ul> <p>Let's assume we have a column named <code>graduation_year</code> with YEAR type containing the following year values:</p> graduation_year 65 78 03 <p>According to the rules, the two-digit year values in these dates are interpreted as:</p> <ul> <li>65 is interpreted as the year 0065.</li> <li>78 is interpreted as the year 0078.</li> <li>03 is interpreted as the year 0003.</li> </ul>"},{"location":"MatrixOne/Reference/Functions-and-Operators/matrixone-function-list/","title":"Summary table of functions","text":"<p>This document lists the functions supported in the latest version of MatrixOne.</p>"},{"location":"MatrixOne/Reference/Functions-and-Operators/matrixone-function-list/#aggregate-function","title":"Aggregate function","text":"Function name effect ANY_VALUE() Returns any value in the parameter range AVG() Calculate the arithmetic mean of the parameter columns. BITMAP A set of built-in functions for working with bitmaps, mainly for calculating different values BIT_AND() Calculated the ratio of all the bits in the column by bit to the BIT_OR() Calculated the bitwise or of all bits in the column BIT_XOR() Calculated the bitwise dissimilarity of all the bits in the column COUNT() The number of records of the query result was calculated GROUP_CONCAT() Concatenates content specified by columns or expressions MAX() Returns the maximum of a set of values MEDIAN() Returns the median of a set of values MIN() Returns the smallest of a set of values STDDEV_POP() Used to calculate the overall standard deviation SUM() Used to calculate the sum of a set of values VARIANCE() Used to calculate overall variance VAR_POP() Used to calculate overall variance"},{"location":"MatrixOne/Reference/Functions-and-Operators/matrixone-function-list/#date-time-class-function","title":"Date Time Class Function","text":"Function name effect CONVERT_TZ() Used to convert a given datetime from one time zone to another. CURDATE() Returns the current date in YYYY-MM-DD format. CURRENT_TIMESTAMP() Returns the current date and time in YYYY-MM-DD hh:mm:ss or YYYYMMDDhhmmss format. DATE() Intercepts the date portion of input in DATE or DATETIME format. DATE_ADD() Used to perform date arithmetic: add a specified time interval to a specified date. DATE_FORMAT() Formatting date values from format strings DATE_SUB() Used to perform date arithmetic: subtracts a specified time interval from a specified date. DATEDIFF() Returns the number of days between two dates DAY() Returns a date as the first of the month. DAYOFYEAR() Number of days in a year corresponding to the date of return EXTRACT() Partial extraction from the date HOUR() Hours of return time FROM_UNIXTIME() Converts internal UNIX timestamp values to normal format datetime values, which are displayed in YYYY-MM-DD HH:MM:SS or YYYYMMDDHHMMSS format. MINUTE() Returns the minutes of the time parameter MONTH() Returns the month of the date parameter NOW() Returns the current date and time in 'YYYY-MM-DD HH:MM:SS' format. SECOND() Returns the number of seconds for the time parameter STR_TO_DATE() Convert a string to a date or datetime type according to a specified date or time display format SYSDATE() Returns the current date and time in 'YYYY-MM-DD HH:MM:SS' format. TIME() Extracts the time portion of a time or datetime and returns it as a string TIMEDIFF() Returns the difference between two time parameters TIMESTAMP() Returns a date or datetime parameter as a datetime value TIMESTAMPDIFF() Returns an integer representing the time interval between the first datetime expression and the second datetime expression in the given time units TO_DATE() Convert a string to a date or datetime type according to a specified date or time display format TO_DAYS() Used to calculate the difference in the number of days between a given date and the start date of the Gregorian calendar (January 1, 0000) TO_SECONDS() Used to calculate the difference in seconds between a given date or datetime expr and 0 hours, 0 minutes, 0 seconds on January 1, 0 AD. UNIX_TIMESTAMP Returns the number of seconds from 1970-01-01 00:00:00 UTC to the specified time. UTC_TIMESTAMP() Returns the current UTC time in the format YYYY-MM-DD hh:mm:ss or YYYYMMDDhhmmss WEEK() Used to calculate the number of weeks for a given date WEEKDAY() Returns the weekday index of the date (0 = Monday, 1 = Tuesday, ... 6 = Sunday) YEAR() Returns the year of the given date"},{"location":"MatrixOne/Reference/Functions-and-Operators/matrixone-function-list/#mathematical-class-functions","title":"Mathematical class functions","text":"Function name effect ABS() Used to find the absolute value of a parameter ACOS() Used to find the cosine of a given value (expressed in radians) ATAN() Used to find the arctangent of a given value (expressed in radians) CEIL() Used to find the smallest integer that is not less than the argument. CEILING() Used to find the smallest integer that is not less than the argument. COS() Used to find the cosine of an input parameter (expressed in radians). COT() Used to find the cotangent value of the input parameter (expressed in radians). EXP() Used to find the exponent of number with the natural constant e as the base. FLOOR() Used to find the number of digits not greater than the corresponding digit of a number. LN() The natural logarithm used to find the parameters LOG() The natural logarithm used to find the parameters LOG2() Used to find the logarithm with 2 as the base parameter. LOG10() Used to find logarithms with a base argument of 10. PI() Used to find the mathematical constant \u03c0 (pi) POWER() POWER(X, Y) is used to find the Yth power of X. ROUND() Used to find the value of a number rounded to a specific number of digits. RAND() Used to generate a random number of type Float64 between 0 and 1. SIN() Used to find the sine of an input parameter (expressed in radians) SINH() For finding the hyperbolic sine of an input parameter (expressed in radians) TAN() Used to find the tangent of the input parameter (expressed in radians)."},{"location":"MatrixOne/Reference/Functions-and-Operators/matrixone-function-list/#string-class-function","title":"String class function","text":"Function name effect BIN() Converts arguments to binary string form. BIT_LENGTH() Returns the length of the string str in bits. CHAR_LENGTH() Returns the length of the string str in characters. CONCAT() Concatenate multiple strings (or strings containing only one character) into a single string CONCAT_WS() Represents Concatenate With Separator, a special form of CONCAT(). EMPTY() Determines whether the input string is empty. ENDSWITH() Checks if it ends with the specified suffix. FIELD() Returns the position of the first string str in the list of strings (str1,str2,str3,...). in the list of strings (str1,str2,str3...) FIND_IN_SET() Finds the location of the specified string in a comma-separated list of strings. FORMAT() Used to format numbers to the \"#,###,###. ###\" format and round to one decimal place. FROM_BASE64() Used to convert Base64 encoded strings back to raw binary data (or text data). HEX() Returns the hexadecimal string form of the argument INSTR() Returns the position of the first occurrence of the substring in the given string. LCASE() Used to convert the given string to lowercase form. LEFT() Returns the leftmost length character of the str string. LENGTH() Returns the length of the string. LOCATE() Function for finding the location of a substring in a string. LOWER() Used to convert the given string to lowercase form. LPAD() Used to fill in the left side of the string. LTRIM() Removes leading spaces from the input string and returns the processed characters. MD5() Generates a 32-character hexadecimal MD5 hash of the input string. OCT() Returns a string of the octal value of the argument REPEAT() Repeats the input string n times and returns a new string. REVERSE() Flips the order of the characters in the str string and outputs them. RPAD() Used to fill in the right side of a string RTRIM() Remove trailing spaces from the input string. SHA1()/SHA() Used to compute and return the SHA-1 hash of a given string. SHA2() Returns the SHA2 hash of the input string. SPACE() Returns a string of N spaces. SPLIT_PART() Used to break a string into multiple parts based on a given separator character STARTSWITH() The string returns 1 if it starts with the specified prefix, 0 otherwise. SUBSTRING() Returns a substring starting at the specified position SUBSTRING_INDEX() Get characters with different index bits, indexed by the separator. TO_BASE64() Used to convert strings to Base64 encoded strings TRIM() Returns a string, removing unwanted characters. UCASE() Used to convert the given string to uppercase form. UNHEX() Used to convert a hexadecimal string to the corresponding binary string. UPPER() Used to convert the given string to uppercase."},{"location":"MatrixOne/Reference/Functions-and-Operators/matrixone-function-list/#regular-expressions","title":"Regular Expressions","text":"Function name effect NOT REGEXP() Used to test if a string does not match a specified regular expression REGEXP_INSTR() Returns the starting position in the string of the matched regular expression pattern. REGEXP_LIKE() Used to determine if the specified string matches the provided regular expression pattern REGEXP_REPLACE() Used to replace a string matching a given regular expression pattern with a specified new string REGEXP_SUBSTR() Used to return a substring of a string argument that matches a regular expression argument."},{"location":"MatrixOne/Reference/Functions-and-Operators/matrixone-function-list/#vector-class-functions","title":"Vector class functions","text":"Function name effect \u57fa\u672c\u64cd\u4f5c\u7b26 Addition (+), subtraction (-), multiplication (*) and division (/) of vectors. SQRT() Used to calculate the square root of each element in a vector ABS() Used to calculate the absolute value of a vector CAST() Used to explicitly convert a vector from one vector type to another vector type SUMMATION() Returns the sum of all elements in the vector INNER_PRODUCT() Used to compute the inner product/dot product between two vectors CLUSTER_CENTERS() K clustering centers for determining vector columns COSINE_DISTANCE() Used to compute the cosine distance of two vectors. COSINE_SIMILARITY() A measure of the cosine of the angle between two vectors, indicating their similarity by their proximity in a multidimensional space L2_DISTANCE() Used to compute the Euclidean distance between two vectors L1_NORM() Used to compute l1/Manhattan/TaxiCab norms L2_NORM() For calculating l2/Euclidean paradigms NORMALIZE_L2() For performing Euclidean normalization SUBVECTOR() For extracting subvectors from vectors VECTOR_DIMS() Used to determine the dimension of the vector"},{"location":"MatrixOne/Reference/Functions-and-Operators/matrixone-function-list/#table-function","title":"Table function","text":"Function name effect UNNEST() Used to expand an array of columns or parameters within JSON-type data into a table."},{"location":"MatrixOne/Reference/Functions-and-Operators/matrixone-function-list/#window-function","title":"Window function","text":"Function name effect DENSE_RANK() Provide a unique ranking for each row in the dataset RANK() Provide a unique ranking for each row in the dataset ROW_UNMBER() Provide a unique serial number for each row in the data set"},{"location":"MatrixOne/Reference/Functions-and-Operators/matrixone-function-list/#json-functions","title":"JSON functions","text":"Function name effect JSON_EXTRACT() Returning data from a JSON document JSON_QUOTE() Referencing JSON Documents JSON_UNQUOTE() Dereferencing JSON documents"},{"location":"MatrixOne/Reference/Functions-and-Operators/matrixone-function-list/#system-operation-and-maintenance-function","title":"system operation and maintenance function","text":"Function name effect CURRENT_ROLE_NAME() Used to query the name of the role owned by the currently logged in user. CURRENT_ROLE() Returns the role of the current session. CURRENT_USER_NAME() Used to look up the name of the user you are currently logged in as. CURRENT_USER() Returns the current user account PURGE_LOG() Used to delete logs recorded in MatrixOne database system tables."},{"location":"MatrixOne/Reference/Functions-and-Operators/matrixone-function-list/#other-functions","title":"Other functions","text":"Function name effect SAMPLE() Primarily used for quick query narrowing SERIAL_EXTRACT() Used to extract individual elements of a sequence/tuple of values SLEEP() Pause (sleep) the current query for the specified number of seconds. UUID() Returns the generation of an internationally recognized unique identifier according to RFC 4122."},{"location":"MatrixOne/Reference/Functions-and-Operators/Aggregate-Functions/any-value/","title":"ANY_VALUE","text":""},{"location":"MatrixOne/Reference/Functions-and-Operators/Aggregate-Functions/any-value/#description","title":"Description","text":"<p>The <code>ANY_VALUE</code> function is useful for <code>GROUP BY</code> queries.</p>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Aggregate-Functions/any-value/#syntax","title":"Syntax","text":"<pre><code>&gt; ANY_VALUE(arg)\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Aggregate-Functions/any-value/#arguments","title":"Arguments","text":"Arguments Description arg Any type. When arg is NULL, the line does not participate in the calculation."},{"location":"MatrixOne/Reference/Functions-and-Operators/Aggregate-Functions/any-value/#returned-value","title":"Returned Value","text":"<p>The function return value and type are the same as the return value and type of its argument.</p> <p>note</p> <p>The execution result of <code>ANY_VALUE</code> is uncertain. The same input may produce different execution results.</p>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Aggregate-Functions/any-value/#examples","title":"Examples","text":"<pre><code>&gt; create table t1(\n-&gt; a int,\n-&gt; b int,\n-&gt; c int\n-&gt; );\n&gt; create table t2(\n-&gt; a int,\n-&gt; b int,\n-&gt; c int\n-&gt; );\n&gt; insert into t1 values(1,10,34),(2,20,14);\n&gt; insert into t2 values(1,-10,-45);\n&gt; select ANY_VALUE(t1.b) from t1 left join t2 on t1.c=t1.b and t1.a=t1.c group by t1.a;\n+-----------------+\n| any_value(t1.b) |\n+-----------------+\n|              10 |\n|              20 |\n+-----------------+\n2 rows in set (0.01 sec)\n&gt; select 3+(5*ANY_VALUE(t1.b)) from t1 left join t2 on t1.c=t1.b and t1.a=t1.c group by t1.a;\n+---------------------------+\n| 3 + (5 * any_value(t1.b)) |\n+---------------------------+\n|                        53 |\n|                       103 |\n+---------------------------+\n2 rows in set (0.00 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Aggregate-Functions/avg/","title":"AVG","text":""},{"location":"MatrixOne/Reference/Functions-and-Operators/Aggregate-Functions/avg/#description","title":"Description","text":"<p>Aggregate function.</p> <p>The AVG() function calculates the average value of the argument.</p>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Aggregate-Functions/avg/#syntax","title":"Syntax","text":"<pre><code>&gt; AVG(expr)\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Aggregate-Functions/avg/#arguments","title":"Arguments","text":"Arguments Description expr Any numerical expression"},{"location":"MatrixOne/Reference/Functions-and-Operators/Aggregate-Functions/avg/#returned-value","title":"Returned Value","text":"<p>The arithmetic mean, always as Double.</p> <p>NaN if the input parameter is empty.</p>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Aggregate-Functions/avg/#examples","title":"Examples","text":"<pre><code>&gt; drop table if exists tbl1,tbl2;\n&gt; create table tbl1 (col_1a tinyint, col_1b smallint, col_1c int, col_1d bigint, col_1e char(10) not null);\n&gt; insert into tbl1 values (0,1,1,7,\"a\");\n&gt; insert into tbl1 values (0,1,2,8,\"b\");\n&gt; insert into tbl1 values (0,1,3,9,\"c\");\n&gt; insert into tbl1 values (0,1,4,10,\"D\");\n&gt; insert into tbl1 values (0,1,5,11,\"a\");\n&gt; insert into tbl1 values (0,1,6,12,\"c\");\n\n&gt; select avg(col_1c) from tbl1;\n+-------------+\n| avg(col_1c) |\n+-------------+\n|      3.5000 |\n+-------------+\n\n&gt; select sum(col_1d) as s1,avg(col_1d) as a3 from tbl1 group by col_1e order by s1 desc;\n+------+---------+\n| s1   | a3      |\n+------+---------+\n|   21 | 10.5000 |\n|   18 |  9.0000 |\n|   10 | 10.0000 |\n|    8 |  8.0000 |\n+------+---------+\n\n&gt; select avg(col_1d) as a1 from tbl1 where col_1d &lt; 13 group by col_1e order by a1;\n+---------+\n| a1      |\n+---------+\n|  8.0000 |\n|  9.0000 |\n| 10.0000 |\n| 10.5000 |\n+---------+\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Aggregate-Functions/bit_and/","title":"BIT_AND","text":""},{"location":"MatrixOne/Reference/Functions-and-Operators/Aggregate-Functions/bit_and/#description","title":"Description","text":"<p>Aggregate function.</p> <p>The BIT_AND(expr) function returns the bitwise AND of all bits in expr.</p>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Aggregate-Functions/bit_and/#syntax","title":"Syntax","text":"<pre><code>&gt; BIT_AND(expr)\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Aggregate-Functions/bit_and/#arguments","title":"Arguments","text":"Arguments Description expr UINT data types"},{"location":"MatrixOne/Reference/Functions-and-Operators/Aggregate-Functions/bit_and/#examples","title":"Examples","text":"<pre><code>&gt; drop table if exists t1;\n&gt; CREATE TABLE t1 (id CHAR(1), number INT);\n&gt; INSERT INTO t1 VALUES\n('a',111),('a',110),('a',100),\n('a',000),('b',001),('b',011);\n\n&gt; select id, BIT_AND(number) FROM t1 GROUP BY id;\n+------+-----------------+\n| id   | bit_and(number) |\n+------+-----------------+\n| a    |               0 |\n| b    |               1 |\n+------+-----------------+\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Aggregate-Functions/bit_or/","title":"BIT_OR","text":""},{"location":"MatrixOne/Reference/Functions-and-Operators/Aggregate-Functions/bit_or/#description","title":"Description","text":"<p>Aggregate function.</p> <p>The BIT_OR(expr) function returns the bitwise OR of all bits in expr.</p>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Aggregate-Functions/bit_or/#syntax","title":"Syntax","text":"<pre><code>&gt; BIT_OR(expr)\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Aggregate-Functions/bit_or/#arguments","title":"Arguments","text":"Arguments Description expr UINT data types"},{"location":"MatrixOne/Reference/Functions-and-Operators/Aggregate-Functions/bit_or/#examples","title":"Examples","text":"<pre><code>&gt; drop table if exists t1;\n&gt; CREATE TABLE t1 (id CHAR(1), number INT);\n&gt; INSERT INTO t1 VALUES\n('a',111),('a',110),('a',100),\n('a',000),('b',001),('b',011);\n\n&gt; select id, BIT_OR(number) FROM t1 GROUP BY id;\n+------+----------------+\n| id   | bit_or(number) |\n+------+----------------+\n| a    |            111 |\n| b    |             11 |\n+------+----------------+\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Aggregate-Functions/bit_xor/","title":"BIT_XOR","text":""},{"location":"MatrixOne/Reference/Functions-and-Operators/Aggregate-Functions/bit_xor/#description","title":"Description","text":"<p>Aggregate function.</p> <p>The BIT_XOR(expr) function returns the bitwise XOR of all bits in expr.</p>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Aggregate-Functions/bit_xor/#syntax","title":"Syntax","text":"<pre><code>&gt; BIT_XOR(expr)\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Aggregate-Functions/bit_xor/#arguments","title":"Arguments","text":"Arguments Description expr UINT data types"},{"location":"MatrixOne/Reference/Functions-and-Operators/Aggregate-Functions/bit_xor/#examples","title":"Examples","text":"<pre><code>&gt; drop table if exists t1;\n&gt; CREATE TABLE t1 (id CHAR(1), number INT);\n&gt; INSERT INTO t1 VALUES\n('a',111),('a',110),('a',100),\n('a',000),('b',001),('b',011);\n\n&gt; select id, BIT_XOR(number) FROM t1 GROUP BY id;\n+------+-----------------+\n| id   | bit_xor(number) |\n+------+-----------------+\n| a    |             101 |\n| b    |              10 |\n+------+-----------------+\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Aggregate-Functions/bitmap/","title":"BITMAP function","text":""},{"location":"MatrixOne/Reference/Functions-and-Operators/Aggregate-Functions/bitmap/#function-description","title":"Function Description","text":"<p>A <code>BITMAP</code> function is a set of built-in functions for processing bitmaps, which are contiguous pieces of memory stored as binary data types. These functions are particularly useful for counting distinct values when dealing with hierarchical aggregations, such as multiple grouped sets, and return results consistent with <code>count (distinct</code>), but more efficiently.</p> <p>We can use only one bit to identify the presence or absence of an element, 1 for presence or 0 for absence, and the nth bit of bitmap to record whether the element exists.</p> <p>We specify that the maximum width of bitmap is 32768 (2^15 = 4K), and for non-negative integer n, take its lower 15 bits (binary) as the position in bitmap and the other high bits as the number of the bitmap bucket. The following diagram shows the logic of bitmap:</p> <p></p> <p>Each bucket is a bitmap, and since the buckets are orthogonal, each bucket doing the operation (or,bit_count) can be done only in the current bucket, regardless of the other buckets.</p> <p>Here are some common <code>BITMAP</code> functions and their usage:</p>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Aggregate-Functions/bitmap/#bitmap_bucket_number","title":"BITMAP_BUCKET_NUMBER","text":"<p>The purpose of the <code>BITMAP_BUCKET_NUMBER()</code> function is to determine the number of the bucket to which the given value belongs. A bucket is a larger set of bits that can contain multiple bits, each representing a specific value in the data set. This function returns the number of the bucket. A bucket number is typically used to group bitmaps when performing aggregation operations.</p>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Aggregate-Functions/bitmap/#grammar","title":"Grammar","text":"<pre><code>&gt; BITMAP_BUCKET_NUMBER(numeric_expr)\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Aggregate-Functions/bitmap/#parameter-interpretation","title":"Parameter interpretation","text":"Parameters Description numeric_expr Required. Expressions that can be cast into non-negative integers."},{"location":"MatrixOne/Reference/Functions-and-Operators/Aggregate-Functions/bitmap/#examples","title":"Examples","text":"<pre><code>mysql&gt; SELECT bitmap_bucket_number(0);-- Returns 0, indicating that it belongs to the first bucket, which records the position 0-32767.\n+-------------------------+\n| bitmap_bucket_number(0) |\n+-------------------------+\n|                       0 |\n+-------------------------+\n1 row in set (0.00 sec)\n\nmysql&gt; SELECT bitmap_bucket_number(32767);-- Returns 0, since 32767 belongs to the end of the first bucket\n+-----------------------------+\n| bitmap_bucket_number(32767) |\n+-----------------------------+\n|                           0 |\n+-----------------------------+\n1 row in set (0.00 sec)\n\nmysql&gt; SELECT bitmap_bucket_number(32768);-- Returns 1, since 32768 is the starting position of the second bucket\n+-----------------------------+\n| bitmap_bucket_number(32768) |\n+-----------------------------+\n|                           1 |\n+-----------------------------+\n1 row in set (0.00 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Aggregate-Functions/bitmap/#bitmap_bit_position","title":"BITMAP_BIT_POSITION","text":"<p>The <code>BITMAP_BIT_POSITION()</code> function returns the relative bit position of the given value in the bucket (indexed from 0 to 32767). Used with <code>BITMAP_BUCKET_NUMBER()</code> to uniquely identify any number in the bitmap. Because the actual <code>BITMAP_BIT_POSITION()</code> marks the lower 15 bits of the parameter (in binary), <code>BITMAP_BUCKET_NUMBER()</code> marks the higher bits of the parameter.</p>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Aggregate-Functions/bitmap/#grammar_1","title":"Grammar","text":"<pre><code>BITMAP_BIT_POSITION(numeric_expr) \n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Aggregate-Functions/bitmap/#parameter-interpretation_1","title":"Parameter interpretation","text":"Parameters Description numeric_expr Required. Expressions that can be cast into non-negative integers."},{"location":"MatrixOne/Reference/Functions-and-Operators/Aggregate-Functions/bitmap/#examples_1","title":"Examples","text":"<pre><code>mysql&gt; SELECT bitmap_bit_position(0);-- Returns 0, since 0 is in the first position of the first bucket\n+------------------------+\n| bitmap_bit_position(0) |\n+------------------------+\n|                      0 |\n+------------------------+\n1 row in set (0.00 sec)\n\nmysql&gt; SELECT bitmap_bit_position(32767);-- Returns 32767, since 32767 is the last position in the first bucket\n+----------------------------+\n| bitmap_bit_position(32767) |\n+----------------------------+\n|                      32767 |\n+----------------------------+\n1 row in set (0.00 sec)\n\nmysql&gt; SELECT bitmap_bit_position(32768);-- returns 0 because 32768 is in the first position of the second bucket\n+----------------------------+\n| bitmap_bit_position(32768) |\n+----------------------------+\n|                          0 |\n+----------------------------+\n1 row in set (0.00 sec)\n\n--The binary of 40000 is: 1001110001000000, bitmap_bit_position records the lower 15 bits: 001110001000000, and bitmap_bucket_number records the higher 1 bit.\nmysql&gt; select bin(bitmap_bucket_number(40000)), bin(bitmap_bit_position(40000)),bin(40000);\n+----------------------------------+---------------------------------+------------------+\n| bin(bitmap_bucket_number(40000)) | bin(bitmap_bit_position(40000)) | bin(40000)       |\n+----------------------------------+---------------------------------+------------------+\n| 1                                | 1110001000000                   | 1001110001000000 |\n+----------------------------------+---------------------------------+------------------+\n1 row in set (0.01 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Aggregate-Functions/bitmap/#bitmap_count","title":"BITMAP_COUNT","text":"<p>The <code>BITMAP_COUNT()</code> function is used to calculate the number of bits set to 1 in bitmap to get the total number of different values. This is equivalent to a <code>COUNT (DISTINCT)</code> operation on a bitmap, but is usually faster than a traditional <code>COUNT (DISTINCT</code>) query.</p> <p>The <code>BITMAP_COUNT()</code> function is generally used in conjunction with the <code>BITMAP_CONSTRUCT_AGG()</code>, <code>BITMAP_OR_AGG()</code> functions described below.</p>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Aggregate-Functions/bitmap/#bitmap_construct_agg","title":"BITMAP_CONSTRUCT_AGG","text":"<p><code>BITMAP_CONSTRUCT_AGG()</code> is an aggregate function that is used in the database to build bitmaps.</p> <p>The <code>BITMAP_CONSTRUCT_AGG()</code> function is useful when you need to count a dense set of non-repeating integer values because it efficiently converts those values into bitmap form.</p>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Aggregate-Functions/bitmap/#grammar_2","title":"Grammar","text":"<pre><code>BITMAP_CONSTRUCT_AGG( &lt;bit_position&gt; )\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Aggregate-Functions/bitmap/#parameter-interpretation_2","title":"Parameter interpretation","text":"Parameters Description bit_position Required. Location in bitmap (returned by BITMAP_BIT_POSITION function)"},{"location":"MatrixOne/Reference/Functions-and-Operators/Aggregate-Functions/bitmap/#examples_2","title":"Examples","text":"<pre><code>CREATE TABLE t1 ( n1 int);\nINSERT INTO t1 VALUES(0),(1),(1),(32767);--Inserted data in [0,32767].\n\nmysql&gt; select * from t1;\n+-------+\n| n1    |\n+-------+\n|     0 |\n|     1 |\n|     1 |\n| 32767 |\n+-------+\n4 rows in set (0.01 sec)\n\nmysql&gt; SELECT BITMAP_CONSTRUCT_AGG(BITMAP_BIT_POSITION(n1)) AS bitmap FROM t1;\n+------------------------+\n| bitmap                 |\n+------------------------+\n| :0              ?  |\n+------------------------+\n1 row in set (0.00 sec)\n</code></pre> <p>Note</p> <p>bitmap column contains the physical representation of bitmap and is not readable. To determine which bits are set, we should use a combination of <code>BITMAP</code> functions (rather than checking binary values ourselves).</p> <pre><code>mysql&gt; SELECT bitmap_count(BITMAP_CONSTRUCT_AGG(BITMAP_BIT_POSITION(n1))) AS n1_discnt FROM t1;The number set to 1 in the --bitmap.\n+-----------+\n| n1_discnt |\n+-----------+\n|         3 |\n+-----------+\n1 row in set (0.00 sec)\n\nmysql&gt; SELECT count(DISTINCT n1) AS n1_discnt FROM t1;--Return Consistency\n+-----------+\n| n1_discnt |\n+-----------+\n|         3 |\n+-----------+\n1 row in set (0.01 sec)\n\nINSERT INTO t1 VALUES(32768),(32769),(65535);--Insert data greater than 32767\n\nmysql&gt; select * from t1;\n+-------+\n| n1    |\n+-------+\n|     0 |\n|     1 |\n|     1 |\n| 32767 |\n| 32768 |\n| 32769 |\n| 65535 |\n+-------+\n7 rows in set (0.01 sec)\n\n--The result is the same as the first insertion because bucket_bit_position = n1 % 32768 and the data inserted the second time is in the same position in a different bucket than the first insertion, so it is de-emphasized.\nmysql&gt; SELECT bitmap_count(BITMAP_CONSTRUCT_AGG(BITMAP_BIT_POSITION(n1))) AS n1_discnt FROM t1;\n+-----------+\n| t1_bitmap |\n+-----------+\n|         3 |\n+-----------+\n1 row in set (0.00 sec)\n\nmysql&gt; SELECT bitmap_bit_position(0),bitmap_bit_position(1),bitmap_bit_position(32767),bitmap_bit_position(32768),bitmap_bit_position(65535);\n+------------------------+------------------------+----------------------------+----------------------------+----------------------------+\n| bitmap_bit_position(0) | bitmap_bit_position(1) | bitmap_bit_position(32767) | bitmap_bit_position(32768) | bitmap_bit_position(65535) |\n+------------------------+------------------------+----------------------------+----------------------------+----------------------------+\n|                      0 |                      1 |                      32767 |                          0 |                      32767 |\n+------------------------+------------------------+----------------------------+----------------------------+----------------------------+\n1 row in set (0.00 sec)\n</code></pre> <p>So you need to combine the <code>BITMAP_BUCKET_NUMBER()</code> function if you want to dedupe data larger than 32767.</p> <pre><code>--Grouped in buckets, the first bucket contains three non-repeating numbers (0,1,32767) and the second bucket contains three non-repeating numbers (32768,32769,65535).\nmysql&gt; SELECT bitmap_count(BITMAP_CONSTRUCT_AGG(BITMAP_BIT_POSITION(n1))) AS t1_bitmap FROM t1 GROUP BY BITMAP_BUCKET_NUMBER(n1);\n+-----------+\n| t1_bitmap |\n+-----------+\n|         3 |\n|         3 |\n+-----------+\n2 rows in set (0.01 sec)\n\n--Combine this with the sum() function to calculate the non-repeating value of n1.\nmysql&gt; SELECT SUM(t1_bitmap) FROM (\n-&gt; SELECT bitmap_count(BITMAP_CONSTRUCT_AGG(BITMAP_BIT_POSITION(n1))) AS t1_bitmap\n-&gt; FROM t1 -&gt; GROUP BY BITMAP_BUCKET_NUMBER(n1)\n-&gt; );\n+----------------+\n| sum(t1_bitmap) |\n+----------------+\n|              6 |\n+----------------+\n1 row in set (0.01 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Aggregate-Functions/bitmap/#bitmap_or_agg","title":"BITMAP_OR_AGG","text":"<p>The <code>BITMAP_OR_AGG()</code> function is used to calculate the bitwise or (OR) results of multiple bitmaps. Typically used to merge multiple bitmaps to represent the combined information of all input bitmaps in one bitmap.</p> <p><code>BITMAP_OR_AGG()</code> is useful when aggregate aggregation of data of different dimensions is required, especially in data warehouses and analytic queries.</p>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Aggregate-Functions/bitmap/#grammar_3","title":"Grammar","text":"<pre><code>BITMAP_OR_AGG( bitmap )\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Aggregate-Functions/bitmap/#parameter-interpretation_3","title":"Parameter interpretation","text":"Parameters Description bitmap Required. All bitmaps by bit or merged resulting bitmap."},{"location":"MatrixOne/Reference/Functions-and-Operators/Aggregate-Functions/bitmap/#examples_3","title":"Examples","text":"<pre><code>--Create a table to store information about the author's published books, including the author's name, the year of publication, and the book id.\nCREATE TABLE book_table(\nid int auto_increment primary key,\nauthor varchar(100),\npub_year varchar(100),\nbook_id int\n);\nINSERT INTO book_table(author,pub_year,book_id) VALUES\n('A author','2020',1),('A author','2020',1),('A author','2020',32768),\n('A author','2021',32767),('A author','2021',32768),('A author','2021',65536),\n('B author','2020',2),('B author','2020',10),('B author','2020',32769),\n('B author','2021',5),('B author','2021',65539);\n\nmysql&gt; select * from book_table;\n+------+----------+----------+---------+\n| id   | author   | pub_year | book_id |\n+------+----------+----------+---------+\n|    1 | A author | 2020     |       1 |\n|    2 | A author | 2020     |       1 |\n|    3 | A author | 2020     |   32768 |\n|    4 | A author | 2021     |   32767 |\n|    5 | A author | 2021     |   32768 |\n|    6 | A author | 2021     |   65536 |\n|    7 | B author | 2020     |       2 |\n|    8 | B author | 2020     |      10 |\n|    9 | B author | 2020     |   32769 |\n|   10 | B author | 2021     |       5 |\n|   11 | B author | 2021     |   65539 |\n+------+----------+----------+---------+\n11 rows in set (0.00 sec)\n\n--Define a pre-calculated table to save the results of coarse-grained calculations in the table, followed by a variety of different dimensions of aggregation can be used to pre-calculate the results of the table, after a simple calculation of the results can be obtained to accelerate the query.\nCREATE TABLE precompute AS\nSELECT\nauthor,\npub_year,\nBITMAP_BUCKET_NUMBER(book_id) as bucket,\nBITMAP_CONSTRUCT_AGG(BITMAP_BIT_POSITION(book_id)) as bitmap FROM book_table\nGROUP BY  author,pub_year,bucket;\n\nmysql&gt; select * from precompute;\n+---------+----------+--------+----------------------+\n| author  | pub_year | bucket | bitmap               |\n+---------+----------+--------+----------------------+\n| A author| 2020     |      0 | :0                |\n| A author| 2020     |      1 | :0                 |\n| A author| 2021     |      0 | :0            ?    |\n| A author| 2021     |      1 | :0                 |\n| A author| 2021     |      2 | :0                 |\n| B author| 2020     |      0 | :0                |\n| B author| 2020     |      1 | :0                |\n| B author| 2021     |      0 | :0                |\n| B author| 2021     |      2 | :0                |\n+---------+----------+--------+----------------------+\n\n--Calculates the number of book_id de-duplications in the case of author and publication year aggregation, reflecting the number of book types published by the author in different years.\n--The sum() function sums the number of 1's in the bitmaps of different buckets.\n--For example, when author=A author, pub_year=2020, book_id=(1,1,32768), after de-emphasis is book_id=(1,32768), but 1 is located in the first bucket, 32768 is located in the second bucket, so we need to sum for accumulation.\nmysql&gt; SELECT\n-&gt;   author,\n-&gt;   pub_year,\n-&gt;   SUM(BITMAP_COUNT(bitmap))\n-&gt; FROM precompute\n-&gt; GROUP BY  author,pub_year;\n+---------+----------+---------------------------+\n| author  | pub_year | sum(bitmap_count(bitmap)) |\n+---------+----------+---------------------------+\n| A author| 2020     |                         2 |\n| A author| 2021     |                         3 |\n| B author| 2020     |                         3 |\n| B author| 2021     |                         2 |\n+---------+----------+---------------------------+\n4 rows in set (0.00 sec)\n\nmysql&gt; SELECT author,pub_year,count( DISTINCT book_id) FROM book_table group by author,pub_year;--\u8fd4\u56de\u4e00\u81f4\n+----------+----------+-------------------------+\n| author   | pub_year | count(distinct book_id) |\n+----------+----------+-------------------------+\n| A author | 2020     |                       2 |\n| A author | 2021     |                       3 |\n| B author | 2020     |                       3 |\n| B author | 2021     |                       2 |\n+----------+----------+-------------------------+\n4 rows in set (0.00 sec)\n\n--Calculates the number of book_id de-duplications in the case of author aggregation, reflecting the number of book types published by the author in total.\n--The BITMAP_OR_AGG() function merges bitmaps of different dimensions (same author different years).\n--For example, when author=A author, pub_date=2020, book_id is (1,32768) after de-weighting, when pub_date=2021, book_id is (32767,32768,65536) after de-weighting, BITMAP_OR_AGG do or operation on the bitmap of the two different years to get book_id=(1,32767,32768,65536), finally sum() accumulates book_id of different bucktets.\nmysql&gt; SELECT author, SUM(cnt) FROM (\n-&gt;   SELECT\n-&gt;     author,\n-&gt;     BITMAP_COUNT(BITMAP_OR_AGG(bitmap)) cnt\n-&gt;   FROM precompute\n-&gt;   GROUP BY author,bucket\n-&gt; )\n-&gt; GROUP BY author;\n+---------+----------+\n| author  | sum(cnt) |\n+---------+----------+\n| A author|        4 |\n| B author|        5 |\n+---------+----------+\n2 rows in set (0.01 sec)\n\nmysql&gt; SELECT author,count(DISTINCT book_id) FROM book_table GROUP BY author;--Return Consistency\n+----------+-------------------------+\n| author   | count(distinct book_id) |\n+----------+-------------------------+\n| A author |                       4 |\n| B author |                       5 |\n+----------+-------------------------+\n2 rows in set (0.00 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Aggregate-Functions/count/","title":"COUNT","text":""},{"location":"MatrixOne/Reference/Functions-and-Operators/Aggregate-Functions/count/#description","title":"Description","text":"<p>Aggregate function.</p> <p>The COUNT() function calculates the number of records returned by a select query.</p> <p>note</p> <p>NULL values are not counted. </p>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Aggregate-Functions/count/#syntax","title":"Syntax","text":"<pre><code>&gt; COUNT(expr)\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Aggregate-Functions/count/#arguments","title":"Arguments","text":"Arguments Description expr Any expression.This may be a column name, the result of another function, or a math operation. * is also allowed, to indicate pure row counting."},{"location":"MatrixOne/Reference/Functions-and-Operators/Aggregate-Functions/count/#returned-value","title":"Returned Value","text":"<p>Returns a count of the number of non-NULL values of <code>expr</code> in the rows retrieved by a SELECT statement. The result is a BIGINT value.</p> <p>If there are no matching rows, COUNT() returns 0.</p>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Aggregate-Functions/count/#examples","title":"Examples","text":"<pre><code>&gt; drop table if exists tbl1,tbl2;\n&gt; create table tbl1 (col_1a tinyint, col_1b smallint, col_1c int, col_1d bigint, col_1e char(10) not null);\n&gt; insert into tbl1 values (0,1,1,7,\"a\");\n&gt; insert into tbl1 values (0,1,2,8,\"b\");\n&gt; insert into tbl1 values (0,1,3,9,\"c\");\n&gt; insert into tbl1 values (0,1,4,10,\"D\");\n&gt; insert into tbl1 values (0,1,5,11,\"a\");\n&gt; insert into tbl1 values (0,1,6,12,\"c\");\n\n&gt; select count(col_1b) from tbl1;\n+---------------+\n| count(col_1b) |\n+---------------+\n|             6 |\n+---------------+\n\n&gt; select count(*) from tbl1 where col_1d&lt;10;\n+----------+\n| count(*) |\n+----------+\n|        3 |\n+----------+\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Aggregate-Functions/group-concat/","title":"GROUP_CONCAT","text":""},{"location":"MatrixOne/Reference/Functions-and-Operators/Aggregate-Functions/group-concat/#description","title":"Description","text":"<p>This function returns a string result with the concatenated non-NULL values from a group. It returns NULL if there are no non-NULL values.</p>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Aggregate-Functions/group-concat/#syntax","title":"Syntax","text":"<pre><code>&gt; GROUP_CONCAT(expr)\n</code></pre> <p>The full syntax is as follows:</p> <pre><code>GROUP_CONCAT([DISTINCT] expr [,expr ...]\n             [ORDER BY {unsigned_integer | col_name | expr}\n                 [ASC | DESC] [,col_name ...]]\n             [SEPARATOR str_val])\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Aggregate-Functions/group-concat/#arguments","title":"Arguments","text":"Arguments Description expr Required. It specifies one or more columns or expressions to join. DISTINCT Optional. To eliminate duplicate values. ORDER BY Optional. To sort values in the result. To sort in reverse order, add the DESC (descending) keyword to the name of the column you are sorting by in the ORDER BY clause. The default is ascending order; this may be specified explicitly using the ASC keyword. SEPARATOR Optional.  The default separator between values in a group is comma (,)."},{"location":"MatrixOne/Reference/Functions-and-Operators/Aggregate-Functions/group-concat/#returned-value","title":"Returned Value","text":"<p>The return value is a nonbinary or binary string, depending on whether the arguments are nonbinary or binary strings.</p> <p>It returns NULL if there are no non-NULL values.</p>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Aggregate-Functions/group-concat/#examples","title":"Examples","text":"<pre><code>create table t1(a int,b text,c text);\ninsert into t1 values(1,\"a\",\"bc\"),(2,\"ab\",\"c\"),(3,\"aa\",\"bb\"),(3,\"aa\",\"bb\");\n\nmysql&gt; select group_concat(distinct a,b,c separator '|') from t1;\n+-----------------------------------+\n| group_concat(distinct a, b, c, |) |\n+-----------------------------------+\n| 1abc|2abc|3aabb                   |\n+-----------------------------------+\n1 row in set (0.01 sec)\n\nmysql&gt; select group_concat(distinct b,c separator '|') from t1 group by a;\n+--------------------------------+\n| group_concat(distinct b, c, |) |\n+--------------------------------+\n| abc                            |\n| abc                            |\n| aabb                           |\n+--------------------------------+\n3 rows in set (0.01 sec)\n\nmysql&gt; select group_concat(distinct b,c separator '|') from t1;\n+--------------------------------+\n| group_concat(distinct b, c, |) |\n+--------------------------------+\n| abc|abc|aabb                   |\n+--------------------------------+\n1 row in set (0.01 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Aggregate-Functions/max/","title":"MAX","text":""},{"location":"MatrixOne/Reference/Functions-and-Operators/Aggregate-Functions/max/#description","title":"Description","text":"<p>Aggregate function.</p> <p>The MAX() function calculates the maximum value across a group of values.</p>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Aggregate-Functions/max/#syntax","title":"Syntax","text":"<pre><code>&gt; MAX(expr)\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Aggregate-Functions/max/#arguments","title":"Arguments","text":"Arguments Description expr Any expression"},{"location":"MatrixOne/Reference/Functions-and-Operators/Aggregate-Functions/max/#returned-value","title":"Returned Value","text":"<p>Returns the maximum value of expr. MAX() may take a string argument, in such cases, it returns the maximum string value.</p>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Aggregate-Functions/max/#examples","title":"Examples","text":"<pre><code>&gt; drop table if exists tbl1,tbl2;\n&gt; create table tbl1 (col_1a tinyint, col_1b smallint, col_1c int, col_1d bigint, col_1e char(10) not null);\n&gt; insert into tbl1 values (0,1,1,7,\"a\");\n&gt; insert into tbl1 values (0,1,2,8,\"b\");\n&gt; insert into tbl1 values (0,1,3,9,\"c\");\n&gt; insert into tbl1 values (0,1,4,10,\"D\");\n&gt; insert into tbl1 values (0,1,5,11,\"a\");\n&gt; insert into tbl1 values (0,1,6,12,\"c\");\n\n&gt; select max(col_1d) from tbl1;\n+-------------+\n| max(col_1d) |\n+-------------+\n|          12 |\n+-------------+\n\n&gt; select max(col_1c) as m1 from tbl1 where col_1d&lt;12 group by col_1e;\n+------+\n| m1   |\n+------+\n|    5 |\n|    2 |\n|    3 |\n|    4 |\n+------+\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Aggregate-Functions/median/","title":"MEDIAN()","text":""},{"location":"MatrixOne/Reference/Functions-and-Operators/Aggregate-Functions/median/#description","title":"Description","text":"<p><code>MEDIAN()</code> returns the median value of a set of values, that is, returns the value in the middle after sorting a set of values. If the argument set contains an even number of values, the function returns the average of the two numbers in the middle. It can be used as an aggregate or analytical function.</p>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Aggregate-Functions/median/#syntax","title":"Syntax","text":"<pre><code>&gt; MEDIAN(expr)\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Aggregate-Functions/median/#arguments","title":"Arguments","text":"Arguments Description expr Required. Specify the name of the array whose median value is required, whose argument type is a numeric data type or can be implicitly converted to a numeric data type."},{"location":"MatrixOne/Reference/Functions-and-Operators/Aggregate-Functions/median/#returned-value","title":"Returned Value","text":"<p>The function return value and type are the same as the return value and type of its argument.</p>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Aggregate-Functions/median/#examples","title":"Examples","text":"<pre><code>mysql&gt; select median(null);\n+--------------+\n| median(null) |\n+--------------+\n|         NULL |\n+--------------+\n1 row in set (0.00 sec)\n\ndrop table if exists t1;\ncreate table t1 (a int,b int);\ninsert into t1 values (1,null);\n\nmysql&gt; select median(b) from t1;\n+-----------+\n| median(b) |\n+-----------+\n|      NULL |\n+-----------+\n1 row in set (0.01 sec)\n\ninsert into t1 values (1,1);\n\nmysql&gt; select median(b) from t1;\n+-----------+\n| median(b) |\n+-----------+\n|         1 |\n+-----------+\n1 row in set (0.01 sec)\n\ninsert into t1 values (1,2);\n\nmysql&gt; select median(b) from t1;\n+-----------+\n| median(b) |\n+-----------+\n|       1.5 |\n+-----------+\n1 row in set (0.01 sec)\n\nmysql&gt; select median(b) from t1 group by a order by a;\n+-----------+\n| median(b) |\n+-----------+\n|       1.5 |\n+-----------+\n1 row in set (0.00 sec)\n\ninsert into t1 values (2,1),(2,2),(2,3),(2,4);\n\nmysql&gt; select median(b) from t1 group by a order by a;\n+-----------+\n| median(b) |\n+-----------+\n|       1.5 |\n|       2.5 |\n+-----------+\n2 rows in set (0.01 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Aggregate-Functions/min/","title":"MIN","text":""},{"location":"MatrixOne/Reference/Functions-and-Operators/Aggregate-Functions/min/#description","title":"Description","text":"<p>Aggregate function.</p> <p>The MAX() function calculates the maximum value across a group of values.</p>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Aggregate-Functions/min/#syntax","title":"Syntax","text":"<pre><code>&gt; MIN(expr)\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Aggregate-Functions/min/#arguments","title":"Arguments","text":"Arguments Description expr Any expression"},{"location":"MatrixOne/Reference/Functions-and-Operators/Aggregate-Functions/min/#returned-value","title":"Returned Value","text":"<p>Returns the minimum value of expr. MIN() may take a string argument, in such cases, it returns the minimum string value.</p>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Aggregate-Functions/min/#examples","title":"Examples","text":"<pre><code>&gt; drop table if exists tbl1,tbl2;\n&gt; create table tbl1 (col_1a tinyint, col_1b smallint, col_1c int, col_1d bigint, col_1e char(10) not null);\n&gt; insert into tbl1 values (0,1,1,7,\"a\");\n&gt; insert into tbl1 values (0,1,2,8,\"b\");\n&gt; insert into tbl1 values (0,1,3,9,\"c\");\n&gt; insert into tbl1 values (0,1,4,10,\"D\");\n&gt; insert into tbl1 values (0,1,5,11,\"a\");\n&gt; insert into tbl1 values (0,1,6,12,\"c\");\n\n&gt; select min(col_1d) from tbl1;\n+-------------+\n| min(col_1d) |\n+-------------+\n|           7 |\n+-------------+\n\n&gt; select min(col_1c) as m1 from tbl1 where col_1d&lt;12 group by col_1e;\n+------+\n| m1   |\n+------+\n|    1 |\n|    2 |\n|    3 |\n|    4 |\n+------+\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Aggregate-Functions/stddev_pop/","title":"STDDEV_POP","text":""},{"location":"MatrixOne/Reference/Functions-and-Operators/Aggregate-Functions/stddev_pop/#description","title":"Description","text":"<p>Aggregate function.</p> <p>The STDDEV_POP(expr) function returns the population standard deviation of expr.</p>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Aggregate-Functions/stddev_pop/#syntax","title":"Syntax","text":"<pre><code>&gt; STDDEV_POP(expr)\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Aggregate-Functions/stddev_pop/#arguments","title":"Arguments","text":"Arguments Description expr Any numerical expressions"},{"location":"MatrixOne/Reference/Functions-and-Operators/Aggregate-Functions/stddev_pop/#examples","title":"Examples","text":"<pre><code>&gt; CREATE TABLE t1(PlayerName VARCHAR(100) NOT NULL,RunScored INT NOT NULL,WicketsTaken INT NOT NULL);\n&gt; INSERT INTO t1 VALUES('KL Rahul', 52, 0 ),('Hardik Pandya', 30, 1 ),('Ravindra Jadeja', 18, 2 ),('Washington Sundar', 10, 1),('D Chahar', 11, 2 ),  ('Mitchell Starc', 0, 3);\n&gt; SELECT STDDEV_POP(RunScored) as Pop_Standard_Deviation FROM t1;\n&gt; SELECT  STDDEV_POP(WicketsTaken) as Pop_Std_Dev_Wickets FROM t1;\n\n\n&gt; SELECT STDDEV_POP(RunScored) as Pop_Standard_Deviation FROM t1;\n+------------------------+\n| Pop_Standard_Deviation |\n+------------------------+\n|                16.8762 |\n+------------------------+\n1 row in set (0.02 sec)\n\n&gt; SELECT  STDDEV_POP(WicketsTaken) as Pop_Std_Dev_Wickets FROM t1;\n+---------------------+\n| Pop_Std_Dev_Wickets |\n+---------------------+\n|              0.9574 |\n+---------------------+\n1 row in set (0.01 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Aggregate-Functions/sum/","title":"SUM","text":""},{"location":"MatrixOne/Reference/Functions-and-Operators/Aggregate-Functions/sum/#description","title":"Description","text":"<p>Aggregate function.</p> <p>The SUM() function calculates the sum of a set of values.</p> <p>note</p> <p>NULL values are not counted. </p>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Aggregate-Functions/sum/#syntax","title":"Syntax","text":"<pre><code>&gt; SUM(expr)\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Aggregate-Functions/sum/#arguments","title":"Arguments","text":"Arguments Description expr Any expression"},{"location":"MatrixOne/Reference/Functions-and-Operators/Aggregate-Functions/sum/#returned-value","title":"Returned Value","text":"<p>Returns the sum of expr. A double if the input type is double, otherwise integer.</p> <p>If there are no matching rows, SUM() returns NULL.</p>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Aggregate-Functions/sum/#examples","title":"Examples","text":"<ul> <li>Example 1:</li> </ul> <pre><code>&gt; drop table if exists tbl1,tbl2;\n&gt; create table tbl1 (col_1a tinyint, col_1b smallint, col_1c int, col_1d bigint, col_1e char(10) not null);\n&gt; insert into tbl1 values (0,1,1,7,\"a\");\n&gt; insert into tbl1 values (0,1,2,8,\"b\");\n&gt; insert into tbl1 values (0,1,3,9,\"c\");\n&gt; insert into tbl1 values (0,1,4,10,\"D\");\n&gt; insert into tbl1 values (0,1,5,11,\"a\");\n&gt; insert into tbl1 values (0,1,6,12,\"c\");\n\n&gt; select sum(col_1c) from tbl1;\n+-------------+\n| sum(col_1c) |\n+-------------+\n|          21 |\n+-------------+\n\n&gt; select sum(col_1d) as c1 from tbl1 where col_1d &lt; 13 group by col_1e order by c1;\n+------+\n| c1   |\n+------+\n|    8 |\n|   10 |\n|   18 |\n|   21 |\n+------+\n</code></pre> <ul> <li>Example 2:</li> </ul> <pre><code>&gt; CREATE TABLE t1(a varchar(255), b INT, c INT UNSIGNED, d DECIMAL(12,2), e REAL);\n&gt; INSERT INTO t1 VALUES('iynfj', 1, 1, 1, 1);\n&gt; INSERT INTO t1 VALUES('innfj', 2, 2, 2, 2);\n&gt; SELECT SUM( DISTINCT b ) FROM t1 GROUP BY b;\n+-----------------+\n| sum(distinct b) |\n+-----------------+\n|               1 |\n|               2 |\n+-----------------+\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Aggregate-Functions/var_pop/","title":"VAR_POP","text":""},{"location":"MatrixOne/Reference/Functions-and-Operators/Aggregate-Functions/var_pop/#function-description","title":"Function Description","text":"<p><code>VAR_POP()</code> is an aggregate function that calculates the overall variance. Synonymous with <code>VARIANCE()</code>.</p>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Aggregate-Functions/var_pop/#function-syntax","title":"Function syntax","text":"<pre><code>&gt; VAR_POP(expr)\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Aggregate-Functions/var_pop/#parameter-interpretation","title":"Parameter interpretation","text":"Parameters Description expr Column names of columns of any numeric type"},{"location":"MatrixOne/Reference/Functions-and-Operators/Aggregate-Functions/var_pop/#examples","title":"Examples","text":"<pre><code>CREATE TABLE t1(PlayerName VARCHAR(100) NOT NULL,RunScored INT NOT NULL,WicketsTaken INT NOT NULL);\nINSERT INTO t1 VALUES('KL Rahul', 52, 0 ),('Hardik Pandya', 30, 1 ),('Ravindra Jadeja', 18, 2 ),('Washington Sundar', 10, 1),('D Chahar', 11, 2 ),  ('Mitchell Starc', 0, 3);\n\n-- Return Consistency\nmysql&gt; SELECT VAR_POP(RunScored) as Pop_Standard_Variance FROM t1;\n+-----------------------+\n| Pop_Standard_Variance |\n+-----------------------+\n|     284.8055555555555 |\n+-----------------------+\n1 row in set (0.01 sec)\n\n-- Calculate the variance of the WicketsTaken columns\nmysql&gt; SELECT VAR_POP(WicketsTaken) as Pop_Std_Var_Wickets FROM t1;\n+---------------------+\n| Pop_Std_Var_Wickets |\n+---------------------+\n|  0.9166666666666665 |\n+---------------------+\n1 row in set (0.01 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Aggregate-Functions/variance/","title":"VARIANCE","text":""},{"location":"MatrixOne/Reference/Functions-and-Operators/Aggregate-Functions/variance/#description","title":"Description","text":"<p>The VARIANCE(expr) function returns the population standard variance of expr. Variance is an essential concept in statistics, which is used to measure the degree of dispersion of a set of data values, that is, the difference between the data value and its mean value. If the variance value is large, the difference between the data values \u200b\u200bis large; conversely, if the variance value is small, the difference between the data values \u200b\u200bis slight.</p>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Aggregate-Functions/variance/#syntax","title":"Syntax","text":"<pre><code>&gt; VARIANCE(expr)\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Aggregate-Functions/variance/#arguments","title":"Arguments","text":"Arguments Description expr Any numerical expressions"},{"location":"MatrixOne/Reference/Functions-and-Operators/Aggregate-Functions/variance/#examples","title":"Examples","text":"<pre><code>CREATE TABLE t1(PlayerName VARCHAR(100) NOT NULL,RunScored INT NOT NULL,WicketsTaken INT NOT NULL);\nINSERT INTO t1 VALUES('KL Rahul', 52, 0 ),('Hardik Pandya', 30, 1 ),('Ravindra Jadeja', 18, 2 ),('Washington Sundar', 10, 1),('D Chahar', 11, 2 ),  ('Mitchell Starc', 0, 3);\n\n-- Calculate the variance of the RunScored column\n&gt; SELECT VARIANCE(RunScored) as Pop_Standard_Variance FROM t1;\n+-----------------------+\n| Pop_Standard_Variance |\n+-----------------------+\n|     284.8055555555555 |\n+-----------------------+\n1 row in set (0.01 sec)\n\n-- Calculate the variance of the WicketsTaken column\nmysql&gt; SELECT VARIANCE(WicketsTaken) as Pop_Std_Var_Wickets FROM t1;\n+---------------------+\n| Pop_Std_Var_Wickets |\n+---------------------+\n|  0.9166666666666665 |\n+---------------------+\n1 row in set (0.01 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Datetime/convert-tz/","title":"CONVERT_TZ()","text":""},{"location":"MatrixOne/Reference/Functions-and-Operators/Datetime/convert-tz/#function-description","title":"Function Description","text":"<p>The <code>CONVERT_TZ()</code> function is used to convert a given datetime from one time zone to another. If the argument is invalid, the function returns NULL.</p>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Datetime/convert-tz/#function-syntax","title":"Function syntax","text":"<pre><code>&gt; CONVERT_TZ(dt,from_tz,to_tz)\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Datetime/convert-tz/#parameter-interpretation","title":"Parameter interpretation","text":"Parameters Description dt Required parameters. The given datetime to convert. from_tz Required parameters. Identification of the current time zone to_tz Required parameters. Identification of the new time zone"},{"location":"MatrixOne/Reference/Functions-and-Operators/Datetime/convert-tz/#examples","title":"Examples","text":"<pre><code>mysql&gt; SELECT CONVERT_TZ('2004-01-01 12:00:00','GMT','MET');\n+-------------------------------------------+\n| convert_tz(2004-01-01 12:00:00, GMT, MET) |\n+-------------------------------------------+\n| 2004-01-01 13:00:00                       |\n+-------------------------------------------+\n1 row in set (0.00 sec)\n\nmysql&gt; SELECT CONVERT_TZ('2004-01-01 12:00:00','+00:00','+10:00');\n+-------------------------------------------------+\n| convert_tz(2004-01-01 12:00:00, +00:00, +10:00) |\n+-------------------------------------------------+\n| 2004-01-01 22:00:00                             |\n+-------------------------------------------------+\n1 row in set (0.01 sec)\n\nmysql&gt; select convert_tz('2023-12-31 10:28:00','+08:00', 'America/New_York') as dtime;\n+---------------------+\n| dtime               |\n+---------------------+\n| 2023-12-30 21:28:00 |\n+---------------------+\n1 row in set (0.00 sec)\n\nmysql&gt; select convert_tz(NULL,'-05:00', '+05:30') as dtime;\n+-------+\n| dtime |\n+-------+\n| NULL  |\n+-------+\n1 row in set (0.00 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Datetime/curdate/","title":"CURDATE()","text":""},{"location":"MatrixOne/Reference/Functions-and-Operators/Datetime/curdate/#description","title":"Description","text":"<p>The <code>CURDATE()</code> function returns the current date as a value in <code>YYYY-MM-DD</code> format, depending on whether the function is used in string or numeric context.</p> <p>Note</p> <p>The difference from MySQL's behavior is: <code>curdate()+int</code> returns the number of days from 1970-01-01. For example, <code>curdate()+1</code> means the current date minus 1970-01-01 plus 1 day.</p>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Datetime/curdate/#syntax","title":"Syntax","text":"<pre><code>&gt; CURDATE()\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Datetime/curdate/#examples","title":"Examples","text":"<pre><code>mysql&gt; SELECT CURDATE();\n+------------+\n| curdate()  |\n+------------+\n| 2023-02-02 |\n+------------+\n1 row in set (0.00 sec)\n\nmysql&gt; SELECT CURDATE() + 0;\n+---------------+\n| curdate() + 0 |\n+---------------+\n|         19390 |\n+---------------+\n1 row in set (0.00 sec)\n\nmysql&gt; select cast(now() as date)=curdate() q;\n+------+\n| q    |\n+------+\n| true |\n+------+\n1 row in set (0.01 sec)\n\ncreate table t1 (a int);\ninsert into t1 values (1),(2),(3);\n\nmysql&gt; select cast(now() as date)=curdate() q from t1;\n+------+\n| q    |\n+------+\n| true |\n| true |\n| true |\n+------+\n3 rows in set (0.01 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Datetime/current-timestamp/","title":"CURRENT_TIMESTAMP()","text":""},{"location":"MatrixOne/Reference/Functions-and-Operators/Datetime/current-timestamp/#description","title":"Description","text":"<p><code>CURRENT_TIMESTAMP</code> and <code>CURRENT_TIMESTAMP()</code> are synonyms for <code>NOW()</code>.</p> <p>Returns the current date and time as a value in <code>YYYY-MM-DD hh:mm:ss</code> or <code>YYYYMMDDhhmmss</code> format, depending on whether the function is used in string or numeric context. The value is expressed in the session time zone.</p>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Datetime/current-timestamp/#syntax","title":"Syntax","text":"<pre><code>&gt; CURRENT_TIMESTAMP([fsp])\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Datetime/current-timestamp/#arguments","title":"Arguments","text":"Arguments Description fsp Optional. If the <code>fsp</code> argument is given to specify a fractional seconds precision from 0 to 6, the return value includes a fractional seconds part of that many digits."},{"location":"MatrixOne/Reference/Functions-and-Operators/Datetime/current-timestamp/#examples","title":"Examples","text":"<pre><code>mysql&gt; SELECT CURRENT_TIMESTAMP();\n+----------------------------+\n| current_timestamp()        |\n+----------------------------+\n| 2022-09-21 11:46:44.153777 |\n+----------------------------+\n1 row in set (0.00 sec)\n\nmysql&gt; SELECT NOW();\n+----------------------------+\n| now()                      |\n+----------------------------+\n| 2022-09-21 12:56:36.915961 |\n+----------------------------+\n1 row in set (0.01 sec)\n</code></pre> <pre><code>create table t1 (a int primary key, b int, c int, d timestamp default current_timestamp);\ninsert into t1 select 1,1,1,now();\ninsert into t1 select 2,0,0,null;\n\nmysql&gt; select a,b,c,year(d) from t1;\n+------+------+------+---------+\n| a    | b    | c    | year(d) |\n+------+------+------+---------+\n|    1 |    1 |    1 |    2022 |\n|    2 |    0 |    0 |    NULL |\n+------+------+------+---------+\n2 rows in set (0.01 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Datetime/current-timestamp/#constraints","title":"Constraints","text":"<p>Operator <code>+</code> or <code>-</code> is not supported for using with <code>CURRENT_TIMESTAMP</code> now.</p>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Datetime/date-add/","title":"DATE_ADD()","text":""},{"location":"MatrixOne/Reference/Functions-and-Operators/Datetime/date-add/#description","title":"Description","text":"<p>The <code>DATE_ADD()</code> function adds a time/date interval to a date and then returns the date. If date is <code>NULL</code>, the function returns <code>NULL</code>.</p>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Datetime/date-add/#syntax","title":"Syntax","text":"<pre><code>&gt; DATE_ADD(date,INTERVAL expr unit)\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Datetime/date-add/#arguments","title":"Arguments","text":"Arguments Description date Required. The date/datetime to extract the date from. expr Required.  The expr is an expression specifying the interval value to be added or subtracted from the starting date. The expr is evaluated as a string; it may start with a - for negative intervals. unit Required. The unit is a keyword indicating the units in which the expression should be interpreted. The unit argument can have the following values:MICROSECOND SECONDMINUTEHOURDAYWEEKMONTHQUATERYEARSECOND_MICROSECONDMINUTE_MICROSECONDMINUTE_SECONDHOUR_MICROSECONDHOUR_SECONDHOUR_MINUTEDAY_MICROSECONDDAY_SECONDDAY_MINUTEDAY_HOURYEAR_MONTH"},{"location":"MatrixOne/Reference/Functions-and-Operators/Datetime/date-add/#examples","title":"Examples","text":"<pre><code>create table t2(orderid int, productname varchar(20), orderdate datetime);\ninsert into t2 values ('1','Jarl','2008-11-11 13:23:44.657');\n\nmysql&gt; SELECT OrderId,DATE_ADD(OrderDate,INTERVAL 45 DAY) AS OrderPayDate FROM t2;\n+---------+---------------------+\n| orderid | orderpaydate        |\n+---------+---------------------+\n|       1 | 2008-12-26 13:23:45 |\n+---------+---------------------+\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Datetime/date-add/#constraints","title":"Constraints","text":"<p>The date type supports only <code>yyyy-mm-dd</code> and <code>yyyymmdd</code> for now.</p>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Datetime/date-format/","title":"DATE_FORMAT()","text":""},{"location":"MatrixOne/Reference/Functions-and-Operators/Datetime/date-format/#description","title":"Description","text":"<p>Formats the date value according to the format string. If either argument is NULL, the function returns NULL.</p> <p><code>DATE_FORMAT()</code> returns a string with a character set and collation given by character_set_connection and collation_connection so that it can return month and weekday names containing non-ASCII characters.</p>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Datetime/date-format/#syntax","title":"Syntax","text":"<pre><code>&gt; DATE_FORMAT(date,format)\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Datetime/date-format/#arguments","title":"Arguments","text":"Arguments Description date Required. The date to be formatted. format Required. The format to use. Can be one or a combination of the following values as the below table:"},{"location":"MatrixOne/Reference/Functions-and-Operators/Datetime/date-format/#format-specifier","title":"Format Specifier","text":"<p>Info</p> <p>The specifiers shown in the following table may be used in the format string. The <code>%</code> character is required before format specifier characters. The specifiers apply to other functions as well as <code>UNIX_TIMESTAMP()</code>.</p> Specifier Description %a Abbreviated weekday name (Sun..Sat) %b Abbreviated month name (Jan..Dec) %c Month, numeric (0..12) %D Day of the month with English suffix (0th, 1st, 2nd, 3rd, \u2026) %d Day of the month, numeric (00..31) %e Day of the month, numeric (0..31) %f Microseconds (000000..999999) %H Hour (00..23) %h Hour (01..12) %I Hour (01..12) %i Minutes, numeric (00..59) %j Day of year (001..366) %k Hour (0..23) %l Hour (1..12) %M Month name (January..December) %m Month, numeric (00..12) %p AM or PM %r Time, 12-hour (hh:mm:ss followed by AM or PM) %S Seconds (00..59) %s Seconds (00..59) %T Time, 24-hour (hh:mm:ss) %U Week (00..53), where Sunday is the first day of the week; WEEK() mode 0 %u Week (00..53), where Monday is the first day of the week; WEEK() mode 1 %V Week (01..53), where Sunday is the first day of the week; WEEK() mode 2; used with %X %v Week (01..53), where Monday is the first day of the week; WEEK() mode 3; used with %x %W Weekday name (Sunday..Saturday) %w Day of the week (0=Sunday..6=Saturday) %X Year for the week where Sunday is the first day of the week, numeric, four digits; used with %V %x Year for the week, where Monday is the first day of the week, numeric, four digits; used with %v %Y Year, numeric, four digits %y Year, numeric (two digits) %% A literal % character %x x, for any \"x\" not listed above"},{"location":"MatrixOne/Reference/Functions-and-Operators/Datetime/date-format/#examples","title":"Examples","text":"<pre><code>mysql&gt; SELECT DATE_FORMAT('2009-10-04 22:23:00', '%W %M %Y');\n+--------------------------------------------+\n| date_format(2009-10-04 22:23:00, %W %M %Y) |\n+--------------------------------------------+\n| Sunday October 2009                        |\n+--------------------------------------------+\n1 row in set (0.01 sec)\n\nmysql&gt; SELECT DATE_FORMAT('2007-10-04 22:23:00', '%H:%i:%s');\n+--------------------------------------------+\n| date_format(2007-10-04 22:23:00, %H:%i:%s) |\n+--------------------------------------------+\n| 22:23:00                                   |\n+--------------------------------------------+\n1 row in set (0.02 sec)\n\nmysql&gt; SELECT Date_format('1900-10-04 22:23:00', '%D %y %a %d %m %b %j');\n+--------------------------------------------------------+\n| date_format(1900-10-04 22:23:00, %D %y %a %d %m %b %j) |\n+--------------------------------------------------------+\n| 4th 00 Thu 04 10 Oct 277                               |\n+--------------------------------------------------------+\n1 row in set (0.01 sec)\n\nmysql&gt; SELECT DATE_FORMAT('1997-10-04 22:23:00', '%H %k %I %r %T %S %w');\n+--------------------------------------------------------+\n| date_format(1997-10-04 22:23:00, %H %k %I %r %T %S %w) |\n+--------------------------------------------------------+\n| 22 22 10 10:23:00 PM 22:23:00 00 6                     |\n+--------------------------------------------------------+\n1 row in set (0.01 sec)\n\nmysql&gt; SELECT DATE_FORMAT('1999-01-01', '%X %V');\n+--------------------------------+\n| date_format(1999-01-01, %X %V) |\n+--------------------------------+\n| 1998 52                        |\n+--------------------------------+\n1 row in set (0.00 sec)\n</code></pre> <pre><code>CREATE TABLE t2 (f1 DATETIME);\nINSERT INTO t2 (f1) VALUES ('2005-01-01');\nINSERT INTO t2 (f1) VALUES ('2005-02-01');\n\nmysql&gt; SELECT Date_format(f1, \"%m\") AS d1,\nDate_format(f1, \"%m\") AS d2\nFROM   t2\nORDER  BY Date_format(f1, \"%m\");\n+------+------+\n| d1   | d2   |\n+------+------+\n| 01   | 01   |\n| 02   | 02   |\n+------+------+\n2 rows in set (0.00 sec)\n</code></pre> <pre><code>CREATE TABLE t5 (a int, b date);\nINSERT INTO t5\nVALUES    (1,\n'2000-02-05'),\n(2,\n'2000-10-08'),\n(3,\n'2005-01-03'),\n(4,\n'2007-09-01'),\n(5,\n'2022-01-01');\n\nmysql&gt; SELECT * FROM   t5\nWHERE  b = Date_format('20000205', '%Y-%m-%d');\n+------+------------+\n| a    | b          |\n+------+------------+\n|    1 | 2000-02-05 |\n+------+------------+\n1 row in set (0.01 sec)\n\nmysql&gt; SELECT * FROM t5\nWHERE  b != Date_format('20000205', '%Y-%m-%d');\n+------+------------+\n| a    | b          |\n+------+------------+\n|    2 | 2000-10-08 |\n|    3 | 2005-01-03 |\n|    4 | 2007-09-01 |\n|    5 | 2022-01-01 |\n+------+------------+\n4 rows in set (0.01 sec)\n\nmysql&gt; SELECT DATE_FORMAT(\"2009-01-01\",'%W %d %M %Y') as valid_date;\n+--------------------------+\n| valid_date               |\n+--------------------------+\n| Thursday 01 January 2009 |\n+--------------------------+\n1 row in set (0.00 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Datetime/date-format/#constraints","title":"Constraints","text":"<p>The date type supports only <code>yyyy-mm-dd</code> and <code>yyyymmdd</code> for now.</p>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Datetime/date-sub/","title":"DATE_SUB()","text":""},{"location":"MatrixOne/Reference/Functions-and-Operators/Datetime/date-sub/#description","title":"Description","text":"<p>The <code>DATE_SUB()</code> function subtracts a time/date interval from a date and then returns the date. If date is <code>NULL</code>, the function returns <code>NULL</code>.</p>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Datetime/date-sub/#syntax","title":"Syntax","text":"<pre><code>DATE_SUB(date,INTERVAL expr unit)\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Datetime/date-sub/#arguments","title":"Arguments","text":"Arguments Description date Required. The date/datetime to extract the date from. expr Required.  The expr is an expression specifying the interval value to be added or subtracted from the starting date. The expr is evaluated as a string; it may start with a - for negative intervals. unit Required. The unit is a keyword indicating the units in which the expression should be interpreted. The unit argument can have the following values:MICROSECOND SECONDMINUTEHOURDAYWEEKMONTHQUATERYEARSECOND_MICROSECONDMINUTE_MICROSECONDMINUTE_SECONDHOUR_MICROSECONDHOUR_SECONDHOUR_MINUTEDAY_MICROSECONDDAY_SECONDDAY_MINUTEDAY_HOURYEAR_MONTH"},{"location":"MatrixOne/Reference/Functions-and-Operators/Datetime/date-sub/#examples","title":"Examples","text":"<pre><code>create table t2(orderid int, productname varchar(20), orderdate datetime);\ninsert into t2 values ('1','Jarl','2008-11-11 13:23:44.657');\n\nmysql&gt; SELECT OrderId,DATE_SUB(OrderDate,INTERVAL 5 DAY) AS SubtractDate FROM t2;\n+---------+---------------------+\n| orderid | subtractdate        |\n+---------+---------------------+\n|       1 | 2008-11-06 13:23:45 |\n+---------+---------------------+\n1 row in set (0.01 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Datetime/date-sub/#constraints","title":"Constraints","text":"<p>The date type supports only <code>yyyy-mm-dd</code> and <code>yyyymmdd</code> for now.</p>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Datetime/date/","title":"DATE()","text":""},{"location":"MatrixOne/Reference/Functions-and-Operators/Datetime/date/#description","title":"Description","text":"<p>Extracts the date part of the date or datetime expression expr.</p>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Datetime/date/#syntax","title":"Syntax","text":"<pre><code>&gt; DATE(expr)\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Datetime/date/#arguments","title":"Arguments","text":"Arguments Description expr Required.  The date/datetime to extract the date from."},{"location":"MatrixOne/Reference/Functions-and-Operators/Datetime/date/#examples","title":"Examples","text":"<pre><code>drop table if exists t1;\ncreate table t1(a date, b datetime);\ninsert into t1 values('2022-01-01','2022-01-01 01:01:01');\ninsert into t1 values('2022-01-01','2022-01-01 01:01:01');\ninsert into t1 values(20220101,'2022-01-01 01:01:01');\ninsert into t1 values('2022-01-02','2022-01-02 23:01:01');\ninsert into t1 values('2021-12-31','2021-12-30 23:59:59');\ninsert into t1 values('2022-06-30','2021-12-30 23:59:59');\n\nmysql&gt; select date(a),date(b) from t1;\n+------------+------------+\n| date(a)    | date(b)    |\n+------------+------------+\n| 2022-01-01 | 2022-01-01 |\n| 2022-01-01 | 2022-01-01 |\n| 2022-01-01 | 2022-01-01 |\n| 2022-01-02 | 2022-01-02 |\n| 2021-12-31 | 2021-12-30 |\n| 2022-06-30 | 2021-12-30 |\n+------------+------------+\n5 rows in set (0.01 sec)\n\nmysql&gt; select date(a),date(date(a)) as dda from t1;\n+------------+------------+\n| date(a)    | dda        |\n+------------+------------+\n| 2022-01-01 | 2022-01-01 |\n| 2022-01-01 | 2022-01-01 |\n| 2022-01-01 | 2022-01-01 |\n| 2022-01-02 | 2022-01-02 |\n| 2021-12-31 | 2021-12-31 |\n| 2022-06-30 | 2022-06-30 |\n+------------+------------+\n5 rows in set (0.00 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Datetime/date/#constraints","title":"Constraints","text":"<p>The date type supports only <code>yyyy-mm-dd</code> and <code>yyyymmdd</code> for now.</p>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Datetime/datediff/","title":"DATEDIFF()","text":""},{"location":"MatrixOne/Reference/Functions-and-Operators/Datetime/datediff/#description","title":"Description","text":"<p><code>DATEDIFF()</code> returns expr1 \u2212 expr2 expressed as a value in days from one date to the other. expr1 and expr2 are date or date-and-time expressions. Only the date parts of the values are used in the calculation.</p>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Datetime/datediff/#syntax","title":"Syntax","text":"<pre><code>&gt; DATEDIFF(expr1,expr2)\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Datetime/datediff/#arguments","title":"Arguments","text":"Arguments Description expr1,expr2 Required. expr1 and expr2 are date or date-and-time expressions. Only the date parts of the values are used in the calculation."},{"location":"MatrixOne/Reference/Functions-and-Operators/Datetime/datediff/#examples","title":"Examples","text":"<pre><code>mysql&gt; SELECT DATEDIFF('2007-12-31 23:59:59','2007-12-30');\n+-------------------------------------------+\n| datediff(2007-12-31 23:59:59, 2007-12-30) |\n+-------------------------------------------+\n|                                         1 |\n+-------------------------------------------+\n1 row in set (0.00 sec)\n\nmysql&gt; SELECT DATEDIFF('2010-11-30 23:59:59','2010-12-31');\n+-------------------------------------------+\n| datediff(2010-11-30 23:59:59, 2010-12-31) |\n+-------------------------------------------+\n|                                       -31 |\n+-------------------------------------------+\n1 row in set (0.00 sec)\n</code></pre> <pre><code>create table t1(a INT,  b date);\ninsert into t1 values(1, \"2012-10-11\");\ninsert into t1 values(2, \"2004-04-24\");\ninsert into t1 values(3, \"2008-12-04\");\ninsert into t1 values(4, \"2012-03-23\");\ninsert into t1 values(5, \"2000-03-23\");\ninsert into t1 values(6, \"2030-03-23\");\ninsert into t1 values(7, \"2040-03-23\");\n\nmysql&gt; SELECT a, DATEDIFF('2022-10-9', b) from t1;\n+------+------------------------+\n| a    | datediff(2022-10-9, b) |\n+------+------------------------+\n|    1 |                   3650 |\n|    2 |                   6742 |\n|    3 |                   5057 |\n|    4 |                   3852 |\n|    5 |                   8235 |\n|    6 |                  -2722 |\n|    7 |                  -6375 |\n+------+------------------------+\n7 rows in set (0.01 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Datetime/day/","title":"DAY()","text":""},{"location":"MatrixOne/Reference/Functions-and-Operators/Datetime/day/#description","title":"Description","text":"<p>Returns the day of the month for date, in the range 1 to 31, or 0 for dates such as <code>0000-00-00</code> or <code>2008-00-00</code> that have a zero day part. Returns NULL if date is <code>NULL</code>.</p>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Datetime/day/#syntax","title":"Syntax","text":"<pre><code>&gt; DAY(date)\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Datetime/day/#arguments","title":"Arguments","text":"Arguments Description date Required. The date/datetime to extract the date from."},{"location":"MatrixOne/Reference/Functions-and-Operators/Datetime/day/#examples","title":"Examples","text":"<pre><code>mysql&gt; SELECT day('2007-02-03');\n+-----------------+\n| day(2007-02-03) |\n+-----------------+\n|               3 |\n+-----------------+\n1 row in set (0.01 sec)\n</code></pre> <pre><code>CREATE TABLE t3(c1 TIMESTAMP NOT NULL);\nINSERT INTO t3 VALUES('2000-01-01');\nINSERT INTO t3 VALUES('1999-12-31');\nINSERT INTO t3 VALUES('2000-01-01');\nINSERT INTO t3 VALUES('2006-12-25');\nINSERT INTO t3 VALUES('2008-02-29');\n\nmysql&gt; SELECT day(c1) from t3;\n+---------+\n| day(c1) |\n+---------+\n|       1 |\n|      31 |\n|       1 |\n|      25 |\n|      29 |\n+---------+\n5 rows in set (0.01 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Datetime/dayofyear/","title":"DAYOFYEAR()","text":""},{"location":"MatrixOne/Reference/Functions-and-Operators/Datetime/dayofyear/#description","title":"Description","text":"<p>Returns the day of the year for date, in the range 1 to 366.</p>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Datetime/dayofyear/#syntax","title":"Syntax","text":"<pre><code>&gt; DAYOFYEAR(expr)\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Datetime/dayofyear/#arguments","title":"Arguments","text":"Arguments Description expr Required.  The date to get the day from. Must be date type."},{"location":"MatrixOne/Reference/Functions-and-Operators/Datetime/dayofyear/#examples","title":"Examples","text":"<pre><code>drop table if exists t1;\ncreate table t1(a date, b datetime,c varchar(30));\ninsert into t1 values('2022-01-01','2022-01-01 01:01:01','2022-01-01 01:01:01');\ninsert into t1 values('2022-01-01','2022-01-01 01:01:01','2022-01-01 01:01:01');\ninsert into t1 values(20220101,'2022-01-01 01:01:01','2022-13-13 01:01:01');\ninsert into t1 values('2022-01-02','2022-01-02 23:01:01','2022-01-01 23:01:01');\ninsert into t1 values('2021-12-31','2021-12-30 23:59:59','2021-12-30 23:59:59');\ninsert into t1 values('2022-06-30','2021-12-30 23:59:59','2021-12-30 23:59:59');\n\nmysql&gt; select distinct dayofyear(a) as dya from t1;\n+------+\n| dya  |\n+------+\n|    1 |\n|    2 |\n|  365 |\n|  181 |\n+------+\n4 rows in set (0.00 sec)\n\nmysql&gt; select * from t1 where dayofyear(a)&gt;120;\n+------------+---------------------+---------------------+\n| a          | b                   | c                   |\n+------------+---------------------+---------------------+\n| 2021-12-31 | 2021-12-30 23:59:59 | 2021-12-30 23:59:59 |\n| 2022-06-30 | 2021-12-30 23:59:59 | 2021-12-30 23:59:59 |\n+------------+---------------------+---------------------+\n2 rows in set (0.01 sec)\n\nmysql&gt; select * from t1 where dayofyear(a) between 1 and 184;\n+------------+---------------------+---------------------+\n| a          | b                   | c                   |\n+------------+---------------------+---------------------+\n| 2022-01-01 | 2022-01-01 01:01:01 | 2022-01-01 01:01:01 |\n| 2022-01-01 | 2022-01-01 01:01:01 | 2022-01-01 01:01:01 |\n| 2022-01-01 | 2022-01-01 01:01:01 | 2022-13-13 01:01:01 |\n| 2022-01-02 | 2022-01-02 23:01:01 | 2022-01-01 23:01:01 |\n| 2022-06-30 | 2021-12-30 23:59:59 | 2021-12-30 23:59:59 |\n+------------+---------------------+---------------------+\n4 rows in set (0.00 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Datetime/dayofyear/#constraints","title":"Constraints","text":"<ul> <li><code>DAYOFYEAR()</code> only supports date type for now.</li> <li>The date type supports only <code>yyyy-mm-dd</code> and <code>yyyymmdd</code> for now.</li> </ul>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Datetime/extract/","title":"EXTRACT()","text":""},{"location":"MatrixOne/Reference/Functions-and-Operators/Datetime/extract/#description","title":"Description","text":"<p>The <code>EXTRACT()</code> function uses the same kinds of unit specifiers as <code>DATE_ADD()</code> or <code>DATE_SUB()</code>, but extracts parts from the date rather than performing date arithmetic. Returns NULL if date is <code>NULL</code>.</p>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Datetime/extract/#syntax","title":"Syntax","text":"<pre><code>&gt; EXTRACT(unit FROM date)\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Datetime/extract/#arguments","title":"Arguments","text":"Arguments Description date Required.  The date/datetime to extract the date from. unit Required. The unit argument can have the following values:MICROSECOND SECONDMINUTEHOURDAYWEEKMONTHQUATERYEARSECOND_MICROSECONDMINUTE_MICROSECONDMINUTE_SECONDHOUR_MICROSECONDHOUR_SECONDHOUR_MINUTEDAY_MICROSECONDDAY_SECONDDAY_MINUTEDAY_HOURYEAR_MONTH"},{"location":"MatrixOne/Reference/Functions-and-Operators/Datetime/extract/#examples","title":"Examples","text":"<pre><code>create table t2(orderid int, productname varchar(20), orderdate datetime);\ninsert into t2 values ('1','Jarl','2008-11-11 13:23:44.657');\n\nmysql&gt; SELECT EXTRACT(YEAR FROM OrderDate) AS OrderYear, EXTRACT(MONTH FROM OrderDate) AS OrderMonth   FROM t2 WHERE OrderId=1;\n+-----------+------------+\n| orderyear | ordermonth |\n+-----------+------------+\n| 2008      | 11         |\n+-----------+------------+\n1 row in set (0.01 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Datetime/extract/#constraints","title":"Constraints","text":"<p>The date type supports only <code>yyyy-mm-dd</code> and <code>yyyymmdd</code> for now.</p>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Datetime/from-unixtime/","title":"FROM_UNIXTIME()","text":""},{"location":"MatrixOne/Reference/Functions-and-Operators/Datetime/from-unixtime/#description","title":"Description","text":"<p>The <code>FROM_UNIXTIME()</code> function returns a representation of <code>unix_timestamp</code> as a datetime or character string value. The value returned is expressed using the session time zone. For example, the return value is in 'YYYYY-MM-DD HH:MM:SS' format or YYYYMMDDHHMMSS. <code>unix_timestamp</code> is an internal timestamp value representing seconds since 1970-01-01 00:00:00 UTC, such as produced by the <code>UNIX_TIMESTAMP()</code> function.</p>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Datetime/from-unixtime/#syntax","title":"Syntax","text":"<pre><code>&gt; FROM_UNIXTIME(unix_timestamp[,format])\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Datetime/from-unixtime/#arguments","title":"Arguments","text":"Arguments Description format Optional.  A format string indicating the format of the return value. If the format is omitted, this function returns a DATETIME value. If the format is <code>NULL</code>, this function returns <code>NULL</code>.format is used to format the result in the same way as the format string used for the <code>DATE_FORMAT()</code> function. If format is supplied, the value returned is a <code>VARCHAR</code>. unix_timestamp Required. If the unix_timestamp is <code>NULL</code>, this function returns <code>NULL</code>. If the unix_timestamp is an integer, the fractional seconds precision of the <code>DATETIME</code> is zero. When <code>unix_timestamp</code> is a decimal value, the fractional seconds precision of the <code>DATETIME</code> is the same as the precision of the decimal value, up to a maximum of 6. When unix_timestamp is a floating point number, the fractional seconds precision of the datetime is 6."},{"location":"MatrixOne/Reference/Functions-and-Operators/Datetime/from-unixtime/#examples","title":"Examples","text":"<pre><code>mysql&gt; SELECT FROM_UNIXTIME(1447430881);\n+---------------------------+\n| from_unixtime(1447430881) |\n+---------------------------+\n| 2015-11-14 00:08:01       |\n+---------------------------+\n1 row in set (0.00 sec)\n\nmysql&gt; SELECT FROM_UNIXTIME(1447430881,  '%Y %D %M %h:%i:%s %x');\n+-------------------------------------------------+\n| from_unixtime(1447430881, %Y %D %M %h:%i:%s %x) |\n+-------------------------------------------------+\n| 2015 14th November 12:08:01 2015                |\n+-------------------------------------------------+\n1 row in set (0.00 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Datetime/from-unixtime/#constraints","title":"Constraints","text":"<p>The date type supports only <code>yyyy-mm-dd</code> and <code>yyyymmdd</code> for now.</p>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Datetime/hour/","title":"HOUR()","text":""},{"location":"MatrixOne/Reference/Functions-and-Operators/Datetime/hour/#description","title":"Description","text":"<p>Returns the hour for time. The range of the return value is 0 to 23 for time-of-day values. However, the range of TIME values actually is much larger, so HOUR can return values greater than 23. Returns NULL if time is NULL.</p>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Datetime/hour/#syntax","title":"Syntax","text":"<pre><code>&gt; HOUR(time)\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Datetime/hour/#arguments","title":"Arguments","text":"Arguments Description time Required. A value that represents time or timestamp."},{"location":"MatrixOne/Reference/Functions-and-Operators/Datetime/hour/#examples","title":"Examples","text":"<pre><code>drop table if exists t1;\ncreate table t1(a datetime, b timestamp);\ninsert into t1 values(\"2022-07-01\", \"2011-01-31 12:00:00\");\ninsert into t1 values(\"2011-01-31 12:32:11\", \"1979-10-22\");\ninsert into t1 values(NULL, \"2022-08-01 23:10:11\");\ninsert into t1 values(\"2011-01-31\", NULL);\ninsert into t1 values(\"2022-06-01 14:11:09\",\"2022-07-01 00:00:00\");\ninsert into t1 values(\"2022-12-31\",\"2011-01-31 12:00:00\");\ninsert into t1 values(\"2022-06-12\",\"2022-07-01 00:00:00\");\n\nmysql&gt; select hour(a),hour(b) from t1;\n+---------+---------+\n| hour(a) | hour(b) |\n+---------+---------+\n|       0 |      12 |\n|      12 |       0 |\n|    NULL |      23 |\n|       0 |    NULL |\n|      14 |       0 |\n|       0 |      12 |\n|       0 |       0 |\n+---------+---------+\n7 rows in set (0.00 sec)\n\nmysql&gt; select * from t1 where hour(a)&gt;hour(b);\n+---------------------+---------------------+\n| a                   | b                   |\n+---------------------+---------------------+\n| 2011-01-31 12:32:11 | 1979-10-22 00:00:00 |\n| 2022-06-01 14:11:09 | 2022-07-01 00:00:00 |\n+---------------------+---------------------+\n2 rows in set (0.01 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Datetime/minute/","title":"MINUTE()","text":""},{"location":"MatrixOne/Reference/Functions-and-Operators/Datetime/minute/#description","title":"Description","text":"<p>Returns the minute for time, in the range 0 to 59, or NULL if time is NULL.</p>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Datetime/minute/#syntax","title":"Syntax","text":"<pre><code>&gt; MINUTE(time)\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Datetime/minute/#arguments","title":"Arguments","text":"Arguments Description time Required. A value that represents time or timestamp."},{"location":"MatrixOne/Reference/Functions-and-Operators/Datetime/minute/#examples","title":"Examples","text":"<ul> <li>Example 1:</li> </ul> <pre><code>mysql&gt; SELECT MINUTE('2008-02-03 10:05:03');\n+-----------------------------+\n| minute(2008-02-03 10:05:03) |\n+-----------------------------+\n|                           5 |\n+-----------------------------+\n1 row in set (0.00 sec)\n</code></pre> <ul> <li>Example 2:</li> </ul> <pre><code>drop table if exists t1;\ncreate table t1(a datetime, b timestamp);\ninsert into t1 values(\"2022-07-01\", \"2011-01-31 12:00:00\");\ninsert into t1 values(\"2011-01-31 12:32:11\", \"1979-10-22\");\ninsert into t1 values(NULL, \"2022-08-01 23:10:11\");\ninsert into t1 values(\"2011-01-31\", NULL);\ninsert into t1 values(\"2022-06-01 14:11:09\",\"2022-07-01 00:00:00\");\ninsert into t1 values(\"2022-12-31\",\"2011-01-31 12:00:00\");\ninsert into t1 values(\"2022-06-12\",\"2022-07-01 00:00:00\");\n\nmysql&gt; select minute(a),minute(b) from t1;\n+-----------+-----------+\n| minute(a) | minute(b) |\n+-----------+-----------+\n|         0 |         0 |\n|        32 |         0 |\n|      NULL |        10 |\n|         0 |      NULL |\n|        11 |         0 |\n|         0 |         0 |\n|         0 |         0 |\n+-----------+-----------+\n7 rows in set (0.00 sec)\n\nmysql&gt; select * from t1 where minute(a)&lt;=minute(b);\n+---------------------+---------------------+\n| a                   | b                   |\n+---------------------+---------------------+\n| 2022-07-01 00:00:00 | 2011-01-31 12:00:00 |\n| 2022-12-31 00:00:00 | 2011-01-31 12:00:00 |\n| 2022-06-12 00:00:00 | 2022-07-01 00:00:00 |\n+---------------------+---------------------+\n3 rows in set (0.00 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Datetime/month/","title":"MONTH()","text":""},{"location":"MatrixOne/Reference/Functions-and-Operators/Datetime/month/#description","title":"Description","text":"<p>Returns the month for date, in the range 1 to 12 for January to December, or 0 for dates such as '0000-00-00' or '2008-00-00' that have a zero month part. Returns <code>NULL</code> if date is <code>NULL</code>.</p>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Datetime/month/#syntax","title":"Syntax","text":"<pre><code>&gt; MONTH(date)\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Datetime/month/#arguments","title":"Arguments","text":"Arguments Description date Required. The date to be formatted."},{"location":"MatrixOne/Reference/Functions-and-Operators/Datetime/month/#examples","title":"Examples","text":"<ul> <li>Example 1:</li> </ul> <pre><code>mysql&gt; SELECT MONTH('2008-02-03');\n+-------------------+\n| month(2008-02-03) |\n+-------------------+\n|                 2 |\n+-------------------+\n1 row in set (0.02 sec)\n</code></pre> <ul> <li>Example 2:</li> </ul> <pre><code>drop table if exists t1;\ncreate table t1 (id int,d date, dt datetime,c char(10),vc varchar(20));\ninsert into t1 values (1,\"2021-01-13\", \"2021-01-13 13:00:00\", \"2021-12-15\", \"2021-12-16\");\ninsert into t1 values (1,\"2021-01-31\", \"2021-01-31 13:00:00\", \"2021-12-15\", \"2021-12-16\");\ninsert into t1 values (2,\"2022-02-15\", \"2022-02-15 18:54:29\", \"2021-02-15\", \"2021-02-15\");\ninsert into t1 values (2,\"2022-02-28\", \"2022-02-28 18:54:29\", \"2021-02-15\", \"2021-02-15\");\ninsert into t1 values (3,\"2000-02-29\", \"2000-02-29 18:54:29\", \"2021-02-15\", \"2021-02-15\");\ninsert into t1 values (4,\"2023-03-17\", \"2021-02-17 23:54:59\", \"2021-03-17\", \"2021-03-17\");\ninsert into t1 values (5,\"1985-04-18\", \"1985-04-18 00:00:01\", \"1985-04-18\", \"1985-04-18\");\ninsert into t1 values (6,\"1987-05-20\", \"1987-05-20 22:59:59\", \"1987-05-20\", \"1987-05-20\");\ninsert into t1 values (7,\"1989-06-22\", \"1989-06-22 15:00:30\", \"1989-06-22\", \"1989-06-22\");\ninsert into t1 values (8,\"1993-07-25\", \"1987-07-25 03:04:59\", \"1993-07-25\", \"1993-07-25\");\ninsert into t1 values (9,\"1995-08-27\", \"1987-08-27 04:32:33\", \"1995-08-27\", \"1995-08-27\");\ninsert into t1 values (10,\"1999-09-30\", \"1999-09-30 10:11:12\", \"1999-09-30\", \"1999-09-30\");\ninsert into t1 values (11,\"2005-10-30\", \"2005-10-30 18:18:59\", \"2005-10-30\", \"2005-10-30\");\ninsert into t1 values (12,\"2008-11-30\", \"2008-11-30 22:59:59\", \"2008-11-30\", \"2008-11-30\");\ninsert into t1 values (13,\"2013-12-01\", \"2013-12-01 22:59:59\", \"2013-12-01\", \"2013-12-01\");\ninsert into t1 values (14,null, null, null, null);\n\nmysql&gt; select month(d),month(dt) from t1;\n+----------+-----------+\n| month(d) | month(dt) |\n+----------+-----------+\n|        1 |         1 |\n|        1 |         1 |\n|        2 |         2 |\n|        2 |         2 |\n|        2 |         2 |\n|        3 |         2 |\n|        4 |         4 |\n|        5 |         5 |\n|        6 |         6 |\n|        7 |         7 |\n|        8 |         8 |\n|        9 |         9 |\n|       10 |        10 |\n|       11 |        11 |\n|       12 |        12 |\n|     NULL |      NULL |\n+----------+-----------+\n16 rows in set (0.01 sec)\n\nmysql&gt; select month(c),month(vc) from t1;\n+----------+-----------+\n| month(c) | month(vc) |\n+----------+-----------+\n|       12 |        12 |\n|       12 |        12 |\n|        2 |         2 |\n|        2 |         2 |\n|        2 |         2 |\n|        3 |         3 |\n|        4 |         4 |\n|        5 |         5 |\n|        6 |         6 |\n|        7 |         7 |\n|        8 |         8 |\n|        9 |         9 |\n|       10 |        10 |\n|       11 |        11 |\n|       12 |        12 |\n|     NULL |      NULL |\n+----------+-----------+\n16 rows in set (0.01 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Datetime/now/","title":"NOW()","text":""},{"location":"MatrixOne/Reference/Functions-and-Operators/Datetime/now/#function-description","title":"Function Description","text":"<p>The <code>NOW()</code> function returns a value in 'YYYY-MM-DD HH:MM:SS' format for the current date and time.</p> <p><code>NOW()</code> Returns the time when the statement started executing. This differs from the behavior of <code>SYSDATE()</code>, which returns a dynamic real-time time during execution.</p>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Datetime/now/#function-syntax","title":"Function syntax","text":"<pre><code>&gt; NOW(fsp)\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Datetime/now/#parameter-interpretation","title":"Parameter interpretation","text":"Parameters Description fsp Non-required parameters. If the fsp parameter is given to specify a decimal precision from 0 to 6, the return value includes the decimal fraction of the number."},{"location":"MatrixOne/Reference/Functions-and-Operators/Datetime/now/#examples","title":"Examples","text":"<pre><code>mysql&gt; select now();\n+----------------------------+\n| now()                      |\n+----------------------------+\n| 2024-04-29 08:03:50.479238 |\n+----------------------------+\n1 row in set (0.03 sec)\n\nmysql&gt; select now(6);\n+----------------------------+\n| now(6)                     |\n+----------------------------+\n| 2024-04-29 08:05:26.528629 |\n+----------------------------+\n1 row in set (0.02 sec)\n\nmysql&gt; SELECT NOW(), SLEEP(2), NOW();\n+----------------------------+----------+----------------------------+\n| now()                      | sleep(2) | now()                      |\n+----------------------------+----------+----------------------------+\n| 2024-04-29 08:17:23.876546 |        0 | 2024-04-29 08:17:23.876546 |\n+----------------------------+----------+----------------------------+\n1 row in set (2.06 sec)\n\nmysql&gt; SELECT SYSDATE(), SLEEP(2), SYSDATE();\n+----------------------------+----------+----------------------------+\n| sysdate()                  | sleep(2) | sysdate()                  |\n+----------------------------+----------+----------------------------+\n| 2024-04-29 16:19:21.439725 |        0 | 2024-04-29 16:19:23.440187 |\n+----------------------------+----------+----------------------------+\n1 row in set (2.01 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Datetime/second/","title":"SECOND()","text":""},{"location":"MatrixOne/Reference/Functions-and-Operators/Datetime/second/#description","title":"Description","text":"<p>Returns the second for time, in the range 0 to 59, or NULL if time is NULL.</p>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Datetime/second/#syntax","title":"Syntax","text":"<pre><code>&gt; SECOND(time)\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Datetime/second/#arguments","title":"Arguments","text":"Arguments Description time Required. A value that represents time or timestamp."},{"location":"MatrixOne/Reference/Functions-and-Operators/Datetime/second/#examples","title":"Examples","text":"<pre><code>drop table if exists t1;\ncreate table t1(a datetime, b timestamp);\ninsert into t1 values(\"2022-07-01\", \"2011-01-31 12:00:00\");\ninsert into t1 values(\"2011-01-31 12:32:11\", \"1979-10-22\");\ninsert into t1 values(NULL, \"2022-08-01 23:10:11\");\ninsert into t1 values(\"2011-01-31\", NULL);\ninsert into t1 values(\"2022-06-01 14:11:09\",\"2022-07-01 00:00:00\");\ninsert into t1 values(\"2022-12-31\",\"2011-01-31 12:00:00\");\ninsert into t1 values(\"2022-06-12\",\"2022-07-01 00:00:00\");\n\nmysql&gt; select second(a),second(b) from t1;\n+-----------+-----------+\n| second(a) | second(b) |\n+-----------+-----------+\n|         0 |         0 |\n|        11 |         0 |\n|      NULL |        11 |\n|         0 |      NULL |\n|         9 |         0 |\n|         0 |         0 |\n|         0 |         0 |\n+-----------+-----------+\n7 rows in set (0.01 sec)\n\nmysql&gt; select * from t1 where second(a)&gt;=second(b);\n+---------------------+---------------------+\n| a                   | b                   |\n+---------------------+---------------------+\n| 2022-07-01 00:00:00 | 2011-01-31 12:00:00 |\n| 2011-01-31 12:32:11 | 1979-10-22 00:00:00 |\n| 2022-06-01 14:11:09 | 2022-07-01 00:00:00 |\n| 2022-12-31 00:00:00 | 2011-01-31 12:00:00 |\n| 2022-06-12 00:00:00 | 2022-07-01 00:00:00 |\n+---------------------+---------------------+\n5 rows in set (0.00 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Datetime/str-to-date/","title":"STR_TO_DATE()","text":""},{"location":"MatrixOne/Reference/Functions-and-Operators/Datetime/str-to-date/#function-description","title":"Function Description","text":"<p>The <code>STR_TO_DATE()</code> function converts a string to a date or datetime type in the specified date or time display format, synonymous with <code>TO_DATE()</code>.</p> <p>Format strings can contain text characters and format specifiers beginning with %. Literal characters and format specifiers in format must match str and expressions are supported. The <code>STR_TO_DATE</code> function returns NULL if str cannot be parsed in format or if either argument is NULL.</p> <p>See the <code>DATE_FORMAT()</code> function description for format specifiers that can be used.</p>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Datetime/str-to-date/#function-syntax","title":"Function syntax","text":"<pre><code>&gt; STR_TO_DATE(str,format)\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Datetime/str-to-date/#parameter-interpretation","title":"Parameter interpretation","text":"Parameters Description str String to format as date (input string) format Format string to use"},{"location":"MatrixOne/Reference/Functions-and-Operators/Datetime/str-to-date/#examples","title":"Examples","text":"<pre><code>mysql&gt; SELECT STR_TO_DATE('2022-01-06 10:20:30','%Y-%m-%d %H:%i:%s') as result;\n+---------------------+\n| result              |\n+---------------------+\n| 2022-01-06 10:20:30 |\n+---------------------+\n1 row in set (0.00 sec) mysql&gt; SELECT STR_TO_DATE('09:30:17','%h:%i:%s');\n+---------------------------------+\n| str_to_date(09:30:17, %h:%i:%s) |\n+---------------------------------+\n| 09:30:17                        |\n+---------------------------------+\n1 row in set (0.00 sec)\n\n-- Calculate the variance of the WicketsTaken columns\nmysql&gt; SELECT str_to_date('2008-01-01',replace('yyyy-MM-dd','yyyy-MM-dd','%Y-%m-%d')) as result;\n+------------+\n| result     |\n+------------+\n| 2008-01-01 |\n+------------+\n1 row in set (0.00 sec)\n\n--The STR_TO_DATE function ignores the extra characters at the end of the input string str when parsing it according to the format string format\nmysql&gt; SELECT STR_TO_DATE('25,5,2022 extra characters','%d,%m,%Y'); +---------------------------------------------------+\n| str_to_date(25,5,2022 extra characters, %d,%m,%Y) |\n+---------------------------------------------------+\n| 2022-05-25                                        |\n+---------------------------------------------------+\n1 row in set (0.00 sec)\n\nmysql&gt; SELECT STR_TO_DATE('2022','%Y');\n+-----------------------+\n| str_to_date(2022, %Y) |\n+-----------------------+\n| NULL                  |\n+-----------------------\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Datetime/sysdate/","title":"SYSDATE()","text":""},{"location":"MatrixOne/Reference/Functions-and-Operators/Datetime/sysdate/#function-description","title":"Function Description","text":"<p>The <code>SYSDATE()</code> function returns a value in 'YYYY-MM-DD HH:MM:SS' format for the current date and time.</p> <p><code>SYSDATE()</code> Returns the dynamic real-time time during execution. This is different from the behavior of <code>NOW()</code>, which returns when the statement starts executing.</p>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Datetime/sysdate/#function-syntax","title":"Function syntax","text":"<pre><code>&gt; SYSDATE(fsp)\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Datetime/sysdate/#parameter-interpretation","title":"Parameter interpretation","text":"Parameters Description fsp Non-required parameters. If the fsp parameter is given to specify a decimal precision from 0 to 6, the return value includes the decimal fraction of the number."},{"location":"MatrixOne/Reference/Functions-and-Operators/Datetime/sysdate/#examples","title":"Examples","text":"<pre><code>mysql&gt; select sysdate();\n+----------------------------+\n| sysdate()                  |\n+----------------------------+\n| 2024-04-30 10:49:39.554807 |\n+----------------------------+\n1 row in set (0.00 sec)\n\nmysql&gt; select sysdate(6);\n+----------------------------+\n| sysdate(6)                 |\n+----------------------------+\n| 2024-04-30 10:50:08.452370 |\n+----------------------------+\n1 row in set (0.00 sec)\n\nmysql&gt;  SELECT SYSDATE(), SLEEP(2), SYSDATE();\n+----------------------------+----------+----------------------------+\n| sysdate()                  | sleep(2) | sysdate()                  |\n+----------------------------+----------+----------------------------+\n| 2024-04-30 10:50:30.004912 |        0 | 2024-04-30 10:50:32.005203 |\n+----------------------------+----------+----------------------------+\n1 row in set (2.00 sec)\n\nmysql&gt; SELECT NOW(), SLEEP(2), NOW();\n+----------------------------+----------+----------------------------+\n| now()                      | sleep(2) | now()                      |\n+----------------------------+----------+----------------------------+\n| 2024-04-30 10:50:47.904309 |        0 | 2024-04-30 10:50:47.904309 |\n+----------------------------+----------+----------------------------+\n1 row in set (2.00 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Datetime/time/","title":"TIME()","text":""},{"location":"MatrixOne/Reference/Functions-and-Operators/Datetime/time/#description","title":"Description","text":"<p>Extracts the time part of the time or datetime expression expr and returns it as a string. Returns <code>NULL</code> if expr is <code>NULL</code>.</p>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Datetime/time/#syntax","title":"Syntax","text":"<pre><code>&gt; TIME(expr)\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Datetime/time/#arguments","title":"Arguments","text":"Arguments Description expr Required.  The date/datetime to extract the time from."},{"location":"MatrixOne/Reference/Functions-and-Operators/Datetime/time/#examples","title":"Examples","text":"<pre><code>mysql&gt; SELECT TIME('2003-12-31 01:02:03');\n+---------------------------+\n| time(2003-12-31 01:02:03) |\n+---------------------------+\n| 01:02:03                  |\n+---------------------------+\n1 row in set (0.01 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Datetime/timediff/","title":"TIMEDIFF()","text":""},{"location":"MatrixOne/Reference/Functions-and-Operators/Datetime/timediff/#description","title":"Description","text":"<p><code>TIMEDIFF()</code> returns expr1 \u2212 expr2 expressed as a time value.</p> <p>The result returned by <code>TIMEDIFF()</code> is limited to the range allowed for TIME values. Alternatively, you can use either of the functions <code>TIMESTAMPDIFF()</code> and <code>UNIX_TIMESTAMP()</code>, both of which return integers.</p>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Datetime/timediff/#syntax","title":"Syntax","text":"<pre><code>&gt; TIMEDIFF(expr1,expr2)\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Datetime/timediff/#arguments","title":"Arguments","text":"Arguments Description expr1,expr2 Required. expr1 and expr2 are strings which are converted to TIME or DATETIME expressions; these must be of the same type following conversion. Returns NULL if expr1 or expr2 is NULL."},{"location":"MatrixOne/Reference/Functions-and-Operators/Datetime/timediff/#examples","title":"Examples","text":"<pre><code>mysql&gt; select timediff(\"22:22:22\", \"11:00:00\");\n+------------------------------+\n| timediff(22:22:22, 11:00:00) |\n+------------------------------+\n| 11:22:22.000000              |\n+------------------------------+\n1 row in set (0.01 sec)\n\nmysql&gt; select timediff(cast('22:22:22' as time), null);\n+--------------------------------------------+\n| timediff(cast(22:22:22 as time(26)), null) |\n+--------------------------------------------+\n| NULL                                       |\n+--------------------------------------------+\n1 row in set (0.00 sec)\n\nmysql&gt; select timediff(CAST('2017-08-08 22:22:22' as datetime), CAST('2000-01-02 11:00:00' as datetime));\n+------------------------------------------------------------------------------------------------+\n| timediff(cast(2017-08-08 22:22:22 as datetime(26)), cast(2000-01-02 11:00:00 as datetime(26))) |\n+------------------------------------------------------------------------------------------------+\n| 154283:22:22                                                                                   |\n+------------------------------------------------------------------------------------------------+\n1 row in set (0.00 sec)\n</code></pre> <pre><code>create table time_01(t1 time,t2 time,t3 time);\ninsert into time_01 values(\"-838:59:59.0000\",\"838:59:59.00\",\"22:00:00\");\ninsert into time_01 values(\"0:00:00.0000\",\"0\",\"0:00\");\ninsert into time_01 values(null,NULL,null);\ninsert into time_01 values(\"23\",\"1122\",\"-1122\");\ninsert into time_01 values(\"101412\",\"4\",\"-101219\");\ninsert into time_01 values(\"24:59:09.932823\",\"24:02:00.93282332424\",\"24:20:34.00000000\");\ninsert into time_01 values(\"2022-09-08 12:00:01\",\"019\",\"23403\");\n\nmysql&gt; select * from time_01;\n+------------+-----------+-----------+\n| t1         | t2        | t3        |\n+------------+-----------+-----------+\n| -838:59:59 | 838:59:59 | 22:00:00  |\n| 00:00:00   | 00:00:00  | 00:00:00  |\n| NULL       | NULL      | NULL      |\n| 00:00:23   | 00:11:22  | -00:11:22 |\n| 10:14:12   | 00:00:04  | -10:12:19 |\n| 24:59:10   | 24:02:01  | 24:20:34  |\n| 12:00:01   | 00:00:19  | 02:34:03  |\n+------------+-----------+-----------+\n7 rows in set (0.00 sec)\n\nmysql&gt; select timediff(t1,t2) from time_01;\n+------------------+\n| timediff(t1, t2) |\n+------------------+\n| -1677:59:58      |\n| 00:00:00         |\n| NULL             |\n| -00:10:59        |\n| 10:14:08         |\n| 00:57:09         |\n| 11:59:42         |\n+------------------+\n7 rows in set (0.00 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Datetime/timestamp/","title":"TIMESTAMP()","text":""},{"location":"MatrixOne/Reference/Functions-and-Operators/Datetime/timestamp/#description","title":"Description","text":"<p>With a single argument, this function returns the date or datetime expression expr as a datetime value. With two arguments, it adds the time expression expr2 to the date or datetime expression expr1 and returns the result as a datetime value. Returns <code>NULL</code> if expr, expr1, or expr2 is <code>NULL</code>.</p>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Datetime/timestamp/#syntax","title":"Syntax","text":"<pre><code>&gt; TIMESTAMP(expr), TIMESTAMP(expr1,expr2)\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Datetime/timestamp/#arguments","title":"Arguments","text":"Arguments Description expr Required.  The expr is an expression specifying the interval value to be added or subtracted from the starting date. The expr is evaluated as a string; it may start with a - for negative intervals."},{"location":"MatrixOne/Reference/Functions-and-Operators/Datetime/timestamp/#examples","title":"Examples","text":"<pre><code>mysql&gt; SELECT TIMESTAMP('2003-12-31');\n+----------------------------+\n| timestamp(2003-12-31)      |\n+----------------------------+\n| 2003-12-31 00:00:00.000000 |\n+----------------------------+\n1 row in set (0.00 sec)\n</code></pre> <pre><code>CREATE TABLE t1(c1 DATE NOT NULL);\nINSERT INTO t1 VALUES('2000-01-01');\nINSERT INTO t1 VALUES('1999-12-31');\nINSERT INTO t1 VALUES('2000-01-01');\nINSERT INTO t1 VALUES('2006-12-25');\nINSERT INTO t1 VALUES('2008-02-29');\n\nmysql&gt; SELECT TIMESTAMP(c1) FROM t1;\n+----------------------------+\n| timestamp(c1)              |\n+----------------------------+\n| 2000-01-01 00:00:00.000000 |\n| 1999-12-31 00:00:00.000000 |\n| 2000-01-01 00:00:00.000000 |\n| 2006-12-25 00:00:00.000000 |\n| 2008-02-29 00:00:00.000000 |\n+----------------------------+\n5 rows in set (0.00 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Datetime/timestamp/#constraints","title":"Constraints","text":"<p><code>TIMESTAMP()</code> does not support double arguments for now, which means it doesn't support <code>TIMESTAMP(expr1,expr2)</code>.</p>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Datetime/timestampdiff/","title":"TIMESTAMPDIFF()","text":""},{"location":"MatrixOne/Reference/Functions-and-Operators/Datetime/timestampdiff/#description","title":"Description","text":"<p>Returns <code>datetime_expr2</code> \u2212 <code>datetime_expr1</code>, where datetime_expr1 and datetime_expr2 are date or datetime expressions. One expression may be a date and the other a datetime; a date value is treated as a datetime having the time part '00:00:00' where necessary. The unit for the result (an integer) is given by the unit argument. The legal values for unit are the same as those listed in the description of the <code>TIMESTAMPADD()</code> function.</p> <p>This function returns <code>NULL</code> if datetime_expr1 or datetime_expr2 is <code>NULL</code>.</p>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Datetime/timestampdiff/#syntax","title":"Syntax","text":"<pre><code>&gt; TIMESTAMPDIFF(unit,datetime_expr1,datetime_expr2)\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Datetime/timestampdiff/#arguments","title":"Arguments","text":"Arguments Description unit is a string representing the unit of the time interval. This can be <code>MICROSECOND</code>, <code>SECOND</code>, <code>MINUTE</code>, <code>HOUR</code>, <code>DAY</code>, <code>WEEK</code>, <code>MONTH</code> or <code>YEAR</code> etc. datetime_expr1,datetime_expr2 Mandatory parameters. datetime_expr1 and datetime_expr2 expressions need to be of the same type. datetime_expr1 and datetime_expr2 are strings converted to <code>TIME</code> or <code>DATETIME</code> expressions. Returns <code>NULL</code> if datetime_expr1 or datetime_expr2 is <code>NULL</code>."},{"location":"MatrixOne/Reference/Functions-and-Operators/Datetime/timestampdiff/#examples","title":"Examples","text":"<ul> <li>Example 1:</li> </ul> <pre><code>mysql&gt; SELECT TIMESTAMPDIFF( MICROSECOND, '2017-12-01 12:15:12','2018-01-01 7:18:20');\n+---------------------------------------------------------------------+\n| timestampdiff(microsecond, 2017-12-01 12:15:12, 2018-01-01 7:18:20) |\n+---------------------------------------------------------------------+\n|                                                       2660588000000 |\n+---------------------------------------------------------------------+\n1 row in set (0.00 sec)\n</code></pre> <ul> <li>Example 2:</li> </ul> <pre><code>drop table if exists t1;\ncreate table t1(a date,  b date);\ninsert into t1 values('2019-11-01 12:15:12', '2018-01-01 12:15:12');\ninsert into t1 values('2019-10-01 12:15:12', '2018-01-01 12:15:12');\ninsert into t1 values('2020-10-01 12:15:12', '2018-01-01 12:15:12');\ninsert into t1 values('2021-11-01 12:15:12', '2018-01-01 12:15:12');\ninsert into t1 values('2022-01-01 12:15:12', '2018-01-01 12:15:12');\ninsert into t1 values('2018-01-01 12:15:12', '2019-11-01 12:15:12');\ninsert into t1 values( '2018-01-01 12:15:12', '2019-10-01 12:15:12');\ninsert into t1 values( '2018-01-01 12:15:12', '2020-10-01 12:15:12');\ninsert into t1 values( '2018-01-01 12:15:12', '2021-11-01 12:15:12');\ninsert into t1 values( '2018-01-01 12:15:12', '2022-01-01 12:15:12');\n\nmysql&gt; SELECT a, b, TIMESTAMPDIFF(MICROSECOND, a, b) from t1;\n+------------+------------+----------------------------------+\n| a          | b          | timestampdiff(microsecond, a, b) |\n+------------+------------+----------------------------------+\n| 2019-11-01 | 2018-01-01 |                  -57801600000000 |\n| 2019-10-01 | 2018-01-01 |                  -55123200000000 |\n| 2020-10-01 | 2018-01-01 |                  -86745600000000 |\n| 2021-11-01 | 2018-01-01 |                 -120960000000000 |\n| 2022-01-01 | 2018-01-01 |                 -126230400000000 |\n| 2018-01-01 | 2019-11-01 |                   57801600000000 |\n| 2018-01-01 | 2019-10-01 |                   55123200000000 |\n| 2018-01-01 | 2020-10-01 |                   86745600000000 |\n| 2018-01-01 | 2021-11-01 |                  120960000000000 |\n| 2018-01-01 | 2022-01-01 |                  126230400000000 |\n+------------+------------+----------------------------------+\n10 rows in set (0.00 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Datetime/to-date/","title":"TO_DATE()","text":""},{"location":"MatrixOne/Reference/Functions-and-Operators/Datetime/to-date/#description","title":"Description","text":"<p><code>TO_DATE()</code> returns a DATETIME value if the format string contains both date and time parts, or a DATE or TIME value if the string contains only date or time parts.</p>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Datetime/to-date/#syntax","title":"Syntax","text":"<pre><code>&gt; TO_DATE(str,format)\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Datetime/to-date/#arguments","title":"Arguments","text":"Arguments Description str Required.  If the date, time, or datetime value extracted from str is illegal, <code>STR_TO_DATE()</code> returns <code>NULL</code> and produces a warning. If <code>str</code> is <code>NULL</code>, the function returns <code>NULL</code>. format Required.  A format string indicating the format of the return value. If the format is omitted, this function returns a DATETIME value. If the format is <code>NULL</code>, this function returns <code>NULL</code>.If the format is supplied, the value returned is a VARCHAR. <p>note</p> <p>The format string can contain literal characters and format specifiers beginning with %. Literal characters in <code>format</code> must match literally in str. Format specifiers in <code>format</code> must match a date or time part in <code>str</code>. </p>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Datetime/to-date/#examples","title":"Examples","text":"<pre><code>mysql&gt; SELECT TO_DATE('2022-01-06 10:20:30','%Y-%m-%d %H:%i:%s') as result;\n+---------------------+\n| result              |\n+---------------------+\n| 2022-01-06 10:20:30 |\n+---------------------+\n1 row in set (0.00 sec)                 </code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Datetime/to-date/#constraints","title":"Constraints","text":"<p>The date type supports only <code>yyyy-mm-dd</code> and <code>yyyymmdd</code> for now.</p>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Datetime/to-days/","title":"TO_DAYS()","text":""},{"location":"MatrixOne/Reference/Functions-and-Operators/Datetime/to-days/#description","title":"Description","text":"<p><code>TO_DAYS()</code> is used to calculate the number of days between a given date and the start date of the Gregorian calendar (January 1, 0000). If the <code>date</code> is <code>NULL</code>, it returns <code>NULL</code>.</p> <p>Note</p> <p>The dates '0000-00-00' and '0000-01-01' are considered invalid. When querying <code>0000-00-00</code> and <code>0000-01-01</code>, <code>TO_DAYS()</code> will return an error message:</p> <pre><code>mysql&gt; SELECT TO_DAYS('0000-00-00');\nERROR 20301 (HY000): invalid input: invalid datetime value 0000-00-00\nmysql&gt; SELECT TO_DAYS('0000-01-01');\nERROR 20301 (HY000): invalid input: invalid datetime value 0000-01-01\n</code></pre> <p>For dates with two-digit years, for example, when querying <code>SELECT TO_DAYS('08-10-07');</code>, MatrixOne automatically completes the year 08 to 0008, which is different from MySQL. For more information, see Two-Digit Years in Dates</p>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Datetime/to-days/#syntax","title":"Syntax","text":"<pre><code>&gt; TO_DAYS(date)\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Datetime/to-days/#examples","title":"Examples","text":"<pre><code>-- The query will return an integer representing the number of days between the date '2023-07-12' and the start date of the Gregorian calendar.\nmysql&gt; SELECT TO_DAYS('2023-07-12');\n+---------------------+\n| to_days(2023-07-12) |\n+---------------------+\n|              739078 |\n+---------------------+\n1 row in set (0.00 sec)\n\nmysql&gt; SELECT TO_DAYS('2008-10-07'), TO_DAYS('08-10-07');\n+---------------------+-------------------+\n| to_days(2008-10-07) | to_days(08-10-07) |\n+---------------------+-------------------+\n|              733687 |              3202 |\n+---------------------+-------------------+\n1 row in set (0.00 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Datetime/to-seconds/","title":"TO_SECONDS()","text":""},{"location":"MatrixOne/Reference/Functions-and-Operators/Datetime/to-seconds/#description","title":"Description","text":"<p>The <code>TO_SECONDS(expr)</code> function is used to calculate the number of seconds between a given date or datetime <code>expr</code> and the year 0, January 1, 00:00:00. If <code>expr</code> is <code>NULL</code>, it returns <code>NULL</code>.</p> <p>Note</p> <p>The dates <code>0000-00-00</code> and <code>0000-01-01</code> are considered invalid. MatrixOne year queries should start from <code>0001</code>. When querying <code>0000-00-00</code> and <code>0000-01-01</code>, <code>TO_SECONDS()</code> returns an error message:</p> <pre><code>mysql&gt; SELECT TO_SECONDS('0000-00-00');\nERROR 20301 (HY000): invalid input: invalid datetime value 0000-00-00\nmysql&gt; SELECT TO_SECONDS('0000-01-01');\nERROR 20301 (HY000): invalid input: invalid datetime value 0000-01-01\n</code></pre> <p>Similar to the <code>TO_DAYS()</code> function, for example, when querying <code>SELECT TO_SECONDS('08-10-07');</code>, MatrixOne automatically fills the year 08 to 0008, which is different from MySQL. For more information, see Two-Digit Years in Dates.</p>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Datetime/to-seconds/#syntax","title":"Syntax","text":"<pre><code>&gt; TO_SECONDS(expr)\n</code></pre> <p><code>expr</code> is a date or datetime value and can be of type <code>DATETIME</code>, <code>DATE</code>, or <code>TIMESTAMP</code>.</p>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Datetime/to-seconds/#examples","title":"Examples","text":"<pre><code>mysql&gt; SELECT TO_SECONDS('0001-01-01');\n+------------------------+\n| to_seconds(0001-01-01) |\n+------------------------+\n|               31622400 |\n+------------------------+\n1 row in set (0.00 sec)\n\nmysql&gt; SELECT TO_SECONDS('2023-07-12 08:30:00');\n+---------------------------------+\n| to_seconds(2023-07-12 08:30:00) |\n+---------------------------------+\n|                     63856369800 |\n+---------------------------------+\n1 row in set (0.00 sec)\n\nmysql&gt; SELECT TO_SECONDS('2007-10-07');\n+------------------------+\n| to_seconds(2007-10-07) |\n+------------------------+\n|            63358934400 |\n+------------------------+\n1 row in set (0.00 sec)\n\nmysql&gt; SELECT TO_SECONDS('97-10-07');\n+----------------------+\n| to_seconds(97-10-07) |\n+----------------------+\n|           3085257600 |\n+----------------------+\n1 row in set (0.00 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Datetime/unix-timestamp/","title":"UNIX_TIMESTAMP()","text":""},{"location":"MatrixOne/Reference/Functions-and-Operators/Datetime/unix-timestamp/#description","title":"Description","text":"<p>If <code>UNIX_TIMESTAMP()</code> is called with no date argument, it returns a Unix timestamp representing seconds since '1970-01-01 00:00:00' UTC.</p> <p>If <code>UNIX_TIMESTAMP()</code> is called with a date argument, it returns the value of the argument as seconds since '1970-01-01 00:00:00' UTC. The server interprets date as a value in the session time zone and converts it to an internal Unix timestamp value in UTC.  </p> <p>If you pass an out-of-range date to UNIX_TIMESTAMP(), it returns 0. If date is <code>NULL</code>, it returns <code>NULL</code>.</p> <p>The return value is an integer if no argument is given or the argument does not include a fractional seconds part, or DECIMAL if an argument is given that includes a fractional seconds part.</p>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Datetime/unix-timestamp/#syntax","title":"Syntax","text":"<pre><code>&gt; UNIX_TIMESTAMP([date])\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Datetime/unix-timestamp/#arguments","title":"Arguments","text":"Arguments Description date Optional. The date/datetime to extract the date from. The date argument may be a DATE, DATETIME, or TIMESTAMP string, or a number in YYMMDD, YYMMDDhhmmss, YYYYMMDD, or YYYYMMDDhhmmss format. If the argument includes a time part, it may optionally include a fractional seconds part. When the date argument is a <code>TIMESTAMP</code> column, <code>UNIX_TIMESTAMP()</code> returns the internal timestamp value directly, with no implicit string-to-Unix-timestamp conversion."},{"location":"MatrixOne/Reference/Functions-and-Operators/Datetime/unix-timestamp/#convert-between-non-utc-time-zone-and-unix-timestamp-values","title":"Convert between non-UTC time zone and Unix timestamp values","text":"<p>If you use <code>UNIX_TIMESTAMP()</code> and <code>FROM_UNIXTIME()</code> to convert between values in a non-UTC time zone and Unix timestamp values, the conversion is lossy because the mapping is not one-to-one in both directions. For example, due to conventions for local time zone changes such as Daylight Saving Time (DST), it is possible for <code>UNIX_TIMESTAMP()</code> to map two values that are distinct in a non-UTC time zone to the same Unix timestamp value. <code>FROM_UNIXTIME()</code> maps that value back to only one of the original values. Here is an example, using values that are distinct in the MET time zone:</p> <pre><code>mysql&gt; SET time_zone = 'MET';\nQuery OK, 0 rows affected (0.01 sec)\n\nmysql&gt; SELECT UNIX_TIMESTAMP('2005-03-27 03:00:00');\n+-------------------------------------+\n| unix_timestamp(2005-03-27 03:00:00) |\n+-------------------------------------+\n|                          1111885200 |\n+-------------------------------------+\n1 row in set (0.00 sec)\n\nmysql&gt; SELECT UNIX_TIMESTAMP('2005-03-27 02:00:00');\n+-------------------------------------+\n| unix_timestamp(2005-03-27 02:00:00) |\n+-------------------------------------+\n|                          1111885200 |\n+-------------------------------------+\n1 row in set (0.00 sec)\n\nmysql&gt; SELECT FROM_UNIXTIME(1111885200);\n+---------------------------+\n| from_unixtime(1111885200) |\n+---------------------------+\n| 2005-03-27 03:00:00       |\n+---------------------------+\n1 row in set (0.00 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Datetime/unix-timestamp/#examples","title":"Examples","text":"<pre><code>mysql&gt; SELECT UNIX_TIMESTAMP(\"2016-07-11\");\n+----------------------------+\n| unix_timestamp(2016-07-11) |\n+----------------------------+\n|                 1468188000 |\n+----------------------------+\n1 row in set (0.00 sec)\n\nmysql&gt; SELECT UNIX_TIMESTAMP('2015-11-13 10:20:19');\n+-------------------------------------+\n| unix_timestamp(2015-11-13 10:20:19) |\n+-------------------------------------+\n|                          1447406419 |\n+-------------------------------------+\n1 row in set (0.00 sec)\n\nmysql&gt; SELECT UNIX_TIMESTAMP('2015-11-13 10:20:19.012');\n+-----------------------------------------+\n| unix_timestamp(2015-11-13 10:20:19.012) |\n+-----------------------------------------+\n|                       1447406419.012000 |\n+-----------------------------------------+\n1 row in set (0.00 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Datetime/unix-timestamp/#constraints","title":"Constraints","text":"<p>The date type supports only <code>yyyy-mm-dd</code> and <code>yyyymmdd</code> for now.</p>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Datetime/utc-timestamp/","title":"UTC_TIMESTAMP()","text":""},{"location":"MatrixOne/Reference/Functions-and-Operators/Datetime/utc-timestamp/#description","title":"Description","text":"<p>Returns the current UTC date and time as a value in <code>YYYY-MM-DD hh:mm:ss</code> or <code>YYYYMMDDhhmmss</code> format, depending on whether the function is used in string or numeric context.</p>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Datetime/utc-timestamp/#syntax","title":"Syntax","text":"<pre><code>&gt; UTC_TIMESTAMP, UTC_TIMESTAMP([fsp])\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Datetime/utc-timestamp/#arguments","title":"Arguments","text":"Arguments Description fsp Optional. If the <code>fsp</code> argument is given to specify a fractional seconds precision from 0 to 6, the return value includes a fractional seconds part of that many digits."},{"location":"MatrixOne/Reference/Functions-and-Operators/Datetime/utc-timestamp/#examples","title":"Examples","text":"<ul> <li>Example 1:</li> </ul> <pre><code>mysql&gt; SELECT UTC_TIMESTAMP();\n+---------------------+\n| utc_timestamp()     |\n+---------------------+\n| 2022-09-16 03:37:40 |\n+---------------------+\n1 row in set (0.01 sec)\n\nmysql&gt; select unix_timestamp(utc_timestamp());\n+---------------------------------+\n| unix_timestamp(utc_timestamp()) |\n+---------------------------------+\n|                      1663282842 |\n+---------------------------------+\n1 row in set (0.02 sec)\n</code></pre> <ul> <li>Example 2:</li> </ul> <pre><code>create table t1 (ts timestamp);\nset time_zone='+00:00';\n\nmysql&gt; select unix_timestamp(utc_timestamp())-unix_timestamp(utc_timestamp());\n+-------------------------------------------------------------------+\n| unix_timestamp(utc_timestamp()) - unix_timestamp(utc_timestamp()) |\n+-------------------------------------------------------------------+\n|                                                                 0 |\n+-------------------------------------------------------------------+\n1 row in set (0.00 sec)\n\ninsert into t1 (ts) values ('2003-03-30 02:30:00');\nset time_zone='+10:30';\n\nmysql&gt; select unix_timestamp(utc_timestamp())-unix_timestamp(utc_timestamp());\n+-------------------------------------------------------------------+\n| unix_timestamp(utc_timestamp()) - unix_timestamp(utc_timestamp()) |\n+-------------------------------------------------------------------+\n|                                                                 0 |\n+-------------------------------------------------------------------+\n1 row in set (0.01 sec)\n\ninsert into t1 (ts) values ('2003-03-30 02:30:00');\nset time_zone='-10:00';\n\nmysql&gt; select unix_timestamp(utc_timestamp())-unix_timestamp(current_timestamp());\n+-----------------------------------------------------------------------+\n| unix_timestamp(utc_timestamp()) - unix_timestamp(current_timestamp()) |\n+-----------------------------------------------------------------------+\n|                                                                 36000 |\n+-----------------------------------------------------------------------+\n1 row in set (0.00 sec)\n\ninsert into t1 (ts) values ('2003-03-30 02:30:00');\n\nmysql&gt; select * from t1;\n+---------------------+\n| ts                  |\n+---------------------+\n| 2003-03-29 16:30:00 |\n| 2003-03-29 06:00:00 |\n| 2003-03-30 02:30:00 |\n+---------------------+\n3 rows in set (0.00 sec)\n</code></pre> <ul> <li>Example 3:</li> </ul> <pre><code>DROP TABLE IF EXISTS t1;\nCREATE TABLE t1 (a TIMESTAMP);\nINSERT INTO t1 select (utc_timestamp());\nINSERT INTO t1 select (utc_timestamp());\nINSERT INTO t1 select (utc_timestamp());\n\nmysql&gt; SELECT year(a) FROM t1 WHERE a &gt; '2008-01-01';\n+---------+\n| year(a) |\n+---------+\n|    2022 |\n|    2022 |\n|    2022 |\n+---------+\n3 rows in set (0.04 sec)\n</code></pre> <pre><code>DROP TABLE if exists t1;\ncreate table t1 (a int primary key, b int, c int, d timestamp);\ninsert into t1 select 1,1,1,utc_timestamp();\ninsert into t1 select 2,0,0,null;\n\nmysql&gt; select a,b,c,year(d) from t1;\n+------+------+------+---------+\n| a    | b    | c    | year(d) |\n+------+------+------+---------+\n|    1 |    1 |    1 |    2022 |\n|    2 |    0 |    0 |    NULL |\n+------+------+------+---------+\n2 rows in set (0.01 sec)\n</code></pre> <pre><code>DROP TABLE if exists t1;\nCREATE TABLE t1 (a TIMESTAMP);\nINSERT INTO t1 select (utc_timestamp());\nINSERT INTO t1 select (utc_timestamp());\n\nmysql&gt; SELECT 1 FROM t1 ORDER BY 1;\n+------+\n| 1    |\n+------+\n|    1 |\n|    1 |\n+------+\n2 rows in set (0.01 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Datetime/utc-timestamp/#constraints","title":"Constraints","text":"<p>Operator <code>+</code> or <code>-</code> with parameters <code>DATETIME BIGINT</code> is not supported now.</p>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Datetime/week/","title":"WEEK()","text":""},{"location":"MatrixOne/Reference/Functions-and-Operators/Datetime/week/#description","title":"Description","text":"<p>Used to calculate the week number for a given date. This function returns an integer representing the week number of the specified date. If <code>date</code> is <code>NULL</code>, return <code>NULL</code>.</p>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Datetime/week/#syntax","title":"Syntax","text":"<pre><code>&gt; WEEK(date)\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Datetime/week/#arguments","title":"Arguments","text":"Arguments Description date Required. <code>date</code> represents the date to calculate the week number. MatrixOne defaults the start day of the week to Monday, and the return value ranges from 0 to 53."},{"location":"MatrixOne/Reference/Functions-and-Operators/Datetime/week/#examples","title":"Examples","text":"<ul> <li>Example 1:</li> </ul> <pre><code>mysql&gt; SELECT WEEK('2008-02-20');\n+------------------+\n| week(2008-02-20) |\n+------------------+\n|                8 |\n+------------------+\n1 row in set (0.01 sec)\n</code></pre> <ul> <li>Example 2:</li> </ul> <pre><code>drop table if exists t1;\nCREATE TABLE t1(c1 DATETIME NOT NULL);\nINSERT INTO t1 VALUES('2000-01-01');\nINSERT INTO t1 VALUES('1999-12-31');\nINSERT INTO t1 VALUES('2000-01-01');\nINSERT INTO t1 VALUES('2006-12-25');\nINSERT INTO t1 VALUES('2008-02-29');\n\nmysql&gt; SELECT WEEK(c1) FROM t1;\n+----------+\n| week(c1) |\n+----------+\n|       52 |\n|       52 |\n|       52 |\n|       52 |\n|        9 |\n+----------+\n5 rows in set (0.00 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Datetime/week/#constraints","title":"Constraints","text":"<p>The <code>WEEK()</code> function of MatrixOne only supports the <code>date</code> parameter, and does not support the optional parameter <code>[, mode]</code>, which is different from MySQL.</p>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Datetime/weekday/","title":"WEEKDAY()","text":""},{"location":"MatrixOne/Reference/Functions-and-Operators/Datetime/weekday/#description","title":"Description","text":"<p>Returns the weekday index for date (0 = Monday, 1 = Tuesday, \u2026 6 = Sunday). Returns <code>NULL</code> if date is <code>NULL</code>.</p>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Datetime/weekday/#syntax","title":"Syntax","text":"<pre><code>&gt; WEEKDAY(date)\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Datetime/weekday/#arguments","title":"Arguments","text":"Arguments Description date Required. The date to be formatted."},{"location":"MatrixOne/Reference/Functions-and-Operators/Datetime/weekday/#examples","title":"Examples","text":"<ul> <li>Example 1:</li> </ul> <pre><code>mysql&gt; SELECT WEEKDAY('2008-02-03 22:23:00');\n+------------------------------+\n| weekday(2008-02-03 22:23:00) |\n+------------------------------+\n|                            6 |\n+------------------------------+\n1 row in set (0.03 sec)\n</code></pre> <ul> <li>Example 2:</li> </ul> <pre><code>drop table if exists t1;\ncreate table t1 (id int,d date, dt datetime,c char(10),vc varchar(20));\ninsert into t1 values (1,\"2021-01-13\", \"2021-01-13 13:00:00\", \"2021-12-15\", \"2021-12-16\");\ninsert into t1 values (1,\"2021-01-31\", \"2021-01-31 13:00:00\", \"2021-12-15\", \"2021-12-16\");\ninsert into t1 values (2,\"2022-02-15\", \"2022-02-15 18:54:29\", \"2021-02-15\", \"2021-02-15\");\ninsert into t1 values (2,\"2022-02-28\", \"2022-02-28 18:54:29\", \"2021-02-15\", \"2021-02-15\");\ninsert into t1 values (3,\"2000-02-29\", \"2000-02-29 18:54:29\", \"2021-02-15\", \"2021-02-15\");\ninsert into t1 values (4,\"2023-03-17\", \"2021-02-17 23:54:59\", \"2021-03-17\", \"2021-03-17\");\ninsert into t1 values (5,\"1985-04-18\", \"1985-04-18 00:00:01\", \"1985-04-18\", \"1985-04-18\");\ninsert into t1 values (6,\"1987-05-20\", \"1987-05-20 22:59:59\", \"1987-05-20\", \"1987-05-20\");\ninsert into t1 values (7,\"1989-06-22\", \"1989-06-22 15:00:30\", \"1989-06-22\", \"1989-06-22\");\ninsert into t1 values (8,\"1993-07-25\", \"1987-07-25 03:04:59\", \"1993-07-25\", \"1993-07-25\");\ninsert into t1 values (9,\"1995-08-27\", \"1987-08-27 04:32:33\", \"1995-08-27\", \"1995-08-27\");\ninsert into t1 values (10,\"1999-09-30\", \"1999-09-30 10:11:12\", \"1999-09-30\", \"1999-09-30\");\ninsert into t1 values (11,\"2005-10-30\", \"2005-10-30 18:18:59\", \"2005-10-30\", \"2005-10-30\");\ninsert into t1 values (12,\"2008-11-30\", \"2008-11-30 22:59:59\", \"2008-11-30\", \"2008-11-30\");\ninsert into t1 values (13,\"2013-12-01\", \"2013-12-01 22:59:59\", \"2013-12-01\", \"2013-12-01\");\ninsert into t1 values (14,null, null, null, null);\n\nmysql&gt; select weekday(d),weekday(dt) from t1;\n+------------+-------------+\n| weekday(d) | weekday(dt) |\n+------------+-------------+\n|          2 |           2 |\n|          6 |           6 |\n|          1 |           1 |\n|          0 |           0 |\n|          1 |           1 |\n|          4 |           2 |\n|          3 |           3 |\n|          2 |           2 |\n|          3 |           3 |\n|          6 |           5 |\n|          6 |           3 |\n|          3 |           3 |\n|          6 |           6 |\n|          6 |           6 |\n|          6 |           6 |\n|       NULL |        NULL |\n+------------+-------------+\n16 rows in set (0.01 sec)\n\nmysql&gt; select weekday(c),weekday(vc) from t1;\n+------------+-------------+\n| weekday(c) | weekday(vc) |\n+------------+-------------+\n|          2 |           3 |\n|          2 |           3 |\n|          0 |           0 |\n|          0 |           0 |\n|          0 |           0 |\n|          2 |           2 |\n|          3 |           3 |\n|          2 |           2 |\n|          3 |           3 |\n|          6 |           6 |\n|          6 |           6 |\n|          3 |           3 |\n|          6 |           6 |\n|          6 |           6 |\n|          6 |           6 |\n|       NULL |        NULL |\n+------------+-------------+\n16 rows in set (0.02 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Datetime/year/","title":"YEAR()","text":""},{"location":"MatrixOne/Reference/Functions-and-Operators/Datetime/year/#description","title":"Description","text":"<p>The YEAR() or TOYEAR() function returns the year part for a given date (a number from 1000 to 9999).</p>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Datetime/year/#syntax","title":"Syntax","text":"<pre><code>&gt; YEAR(date)\n&gt; TOYEAR(date)\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Datetime/year/#arguments","title":"Arguments","text":"Arguments Description date Required.  The date/datetime to extract the year from"},{"location":"MatrixOne/Reference/Functions-and-Operators/Datetime/year/#examples","title":"Examples","text":"<pre><code>drop table if exists t1;\ncreate table t1(a date, b datetime);\ninsert into t1 values('20211223','2021-10-22 09:23:23');\ninsert into t1 values('2021-12-23','2021-10-22 00:23:23');\n\nmysql&gt; select year(a) from t1;\n+---------+\n| year(a) |\n+---------+\n|    2021 |\n|    2021 |\n+---------+\n2 rows in set (0.00 sec)\n</code></pre> <pre><code>DROP TABLE IF EXISTS t3;\nCREATE TABLE t3(c1 DATE NOT NULL);\nINSERT INTO t3 VALUES('2000-01-01');\nINSERT INTO t3 VALUES('1999-12-31');\nINSERT INTO t3 VALUES('2000-01-01');\nINSERT INTO t3 VALUES('2006-12-25');\nINSERT INTO t3 VALUES('2008-02-29');\nmysql&gt; SELECT YEAR(c1) FROM t3;\n+----------+\n| year(c1) |\n+----------+\n|     2000 |\n|     1999 |\n|     2000 |\n|     2006 |\n|     2008 |\n+----------+\n5 rows in set (0.01 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Datetime/year/#constraints","title":"Constraints","text":"<p>The date type supports only <code>yyyy-mm-dd</code> and <code>yyyymmdd</code> for now.</p>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Json/json-functions/","title":"JSON Functions","text":"<p>MatrixOne supports the following JSON functions:</p> Name Description JSON_EXTRACT() Return data from JSON document JSON_QUOTE() Quote JSON document JSON_UNQUOTE() Unquote JSON value"},{"location":"MatrixOne/Reference/Functions-and-Operators/Json/json-functions/#json_extract","title":"<code>JSON_EXTRACT()</code>","text":"<p>A JSON path expression selects a value within a JSON document.</p> <p>Path expressions are useful with functions that extract parts of or modify a JSON document, to specify where within that document to operate. For example, the following query extracts from a JSON document the value of the member with the name key:</p> <pre><code>mysql&gt; SELECT JSON_EXTRACT('{\"id\": 14, \"name\": \"Aztalan\"}', '$.name');\n+---------------------------------------------------------+\n| JSON_EXTRACT('{\"id\": 14, \"name\": \"Aztalan\"}', '$.name') |\n+---------------------------------------------------------+\n| \"Aztalan\"                                               |\n+---------------------------------------------------------+\n</code></pre> <p>Path syntax uses a leading $ character to represent the JSON document under consideration, optionally followed by selectors that indicate successively more specific parts of the document:</p> <ul> <li> <p>A period followed by a key name names the member in an object with the given key. The key name must be specified within double quotation marks if the name without quotes is not legal within path expressions (for example, if it contains a space).</p> </li> <li> <p>[N] appended to a path that selects an array names the value at position <code>N</code> within the array. Array positions are integers beginning with zero. If the array is negative, an error is generated.</p> </li> <li> <p>Paths can contain * or ** wildcards:</p> <ul> <li> <p>.[*] evaluates to the values of all members in a JSON object.</p> </li> <li> <p>[*] evaluates to the values of all elements in a JSON array.</p> </li> <li> <p>prefix**suffix evaluates to all paths that begin with the named prefix and end with the named suffix.</p> </li> </ul> </li> <li> <p>A path that does not exist in the document (evaluates to nonexistent data) evaluates to NULL.</p> </li> </ul> <p>Example:</p> <pre><code>[3, {\"a\": [5, 6], \"b\": 10}, [99, 100]]\n</code></pre> <ul> <li> <p>$[0] evaluates to 3.</p> </li> <li> <p>$[1] evaluates to {\"a\": [5, 6], \"b\": 10}.</p> </li> <li> <p>$[2] evaluates to [99, 100].</p> </li> <li> <p>$[3] evaluates to NULL (it refers to the fourth array element, which does not exist).</p> </li> </ul> <p>Because $[1] and $[2] evaluate to nonscalar values, they can be used as the basis for more-specific path expressions that select nested values. Examples:</p> <ul> <li> <p>$[1].a evaluates to [5, 6].</p> </li> <li> <p>$[1].a[1] evaluates to 6.</p> </li> <li> <p>$[1].b evaluates to 10.</p> </li> <li> <p>$[2][0] evaluates to 99.</p> </li> </ul> <p>As mentioned previously, path components that name keys must be quoted if the unquoted key name is not legal in path expressions. Let $ refer to this value:</p> <pre><code>{\"a fish\": \"shark\", \"a bird\": \"sparrow\"}\n</code></pre> <p>The keys both contain a space and must be quoted:</p> <ul> <li> <p>$.\"a fish\" evaluates to shark.</p> </li> <li> <p>$.\"a bird\" evaluates to sparrow.</p> </li> </ul> <p>Paths that use wildcards evaluate to an array that can contain multiple values:</p> <pre><code>mysql&gt; SELECT JSON_EXTRACT('{\"a\": 1, \"b\": 2, \"c\": [3, 4, 5]}', '$.*');\n+---------------------------------------------------------+\n| JSON_EXTRACT('{\"a\": 1, \"b\": 2, \"c\": [3, 4, 5]}', '$.*') |\n+---------------------------------------------------------+\n| [1, 2, [3, 4, 5]]                                       |\n+---------------------------------------------------------+\n\nmysql&gt; SELECT JSON_EXTRACT('{\"a\": 1, \"b\": 2, \"c\": [3, 4, 5]}', '$.c[*]');\n+------------------------------------------------------------+\n| JSON_EXTRACT('{\"a\": 1, \"b\": 2, \"c\": [3, 4, 5]}', '$.c[*]') |\n+------------------------------------------------------------+\n| [3, 4, 5]                                                  |\n+------------------------------------------------------------+\n</code></pre> <p>In the following example, the path $**.b evaluates to multiple paths ($.a.b and $.c.b) and produces an array of the matching path values:</p> <pre><code>mysql&gt; SELECT JSON_EXTRACT('{\"a\": {\"b\": 1}, \"c\": {\"b\": 2}}', '$**.b');\n+---------------------------------------------------------+\n| JSON_EXTRACT('{\"a\": {\"b\": 1}, \"c\": {\"b\": 2}}', '$**.b') |\n+---------------------------------------------------------+\n| [null, 1, 2]                                                  |\n+---------------------------------------------------------+\n</code></pre> <p>In the following example, showes the querying JSON values from columns:</p> <pre><code>CREATE table t1 (a json,b int);\nINSERT into t1(a,b) values ('{\"a\":1,\"b\":2,\"c\":3}',1);\n\nmysql&gt; SELECT json_extract(t1.a,'$.a') from t1 where t1.b=1;\n+-------------------------+\n| json_extract(t1.a, $.a) |\n+-------------------------+\n| 1                       |\n+-------------------------+\n1 row in set (0.00 sec)\n\nINSERT into t1(a,b) values ('{\"a\":4,\"b\":5,\"c\":6}',2);\n\nmysql&gt; SELECT json_extract(t1.a,'$.b') from t1 where t1.b=2;\n+-------------------------+\n| json_extract(t1.a, $.b) |\n+-------------------------+\n| 5                       |\n+-------------------------+\n1 row in set (0.00 sec)\n\nmysql&gt; SELECT json_extract(t1.a,'$.a') from t1;\n+-------------------------+\n| json_extract(t1.a, $.a) |\n+-------------------------+\n| 1                       |\n| 4                       |\n+-------------------------+\n2 rows in set (0.00 sec)\n\nINSERT into t1(a,b) values ('{\"a\":{\"q\":[1,2,3]}}',3);\n\nmysql&gt; SELECT json_extract(t1.a,'$.a.q[1]') from t1 where t1.b=3;\n+------------------------------+\n| json_extract(t1.a, $.a.q[1]) |\n+------------------------------+\n| 2                            |\n+------------------------------+\n1 row in set (0.01 sec)\n\nINSERT into t1(a,b) values ('[{\"a\":1,\"b\":2,\"c\":3},{\"a\":4,\"b\":5,\"c\":6}]',4);\n\nmysql&gt; SELECT json_extract(t1.a,'$[1].a') from t1 where t1.b=4;\n+----------------------------+\n| json_extract(t1.a, $[1].a) |\n+----------------------------+\n| 4                          |\n+----------------------------+\n1 row in set (0.00 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Json/json-functions/#json_quote","title":"<code>JSON_QUOTE()</code>","text":"<p>The <code>JSON_QUOTE</code> function converts a string value into a string in <code>JSON</code> format. It wraps the string with double quotes, escapes inner quotes and other characters, quotes the string as a <code>JSON</code> value, and then returns the result as a utf8mb4 string. If the parameter is <code>NULL</code>, it returns <code>NULL</code>.</p> <p>The <code>JSON_QUOTE</code> function is commonly used to generate valid <code>JSON</code> strings to include in JSON documents.</p> <p>The syntax structure is: <code>select JSON_QUOTE(string_value);</code></p> <p>string_value is the string to be converted to a <code>JSON</code> string. The function returns a string in <code>JSON</code> format, where the original string is surrounded by quotes and properly escaped.</p> <p>Example:</p> <pre><code>mysql&gt; SELECT JSON_QUOTE('null'), JSON_QUOTE('\"null\"');\n+------------------+--------------------+\n| json_quote(null) | json_quote(\"null\") |\n+------------------+--------------------+\n| \"null\"           | \"\\\"null\\\"\"         |\n+------------------+--------------------+\n1 row in set (0.00 sec)\nmysql&gt; SELECT JSON_QUOTE('[1, 2, 3]');\n+-----------------------+\n| json_quote([1, 2, 3]) |\n+-----------------------+\n| \"[1, 2, 3]\"           |\n+-----------------------+\n1 row in set (0.00 sec)\n\nmysql&gt; SELECT JSON_QUOTE('hello world');\n+-------------------------+\n| json_quote(hello world) |\n+-------------------------+\n| \"hello world\"           |\n+-------------------------+\n1 row in set (0.00 sec)\n</code></pre> <p>As we can see, the original string is surrounded by quotes, and the double quotes within the string are escaped. This allows it to be used in JSON format, such as as a property value in a JSON object.</p>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Json/json-functions/#json_unquote","title":"<code>JSON_UNQUOTE()</code>","text":"<p>The <code>JSON_UNQUOTE()</code> function extracts an unquoted <code>JSON</code> value from a <code>JSON</code> string and returns it as a string.</p> <p>Specifically, the <code>JSON_UNQUOTE()</code> function takes a <code>JSON</code> string as input, extracts a <code>JSON</code> value from it, and returns it as a string. If the input <code>JSON</code> string does not contain a valid <code>JSON</code> value or the parameter is <code>NULL</code>, the function returns <code>NULL</code>. An error occurs if the value begins and ends with double quotes but is not a valid <code>JSON</code> string literal.</p> <p>The syntax structure: <code>select JSON_UNQUOTE(string_value);</code></p> <p>In the string, specific sequences have special meanings and start with a backslash (), known as escape characters, with the following rules. For example, \\b is interpreted as backspace, while \\B is interpreted as B. For all other escape sequences, the backslash is ignored. That is, the escape character is interpreted as unescaped. For example, \\x is just x. These sequences are case-sensitive.</p> Escape Sequence Character Represented by Sequence \\\" A double quote (\") character \\b A backspace character \\f A formfeed character \\n A newline (linefeed) character \\r A carriage return character \\t A tab character \\ A backslash () character \\uXXXX UTF-8 bytes for Unicode value XXXX <p>Example:</p> <pre><code>mysql&gt; SET @j = '\"abc\"';\nQuery OK, 0 rows affected (0.00 sec)\n\nmysql&gt; SELECT @j, JSON_UNQUOTE(@j);\n+-------+------------------+\n| @j    | json_unquote(@j) |\n+-------+------------------+\n| \"abc\" | abc              |\n+-------+------------------+\n1 row in set (0.00 sec)\n\nmysql&gt; SET @j = '[1, 2, 3]';\nQuery OK, 0 rows affected (0.00 sec)\n\nmysql&gt; SELECT @j, JSON_UNQUOTE(@j);\n+-----------+------------------+\n| @j        | json_unquote(@j) |\n+-----------+------------------+\n| [1, 2, 3] | [1, 2, 3]        |\n+-----------+------------------+\n1 row in set (0.00 sec)\n\nmysql&gt; SELECT JSON_UNQUOTE('\"\\\\t\\\\u0032\"');\n+----------------------------+\n| json_unquote(\"\\\\t\\\\u0032\") |\n+----------------------------+\n|       2                         |\n+----------------------------+\n1 row in set (0.00 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Mathematical/abs/","title":"ABS()","text":""},{"location":"MatrixOne/Reference/Functions-and-Operators/Mathematical/abs/#description","title":"Description","text":"<p>ABS(X) Returns the absolute value of X, or NULL if X is NULL.</p>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Mathematical/abs/#syntax","title":"Syntax","text":"<pre><code>&gt; ABS(number)\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Mathematical/abs/#arguments","title":"Arguments","text":"Arguments Description number Required. Any numeric data type supported now. <p>The result type is derived from the argument type.</p>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Mathematical/abs/#examples","title":"Examples","text":"<pre><code>drop table if exists t1;\ncreate table t1(a int,b float);\ninsert into t1 values(1,-3.1416);\ninsert into t1 values(-1,1.57);\n\nmysql&gt; select abs(a),abs(b) from t1;\n+--------+--------------------+\n| abs(a) | abs(b)             |\n+--------+--------------------+\n|      1 | 3.1415998935699463 |\n|      1 | 1.5700000524520874 |\n+--------+--------------------+\n2 rows in set (0.01 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Mathematical/acos/","title":"ACOS()","text":""},{"location":"MatrixOne/Reference/Functions-and-Operators/Mathematical/acos/#description","title":"Description","text":"<p>The ACOS() function returns the arccosine(given in radians) of the input number.</p>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Mathematical/acos/#syntax","title":"Syntax","text":"<pre><code>&gt; ACOS(number)\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Mathematical/acos/#arguments","title":"Arguments","text":"Arguments Description number Required. Any numeric data type supported now."},{"location":"MatrixOne/Reference/Functions-and-Operators/Mathematical/acos/#examples","title":"Examples","text":"<pre><code>drop table if exists t1;\ncreate table t1(a float,b int);\ninsert into t1 values(0.5,1);\ninsert into t1 values(-0.5,-1);\n\nmysql&gt; select acos(a),acos(b) from t1;\n+--------------------+-------------------+\n| acos(a)            | acos(b)           |\n+--------------------+-------------------+\n| 1.0471975511965976 |                 0 |\n| 2.0943951023931957 | 3.141592653589793 |\n+--------------------+-------------------+\n2 rows in set (0.01 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Mathematical/atan/","title":"ATAN()","text":""},{"location":"MatrixOne/Reference/Functions-and-Operators/Mathematical/atan/#description","title":"Description","text":"<p>The ATAN() function returns the arctangent(given in radians) of the input number.</p>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Mathematical/atan/#syntax","title":"Syntax","text":"<pre><code>&gt; ATAN(number)\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Mathematical/atan/#arguments","title":"Arguments","text":"Arguments Description number Required. Any numeric data type supported now."},{"location":"MatrixOne/Reference/Functions-and-Operators/Mathematical/atan/#examples","title":"Examples","text":"<pre><code>drop table if exists t1;\ncreate table t1(a int,b float);\ninsert into t1 values(1,3.14159);\ninsert into t1 values(0,1);\n\nmysql&gt; select atan(a),atan(tan(b)) from t1;\n+--------------------+--------------------------+\n| atan(a)            | atan(tan(b))             |\n+--------------------+--------------------------+\n| 0.7853981633974483 | -0.000002535181590113463 |\n|                  0 |                        1 |\n+--------------------+--------------------------+\n2 rows in set (0.00 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Mathematical/ceil/","title":"CEIL()","text":""},{"location":"MatrixOne/Reference/Functions-and-Operators/Mathematical/ceil/#description","title":"Description","text":"<p>The CEIL(X) function returns the smallest integer value not less than X.Synonymous with <code>CEILING()</code>.</p>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Mathematical/ceil/#syntax","title":"Syntax","text":"<pre><code>&gt; CEIL(X)\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Mathematical/ceil/#arguments","title":"Arguments","text":"Arguments Description X Required. Any numeric data type supported now. <p>For exact-value numeric arguments, the return value has an exact-value numeric type. For floating-point arguments, the return value has a floating-point type.</p>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Mathematical/ceil/#examples","title":"Examples","text":"<pre><code>drop table if exists t1;\ncreate table t1(a int ,b float);\ninsert into t1 values(1,0.5);\ninsert into t1 values(2,0.499);\ninsert into t1 values(3,0.501);\ninsert into t1 values(4,20.5);\ninsert into t1 values(5,20.499);\ninsert into t1 values(6,13.500);\ninsert into t1 values(7,-0.500);\ninsert into t1 values(8,-0.499);\ninsert into t1 values(9,-0.501);\ninsert into t1 values(10,-20.499);\ninsert into t1 values(11,-20.500);\ninsert into t1 values(12,-13.500);\n\nmysql&gt; select a,ceil(b) from t1;\n+------+---------+\n| a    | ceil(b) |\n+------+---------+\n|    1 |       1 |\n|    2 |       1 |\n|    3 |       1 |\n|    4 |      21 |\n|    5 |      21 |\n|    6 |      14 |\n|    7 |      -0 |\n|    8 |      -0 |\n|    9 |      -0 |\n|   10 |     -20 |\n|   11 |     -20 |\n|   12 |     -13 |\n+------+---------+\n12 rows in set (0.01 sec)\n\nmysql&gt; select sum(ceil(b)) from t1;\n+--------------+\n| sum(ceil(b)) |\n+--------------+\n|            6 |\n+--------------+\n1 row in set (0.01 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Mathematical/ceiling/","title":"CEILING()","text":""},{"location":"MatrixOne/Reference/Functions-and-Operators/Mathematical/ceiling/#description","title":"Description","text":"<p>The CEILING(X) function returns the smallest integer value not less than X.Synonymous with <code>CEIL()</code>.</p>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Mathematical/ceiling/#syntax","title":"Syntax","text":"<pre><code>&gt; CEILING(X)\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Mathematical/ceiling/#arguments","title":"Arguments","text":"Arguments Description X Required. Any numeric data type supported now. <p>For exact-value numeric arguments, the return value has an exact-value numeric type. For floating-point arguments, the return value has a floating-point type.</p>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Mathematical/ceiling/#examples","title":"Examples","text":"<pre><code>drop table if exists t1;\ncreate table t1(a int ,b float);\ninsert into t1 values(1,0.5);\ninsert into t1 values(2,0.499);\ninsert into t1 values(3,0.501);\ninsert into t1 values(4,20.5);\ninsert into t1 values(5,20.499);\ninsert into t1 values(6,13.500);\ninsert into t1 values(7,-0.500);\ninsert into t1 values(8,-0.499);\ninsert into t1 values(9,-0.501);\ninsert into t1 values(10,-20.499);\ninsert into t1 values(11,-20.500);\ninsert into t1 values(12,-13.500);\n\nmysql&gt; select a,ceiling(b) from t1;\n+------+------------+\n| a    | ceiling(b) |\n+------+------------+\n|    1 |          1 |\n|    2 |          1 |\n|    3 |          1 |\n|    4 |         21 |\n|    5 |         21 |\n|    6 |         14 |\n|    7 |         -0 |\n|    8 |         -0 |\n|    9 |         -0 |\n|   10 |        -20 |\n|   11 |        -20 |\n|   12 |        -13 |\n+------+------------+\n12 rows in set (0.00 sec)\n\nmysql&gt; select sum(ceiling(b)) from t1;\n+-----------------+\n| sum(ceiling(b)) |\n+-----------------+\n|               6 |\n+-----------------+\n1 row in set (0.01 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Mathematical/cos/","title":"COS()","text":""},{"location":"MatrixOne/Reference/Functions-and-Operators/Mathematical/cos/#description","title":"Description","text":"<p>The COS() function returns the cosine of input number(given in radians).</p>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Mathematical/cos/#syntax","title":"Syntax","text":"<pre><code>&gt; COS(number)\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Mathematical/cos/#arguments","title":"Arguments","text":"Arguments Description number Required. Any numeric data type supported now."},{"location":"MatrixOne/Reference/Functions-and-Operators/Mathematical/cos/#examples","title":"Examples","text":"<pre><code>drop table if exists t1;\ncreate table t1(a int,b float);\ninsert into t1 values(1,3.14159);\ninsert into t1 values(-1,1.57);\n\nmysql&gt; select cos(a),cos(b) from t1;\n+--------------------+----------------------+\n| cos(a)             | cos(b)               |\n+--------------------+----------------------+\n| 0.5403023058681398 |  -0.9999999999967865 |\n| 0.5403023058681398 | 0.000796274258662553 |\n+--------------------+----------------------+\n2 rows in set (0.01 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Mathematical/cot/","title":"COT()","text":""},{"location":"MatrixOne/Reference/Functions-and-Operators/Mathematical/cot/#description","title":"Description","text":"<p>The COT() function returns the cotangent of input number(given in radians).</p>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Mathematical/cot/#syntax","title":"Syntax","text":"<pre><code>&gt; COT(number)\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Mathematical/cot/#arguments","title":"Arguments","text":"Arguments Description number Required. Any numeric data type supported now."},{"location":"MatrixOne/Reference/Functions-and-Operators/Mathematical/cot/#examples","title":"Examples","text":"<pre><code>mysql&gt; SELECT COT(12);\n+---------------------+\n| cot(12)             |\n+---------------------+\n| -1.5726734063976895 |\n+---------------------+\n1 row in set (0.00 sec)\n</code></pre> <pre><code>drop table if exists t1;\ncreate table t1(a int,b float);\ninsert into t1 values(1,3.14159);\ninsert into t1 values(-1,12);\n\nmysql&gt; select cot(a), cot(b) from t1;\n+---------------------+---------------------+\n| cot(a)              | cot(b)              |\n+---------------------+---------------------+\n|  0.6420926159343306 |  -394449.0619219334 |\n| -0.6420926159343308 | -1.5726734063976895 |\n+---------------------+---------------------+\n2 rows in set (0.01 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Mathematical/exp/","title":"EXP()","text":""},{"location":"MatrixOne/Reference/Functions-and-Operators/Mathematical/exp/#description","title":"Description","text":"<p>The EXP() function returns the value of e (the base of natural logarithms) raised to the power of X.</p>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Mathematical/exp/#syntax","title":"Syntax","text":"<pre><code>&gt; EXP(number)\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Mathematical/exp/#arguments","title":"Arguments","text":"Arguments Description number Required. Any numeric data type supported now."},{"location":"MatrixOne/Reference/Functions-and-Operators/Mathematical/exp/#examples","title":"Examples","text":"<pre><code>drop table if exists t1;\ncreate table t1(a int ,b float);\ninsert into t1 values(-4, 2.45);\ninsert into t1 values(6, -3.62);\n\nmysql&gt; select exp(a), exp(b) from t1;\n+---------------------+----------------------+\n| exp(a)              | exp(b)               |\n+---------------------+----------------------+\n| 0.01831563888873418 |   11.588347271798835 |\n|   403.4287934927351 | 0.026782679557672436 |\n+---------------------+----------------------+\n2 rows in set (0.00 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Mathematical/floor/","title":"FLOOR()","text":""},{"location":"MatrixOne/Reference/Functions-and-Operators/Mathematical/floor/#description","title":"Description","text":"<p>The FLOOR() function returns the largest round number that is less than or equal to the number.</p>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Mathematical/floor/#syntax","title":"Syntax","text":"<pre><code>&gt; FLOOR(number, decimals)\n&gt; FLOOR(number)\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Mathematical/floor/#arguments","title":"Arguments","text":"Arguments Description number Required. Any numeric data type supported now. decimals Optional. An integer that represents the number of decimal places. By default it is zero, which means to round to an integer.decimals may also be negative."},{"location":"MatrixOne/Reference/Functions-and-Operators/Mathematical/floor/#examples","title":"Examples","text":"<pre><code>drop table if exists t1;\ncreate table t1(a int ,b float);\ninsert into t1 values(1,0.5);\ninsert into t1 values(2,0.499);\ninsert into t1 values(3,0.501);\ninsert into t1 values(4,20.5);\ninsert into t1 values(5,20.499);\ninsert into t1 values(6,13.500);\ninsert into t1 values(7,-0.500);\ninsert into t1 values(8,-0.499);\ninsert into t1 values(9,-0.501);\ninsert into t1 values(10,-20.499);\ninsert into t1 values(11,-20.500);\ninsert into t1 values(12,-13.500);\n\nmysql&gt; select a,floor(b) from t1;\n+------+----------+\n| a    | floor(b) |\n+------+----------+\n|    1 |        0 |\n|    2 |        0 |\n|    3 |        0 |\n|    4 |       20 |\n|    5 |       20 |\n|    6 |       13 |\n|    7 |       -1 |\n|    8 |       -1 |\n|    9 |       -1 |\n|   10 |      -21 |\n|   11 |      -21 |\n|   12 |      -14 |\n+------+----------+\n12 rows in set (0.01 sec)\n\nmysql&gt; select sum(floor(b)) from t1;\n+---------------+\n| sum(floor(b)) |\n+---------------+\n|            -6 |\n+---------------+\n1 row in set (0.00 sec)\n\nmysql&gt; select a,sum(floor(b)) from t1 group by a order by a;\n+------+---------------+\n| a    | sum(floor(b)) |\n+------+---------------+\n|    1 |             0 |\n|    2 |             0 |\n|    3 |             0 |\n|    4 |            20 |\n|    5 |            20 |\n|    6 |            13 |\n|    7 |            -1 |\n|    8 |            -1 |\n|    9 |            -1 |\n|   10 |           -21 |\n|   11 |           -21 |\n|   12 |           -14 |\n+------+---------------+\n12 rows in set (0.00 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Mathematical/ln/","title":"LN()","text":""},{"location":"MatrixOne/Reference/Functions-and-Operators/Mathematical/ln/#description","title":"Description","text":"<p>LN(X) returns the natural logarithm of X. This function is synonymous with LOG(X).</p>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Mathematical/ln/#syntax","title":"Syntax","text":"<pre><code>&gt; LN(X)\n</code></pre> <p>Reference to LOG(X).</p>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Mathematical/log/","title":"LOG()","text":""},{"location":"MatrixOne/Reference/Functions-and-Operators/Mathematical/log/#description","title":"Description","text":"<p>LOG(X) returns the natural logarithm of X.</p>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Mathematical/log/#syntax","title":"Syntax","text":"<pre><code>&gt; LOG(X)\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Mathematical/log/#arguments","title":"Arguments","text":"Arguments Description X Required. Any numeric data type supported now."},{"location":"MatrixOne/Reference/Functions-and-Operators/Mathematical/log/#examples","title":"Examples","text":"<pre><code>drop table if exists t1;\ncreate table t1(a float, b float);\ninsert into t1 values(2,8);\n\nmysql&gt; select log(a), log(b) from t1;\n+--------------------+--------------------+\n| log(a)             | log(b)             |\n+--------------------+--------------------+\n| 0.6931471805599453 | 2.0794415416798357 |\n+--------------------+--------------------+\n1 row in set (0.00 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Mathematical/log/#constraints","title":"Constraints","text":"<p>LOG(X) only support one parameter input for now.</p>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Mathematical/log10/","title":"LOG10()","text":""},{"location":"MatrixOne/Reference/Functions-and-Operators/Mathematical/log10/#description","title":"Description","text":"<p>LOG10(X) returns the base-10 logarithm of X.</p>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Mathematical/log10/#syntax","title":"Syntax","text":"<pre><code>&gt; LOG10(X)\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Mathematical/log10/#arguments","title":"Arguments","text":"Arguments Description X Required. Any numeric data type supported now."},{"location":"MatrixOne/Reference/Functions-and-Operators/Mathematical/log10/#examples","title":"Examples","text":"<pre><code>drop table if exists t1;\ncreate table t1(a float, b float);\ninsert into t1 values(10000,3784.159);\ninsert into t1 values(2738,682.325);\n\nmysql&gt; select log10(a),log10(b) from t1;\n+-------------------+--------------------+\n| log10(a)             | log10(b)              |\n+-------------------+--------------------+\n|                 4 |  3.577969368581086 |\n| 3.437433443797971 | 2.8339912916439594 |\n+-------------------+--------------------+\n2 rows in set (0.00 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Mathematical/log2/","title":"LOG2()","text":""},{"location":"MatrixOne/Reference/Functions-and-Operators/Mathematical/log2/#description","title":"Description","text":"<p>LOG2(X) returns the base-2 logarithm of X.</p>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Mathematical/log2/#syntax","title":"Syntax","text":"<pre><code>&gt; LOG2(X)\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Mathematical/log2/#arguments","title":"Arguments","text":"Arguments Description X Required. Any numeric data type supported now."},{"location":"MatrixOne/Reference/Functions-and-Operators/Mathematical/log2/#examples","title":"Examples","text":"<pre><code>drop table if exists t1;\ncreate table t1(a float, b float);\ninsert into t1 values(1024,17.231);\ninsert into t1 values(4096,23.331);\n\nmysql&gt;select log2(a),log2(b) from t1;\n+---------+-------------------+\n| log2(a) | log2(b)           |\n+---------+-------------------+\n|      10 | 4.106934600972237 |\n|      12 | 4.544176200820541 |\n+---------+-------------------+\n2 rows in set (0.01 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Mathematical/pi/","title":"PI()","text":""},{"location":"MatrixOne/Reference/Functions-and-Operators/Mathematical/pi/#description","title":"Description","text":"<p>PI() returns the value of \u03c0 (pi).</p>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Mathematical/pi/#syntax","title":"Syntax","text":"<pre><code>&gt; PI()\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Mathematical/pi/#examples","title":"Examples","text":"<pre><code>drop table if exists t1;\ncreate table t1(a int,b float);\ninsert into t1 values(0,0),(-15,-20),(-22,-12.5);\ninsert into t1 values(0,360),(30,390),(90,450),(180,270),(180,180);\n\nmysql&gt; select acos(a*pi()/180) as acosa,acos(b*pi()/180) acosb from t1;\n+--------------------+--------------------+\n| acosa              | acosb              |\n+--------------------+--------------------+\n| 1.5707963267948966 | 1.5707963267948966 |\n| 1.8356824738191324 |  1.927370391646567 |\n| 1.9648910192076245 | 1.7907312931992256 |\n| 1.5707963267948966 |               NULL |\n| 1.0197267436954502 |               NULL |\n|               NULL |               NULL |\n|               NULL |               NULL |\n|               NULL |               NULL |\n+--------------------+--------------------+\n8 rows in set (0.01 sec)\n\nmysql&gt; select acos(a*pi()/180)*acos(b*pi()/180) as acosab,acos(acos(a*pi()/180)) as c from t1;\n+--------------------+------+\n| acosab             | c    |\n+--------------------+------+\n| 2.4674011002723395 | NULL |\n| 3.5380400485035204 | NULL |\n|  3.518591835821214 | NULL |\n|               NULL | NULL |\n|               NULL | NULL |\n|               NULL | NULL |\n|               NULL | NULL |\n|               NULL | NULL |\n+--------------------+------+\n8 rows in set (0.01 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Mathematical/power/","title":"POWER()","text":""},{"location":"MatrixOne/Reference/Functions-and-Operators/Mathematical/power/#description","title":"Description","text":"<p>POWER(X, Y) returns the value of X raised to the power of Y.</p>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Mathematical/power/#syntax","title":"Syntax","text":"<pre><code>&gt; POWER(X, Y)\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Mathematical/power/#arguments","title":"Arguments","text":"Arguments Description X Required. Any numeric data type supported now. Y Required. Any numeric data type supported now."},{"location":"MatrixOne/Reference/Functions-and-Operators/Mathematical/power/#examples","title":"Examples","text":"<pre><code>drop table if exists t1;\ncreate table t1(a int,b int);\ninsert into t1 values(5,-2),(10,3),(100,0),(4,3),(6,-3);\n\nmysql&gt; select power(a,b) from t1;\n+----------------------+\n| power(a, b)          |\n+----------------------+\n|                 0.04 |\n|                 1000 |\n|                    1 |\n|                   64 |\n| 0.004629629629629629 |\n+----------------------+\n5 rows in set (0.01 sec)\n\nmysql&gt; select power(a,2) as a1, power(b,2) as b1 from t1 where power(a,2) &gt; power(b,2) order by a1 asc;\n+-------+------+\n| a1    | b1   |\n+-------+------+\n|    16 |    9 |\n|    25 |    4 |\n|    36 |    9 |\n|   100 |    9 |\n| 10000 |    0 |\n+-------+------+\n5 rows in set (0.01 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Mathematical/rand/","title":"RAND()","text":""},{"location":"MatrixOne/Reference/Functions-and-Operators/Mathematical/rand/#description","title":"Description","text":"<p>The <code>RAND()</code> function is used to generate a Float64 type random number between 0 and 1. It does not accept any arguments and generates a random number that is unpredictable and non-repeating each time it is called.</p> <p>If you need to randomly select data from a table, you can use the <code>RAND()</code> function to generate a random number, and then use <code>ORDER BY</code> to sort the data in the table according to this random number. For example:</p> <pre><code>-- Randomly retrieve all data from the table and sort it in a random order, the order of the query results may differ each time.\nSELECT * FROM table ORDER BY RAND();\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Mathematical/rand/#syntax","title":"Syntax","text":"<pre><code>&gt; RAND([seed])\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Mathematical/rand/#arguments","title":"Arguments","text":"Arguments Description seed Optional argument. It is an integer value used to specify the <code>seed</code> when generating random numbers. If the <code>seed</code> parameter is not specified, the current time is used as the seed value by default. The return value type is consistent with the input type.MatrixOne does not currently support specifying <code>seed</code>."},{"location":"MatrixOne/Reference/Functions-and-Operators/Mathematical/rand/#examples","title":"Examples","text":"<ul> <li>Example 1</li> </ul> <pre><code>mysql&gt; SELECT RAND();\n+---------------------+\n| rand()              |\n+---------------------+\n| 0.25193285156620004 |\n+---------------------+\n1 row in set (0.00 sec)\n</code></pre> <ul> <li>Example 2</li> </ul> <pre><code>CREATE TABLE Users (\nID INT PRIMARY KEY AUTO_INCREMENT,\nUserName VARCHAR(255) NOT NULL,\nEmail VARCHAR(255));\n\nINSERT INTO Users (UserName, Email) VALUES\n('John', 'john@example.com'),\n('Jane', 'jane@example.com'),\n('Alice', 'alice@example.com'),\n('Bob', 'bob@example.com');\n\n-- Select a user's information randomly from the Users table.\nmysql&gt; SELECT * FROM Users ORDER BY RAND() LIMIT 1;\n+------+----------+-----------------+\n| id   | username | email           |\n+------+----------+-----------------+\n|    4 | Bob      | bob@example.com | -- Bob's information is randomly selected.\n+------+----------+-----------------+\n1 row in set (0.01 sec)\n\n-- Execute the above query again, and another user may be selected.\nmysql&gt; SELECT * FROM Users  ORDER BY RAND() LIMIT 1;\n+------+----------+-------------------+\n| id   | username | email             |\n+------+----------+-------------------+\n|    3 | Alice    | alice@example.com | -- Alice's information is randomly selected.\n+------+----------+-------------------+\n1 row in set (0.01 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Mathematical/rand/#constraints","title":"Constraints","text":"<p>MatrixOne does not currently support specifying the seed value for the RAND(seed) function (i.e., the seed parameter).</p>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Mathematical/round/","title":"ROUND()","text":""},{"location":"MatrixOne/Reference/Functions-and-Operators/Mathematical/round/#description","title":"Description","text":"<p>The ROUND() function rounds a number to a specified number of decimal places. The function returns the nearest number of the specified order. In case when given number has equal distance to surrounding numbers, the function uses banker's rounding for float number types and rounds away from zero for the other number types (Decimal).</p>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Mathematical/round/#syntax","title":"Syntax","text":"<pre><code>&gt; ROUND(number, decimals)\n&gt; ROUND(number)\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Mathematical/round/#arguments","title":"Arguments","text":"Arguments Description number Required.  The number to round, including any numeric data type supported now. decimals Optional. An integer that represents the number of decimal places you want to round to. Default value is 0.  decimals&gt;0 then the function rounds the value to the right of the decimal point.  decimals&lt;0 then the function rounds the value to the left of the decimal point.  decimals=0 then the function rounds the value to integer."},{"location":"MatrixOne/Reference/Functions-and-Operators/Mathematical/round/#examples","title":"Examples","text":"<pre><code>drop table if exists t1;\ncreate table t1(a int ,b float);\ninsert into t1 values(1,0.5);\ninsert into t1 values(2,0.499);\ninsert into t1 values(3,0.501);\ninsert into t1 values(4,20.5);\ninsert into t1 values(5,20.499);\ninsert into t1 values(6,13.500);\ninsert into t1 values(7,-0.500);\ninsert into t1 values(8,-0.499);\ninsert into t1 values(9,-0.501);\ninsert into t1 values(10,-20.499);\ninsert into t1 values(11,-20.500);\ninsert into t1 values(12,-13.500);\n\nmysql&gt; select a,round(b) from t1;\n+------+----------+\n| a    | round(b) |\n+------+----------+\n|    1 |        0 |\n|    2 |        0 |\n|    3 |        1 |\n|    4 |       20 |\n|    5 |       20 |\n|    6 |       14 |\n|    7 |       -0 |\n|    8 |       -0 |\n|    9 |       -1 |\n|   10 |      -20 |\n|   11 |      -20 |\n|   12 |      -14 |\n+------+----------+\n12 rows in set (0.00 sec)\n\nmysql&gt; select a,round(b,-1) from t1;\n+------+--------------+\n| a    | round(b, -1) |\n+------+--------------+\n|    1 |            0 |\n|    2 |            0 |\n|    3 |            0 |\n|    4 |           20 |\n|    5 |           20 |\n|    6 |           10 |\n|    7 |           -0 |\n|    8 |           -0 |\n|    9 |           -0 |\n|   10 |          -20 |\n|   11 |          -20 |\n|   12 |          -10 |\n+------+--------------+\n12 rows in set (0.01 sec)\n\nmysql&gt; select round(a*b) from t1;\n+--------------+\n| round(a * b) |\n+--------------+\n|            0 |\n|            1 |\n|            2 |\n|           82 |\n|          102 |\n|           81 |\n|           -4 |\n|           -4 |\n|           -5 |\n|         -205 |\n|         -226 |\n|         -162 |\n+--------------+\n12 rows in set (0.01 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Mathematical/sin/","title":"SIN()","text":""},{"location":"MatrixOne/Reference/Functions-and-Operators/Mathematical/sin/#description","title":"Description","text":"<p>The SIN() function returns the sine of input number(given in radians).</p>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Mathematical/sin/#syntax","title":"Syntax","text":"<pre><code>&gt; SIN(number)\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Mathematical/sin/#arguments","title":"Arguments","text":"Arguments Description number Required. Any numeric data type supported now."},{"location":"MatrixOne/Reference/Functions-and-Operators/Mathematical/sin/#examples","title":"Examples","text":"<pre><code>drop table if exists t1;\ncreate table t1(a int,b float);\ninsert into t1 values(1,3.14159);\ninsert into t1 values(-1,1.57);\n\nmysql&gt; select sin(a),sin(b) from t1;\n+---------------------+--------------------------+\n| sin(a)              | sin(b)                   |\n+---------------------+--------------------------+\n|  0.8414709848078965 | 0.0000025351815901107472 |\n| -0.8414709848078965 |       0.9999996829736023 |\n+---------------------+--------------------------+\n2 rows in set (0.01 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Mathematical/sinh/","title":"SINH()","text":""},{"location":"MatrixOne/Reference/Functions-and-Operators/Mathematical/sinh/#description","title":"Description","text":"<p>The SINH() function returns the hyperbolic sine of the input number(given in radians).</p>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Mathematical/sinh/#syntax","title":"Syntax","text":"<pre><code>&gt; SINH(number)\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Mathematical/sinh/#arguments","title":"Arguments","text":"Arguments Description number Required. Any numeric data type supported now."},{"location":"MatrixOne/Reference/Functions-and-Operators/Mathematical/sinh/#examples","title":"Examples","text":"<pre><code>drop table if exists t1;\ncreate table t1(a int,b float);\ninsert into t1 values(1,3.14159), (-1,-3.14159);\n\nmysql&gt; select sinh(a), sinh(b) from t1;\n+---------------------+---------------------+\n| sinh(a)             | sinh(b)             |\n+---------------------+---------------------+\n|  1.1752011936438014 |  11.548709969588323 |\n| -1.1752011936438014 | -11.548709969588323 |\n+---------------------+---------------------+\n2 rows in set (0.00 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Mathematical/tan/","title":"TAN()","text":""},{"location":"MatrixOne/Reference/Functions-and-Operators/Mathematical/tan/#description","title":"Description","text":"<p>The TAN() function returns the tangent of input number(given in radians).</p>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Mathematical/tan/#syntax","title":"Syntax","text":"<pre><code>&gt; TAN(number)\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Mathematical/tan/#arguments","title":"Arguments","text":"Arguments Description number Required. Any numeric data type supported now."},{"location":"MatrixOne/Reference/Functions-and-Operators/Mathematical/tan/#examples","title":"Examples","text":"<pre><code>drop table if exists t1;\ncreate table t1(a int,b float);\ninsert into t1 values(1,3.14159);\ninsert into t1 values(-1,-3.14159);\n\nmysql&gt; select tan(a),tan(b) from t1;\n+--------------------+--------------------------+\n| tan(a)             | tan(b)                   |\n+--------------------+--------------------------+\n|  1.557407724654902 | -0.000002535181590118894 |\n| -1.557407724654902 |  0.000002535181590118894 |\n+--------------------+--------------------------+\n2 rows in set (0.01 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Other/sample/","title":"SAMPLE Sampling Function","text":"<p>The SAMPLE sampling function feature is a key tool for handling large amounts of data analysis, primarily to quickly narrow down queries.</p> <ol> <li>Syntax structure</li> </ol> <pre><code>SELECT SAMPLE(&lt;column_list&gt;, &lt;N ROWS&gt;/&lt;K PERCENT&gt;) FROM &lt;table&gt; [WHERE ...] [GROUP BY ...] [ORDER BY ...] [LIMIT ...] [OFFSET ...]\n</code></pre> <ul> <li><code>&lt;column_list&gt;</code>: List of selected column names.</li> <li> <p><code>&lt;N ROWS&gt;/&lt;K PERCENT&gt;</code>: Specifies the number (N rows) or percentage (K%) of samples returned.</p> </li> <li> <p>Functional Features</p> </li> <li> <p>The SAMPLE function filters the table before performing sampling.</p> </li> <li>Returns N random samples, or K% random samples, in the table.</li> <li>When N rows are specified, N is a positive integer from 1-1000.</li> <li>When K% is specified, the value of K ranges from 0.01-99.99, representing the probability that each row will be selected. The result may be different each time, and the number of rows is not fixed. For example, the table has 10,000 rows and performs SAMPLE(a, 50 PERCENT); since each row has a 50 percent probability of being selected, similar to a 10,000 coin toss, the probability of positive and negative sides is 50 percent each time, but the end result could be 350 positives and 650 negatives.</li> <li>Multiple column sampling is supported, such as SELECT SAMPLE(a,b,c,100 ROWS) FROM t1;.</li> <li> <p>Can be used in conjunction with WHERE clause, GROUP BY clause, etc.</p> </li> <li> <p>Application Examples</p> </li> </ul> <pre><code>SELECT SAMPLE(a, 100 ROWS) FROM t1; --Returns 100 random samples \nSELECT SAMPLE(a, 0.2 PERCENT) FROM t1; --Returns about 0.2 percent of samples \nSELECT SAMPLE(a, 100 ROWS) FROM t1 WHERE a &gt; 1; --Filters before sampling \nSELECT a, SAMPLE(b, 100 ROWS) FROM t1 GROUP BY a; --Groups after sampling\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Other/serial_extract/","title":"SERIAL_EXTRACT function","text":""},{"location":"MatrixOne/Reference/Functions-and-Operators/Other/serial_extract/#function-description","title":"Function Description","text":"<p>The <code>SERIAL_EXTRACT()</code> function is used to extract the individual elements in a sequence/tuple value and is used in conjunction with the functions <code>MAX()</code>, <code>MIN()</code>, <code>SERIAL()</code>, <code>SERIAL_NULL()</code>.</p>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Other/serial_extract/#function-syntax","title":"Function syntax","text":"<pre><code>&gt;SERIAL_EXTRACT(serial_col, pos as type)\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Other/serial_extract/#parameter-interpretation","title":"Parameter interpretation","text":"Parameters Description serial_col Required parameters. Holds a string row of serial/serial_full function values. If you need to change the output type you can use it in conjunction with the <code>CAST()</code> function. pos Required parameters. Position of the field to extract, 0 is the first. type Required parameter. The original type of the exported element. Requires consistency with extracted element type."},{"location":"MatrixOne/Reference/Functions-and-Operators/Other/serial_extract/#examples","title":"Examples","text":"<pre><code>drop table if exists vtab64;\ncreate table vtab64(id int primary key auto_increment,`vecf64_3` vecf64(3),`vecf64_5` vecf64(5));\ninsert into vtab64(vecf64_3,vecf64_5) values(\"[1,NULL,2]\",NULL);\ninsert into vtab64(vecf64_3,vecf64_5) values(NULL,NULL);\ninsert into vtab64(vecf64_3,vecf64_5) values(\"[2,3,4]\",NULL);\ninsert into vtab64(vecf64_3,vecf64_5) values (\"[4,5,6]\",\"[1,2,3,4,5]\");\ninsert into vtab64(vecf64_3,vecf64_5) values (\"[7,8,9]\",\"[2,3,4,5,6]\");\n\nmysql&gt; select * from vtab64;\n+------+-----------+-----------------+\n| id   | vecf64_3  | vecf64_5        |\n+------+-----------+-----------------+\n|    1 | NULL      | NULL            |\n|    2 | [2, 3, 4] | NULL            |\n|    3 | [4, 5, 6] | [1, 2, 3, 4, 5] |\n|    4 | [7, 8, 9] | [2, 3, 4, 5, 6] |\n+------+-----------+-----------------+\n4 rows in set (0.01 sec)\n\n--max(max(serial(id, `vecf64_3`, `vecf64_5`)) gets a maximum serialized value, and then normally the max obtained would be the record (4, [7, 8, 9], [2, 3, 4, 5, 6]), but the 1 represents the value in the second position, so that's [7, 8, 9].\nmysql&gt; select serial_extract(max(serial(id, `vecf64_3`, `vecf64_5`)), 1 as vecf64(3)) as a from vtab64;\n+-----------+\n| a         |\n+-----------+\n| [7, 8, 9] |\n+-----------+\n1 row in set (0.01 sec)\n\nmysql&gt; select serial_extract(min(serial(id, `vecf64_3`, `vecf64_5`)), 2 as vecf64(5)) as a from vtab64;\n+-----------------+\n| a               |\n+-----------------+\n| [1, 2, 3, 4, 5] |\n+-----------------+\n1 row in set (0.00 sec)\n\nmysql&gt; select serial_extract(max(serial_full(cast(id as decimal), `vecf64_3`)), 0 as decimal) as a from vtab64;\n+------+\n| a    |\n+------+\n|    4 |\n+------+\n1 row in set (0.01 sec)\n\nmysql&gt; select serial_extract(min(serial_full(cast(id as decimal), `vecf64_3`)), 1 as vecf64(3)) as a from vtab64;\n+------+\n| a    |\n+------+\n| NULL |\n+------+\n1 row in set (0.00 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Other/sleep/","title":"SLEEP()","text":""},{"location":"MatrixOne/Reference/Functions-and-Operators/Other/sleep/#description","title":"Description","text":"<p>Sleeps (pauses) for the number of seconds given by the duration argument, then returns 0.  </p>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Other/sleep/#syntax","title":"Syntax","text":"<pre><code>&gt;\nSLEEP(duration)\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Other/sleep/#arguments","title":"Arguments","text":"Arguments Description duration Required. The number of seconds. The <code>duration</code> may have a fractional part. The <code>duration</code> is not allowed NULL or negative."},{"location":"MatrixOne/Reference/Functions-and-Operators/Other/sleep/#returned-value","title":"Returned Value","text":"<ul> <li> <p>When sleep returns normally (without interruption), it returns 0.</p> </li> <li> <p>When SLEEP() returns 1 (with interruption or time out), the query returns no error.</p> <p>For example:</p> <ol> <li> <p>In session 1, execute the following command to query the current connection_id and execute the <code>SLEEP()</code> function:</p> <pre><code>mysql&gt; select connection_id();\n+-----------------+\n| connection_id() |\n+-----------------+\n|            1476 |\n+-----------------+\n1 row in set (0.03 sec)\nmysql&gt; select sleep(200);\n</code></pre> </li> <li> <p>At this point, open a new session, interrupt session 1, and run the following command.</p> <pre><code>mysql&gt; kill 1463;\nQuery OK, 0 rows affected (0.00 sec)\n</code></pre> </li> <li> <p>Check the query result of session 1:</p> <pre><code>mysql&gt; select sleep(200);\n+------------+\n| sleep(200) |\n+------------+\n|          1 |\n+------------+\n1 row in set (26.50 sec)\n</code></pre> </li> </ol> </li> <li> <p>When SLEEP() returns an error (part of a query is uninterrupted). For example:</p> <pre><code>mysql&gt; SELECT 1 FROM t1 WHERE SLEEP(1000);\nERROR 20101 (HY000): internal error: pipeline closed unexpectedly\n</code></pre> </li> </ul>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Other/sleep/#examples","title":"Examples","text":"<pre><code>-- without interruption\nmysql&gt; SELECT SLEEP(1);\n+----------+\n| sleep(1) |\n+----------+\n|        0 |\n+----------+\n1 row in set (1.01 sec)\n\n-- without interruption\nmysql&gt; SELECT SLEEP(1000);\n+-------------+\n| sleep(1000) |\n+-------------+\n|           0 |\n+-------------+\n1 row in set (18 min 20.87 sec)\n\ncreate table t1 (a int,b int);\ninsert into t1 values (1,1),(1,null);\nmysql&gt; select sleep(a) from t1;\n+----------+\n| sleep(a) |\n+----------+\n|        0 |\n|        0 |\n+----------+\n2 rows in set (2.01 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Other/uuid/","title":"UUID()","text":""},{"location":"MatrixOne/Reference/Functions-and-Operators/Other/uuid/#description","title":"Description","text":"<p>Returns a Universal Unique Identifier (UUID) generated according to RFC 4122, \"A Universally Unique IDentifier (UUID) URN Namespace\".</p> <p>A UUID is designed as a number that is globally unique in space and time. Two calls to UUID() are expected to generate two different values, even if these calls are performed on two separate devices not connected to each other.</p> <p>Info</p> <p>Although UUID() values are intended to be unique, they are not necessarily unguessable or unpredictable. If unpredictability is required, UUID values should be generated some other way.</p> <p><code>UUID()</code> returns a value that conforms to UUID version 1 as described in RFC 4122. The value is a 128-bit number represented as a utf8mb3 string of five hexadecimal numbers in aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee format:</p> <ul> <li> <p>The first three numbers are generated from the low, middle, and high parts of a timestamp. The high part also includes the UUID version number.</p> </li> <li> <p>The fourth number preserves temporal uniqueness in case the timestamp value loses monotonicity (for example, due to daylight saving time).</p> </li> <li> <p>The fifth number is an IEEE 802 node number that provides spatial uniqueness. A random number is substituted if the latter is not available (for example, because the host device has no Ethernet card, or it is unknown how to find the hardware address of an interface on the host operating system). In this case, spatial uniqueness cannot be guaranteed. Nevertheless, a collision should have very low probability.</p> </li> </ul> <p>UUID is both a data type and a function. For more information on UUID data types, see UUID Type.</p>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Other/uuid/#syntax","title":"Syntax","text":"<pre><code>&gt; UUID()\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Other/uuid/#examples","title":"Examples","text":"<pre><code>drop table if exists t1;\ncreate table t1(a INT,  b float);\ninsert into t1 values(12124, -4213.413), (12124, -42413.409);\n\nmysql&gt; SELECT length(uuid()) FROM t1;\n+----------------+\n| length(uuid()) |\n+----------------+\n|             36 |\n|             36 |\n+----------------+\n2 rows in set (0.00 sec)\n\nmysql&gt; SELECT UUID();\n+--------------------------------------+\n| uuid()                               |\n+--------------------------------------+\n| b293b688-70a7-11ed-a25a-5ad2460dea50 |\n+--------------------------------------+\n1 row in set (0.00 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Other/uuid/#constraints","title":"Constraints","text":"<p><code>UUID()</code> does not support optional argument for now, which means it doesn't support <code>UUID([number])</code>.</p>"},{"location":"MatrixOne/Reference/Functions-and-Operators/String/bin/","title":"BIN()","text":""},{"location":"MatrixOne/Reference/Functions-and-Operators/String/bin/#description","title":"Description","text":"<p>This function <code>BIN()</code> returns a string representation of the binary value of N, where N is a <code>longlong (BIGINT)</code> number. Returns <code>NULL</code> if N is NULL.</p>"},{"location":"MatrixOne/Reference/Functions-and-Operators/String/bin/#syntax","title":"Syntax","text":"<pre><code>&gt; BIN(N)\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/String/bin/#arguments","title":"Arguments","text":"Arguments Description N Required. UINT Type"},{"location":"MatrixOne/Reference/Functions-and-Operators/String/bin/#examples","title":"Examples","text":"<pre><code>&gt; SELECT bin(1314);\n+-------------+\n| bin(1314)   |\n+-------------+\n| 10100100010 |\n+-------------+\n1 row in set (0.01 sec)\n\n&gt; select bin(2e5);\n+--------------------+\n| bin(2e5)           |\n+--------------------+\n| 110000110101000000 |\n+--------------------+\n1 row in set (0.00 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/String/bit-length/","title":"BIT_LENGTH()","text":""},{"location":"MatrixOne/Reference/Functions-and-Operators/String/bit-length/#description","title":"Description","text":"<p>Returns the length of the string str in bits. Returns <code>NULL</code> if str is <code>NULL</code>.</p>"},{"location":"MatrixOne/Reference/Functions-and-Operators/String/bit-length/#syntax","title":"Syntax","text":"<pre><code>&gt; BIT_LENGTH(str)\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/String/bit-length/#arguments","title":"Arguments","text":"Arguments Description str Required. String you want to calculate."},{"location":"MatrixOne/Reference/Functions-and-Operators/String/bit-length/#examples","title":"Examples","text":"<pre><code>&gt; SELECT BIT_LENGTH('text');\n+------------------+\n| bit_length(text) |\n+------------------+\n|               32 |\n+------------------+\n1 row in set (0.00 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/String/char-length/","title":"CHAR_LENGTH()","text":""},{"location":"MatrixOne/Reference/Functions-and-Operators/String/char-length/#description","title":"Description","text":"<p>The <code>CHAR_LENGTH</code> function returns the length of the string str, measured in code points. A multibyte character counts as a single code point. This means that, for a string containing two 3-byte characters, <code>CHAR_LENGTH</code> returns 6, whereas <code>CHAR_LENGTH</code> returns 2.  </p>"},{"location":"MatrixOne/Reference/Functions-and-Operators/String/char-length/#syntax","title":"Syntax","text":"<pre><code>&gt; CHAR_LENGTH(str)\n</code></pre> <p>note</p> <p>The alias for <code>CHAR_LENGTH</code> can also be <code>lengthUTF8()</code></p>"},{"location":"MatrixOne/Reference/Functions-and-Operators/String/char-length/#arguments","title":"Arguments","text":"Arguments Description str Required. String you want to calculate."},{"location":"MatrixOne/Reference/Functions-and-Operators/String/char-length/#examples","title":"Examples","text":"<pre><code>&gt; drop table if exists t1;\n&gt; create table t1(a varchar(255),b varchar(255));\n&gt; insert into t1 values('nihao','\u4f60\u597d');\n&gt; select char_length(a), char_length(b) from t1;\n+---------------+---------------+\n| lengthutf8(a) | lengthutf8(b) |\n+---------------+---------------+\n|             5 |             2 |\n+---------------+---------------+\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/String/concat-ws/","title":"CONCAT_WS()","text":""},{"location":"MatrixOne/Reference/Functions-and-Operators/String/concat-ws/#description","title":"Description","text":"<p>This function <code>CONCAT_WS()</code> stands for Concatenate With Separator and is a special form of <code>CONCAT()</code>. The first argument is the separator for the rest of the arguments. The separator is added between the strings to be concatenated. The separator can be a string, as can the rest of the arguments. If the separator is <code>NULL</code>, the result is <code>NULL</code>.</p>"},{"location":"MatrixOne/Reference/Functions-and-Operators/String/concat-ws/#syntax","title":"Syntax","text":"<ul> <li>Syntax 1</li> </ul> <pre><code>&gt; CONCAT_WS(separator,str1,str2,...)\n</code></pre> <ul> <li>Syntax 2</li> </ul> <pre><code>&gt; CONCAT_WS(separator,str1,NULL,str1,...);\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/String/concat-ws/#arguments","title":"Arguments","text":"Arguments Description str Required. both CHAR and VARCHAR are supported."},{"location":"MatrixOne/Reference/Functions-and-Operators/String/concat-ws/#examples","title":"Examples","text":"<pre><code>SELECT CONCAT_WS(',','First name','Second name','Last Name');\n+--------------------------------------------------+\n| concat_ws(,, First name, Second name, Last Name) |\n+--------------------------------------------------+\n| First name,Second name,Last Name                 |\n+--------------------------------------------------+\n1 row in set (0.01 sec)\n&gt; SELECT CONCAT_WS(',','First name',NULL,'Last Name');\n+-------------------------------------------+\n| concat_ws(,, First name, null, Last Name) |\n+-------------------------------------------+\n| First name,Last Name                      |\n+-------------------------------------------+\n1 row in set (0.01 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/String/concat/","title":"CONCAT()","text":""},{"location":"MatrixOne/Reference/Functions-and-Operators/String/concat/#description","title":"Description","text":"<p>This function <code>CONCAT()</code> returns the string that results from concatenating the arguments. May have one or more arguments. If all arguments are nonbinary strings, the result is a nonbinary string. If the arguments include any binary strings, the result is a binary string.</p> <p><code>CONCAT()</code> returns <code>NULL</code> if any argument is <code>NULL</code>.</p>"},{"location":"MatrixOne/Reference/Functions-and-Operators/String/concat/#syntax","title":"Syntax","text":"<pre><code>&gt;\nCONCAT(str1,str2,...)\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/String/concat/#arguments","title":"Arguments","text":"Arguments Description str1,str2,... Required. The str to add together. Note: If any of the strs is a NULL value, it returns NULL."},{"location":"MatrixOne/Reference/Functions-and-Operators/String/concat/#examples","title":"Examples","text":"<pre><code>mysql&gt; SELECT CONCAT('My', 'S', 'QL');\n+-------------------+\n| concat(My, S, QL) |\n+-------------------+\n| MySQL             |\n+-------------------+\n1 row in set (0.01 sec)\n\nmysql&gt; SELECT CONCAT('My', NULL, 'QL');\n+----------------------+\n| concat(My, null, QL) |\n+----------------------+\n| NULL                 |\n+----------------------+\n1 row in set (0.00 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/String/concat/#constraints","title":"Constraints","text":"<p>Currently, CONCAT() doesn't support quoted strings and numeric argument.</p>"},{"location":"MatrixOne/Reference/Functions-and-Operators/String/empty/","title":"EMPTY()","text":""},{"location":"MatrixOne/Reference/Functions-and-Operators/String/empty/#description","title":"Description","text":"<p>Checks whether the input string is empty. A string is considered non-empty if it contains at least one byte, even if this is a space or a null byte.</p>"},{"location":"MatrixOne/Reference/Functions-and-Operators/String/empty/#syntax","title":"Syntax","text":"<pre><code>&gt; EMPTY(str)\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/String/empty/#arguments","title":"Arguments","text":"Arguments Description str Required. both CHAR and VARCHAR are supported."},{"location":"MatrixOne/Reference/Functions-and-Operators/String/empty/#returned-values","title":"Returned Values","text":"<p>Returns 1 for an empty string or 0 for a non-empty string.</p>"},{"location":"MatrixOne/Reference/Functions-and-Operators/String/empty/#examples","title":"Examples","text":"<pre><code>&gt; drop table if exists t1;\n&gt; create table t1(a varchar(255),b varchar(255));\n&gt; insert into t1 values('', 'abcd');\n&gt; insert into t1 values('1111', '');\n&gt; select empty(a),empty(b) from t1;\n+----------+----------+\n| empty(a) | empty(b) |\n+----------+----------+\n|        1 |        0 |\n|        0 |        1 |\n+----------+----------+\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/String/endswith/","title":"ENDSWITH()","text":""},{"location":"MatrixOne/Reference/Functions-and-Operators/String/endswith/#description","title":"Description","text":"<p>Returns whether to end with the specified suffix. Returns 1 if the string ends with the specified suffix, otherwise it returns 0. This function is case sensitive.</p>"},{"location":"MatrixOne/Reference/Functions-and-Operators/String/endswith/#syntax","title":"Syntax","text":"<pre><code>&gt; ENDSWITH(str,suffix)\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/String/endswith/#arguments","title":"Arguments","text":"Arguments Description str Required.  CHAR and VARCHAR both are supported. suffix Required.  CHAR and VARCHAR both are supported."},{"location":"MatrixOne/Reference/Functions-and-Operators/String/endswith/#returned-values","title":"Returned Values","text":"<ul> <li>1, if the string ends with the specified suffix.</li> <li>0, if the string does not end with the specified suffix.</li> </ul>"},{"location":"MatrixOne/Reference/Functions-and-Operators/String/endswith/#examples","title":"Examples","text":"<pre><code>&gt; drop table if exists t1;\n&gt; create table t1(a int,b varchar(100),c char(20));\n&gt; insert into t1 values\n(1,'Ananya Majumdar', 'XI'),\n(2,'Anushka Samanta', 'X'),\n(3,'Aniket Sharma', 'XI'),\n(4,'Anik Das', 'X'),\n(5,'Riya Jain', 'IX'),\n(6,'Tapan Samanta', 'XI');\n&gt; select a,endsWith(b,'a') from t1;\n+------+----------------+\n| a    | endswith(b, a) |\n+------+----------------+\n|    1 |              0 |\n|    2 |              1 |\n|    3 |              1 |\n|    4 |              0 |\n|    5 |              0 |\n|    6 |              1 |\n+------+----------------+\n&gt; select a,b,c from t1 where endswith(b,'a')=1 and endswith(c,'I')=1;\n+------+---------------+------+\n| a    | b             | c    |\n+------+---------------+------+\n|    3 | Aniket Sharma | XI   |\n|    6 | Tapan Samanta | XI   |\n+------+---------------+------+\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/String/field/","title":"FIELD()","text":""},{"location":"MatrixOne/Reference/Functions-and-Operators/String/field/#description","title":"Description","text":"<p><code>FIELD()</code> returns the index (position) of str in the str1, str2, str3, ... list.</p>"},{"location":"MatrixOne/Reference/Functions-and-Operators/String/field/#syntax","title":"Syntax","text":"<pre><code>&gt; FIELD(str,str1,str2,str3,...)\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/String/field/#arguments","title":"Arguments","text":"Arguments Description str Required. The value to search for in the list, case insensitive. str1,str2,str3,... Required. A list of values to search for, case insensitive."},{"location":"MatrixOne/Reference/Functions-and-Operators/String/field/#returned-value","title":"Returned Value","text":"<p>If all arguments to <code>FIELD()</code> are strings, all arguments are compared as strings. If all arguments are numbers, they are compared as numbers. Otherwise, the arguments are compared as double.</p> <ul> <li> <p>The <code>FIELD()</code> function returns the corresponding position index if the specified value is found in the list. Indexes returned by the <code>FIELD()</code> function start at 1.</p> </li> <li> <p>If more than one specified value is found in the list, the <code>FIELD()</code> function returns only the index of the first one.</p> </li> <li> <p>Returns 0 if str is not found.</p> </li> <li> <p>If str is <code>NULL</code>, the return value is 0 because <code>NULL</code> fails equality comparison with any value.</p> </li> </ul>"},{"location":"MatrixOne/Reference/Functions-and-Operators/String/field/#examples","title":"Examples","text":"<ul> <li>Example 1:</li> </ul> <pre><code>mysql&gt; SELECT FIELD('Bb', 'Aa', 'Bb', 'Cc', 'Dd', 'Ff');\n+-------------------------------+\n| field(Bb, Aa, Bb, Cc, Dd, Ff) |\n+-------------------------------+\n|                             2 |\n+-------------------------------+\n1 row in set (0.00 sec)\n\nmysql&gt; SELECT FIELD('Gg', 'Aa', 'Bb', 'Cc', 'Dd', 'Ff');\n+-------------------------------+\n| field(Gg, Aa, Bb, Cc, Dd, Ff) |\n+-------------------------------+\n|                             0 |\n+-------------------------------+\n1 row in set (0.00 sec)\n</code></pre> <ul> <li>Example 2:</li> </ul> <pre><code>drop table if exists t;\ncreate table t(\ni int,\nf float,\nd double\n);\ninsert into t() values (1, 1.1, 2.2), (2, 3.3, 4.4), (0, 0, 0), (0, null, 0);\n\nmysql&gt; select * from t;\n+------+------+------+\n| i    | f    | d    |\n+------+------+------+\n|    1 |  1.1 |  2.2 |\n|    2 |  3.3 |  4.4 |\n|    0 |    0 |    0 |\n|    0 | NULL |    0 |\n+------+------+------+\n4 rows in set (0.01 sec)\n\nmysql&gt; select field(1, i, f, d) from t;\n+-------------------+\n| field(1, i, f, d) |\n+-------------------+\n|                 1 |\n|                 0 |\n|                 0 |\n|                 0 |\n+-------------------+\n4 rows in set (0.01 sec)\n\nmysql&gt; select field(i, f, d, 0, 1, 2) from t;\n+-------------------------+\n| field(i, f, d, 0, 1, 2) |\n+-------------------------+\n|                       4 |\n|                       5 |\n|                       1 |\n|                       2 |\n+-------------------------+\n4 rows in set (0.01 sec)\n\nmysql&gt; select field('1', f, d, 0, 1, 2) from t;\n+-------------------------+\n| field(1, f, d, 0, 1, 2) |\n+-------------------------+\n|                       4 |\n|                       4 |\n|                       4 |\n|                       4 |\n+-------------------------+\n4 rows in set (0.01 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/String/find-in-set/","title":"FIND_IN_SET()","text":""},{"location":"MatrixOne/Reference/Functions-and-Operators/String/find-in-set/#description","title":"Description","text":"<p>This function <code>FIND_IN_SET()</code> returns a value in the range of 1 to N if the string str is in the string list strlist consisting of N substrings. A string list is a string composed of substrings separated by , characters. If the first argument is a constant string and the second is a column of type <code>SET</code>, the <code>FIND_IN_SET()</code> function is optimized to use bit arithmetic. Returns 0 if str is not in strlist or if strlist is the empty string. Returns <code>NULL</code> if either argument is NULL. This function does not work properly if the first argument contains a comma (,) character.</p>"},{"location":"MatrixOne/Reference/Functions-and-Operators/String/find-in-set/#syntax","title":"Syntax","text":"<pre><code>&gt; FIND_IN_SET(str,strlist)\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/String/find-in-set/#arguments","title":"Arguments","text":"Arguments Description str Required. both CHAR and VARCHAR are supported. strlist Required."},{"location":"MatrixOne/Reference/Functions-and-Operators/String/find-in-set/#examples","title":"Examples","text":"<pre><code>select find_in_set('b','a,b,c,d');\n+-------------------------+\n| find_in_set(b, a,b,c,d) |\n+-------------------------+\n|                       2 |\n+-------------------------+\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/String/format/","title":"FORMAT()","text":""},{"location":"MatrixOne/Reference/Functions-and-Operators/String/format/#description","title":"Description","text":"<p>Formats the number X to a format like '#,###,###.##', rounded to D decimal places, and returns the result as a string.</p>"},{"location":"MatrixOne/Reference/Functions-and-Operators/String/format/#syntax","title":"Syntax","text":"<pre><code>&gt; FORMAT(X,D[,locale])\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/String/format/#arguments","title":"Arguments","text":"Arguments Description X Required. X is the number need to format. If X is NULL, the function returns NULL. D Required. D is the number of decimal places to round. If D is 0, the result has no decimal point or fractional part. If D is NULL, the function returns NULL. [,locale] Optional. The optional parameter enables a locale to be specified to be used for the result number's decimal point, thousands separator, and grouping between separators. If the locale is NULL or not specified, the default locale is 'en_US'. <code>[,locale]</code> supports locale parameters consistent with MySQL; see MySQL Server Locale Support."},{"location":"MatrixOne/Reference/Functions-and-Operators/String/format/#examples","title":"Examples","text":"<pre><code>mysql&gt; SELECT FORMAT(12332.123456, 4);\n+-------------------------+\n| format(12332.123456, 4) |\n+-------------------------+\n| 12,332.1235             |\n+-------------------------+\n1 row in set (0.01 sec)\n\nmysql&gt; SELECT FORMAT(12332.1,4);\n+--------------------+\n| format(12332.1, 4) |\n+--------------------+\n| 12,332.1000        |\n+--------------------+\n1 row in set (0.00 sec)\n\nmysql&gt; SELECT FORMAT(12332.2,0);\n+--------------------+\n| format(12332.2, 0) |\n+--------------------+\n| 12,332             |\n+--------------------+\n1 row in set (0.00 sec)\n\nmysql&gt; SELECT FORMAT(12332.2,2,'de_DE');\n+---------------------------+\n| format(12332.2, 2, de_DE) |\n+---------------------------+\n| 12.332,20                 |\n+---------------------------+\n1 row in set (0.00 sec)\n\nmysql&gt; SELECT FORMAT(19999999.999999999,4);\n+-------------------------------+\n| format(19999999.999999999, 4) |\n+-------------------------------+\n| 20,000,000.0000               |\n+-------------------------------+\n1 row in set (0.01 sec)\n\nmysql&gt; SELECT FORMAT(\"-.12334.2\",\"2\", \"en_US\");\n+-----------------------------+\n| format(-.12334.2, 2, en_US) |\n+-----------------------------+\n| -0.12                       |\n+-----------------------------+\n1 row in set (0.00 sec)\n\nmysql&gt; SELECT FORMAT(\"-.12334.2\",\"2\", \"de_CH\");\n+-----------------------------+\n| format(-.12334.2, 2, de_CH) |\n+-----------------------------+\n| -0.12                       |\n+-----------------------------+\n1 row in set (0.01 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/String/from_base64/","title":"FROM_BASE64()","text":""},{"location":"MatrixOne/Reference/Functions-and-Operators/String/from_base64/#function-description","title":"Function Description","text":"<p><code>FROM_BASE64()</code> is used to convert a Base64 encoded string back to raw binary data (or text data). Data that is Base64 encoded using the <code>TO_BASE64()</code> function can be decoded. If the argument is NULL, the result is NULL.</p>"},{"location":"MatrixOne/Reference/Functions-and-Operators/String/from_base64/#function-syntax","title":"Function syntax","text":"<pre><code>&gt; FROM_BASE64(str)\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/String/from_base64/#parameter-interpretation","title":"Parameter interpretation","text":"Parameters Description str Required parameters. Base64 encoded string to convert."},{"location":"MatrixOne/Reference/Functions-and-Operators/String/from_base64/#examples","title":"Examples","text":"<pre><code>mysql&gt; select from_base64('MjU1');\n+-------------------+\n| from_base64(MjU1) |\n+-------------------+\n| 255               |\n+-------------------+\n1 row in set (0.00 sec)\n\nmysql&gt; SELECT TO_BASE64('abc'), FROM_BASE64(TO_BASE64('abc'));\n+----------------+-----------------------------+\n| to_base64(abc) | from_base64(to_base64(abc)) |\n+----------------+-----------------------------+\n| YWJj           | abc                         |\n+----------------+-----------------------------+\n1 row in set (0.00 sec)\n\nmysql&gt; select from_base64(null);\n+-------------------+\n| from_base64(null) |\n+-------------------+\n| NULL              |\n+-------------------+\n1 row in set (0.01 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/String/hex/","title":"HEX()","text":""},{"location":"MatrixOne/Reference/Functions-and-Operators/String/hex/#description","title":"Description","text":"<p>For a string argument str, <code>HEX()</code> returns a hexadecimal string representation of str where each byte of each character in str is converted to two hexadecimal digits. (Multibyte characters therefore become more than two digits.)</p> <p>For a numeric argument N, <code>HEX()</code> returns a hexadecimal string representation of the value of N treated as an integer number. This is equivalent to <code>CONV(N,10,16)</code>. The inverse of this operation is performed by <code>CONV(HEX(N),16,10)</code>.</p> <p>For a <code>NULL</code> argument, this function returns <code>NULL</code>.</p>"},{"location":"MatrixOne/Reference/Functions-and-Operators/String/hex/#syntax","title":"Syntax","text":"<pre><code>&gt; HEX(str), HEX(N)\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/String/hex/#arguments","title":"Arguments","text":"Arguments Description N Required. A number which is to be converted to hexadecimal. str Required. A string whose each character is to be converted to two hexadecimal digits."},{"location":"MatrixOne/Reference/Functions-and-Operators/String/hex/#examples","title":"Examples","text":"<pre><code>&gt; SELECT HEX('abc');\n+----------+\n| hex(abc) |\n+----------+\n| 616263   |\n+----------+\n1 row in set (0.00 sec)\n\n&gt; SELECT HEX(255);\n+----------+\n| hex(255) |\n+----------+\n| FF       |\n+----------+\n1 row in set (0.00 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/String/instr/","title":"INSTR()","text":""},{"location":"MatrixOne/Reference/Functions-and-Operators/String/instr/#description","title":"Description","text":"<p><code>INSTR()</code> function is used to return the position of the first occurrence of a substring in a given string. This function is multibyte safe, which means it is compatible with various character encodings and can correctly handle multibyte characters (such as characters encoded in UTF-8).</p> <p>The <code>INSTR()</code> function primarily uses data cleaning and transformation, such as when you need to search for a specific substring within a text field or split a text field based on a specific character. This can be particularly useful when dealing with data that follows a specific pattern or format, like email addresses, phone numbers, etc.</p> <p>Regarding case sensitivity, <code>INSTR()</code> function is case-sensitive only if at least one argument is a binary string. For non-binary strings, <code>INSTR()</code> is case-insensitive. However, to make a case-sensitive comparison, you can use the <code>BINARY</code> keyword to cast the string into a binary format.</p> <p>For example:</p> <pre><code>SELECT INSTR(BINARY 'abc', 'A') AS Match;\n</code></pre> <p>The above query will return 0 because, in binary format, 'A' and 'a' are considered different characters.</p>"},{"location":"MatrixOne/Reference/Functions-and-Operators/String/instr/#syntax","title":"Syntax","text":"<pre><code>&gt; INSTR(str,substr)\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/String/instr/#arguments","title":"Arguments","text":"Arguments Description str Required. The string is the string to search in. substr Required. The substring is the string you are looking for."},{"location":"MatrixOne/Reference/Functions-and-Operators/String/instr/#examples","title":"Examples","text":"<ul> <li>Example 1</li> </ul> <pre><code>mysql&gt; SELECT INSTR('foobarbar', 'bar');\n+-----------------------+\n| instr(foobarbar, bar) |\n+-----------------------+\n|                     4 |\n+-----------------------+\n1 row in set (0.01 sec)\n</code></pre> <ul> <li>Example 2</li> </ul> <pre><code>-- Using the INSTR function to find the first occurrence of 'o' in the string 'Hello World' will return 5, as 'o' first appears at the 5th position in 'Hello World'.\nmysql&gt; SELECT INSTR('Hello World', 'o');\n+-----------------------+\n| instr(Hello World, o) |\n+-----------------------+\n|                     5 |\n+-----------------------+\n1 row in set (0.01 sec)\n</code></pre> <ul> <li>Example 3</li> </ul> <pre><code>-- Create a table named t1, which contains two VARCHAR type columns a and b\nCREATE TABLE t1(a VARCHAR, b VARCHAR);\n\n-- Insert three rows of data into the table t1\nINSERT INTO t1 VALUES('axa','x'),('abababa','qq'),('qwer','er');\n\n-- Select each row from table t1, then use the INSTR function to find the position at which the string in column b first appears in column a\nmysql&gt; select instr(a,b) from t1;\n+-------------+\n| instr(a, b) |\n+-------------+\n|           2 |\n|           0 |\n|           3 |\n+-------------+\n3 rows in set (0.01 sec)\n\n-- Select each row from table t1, then use the INSTR function to find the position at which NULL first appears in column a\n-- Since NULL is an unknown value, this query will return NULL\nmysql&gt; select instr(a,null) from t1;\n+----------------+\n| instr(a, null) |\n+----------------+\n|           NULL |\n|           NULL |\n|           NULL |\n+----------------+\n3 rows in set (0.00 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/String/lcase/","title":"LCASE()","text":""},{"location":"MatrixOne/Reference/Functions-and-Operators/String/lcase/#function-description","title":"Function Description","text":"<p><code>LCASE()</code> is used to convert a given string to lowercase, a synonym for <code>LOWER()</code>.</p>"},{"location":"MatrixOne/Reference/Functions-and-Operators/String/lcase/#function-syntax","title":"Function syntax","text":"<pre><code>&gt; LCASE(str)\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/String/lcase/#parameter-interpretation","title":"Parameter interpretation","text":"Parameters Description str Required parameters, alphabetic characters."},{"location":"MatrixOne/Reference/Functions-and-Operators/String/lcase/#examples","title":"Examples","text":"<pre><code>mysql&gt; select lcase('HELLO');\n+--------------+\n| lcase(HELLO) |\n+--------------+\n| hello        |\n+--------------+\n1 row in set (0.02 sec)\n\nmysql&gt; select lcase('A'),lcase('B'),lcase('C');\n+----------+----------+----------+\n| lcase(A) | lcaser(B) | lcase(C) |\n+----------+----------+----------+\n| a        | b        | c        |\n+----------+----------+----------+\n1 row in set (0.03 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/String/left/","title":"LEFT()","text":""},{"location":"MatrixOne/Reference/Functions-and-Operators/String/left/#description","title":"Description","text":"<p>This function <code>LEFT()</code> returns the leftmost len characters from the string str, or NULL if any argument is NULL.</p> <p>This function is multibyte safe.</p>"},{"location":"MatrixOne/Reference/Functions-and-Operators/String/left/#syntax","title":"Syntax","text":"<pre><code>&gt; LEFT(str,len)\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/String/left/#arguments","title":"Arguments","text":"Arguments Description str Required. The string to extract from. len Required. The number of characters to extract. If this parameter is larger than the number of characters in string, this function will return string"},{"location":"MatrixOne/Reference/Functions-and-Operators/String/left/#examples","title":"Examples","text":"<pre><code>mysql&gt; select left('abcde', 3) from dual;\n+----------------+\n| left(abcde, 3) |\n+----------------+\n| abc            |\n+----------------+\n1 row in set (0.00 sec)\n\ndrop table if exists t1;\nCREATE TABLE t1 (str VARCHAR(100) NOT NULL, len INT);\ninsert into t1 values('abcdefghijklmn',3);\ninsert into t1 values('  ABCDEFGH123456', 3);\ninsert into t1 values('ABCDEF  GHIJKLMN', 20);\ninsert into t1 values('ABCDEFGHijklmn   ', -1);\ninsert into t1 values('ABCDEFGH123456', -35627164);\ninsert into t1 values('', 3);\nmysql&gt; select left(str, len) from t1;\n+------------------+\n| left(str, len)   |\n+------------------+\n| abc              |\n|   A              |\n| ABCDEF  GHIJKLMN |\n|                  |\n|                  |\n|                  |\n+------------------+\n6 rows in set (0.01 sec)\n\nmysql&gt; select left('sdfsdfsdfsdf', len) from t1;\n+-------------------------+\n| left(sdfsdfsdfsdf, len) |\n+-------------------------+\n| sdf                     |\n| sdf                     |\n| sdfsdfsdfsdf            |\n|                         |\n|                         |\n| sdf                     |\n+-------------------------+\n6 rows in set (0.01 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/String/length/","title":"LENGTH()","text":""},{"location":"MatrixOne/Reference/Functions-and-Operators/String/length/#description","title":"Description","text":"<p>The length() function returns the length of the string.  </p>"},{"location":"MatrixOne/Reference/Functions-and-Operators/String/length/#syntax","title":"Syntax","text":"<pre><code>&gt; LENGTH(str)\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/String/length/#arguments","title":"Arguments","text":"Arguments Description str Required. String you want to calculate."},{"location":"MatrixOne/Reference/Functions-and-Operators/String/length/#examples","title":"Examples","text":"<pre><code>&gt; select a,length(a) from t1;\n\na   length(a)\na       1\nab      2\nabc     3\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/String/locate/","title":"LOCATE()","text":""},{"location":"MatrixOne/Reference/Functions-and-Operators/String/locate/#function-description","title":"Function Description","text":"<p>The <code>LOCATE()</code> function is a function used to find the location of a substring in a string. It returns the position of the substring in the string or 0 if not found.</p> <p>Because the <code>LOCATE()</code> function returns an integer value, it can be nested and used in other functions, such as intercepting strings with the substring function.</p> <p>Regarding case, the <code>LOCATE()</code> function is case-insensitive.</p>"},{"location":"MatrixOne/Reference/Functions-and-Operators/String/locate/#function-syntax","title":"Function syntax","text":"<pre><code>&gt; LOCATE(subtr,str,pos)\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/String/locate/#parameter-interpretation","title":"Parameter interpretation","text":"Parameters Description substr Required parameters. <code>substring</code> is the string you are looking for. str Required parameter. <code>string</code> is the string to search in. pos Unnecessary argument. <code>position</code> is the position indicating the start of the query."},{"location":"MatrixOne/Reference/Functions-and-Operators/String/locate/#examples","title":"Examples","text":"<ul> <li>Example 1</li> </ul> <pre><code>mysql&gt; SELECT LOCATE('bar', 'footbarbar');\n+-------------------------+\n| locate(bar, footbarbar) |\n+-------------------------+\n|                       5 |\n+-------------------------+\n1 row in set (0.00 sec)\n</code></pre> <ul> <li>Example 2</li> </ul> <pre><code>mysql&gt;SELECT LOCATE('bar', 'footbarbar',6);\n+----------------------------+\n| locate(bar, footbarbar, 6) |\n+----------------------------+\n|                          8 |\n+----------------------------+\n1 row in set (0.00 sec)\n</code></pre> <ul> <li>Example 3</li> </ul> <pre><code>mysql&gt;SELECT SUBSTRING('hello world',LOCATE('o','hello world'),5);\n+---------------------------------------------------+\n| substring(hello world, locate(o, hello world), 5) |\n+---------------------------------------------------+\n| o wor                                             |\n+---------------------------------------------------+\n1 row in set (0.00 sec)\n</code></pre> <ul> <li>Example 4</li> </ul> <pre><code>mysql&gt;select locate('a','ABC');\n+----------------+\n| locate(a, ABC) |\n+----------------+\n|              1 |\n+----------------+\n1 row in set (0.00 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/String/lower/","title":"LOWER()","text":""},{"location":"MatrixOne/Reference/Functions-and-Operators/String/lower/#function-description","title":"Function Description","text":"<p><code>LOWER()</code> Converts the given string to lowercase.</p>"},{"location":"MatrixOne/Reference/Functions-and-Operators/String/lower/#function-syntax","title":"Function syntax","text":"<pre><code>&gt; LOWER(str)\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/String/lower/#parameter-interpretation","title":"Parameter interpretation","text":"Parameters Description str Required parameters, alphabetic characters."},{"location":"MatrixOne/Reference/Functions-and-Operators/String/lower/#examples","title":"Examples","text":"<pre><code>mysql&gt; select lower('HELLO');\n+--------------+\n| lower(HELLO) |\n+--------------+\n| hello        |\n+--------------+\n1 row in set (0.02 sec)\n\nmysql&gt; select lower('A'),lower('B'),lower('C');\n+----------+----------+----------+\n| lower(A) | lower(B) | lower(C) |\n+----------+----------+----------+\n| a        | b        | c        |\n+----------+----------+----------+\n1 row in set (0.03 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/String/lpad/","title":"LPAD()","text":""},{"location":"MatrixOne/Reference/Functions-and-Operators/String/lpad/#description","title":"Description","text":"<p>This function LPAD(str,len,padstr) returns the string str, left-padded with the string padstr to a length of len characters. If str is longer than len, the return value is shortened to len characters.</p>"},{"location":"MatrixOne/Reference/Functions-and-Operators/String/lpad/#syntax","title":"Syntax","text":"<pre><code>&gt; LPAD(str,len,padstr)\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/String/lpad/#arguments","title":"Arguments","text":"Arguments Description str Required.  The string to be padded. CHAR and VARCHAR both are supported. len Required. padstr Required. The string used to pad on the left. CHAR and VARCHAR both are supported."},{"location":"MatrixOne/Reference/Functions-and-Operators/String/lpad/#examples","title":"Examples","text":"<pre><code>&gt; drop table if exists t1;\n&gt; CREATE TABLE t1(Student_id INT,Student_name VARCHAR(100),Student_Class CHAR(20));\n&gt; INSERT INTO t1\nVALUES\n(1,'Ananya Majumdar', 'IX'),\n(2,'Anushka Samanta', 'X'),\n(3,'Aniket Sharma', 'XI'),\n(4,'Anik Das', 'X'),\n(5,'Riya Jain', 'IX'),\n(6,'Tapan Samanta', 'X');\n&gt; SELECT Student_id, Student_name,LPAD(Student_Class, 10, ' _') AS LeftPaddedString FROM t1;\n+------------+-----------------+------------------+\n| Student_id | Student_name    | LeftPaddedString |\n+------------+-----------------+------------------+\n|          1 | Ananya Majumdar |  _ _ _ _IX       |\n|          2 | Anushka Samanta |  _ _ _ _ X       |\n|          3 | Aniket Sharma   |  _ _ _ _XI       |\n|          4 | Anik Das        |  _ _ _ _ X       |\n|          5 | Riya Jain       |  _ _ _ _IX       |\n|          6 | Tapan Samanta   |  _ _ _ _ X       |\n+------------+-----------------+------------------+\n&gt; SELECT Student_id, lpad(Student_name,4,'new') AS LeftPaddedString FROM t1;\n+------------+------------------+\n| Student_id | LeftPaddedString |\n+------------+------------------+\n|          1 | Anan             |\n|          2 | Anus             |\n|          3 | Anik             |\n|          4 | Anik             |\n|          5 | Riya             |\n|          6 | Tapa             |\n+------------+------------------+\n&gt; SELECT Student_id, lpad(Student_name,-4,'new') AS LeftPaddedString FROM t1;\n+------------+------------------+\n| Student_id | LeftPaddedString |\n+------------+------------------+\n|          1 | NULL             |\n|          2 | NULL             |\n|          3 | NULL             |\n|          4 | NULL             |\n|          5 | NULL             |\n|          6 | NULL             |\n+------------+------------------+\n&gt; SELECT Student_id, lpad(Student_name,0,'new') AS LeftPaddedString FROM t1;\n+------------+------------------+\n| Student_id | LeftPaddedString |\n+------------+------------------+\n|          1 |                  |\n|          2 |                  |\n|          3 |                  |\n|          4 |                  |\n|          5 |                  |\n|          6 |                  |\n+------------+------------------+\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/String/ltrim/","title":"LTRIM()","text":""},{"location":"MatrixOne/Reference/Functions-and-Operators/String/ltrim/#description","title":"Description","text":"<p>This function LTRIM() returns the string with leading space characters removed.</p>"},{"location":"MatrixOne/Reference/Functions-and-Operators/String/ltrim/#syntax","title":"Syntax","text":"<pre><code>&gt; LTRIM(str)\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/String/ltrim/#arguments","title":"Arguments","text":"Arguments Description str Required.  CHAR and VARCHAR both are supported."},{"location":"MatrixOne/Reference/Functions-and-Operators/String/ltrim/#examples","title":"Examples","text":"<pre><code>&gt; drop table if exists t1;\n&gt; create table t1(a char(8),b varchar(10));\n&gt; insert into t1 values('  matrix',' matrixone');\n&gt; select ltrim(a),ltrim(b) from t1;\n\n+----------+-----------+\n| ltrim(a) | ltrim(b)  |\n+----------+-----------+\n| matrix   | matrixone |\n+----------+-----------+\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/String/md5/","title":"MD5()","text":""},{"location":"MatrixOne/Reference/Functions-and-Operators/String/md5/#function-description","title":"Function Description","text":"<p><code>MD5 ()</code> Function A widely used hash function that generates a 32-character long hexadecimal MD5 hash of a string. It converts an input message of arbitrary length into a 128-bit (16-byte) hash, usually represented as a 32-bit hexadecimal string. Returns NULL if the argument is NULL.</p>"},{"location":"MatrixOne/Reference/Functions-and-Operators/String/md5/#function-syntax","title":"Function syntax","text":"<pre><code>&gt; MD5(str)\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/String/md5/#parameter-interpretation","title":"Parameter interpretation","text":"Parameters Description str Required parameters. String to convert"},{"location":"MatrixOne/Reference/Functions-and-Operators/String/md5/#examples","title":"Examples","text":"<pre><code>mysql&gt; select md5(\"hello world\");\n+----------------------------------+\n| md5(hello world)                 |\n+----------------------------------+\n| 5eb63bbbe01eeed093cb22bb8f5acdc3 |\n+----------------------------------+\n1 row in set (0.00 sec)\n\nmysql&gt; select md5(null);\n+-----------+\n| md5(null) |\n+-----------+\n| NULL      |\n+-----------+\n1 row in set (0.00 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/String/oct/","title":"OCT(N)","text":""},{"location":"MatrixOne/Reference/Functions-and-Operators/String/oct/#description","title":"Description","text":"<p>This function <code>OCT(N)</code> returns a string representation of the octal value of N, where N is a longlong (BIGINT) number. Returns <code>NULL</code> if N is NULL.</p>"},{"location":"MatrixOne/Reference/Functions-and-Operators/String/oct/#syntax","title":"Syntax","text":"<pre><code>&gt; OCT(N)\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/String/oct/#arguments","title":"Arguments","text":"Arguments Description N Required. UINT Type"},{"location":"MatrixOne/Reference/Functions-and-Operators/String/oct/#examples","title":"Examples","text":"<pre><code>SELECT OCT(12);\n+---------+\n| oct(12) |\n+---------+\n| 14.0000 |\n+---------+\n1 row in set (0.00 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/String/repeat/","title":"REPEAT()","text":""},{"location":"MatrixOne/Reference/Functions-and-Operators/String/repeat/#description","title":"Description","text":"<p>Returns a string consisting of the string str repeated count times. If count is less than 1, returns an empty string. Returns <code>NULL</code> if str or count is <code>NULL</code>.</p>"},{"location":"MatrixOne/Reference/Functions-and-Operators/String/repeat/#syntax","title":"Syntax","text":"<pre><code>&gt; REPEAT(str,count)\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/String/repeat/#arguments","title":"Arguments","text":"Arguments Description str Required. The string to repeat. count Required. The number of times to repeat."},{"location":"MatrixOne/Reference/Functions-and-Operators/String/repeat/#examples","title":"Examples","text":"<pre><code>mysql&gt; SELECT repeat('abc', -1);\n+-----------------+\n| repeat(abc, -1) |\n+-----------------+\n|                 |\n+-----------------+\n1 row in set (0.00 sec)\n\nmysql&gt; SELECT repeat('abc', 1), repeat('abc', 2), repeat('abc', 3);\n+----------------+----------------+----------------+\n| repeat(abc, 1) | repeat(abc, 2) | repeat(abc, 3) |\n+----------------+----------------+----------------+\n| abc            | abcabc         | abcabcabc      |\n+----------------+----------------+----------------+\n1 row in set (0.00 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/String/reverse/","title":"REVERSE()","text":""},{"location":"MatrixOne/Reference/Functions-and-Operators/String/reverse/#description","title":"Description","text":"<p>Returns the string str with the order of the characters reversed.</p>"},{"location":"MatrixOne/Reference/Functions-and-Operators/String/reverse/#syntax","title":"Syntax","text":"<pre><code>&gt; REVERSE(str)\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/String/reverse/#arguments","title":"Arguments","text":"Arguments Description Str Required. both CHAR and VARCHAR are supported."},{"location":"MatrixOne/Reference/Functions-and-Operators/String/reverse/#examples","title":"Examples","text":"<pre><code>&gt; drop table if exists t1;\n&gt; create table t1(a varchar(12),c char(30));\n&gt; insert into t1 values('sdfad  ','2022-02-02 22:22:22');\n&gt; insert into t1 values('  sdfad  ','2022-02-02 22:22:22');\n&gt; insert into t1 values('adsf  sdfad','2022-02-02 22:22:22');\n&gt; insert into t1 values('    sdfad','2022-02-02 22:22:22');\n&gt; select reverse(a),reverse(c) from t1;\n+-------------+---------------------+\n| reverse(a)  | reverse(c)          |\n+-------------+---------------------+\n|   dafds     | 22:22:22 20-20-2202 |\n|   dafds     | 22:22:22 20-20-2202 |\n| dafds  fsda | 22:22:22 20-20-2202 |\n| dafds       | 22:22:22 20-20-2202 |\n+-------------+---------------------+\n&gt; select a from t1 where reverse(a) like 'daf%';\n+-------------+\n| a           |\n+-------------+\n| adsf  sdfad |\n|     sdfad   |\n+-------------+\n&gt; select reverse(a) reversea,reverse(reverse(a)) normala from t1;\n+-------------+-------------+\n| reversea    | normala     |\n+-------------+-------------+\n|   dafds     | sdfad       |\n|   dafds     |   sdfad     |\n| dafds  fsda | adsf  sdfad |\n| dafds       |     sdfad   |\n+-------------+-------------+\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/String/rpad/","title":"RPAD()","text":""},{"location":"MatrixOne/Reference/Functions-and-Operators/String/rpad/#description","title":"Description","text":"<p>This function RPAD(str,len,padstr) returns the string str, right-padded with the string padstr to a length of len characters. If str is longer than len, the return value is shortened to len characters.</p>"},{"location":"MatrixOne/Reference/Functions-and-Operators/String/rpad/#syntax","title":"Syntax","text":"<pre><code>&gt; RPAD(str,len,padstr)\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/String/rpad/#arguments","title":"Arguments","text":"Arguments Description str Required.  The string to be padded. CHAR and VARCHAR both are supported. len Required. padstr Required. The string used to pad on the right. CHAR and VARCHAR both are supported."},{"location":"MatrixOne/Reference/Functions-and-Operators/String/rpad/#examples","title":"Examples","text":"<pre><code>&gt; drop table if exists t1;\n&gt; CREATE TABLE t1(Student_id INT,Student_name VARCHAR(100),Student_Class CHAR(20));\n&gt; INSERT INTO t1\nVALUES\n(1,'Ananya Majumdar', 'IX'),\n(2,'Anushka Samanta', 'X'),\n(3,'Aniket Sharma', 'XI'),\n(4,'Anik Das', 'X'),\n(5,'Riya Jain', 'IX'),\n(6,'Tapan Samanta', 'X');\n&gt; SELECT Student_id, Student_name,RPAD(Student_Class, 10, ' _') AS LeftPaddedString FROM t1;\n+------------+-----------------+------------------+\n| Student_id | Student_name    | LeftPaddedString |\n+------------+-----------------+------------------+\n|          1 | Ananya Majumdar | IX _ _ _ _       |\n|          2 | Anushka Samanta | X _ _ _ _        |\n|          3 | Aniket Sharma   | XI _ _ _ _       |\n|          4 | Anik Das        | X _ _ _ _        |\n|          5 | Riya Jain       | IX _ _ _ _       |\n|          6 | Tapan Samanta   | X _ _ _ _        |\n+------------+-----------------+------------------+\n&gt; SELECT Student_id, rpad(Student_name,4,'new') AS LeftPaddedString FROM t1;\n+------------+------------------+\n| Student_id | LeftPaddedString |\n+------------+------------------+\n|          1 | Anan             |\n|          2 | Anus             |\n|          3 | Anik             |\n|          4 | Anik             |\n|          5 | Riya             |\n|          6 | Tapa             |\n+------------+------------------+\n&gt; SELECT Student_id, rpad(Student_name,-4,'new') AS LeftPaddedString FROM t1;\n+------------+------------------+\n| Student_id | LeftPaddedString |\n+------------+------------------+\n|          1 | NULL             |\n|          2 | NULL             |\n|          3 | NULL             |\n|          4 | NULL             |\n|          5 | NULL             |\n|          6 | NULL             |\n+------------+------------------+\n&gt; SELECT Student_id, rpad(Student_name,0,'new') AS LeftPaddedString FROM t1;\n+------------+------------------+\n| Student_id | LeftPaddedString |\n+------------+------------------+\n|          1 |                  |\n|          2 |                  |\n|          3 |                  |\n|          4 |                  |\n|          5 |                  |\n|          6 |                  |\n+------------+------------------+\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/String/rtrim/","title":"RTRIM()","text":""},{"location":"MatrixOne/Reference/Functions-and-Operators/String/rtrim/#description","title":"Description","text":"<p>This function RTRIM() returns the string with trailing space characters removed.</p>"},{"location":"MatrixOne/Reference/Functions-and-Operators/String/rtrim/#syntax","title":"Syntax","text":"<pre><code>&gt; RTRIM(str)\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/String/rtrim/#arguments","title":"Arguments","text":"Arguments Description str Required.  CHAR and VARCHAR both are supported."},{"location":"MatrixOne/Reference/Functions-and-Operators/String/rtrim/#examples","title":"Examples","text":"<pre><code>&gt; drop table if exists t1;\n&gt; create table t1(a char(8),b varchar(10));\n&gt; insert into t1 values('matrix  ','matrixone ');\n&gt; select rtrim(a),rtrim(b) from t1;\n\n+----------+-----------+\n| rtrim(a) | rtrim(b)  |\n+----------+-----------+\n| matrix   | matrixone |\n+----------+-----------+\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/String/sha1/","title":"SHA1()/SHA()","text":""},{"location":"MatrixOne/Reference/Functions-and-Operators/String/sha1/#function-description","title":"Function Description","text":"<p>The <code>SHA1()/SHA()</code> function is an encrypted hash function that calculates and returns the SHA-1 hash value for a given string. It converts an input message of any length into a fixed length (160 bits, or 20 bytes) hash value, typically expressed as 40 hexadecimal characters. Returns NULL if the argument is NULL.</p>"},{"location":"MatrixOne/Reference/Functions-and-Operators/String/sha1/#function-syntax","title":"Function syntax","text":"<pre><code>&gt; SHA1/SHA(str)\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/String/sha1/#parameter-interpretation","title":"Parameter interpretation","text":"Parameters Description str Required parameters. String to encrypt"},{"location":"MatrixOne/Reference/Functions-and-Operators/String/sha1/#examples","title":"Examples","text":"<pre><code>mysql&gt; select sha1(\"hello world\");\n+------------------------------------------+\n| sha1(hello world)                        |\n+------------------------------------------+\n| 2aae6c35c94fcfb415dbe95f408b9ce91ee846ed |\n+------------------------------------------+\n1 row in set (0.00 sec)\n\nmysql&gt; select sha(\"hello world\");\n+------------------------------------------+\n| sha(hello world)                         |\n+------------------------------------------+\n| 2aae6c35c94fcfb415dbe95f408b9ce91ee846ed |\n+------------------------------------------+\n1 row in set (0.00 sec)\n\nmysql&gt; select sha1(null);\n+------------+\n| sha1(null) |\n+------------+\n| NULL       |\n+------------+\n1 row in set (0.00 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/String/sha2/","title":"SHA2()","text":""},{"location":"MatrixOne/Reference/Functions-and-Operators/String/sha2/#function-description","title":"Function Description","text":"<p>The <code>SHA2()</code> encryption function is used to calculate the SHA2 hash of the input string. The first argument is the plaintext string to hash. The second parameter indicates the desired bit length of the result, which must be 224, 256, 384, 512, or 0 (equivalent to 256), corresponding to the SHA-224, SHA-256, SHA-384, and SHA-512 algorithms, respectively. Returns NULL if the argument is NULL or not a legal value.</p>"},{"location":"MatrixOne/Reference/Functions-and-Operators/String/sha2/#function-syntax","title":"Function syntax","text":"<pre><code>&gt; SHA2(str, hash_length)\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/String/sha2/#parameter-interpretation","title":"Parameter interpretation","text":"Parameters Description str Required parameters. The string hash_length necessary to calculate the hash value. Hash length."},{"location":"MatrixOne/Reference/Functions-and-Operators/String/sha2/#examples","title":"Examples","text":"<pre><code>mysql&gt; select sha2(\"hello world\", 384);\n+--------------------------------------------------------------------------------------------------+\n| sha2(hello world, 384)                                                                           |\n+--------------------------------------------------------------------------------------------------+\n| fdbd8e75a67f29f701a4e040385e2e23986303ea10239211af907fcbb83578b3e417cb71ce646efd0819dd8c088de1bd |\n+--------------------------------------------------------------------------------------------------+\n1 row in set (0.00 sec)\n\nmysql&gt; select sha2(null, 512);\n+-----------------+\n| sha2(null, 512) |\n+-----------------+\n| NULL            |\n+-----------------+\n1 row in set (0.00 sec)\n\nmysql&gt; select sha2(\"abc\", 99);\n+---------------+\n| sha2(abc, 99) |\n+---------------+\n| NULL          |\n+---------------+\n1 row in set (0.00 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/String/space/","title":"SPACE()","text":""},{"location":"MatrixOne/Reference/Functions-and-Operators/String/space/#description","title":"Description","text":"<p>SPACE(N) Returns a string consisting of N space characters.</p>"},{"location":"MatrixOne/Reference/Functions-and-Operators/String/space/#syntax","title":"Syntax","text":"<pre><code>&gt; SPACE(N)\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/String/space/#arguments","title":"Arguments","text":"Arguments Description N Required. UINT Type"},{"location":"MatrixOne/Reference/Functions-and-Operators/String/space/#examples","title":"Examples","text":"<pre><code>&gt; drop table if exists t1;\n&gt; CREATE TABLE t1\n(\nEmployee_name VARCHAR(100) NOT NULL,\nJoining_Date DATE NOT NULL\n);\n&gt; INSERT INTO t1\n(Employee_name, Joining_Date )\nVALUES\n('     Ananya Majumdar', '2000-01-11'),\n('   Anushka Samanta', '2002-11-10' ),\n('   Aniket Sharma ', '2005-06-11' ),\n('   Anik Das', '2008-01-21'  ),\n('  Riya Jain', '2008-02-01' ),\n('    Tapan Samanta', '2010-01-11' ),\n('   Deepak Sharma', '2014-12-01'  ),\n('   Ankana Jana', '2018-08-17'),\n('  Shreya Ghosh', '2020-09-10') ;\n&gt; INSERT INTO t1\n(Employee_name, Joining_Date ) values('     ','2014-12-01');\n&gt; select * from t1 where Employee_name=space(5);\n+---------------+--------------+\n| Employee_name | Joining_Date |\n+---------------+--------------+\n|               | 2014-12-01   |\n+---------------+--------------+\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/String/split_part/","title":"SPLIT_PART()","text":""},{"location":"MatrixOne/Reference/Functions-and-Operators/String/split_part/#description","title":"Description","text":"<p>The <code>SPLIT_PART()</code> function is used to split a string into multiple parts based on a given delimiter and returns the specified part.</p> <p>If the specified part (designated by the unsigned_integer parameter) exceeds the actual number of existing parts, <code>SPLIT_PART()</code> will return <code>NULL</code>.</p> <p><code>SPLIT_PART()</code> counts parts from left to right only. If unsigned_integer is a negative number, an error will occur.</p>"},{"location":"MatrixOne/Reference/Functions-and-Operators/String/split_part/#syntax","title":"Syntax","text":"<pre><code>&gt; SPLIT_PART(expr, delimiter, unsigned_integer)\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/String/split_part/#arguments","title":"Arguments","text":"Arguments Description expr Required. The string to be split. delimiter Required. The delimiter used to split the string. unsigned_integer Required. This is an integer specifying which part of the string to return. The first part is 1, the second part is 2, and so on."},{"location":"MatrixOne/Reference/Functions-and-Operators/String/split_part/#examples","title":"Examples","text":"<ul> <li>Example 1</li> </ul> <pre><code>-- Split the string 'axbxc' and use 'x' as the delimiter. This function will return the first part of the string 'axbxc'. Therefore, the result of executing this SQL statement is 'a' because 'a' is the first part of the string 'axbxc' split on the basis of the 'x' delimiter.\nmysql&gt; select split_part('axbxc','x',1);\n+-------------------------+\n| split_part(axbxc, x, 1) |\n+-------------------------+\n| a                       |\n+-------------------------+\n1 row in set (0.00 sec)\n</code></pre> <ul> <li>Example 2</li> </ul> <pre><code>-- Create a new table 't1' with three columns: 'a' (varchar type), 'b' (varchar type), and 'c' (int type).\ncreate table t1(a varchar,b varchar,c int);\n-- Insert multiple rows of data into the 't1' table\ninsert into t1 values('axbxc','x',1),('axbxcxd','x',2),('axbxcxd','x',3),('axbxcxd','xc',1),('axbxcxd','xc',2),('axbxcxd','xc',3),('axbxcxd','asas',1),('axbxcxd','asas',2),(null,'asas',3),('axbxcxd',null,3),('axbxcxd','asas',null),('axxx','x',1),('axxx','x',2);\n-- Query uses the split_part function to process each row in the 't1' table. For each row, it splits the value of the 'a' column into multiple parts (using the value of the 'b' column as the delimiter) and then returns the specified part (designated by the value of the 'c' column). For example, for the first row of data ('axbxc', 'x', 1), it returns 'a' because 'a' is the first part of the string 'axbxc' split on the basis of the 'x' delimiter.\nmysql&gt; select split_part(a,b,c) from t1;\n+---------------------+\n| split_part(a, b, c) |\n+---------------------+\n| a                   |\n| b                   |\n| c                   |\n| axb                 |\n| xd                  |\n| NULL                |\n| axbxcxd             |\n| NULL                |\n| NULL                |\n| NULL                |\n| NULL                |\n| a                   |\n| NULL                |\n+---------------------+\n13 rows in set (0.01 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/String/startswith/","title":"STARTSWITH()","text":""},{"location":"MatrixOne/Reference/Functions-and-Operators/String/startswith/#description","title":"Description","text":"<p>Returns 1 whether string starts with the specified prefix, otherwise it returns 0.This function is case sensitive.</p>"},{"location":"MatrixOne/Reference/Functions-and-Operators/String/startswith/#syntax","title":"Syntax","text":"<pre><code>&gt; STARTSWITH(str,prefix)\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/String/startswith/#arguments","title":"Arguments","text":"Arguments Description str Required.  CHAR and VARCHAR both are supported. prefix Required.  CHAR and VARCHAR both are supported."},{"location":"MatrixOne/Reference/Functions-and-Operators/String/startswith/#returned-values","title":"Returned Values","text":"<ul> <li>1, if the string starts with the specified prefix.</li> <li>0, if the string does not start with the specified prefix.</li> </ul>"},{"location":"MatrixOne/Reference/Functions-and-Operators/String/startswith/#examples","title":"Examples","text":"<pre><code>&gt; drop table if exists t1;\n&gt; create table t1(a int,b varchar(100),c char(20));\n&gt; insert into t1 values\n(1,'Ananya Majumdar', 'IX'),\n(2,'Anushka Samanta', 'X'),\n(3,'Aniket Sharma', 'XI'),\n(4,'Anik Das', 'X'),\n(5,'Riya Jain', 'IX'),\n(6,'Tapan Samanta', 'X');\n&gt; select a,startswith(b,'An') from t1;\n+------+-------------------+\n| a    | startswith(b, An) |\n+------+-------------------+\n|    1 |                 1 |\n|    2 |                 1 |\n|    3 |                 1 |\n|    4 |                 1 |\n|    5 |                 0 |\n|    6 |                 0 |\n+------+-------------------+\n&gt; select a,b,c from t1 where startswith(b,'An')=1 and startswith(c,'I')=1;\n+------+-----------------+------+\n| a    | b               | c    |\n+------+-----------------+------+\n|    1 | Ananya Majumdar | IX   |\n+------+-----------------+------+\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/String/substring-index/","title":"SUBSTRING_INDEX()","text":""},{"location":"MatrixOne/Reference/Functions-and-Operators/String/substring-index/#description","title":"Description","text":"<p>This function <code>SUBSTRING_INDEX()</code> returns the substring from string str before count occurrences of the delimiter delim.</p> <p>If count is positive, everything to the left of the final delimiter (counting from the left) is returned.</p> <p>If count is negative, everything to the right of the final delimiter (counting from the right) is returned. <code>SUBSTRING_INDEX()</code> performs a case-sensitive match when searching for delim.</p> <p><code>SUBSTRING_INDEX()</code> returns <code>NULL</code> if any of its arguments are <code>NULL</code>.</p>"},{"location":"MatrixOne/Reference/Functions-and-Operators/String/substring-index/#syntax","title":"Syntax","text":"<pre><code>&gt; SUBSTRING_INDEX(str,delim,count)\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/String/substring-index/#arguments","title":"Arguments","text":"Arguments Description str A string. delim A delimiter. count An integer indicating the number of occurrences of delim."},{"location":"MatrixOne/Reference/Functions-and-Operators/String/substring-index/#examples","title":"Examples","text":"<pre><code>mysql&gt; SELECT SUBSTRING_INDEX('www.mysql.com', '.', 2);\n+--------------------------------------+\n| substring_index(www.mysql.com, ., 2) |\n+--------------------------------------+\n| www.mysql                            |\n+--------------------------------------+\n1 row in set (0.03 sec)\n\nmysql&gt; select substring_index('xyz', 'abc', 9223372036854775808);\n+------------------------------------------------+\n| substring_index(xyz, abc, 9223372036854775808) |\n+------------------------------------------------+\n| xyz                                            |\n+------------------------------------------------+\n1 row in set (0.02 sec)\n\nmysql&gt; SELECT SUBSTRING_INDEX('www.mysql.com', '.', -2);\n+---------------------------------------+\n| substring_index(www.mysql.com, ., -2) |\n+---------------------------------------+\n| mysql.com                             |\n+---------------------------------------+\n1 row in set (0.02 sec)\n\nmysql&gt; SELECT SUBSTRING_INDEX(SUBSTRING_INDEX('192,168,8,203', ',', 2), ',',-1);\n+--------------------------------------------------------------+\n| substring_index(substring_index(192,168,8,203, ,, 2), ,, -1) |\n+--------------------------------------------------------------+\n| 168                                                          |\n+--------------------------------------------------------------+\n1 row in set (0.02 sec)\n\ncreate table test(a varchar(100), b varchar(20), c int);\ninsert into test values('www.mysql.com', '.', 0);\ninsert into test values('www.mysql.com', '.', 1);\ninsert into test values('www.mysql.com', '.', 2);\ninsert into test values('www.mysql.com', '.', 3);\ninsert into test values('www.mysql.com', '.', 9223372036854775808);\ninsert into test values('www.mysql.com', '.', -1);\ninsert into test values('www.mysql.com', '.', -2);\ninsert into test values('www.mysql.com', '.', -3);\nmysql&gt; select SUBSTRING_INDEX(a, b, c) from test;\n+--------------------------+\n| substring_index(a, b, c) |\n+--------------------------+\n|                          |\n| www                      |\n| www.mysql                |\n| www.mysql.com            |\n| com                      |\n| mysql.com                |\n| www.mysql.com            |\n+--------------------------+\n7 rows in set (0.02 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/String/substring/","title":"SUBSTRING()","text":""},{"location":"MatrixOne/Reference/Functions-and-Operators/String/substring/#description","title":"Description","text":"<p><code>SUBSTR()</code> and <code>MID()</code> are both synonyms of <code>SUBSTRING()</code>. The forms without a len argument return a substring from string str starting at position pos. The forms with a len argument return a substring len characters long from string str, starting at position pos.</p>"},{"location":"MatrixOne/Reference/Functions-and-Operators/String/substring/#syntax","title":"Syntax","text":"<pre><code>&gt; SUBSTRING(str,pos)\n&gt; SUBSTR(str,pos,len)\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/String/substring/#arguments","title":"Arguments","text":"Arguments Description str Required. CHAR and VARCHAR are both supported pos Required. len Optional."},{"location":"MatrixOne/Reference/Functions-and-Operators/String/substring/#examples","title":"Examples","text":"<pre><code>&gt; CREATE TABLE IF NOT EXISTS t1 (\npub_id varchar(8) COLLATE latin1_general_ci NOT NULL DEFAULT '',\npub_name varchar(50) COLLATE latin1_general_ci NOT NULL DEFAULT '',\npub_city varchar(25) COLLATE latin1_general_ci NOT NULL DEFAULT '',\ncountry varchar(25) COLLATE latin1_general_ci NOT NULL DEFAULT '',\ncountry_office varchar(25) COLLATE latin1_general_ci NOT NULL DEFAULT '',\nno_of_branch int NOT NULL DEFAULT 0,\nestd date NOT NULL DEFAULT '2000-01-01'\n);\n\n&gt; INSERT INTO t1 (pub_id, pub_name, pub_city, country, country_office, no_of_branch, estd) VALUES\n('P001', 'Jex Max Publication', 'New York', 'USA', 'New York', 15, '1969-12-25'),\n('P002', 'BPP Publication', 'Mumbai', 'India', 'New Delhi', 10, '1985-10-01'),\n('P003', 'New Harrold Publication', 'Adelaide', 'Australia', 'Sydney', 6, '1975-09-05'),\n('P004', 'Ultra Press Inc.', 'London', 'UK', 'London', 8, '1948-07-10'),\n('P005', 'Mountain Publication', 'Houstan', 'USA', 'Sun Diego', 25, '1975-01-01'),\n('P006', 'Summer Night Publication', 'New York', 'USA', 'Atlanta', 10, '1990-12-10'),\n('P007', 'Pieterson Grp. of Publishers', 'Cambridge', 'UK', 'London', 6, '1950-07-15'),\n('P008', 'Novel Publisher Ltd.', 'New Delhi', 'India', 'Bangalore', 10, '2000-01-01');\n\n&gt; SELECT pub_name, SUBSTR(pub_name,4,5) FROM t1 WHERE country='USA';\n+--------------------------+------------------------+\n| pub_name                 | substr(pub_name, 4, 5) |\n+--------------------------+------------------------+\n| Jex Max Publication      |  Max                   |\n| Mountain Publication     | ntain                  |\n| Summer Night Publication | mer N                  |\n+--------------------------+------------------------+\n3 rows in set (0.04 sec)\n\n&gt; SELECT pub_name, SUBSTR(pub_name,5) FROM t1 WHERE country='USA';\n+--------------------------+----------------------+\n| pub_name                 | substr(pub_name, 5)  |\n+--------------------------+----------------------+\n| Jex Max Publication      | Max Publication      |\n| Mountain Publication     | tain Publication     |\n| Summer Night Publication | er Night Publication |\n+--------------------------+----------------------+\n3 rows in set (0.03 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/String/to_base64/","title":"TO_BASE64()","text":""},{"location":"MatrixOne/Reference/Functions-and-Operators/String/to_base64/#function-description","title":"Function Description","text":"<p>The <code>TO_BASE64()</code> function is used to convert a string to a Base64 encoded string. If the argument is not a string, it is converted to a string before conversion. If the argument is NULL, the result is NULL.</p> <p>You can decode a Base64 encoded string using the <code>FROM_BASE64()</code> function.</p>"},{"location":"MatrixOne/Reference/Functions-and-Operators/String/to_base64/#function-syntax","title":"Function syntax","text":"<pre><code>&gt; TO_BASE64(str)\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/String/to_base64/#parameter-interpretation","title":"Parameter interpretation","text":"Parameters Description str Required parameters. To convert to a Base64 encoded string"},{"location":"MatrixOne/Reference/Functions-and-Operators/String/to_base64/#examples","title":"Examples","text":"<pre><code>mysql&gt; SELECT TO_BASE64('abc');\n+----------------+\n| to_base64(abc) |\n+----------------+\n| YWJj           |\n+----------------+\n1 row in set (0.00 sec)\n\nmysql&gt; SELECT TO_BASE64(255);\n+----------------+\n| to_base64(255) |\n+----------------+\n| MjU1           |\n+----------------+\n1 row in set (0.00 sec)\n\nmysql&gt; SELECT TO_BASE64(null);\n+-----------------+\n| to_base64(null) |\n+-----------------+\n| NULL            |\n+-----------------+\n1 row in set (0.01 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/String/trim/","title":"TRIM()","text":""},{"location":"MatrixOne/Reference/Functions-and-Operators/String/trim/#description","title":"Description","text":"<p>This function <code>TRIM()</code> returns the string str with all remstr prefixes or suffixes removed. If none of the specifiers BOTH, LEADING, or TRAILING is given, BOTH is assumed. remstr is optional and, if not specified, spaces are removed.</p> <p>This function is multibyte safe. It returns NULL if any of its arguments are NULL.</p>"},{"location":"MatrixOne/Reference/Functions-and-Operators/String/trim/#syntax","title":"Syntax","text":"<pre><code>&gt; TRIM([{BOTH | LEADING | TRAILING} [remstr] FROM] str), TRIM([remstr FROM] str)\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/String/trim/#arguments","title":"Arguments","text":"Arguments Description str Required. CHAR and VARCHAR are both supported"},{"location":"MatrixOne/Reference/Functions-and-Operators/String/trim/#examples","title":"Examples","text":"<pre><code>mysql&gt; select trim(' abc '), trim('abc '), trim(' abc'), trim('abc');\n+-------------+------------+------------+-----------+\n| trim( abc ) | trim(abc ) | trim( abc) | trim(abc) |\n+-------------+------------+------------+-----------+\n| abc         | abc        | abc        | abc       |\n+-------------+------------+------------+-----------+\n1 row in set (0.00 sec)\n\ndrop table if exists t1;\ncreate table t1(a varchar(100), b varchar(100));\ninsert into t1 values('abc', 'abc');\ninsert into t1 values('\u554aabc\u54e6', '\u554aabc\u54e6');\ninsert into t1 values('\u554a\u554ao', 'o');\ninsert into t1 values('\u554a\u554ao', '\u554a');\ninsert into t1 values('\u554a\u554ao', 'o\u554a');\nmysql&gt; select trim(both a from b) from t1;\n+---------------------+\n| trim(both a from b) |\n+---------------------+\n|                     |\n|                     |\n| o                   |\n| \u554a                  |\n| o\u554a                 |\n+---------------------+\n5 rows in set (0.00 sec)\n\nmysql&gt; select trim(leading a from b) from t1;\n+------------------------+\n| trim(leading a from b) |\n+------------------------+\n|                        |\n|                        |\n| o                      |\n| \u554a                     |\n| o\u554a                    |\n+------------------------+\n5 rows in set (0.01 sec)\n\nmysql&gt; select trim(trailing a from b) from t1;\n+-------------------------+\n| trim(trailing a from b) |\n+-------------------------+\n|                         |\n|                         |\n| o                       |\n| \u554a                      |\n| o\u554a                     |\n+-------------------------+\n5 rows in set (0.00 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/String/ucase/","title":"UCASE()","text":""},{"location":"MatrixOne/Reference/Functions-and-Operators/String/ucase/#function-description","title":"Function Description","text":"<p><code>UCASE()</code> is used to convert a given string to uppercase form, a synonym for <code>UPPER()</code>.</p>"},{"location":"MatrixOne/Reference/Functions-and-Operators/String/ucase/#function-syntax","title":"Function syntax","text":"<pre><code>&gt; UCASE(str)\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/String/ucase/#parameter-interpretation","title":"Parameter interpretation","text":"Parameters Description str Required parameters, alphabetic characters."},{"location":"MatrixOne/Reference/Functions-and-Operators/String/ucase/#examples","title":"Examples","text":"<pre><code>mysql&gt; select ucase('hello');\n+--------------+\n| ucase(hello) |\n+--------------+\n| HELLO        |\n+--------------+\n1 row in set (0.03 sec)\n\nmysql&gt; select ucase('a'),ucase('b'),ucase('c');\n+----------+----------+----------+\n| ucase(a) | ucase(b) | ucase(c) |\n+----------+----------+----------+\n| A        | B        | C        |\n+----------+----------+----------+\n1 row in set (0.03 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/String/unhex/","title":"UNHEX()","text":""},{"location":"MatrixOne/Reference/Functions-and-Operators/String/unhex/#description","title":"Description","text":"<p>For a string argument str, <code>UNHEX()</code> interprets each pair of characters in the argument as a hexadecimal number and converts it to the byte represented by the number. The return value is a binary string.</p> <p>The characters in the argument string must be legal hexadecimal digits: '0' .. '9', 'A' .. 'F', 'a' .. 'f'. If the argument contains any nonhexadecimal digits, or is itself NULL, the result is NULL.</p>"},{"location":"MatrixOne/Reference/Functions-and-Operators/String/unhex/#syntax","title":"Syntax","text":"<pre><code>&gt; UNHEX(str)\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/String/unhex/#arguments","title":"Arguments","text":"Arguments Description str Required. Legal hexadecimal string."},{"location":"MatrixOne/Reference/Functions-and-Operators/String/unhex/#examples","title":"Examples","text":"<pre><code>mysql&gt; SELECT UNHEX('4d6174726978204f726967696e');\n+-----------------------------------+\n| unhex(4d6174726978204f726967696e) |\n+-----------------------------------+\n| Matrix Origin                     |\n+-----------------------------------+\n1 row in set (0.00 sec)\n\nmysql&gt; select unhex(NULL);\n+-------------+\n| unhex(null) |\n+-------------+\n| NULL        |\n+-------------+\n1 row in set (0.00 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/String/upper/","title":"UPPER()","text":""},{"location":"MatrixOne/Reference/Functions-and-Operators/String/upper/#function-description","title":"Function Description","text":"<p><code>UPPER()</code> is used to convert a given string to uppercase.</p>"},{"location":"MatrixOne/Reference/Functions-and-Operators/String/upper/#function-syntax","title":"Function syntax","text":"<pre><code>&gt; UPPER(str)\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/String/upper/#parameter-interpretation","title":"Parameter interpretation","text":"Parameters Description str Required parameters, alphabetic characters."},{"location":"MatrixOne/Reference/Functions-and-Operators/String/upper/#examples","title":"Examples","text":"<pre><code>mysql&gt; select upper('hello');\n+--------------+\n| upper(hello) |\n+--------------+\n| HELLO        |\n+--------------+\n1 row in set (0.03 sec)\n\nmysql&gt; select upper('a'),upper('b'),upper('c');\n+----------+----------+----------+\n| upper(a) | upper(b) | upper(c) |\n+----------+----------+----------+\n| A        | B        | C        |\n+----------+----------+----------+\n1 row in set (0.03 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/String/Regular-Expressions/Regular-Expression-Functions-Overview/","title":"Regular Expressions Overview","text":"<p>Regular expressions provide a powerful method for matching text patterns. You can use simple wildcards (such as %, _) in LIKE statements, but regular expressions offer more flexibility and matching options.</p>"},{"location":"MatrixOne/Reference/Functions-and-Operators/String/Regular-Expressions/Regular-Expression-Functions-Overview/#scenarios","title":"Scenarios","text":"<p>Regular expressions can perform complex string matching and manipulation. Here are some common use cases:</p> <ul> <li> <p>Data Validation: Regular expressions can validate whether data complies with a specific format, such as checking whether a field contains a valid email address, phone number, or social security number. For example, you can use a regular expression to find all email addresses that do not conform to the standard format:</p> <pre><code>SELECT email\nFROM users\nWHERE email NOT REGEXP '^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\\\.[A-Za-z]{2,}$';\n</code></pre> </li> <li> <p>Data Filtering: Regular expressions can be used to search for data that contains or does not contain specific patterns. For example, if you want to find all phone numbers that start with a specific prefix, you can use a regular expression to match these numbers:</p> <pre><code>SELECT phone_number\nFROM users\nWHERE phone_number REGEXP '^180';\n</code></pre> </li> <li> <p>Data Cleaning: Regular expressions are also instrumental in data cleaning. For example, you may need to clear special characters and spaces or extract numbers from strings; regular expressions can quickly implement these functions:</p> <pre><code>SELECT REGEXP_REPLACE(name, '[^a-zA-Z]', '')\nFROM users;\n</code></pre> <p>This SQL will return the result of all non-alphabetical characters in the name field being replaced.</p> </li> <li> <p>Text Analysis: If you are conducting text analysis, regular expressions can help you find specific words or phrases in the text and can even be used for certain forms of natural language processing.</p> </li> </ul>"},{"location":"MatrixOne/Reference/Functions-and-Operators/String/Regular-Expressions/Regular-Expression-Functions-Overview/#special-characters","title":"Special Characters","text":"<p>Regular expressions use POSIX (Portable Operating System Interface) extended regular expressions. Here are some special characters to note:</p> Character Explanation <code>.</code> Matches any single character (except a newline) <code>*</code> Indicates the preceding element can be repeated any number of times (including zero times) <code>+</code> Indicates the preceding element can be repeated one or more times. <code>?</code> Indicates the primary element can be repeated zero or once. <code>{n}</code> Indicates the primary element can be repeated n times. <code>{n,}</code> Indicates the primary element can be repeated n times or more. <code>{n,m}</code> Indicates the primary element can be repeated from n to m times. <code>^</code> Indicates matching the beginning of the string. <code>$</code> Indicates matching the end of the string. <code>[abc]</code> Indicates matching a, b, or c. <code>[^abc]</code> Indicates matching any character that is not a, b, or c. <code>(abc|def)</code> Indicates matching abc or def. <code>\\d</code> Indicates matching numbers <code>\\s</code> Indicates matching whitespace characters <code>\\w</code> Indicates matching word characters <code>\\D</code>, <code>\\S</code> and <code>\\W</code> Indicate matching opposite character sets <p>Note</p> <p>In regular expressions, these special characters need to be escaped using <code>\\</code>; for example, <code>\\\\.</code> indicates matching an actual <code>.</code> character, not any character.</p> <p>MatrixOne's regular expressions are case-sensitive by default. If you want to perform case-insensitive matching, you can use syntax like <code>REGEXP_LIKE(column, pattern, 'i')</code>. Where <code>i</code> indicates case insensitivity.</p>"},{"location":"MatrixOne/Reference/Functions-and-Operators/String/Regular-Expressions/Regular-Expression-Functions-Overview/#reference","title":"Reference","text":"<p>List of Regular Expression Functions</p> Name Definition NOT REGEXP Negation of REGEXP REGEXP_INSTR() Starting index of substring matching regular expression REGEXP_LIKE() Whether string matches regular expression REGEXP_REPLACE() Replace substring matching regular expression REGEXP_SUBSTR() Return substring matching regular expression"},{"location":"MatrixOne/Reference/Functions-and-Operators/String/Regular-Expressions/not-regexp/","title":"NOT REGEXP","text":""},{"location":"MatrixOne/Reference/Functions-and-Operators/String/Regular-Expressions/not-regexp/#description","title":"Description","text":"<p><code>NOT REGEXP</code> is used to test whether a string does not match a specified regular expression.</p> <p>If <code>column_name</code> does not match <code>pattern</code>, it returns <code>TRUE</code>. If it matches, it returns <code>FALSE</code>.</p>"},{"location":"MatrixOne/Reference/Functions-and-Operators/String/Regular-Expressions/not-regexp/#syntax","title":"Syntax","text":"<pre><code>&gt; column_name NOT REGEXP pattern\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/String/Regular-Expressions/not-regexp/#explanations","title":"Explanations","text":"<ul> <li> <p><code>column_name</code> is the column to match.</p> </li> <li> <p><code>pattern</code> is the regular expression to apply.</p> </li> </ul>"},{"location":"MatrixOne/Reference/Functions-and-Operators/String/Regular-Expressions/not-regexp/#examples","title":"Examples","text":"<pre><code>CREATE TABLE example (\nid INT AUTO_INCREMENT,\ntext VARCHAR(255),\nPRIMARY KEY(id)\n);\n\n\nINSERT INTO example (text)\nVALUES ('Hello1'),\n('Hello2'),\n('World'),\n('HelloWorld'),\n('Hello_World'),\n('example'),\n('example1'),\n('example2');\n\nmysql&gt; SELECT * FROM example WHERE text NOT REGEXP '[0-9]';\n+------+-------------+\n| id   | text        |\n+------+-------------+\n|    3 | World       |\n|    4 | HelloWorld  |\n|    5 | Hello_World |\n|    6 | example     |\n+------+-------------+\n4 rows in set (0.00 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/String/Regular-Expressions/regexp-instr/","title":"REGEXP_INSTR()","text":""},{"location":"MatrixOne/Reference/Functions-and-Operators/String/Regular-Expressions/regexp-instr/#description","title":"Description","text":"<p><code>REGEXP_INSTR()</code> returns the starting position in the string of the matched regular expression pattern. If no match is found, the function returns 0.</p>"},{"location":"MatrixOne/Reference/Functions-and-Operators/String/Regular-Expressions/regexp-instr/#syntax","title":"Syntax","text":"<pre><code>&gt; REGEXP_INSTR(expr, pat[, pos[, occurrence[, return_option[, match_type]]]])\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/String/Regular-Expressions/regexp-instr/#explanations","title":"Explanations","text":"<ul> <li> <p><code>expr</code> is the string to match.</p> </li> <li> <p><code>pat</code> is the regular expression to match in the string.</p> </li> <li> <p><code>pos</code>: The position in expr at which to start the search. If omitted, the default is 1.</p> </li> <li> <p><code>occurrence</code>: Which occurrence of a match to replace. If omitted, the default is 0 (which means replace all occurrences).</p> </li> <li> <p><code>return_option</code>: This is an optional parameter specifying whether the returned position is where the pattern starts or ends. If 0 or omitted, the function returns the position at which the pattern begins. If 1, the function returns the position after the position where the pattern ends.</p> </li> <li> <p><code>match_type</code>: The optional <code>match_type</code> argument is a string that may contain any or all the following characters specifying how to perform matching:</p> <ul> <li><code>'c'</code>: Case-sensitive matching by default.</li> <li><code>'i'</code>: Case-insensitive matching.</li> <li><code>'n'</code>: The <code>.</code> character matches line terminators. The default is for <code>.</code> matching to stop at the end of a line.</li> <li><code>'m'</code>: Multiple-line mode. Recognize line terminators within the string. The default behavior is to match line terminators only at the start and end of the string expression.</li> <li><code>'u'</code>: Unix-only line endings. Only the newline character is recognized as a line ending by the ., ^, and $ match operators.</li> </ul> </li> </ul>"},{"location":"MatrixOne/Reference/Functions-and-Operators/String/Regular-Expressions/regexp-instr/#examples","title":"Examples","text":"<pre><code>mysql&gt; SELECT REGEXP_INSTR('Hello, my number is 12345.', '[0-9]+');\n+--------------------------------------------------+\n| regexp_instr(Hello, my number is 12345., [0-9]+) |\n+--------------------------------------------------+\n|                                               21 |\n+--------------------------------------------------+\n1 row in set (0.00 sec)\n\nmysql&gt; SELECT REGEXP_INSTR('apple', 'z+');\n+-------------------------+\n| regexp_instr(apple, z+) |\n+-------------------------+\n|                       0 |\n+-------------------------+\n1 row in set (0.00 sec)\n\nmysql&gt; SELECT REGEXP_INSTR('Hello, World!', 'World');\n+------------------------------------+\n| regexp_instr(Hello, World!, World) |\n+------------------------------------+\n|                                  8 |\n+------------------------------------+\n1 row in set (0.00 sec)\n\nmysql&gt; SELECT REGEXP_INSTR('Hello, World! World!', 'World', 1, 2);\n+-------------------------------------------------+\n| regexp_instr(Hello, World! World!, World, 1, 2) |\n+-------------------------------------------------+\n|                                              15 |\n+-------------------------------------------------+\n1 row in set (0.00 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/String/Regular-Expressions/regexp-like/","title":"REGEXP_LIKE()","text":""},{"location":"MatrixOne/Reference/Functions-and-Operators/String/Regular-Expressions/regexp-like/#description","title":"Description","text":"<p>Returns <code>TRUE</code> if the string expr matches the regular expression specified by the pattern pat, <code>FALSE</code> otherwise. If expr or pat is <code>NULL</code>, the return value is <code>NULL</code>.</p> <p><code>REGEXP</code> and <code>RLIKE</code> are synonyms for <code>REGEXP_LIKE()</code>.</p>"},{"location":"MatrixOne/Reference/Functions-and-Operators/String/Regular-Expressions/regexp-like/#syntax","title":"Syntax","text":"<pre><code>&gt; REGEXP_LIKE(expr, pat[, match_type])\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/String/Regular-Expressions/regexp-like/#explanations","title":"Explanations","text":"<ul> <li> <p><code>expr</code> is the string to search for.</p> </li> <li> <p><code>pat</code> is a regular expression to look for in the string.</p> </li> <li> <p><code>match_type</code>: The optional <code>match_type</code> argument is a string that may contain any or all the following characters specifying how to perform matching:</p> <ul> <li><code>'c'</code>: Case-sensitive matching by default.</li> <li><code>'i'</code>: Case-insensitive matching.</li> <li><code>'n'</code>: The <code>.</code> character matches line terminators. The default is for <code>.</code> matching to stop at the end of a line.</li> <li><code>'m'</code>: Multiple-line mode. Recognize line terminators within the string. The default behavior is to match line terminators only at the start and end of the string expression.</li> <li><code>'u'</code>: Unix-only line endings. Only the newline character is recognized as a line ending by the ., ^, and $ match operators.</li> </ul> </li> </ul>"},{"location":"MatrixOne/Reference/Functions-and-Operators/String/Regular-Expressions/regexp-like/#examples","title":"Examples","text":"<pre><code>mysql&gt; SELECT REGEXP_INSTR('Hello, my number is 12345.', '[0-9]+');\n+--------------------------------------------------+\n| regexp_instr(Hello, my number is 12345., [0-9]+) |\n+--------------------------------------------------+\n|                                               21 |\n+--------------------------------------------------+\n1 row in set (0.00 sec)\n\nmysql&gt; SELECT REGEXP_INSTR('apple', 'z+');\n+-------------------------+\n| regexp_instr(apple, z+) |\n+-------------------------+\n|                       0 |\n+-------------------------+\n1 row in set (0.00 sec)\n\nmysql&gt; SELECT REGEXP_LIKE('CamelCase', 'CAMELCASE');\n+-----------------------------------+\n| regexp_like(CamelCase, CAMELCASE) |\n+-----------------------------------+\n| false                             |\n+-----------------------------------+\n1 row in set (0.01 sec)\n\nmysql&gt; SELECT REGEXP_LIKE('CamelCase', 'CAMELCASE', 'i');\n+--------------------------------------+\n| regexp_like(CamelCase, CAMELCASE, i) |\n+--------------------------------------+\n| true                                 |\n+--------------------------------------+\n1 row in set (0.01 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/String/Regular-Expressions/regexp-replace/","title":"REGEXP_REPLACE()","text":""},{"location":"MatrixOne/Reference/Functions-and-Operators/String/Regular-Expressions/regexp-replace/#description","title":"Description","text":"<p><code>REGEXP_REPLACE()</code> is used to replace a string matching a given regular expression pattern with the specified new string.</p>"},{"location":"MatrixOne/Reference/Functions-and-Operators/String/Regular-Expressions/regexp-replace/#syntax","title":"Syntax","text":"<pre><code>&gt; REGEXP_REPLACE(expr, pat, repl[, pos[, occurrence[, match_type]]])\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/String/Regular-Expressions/regexp-replace/#explanations","title":"Explanations","text":"<ul> <li> <p><code>expr</code> is the string to replace.</p> </li> <li> <p><code>pat</code> This is a regular expression, the function will find all strings that match this pattern.</p> </li> <li> <p><code>repl</code> is the replacement string used to replace the found matching string.</p> </li> <li> <p><code>pos</code>: The position in expr at which to start the search. If omitted, the default is 1.</p> </li> <li> <p><code>occurrence</code>: Which occurrence of a match to replace. If omitted, the default is 0 (which means replace all occurrences).</p> </li> <li> <p><code>match_type</code>: The optional <code>match_type</code> argument is a string that may contain any or all the following characters specifying how to perform matching:</p> <ul> <li><code>'c'</code>: Case-sensitive matching by default.</li> <li><code>'i'</code>: Case-insensitive matching.</li> <li><code>'n'</code>: The <code>.</code> character matches line terminators. The default is for <code>.</code> matching to stop at the end of a line.</li> <li><code>'m'</code>: Multiple-line mode. Recognize line terminators within the string. The default behavior is to match line terminators only at the start and end of the string expression.</li> <li><code>'u'</code>: Unix-only line endings. Only the newline character is recognized as a line ending by the ., ^, and $ match operators.</li> </ul> </li> </ul>"},{"location":"MatrixOne/Reference/Functions-and-Operators/String/Regular-Expressions/regexp-replace/#examples","title":"Examples","text":"<pre><code>mysql&gt; SELECT REGEXP_REPLACE('Hello, World!', 'World', 'Universe');\n+------------------------------------------------+\n| regexp_replace(Hello, World!, World, Universe) |\n+------------------------------------------------+\n| Hello, Universe!                               |\n+------------------------------------------------+\n1 row in set (0.00 sec)\n\nmysql&gt; SELECT REGEXP_REPLACE('Cat Dog Cat Dog Cat','Cat', 'Tiger') 'Result';\n+---------------------------+\n| Result                    |\n+---------------------------+\n| Tiger Dog Tiger Dog Tiger |\n+---------------------------+\n1 row in set (0.01 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/String/Regular-Expressions/regexp-substr/","title":"REGEXP_SUBSTR()","text":""},{"location":"MatrixOne/Reference/Functions-and-Operators/String/Regular-Expressions/regexp-substr/#description","title":"Description","text":"<p><code>REGEXP_SUBSTR()</code> is used to return the substring of the string <code>expr</code> that matches the regular expression pattern <code>pat</code>.</p>"},{"location":"MatrixOne/Reference/Functions-and-Operators/String/Regular-Expressions/regexp-substr/#syntax","title":"Syntax","text":"<pre><code>&gt; REGEXP_SUBSTR(expr, pat[, pos[, occurrence[, match_type]]])\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/String/Regular-Expressions/regexp-substr/#explanations","title":"Explanations","text":"<ul> <li> <p><code>expr</code>: This is the original string in which to look for matches.</p> </li> <li> <p><code>pat</code>: This is a regular expression pattern, the function will look for strings that match this pattern.</p> </li> <li> <p><code>pos</code>: The position in expr at which to start the search. If omitted, the default is 1.</p> </li> <li> <p><code>occurrence</code>: Which occurrence of a match to replace. If omitted, the default is 0 (which means replace all occurrences).</p> </li> <li> <p><code>match_type</code>: The optional <code>match_type</code> argument is a string that may contain any or all the following characters specifying how to perform matching:</p> <ul> <li><code>'c'</code>: Case-sensitive matching by default.</li> <li><code>'i'</code>: Case-insensitive matching.</li> <li><code>'n'</code>: The <code>.</code> character matches line terminators. The default is for <code>.</code> matching to stop at the end of a line.</li> <li><code>'m'</code>: Multiple-line mode. Recognize line terminators within the string. The default behavior is to match line terminators only at the start and end of the string expression.</li> <li><code>'u'</code>: Unix-only line endings. Only the newline character is recognized as a line ending by the ., ^, and $ match operators.</li> </ul> </li> </ul>"},{"location":"MatrixOne/Reference/Functions-and-Operators/String/Regular-Expressions/regexp-substr/#examples","title":"Examples","text":"<pre><code>mysql&gt; SELECT REGEXP_SUBSTR('1a 2b 3c', '[0-9]a');\n+---------------------------------+\n| regexp_substr(1a 2b 3c, [0-9]a) |\n+---------------------------------+\n| 1a                              |\n+---------------------------------+\n1 row in set (0.00 sec)\n\nmysql&gt; SELECT REGEXP_SUBSTR('Lend for land', '^C') Result;\n+--------+\n| Result |\n+--------+\n| NULL   |\n+--------+\n1 row in set (0.00 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Table/unnest/","title":"UNNEST()","text":""},{"location":"MatrixOne/Reference/Functions-and-Operators/Table/unnest/#description","title":"Description","text":"<p>The <code>UNNEST</code> function is used to expand the column or parameter of the array type in the JSON type data into a table. It splits the elements in the array in the JSON-type data into individual rows so that the array elements can be processed individually or joined with other tables.</p> <p>When given an empty array, the <code>UNNEST</code> function returns an empty list because there are no additional elements.</p> <p>When a <code>NULL</code> value is entered, the <code>UNNEST</code> function returns an empty table because <code>NULL</code> is not a valid array.</p>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Table/unnest/#syntax","title":"Syntax","text":"<pre><code>&gt; UNNEST(array_expression)\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Table/unnest/#arguments","title":"Arguments","text":"Arguments Description array_expression Required. It is an array expression that can be an array column, an array constant, or the return value of an array function."},{"location":"MatrixOne/Reference/Functions-and-Operators/Table/unnest/#examples","title":"Examples","text":"<ul> <li>Example 1:</li> </ul> <pre><code>-- Expand a string array containing JSON objects, '{\"a\":1}' is a string array containing a single element. This element is a string representing a JSON object.\n&gt; select * from unnest('{\"a\":1}') u;\n+----------------+------+------+------+-------+-------+----------+\n| col            | seq  | key  | path | index | value | this     |\n+----------------+------+------+------+-------+-------+----------+\n| UNNEST_DEFAULT |    0 | a    | $.a  |  NULL | 1     | {\"a\": 1} |\n+----------------+------+------+------+-------+-------+----------+\n1 row in set (0.00 sec)\n\n-- Expand a string array '[1,2,3]' containing integers, and use the alias u to represent the expanded columns.\n&gt; select * from unnest('[1,2,3]') u;\n+----------------+------+------+------+-------+-------+-----------+\n| col            | seq  | key  | path | index | value | this      |\n+----------------+------+------+------+-------+-------+-----------+\n| UNNEST_DEFAULT |    0 | NULL | $[0] |     0 | 1     | [1, 2, 3] |\n| UNNEST_DEFAULT |    0 | NULL | $[1] |     1 | 2     | [1, 2, 3] |\n| UNNEST_DEFAULT |    0 | NULL | $[2] |     2 | 3     | [1, 2, 3] |\n+----------------+------+------+------+-------+-------+-----------+\n3 rows in set (0.00 sec)\n\n-- Expands a string array '[1,2,3]' containing integers and selects the first element of the array to return as part of the result set. '$[0]' is a path expression specifying the array elements to select, and true is a boolean indicating whether to return a path and uses the alias u for expanded columns.\n&gt; select * from unnest('[1,2,3]','$[0]',true) u;\n+----------------+------+------+------+-------+-------+------+\n| col            | seq  | key  | path | index | value | this |\n+----------------+------+------+------+-------+-------+------+\n| UNNEST_DEFAULT |    0 | NULL | $[0] |  NULL | NULL  | 1    |\n+----------------+------+------+------+-------+-------+------+\n1 row in set (0.00 sec)\n</code></pre> <ul> <li>Example 2:</li> </ul> <pre><code>create table t1 (a json,b int);\ninsert into t1 values ('{\"a\":1,\"b\":[{\"c\":2,\"d\":3},false,4],\"e\":{\"f\":true,\"g\":[null,true,1.1]}}',1);\ninsert into t1 values ('[1,true,false,null,\"aaa\",1.1,{\"t\":false}]',2);\n&gt; select * from t1;\n+---------------------------------------------------------------------------------------+------+\n| a                                                                                     | b    |\n+---------------------------------------------------------------------------------------+------+\n| {\"a\": 1, \"b\": [{\"c\": 2, \"d\": 3}, false, 4], \"e\": {\"f\": true, \"g\": [null, true, 1.1]}} |    1 |\n| [1, true, false, null, \"aaa\", 1.1, {\"t\": false}]                                      |    2 |\n+---------------------------------------------------------------------------------------+------+\n2 rows in set (0.00 sec)\n\n-- Expand the elements of array t1.a from table t1 and select the expanded elements to return as part of the result set. \"$a\" is a path expression specifying the array elements to select; true is a Boolean value indicating whether to return the path; use f.* to select all columns after expansion; f is an alias for the UNNEST function, representing expanded the result of.\nmysql&gt; select f.* from t1,unnest(t1.a, \"$.a\", true) as f;\n+------+------+------+------+-------+-------+------+\n| col  | seq  | key  | path | index | value | this |\n+------+------+------+------+-------+-------+------+\n| t1.a |    0 | NULL | $.a  |  NULL | NULL  | 1    |\n| t1.a |    0 | NULL | $.a  |  NULL | NULL  | 1    |\n+------+------+------+------+-------+-------+------+\n2 rows in set (0.00 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Vector/arithmetic/","title":"Arithmetic operators","text":"<p>MatrixOne supports basic arithmetic operators such as addition, subtraction, multiplication, and division between vectors or between vectors and scalars. These operators perform element-by-element arithmetic and return a new vector.</p> <p>Note</p> <p>Subtraction (<code>-</code>), multiplication (<code>*</code>), and division (<code>/</code>) are all similar to addition examples and will not be repeated.</p>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Vector/arithmetic/#add","title":"Add","text":""},{"location":"MatrixOne/Reference/Functions-and-Operators/Vector/arithmetic/#function-description","title":"Function Description","text":"<p><code>+</code> is used to add two elements together.</p>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Vector/arithmetic/#function-syntax","title":"Function syntax","text":"<pre><code>&gt; SELECT para1 + para2\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Vector/arithmetic/#examples","title":"Examples","text":"<pre><code>drop table if exists vec_table;\ncreate table vec_table(a int, b vecf32(3), c vecf64(3));\ninsert into vec_table values(1, \"[1,2,3]\", \"[4,5,6]\");\nmysql&gt; select * from vec_table;\n+------+-----------+-----------+\n| a    | b         | c         |\n+------+-----------+-----------+\n|    1 | [1, 2, 3] | [4, 5, 6] |\n+------+-----------+-----------+\n1 row in set (0.00 sec)\n\nmysql&gt; select b + \"[1,2,3]\" from vec_table;\n+-------------+\n| b + [1,2,3] |\n+-------------+\n| [2, 4, 6]   |\n+-------------+\n1 row in set (0.00 sec)\n\nmysql&gt; select b + 1 from vec_table;\n+-----------+\n| b + 1     |\n+-----------+\n| [2, 3, 4] |\n+-----------+\n1 row in set (0.01 sec)\n\nmysql&gt; select cast(\"[1,2,3]\" as vecf32(3)) + 5.0;\n+----------------------------------+\n| cast([1,2,3] as vecf32(3)) + 5.0 |\n+----------------------------------+\n| [6, 7, 8]                        |\n+----------------------------------+\n1 row in set (0.00 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Vector/arithmetic/#restrictions","title":"Restrictions","text":"<ul> <li>When two vector type parameters are added, the dimensions of the vector should be the same.</li> <li>If two vector type parameters are added, of type vecf32 and vecf64, the result is converted to vecf64.</li> <li>When vector type and scalar type data are subtracted, vector type data needs to be subtracted.</li> </ul>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Vector/arithmetic/#divide","title":"Divide","text":""},{"location":"MatrixOne/Reference/Functions-and-Operators/Vector/arithmetic/#function-description_1","title":"Function Description","text":"<p><code>/</code> Used to divide two vector elements.</p>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Vector/arithmetic/#function-syntax_1","title":"Function syntax","text":"<pre><code>&gt; SELECT para1 / para2\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Vector/arithmetic/#examples_1","title":"Examples","text":"<pre><code>drop table if exists vec_table;\ncreate table vec_table(a int, b vecf32(3), c vecf64(3));\ninsert into vec_table values(1, \"[1,2,3]\", \"[4,5,6]\");\nmysql&gt; select * from vec_table;\n+------+-----------+-----------+\n| a    | b         | c         |\n+------+-----------+-----------+\n|    1 | [1, 2, 3] | [4, 5, 6] |\n+------+-----------+-----------+\n1 row in set (0.00 sec)\n\nmysql&gt; select b/b from vec_table;\n+-----------+\n| b / b     |\n+-----------+\n| [1, 1, 1] |\n+-----------+\n1 row in set (0.00 sec)\n\nmysql&gt; select cast(\"[1,2,3]\" as vecf32(3)) / b from vec_table;;\n+--------------------------------+\n| cast([1,2,3] as vecf32(3)) / b |\n+--------------------------------+\n| [1, 1, 1]                      |\n+--------------------------------+\n1 row in set (0.00 sec)\n\nmysql&gt; select b/2 from vec_table;\n+---------------+\n| b / 2         |\n+---------------+\n| [0.5, 1, 1.5] |\n+---------------+\n1 row in set (0.00 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Vector/arithmetic/#restrictions_1","title":"Restrictions","text":"<ul> <li>The denominator element is not allowed to be 0, otherwise an error is generated.</li> <li>The dimension should be the same when both parameters are vector types.</li> <li>If two vector type parameters are added, of type vecf32 and vecf64, the result is converted to vecf64.</li> <li>When vector type and scalar type data are divided, vector type data needs to be divisible.</li> </ul>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Vector/cluster_centers/","title":"CLUSTER_CENTERS","text":""},{"location":"MatrixOne/Reference/Functions-and-Operators/Vector/cluster_centers/#function-description","title":"Function Description","text":"<p>The <code>CLUSTER_CENTERS()</code> function can be used to determine the K cluster centers of a vector column. Returns a row of JSON array strings containing all cluster centers.</p>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Vector/cluster_centers/#syntax-structure","title":"Syntax structure","text":"<pre><code>SELECT cluster_centers(col kmeans 'k, op_type, init_type, normalize')  FROM tbl;\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Vector/cluster_centers/#parameter-interpretation","title":"Parameter interpretation","text":"Parameters Description col Required. To determine the vector columns of the clustering centers. k Required. The number of clusters into which the dataset is to be divided, greater than 0 and less than or equal to the total number of rows. op_type Required. The distance function to be used during the clustering calculation. Currently vector_l2_ops is supported. init_type Required. The initialized clustering center algorithm to be used. Currently we support random and kmeansplusplus (K-means++). normalize Required. Boolean value, the clustering algorithm to use, true for Spherical Kmeans, false for Regular Kmeans."},{"location":"MatrixOne/Reference/Functions-and-Operators/Vector/cluster_centers/#examples","title":"Examples","text":"<pre><code>drop table if exists points;\nCREATE TABLE points (id int auto_increment PRIMARY KEY,coordinate vecf32(2));\ninsert into points(coordinate) VALUES\n(\"[-7.68905443,6.62034649]\"),\n(\"[-9.57651383,-6.93440446]\"),\n(\"[6.82968177,1.1648714]\"),\n(\"[-2.90130578,7.55077118]\"),\n(\"[-5.67841327,-7.28818497]\"),\n(\"[-6.04929137,-7.73619342]\"),\n(\"[-6.27824322,7.22746302]\");\nSET GLOBAL experimental_ivf_index = 1;--The parameter experimental_ivf_index needs to be set to 1 (default 0) to use vector indexes.\n--create index idx_t1 using ivfflat on points(coordinate)  lists=1 op_type \"vector_l2_ops\";\n\n-- Each point represents its coordinates on the x and y axes, querying the clustering centers, using Regular Kmeans\n--K-means++\nmysql&gt;  SELECT cluster_centers(coordinate kmeans '2,vector_l2_ops,kmeansplusplus,false') AS centers FROM points;\n+----------------------------------------------------+\n| centers                                            |\n+----------------------------------------------------+\n| [ [-2.5097303, 5.640863],[-7.101406, -7.3195944] ] |\n+----------------------------------------------------+\n1 row in set (0.01 sec)\n\n--KMeans\nmysql&gt;  SELECT cluster_centers(coordinate kmeans '2,vector_l2_ops,random,false') AS centers FROM points;\n+----------------------------------------------------+\n| centers                                            |\n+----------------------------------------------------+\n| [ [-6.362137, -0.09336702],[6.829682, 1.1648715] ] |\n+----------------------------------------------------+\n1 row in set (0.00 sec)\n\n-- Each point represents latitude and longitude coordinates to query the clustering center using Spherical Kmeans\nmysql&gt; SELECT cluster_centers(coordinate kmeans '2,vector_l2_ops,kmeansplusplus,true') AS centers FROM points;\n+------------------------------------------------------+\n| centers                                              |\n+------------------------------------------------------+\n| [ [0.70710677, 0.70710677],[0.83512634, 0.5500581] ] |\n+------------------------------------------------------+\n1 row in set (0.00 sec)\n\n--Cluster centers within JSON-type data can be taken out in combination with CROSS JOIN and UNNEST syntax.\nmysql&gt; SELECT value FROM  (\n-&gt; SELECT cluster_centers(coordinate kmeans '2,vector_l2_ops,kmeansplusplus,false') AS centers FROM  points\n-&gt; ) AS subquery -&gt; CROSS JOIN  UNNEST(subquery.centers) AS u;\n+-------------------------+\n| value                   |\n+-------------------------+\n| [-2.5097303, 5.640863]  |\n| [-7.101406, -7.3195944] |\n+-------------------------+\n2 rows in set (0.00 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Vector/cosine_distance/","title":"COSINE_DISTANCE()","text":""},{"location":"MatrixOne/Reference/Functions-and-Operators/Vector/cosine_distance/#function-description","title":"Function Description","text":"<p>The <code>COSINE_DISTANCE()</code> function is used to calculate the cosine distance between two vectors.</p> <p>Cosine Distance is a measure of the difference in direction between two vectors, usually defined as 1 minus Cosine Similarity. The value of the cosine distance ranges from 0 to 2. 0 means that both vectors are in exactly the same direction (minimum distance). 2 means that the two vectors are in exactly the opposite direction (maximum distance). In text analysis, cosine distance can be used to measure similarities between documents. Since it considers only the direction of the vector and not the length, it is fair for comparisons between long and short text.</p>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Vector/cosine_distance/#function-syntax","title":"Function syntax","text":"<pre><code>&gt; SELECT COSINE_DISTANCE(vector1, vector2) FROM tbl;\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Vector/cosine_distance/#examples","title":"Examples","text":"<pre><code>drop table if exists vec_table;\ncreate table vec_table(a int, b vecf32(3), c vecf64(3));\ninsert into vec_table values(1, \"[1,2,3]\", \"[4,5,6]\");\nmysql&gt; select * from vec_table;\n+------+-----------+-----------+\n| a    | b         | c         |\n+------+-----------+-----------+\n|    1 | [1, 2, 3] | [4, 5, 6] |\n+------+-----------+-----------+\n1 row in set (0.01 sec)\n\nmysql&gt; select cosine_distance(b,c) from vec_table;\n+-----------------------+\n| cosine_distance(b, c) |\n+-----------------------+\n|    0.0253681538029239 |\n+-----------------------+\n1 row in set (0.00 sec)\n\nmysql&gt; select cosine_distance(b,\"[1,2,3]\") from vec_table;\n+-----------------------------+\n| cosine_distance(b, [1,2,3]) |\n+-----------------------------+\n|                           0 |\n+-----------------------------+\n1 row in set (0.00 sec)\n\nmysql&gt; select cosine_distance(b,\"[-1,-2,-3]\") from vec_table;\n+--------------------------------+\n| cosine_distance(b, [-1,-2,-3]) |\n+--------------------------------+\n|                              2 |\n+--------------------------------+\n1 row in set (0.00 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Vector/cosine_distance/#limitations","title":"Limitations","text":"<p>Input vectors are not allowed to be 0 vectors when using the <code>COSINE_DISTANCE()</code> function, as this results in a division by zero, which is mathematically undefined. In practice, we usually consider the cosine similarity of a zero vector to any other vector to be 0 because there is no similarity in any direction between them.</p>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Vector/cosine_similarity/","title":"cosine_similarity()","text":""},{"location":"MatrixOne/Reference/Functions-and-Operators/Vector/cosine_similarity/#function-description","title":"Function Description","text":"<p><code>cosine_similarity()</code> is a cosine similarity that measures the cosine value of the angle between two vectors, indicating their similarity by how close they are in multidimensional space, where 1 means exactly similar and -1 means completely different. Cosine similarity is calculated by dividing the inner product of two vectors by the product of their l2 norm.</p>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Vector/cosine_similarity/#function-syntax","title":"Function syntax","text":"<pre><code>&gt; SELECT cosine_similarity(vector1, vector2) AS similarity FROM table_name;\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Vector/cosine_similarity/#examples","title":"Examples","text":"<pre><code>drop table if exists vec_table;\ncreate table vec_table(a int, b vecf32(3), c vecf64(3));\ninsert into vec_table values(1, \"[1,2,3]\", \"[4,5,6]\");\nmysql&gt; select * from vec_table;\n+------+-----------+-----------+\n| a    | b         | c         |\n+------+-----------+-----------+\n|    1 | [1, 2, 3] | [4, 5, 6] |\n+------+-----------+-----------+\n1 row in set (0.00 sec)\n\nmysql&gt; select cosine_similarity(b,\"[1,2,3]\") from vec_table;\n+-------------------------------+\n| cosine_similarity(b, [1,2,3]) |\n+-------------------------------+\n|                             1 |\n+-------------------------------+\n1 row in set (0.00 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Vector/cosine_similarity/#restrictions","title":"Restrictions","text":"<ul> <li>Two parameter vectors must have the same dimension.</li> <li>The value for cosine similarity is between -1 and 1.</li> <li>Input vectors are not allowed to be 0 vectors because this results in a division by zero, which is mathematically undefined. In practice, we usually consider the cosine similarity of a zero vector to any other vector to be 0 because there is no similarity in any direction between them.</li> </ul>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Vector/inner_product/","title":"inner_product()","text":""},{"location":"MatrixOne/Reference/Functions-and-Operators/Vector/inner_product/#function-description","title":"Function Description","text":"<p>The <code>INNER PRODUCT</code> function is used to calculate the inner/dot product between two vectors. It is the result of multiplying the corresponding elements of two vectors and then adding them.</p> <p></p>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Vector/inner_product/#function-syntax","title":"Function syntax","text":"<pre><code>&gt; SELECT inner_product(vector1, vector2) AS result FROM table_name;\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Vector/inner_product/#examples","title":"Examples","text":"<pre><code>drop table if exists vec_table;\ncreate table vec_table(a int, b vecf32(3), c vecf64(3));\ninsert into vec_table values(1, \"[1,2,3]\", \"[4,5,6]\");\nmysql&gt; select * from vec_table;\n+------+-----------+-----------+\n| a    | b         | c         |\n+------+-----------+-----------+\n|    1 | [1, 2, 3] | [4, 5, 6] |\n+------+-----------+-----------+\n1 row in set (0.00 sec)\n\nmysql&gt; select inner_product(b,\"[1,2,3]\") from vec_table;\n+---------------------------+\n| inner_product(b, [1,2,3]) |\n+---------------------------+\n|                        14 |\n+---------------------------+\n1 row in set (0.00 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Vector/inner_product/#restrictions","title":"Restrictions","text":"<p>Two parameter vectors must have the same dimension.</p>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Vector/l1_norm/","title":"l1_norm()","text":""},{"location":"MatrixOne/Reference/Functions-and-Operators/Vector/l1_norm/#function-description","title":"Function Description","text":"<p>The <code>l1_norm</code> function is used to calculate the <code>l1</code>/Manhattan/TaxiCab norm. The <code>l1</code> norm is obtained by summing the absolute values of the vector elements.</p> <p>You can use the <code>l1</code> norm to calculate the <code>l1</code> distance.</p> <pre><code>l1_distance(a,b) = l1_norm(a-b)\n</code></pre> <p>The same calculation applies to calculating the <code>l2</code> distance from <code>l2_Norm</code>.</p>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Vector/l1_norm/#function-syntax","title":"Function syntax","text":"<pre><code>&gt; SELECT l1_norm(vector) AS result FROM table_name;\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Vector/l1_norm/#examples","title":"Examples","text":"<pre><code>drop table if exists vec_table;\ncreate table vec_table(a int, b vecf32(3), c vecf64(3));\ninsert into vec_table values(1, \"[1,2,3]\", \"[4,5,6]\");\nmysql&gt; select * from vec_table;\n+------+-----------+-----------+\n| a    | b         | c         |\n+------+-----------+-----------+\n|    1 | [1, 2, 3] | [4, 5, 6] |\n+------+-----------+-----------+\n1 row in set (0.00 sec)\n\nmysql&gt; select l1_norm(b) from vec_table;\n+------------+\n| l1_norm(b) |\n+------------+\n|          6 |\n+------------+\n1 row in set (0.00 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Vector/l2_distance/","title":"L2_DISTANCE()","text":""},{"location":"MatrixOne/Reference/Functions-and-Operators/Vector/l2_distance/#function-description","title":"Function Description","text":"<p>The <code>L2_DISTANCE()</code> function is used to calculate the Euclidean distance between two vectors. Returns a value of type FLOAT64.</p> <p>L2 distance, also known as Euclidean Distance, is one of the most commonly used distance measures in vector spaces. It measures the straight line distance between two points in multidimensional space. l2 distance has many practical applications, including areas such as machine learning, computer vision, and spatial analysis.</p>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Vector/l2_distance/#function-syntax","title":"Function syntax","text":"<pre><code>&gt; SELECT L2_DISTANCE(vector,  const_vector) FROM tbl;\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Vector/l2_distance/#examples","title":"Examples","text":"<pre><code>drop table if exists vec_table;\ncreate table vec_table(a int, b vecf32(3), c vecf64(3));\ninsert into vec_table values(1, \"[1,2,3]\", \"[4,5,6]\"),(2, \"[1,1,1]\", \"[2,2,2]\");\nmysql&gt; select * from vec_table;\n+------+-----------+-----------+\n| a    | b         | c         |\n+------+-----------+-----------+\n|    1 | [1, 2, 3] | [4, 5, 6] |\n|    2 | [1, 1, 1] | [2, 2, 2] |\n+------+-----------+-----------+\n2 rows in set (0.00 sec)\n\nmysql&gt; select l2_distance(b,c) from vec_table;\n+--------------------+\n| l2_distance(b, c)  |\n+--------------------+\n|  5.196152422706632 |\n| 1.7320508075688772 |\n+--------------------+\n2 rows in set (0.00 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Vector/l2_norm/","title":"l2_norm()","text":""},{"location":"MatrixOne/Reference/Functions-and-Operators/Vector/l2_norm/#function-description","title":"Function Description","text":"<p>The <code>l2_norm</code> function is used to calculate the <code>l2</code>/Euclidean norm. The <code>l2</code> norm is obtained by performing a square root operation on the sum of squares of the vector elements.</p>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Vector/l2_norm/#function-syntax","title":"Function syntax","text":"<pre><code>&gt; SELECT l2_norm(vector) AS result FROM table_name;\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Vector/l2_norm/#examples","title":"Examples","text":"<pre><code>drop table if exists vec_table;\ncreate table vec_table(a int, b vecf32(3), c vecf64(3));\ninsert into vec_table values(1, \"[1,2,3]\", \"[4,5,6]\");\nmysql&gt; select * from vec_table;\n+------+-----------+-----------+\n| a    | b         | c         |\n+------+-----------+-----------+\n|    1 | [1, 2, 3] | [4, 5, 6] |\n+------+-----------+-----------+\n1 row in set (0.00 sec)\n\nmysql&gt; select l2_norm(b) from vec_table;\n+--------------------+\n| l2_norm(b)         |\n+--------------------+\n| 3.7416573867739413 |\n+--------------------+\n1 row in set (0.01 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Vector/misc/","title":"Mathematical class functions","text":"<p>Vectors support the following mathematical functions:</p>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Vector/misc/#sqrt","title":"SQRT","text":""},{"location":"MatrixOne/Reference/Functions-and-Operators/Vector/misc/#function-description","title":"Function Description","text":"<p>The <code>sqrt</code> function is used to calculate the square root of each element in a vector.</p>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Vector/misc/#function-syntax","title":"Function syntax","text":"<pre><code>&gt; SELECT sqrt(vector_column) FROM table_name;\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Vector/misc/#return-type","title":"Return Type","text":"<p>Returns a new vector of type vecf64 containing the square root of each element in the original vector.</p>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Vector/misc/#examples","title":"Examples","text":"<pre><code>drop table if exists vec_table;\ncreate table vec_table(a int, b vecf32(3), c vecf64(3));\ninsert into vec_table values(1, \"[1,2,3]\", \"[4,5,6]\");\nmysql&gt; select * from vec_table;\n+------+-----------+-----------+\n| a    | b         | c         |\n+------+-----------+-----------+\n|    1 | [1, 2, 3] | [4, 5, 6] |\n+------+-----------+-----------+\n1 row in set (0.00 sec)\n\nmysql&gt; select sqrt(b) from vec_table;\n+---------------------------------------------+\n| sqrt(b)                                     |\n+---------------------------------------------+\n| [1, 1.4142135623730951, 1.7320508075688772] |\n+---------------------------------------------+\n1 row in set (0.00 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Vector/misc/#restrictions","title":"Restrictions","text":"<ul> <li>Elements of a vector cannot be negative.</li> </ul>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Vector/misc/#abs","title":"ABS","text":""},{"location":"MatrixOne/Reference/Functions-and-Operators/Vector/misc/#function-description_1","title":"Function Description","text":"<p>The <code>abs</code> function is used to calculate the absolute value of a vector.</p>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Vector/misc/#function-syntax_1","title":"Function syntax","text":"<pre><code>&gt; SELECT ABS(vector_column) FROM table_name;\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Vector/misc/#return-type_1","title":"Return Type","text":"<p>Returns a new vector of the same type containing the absolute value of each element in the original vector.</p>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Vector/misc/#examples_1","title":"Examples","text":"<pre><code>drop table if exists vec_table;\ncreate table vec_table(a int, b vecf32(3), c vecf64(3));\ninsert into vec_table values(1, \"[-1,-2,3]\", \"[4,5,6]\");\nmysql&gt; select * from vec_table;\n+------+-------------+-----------+\n| a    | b           | c         |\n+------+-------------+-----------+\n|    1 | [-1, -2, 3] | [4, 5, 6] |\n+------+-------------+-----------+\n1 row in set (0.00 sec)\n\nmysql&gt; select abs(b) from vec_table;\n+-----------+\n| abs(b)    |\n+-----------+\n| [1, 2, 3] |\n+-----------+\n1 row in set (0.01 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Vector/misc/#cast","title":"CAST","text":""},{"location":"MatrixOne/Reference/Functions-and-Operators/Vector/misc/#function-description_2","title":"Function Description","text":"<p>The cast function is used to explicitly convert a vector from one vector type to another.</p>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Vector/misc/#function-syntax_2","title":"Function syntax","text":"<pre><code>&gt; SELECT CAST(vector AS vector_type) FROM table_name;\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Vector/misc/#parameters","title":"Parameters","text":"<ul> <li><code>vector</code>: Enter the vector.</li> <li><code>vector_type</code>: new vector type.</li> </ul>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Vector/misc/#return-type_2","title":"Return Type","text":"<p>New <code>vector_type</code> vector.</p>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Vector/misc/#examples_2","title":"Examples","text":"<pre><code>drop table if exists vec_table;\ncreate table vec_table(a int, b vecf32(3), c vecf64(3));\ninsert into vec_table values(1, \"[1,2,3]\", \"[4,5,6]\");\nmysql&gt; select * from vec_table;\n+------+-----------+-----------+\n| a    | b         | c         |\n+------+-----------+-----------+\n|    1 | [1, 2, 3] | [4, 5, 6] |\n+------+-----------+-----------+\n1 row in set (0.00 sec)\n\nmysql&gt; select b + cast(\"[1,2,3]\" as vecf32(3)) from vec_table;\n+--------------------------------+\n| b + cast([1,2,3] as vecf32(3)) |\n+--------------------------------+\n| [2, 4, 6]                      |\n+--------------------------------+\n1 row in set (0.00 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Vector/misc/#summation","title":"SUMMATION","text":""},{"location":"MatrixOne/Reference/Functions-and-Operators/Vector/misc/#function-description_3","title":"Function Description","text":"<p>The <code>summation</code> function returns the sum of all the elements in the vector.</p>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Vector/misc/#function-syntax_3","title":"Function syntax","text":"<pre><code>&gt; SELECT SUMMATION(vector_column) FROM table_name;\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Vector/misc/#return-type_3","title":"Return Type","text":"<p>Returns a FLOAT64 value, the sum of all the elements in the vector.</p>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Vector/misc/#examples_3","title":"Examples","text":"<pre><code>drop table if exists vec_table;\ncreate table vec_table(a int, b vecf32(3), c vecf64(3));\ninsert into vec_table values(1, \"[1,2,3]\", \"[4,5,6]\");\nmysql&gt; select * from vec_table;\n+------+-----------+-----------+\n| a    | b         | c         |\n+------+-----------+-----------+\n|    1 | [1, 2, 3] | [4, 5, 6] |\n+------+-----------+-----------+\n1 row in set (0.00 sec)\n\nmysql&gt; select summation(b) from vec_table;\n+--------------+\n| summation(b) |\n+--------------+\n|            6 |\n+--------------+\n1 row in set (0.00 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Vector/normalize_l2/","title":"NORMALIZE_L2()","text":""},{"location":"MatrixOne/Reference/Functions-and-Operators/Vector/normalize_l2/#function-description","title":"Function Description","text":"<p>The <code>NORMALIZE_L2()</code> function performs Euclidean normalization on vectors.</p> <p>The L2 norm is the square root of the sum of the squares of the vector elements, so the purpose of L2 normalization is to make the length (or norm) of the vector 1, which is often referred to as a unit vector. This normalization method is particularly useful in machine learning, especially when dealing with feature vectors. It can help standardize the scale of features and thus improve the performance of algorithms.</p>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Vector/normalize_l2/#function-syntax","title":"Function syntax","text":"<pre><code>&gt; SELECT NORMALIZE_L2(vector_column) FROM tbl;\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Vector/normalize_l2/#examples","title":"Examples","text":"<pre><code>drop table if exists vec_table;\ncreate table vec_table(a int, b vecf32(3), c vecf64(3));\ninsert into vec_table values(1, \"[1,2,3]\", \"[4,5,6]\");\nmysql&gt; select * from vec_table;\n+------+-----------+-----------+\n| a    | b         | c         |\n+------+-----------+-----------+\n|    1 | [1, 2, 3] | [4, 5, 6] |\n+------+-----------+-----------+\n1 row in set (0.00 sec)\n\nmysql&gt; select normalize_l2(b) from vec_table;\n+-------------------------------------+\n| normalize_l2(b)                     |\n+-------------------------------------+\n| [0.26726124, 0.5345225, 0.80178374] |\n+-------------------------------------+\n1 row in set (0.00 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Vector/subvector/","title":"SUBVECTOR()","text":""},{"location":"MatrixOne/Reference/Functions-and-Operators/Vector/subvector/#function-description","title":"Function Description","text":"<p>The <code>SUBVECTOR()</code> function is used to extract subvectors from vectors.</p>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Vector/subvector/#function-syntax","title":"Function syntax","text":"<p>```</p> <p>SUBVECTOR(vec, pos, len) ```</p>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Vector/subvector/#parameter-interpretation","title":"Parameter interpretation","text":"Parameters Description vec Required Parameters. The source vector from which the subvectors are extracted pos Required Parameters. The position at which to start the extraction. The first position in the vector is 1. If pos is positive, the function extracts from the beginning of the vector. If pos is negative, the extraction starts at the end of the vector. len Optional parameters. The number of dimensions to extract. Defaults to a subvector starting at position pos and ending at the end of the vector. If len is less than 1, the empty vector is returned."},{"location":"MatrixOne/Reference/Functions-and-Operators/Vector/subvector/#examples","title":"Examples","text":"<pre><code>mysql&gt; SELECT SUBVECTOR(\"[1,2,3]\", 2);\n+-----------------------+\n| subvector([1,2,3], 2) |\n+-----------------------+\n| [2, 3]                |\n+-----------------------+\n1 row in set (0.01 sec)\n\nmysql&gt; SELECT SUBVECTOR(\"[1,2,3]\",-1,1);\n+---------------------------+\n| subvector([1,2,3], -1, 1) |\n+---------------------------+\n| [3]                       |\n+---------------------------+\n1 row in set (0.00 sec)\n\nmysql&gt; SELECT SUBVECTOR(\"[1,2,3]\",-1,0);\n+---------------------------+\n| subvector([1,2,3], -1, 0) |\n+---------------------------+\n| []                        |\n+---------------------------+\n1 row in set (0.00 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Vector/vector_dims/","title":"vector_dims()","text":""},{"location":"MatrixOne/Reference/Functions-and-Operators/Vector/vector_dims/#function-description","title":"Function Description","text":"<p>The <code>vector_dims</code> function is used to determine the dimension of a vector.</p>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Vector/vector_dims/#function-syntax","title":"Function syntax","text":"<pre><code>&gt; SELECT vector_dims(vector) AS dimension_count FROM table_name;\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Vector/vector_dims/#examples","title":"Examples","text":"<pre><code>drop table if exists vec_table;\ncreate table vec_table(a int, b vecf32(3), c vecf64(3));\ninsert into vec_table values(1, \"[1,2,3]\", \"[4,5,6]\");\ninsert into vec_table values(2, \"[7,8,9]\", \"[1,2,3]\");\nmysql&gt; select * from vec_table;\n+------+-----------+-----------+\n| a    | b         | c         |\n+------+-----------+-----------+\n|    1 | [1, 2, 3] | [4, 5, 6] |\n|    2 | [7, 8, 9] | [1, 2, 3] |\n+------+-----------+-----------+\n2 row in set (0.00 sec)\n\nmysql&gt; select vector_dims(b) from vec_table;\n+----------------+\n| vector_dims(b) |\n+----------------+\n|              3 |\n|              3 |\n+----------------+\n2 row in set (0.01 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Window-Functions/dense_rank/","title":"DENSE_RANK()","text":""},{"location":"MatrixOne/Reference/Functions-and-Operators/Window-Functions/dense_rank/#description","title":"Description","text":"<p><code>DENSE_RANK()</code> gives each row in the dataset a unique rank, very similar to the RANK() function. The <code>DENSE_RANK()</code> function first sorts the dataset according to the columns specified in the ORDER BY clause, then assigns each row a unique rank.</p> <p>The <code>DENSE_RANK()</code> function handles ties (i.e., two or more rows with the same value) slightly differently than the <code>RANK()</code> function. In the case of a link, <code>DENSE_RANK()</code> will assign the same rank to all rows with the same value but will not skip any ranks immediately following it. For example, if two rows rank 1, the next row gets rank 2, not 3.</p>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Window-Functions/dense_rank/#syntax","title":"Syntax","text":"<pre><code>&gt; DENSE_RANK() OVER (\n    [PARTITION BY column_1, column_2, ... ]\n    ORDER BY column_3, column_4, ...\n)\n</code></pre> <ul> <li>The <code>PARTITION BY</code> clause is optional and divides the dataset into partitions; the rank is computed individually inside each partition.</li> <li>The <code>ORDER BY</code> clause defines how the dataset is sorted, i.e., according to which column or columns to sort. You can specify ascending (ASC) or descending (DESC) sorting.</li> </ul>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Window-Functions/dense_rank/#examples","title":"Examples","text":"<pre><code>-- Create a new table, 'SalesTable' with three fields: 'Department', 'Employee', and 'Sales'\nCREATE TABLE SalesTable (\nDepartment VARCHAR(50),\nEmployee VARCHAR(50),\nSales INT\n);\n\n-- Insert data into the 'SalesTable' table; each row contains a department (Department), an employee (Employee), and their sales (Sales)\nINSERT INTO SalesTable (Department, Employee, Sales) VALUES\n('Marketing', 'John', 1000),\n('Marketing', 'Jane', 1200),\n('Sales', 'Alex', 900),\n('Sales', 'Bob', 1100),\n('HR', 'Alice', 800),\n('HR', 'Charlie', 850);\n\n-- Query the 'SalesTable' table and return the employee's name, their sales, and their sales rank (using the 'DENSE_RANK()' function)\n-- In this query, the 'DENSE_RANK()' function ranks all employees in descending order of sales (specified by 'ORDER BY Sales DESC')\n-- If multiple employees have the same sales, they will get the same rank, and the rank of the next sales will not be skipped. So, if two employees are number one in sales, the next employee is number two, not number three.\nmysql&gt; SELECT\nEmployee,\nSales,\nDENSE_RANK() OVER(ORDER BY Sales DESC) FROM\nSalesTable;\n+----------+-------+-----------------------------------------+\n| employee | sales | dense_rank() over (order by sales desc) |\n+----------+-------+-----------------------------------------+\n| Jane     |  1200 |                                       1 |\n| Bob      |  1100 |                                       2 |\n| John     |  1000 |                                       3 |\n| Alex     |   900 |                                       4 |\n| Charlie  |   850 |                                       5 |\n| Alice    |   800 |                                       6 |\n+----------+-------+-----------------------------------------+\n6 rows in set (0.01 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Window-Functions/rank/","title":"RANK()","text":""},{"location":"MatrixOne/Reference/Functions-and-Operators/Window-Functions/rank/#description","title":"Description","text":"<p><code>RANK()</code> provides a unique rank for each row in the dataset. <code>RANK()</code> first sorts the dataset according to the columns specified in the <code>ORDER BY</code> clause, then assigns each row a unique rank.</p> <p>The <code>RANK()</code> function has a unique behavior when it handles the case of equal values \u200b\u200b(i.e., tie). When two or more rows have the same value, they get the same rank. It will then skip the rank or ranks that follow it. For example, if two rows rank 1, the next row gets rank 3, not 2.</p>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Window-Functions/rank/#syntax","title":"Syntax","text":"<pre><code>&gt; RANK() OVER (\n    [PARTITION BY column_1, column_2, ... ]\n    ORDER BY column_3, column_4, ...\n)\n</code></pre> <ul> <li>The <code>PARTITION BY</code> clause is optional and divides the dataset into partitions; the rank is computed individually inside each partition.</li> <li>The <code>ORDER BY</code> clause defines how the dataset is sorted, i.e., according to which column or columns to sort. You can specify ascending (ASC) or descending (DESC) sorting.</li> </ul>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Window-Functions/rank/#examples","title":"Examples","text":"<pre><code>-- Create a new table, 'SalesTable' with three fields: 'Department', 'Employee', and 'Sales'\nCREATE TABLE SalesTable (\nDepartment VARCHAR(50),\nEmployee VARCHAR(50),\nSales INT\n);\n\n-- Insert data into the 'SalesTable' table; each row contains a department (Department), an employee (Employee), and their sales (Sales)\nINSERT INTO SalesTable (Department, Employee, Sales) VALUES\n('Marketing', 'John', 1000),\n('Marketing', 'Jane', 1200),\n('Sales', 'Alex', 900),\n('Sales', 'Bob', 1100),\n('HR', 'Alice', 800),\n('HR', 'Charlie', 850);\n\n-- Query the 'SalesTable' table and return each employee in each department, their sales, and the total sales of their department (DepartmentSales)\n-- will also return each employee's sales rank in their department (SalesRank)\n-- For the total sales, use the window function SUM(), and use 'OVER(PARTITION BY Department)' to calculate each department separately\n-- For sales ranking, use the window function RANK(), and use 'OVER(PARTITION BY Department ORDER BY Sales DESC)' to rank employees in each department in descending order by sales\n-- In the RANK() function, if two employees have the same sales, they get the same rank, and the next sales rank is skipped. For example, if two employees are number one in sales, the next sales rank is number three, not number two.\nmysql&gt; SELECT\nDepartment,\nEmployee,\nSales,\nSUM(Sales) OVER(PARTITION BY Department) AS DepartmentSales,\nRANK() OVER(PARTITION BY Department ORDER BY Sales DESC) AS SalesRank\nFROM\nSalesTable;\n+------------+----------+-------+-----------------+-----------+\n| department | employee | sales | DepartmentSales | SalesRank |\n+------------+----------+-------+-----------------+-----------+\n| HR         | Charlie  |   850 |            1650 |         1 |\n| HR         | Alice    |   800 |            1650 |         2 |\n| Marketing  | Jane     |  1200 |            2200 |         1 |\n| Marketing  | John     |  1000 |            2200 |         2 |\n| Sales      | Bob      |  1100 |            2000 |         1 |\n| Sales      | Alex     |   900 |            2000 |         2 |\n+------------+----------+-------+-----------------+-----------+\n6 rows in set (0.01 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Window-Functions/row_number/","title":"ROW_NUMBER()","text":""},{"location":"MatrixOne/Reference/Functions-and-Operators/Window-Functions/row_number/#description","title":"Description","text":"<p><code>ROW_NUMBER()</code> provides a unique ordinal number for each row in the dataset, starting at one and ending with the last row in the result set. It first sorts the dataset according to the columns specified in the <code>ORDER BY</code> clause and then assigns each row a unique number.</p> <p>Unlike the <code>RANK()</code> and <code>DENSE_RANK()</code> functions, <code>ROW_NUMBER()</code> gives each row a different row number when dealing with ties (i.e., two or more rows with the same value).</p>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Window-Functions/row_number/#syntax","title":"Syntax","text":"<pre><code>&gt; ROW_NUMBER() OVER (\n    [PARTITION BY column_1, column_2, ... ]\n    ORDER BY column_3, column_4, ...\n)\n</code></pre> <ul> <li>The <code>PARTITION BY</code> clause is optional and divides the dataset into partitions; the rank is computed individually inside each partition.</li> <li>The <code>ORDER BY</code> clause defines how the dataset is sorted, i.e., according to which column or columns to sort. You can specify ascending (ASC) or descending (DESC) sorting.</li> </ul>"},{"location":"MatrixOne/Reference/Functions-and-Operators/Window-Functions/row_number/#examples","title":"Examples","text":"<pre><code>-- Create a new table, 'SalesTable' with three fields: 'Department', 'Employee', and 'Sales'\nCREATE TABLE SalesTable (\nDepartment VARCHAR(50),\nEmployee VARCHAR(50),\nSales INT\n);\n\n-- Insert data into the 'SalesTable' table; each row contains a department (Department), an employee (Employee), and their sales (Sales)\nINSERT INTO SalesTable (Department, Employee, Sales) VALUES\n('Marketing', 'John', 1000),\n('Marketing', 'Jane', 1200),\n('Sales', 'Alex', 900),\n('Sales', 'Bob', 1100),\n('HR', 'Alice', 800),\n('HR', 'Charlie', 850);\n\n-- Query the sales ranking of employees in each department\n-- Use the ROW_NUMBER() function to rank employees by Department (Sales)\n-- The ROW_NUMBER() function divides the data set into multiple partitions according to the department (Department), then sorts the sales in descending order within each partition, and assigns each row a unique row number (SalesRank )\n-- So, the employee with the highest sales in each department will get row number 1, the employee with the second highest sales will get row number 2, and so on\nmysql&gt; SELECT\nDepartment,\nEmployee,\nSales,\nROW_NUMBER() OVER (PARTITION BY Department ORDER BY Sales DESC) as SalesRank\nFROM\nSalesTable;\n+------------+----------+-------+-----------+\n| department | employee | sales | SalesRank |\n+------------+----------+-------+-----------+\n| HR         | Charlie  |   850 |         1 |\n| HR         | Alice    |   800 |         2 |\n| Marketing  | Jane     |  1200 |         1 |\n| Marketing  | John     |  1000 |         2 |\n| Sales      | Bob      |  1100 |         1 |\n| Sales      | Alex     |   900 |         2 |\n+------------+----------+-------+-----------+\n6 rows in set (0.01 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/system-ops/current_role/","title":"CURRENT_ROLE()","text":""},{"location":"MatrixOne/Reference/Functions-and-Operators/system-ops/current_role/#description","title":"Description","text":"<p>Returns the role of the current session.</p>"},{"location":"MatrixOne/Reference/Functions-and-Operators/system-ops/current_role/#syntax","title":"Syntax","text":"<pre><code>SELECT CURRENT_ROLE();\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/system-ops/current_role/#examples","title":"Examples","text":"<pre><code>mysql&gt; select current_role();\n+----------------+\n| current_role() |\n+----------------+\n| moadmin        |\n+----------------+\n1 row in set (0.00 sec)\n\n-- Create a role and switch to the new role\ncreate role use_role_1;\ngrant all on database * to use_role_1;\ngrant use_role_1 to root;\nset role use_role_1;\nmysql&gt; select current_role();\n+----------------+\n| current_role() |\n+----------------+\n| use_role_1     |\n+----------------+\n1 row in set (0.00 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/system-ops/current_role_name/","title":"CURRENT_ROLE_NAME()","text":""},{"location":"MatrixOne/Reference/Functions-and-Operators/system-ops/current_role_name/#description","title":"Description","text":"<p><code>CURRENT_ROLE_NAME()</code> is used to query the name of the role owned by the user you are currently logged in.</p>"},{"location":"MatrixOne/Reference/Functions-and-Operators/system-ops/current_role_name/#syntax","title":"Syntax","text":"<pre><code>&gt; CURRENT_ROLE_NAME()\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/system-ops/current_role_name/#examples","title":"Examples","text":"<pre><code>mysql&gt; select current_role_name();\n+---------------------+\n| current_role_name() |\n+---------------------+\n| moadmin             |\n+---------------------+\n1 row in set (0.00 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/system-ops/current_user/","title":"CURRENT_USER, CURRENT_USER()","text":""},{"location":"MatrixOne/Reference/Functions-and-Operators/system-ops/current_user/#description","title":"Description","text":"<p>Returns the current user account; the returned account format is username@hostname. The return value is a string in the utf8mb3 character set.</p>"},{"location":"MatrixOne/Reference/Functions-and-Operators/system-ops/current_user/#syntax","title":"Syntax","text":"<pre><code>SELECT CURRENT_USER();\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/system-ops/current_user/#examples","title":"Examples","text":"<pre><code>mysql&gt; select current_user();\n+----------------+\n| current_user() |\n+----------------+\n| root@0.0.0.0   |\n+----------------+\n1 row in set (0.00 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/system-ops/current_user_name/","title":"CURRENT_USER_NAME()","text":""},{"location":"MatrixOne/Reference/Functions-and-Operators/system-ops/current_user_name/#description","title":"Description","text":"<p><code>CURRENT_USER_NAME()</code> is used to query the name of the user you are currently logged in as.</p>"},{"location":"MatrixOne/Reference/Functions-and-Operators/system-ops/current_user_name/#syntax","title":"Syntax","text":"<pre><code>&gt; CURRENT_USER_NAME()\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/system-ops/current_user_name/#examples","title":"Examples","text":"<pre><code>mysql&gt; select current_user_name();\n+---------------------+\n| current_user_name() |\n+---------------------+\n| root                |\n+---------------------+\n1 row in set (0.01 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/system-ops/purge_log/","title":"PURGE_LOG()","text":""},{"location":"MatrixOne/Reference/Functions-and-Operators/system-ops/purge_log/#description","title":"Description","text":"<p><code>PURGE_LOG()</code> deletes logs recorded in MatrixOne database system tables. Returning 0 means the deletion is successful; if the deletion fails, an error message will be returned.</p> <p>Note</p> <p>Only the root user (cluster administrator with <code>MOADMIN</code> privilege) can execute the <code>PURGE_LOG()</code> function for log deletion.</p>"},{"location":"MatrixOne/Reference/Functions-and-Operators/system-ops/purge_log/#syntax","title":"Syntax","text":"<pre><code>&gt; PURGE_LOG('sys_table_name', 'date')\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/system-ops/purge_log/#arguments","title":"Arguments","text":"Arguments Description 'sys_table_name' Currently, there are only three system tables that can be deleted: metric, rawlog, and statement_info.  Note: 'sys_table_name' must be enclosed in quotes. 'date' Select a date and delete logs generated before that date.  Note: 'date' must be enclosed in single quotes. <p>Note</p> <p>MatrixOne has only three system log tables: metric, rawlog, and statement_info. For more information about these three tables, please refer to MatrixOne System Database and Tables.</p>"},{"location":"MatrixOne/Reference/Functions-and-Operators/system-ops/purge_log/#examples","title":"Examples","text":"<ul> <li>Example 1:</li> </ul> <pre><code>-- Delete the statement_info type logs before 2023-06-30\nmysql&gt; select purge_log('statement_info', '2023-06-30') a;\n+------+\n| a    |\n+------+\n| 0    |\n+------+\n1 row in set (0.01 sec)\n</code></pre> <ul> <li>Example 2:</li> </ul> <pre><code>-- Query the time and quantity of metric log collection\nmysql&gt; select date(collecttime), count(1) from system_metrics.metric group by date(collecttime);\n+-------------------+----------+\n| date(collecttime) | count(1) |\n+-------------------+----------+\n| 2023-07-07        |    20067 |\n| 2023-07-06        |    30246 |\n| 2023-07-05        |    27759 |\n+-------------------+----------+\n3 rows in set (0.00 sec)\n\n-- Delete rawlog, statement_info, and metric logs before 2023-07-06\nmysql&gt; select purge_log('rawlog, statement_info, metric', '2023-07-06');\n+-------------------------------------------------------+\n| purge_log(rawlog, statement_info, metric, 2023-07-06) |\n+-------------------------------------------------------+\n|                                                     0 |\n+-------------------------------------------------------+\n1 row in set (0.33 sec)\n\n-- Query the number of metric logs for the three days of 2023-07-05, 2023-07-06 and 2023-07-07 again\nmysql&gt; select date(collecttime), count(1) from system_metrics.metric group by date(collecttime);\n+-------------------+----------+\n| date(collecttime) | count(1) |\n+-------------------+----------+\n| 2023-07-06        |    30246 |\n| 2023-07-07        |    20121 |\n+-------------------+----------+\n2 rows in set (0.01 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/system-ops/version/","title":"VERSION","text":""},{"location":"MatrixOne/Reference/Functions-and-Operators/system-ops/version/#description","title":"Description","text":"<p>The <code>VERSION()</code> function is used to retrieve the version information of the current database management system. This function typically returns a string containing the version number of the database management system. For example, 0.8 indicates that the version of the MatrixOne database is 0.8.</p>"},{"location":"MatrixOne/Reference/Functions-and-Operators/system-ops/version/#syntax","title":"Syntax","text":"<pre><code>&gt; VERSION()\n</code></pre>"},{"location":"MatrixOne/Reference/Functions-and-Operators/system-ops/version/#example","title":"Example","text":"<pre><code>mysql&gt; select version();\n+-----------+\n| version() |\n+-----------+\n| 0.8       |\n+-----------+\n1 row in set (0.00 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/Language-Structure/comment/","title":"Comments","text":"<p>This document describes the comment syntax supported by MatrixOne.</p> <p>MatrixOne supports three comment styles:</p> <ul> <li>Use <code>#</code> character to comment a line.</li> </ul> <pre><code>mysql&gt; select 100-99;   # This comment continues to the end of line\n+----------+\n| 100 - 99 |\n+----------+\n|        1 |\n+----------+\n1 row in set (0.01 sec)\n</code></pre> <ul> <li>Use <code>--</code> to comment a line. The <code>--</code>  (double-dash) comment style requires the second dash to be followed by at least one whitespace or control character (such as a space, tab, newline, and so on).</li> </ul> <pre><code>mysql&gt; select 100-99;   -- This comment continues to the end of line\n+----------+\n| 100 - 99 |\n+----------+\n|        1 |\n+----------+\n1 row in set (0.01 sec)\n</code></pre> <ul> <li>From a <code>/*</code> sequence to the following <code>*/</code> sequence, as in the C programming language. This syntax enables a comment to extend over multiple lines because the beginning and closing sequences need not be on the same line.</li> </ul> <pre><code>mysql&gt; select 100 /* this is an in-line comment */ -99;\n+----------+\n| 100 - 99 |\n+----------+\n|        1 |\n+----------+\n1 row in set (0.01 sec)\n</code></pre> <p>Or:</p> <pre><code>mysql&gt; select 100\n/*\nthis is an in-line comment\n*/\n-99;\n+----------+\n| 100 - 99 |\n+----------+\n|        1 |\n+----------+\n1 row in set (0.01 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/Language-Structure/comment/#matrixone-specific-comment-syntax","title":"MatrixOne specific comment syntax","text":"<ul> <li>MatrixOne supports C comment style as below:</li> </ul> <pre><code>mysql&gt; select 100-99;   // This comment continues to the end of line\n+----------+\n| 100 - 99 |\n+----------+\n|        1 |\n+----------+\n1 row in set (0.03 sec)\n</code></pre> <p>Or:</p> <pre><code>mysql&gt; // This comment continues to the line\n-&gt; select 100-99;\n+----------+\n| 100 - 99 |\n+----------+\n|        1 |\n+----------+\n</code></pre> <ul> <li>MatrixOne dose not support C comment style as below:</li> </ul> <pre><code>mysql&gt; select 100 /*! Specific code */ -99;\nERROR 1064 (HY000): SQL parser error: You have an error in your SQL syntax; check the manual that corresponds to your MatrixOne server version for the right syntax to use. syntax error at line 1 column 28 near \" code */ -99\";\n</code></pre> <p>Or:</p> <pre><code>mysql&gt; select 100 /*!50110 Specific code */ -99;\nERROR 1064 (HY000): SQL parser error: You have an error in your SQL syntax; check the manual that corresponds to your MatrixOne server version for the right syntax to use. syntax error at line 1 column 33 near \" code */ -99\";\n</code></pre>"},{"location":"MatrixOne/Reference/Language-Structure/comment/#constraints","title":"Constraints","text":"<p>MatrixOne does not support nested comments.</p>"},{"location":"MatrixOne/Reference/Language-Structure/keywords/","title":"Keywords","text":"<p>This chapter describes the keywords for MatrixOne. Reserved and non-reserved keywords are categorized in MatrixOne. When you use SQL statements, you can consult both reserved and non-reserved keywords.</p> <p>Keywords are words in SQL statements that have special meanings, such as <code>SELECT</code>, <code>UPDATE</code>, <code>DELETE</code>, and so on.</p> <ul> <li>Reserved keyword: A word in a keyword that requires special processing to be used as an identifier. It is called a reserved keyword.</li> </ul> <p>When using the reserved keyword as an identifier, you must wrap it in back quotes, otherwise an error will occur:</p> <pre><code>\\\\Failure to wrap the reserved keyword select in backquotes produces an error\nmysql&gt; CREATE TABLE select (a INT);\nERROR 1064 (HY000): SQL parser error: You have an error in your SQL syntax; check the manual that corresponds to your MatrixOne server version for the right syntax to use. syntax error at line 1 column 19 near \" select (a INT)\";\n\n\\\\Correctly wrap the reserved keyword select in backquotes\nmysql&gt; CREATE TABLE `select` (a INT);\nQuery OK, 0 rows affected (0.02 sec)\n</code></pre> <ul> <li>Non-reserved keywords: Keywords can be used directly as identifiers and are called non-reserved keywords.</li> </ul> <p>When using non-reserved keywords as identifiers, you can use them directly without wrapping them in back quotes.</p> <pre><code>\\\\ACCOUNT is a non-reserved keyword that can be wrapped without backquotes\nmysql&gt; CREATE TABLE `select` (ACCOUNT int);\nQuery OK, 0 rows affected (0.01 sec)\n</code></pre> <p>Note</p> <p>Unlike MySQL, in MatrixOne, if the qualifier *.* is used, the reserved keyword also generates an error if it is not wrapped in back quotes. It is recommended to avoid using the reserved keyword when creating tables and databases:</p> <pre><code>mysql&gt; CREATE TABLE test.select (ACCOUNT int);\nERROR 1064 (HY000): SQL parser error: You have an error in your SQL syntax; check the manual that corresponds to your MatrixOne server version for the right syntax to use. syntax error at line 1 column 24 near \"select (ACCOUNT int)\";\n</code></pre> <p>The following list shows reserved and non-reserved keywords in Matrixone, where those that are not keywords in MySQL are marked with (M).</p>"},{"location":"MatrixOne/Reference/Language-Structure/keywords/#reserve-keywords","title":"Reserve Keywords","text":""},{"location":"MatrixOne/Reference/Language-Structure/keywords/#a","title":"A","text":"<ul> <li>ADD</li> <li>ALL</li> <li>ALTER</li> <li>ANALYZE</li> <li>AND</li> <li>AS</li> <li>ASC</li> </ul>"},{"location":"MatrixOne/Reference/Language-Structure/keywords/#b","title":"B","text":"<ul> <li>BEGIN</li> <li>BETWEEN</li> <li>BINARY</li> <li>BOTH</li> <li>BY</li> </ul>"},{"location":"MatrixOne/Reference/Language-Structure/keywords/#c","title":"C","text":"<ul> <li>CALL</li> <li>CASE</li> <li>CHANGE</li> <li>CHAR</li> <li>CHARACTER</li> <li>CHECK</li> <li>COLLATE</li> <li>COLUMN</li> <li>CONFIG (M)</li> <li>CONSTRAINT</li> <li>CONVERT</li> <li>CREATE</li> <li>CROSS</li> <li>CURRENT_DATE</li> <li>CURRENT_ROLE (M)</li> <li>CURRENT_TIME</li> <li>CURRENT_TIMESTAMP</li> <li>CURRENT_USER</li> </ul>"},{"location":"MatrixOne/Reference/Language-Structure/keywords/#d","title":"D","text":"<ul> <li>DATABASE</li> <li>DATABASES</li> <li>DAY_HOUR</li> <li>DAY_MICROSECOND</li> <li>DAY_MINUTE</li> <li>DAY_SECOND</li> <li>DECLARE</li> <li>DEFAULT</li> <li>DELAYED</li> <li>DELETE</li> <li>DENSE_RANK</li> <li>DESC</li> <li>DESCRIBE</li> <li>DISTINCT</li> <li>DIV</li> <li>DROP</li> </ul>"},{"location":"MatrixOne/Reference/Language-Structure/keywords/#e","title":"E","text":"<ul> <li>ELSE</li> <li>ELSEIF</li> <li>ENCLOSED</li> <li>END</li> <li>ESCAPE</li> <li>ESCAPED</li> <li>EXCEPT</li> <li>EXISTS</li> <li>EXPLAIN</li> </ul>"},{"location":"MatrixOne/Reference/Language-Structure/keywords/#f","title":"F","text":"<ul> <li>FALSE (M)</li> <li>FOR</li> <li>FORCE</li> <li>FOREIGN</li> <li>FROM</li> <li>FULLTEXT</li> <li>FUNCTION</li> </ul>"},{"location":"MatrixOne/Reference/Language-Structure/keywords/#g","title":"G","text":"<ul> <li>GROUP</li> <li>GROUPS</li> </ul>"},{"location":"MatrixOne/Reference/Language-Structure/keywords/#h","title":"H","text":"<ul> <li>HAVING</li> <li>HIGH_PRIORITY</li> <li>HOUR_MICROSECOND</li> <li>HOUR_MINUTE</li> <li>HOUR_SECOND</li> </ul>"},{"location":"MatrixOne/Reference/Language-Structure/keywords/#i","title":"I","text":"<ul> <li>IF</li> <li>IGNORE</li> <li>ILIKE (M)</li> <li>IN</li> <li>INDEX</li> <li>INFILE</li> <li>INNER</li> <li>INOUT</li> <li>INSERT</li> <li>INT1</li> <li>INT2</li> <li>INT3</li> <li>INT4</li> <li>INT8</li> <li>INTERSECT</li> <li>INTERVAL</li> <li>INTO</li> <li>IS</li> <li>ITERATE</li> </ul>"},{"location":"MatrixOne/Reference/Language-Structure/keywords/#j","title":"J","text":"<ul> <li>JOIN</li> </ul>"},{"location":"MatrixOne/Reference/Language-Structure/keywords/#k","title":"K","text":"<ul> <li>KEY</li> <li>KILL</li> </ul>"},{"location":"MatrixOne/Reference/Language-Structure/keywords/#l","title":"L","text":"<ul> <li>LEADING</li> <li>LEAVE</li> <li>LEFT</li> <li>LIKE</li> <li>LIMIT</li> <li>LINES</li> <li>LOAD</li> <li>LOCALTIME</li> <li>LOCALTIMESTAMP</li> <li>LOCK</li> <li>LOOP</li> <li>LOW_PRIORITY</li> </ul>"},{"location":"MatrixOne/Reference/Language-Structure/keywords/#m","title":"M","text":"<ul> <li>MATCH</li> <li>MAXVALUE</li> <li>MINUS (M)</li> <li>MINUTE_MICROSECOND</li> <li>MINUTE_SECOND</li> <li>MOD</li> </ul>"},{"location":"MatrixOne/Reference/Language-Structure/keywords/#n","title":"N","text":"<ul> <li>NATURAL</li> <li>NOT</li> <li>NULL</li> </ul>"},{"location":"MatrixOne/Reference/Language-Structure/keywords/#o","title":"O","text":"<ul> <li>ON</li> <li>OPTIONALLY</li> <li>OR</li> <li>ORDER</li> <li>OUT</li> <li>OUTER</li> <li>OUTFILE</li> <li>OVER</li> </ul>"},{"location":"MatrixOne/Reference/Language-Structure/keywords/#p","title":"P","text":"<ul> <li>PARTITION</li> <li>PRIMARY</li> </ul>"},{"location":"MatrixOne/Reference/Language-Structure/keywords/#q","title":"Q","text":"<ul> <li>QUICK</li> </ul>"},{"location":"MatrixOne/Reference/Language-Structure/keywords/#r","title":"R","text":"<ul> <li>RANK</li> <li>RECURSIVE</li> <li>REFERENCES</li> <li>REGEXP</li> <li>RENAME</li> <li>REPEAT</li> <li>REPLACE</li> <li>REQUIRE</li> <li>RIGHT</li> <li>RLIKE</li> <li>ROW</li> <li>ROW_NUMBER</li> <li>ROWS</li> </ul>"},{"location":"MatrixOne/Reference/Language-Structure/keywords/#s","title":"S","text":"<ul> <li>SCHEMA</li> <li>SCHEMAS</li> <li>SECOND_MICROSECOND</li> <li>SELECT</li> <li>SEPARATOR</li> <li>SET</li> <li>SHOW</li> <li>SQL_BIG_RESULT</li> <li>SQL_BUFFER_RESULT</li> <li>SQL_SMALL_RESULT</li> <li>SSL</li> <li>STARTING</li> <li>STRAIGHT_JOIN</li> </ul>"},{"location":"MatrixOne/Reference/Language-Structure/keywords/#t","title":"T","text":"<ul> <li>TABLE</li> <li>TEMPORARY</li> <li>TERMINATED</li> <li>THEN</li> <li>TO</li> <li>TRAILING</li> <li>TRUE (M)</li> </ul>"},{"location":"MatrixOne/Reference/Language-Structure/keywords/#u","title":"U","text":"<ul> <li>UNION</li> <li>UNIQUE</li> <li>UNTIL</li> <li>UPDATE</li> <li>USAGE</li> <li>USE</li> <li>USING</li> <li>UTC_DATE</li> <li>UTC_TIME</li> <li>UTC_TIMESTAMP</li> </ul>"},{"location":"MatrixOne/Reference/Language-Structure/keywords/#v","title":"V","text":"<ul> <li>VALUES</li> </ul>"},{"location":"MatrixOne/Reference/Language-Structure/keywords/#w","title":"W","text":"<ul> <li>WHEN</li> <li>WHERE</li> <li>WHILE</li> <li>WITH</li> </ul>"},{"location":"MatrixOne/Reference/Language-Structure/keywords/#x","title":"X","text":"<ul> <li>XOR</li> </ul>"},{"location":"MatrixOne/Reference/Language-Structure/keywords/#y","title":"Y","text":"<ul> <li>YEAR_MONTH</li> </ul>"},{"location":"MatrixOne/Reference/Language-Structure/keywords/#_","title":"_","text":"<ul> <li>_BINARY (M)</li> </ul>"},{"location":"MatrixOne/Reference/Language-Structure/keywords/#non-reserved-keywords","title":"Non-Reserved Keywords","text":""},{"location":"MatrixOne/Reference/Language-Structure/keywords/#a_1","title":"A","text":"<ul> <li>ACCOUNT</li> <li>ACCOUNTS (M)</li> <li>ACTION</li> <li>ADMIN_NAME (M)</li> <li>AFTER</li> <li>AGAINST</li> <li>ALGORITHM</li> <li>ANY</li> <li>ASCII</li> <li>ATTRIBUTE</li> <li>AUTO_INCREMENT</li> <li>AUTO_RANDOM (M)</li> <li>AUTOEXTEND_SIZE</li> <li>AVG_ROW_LENGTH</li> </ul>"},{"location":"MatrixOne/Reference/Language-Structure/keywords/#b_1","title":"B","text":"<ul> <li>BACKEND (M)</li> <li>BACKUP</li> <li>BIGINT</li> <li>BINDINGS (M)</li> <li>BIT</li> <li>BLOB</li> <li>BOOL</li> <li>BOOLEAN</li> <li>BSI (M)</li> <li>BTREE</li> </ul>"},{"location":"MatrixOne/Reference/Language-Structure/keywords/#c_1","title":"C","text":"<ul> <li>CANCEL (M)</li> <li>CASCADE</li> <li>CASCADED</li> <li>CHAIN</li> <li>CHARSET</li> <li>CHECKSUM</li> <li>CIPHER</li> <li>CLIENT</li> <li>CLUSTER (M)</li> <li>COALESCE</li> <li>COLLATION</li> <li>COLUMN_FORMAT</li> <li>COLUMN_NUMBER (M)</li> <li>COLUMNS</li> <li>COMMENT</li> <li>COMMIT</li> <li>COMMITTED</li> <li>COMPACT</li> <li>COMPRESSED</li> <li>COMPRESSION</li> <li>CONNECT (M)</li> <li>CONNECTION</li> <li>CONNECTOR (M)</li> <li>CONNECTORS (M)</li> <li>CONSISTENT</li> <li>COPY (M)</li> <li>CREDENTIALS (M)</li> <li>CURRENT</li> <li>CYCLE (M)</li> </ul>"},{"location":"MatrixOne/Reference/Language-Structure/keywords/#d_1","title":"D","text":"<ul> <li>DAEMON (M)</li> <li>DATA</li> <li>DATE</li> <li>DATETIME</li> <li>DAY</li> <li>DEALLOCATE</li> <li>DECIMAL</li> <li>DEFINER</li> <li>DELAY_KEY_WRITE</li> <li>DIRECTORY</li> <li>DISABLE</li> <li>DISCARD</li> <li>DISK</li> <li>DO</li> <li>DOUBLE</li> <li>DRAINER (M)</li> <li>DUPLICATE</li> <li>DYNAMIC</li> </ul>"},{"location":"MatrixOne/Reference/Language-Structure/keywords/#e_1","title":"E","text":"<ul> <li>ENABLE</li> <li>ENCRYPTION</li> <li>ENFORCED</li> <li>ENGINE</li> <li>ENGINE_ATTRIBUTE</li> <li>ENGINES</li> <li>ENUM</li> <li>ERRORS</li> <li>EVENT</li> <li>EVENTS</li> <li>EXCLUSIVE (M)</li> <li>EXECUTE</li> <li>EXPANSION (M)</li> <li>EXPIRE</li> <li>EXTENDED</li> <li>EXTENSION</li> <li>EXTERNAL (M)</li> </ul>"},{"location":"MatrixOne/Reference/Language-Structure/keywords/#f_1","title":"F","text":"<ul> <li>FAILED_LOGIN_ATTEMPTS</li> <li>FIELDS</li> <li>FILE</li> <li>FILESYSTEM (M)</li> <li>FILL (M)</li> <li>FIRST</li> <li>FIXED</li> <li>FLOAT</li> <li>FOLLOWING</li> <li>FORCE_QUOTE (M)</li> <li>FORMAT</li> <li>FULL</li> </ul>"},{"location":"MatrixOne/Reference/Language-Structure/keywords/#g_1","title":"G","text":"<ul> <li>GEOMETRY</li> <li>GEOMETRYCOLLECTION</li> <li>GLOBAL</li> <li>GRANT</li> <li>GRANTS</li> </ul>"},{"location":"MatrixOne/Reference/Language-Structure/keywords/#h_1","title":"H","text":"<ul> <li>HANDLER</li> <li>HASH</li> <li>HEADER (M)</li> <li>HISTORY</li> <li>HOUR</li> </ul>"},{"location":"MatrixOne/Reference/Language-Structure/keywords/#i_1","title":"I","text":"<ul> <li>IDENTIFIED</li> <li>IMPORT</li> <li>INCREMENT (M)</li> <li>INDEXES</li> <li>INLINE (M)</li> <li>INPLACE (M)</li> <li>INSERT_METHOD</li> <li>INSTANT (M)</li> <li>INT</li> <li>INTEGER</li> <li>INVISIBLE</li> <li>INVOKER</li> <li>ISOLATION</li> <li>ISSUER</li> <li>IVFFLAT (M)</li> </ul>"},{"location":"MatrixOne/Reference/Language-Structure/keywords/#j_1","title":"J","text":"<ul> <li>JSON</li> <li>JSONTYPE (M)</li> </ul>"},{"location":"MatrixOne/Reference/Language-Structure/keywords/#k_1","title":"K","text":"<ul> <li>KEY_BLOCK_SIZE</li> <li>KEYS</li> </ul>"},{"location":"MatrixOne/Reference/Language-Structure/keywords/#l_1","title":"L","text":"<ul> <li>LANGUAGE</li> <li>LAST</li> <li>LESS</li> <li>LEVEL</li> <li>LINEAR</li> <li>LINESTRING</li> <li>LIST</li> <li>LISTS (M)</li> <li>LOCAL</li> <li>LOCKS</li> <li>LONGBLOB</li> <li>LONGTEXT</li> <li>LOW_CARDINALITY (M)</li> </ul>"},{"location":"MatrixOne/Reference/Language-Structure/keywords/#m_1","title":"M","text":"<ul> <li>MANAGE (M)</li> <li>MASTER</li> <li>MAX_CONNECTIONS_PER_HOUR</li> <li>MAX_FILE_SIZE (M)</li> <li>MAX_QUERIES_PER_HOUR</li> <li>MAX_ROWS</li> <li>MAX_UPDATE_PER_HOUR (M)</li> <li>MAX_USER_CONNECTIONS</li> <li>MEDIAN (M)</li> <li>MEDIUMBLOB</li> <li>MEDIUMINT</li> <li>MEDIUMTEXT</li> <li>MEMORY</li> <li>MERGE</li> <li>MICROSECOND</li> <li>MIN_ROWS</li> <li>MINUTE</li> <li>MINVALUE (M)</li> <li>MODE</li> <li>MODIFY</li> <li>MODUMP (M)</li> <li>MONTH</li> <li>MULTILINESTRING</li> <li>MULTIPOINT</li> <li>MULTIPOLYGON</li> <li>MYSQL_COMPATIBILITY_MODE (M)</li> </ul>"},{"location":"MatrixOne/Reference/Language-Structure/keywords/#n_1","title":"N","text":"<ul> <li>NAMES</li> <li>NCHAR</li> <li>NEVER</li> <li>NEXT</li> <li>NO</li> <li>NODE (M)</li> <li>NONE</li> <li>NULLS</li> <li>NUMERIC</li> </ul>"},{"location":"MatrixOne/Reference/Language-Structure/keywords/#o_1","title":"O","text":"<ul> <li>OFFSET</li> <li>ONLY</li> <li>OP_TYPE (M)</li> <li>OPEN</li> <li>OPTIMIZE</li> <li>OPTION</li> <li>OPTIONAL</li> <li>OWNERSHIP (M)</li> </ul>"},{"location":"MatrixOne/Reference/Language-Structure/keywords/#p_1","title":"P","text":"<ul> <li>PACK_KEYS</li> <li>PARALLEL (M)</li> <li>PARALLELISM (M)</li> <li>PARSER</li> <li>PARTIAL</li> <li>PARTITIONS</li> <li>PASSWORD</li> <li>PASSWORD_LOCK_TIME</li> <li>PAUSE (M)</li> <li>PERCENT (M)</li> <li>PERSIST</li> <li>PLUGINS</li> <li>POINT</li> <li>POLYGON</li> <li>PRECEDING</li> <li>PREPARE</li> <li>PREV</li> <li>PRIVILEGES</li> <li>PROCEDURE</li> <li>PROCESSLIST</li> <li>PROFILES</li> <li>PROPERTIES (M)</li> <li>PROXY</li> <li>PUBLICATION (M)</li> <li>PUBLICATIONS (M)</li> <li>PUMP (M)</li> </ul>"},{"location":"MatrixOne/Reference/Language-Structure/keywords/#q_1","title":"Q","text":"<ul> <li>QUARTER</li> <li>QUERY</li> <li>QUERY_RESULT (M)</li> </ul>"},{"location":"MatrixOne/Reference/Language-Structure/keywords/#r_1","title":"R","text":"<ul> <li>RANDOM</li> <li>RANGE</li> <li>READ</li> <li>REAL</li> <li>REDUNDANT</li> <li>REFERENCE</li> <li>RELEASE</li> <li>RELOAD</li> <li>REORGANIZE</li> <li>REPAIR</li> <li>REPEATABLE</li> <li>REPLICATION</li> <li>RESET</li> <li>RESTRICT</li> <li>RESTRICTED (M)</li> <li>RESUME</li> <li>RETURNS</li> <li>REUSE</li> <li>REVERSE</li> <li>REVOKE</li> <li>ROLE</li> <li>ROLES (M)</li> <li>ROLLBACK</li> <li>ROUTINE</li> <li>ROW_COUNT</li> <li>ROW_FORMAT</li> <li>RTREE</li> </ul>"},{"location":"MatrixOne/Reference/Language-Structure/keywords/#s_1","title":"S","text":"<ul> <li>S3OPTION (M)</li> <li>SAMPLE (M)</li> <li>SAN (M)</li> <li>SECOND</li> <li>SECONDARY</li> <li>SECONDARY_ENGINE_ATTRIBUTE</li> <li>SECURITY</li> <li>SEQUENCE (M)</li> <li>SEQUENCES (M)</li> <li>SERIALIZABLE</li> <li>SERVERS (M)</li> <li>SESSION</li> <li>SHARE</li> <li>SHARED (M)</li> <li>SHUTDOWN</li> <li>SIGNED</li> <li>SIMPLE</li> <li>SLAVE</li> <li>SLIDING (M)</li> <li>SMALLINT</li> <li>SNAPSHOT</li> <li>SOME</li> <li>SOURCE</li> <li>SPATIAL</li> <li>SQL</li> <li>SQL_CACHE</li> <li>SQL_NO_CACHE</li> <li>SQL_TSI_DAY</li> <li>SQL_TSI_HOUR</li> <li>SQL_TSI_MINUTE</li> <li>SQL_TSI_MONTH</li> <li>SQL_TSI_QUARTER</li> <li>SQL_TSI_SECOND</li> <li>SQL_TSI_WEEK</li> <li>SQL_TSI_YEAR</li> <li>STAGE (M)</li> <li>STAGEOPTION (M)</li> <li>STAGES (M)</li> <li>START</li> <li>STATS_AUTO_RECALC</li> <li>STATS_PERSISTENT</li> <li>STATS_SAMPLE_PAGES</li> <li>STATUS</li> <li>STORAGE</li> <li>STREAM</li> <li>SUBJECT</li> <li>SUBPARTITION</li> <li>SUBPARTITIONS</li> <li>SUBSCRIPTIONS (M)</li> <li>SUPER</li> <li>SUSPEND</li> </ul>"},{"location":"MatrixOne/Reference/Language-Structure/keywords/#t_1","title":"T","text":"<ul> <li>TABLE_NUMBER (M)</li> <li>TABLE_SIZE (M)</li> <li>TABLE_VALUES (M)</li> <li>TABLES</li> <li>TABLESPACE</li> <li>TASK (M)</li> <li>TEMPTABLE</li> <li>TEXT</li> <li>THAN</li> <li>TIME</li> <li>TIMESTAMP</li> <li>TINYBLOB</li> <li>TINYINT</li> <li>TINYTEXT</li> <li>TRANSACTION</li> <li>TRIGGER</li> <li>TRIGGERS</li> <li>TRUNCATE</li> <li>TYPE</li> </ul>"},{"location":"MatrixOne/Reference/Language-Structure/keywords/#u_1","title":"U","text":"<ul> <li>UNBOUNDED</li> <li>UNCOMMITTED</li> <li>UNDEFINED</li> <li>UNKNOWN</li> <li>UNLOCK</li> <li>UNSIGNED</li> <li>URL</li> <li>USER</li> <li>UUID (M)</li> </ul>"},{"location":"MatrixOne/Reference/Language-Structure/keywords/#v_1","title":"V","text":"<ul> <li>VALIDATION</li> <li>VALUE</li> <li>VARBINARY</li> <li>VARCHAR</li> <li>VARIABLES</li> <li>VECF32 (M)</li> <li>VECF64 (M)</li> <li>VERBOSE (M)</li> <li>VIEW</li> <li>VISIBLE</li> </ul>"},{"location":"MatrixOne/Reference/Language-Structure/keywords/#w_1","title":"W","text":"<ul> <li>WARNINGS</li> <li>WEEK</li> <li>WITHOUT</li> <li>WORK</li> <li>WRITE</li> </ul>"},{"location":"MatrixOne/Reference/Language-Structure/keywords/#x_1","title":"X","text":"<ul> <li>X509</li> </ul>"},{"location":"MatrixOne/Reference/Language-Structure/keywords/#y_1","title":"Y","text":"<ul> <li>YEAR</li> </ul>"},{"location":"MatrixOne/Reference/Language-Structure/keywords/#z","title":"Z","text":"<ul> <li>ZEROFILL</li> <li>ZONEMAP (M)</li> </ul>"},{"location":"MatrixOne/Reference/Limitations/mo-jdbc-feature-list/","title":"JDBC supported features list in MatrixOne","text":"<p>Using JDBC to develop applications, MatrixOne supports the following classes and objects:</p>"},{"location":"MatrixOne/Reference/Limitations/mo-jdbc-feature-list/#1-connection-class-get-the-database-connection-object","title":"1. Connection (Class): Get the database connection object","text":""},{"location":"MatrixOne/Reference/Limitations/mo-jdbc-feature-list/#method-of-the-class","title":"Method of the Class","text":"<ol> <li> <p>Obtain the executed Sql object Statement</p> <ul> <li>Statement createStatement();  </li> <li>Statement prepareStatement(String sql);  </li> </ul> </li> <li> <p>Manage the transaction</p> <ul> <li>Enable the transaction: setAutoCommit(boolean autoCommit), call this method to set the parameter to false, which enable the transaction</li> <li>Commit the transaction: void commit()  </li> <li>Rollback the transaction: void rollback()  </li> </ul> </li> </ol> Methon of the connection interface Supported(Y)/Not support(N) createStatement() Y prepareStatement(String sql) Y prepareCall(String sql) Y nativeSQL(String sql) Y setAutoCommit(boolean autoCommit) Y getAutoCommit() Y commit() Y rollback() Y close() Y isClosed() Y getMetaData() Y setReadOnly(boolean readOnly) Y isReadOnly() Y setCatalog() Y getCatalog() Y setTransactionIsolation(int level) N getTransactionIsolation() N getWarnings() N clearWarnings() N createStatement(int resultSetType, int resultSetConcurrency) Y prepareStatement(String sql, int resultSetType, int resultSetConcurrency) Y prepareCall(String sql, int resultSetType, int resultSetConcurrency) Y getTypeMap() N setTypeMap(java.util.Map&lt;String,Class&lt;?&gt;&gt; map) N setHoldability(int holdability) N getHoldability() N setSavepoint() N setSavepoint(String name) N rollback(Savepoint savepoint) N releaseSavepoint(Savepoint savepoint) N createStatement(int resultSetType, int resultSetConcurrency, int resultSetHoldability) Y prepareStatement(String sql, int resultSetType, int resultSetConcurrency, int resultSetHoldability) Y prepareCall(String sql, int resultSetType, int resultSetConcurrency, int resultSetHoldability) Y prepareStatement(String sql, int autoGeneratedKeys) Y prepareStatement(String sql, int columnIndexes[]) Y prepareStatement(String sql, String columnNames[]) Y createClob() N createBlob() N createNClob() N createSQLXML() N isValid() Y setClientInfo(String name, String value) N setClientInfo(Properties properties) N getClientInfo(String name) N getClientInfo() N createArrayOf(String typeName, Object[] elements) N createStruct(String typeName, Object[] attributes) N setSchema(String schema) N getSchema() N abort(Executor executor) N setNetworkTimeout(Executor executor, int milliseconds) Y getNetworkTimeout() Y"},{"location":"MatrixOne/Reference/Limitations/mo-jdbc-feature-list/#2-method-of-the-statement-class","title":"2. Method of the Statement class","text":"Method of the Statement class Supported(Y)/Not support(N) executeQuery(String sql) Y executeUpdate(String sql) Y close() Y getMaxFieldSize() Y setMaxFieldSize() Y getMaxRows() Y setMaxRows() Y setEscapeProcessing() N getQueryTimeout() Y setQueryTimeout(int seconds) Y cancel() Y getWarnings() N clearWarnings() N setCursorName(String name) N execute(String sql) Y getResultSet() Y getUpdateCount() Y getMoreResults() Y setFetchDirection(int direction) Y getFetchDirection() N setFetchSize(int rows) Y getFetchSize() Y getResultSetConcurrency() Y getResultSetType() Y addBatch( String sql) Y clearBatch() Y executeBatch() Y getConnection() Y getMoreResults(int current) Y getGeneratedKeys() Y executeUpdate(String sql, int autoGeneratedKeys) Y executeUpdate(String sql, int columnIndexes[]) Y executeUpdate(String sql, String columnNames[]) Y execute(String sql, int autoGeneratedKeys) Y execute(String sql, int columnIndexes[]) Y execute(String sql, String columnNames[]) Y getResultSetHoldability() Y isClosed() Y setPoolable(boolean poolable) N isPoolable() N closeOnCompletion() Y isCloseOnCompletion() Y"},{"location":"MatrixOne/Reference/Limitations/mo-jdbc-feature-list/#3-method-of-the-resultset-class","title":"3. Method of the ResultSet class","text":"Method of the ResultSet class Supported(Y)/Not support(N) next() Y close() Y wasNull() Y getString(int columnIndex) Y getBoolean(int columnIndex) Y getByte(int columnIndex) Y getShort(int columnIndex) Y getInt(int columnIndex) Y getLong(int columnIndex) Y getFloat(int columnIndex) Y getDouble(int columnIndex) Y getBigDecimal(int columnIndex, int scale) Y getBytes(int columnIndex) Y getDate(int columnIndex) Y getTime(int columnIndex) Y getTimestamp(int columnIndex) Y getAsciiStream(int columnIndex) Y getUnicodeStream(int columnIndex) Y getBinaryStream(int columnIndex) Y getWarnings() N clearWarnings() N getCursorName() N getMetaData() Y getObject() N findColumn() Y getCharacterStream() Y isBeforeFirst() Y isAfterLast() Y isFirst() Y isLast() Y beforeFirst() Y afterLast() Y first() Y last() Y getRow() Y absolute() Y relative() Y previous() Y setFetchDirection() Y getFetchDirection() Y setFetchSize() Y getFetchSize() Y getType() Y getConcurrency() Y rowUpdated() Y rowInserted() Y rowDeleted() Y update()(String of data types) Y updateNull() Y"},{"location":"MatrixOne/Reference/Limitations/mo-jdbc-feature-list/#4-method-of-the-resultsetmetadata","title":"4. Method of the ResultSetMetaData","text":"Method of the ResultSetMetaData Supported(Y)/Not support(N) getColumnCount() Y isAutoIncrement() Y isCaseSensitive() Y isSearchable() Y isCurrency() Y isNullable() Y isSigned() Y getColumnDisplaySize() Y getColumnLabel() Y getColumnName() Y getSchemaName() N getPrecision() Y getScale() Y getTableName() Y getCatalogName() Y getColumnType() Y getColumnTypeName() Y isReadOnly() N isWritable() N isDefinitelyWritable() N getColumnClassName() Y"},{"location":"MatrixOne/Reference/Limitations/mo-jdbc-feature-list/#displaysize-prec-and-scale-statistics-of-mysql-data-type","title":"DisplaySize, Prec, and Scale statistics of Mysql data type","text":"Data types DisplaySize Prec Scale TINYINT 4 4 0 SMALLINT 6 6 0 INT 11 11 0 BIGINT 20 20 0 TINYINT UNSIGNED 3 3 0 SMALLINT UNSIGNED 5 5 0 INT UNSIGNED 10 10 0 BIGINT UNSIGNED 20 20 0 DECIMAL64(according to the actual) 17 15 2 DECIMAL128(according to the actual) 23 21 3 FLOAT 12 12 31 DOUBLE 22 22 31 VARCHAR(according to the actual) 100 100 0 CHAR(according to the actual) 100 100 0 DATE 10 10 0 DATETIME 19 19 0 TIMESTAMP 19 19 0 JSON 2147483647 2147483647 0"},{"location":"MatrixOne/Reference/Limitations/mo-partition-support/","title":"MatrixOne DDL statement partitioning supported","text":""},{"location":"MatrixOne/Reference/Limitations/mo-partition-support/#1-the-partition-type-supported-by-matrixone","title":"1. The partition type supported by MatrixOne","text":"<p>MatrixOne DDL statements support six partition types, which are the same as the MySQL official website:</p> <ul> <li>KEY Partitioning</li> <li>HASH Partitioning</li> </ul> <p>Subpartitioning syntax is currently supported, but plan builds are not.</p>"},{"location":"MatrixOne/Reference/Limitations/mo-partition-support/#2-about-partition-keys","title":"2. About Partition Keys","text":""},{"location":"MatrixOne/Reference/Limitations/mo-partition-support/#partition-keys-primary-keys-and-unique-keys","title":"Partition Keys, Primary Keys and Unique Keys","text":"<p>The relationship rules of Partition Keys, Primary Keys, and Unique Keys can be summarized as follows:</p> <ul> <li>All columns used in a partitioning expression for a partitioned table must be part of every unique key that the table may have.</li> </ul> <p>!!! note        The Unique KEY includes PrimaryKey and unique key.</p> <ul> <li>That is, each unique key on a table must use each column of the table's partitioning expression. A unique key also includes the primary key of a table because, by definition, a table's primary key is also a unique one.</li> </ul>"},{"location":"MatrixOne/Reference/Limitations/mo-partition-support/#examples","title":"Examples","text":"<p>For example, because the unique key on the table does not use every column in the table, each statement that creates the table below is invalid:</p> <pre><code>&gt; CREATE TABLE t1 (\ncol1 INT NOT NULL,\ncol2 DATE NOT NULL,\ncol3 INT NOT NULL,\ncol4 INT NOT NULL,\nUNIQUE KEY (col1, col2)\n)\nPARTITION BY HASH(col3)\nPARTITIONS 4;\nERROR 1503 (HY000): A PRIMARY KEY must include all columns in the table's partitioning function\n\n&gt; CREATE TABLE t2 (\n     col1 INT NOT NULL,\n     col2 DATE NOT NULL,\n     col3 INT NOT NULL,\n     col4 INT NOT NULL,\n     UNIQUE KEY (col1),\n     UNIQUE KEY (col3)\n )\n  PARTITION BY HASH(col1 + col3)\n  PARTITIONS 4;\n\nERROR 1503 (HY000): A PRIMARY KEY must include all columns in the table's partitioning function\n</code></pre>"},{"location":"MatrixOne/Reference/Limitations/mo-partition-support/#about-the-partition-key-is-null","title":"About the partition KEY is NULL","text":"<ol> <li> <p>KEY only accepts lists with Null or more column names. In cases where the table has a primary key, any column used as a partitioning key must contain some or all of the table's primary keys.</p> <p>If no column name is specified as the partitioning key, you can ues the table's primary key. For example, the following <code>CREATE TABLE</code> statement is valid in MySQL.</p> </li> <li> <p>If there is no primary KEY but a UNIQUE KEY, the UNIQUE KEY is used as the partitioning key.</p> <p>For example, in the following table construction sentence, the KEY partition key is NULL, no primary key is defined, but the unique key is used as the partitioning key when the partition expression is constructed:</p> </li> </ol> <pre><code>CREATE TABLE t1 (\ncol1 INT  NOT NULL,\ncol2 DATE NOT NULL,\ncol3 INT NOT NULL,\ncol4 INT NOT NULL,\nUNIQUE KEY (col1, col2)\n)\nPARTITION BY KEY()\nPARTITIONS 4;\n</code></pre> <p>Note</p> <p>Other partition rules are the same as MySQL.</p>"},{"location":"MatrixOne/Reference/Limitations/mo-partition-support/#3-about-matrixone-partition-expressions","title":"3. About MatrixOne Partition Expressions","text":"<p>\u200bWhen a DDL statement constructs a partitioned table, a partition expression is generated for each partition definition. The partition expression can calculate the partition to which the data belongs.</p> <p>In the plan build phase, the partition information data structure in the DDL statement is plan.PartitionInfo:</p> <pre><code>type PartitionInfo struct {\nType                 PartitionType\nExpr                 *Expr\nPartitionExpression  *Expr\nColumns              []*Expr\nPartitionColumns     []string\nPartitionNum         uint64\nPartitions           []*PartitionItem\nAlgorithm            int64\nIsSubPartition       bool\nPartitionMsg         string\n}\n</code></pre> <p><code>PartitionExpression</code> is the partition expression. Partition expressions are MatrixOne's way of converting a partition clause into an expression. Each partition expression is constructed as follows:</p>"},{"location":"MatrixOne/Reference/Limitations/mo-partition-support/#key-partitioning","title":"KEY Partitioning","text":"<p>KEY partitioning will construct a partition expression based on the partition key and the number of partitions. The result of the partition expression is an integer greater than or equal to 0, representing the partition sequence number, which increases sequentially from zero.</p> <p>SQL example is as below:</p> <pre><code>CREATE TABLE t1 (\ncol1 INT NOT NULL,\ncol2 DATE NOT NULL,\ncol3 INT NOT NULL,\ncol4 INT NOT NULL,\nPRIMARY KEY (col1, col2)\n)\nPARTITION BY KEY(col1)\nPARTITIONS 4;\n</code></pre>"},{"location":"MatrixOne/Reference/Limitations/mo-partition-support/#hash-partitioning","title":"HASH Partitioning","text":"<p>HASH partitioning will construct a partition expression based on the partition function and the number of partitions. The result of the partition expression is an integer greater than or equal to 0, representing the partition sequence number, which increases sequentially from zero.</p> <p>SQL example is as below:</p> <pre><code>CREATE TABLE t1 (\ncol1 INT,\ncol2 CHAR(5),\ncol3 DATE\n)\nPARTITION BY LINEAR HASH( YEAR(col3))\nPARTITIONS 6;\n</code></pre>"},{"location":"MatrixOne/Reference/Operators/interval/","title":"INTERVAL","text":""},{"location":"MatrixOne/Reference/Operators/interval/#description","title":"Description","text":"<ul> <li> <p>The <code>INTERVAL</code> values are used mainly for date and time calculations. The <code>INTERVAL</code> in expressions represents a temporal interval.</p> </li> <li> <p>Temporal intervals are used for certain functions, such as <code>DATE_ADD()</code> and <code>DATE_SUB()</code>.</p> </li> <li> <p>Temporal arithmetic also can be performed in expressions using INTERVAL together with the <code>+</code> or <code>-</code> operator:</p> <pre><code>date + INTERVAL expr unit\ndate - INTERVAL expr unit\n</code></pre> <ul> <li>INTERVAL expr unit is permitted on either side of the <code>+</code> operator if the expression on the other side is a date or datetime value.</li> <li>For the <code>-</code> operator, INTERVAL expr unit is permitted only on the right side, because it makes no sense to subtract a date or datetime value from an interval.</li> </ul> </li> </ul>"},{"location":"MatrixOne/Reference/Operators/interval/#syntax","title":"Syntax","text":"<pre><code>&gt; INTERVAL (expr,unit)\n</code></pre>"},{"location":"MatrixOne/Reference/Operators/interval/#arguments","title":"Arguments","text":"Arguments Description expr represents a quantity. unit the unit for interpreting the quantity; it is a specifier such as HOUR, DAY, or WEEK. <p>Note: The <code>INTERVAL</code> keyword and the <code>unit</code> specifier are not case-sensitive.</p> <ul> <li>Temporal Interval Expression and Unit Arguments</li> </ul> unit Value Expected expr Format MICROSECOND MICROSECONDS SECOND SECONDS MINUTE MINUTES HOUR HOURS DAY DAYS WEEK WEEKS MONTH MONTHS QUARTER QUARTERS YEAR YEARS SECOND_MICROSECOND 'SECONDS.MICROSECONDS' MINUTE_MICROSECOND 'MINUTES:SECONDS.MICROSECONDS' MINUTE_SECOND 'MINUTES:SECONDS' HOUR_MICROSECOND 'HOURS:MINUTES:SECONDS.MICROSECONDS' HOUR_SECOND 'HOURS:MINUTES:SECONDS' HOUR_MINUTE 'HOURS:MINUTES' DAY_MICROSECOND 'DAYS HOURS:MINUTES:SECONDS.MICROSECONDS' DAY_SECOND 'DAYS HOURS:MINUTES:SECONDS' DAY_MINUTE 'DAYS HOURS:MINUTES' DAY_HOUR 'DAYS HOURS' YEAR_MONTH 'YEARS-MONTHS' <p>We permits any punctuation delimiter in the expr format. Those shown in the table are the suggested delimiters.</p>"},{"location":"MatrixOne/Reference/Operators/interval/#examples","title":"Examples","text":""},{"location":"MatrixOne/Reference/Operators/interval/#example-1","title":"Example 1","text":"<ul> <li>Temporal intervals are used for <code>DATE_ADD()</code> and <code>DATE_SUB()</code>:</li> </ul> <pre><code>mysql&gt; SELECT DATE_SUB('2018-05-01',INTERVAL 1 YEAR);\n+-----------------------------------------+\n| date_sub(2018-05-01, interval(1, year)) |\n+-----------------------------------------+\n| 2017-05-01                              |\n+-----------------------------------------+\n1 row in set (0.00 sec)\n\nmysql&gt; SELECT DATE_ADD('2020-12-31 23:59:59', INTERVAL 1 SECOND);\n+----------------------------------------------------+\n| date_add(2020-12-31 23:59:59, interval(1, second)) |\n+----------------------------------------------------+\n| 2021-01-01 00:00:00                                |\n+----------------------------------------------------+\n1 row in set (0.01 sec)\n\nmysql&gt; SELECT DATE_ADD('2018-12-31 23:59:59', INTERVAL 1 DAY);\n+-------------------------------------------------+\n| date_add(2018-12-31 23:59:59, interval(1, day)) |\n+-------------------------------------------------+\n| 2019-01-01 23:59:59                             |\n+-------------------------------------------------+\n1 row in set (0.00 sec)\n\nmysql&gt; SELECT DATE_ADD('2100-12-31 23:59:59', INTERVAL '1:1' MINUTE_SECOND);\n+-------------------------------------------------------------+\n| date_add(2100-12-31 23:59:59, interval(1:1, minute_second)) |\n+-------------------------------------------------------------+\n| 2101-01-01 00:01:00                                         |\n+-------------------------------------------------------------+\n1 row in set (0.00 sec)\n\nmysql&gt; SELECT DATE_SUB('2025-01-01 00:00:00', INTERVAL '1 1:1:1' DAY_SECOND);\n+--------------------------------------------------------------+\n| date_sub(2025-01-01 00:00:00, interval(1 1:1:1, day_second)) |\n+--------------------------------------------------------------+\n| 2024-12-30 22:58:59                                          |\n+--------------------------------------------------------------+\n1 row in set (0.00 sec)\n\nmysql&gt; SELECT DATE_ADD('1900-01-01 00:00:00', INTERVAL '-1 10' DAY_HOUR);\n+----------------------------------------------------------+\n| date_add(1900-01-01 00:00:00, interval(-1 10, day_hour)) |\n+----------------------------------------------------------+\n| 1899-12-30 14:00:00.000000                               |\n+----------------------------------------------------------+\n1 row in set (0.00 sec)\n\nmysql&gt; SELECT DATE_SUB('1998-01-02', INTERVAL 31 DAY);\n+-----------------------------------------+\n| date_sub(1998-01-02, interval(31, day)) |\n+-----------------------------------------+\n| 1997-12-02                              |\n+-----------------------------------------+\n1 row in set (0.00 sec)\n\nmysql&gt; SELECT DATE_ADD('1992-12-31 23:59:59.000002', INTERVAL '1.999999' SECOND_MICROSECOND);\n+------------------------------------------------------------------------------+\n| date_add(1992-12-31 23:59:59.000002, interval(1.999999, second_microsecond)) |\n+------------------------------------------------------------------------------+\n| 1993-01-01 00:00:01.000001                                                   |\n+------------------------------------------------------------------------------+\n1 row in set (0.00 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/Operators/interval/#example-2","title":"Example 2","text":"<ul> <li>Using INTERVAL together with the <code>+</code> or <code>-</code> operator</li> </ul> <pre><code>mysql&gt; SELECT '2018-12-31 23:59:59' + INTERVAL 1 SECOND;\n+-------------------------------------------+\n| 2018-12-31 23:59:59 + interval(1, second) |\n+-------------------------------------------+\n| 2019-01-01 00:00:00                       |\n+-------------------------------------------+\n1 row in set (0.00 sec)\n\nmysql&gt; SELECT INTERVAL 1 DAY + '2018-12-31';\n+-------------------------------+\n| interval(1, day) + 2018-12-31 |\n+-------------------------------+\n| 2019-01-01                    |\n+-------------------------------+\n1 row in set (0.00 sec)\n\nmysql&gt; SELECT '2025-01-01' - INTERVAL 1 SECOND;\n+----------------------------------+\n| 2025-01-01 - interval(1, second) |\n+----------------------------------+\n| 2024-12-31 23:59:59              |\n+----------------------------------+\n1 row in set (0.00 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/Operators/interval/#example-3","title":"Example 3","text":"<p>If you add to or subtract from a date value something that contains a time part, the result is automatically converted to a datetime value:</p> <pre><code>mysql&gt; SELECT DATE_ADD('2023-01-01', INTERVAL 1 DAY);\n+----------------------------------------+\n| date_add(2023-01-01, interval(1, day)) |\n+----------------------------------------+\n| 2023-01-02                             |\n+----------------------------------------+\n1 row in set (0.00 sec)\n\nmysql&gt; SELECT DATE_ADD('2023-01-01', INTERVAL 1 HOUR);\n+-----------------------------------------+\n| date_add(2023-01-01, interval(1, hour)) |\n+-----------------------------------------+\n| 2023-01-01 01:00:00                     |\n+-----------------------------------------+\n1 row in set (0.01 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/Operators/interval/#example-4","title":"Example 4","text":"<p>If you add MONTH, YEAR_MONTH, or YEAR and the resulting date has a day that is larger than the maximum day for the new month, the day is adjusted to the maximum days in the new month:</p> <pre><code>mysql&gt; SELECT DATE_ADD('2019-01-30', INTERVAL 1 MONTH);\n+------------------------------------------+\n| date_add(2019-01-30, interval(1, month)) |\n+------------------------------------------+\n| 2019-02-28                               |\n+------------------------------------------+\n1 row in set (0.00 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/Operators/interval/#example-5","title":"Example 5","text":"<p>Date arithmetic operations require complete dates and do not work with incomplete dates such as '2016-07-00' or badly malformed dates:</p> <pre><code>mysql&gt; SELECT DATE_ADD('2016-07-00', INTERVAL 1 DAY);\n+----------------------------------------+\n| date_add(2016-07-00, interval(1, day)) |\n+----------------------------------------+\n| NULL                                   |\n+----------------------------------------+\n1 row in set (0.00 sec)\n\nmysql&gt; SELECT '2005-03-32' + INTERVAL 1 MONTH;\n+---------------------------------+\n| 2005-03-32 + interval(1, month) |\n+---------------------------------+\n| NULL                            |\n+---------------------------------+\n1 row in set (0.00 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/Operators/operators/operator-precedence/","title":"Operator Precedence","text":"<p>Operator precedences are shown in the following list, from highest precedence to the lowest. Operators that are shown together on a line have the same precedence.</p> From highest precedence to the lowest Operators 1 INTERVAL 2 BINARY, COLLATE 3 ! 4 - (unary minus), ~ (unary bit inversion) 5 ^ 6 *, /, DIV, %, MOD 7 -, + 8 &lt;&lt;, &gt;&gt; 9 &amp; 10 | 11 = (comparison), &lt;=&gt;, &gt;=, &gt;, &lt;=, &lt;, &lt;&gt;, !=, IS, LIKE, , IN, MEMBER OF 12 BETWEEN, CASE, WHEN, THEN, ELSE 13 NOT 14 AND, &amp;&amp; 15 XOR 16 OR, || 17 = (assignment) <p>The precedence of = depends on whether it is used as a comparison operator (=) or as an assignment operator (=). When used as a comparison operator, it has the same precedence as , &gt;=, &gt;, &lt;=, &lt;, &lt;&gt;, !=, IS, LIKE, and IN().</p> <p>For operators that occur at the same precedence level within an expression, evaluation proceeds left to right, with the exception that assignments evaluate right to left.</p>"},{"location":"MatrixOne/Reference/Operators/operators/operators/","title":"Operators Overview","text":""},{"location":"MatrixOne/Reference/Operators/operators/operators/#arithmetic-operators","title":"Arithmetic Operators","text":"Name Description %,MOD Modulo operator * Multiplication operator + Addition operator - Minus operator - Change the sign of the argument / Division operator DIV Integer division"},{"location":"MatrixOne/Reference/Operators/operators/operators/#assignment-operators","title":"Assignment Operators","text":"Name Description = Equal operator"},{"location":"MatrixOne/Reference/Operators/operators/operators/#bit-functions-and-operators","title":"Bit Functions and Operators","text":"Name Description &amp; Bitwise AND &gt;&gt; Right shift &lt;&lt; Left shift ^ Bitwise XOR | Bitwise OR ~ Bitwise inversion"},{"location":"MatrixOne/Reference/Operators/operators/operators/#cast-functions-and-operators","title":"Cast Functions and Operators","text":"Name Description BINARY() Convert a value to a binary string CAST() Cast a value as a certain type CONVERT() Cast a value as a certain type"},{"location":"MatrixOne/Reference/Operators/operators/operators/#comparison-functions-and-operators","title":"Comparison Functions and Operators","text":"Name Description &gt; Greater than operator &gt;= Greater than or equal operator &lt; Less than operator &lt;&gt;,!= Not equal operator &lt;= Less than or equal operator = Equal operator BETWEEN ... AND ... Whether a value is within a range of values IN() Whether a value is within a set of values IS Test a value against a boolean IS NOT Test a value against a boolean IS NOT NULL NOT NULL value test IS NULL NULL value test ISNULL instead of = to test whether a value is NULL LIKE Simple pattern matching ILIKE Simple pattern matching. Same as LIKE. But it is not case sensitive. NOT BETWEEN ... AND ... Whether a value is not within a range of values NOT IN shorthand for multiple <code>XOR</code> conditions NOT LIKE Negation of simple pattern matching COALESCE Return the first non-null value in a list"},{"location":"MatrixOne/Reference/Operators/operators/operators/#flow-control-functions","title":"Flow Control Functions","text":"Name Description CASE Case operator IF() If/else construct IFNULL() Null if/else construct NULLIF() Return NULL if expr1 = expr2"},{"location":"MatrixOne/Reference/Operators/operators/operators/#logical-operators","title":"Logical Operators","text":"Name Description AND,&amp;&amp; Logical AND NOT,! Negates value OR Logical OR XOR Logical XOR"},{"location":"MatrixOne/Reference/Operators/operators/arithmetic-operators/addition/","title":"+","text":""},{"location":"MatrixOne/Reference/Operators/operators/arithmetic-operators/addition/#description","title":"Description","text":"<p>The <code>+</code> operator is used for addition.</p>"},{"location":"MatrixOne/Reference/Operators/operators/arithmetic-operators/addition/#syntax","title":"Syntax","text":"<pre><code>&gt; SELECT value1+value2;\n</code></pre> <pre><code>&gt; SELECT column1+column2... FROM table_name;\n</code></pre>"},{"location":"MatrixOne/Reference/Operators/operators/arithmetic-operators/addition/#examples","title":"Examples","text":"<pre><code>mysql&gt; select 1123.2333+1233.3331;\n+-----------------------+\n| 1123.2333 + 1233.3331 |\n+-----------------------+\n|             2356.5664 |\n+-----------------------+\n1 row in set (0.01 sec)\n</code></pre> <pre><code>create table t2(c1 int, c2 int);\ninsert into t2 values (-3, 2);\ninsert into t2 values (1, 2);\n\nmysql&gt; select c1+5 from t2;\n+--------+\n| c1 + 5 |\n+--------+\n|      2 |\n|      6 |\n+--------+\n2 rows in set (0.00 sec)\n\nmysql&gt; select c1+c2 from t2;\n+---------+\n| c1 + c2 |\n+---------+\n|      -1 |\n|       3 |\n+---------+\n2 rows in set (0.00 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/Operators/operators/arithmetic-operators/arithmetic-operators-overview/","title":"Arithmetic Operators Overview","text":"Name Description %,MOD Modulo operator * Multiplication operator + Addition operator - Minus operator - Change the sign of the argument / Division operator DIV Integer division <p>The usual arithmetic operators are available. The result is determined according to the following rules:</p> <ul> <li> <p>In the case of <code>-</code>, <code>+</code>, and <code>*</code>, the result is calculated with <code>BIGINT</code> (64-bit) precision if both operands are integers.</p> </li> <li> <p>If both operands are integers and any of them are unsigned, the result is an unsigned integer.</p> </li> <li> <p>If any of the operands of a <code>+</code>,<code>-</code>, <code>/</code>, <code>*</code>, <code>%</code> is a real or string value, the precision of the result is the precision of the operand with the maximum precision.</p> </li> </ul> <p>In division performed with <code>/</code>, the scale of the result when using two exact-value operands is the scale of the first operand plus the value of the div_precision_increment system variable. For example, the result of the expression 5.05 / 0.014 has a scale of 13 decimal places (360.7142857142857).</p> <p>These rules are applied for each operation, such that nested calculations imply the precision of each component. Hence, (14620 / 9432456) / (24250 / 9432456), resolves first to (0.0014) / (0.0026), with the final result having 16 decimal places (0.6028865979381443).</p>"},{"location":"MatrixOne/Reference/Operators/operators/arithmetic-operators/arithmetic-operators-overview/#constraints","title":"Constraints","text":"<ul> <li>Arithmetic operators only apply to numbers.</li> <li>To ensure that components and subcomponents of a calculation use the appropriate level of precision. See Cast Functions and Operators.</li> </ul>"},{"location":"MatrixOne/Reference/Operators/operators/arithmetic-operators/div/","title":"DIV","text":""},{"location":"MatrixOne/Reference/Operators/operators/arithmetic-operators/div/#description","title":"Description","text":"<p>The <code>DIV</code> operator is used for integer division. Discards from the division result any fractional part to the right of the decimal point.</p> <p>If either operand has a non-integer type, the operands are converted to <code>DECIMAL</code> and divided using <code>DECIMAL</code> arithmetic before converting the result to <code>BIGINT</code>. If the result exceeds <code>BIGINT</code> range, an error occurs.</p>"},{"location":"MatrixOne/Reference/Operators/operators/arithmetic-operators/div/#syntax","title":"Syntax","text":"<pre><code>&gt; SELECT value1 DIV value2;\n</code></pre> <pre><code>&gt; SELECT column1 DIV column2... FROM table_name;\n</code></pre>"},{"location":"MatrixOne/Reference/Operators/operators/arithmetic-operators/div/#examples","title":"Examples","text":"<pre><code>mysql&gt; SELECT 5 DIV 2, -5 DIV 2, 5 DIV -2, -5 DIV -2;\n+---------+----------+----------+-----------+\n| 5 div 2 | -5 div 2 | 5 div -2 | -5 div -2 |\n+---------+----------+----------+-----------+\n|       2 |       -2 |       -2 |         2 |\n+---------+----------+----------+-----------+\n1 row in set (0.00 sec)\n</code></pre> <pre><code>create table t2(c1 int, c2 int);\ninsert into t2 values (-3, 2);\ninsert into t2 values (1, 2);\n\nmysql&gt; select c1 DIV 3 from t2;\n+----------+\n| c1 div 3 |\n+----------+\n|       -1 |\n|        0 |\n+----------+\n2 rows in set (0.00 sec)\n\nmysql&gt; select c1 DIV c2 from t2;\n+-----------+\n| c1 div c2 |\n+-----------+\n|        -1 |\n|         0 |\n+-----------+\n2 rows in set (0.00 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/Operators/operators/arithmetic-operators/division/","title":"/","text":""},{"location":"MatrixOne/Reference/Operators/operators/arithmetic-operators/division/#description","title":"Description","text":"<p>The <code>/</code> operator is used for division.</p>"},{"location":"MatrixOne/Reference/Operators/operators/arithmetic-operators/division/#syntax","title":"Syntax","text":"<pre><code>&gt; SELECT value1/value2;\n</code></pre> <pre><code>&gt; SELECT column1/column2... FROM table_name;\n</code></pre> <p>Division by zero produces a error result.</p>"},{"location":"MatrixOne/Reference/Operators/operators/arithmetic-operators/division/#examples","title":"Examples","text":"<pre><code>mysql&gt; select 1123.2333/1233.3331;\n+-----------------------+\n| 1123.2333 / 1233.3331 |\n+-----------------------+\n|    0.9107298750029493 |\n+-----------------------+\n1 row in set (0.00 sec)\n</code></pre> <pre><code>create table t2(c1 int, c2 int);\ninsert into t2 values (-3, 2);\ninsert into t2 values (1, 2);\n\nmysql&gt; select c1/2 from t2;\n+--------+\n| c1 / 2 |\n+--------+\n|   -1.5 |\n|    0.5 |\n+--------+\n2 rows in set (0.00 sec)\n\nmysql&gt; select c1/c2 from t2;\n+---------+\n| c1 / c2 |\n+---------+\n|    -1.5 |\n|     0.5 |\n+---------+\n2 rows in set (0.01 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/Operators/operators/arithmetic-operators/minus/","title":"-","text":""},{"location":"MatrixOne/Reference/Operators/operators/arithmetic-operators/minus/#description","title":"Description","text":"<p>The <code>-</code> operator is used for subtraction.</p>"},{"location":"MatrixOne/Reference/Operators/operators/arithmetic-operators/minus/#syntax","title":"Syntax","text":"<pre><code>&gt; SELECT value1-value2;\n</code></pre> <pre><code>&gt; SELECT column1-column2... FROM table_name;\n</code></pre>"},{"location":"MatrixOne/Reference/Operators/operators/arithmetic-operators/minus/#examples","title":"Examples","text":"<pre><code>mysql&gt; select 1123.2333-1233.3331;\n+-----------------------+\n| 1123.2333 - 1233.3331 |\n+-----------------------+\n|   -110.09979999999996 |\n+-----------------------+\n1 row in set (0.00 sec)\n</code></pre> <pre><code>create table t2(c1 int, c2 int);\ninsert into t2 values (-3, 2);\ninsert into t2 values (1, 2);\n\nmysql&gt; select c1-5 from t2;\n+--------+\n| c1 - 5 |\n+--------+\n|     -8 |\n|     -4 |\n+--------+\n2 rows in set (0.00 sec)\n\nmysql&gt; select c1-c2 from t2;\n+---------+\n| c1 - c2 |\n+---------+\n|      -5 |\n|      -1 |\n+---------+\n2 rows in set (0.01 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/Operators/operators/arithmetic-operators/mod/","title":"%,MOD","text":""},{"location":"MatrixOne/Reference/Operators/operators/arithmetic-operators/mod/#description","title":"Description","text":"<p>The <code>%,MOD</code> operator is used for modulo operation. Returns the remainder of N divided by M. For more information.</p>"},{"location":"MatrixOne/Reference/Operators/operators/arithmetic-operators/mod/#syntax","title":"Syntax","text":"<pre><code>&gt; SELECT N % M, N MOD M;\n</code></pre>"},{"location":"MatrixOne/Reference/Operators/operators/arithmetic-operators/mod/#examples","title":"Examples","text":"<pre><code>mysql&gt; select 12 mod 5;\n+--------+\n| 12 % 5 |\n+--------+\n|      2 |\n+--------+\n1 row in set (0.00 sec)\n</code></pre> <pre><code>create table t2(c1 int, c2 int);\ninsert into t2 values (-3, 2);\ninsert into t2 values (1, 2);\n\nmysql&gt; select c1 mod 2 from t2;\n+--------+\n| c1 % 2 |\n+--------+\n|     -1 |\n|      1 |\n+--------+\n2 rows in set (0.01 sec)\n\nmysql&gt; select c1 mod c2 from t2;\n+---------+\n| c1 % c2 |\n+---------+\n|      -1 |\n|       1 |\n+---------+\n2 rows in set (0.01 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/Operators/operators/arithmetic-operators/multiplication/","title":"*","text":""},{"location":"MatrixOne/Reference/Operators/operators/arithmetic-operators/multiplication/#description","title":"Description","text":"<p>The <code>*</code> operator is used for multiplication.</p>"},{"location":"MatrixOne/Reference/Operators/operators/arithmetic-operators/multiplication/#syntax","title":"Syntax","text":"<pre><code>&gt; SELECT value1*value2;\n</code></pre> <pre><code>&gt; SELECT column1*column2... FROM table_name;\n</code></pre>"},{"location":"MatrixOne/Reference/Operators/operators/arithmetic-operators/multiplication/#examples","title":"Examples","text":"<pre><code>mysql&gt; select 1123.2333*1233.3331;\n+-----------------------+\n| 1123.2333 * 1233.3331 |\n+-----------------------+\n|    1385320.8079122303 |\n+-----------------------+\n1 row in set (0.01 sec)\n</code></pre> <pre><code>create table t2(c1 int, c2 int);\ninsert into t2 values (-3, 2);\ninsert into t2 values (1, 2);\n\nmysql&gt; select c1*2 from t2;\n+--------+\n| c1 * 2 |\n+--------+\n|     -6 |\n|      2 |\n+--------+\n2 rows in set (0.00 sec)\n\nmysql&gt; select c1*c2 from t2;\n+---------+\n| c1 * c2 |\n+---------+\n|      -6 |\n|       2 |\n+---------+\n2 rows in set (0.01 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/Operators/operators/arithmetic-operators/unary-minus/","title":"-","text":""},{"location":"MatrixOne/Reference/Operators/operators/arithmetic-operators/unary-minus/#description","title":"Description","text":"<p>Unary minus. This operator changes the sign of the operand.</p>"},{"location":"MatrixOne/Reference/Operators/operators/arithmetic-operators/unary-minus/#syntax","title":"Syntax","text":"<pre><code>&gt; SELECT -column1, -column2, ...\nFROM table_name;\n</code></pre>"},{"location":"MatrixOne/Reference/Operators/operators/arithmetic-operators/unary-minus/#examples","title":"Examples","text":"<pre><code>mysql&gt; select -2;\n+------+\n| -2   |\n+------+\n|   -2 |\n+------+\n</code></pre> <pre><code>create table t2(c1 int, c2 int);\ninsert into t2 values (-3, 2);\ninsert into t2 values (1, 2);\n\nmysql&gt; select -c1 from t2;\n+------+\n| -c1  |\n+------+\n|    3 |\n|   -1 |\n+------+\n2 rows in set (0.00 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/Operators/operators/assignment-operators/assignment-operators-overview/","title":"Assignment Operators Overview","text":""},{"location":"MatrixOne/Reference/Operators/operators/assignment-operators/assignment-operators-overview/#assignment-operators-overview","title":"Assignment Operators Overview","text":"Name Description = Equal operator"},{"location":"MatrixOne/Reference/Operators/operators/assignment-operators/equal/","title":"=","text":""},{"location":"MatrixOne/Reference/Operators/operators/assignment-operators/equal/#description","title":"Description","text":"<p>This <code>=</code> operator is used to perform value assignments in the below cases:</p> <ul> <li> <p>Within a <code>SET</code> statement, <code>=</code> is treated as an assignment operator that causes the user variable on the left hand side of the operator to take on the value to its right. The value on the right hand side may be a literal value, another variable storing a value, or any legal expression that yields a scalar value, including the result of a query (provided that this value is a scalar value). You can perform multiple assignments in the same SET statement.</p> </li> <li> <p>In the <code>SET</code> clause of an <code>UPDATE</code> statement, <code>=</code> also acts as an assignment operator. You can make multiple assignments in the same <code>SET</code> clause of an <code>UPDATE</code> statement.</p> </li> <li> <p>In any other context, <code>=</code> is treated as a comparison operator.</p> </li> </ul>"},{"location":"MatrixOne/Reference/Operators/operators/assignment-operators/equal/#syntax","title":"Syntax","text":"<pre><code>&gt; SELECT column1, column2, ...\nFROM table_name\nWHERE columnN = value1;\n</code></pre>"},{"location":"MatrixOne/Reference/Operators/operators/assignment-operators/equal/#examples","title":"Examples","text":"<pre><code>create table t1 (a bigint(3), b bigint(5) primary key);\ninsert into t1 VALUES (1,1),(1,2);\nupdate t1 set a=2 where a=1 limit 1;\n\nmysql&gt; select * from t1;\n+------+------+\n| a    | b    |\n+------+------+\n|    2 |    1 |\n|    1 |    2 |\n+------+------+\n2 rows in set (0.00 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/Operators/operators/bit-functions-and-operators/bit-functions-and-operators-overview/","title":"Bit Functions and Operators","text":"Name Description &amp; Bitwise AND &gt;&gt; Right shift &lt;&lt; Left shift ^ Bitwise XOR | Bitwise OR ~ Bitwise inversion <p>Bit functions and operators required BIGINT (64-bit integer) arguments and returned BIGINT values, so they had a maximum range of 64 bits. Non-BIGINT arguments were converted to BIGINT prior to performing the operation and truncation could occur.</p> <p>Bit functions and operators permit binary string type arguments (BINARY, VARBINARY, and the BLOB types) and return a value of like type, which enables them to take arguments and produce return values larger than 64 bits. Nonbinary string arguments are converted to BIGINT and processed as such, as before.</p>"},{"location":"MatrixOne/Reference/Operators/operators/bit-functions-and-operators/bitwise-and/","title":"&amp;","text":""},{"location":"MatrixOne/Reference/Operators/operators/bit-functions-and-operators/bitwise-and/#description","title":"Description","text":"<p><code>Bitwise AND</code> operator returns an unsigned 64-bit integer.</p> <p>The result type depends on whether the arguments are evaluated as binary strings or numbers:</p> <ul> <li> <p>Binary-string evaluation occurs when the arguments have a binary string type, and at least one of them is not a hexadecimal literal, bit literal, or NULL literal. Numeric evaluation occurs otherwise, with argument conversion to unsigned 64-bit integers as necessary.</p> </li> <li> <p>Binary-string evaluation produces a binary string of the same length as the arguments. If the arguments have unequal lengths, an ER_INVALID_BITWISE_OPERANDS_SIZE error occurs. Numeric evaluation produces an unsigned 64-bit integer.</p> </li> </ul>"},{"location":"MatrixOne/Reference/Operators/operators/bit-functions-and-operators/bitwise-and/#syntax","title":"Syntax","text":"<pre><code>&gt; SELECT value1 &amp; value2;\n</code></pre>"},{"location":"MatrixOne/Reference/Operators/operators/bit-functions-and-operators/bitwise-and/#examples","title":"Examples","text":"<pre><code>mysql&gt; SELECT 29 &amp; 15;\n+---------+\n| 29 &amp; 15 |\n+---------+\n|      13 |\n+---------+\n1 row in set (0.06 sec)\n\nCREATE TABLE bitwise (a_int_value INT NOT NULL,b_int_value INT NOT NULL);\nINSERT bitwise VALUES (170, 75);  mysql&gt; SELECT a_int_value &amp; b_int_value FROM bitwise;  +---------------------------+\n| a_int_value &amp; b_int_value |\n+---------------------------+\n|                        10 |\n+---------------------------+\n1 row in set (0.02 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/Operators/operators/bit-functions-and-operators/bitwise-inversion/","title":"~","text":""},{"location":"MatrixOne/Reference/Operators/operators/bit-functions-and-operators/bitwise-inversion/#description","title":"Description","text":"<p>Invert all bits.</p> <p>The result type depends on whether the bit argument is evaluated as a binary string or number:</p> <ul> <li> <p>Binary-string evaluation occurs when the bit argument has a binary string type, and is not a hexadecimal literal, bit literal, or NULL literal. Numeric evaluation occurs otherwise, with argument conversion to an unsigned 64-bit integer as necessary.</p> </li> <li> <p>Binary-string evaluation produces a binary string of the same length as the bit argument. Numeric evaluation produces an unsigned 64-bit integer.</p> </li> </ul>"},{"location":"MatrixOne/Reference/Operators/operators/bit-functions-and-operators/bitwise-inversion/#syntax","title":"Syntax","text":"<pre><code>&gt; SELECT value1 ~ value2;\n</code></pre>"},{"location":"MatrixOne/Reference/Operators/operators/bit-functions-and-operators/bitwise-inversion/#examples","title":"Examples","text":"<pre><code>mysql&gt; select ~-5;\n+--------+\n| ~ (-5) |\n+--------+\n|      4 |\n+--------+\n1 row in set (0.00 sec)\n\nmysql&gt; select ~null;\n+-------+\n| ~null |\n+-------+\n|  NULL |\n+-------+\n1 row in set (0.00 sec)\n\nmysql&gt; select ~a, ~b from t1;\n+------+----------------------+\n| ~a   | ~b                   |\n+------+----------------------+\n|    0 | 18446744073709551614 |\n|    4 | 18446744073709551610 |\n+------+----------------------+\n2 rows in set (0.00 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/Operators/operators/bit-functions-and-operators/bitwise-or/","title":"|","text":""},{"location":"MatrixOne/Reference/Operators/operators/bit-functions-and-operators/bitwise-or/#description","title":"Description","text":"<p>Bitwise OR.</p> <p>The result type depends on whether the arguments are evaluated as binary strings or numbers:</p> <ul> <li> <p>Binary-string evaluation occurs when the arguments have a binary string type, and at least one of them is not a hexadecimal literal, bit literal, or <code>NULL</code> literal. Numeric evaluation occurs otherwise, with argument conversion to unsigned 64-bit integers as necessary.</p> </li> <li> <p>Binary-string evaluation produces a binary string of the same length as the arguments. If the arguments have unequal lengths, an <code>ER_INVALID_BITWISE_OPERANDS_SIZE</code> error occurs. Numeric evaluation produces an unsigned 64-bit integer.</p> </li> </ul>"},{"location":"MatrixOne/Reference/Operators/operators/bit-functions-and-operators/bitwise-or/#syntax","title":"Syntax","text":"<pre><code>&gt; SELECT value1 | value2;\n</code></pre>"},{"location":"MatrixOne/Reference/Operators/operators/bit-functions-and-operators/bitwise-or/#examples","title":"Examples","text":"<pre><code>mysql&gt; SELECT 29 | 15;\n+---------+\n| 29 | 15 |\n+---------+\n|      31 |\n+---------+\n1 row in set (0.01 sec)\n\nmysql&gt; select null | 2;\n+----------+\n| null | 2 |\n+----------+\n|     NULL |\n+----------+\n1 row in set (0.01 sec)\n\nmysql&gt; select null | 2;\n+----------+\n| null | 2 |\n+----------+\n|     NULL |\n+----------+\n1 row in set (0.01 sec)\n\ncreate table t1(a int, b int unsigned);\ninsert into t1 values (-1, 1), (-5, 5);\n\nmysql&gt; select a | 2, b | 2 from t1;\n+-------+-------+\n| a | 2 | b | 2 |\n+-------+-------+\n|    -1 |     3 |\n|    -5 |     7 |\n+-------+-------+\n</code></pre>"},{"location":"MatrixOne/Reference/Operators/operators/bit-functions-and-operators/bitwise-xor/","title":"^","text":""},{"location":"MatrixOne/Reference/Operators/operators/bit-functions-and-operators/bitwise-xor/#description","title":"Description","text":"<p>Bitwise XOR.</p> <p>The result type depends on whether the arguments are evaluated as binary strings or numbers:</p> <ul> <li> <p>Binary-string evaluation occurs when the arguments have a binary string type, and at least one of them is not a hexadecimal literal, bit literal, or <code>NULL</code> literal. Numeric evaluation occurs otherwise, with argument conversion to unsigned 64-bit integers as necessary.</p> </li> <li> <p>Binary-string evaluation produces a binary string of the same length as the arguments. If the arguments have unequal lengths, an <code>ER_INVALID_BITWISE_OPERANDS_SIZE</code> error occurs. Numeric evaluation produces an unsigned 64-bit integer.</p> </li> </ul>"},{"location":"MatrixOne/Reference/Operators/operators/bit-functions-and-operators/bitwise-xor/#syntax","title":"Syntax","text":"<pre><code>&gt; SELECT value1 ^ value2;\n</code></pre>"},{"location":"MatrixOne/Reference/Operators/operators/bit-functions-and-operators/bitwise-xor/#examples","title":"Examples","text":"<pre><code>mysql&gt; SELECT 1 ^ 1;\n+-------+\n| 1 ^ 1 |\n+-------+\n|     0 |\n+-------+\n1 row in set (0.00 sec)\n\nmysql&gt; SELECT 1 ^ 0;\n+-------+\n| 1 ^ 0 |\n+-------+\n|     1 |\n+-------+\n1 row in set (0.01 sec)\n\nmysql&gt; SELECT 11 ^ 3;\n+--------+\n| 11 ^ 3 |\n+--------+\n|      8 |\n+--------+\n1 row in set (0.01 sec)\n\nmysql&gt; select null ^ 2;\n+----------+\n| null ^ 2 |\n+----------+\n|     NULL |\n+----------+\n1 row in set (0.01 sec)\n\ncreate table t1(a int, b int unsigned);\ninsert into t1 values (-1, 1), (-5, 5);\n\nmysql&gt; select a ^ 2, b ^ 2 from t1;\n+-------+-------+\n| a ^ 2 | b ^ 2 |\n+-------+-------+\n|    -3 |     3 |\n|    -7 |     7 |\n+-------+-------+\n2 rows in set (0.01 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/Operators/operators/bit-functions-and-operators/left-shift/","title":"&lt;&lt;","text":""},{"location":"MatrixOne/Reference/Operators/operators/bit-functions-and-operators/left-shift/#description","title":"Description","text":"<p>Shifts a longlong (BIGINT) number or binary string to the left.</p> <p>The result type depends on whether the bit argument is evaluated as a binary string or number:</p> <ul> <li> <p>Binary-string evaluation occurs when the bit argument has a binary string type, and is not a hexadecimal literal, bit literal, or NULL literal. Numeric evaluation occurs otherwise, with argument conversion to an unsigned 64-bit integer as necessary.</p> </li> <li> <p>Binary-string evaluation produces a binary string of the same length as the bit argument. Numeric evaluation produces an unsigned 64-bit integer.</p> </li> </ul> <p>Bits shifted off the end of the value are lost without warning, regardless of the argument type. In particular, if the shift count is greater or equal to the number of bits in the bit argument, all bits in the result are 0.</p>"},{"location":"MatrixOne/Reference/Operators/operators/bit-functions-and-operators/left-shift/#syntax","title":"Syntax","text":"<pre><code>&gt; SELECT value1 &lt;&lt; value2;\n</code></pre>"},{"location":"MatrixOne/Reference/Operators/operators/bit-functions-and-operators/left-shift/#examples","title":"Examples","text":"<pre><code>mysql&gt; SELECT 1 &lt;&lt; 2;\n+--------+\n| 1 &lt;&lt; 2 |\n+--------+\n|      4 |\n+--------+\n1 row in set (0.01 sec)\n\nmysql&gt; select -1 &lt;&lt; 2;\n+---------+\n| -1 &lt;&lt; 2 |\n+---------+\n|      -4 |\n+---------+\n1 row in set (0.01 sec)\n\nmysql&gt; select null &lt;&lt; 2;\n+-----------+\n| null &lt;&lt; 2 |\n+-----------+\n|      NULL |\n+-----------+\n1 row in set (0.01 sec)\n\ncreate table t1(a int, b int unsigned);\ninsert into t1 values (-1, 1), (-5, 5);\n\nmysql&gt; select a &lt;&lt; 2, b &lt;&lt; 2 from t1;\n+--------+--------+\n| a &lt;&lt; 2 | b &lt;&lt; 2 |\n+--------+--------+\n|     -4 |      4 |\n|    -20 |     20 |\n+--------+--------+\n2 rows in set (0.01 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/Operators/operators/bit-functions-and-operators/right-shift/","title":"&gt;&gt;","text":""},{"location":"MatrixOne/Reference/Operators/operators/bit-functions-and-operators/right-shift/#description","title":"Description","text":"<p>Shifts a longlong (BIGINT) number or binary string to the right.</p> <p>The result type depends on whether the bit argument is evaluated as a binary string or number:</p> <ul> <li> <p>Binary-string evaluation occurs when the bit argument has a binary string type, and is not a hexadecimal literal, bit literal, or NULL literal. Numeric evaluation occurs otherwise, with argument conversion to an unsigned 64-bit integer as necessary.</p> </li> <li> <p>Binary-string evaluation produces a binary string of the same length as the bit argument. Numeric evaluation produces an unsigned 64-bit integer.</p> </li> </ul> <p>Bits shifted off the end of the value are lost without warning, regardless of the argument type. In particular, if the shift count is greater or equal to the number of bits in the bit argument, all bits in the result are 0.</p>"},{"location":"MatrixOne/Reference/Operators/operators/bit-functions-and-operators/right-shift/#syntax","title":"Syntax","text":"<pre><code>&gt; SELECT value1 &gt;&gt; value2;\n</code></pre>"},{"location":"MatrixOne/Reference/Operators/operators/bit-functions-and-operators/right-shift/#examples","title":"Examples","text":"<pre><code>mysql&gt; select 1024 &gt;&gt; 2;\n+-----------+\n| 1024 &gt;&gt; 2 |\n+-----------+\n|       256 |\n+-----------+\n1 row in set (0.01 sec)\n\nmysql&gt; select -5 &gt;&gt; 2;\n+---------+\n| -5 &gt;&gt; 2 |\n+---------+\n|      -2 |\n+---------+\n1 row in set (0.01 sec)\n\nmysql&gt; select null &gt;&gt; 2;\n+-----------+\n| null &gt;&gt; 2 |\n+-----------+\n|      NULL |\n+-----------+\n1 row in set (0.00 sec)\n\ncreate table t1(a int, b int unsigned);\ninsert into t1 values (-1, 1), (-5, 5);\n\nmysql&gt; select a &gt;&gt; 2, b &gt;&gt; 2 from t1;\n+--------+--------+\n| a &gt;&gt; 2 | b &gt;&gt; 2 |\n+--------+--------+\n|     -1 |      0 |\n|     -2 |      1 |\n+--------+--------+\n2 rows in set (0.01 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/Operators/operators/cast-functions-and-operators/binary/","title":"BINARY","text":""},{"location":"MatrixOne/Reference/Operators/operators/cast-functions-and-operators/binary/#description","title":"Description","text":"<p>The <code>BINARY()</code> function is a function used to convert a value into a binary string. It is typically used when comparing text or character data, treating strings as binary rather than ordinary character data. This enables binary comparisons of character data regardless of character set or encoding.</p> <p>The <code>BINARY()</code> function implements binary comparison of character data, which handles cases such as case-sensitive string comparison.</p>"},{"location":"MatrixOne/Reference/Operators/operators/cast-functions-and-operators/binary/#syntax","title":"Syntax","text":"<pre><code>&gt; BINARY value\n</code></pre>"},{"location":"MatrixOne/Reference/Operators/operators/cast-functions-and-operators/binary/#parameter-values","title":"Parameter Values","text":"Parameter Description value Required. The value to convert"},{"location":"MatrixOne/Reference/Operators/operators/cast-functions-and-operators/binary/#examples","title":"Examples","text":"<pre><code>CREATE TABLE users (id INT AUTO_INCREMENT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(100) NOT NULL);\n\nINSERT INTO users (username, password) VALUES ('JohnDoe', 'Abcd123'), ('AliceSmith', 'Efgh456'), ('BobJohnson', 'ijkl789');\n\n-- Use the BINARY() operator for password verification, and the BINARY password = 'Abcd123' part treats the password value as a binary string, so the comparison is case-sensitive. If the entered password matches a record in the database, the query will return the corresponding user id and username. Otherwise, an empty result will be returned.\nmysql&gt; SELECT id, username FROM users WHERE username = 'JohnDoe' AND BINARY password = 'Abcd123';\n+------+----------+\n| id   | username |\n+------+----------+\n|    1 | JohnDoe  |\n+------+----------+\n1 row in set (0.00 sec)\n\nmysql&gt; SELECT id, username FROM users WHERE username = 'JohnDoe' AND BINARY password = 'abcd123';\nEmpty set (0.00 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/Operators/operators/cast-functions-and-operators/cast-functions-and-operators-overview/","title":"Cast Functions and Operators","text":"Name Description BINARY() convert a value to a binary string CAST() Cast a value as a certain type CONVERT() Cast a value as a certain type SERIAL() Serialize concatenation strings without handling NULL values SERIAL_FULL() Serialize concatenation strings and handle NULL values"},{"location":"MatrixOne/Reference/Operators/operators/cast-functions-and-operators/cast/","title":"CAST","text":""},{"location":"MatrixOne/Reference/Operators/operators/cast-functions-and-operators/cast/#description","title":"Description","text":"<p>The CAST() function converts a value (of any type) into the specified datatype.</p>"},{"location":"MatrixOne/Reference/Operators/operators/cast-functions-and-operators/cast/#syntax","title":"Syntax","text":"<pre><code>&gt; CAST(value AS datatype)\n</code></pre>"},{"location":"MatrixOne/Reference/Operators/operators/cast-functions-and-operators/cast/#parameter-values","title":"Parameter Values","text":"Parameter Description value Required. The value to convert datatype Required. The datatype to convert to <p>Currently, <code>cast</code> can support following conversion:</p> <ul> <li>Conversion between numeric types, mainly including SIGNED, UNSIGNED, FLOAT, and DOUBLE type.</li> <li>Numeric types to character CHAR type.</li> <li>Numeric character types to numerical types(negative into SIGNED).</li> <li>Time type (including Date, Datetime, Timestamp, and Time) is converted to INT type, with decimal point rounding</li> <li>Time types (including Date, Datetime, Timestamp, and Time) are converted to fixed-point types with decimal places</li> </ul> <p>A detailed data type conversion rule can be refered to Data Conversion Rule.</p>"},{"location":"MatrixOne/Reference/Operators/operators/cast-functions-and-operators/cast/#examples","title":"Examples","text":"<pre><code>drop table if exists t1;\nCREATE TABLE t1 (a int,b float,c char(1),d varchar(15));\nINSERT INTO t1 VALUES (1,1.5,'1','-2');\n\nmysql&gt; SELECT CAST(a AS FLOAT) a_cast,CAST(b AS UNSIGNED) b_cast,CAST(c AS SIGNED) c_cast, CAST(d AS SIGNED) d_cast from t1;\n+--------+--------+--------+--------+\n| a_cast | b_cast | c_cast | d_cast |\n+--------+--------+--------+--------+\n| 1.0000 |      1 |      1 |     -2 |\n+--------+--------+--------+--------+\n\nmysql&gt; SELECT CAST(a AS CHAR) a_cast, CAST(b AS CHAR) b_cast,CAST(c AS DOUBLE) c_cast, CAST(d AS FLOAT) d_cast from t1;\n+--------+--------+--------+---------+\n| a_cast | b_cast | c_cast | d_cast  |\n+--------+--------+--------+---------+\n| 1      | 1.5    | 1.0000 | -2.0000 |\n+--------+--------+--------+---------+\n</code></pre>"},{"location":"MatrixOne/Reference/Operators/operators/cast-functions-and-operators/cast/#constraints","title":"Constraints","text":"<ul> <li>Non-numeric character types cannot be converted to numeric types.</li> <li>Numeric and character types with formats of Data cannot be converted to Date.</li> <li>Date and Datetime types cannot be converted to character types.</li> <li>Date and Datetime cannot be converted to each other.</li> </ul>"},{"location":"MatrixOne/Reference/Operators/operators/cast-functions-and-operators/convert/","title":"CONVERT","text":""},{"location":"MatrixOne/Reference/Operators/operators/cast-functions-and-operators/convert/#description","title":"Description","text":"<p>The <code>CONVERT()</code> function converts a value into the specified datatype or character set.</p>"},{"location":"MatrixOne/Reference/Operators/operators/cast-functions-and-operators/convert/#syntax","title":"Syntax","text":"<pre><code>&gt; CONVERT(value, type)\n</code></pre> <p>Or:</p> <pre><code>&gt; CONVERT(value USING charset)\n</code></pre>"},{"location":"MatrixOne/Reference/Operators/operators/cast-functions-and-operators/convert/#parameter-values","title":"Parameter Values","text":"Parameter Description value Required. The value to convert. datatype Required. The datatype to convert to. charset Required. The character set to convert to. <p>Currently, <code>convert</code> can support following conversion:</p> <ul> <li>Conversion between numeric types, mainly including SIGNED, UNSIGNED, FLOAT, and DOUBLE type.</li> <li>Numeric types to character CHAR type.</li> <li>Numeric character types to numerical types(negative into SIGNED).</li> </ul>"},{"location":"MatrixOne/Reference/Operators/operators/cast-functions-and-operators/convert/#examples","title":"Examples","text":"<pre><code>mysql&gt; select convert(150,char);\n+-------------------+\n| cast(150 as char) |\n+-------------------+\n| 150               |\n+-------------------+\n1 row in set (0.01 sec)\n</code></pre> <pre><code>CREATE TABLE t1(a tinyint);\nINSERT INTO t1 VALUES (127);\n\nmysql&gt; SELECT 1 FROM\n-&gt; (SELECT CONVERT(t2.a USING UTF8) FROM t1, t1 t2 LIMIT 1) AS s LIMIT 1;\n+------+\n| 1    |\n+------+\n|    1 |\n+------+\n1 row in set (0.00 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/Operators/operators/cast-functions-and-operators/convert/#constraints","title":"Constraints","text":"<ul> <li>Non-numeric character types cannot be converted to numeric types.</li> <li>Numeric and character types with formats of Data cannot be converted to Date.</li> <li>Date and Datetime types cannot be converted to character types.</li> <li>Date and Datetime cannot be converted to each other.</li> </ul>"},{"location":"MatrixOne/Reference/Operators/operators/cast-functions-and-operators/serial/","title":"SERIAL()","text":""},{"location":"MatrixOne/Reference/Operators/operators/cast-functions-and-operators/serial/#function-description","title":"Function Description","text":"<p>The <code>SERIAL()</code> function is used to serialize a concatenation string, combining single or multiple columns/values into a binary format with a return type of <code>VARCHAR</code>. It is similar to <code>CONCAT()</code>, but type information for values cannot be captured in <code>CONCAT()</code>. Typically used with the <code>SERIAL_EXTRACT()</code> function.</p> <p>Returns NULL if any of the parameters in <code>SERIAL()</code> is NULL. To handle NULL values, use <code>SERIAL_FULL()</code>.</p>"},{"location":"MatrixOne/Reference/Operators/operators/cast-functions-and-operators/serial/#function-syntax","title":"Function syntax","text":"<pre><code>&gt; SERIAL(para)\n</code></pre>"},{"location":"MatrixOne/Reference/Operators/operators/cast-functions-and-operators/serial/#parameter-interpretation","title":"Parameter interpretation","text":"Parameters Description para Column/Value to Serialize"},{"location":"MatrixOne/Reference/Operators/operators/cast-functions-and-operators/serial/#examples","title":"Examples","text":"<pre><code>create table t1(a varchar(3), b int);\ninsert into t1 values(\"ABC\",1);\ninsert into t1 values(\"DEF\",NULL);\n\nmysql&gt; select serial(a,b) from t1;--The query returns the serialized result of the combination of columns a and b. The output is NULL when there is a NULL value.\n+--------------+\n| serial(a, b) |\n+--------------+\n| FABC :    |\n| NULL         |\n+--------------+\n2 rows in set (0.00 sec)\n\nmysql&gt; select serial(a,'hello') from t1;--The query returns the result of serializing the combination of column a and the value hello.\n+------------------+\n| serial(a, hello) |\n+------------------+\n| FABC Fhello    |\n| FDEF Fhello    |\n+------------------+\n2 rows in set (0.00 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/Operators/operators/cast-functions-and-operators/serial_full/","title":"SERIAL_FULL()","text":""},{"location":"MatrixOne/Reference/Operators/operators/cast-functions-and-operators/serial_full/#function-description","title":"Function Description","text":"<p><code>SERIAL_FULL()</code> is used to serialize concatenation strings and convert single or multiple column/value combinations into binary format with a return type of <code>VARCHAR</code>, generally used with the <code>SERIAL_EXTRACT()</code> function. <code>SERIAL_FULL()</code> is similar to <code>SERIAL()</code>, but <code>SERIAL_FULL()</code> retains a NULL value.</p>"},{"location":"MatrixOne/Reference/Operators/operators/cast-functions-and-operators/serial_full/#function-syntax","title":"Function syntax","text":"<pre><code>&gt; SERIAL_FULL(para)\n</code></pre>"},{"location":"MatrixOne/Reference/Operators/operators/cast-functions-and-operators/serial_full/#parameter-interpretation","title":"Parameter interpretation","text":"Parameters Description para Column/Value to Serialize"},{"location":"MatrixOne/Reference/Operators/operators/cast-functions-and-operators/serial_full/#examples","title":"Examples","text":"<pre><code>create table t1(a varchar(3), b int);\ninsert into t1 values(\"ABC\",1);\ninsert into t1 values(\"DEF\",NULL);\n\nmysql&gt; select serial_full(a,b) from t1;--The query returns the result serialized for the combination of columns a and b. NULL values are preserved when available.\n+-------------------+\n| serial_full(a, b) |\n+-------------------+\n| FABC :         |\n| FDEF             |\n+-------------------+\n2 rows in set (0.00 sec)\n\nmysql&gt; select serial_full(1.2,'world') ;--The query returns the result serialized as a combination of the value 1.2 and the value hello.\n+-------------------------+\n| serial_full(1.2, world) |\n+-------------------------+\n| D?      Fworld         |\n+-------------------------+\n1 row in set (0.01 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/Operators/operators/comparison-functions-and-operators/assign-equal/","title":"=","text":""},{"location":"MatrixOne/Reference/Operators/operators/comparison-functions-and-operators/assign-equal/#description","title":"Description","text":"<p>The <code>=</code> operator returns <code>true</code> only if the left-hand operand is equal to the right-hand operand.</p>"},{"location":"MatrixOne/Reference/Operators/operators/comparison-functions-and-operators/assign-equal/#syntax","title":"Syntax","text":"<pre><code>&gt; SELECT x = y;\n</code></pre>"},{"location":"MatrixOne/Reference/Operators/operators/comparison-functions-and-operators/assign-equal/#examples","title":"Examples","text":"<pre><code>mysql&gt; SELECT 2 = 2;\n+-------+\n| 2 = 2 |\n+-------+\n| true  |\n+-------+\n1 row in set (0.01 sec)\n</code></pre> <pre><code>create table t1 (spID smallint,userID bigint,score int);\ninsert into t1 values (1,1,1);\ninsert into t1 values (2,2,2);\ninsert into t1 values (2,1,4);\ninsert into t1 values (3,3,3);\ninsert into t1 values (1,1,5);\ninsert into t1 values (4,6,10);\ninsert into t1 values (5,11,99);\n\nmysql&gt; select userID,spID,score from t1 where userID=spID and userID=score;\n+--------+------+-------+\n| userid | spid | score |\n+--------+------+-------+\n|      1 |    1 |     1 |\n|      2 |    2 |     2 |\n|      3 |    3 |     3 |\n+--------+------+-------+\n3 rows in set (0.00 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/Operators/operators/comparison-functions-and-operators/between/","title":"BETWEEN ... AND ...","text":""},{"location":"MatrixOne/Reference/Operators/operators/comparison-functions-and-operators/between/#description","title":"Description","text":"<p>If expr is greater than or equal to min and expr is less than or equal to max, BETWEEN returns <code>true</code>, otherwise it returns <code>false</code>.</p>"},{"location":"MatrixOne/Reference/Operators/operators/comparison-functions-and-operators/between/#syntax","title":"Syntax","text":"<pre><code>&gt; expr BETWEEN min AND max\n</code></pre>"},{"location":"MatrixOne/Reference/Operators/operators/comparison-functions-and-operators/between/#examples","title":"Examples","text":"<pre><code>mysql&gt; SELECT 2 BETWEEN 1 AND 3, 2 BETWEEN 3 and 1;\n+-------------------+-------------------+\n| 2 between 1 and 3 | 2 between 3 and 1 |\n+-------------------+-------------------+\n| true              | false             |\n+-------------------+-------------------+\n1 row in set (0.01 sec)\n</code></pre> <pre><code>create table t (id bigint unsigned, b int);\ninsert into t values(8894754949779693574,1);\ninsert into t values(8894754949779693579,2);\ninsert into t values(17790886498483827171,3);\n\nmysql&gt; select count(*) from t where id&gt;=8894754949779693574 and id =17790886498483827171 order by 1 asc;\n+----------+\n| count(*) |\n+----------+\n|        0 |\n+----------+\n\nmysql&gt; select count(*) from t where id between 8894754949779693574 and 17790886498483827171;\n+----------+\n| count(*) |\n+----------+\n|        0 |\n+----------+\n1 row in set (0.01 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/Operators/operators/comparison-functions-and-operators/coalesce/","title":"COALESCE()","text":""},{"location":"MatrixOne/Reference/Operators/operators/comparison-functions-and-operators/coalesce/#description","title":"Description","text":"<p>The <code>COALESCE()</code> function returns the first non-null value in a list.</p>"},{"location":"MatrixOne/Reference/Operators/operators/comparison-functions-and-operators/coalesce/#syntax","title":"Syntax","text":"<pre><code>&gt; COALESCE(val1, val2, ...., val_n)\n</code></pre>"},{"location":"MatrixOne/Reference/Operators/operators/comparison-functions-and-operators/coalesce/#arguments","title":"Arguments","text":"Arguments Description val1, val2, val_n Required. The values to test"},{"location":"MatrixOne/Reference/Operators/operators/comparison-functions-and-operators/coalesce/#examples","title":"Examples","text":"<ul> <li>Example: Calculate</li> </ul> <pre><code>mysql&gt; SELECT COALESCE(1)+COALESCE(1);\n+---------------------------+\n| coalesce(1) + coalesce(1) |\n+---------------------------+\n|                         2 |\n+---------------------------+\n</code></pre> <ul> <li>Example: Comparison</li> </ul> <pre><code>drop table if exists t2;\ncreate table t2(a float, b datetime);\ninsert into t2 values (12.345, '2022-02-20 10:10:10.999999');\ninsert into t2 values (3.45646, NULL);\ninsert into t2 values(NULL, '2023-04-03 22:10:29.999999');\ninsert into t2 values (NULL, NULL);\n\nmysql&gt; select * from t2;\n+---------+---------------------+\n| a       | b                   |\n+---------+---------------------+\n|  12.345 | 2022-02-20 10:10:11 |\n| 3.45646 | NULL                |\n|    NULL | 2023-04-03 22:10:30 |\n|    NULL | NULL                |\n+---------+---------------------+\nmysql&gt; select coalesce(a, 1.0) from t2;\n+--------------------+\n| coalesce(a, 1.0)   |\n+--------------------+\n| 12.345000267028809 |\n| 3.4564599990844727 |\n|                  1 |\n|                  1 |\n+--------------------+\nmysql&gt; select coalesce(a, 1) from t2;\n+--------------------+\n| coalesce(a, 1)     |\n+--------------------+\n| 12.345000267028809 |\n| 3.4564599990844727 |\n|                  1 |\n|                  1 |\n+--------------------+\nmysql&gt; select coalesce(b, 2022-01-01) from t2;\n+---------------------------+\n| coalesce(b, 2022 - 1 - 1) |\n+---------------------------+\n| 2022-02-20 10:10:11       |\n|                           |\n| 2023-04-03 22:10:30       |\n|                           |\n+---------------------------+\n</code></pre> <ul> <li>Example: <code>ORDER BY</code> Clause</li> </ul> <pre><code>CREATE TABLE t1 ( a INTEGER, b varchar(255) );\nINSERT INTO t1 VALUES (1,'z');\nINSERT INTO t1 VALUES (2,'y');\nINSERT INTO t1 VALUES (3,'x');\n\nmysql&gt; SELECT MIN(b) AS min_b FROM t1 GROUP BY a ORDER BY COALESCE(MIN(b), 'a');\n+-------+\n| min_b |\n+-------+\n| x     |\n| y     |\n| z     |\n+-------+\n\nmysql&gt; SELECT MIN(b) AS min_b FROM t1 GROUP BY a ORDER BY COALESCE(min_b, 'a');\n+-------+\n| min_b |\n+-------+\n| x     |\n| y     |\n| z     |\n+-------+\n\nmysql&gt; SELECT MIN(b) AS min_b FROM t1 GROUP BY a ORDER BY COALESCE(MIN(b), 'a') DESC;\n+-------+\n| min_b |\n+-------+\n| z     |\n| y     |\n| x     |\n+-------+\n</code></pre> <ul> <li>Example: <code>Case When</code> Clause</li> </ul> <pre><code>mysql&gt; select if(1, cast(1111111111111111111 as unsigned), 1) i,case when 1 then cast(1111111111111111111 as unsigned) else 1 end c, coalesce(cast(1111111111111111111 as unsigned), 1) co;\n+---------------------+---------------------+---------------------+\n| i                   | c                   | co                  |\n+---------------------+---------------------+---------------------+\n| 1111111111111111111 | 1111111111111111111 | 1111111111111111111 |\n+---------------------+---------------------+---------------------+\n</code></pre> <ul> <li>Example: <code>IN Subquery</code></li> </ul> <pre><code>CREATE TABLE ot (col_int_nokey int(11), col_varchar_nokey varchar(1));\nINSERT INTO ot VALUES (1,'x');\nCREATE TABLE it (col_int_key int(11), col_varchar_key varchar(1));\nINSERT INTO it VALUES (NULL,'x'), (NULL,'f');\n\nmysql&gt; SELECT col_int_nokey FROM ot WHERE col_varchar_nokey IN(SELECT col_varchar_key FROM it WHERE coalesce(col_int_nokey, 1) );\n+---------------+\n| col_int_nokey |\n+---------------+\n|             1 |\n+---------------+\n</code></pre> <ul> <li>Example: <code>WHERE</code></li> </ul> <pre><code>CREATE TABLE ot1(a INT);\nCREATE TABLE ot2(a INT);\nCREATE TABLE ot3(a INT);\nCREATE TABLE it1(a INT);\nCREATE TABLE it2(a INT);\nCREATE TABLE it3(a INT);\nINSERT INTO ot1 VALUES(0),(1),(2),(3),(4),(5),(6),(7);\nINSERT INTO ot2 VALUES(0),(2),(4),(6);\nINSERT INTO ot3 VALUES(0),(3),(6);\nINSERT INTO it1 VALUES(0),(1),(2),(3),(4),(5),(6),(7);\nINSERT INTO it2 VALUES(0),(2),(4),(6);\nINSERT INTO it3 VALUES(0),(3),(6);\n\nmysql&gt; SELECT * FROM ot1 LEFT JOIN ot2 ON ot1.a=ot2.a WHERE COALESCE(ot2.a,0) IN (SELECT a FROM it3);\n+------+------+\n| a    | a    |\n+------+------+\n|    0 |    0 |\n|    1 | NULL |\n|    3 | NULL |\n|    5 | NULL |\n|    6 |    6 |\n|    7 | NULL |\n+------+------+\n</code></pre> <ul> <li>Example: <code>HAVING</code></li> </ul> <pre><code>drop table if exists t1;\ncreate table t1(a datetime);\nINSERT INTO t1 VALUES (NULL), ('2001-01-01 00:00:00.12'), ('2002-01-01 00:00:00.567');\n\nmysql&gt; select a from t1 group by a having COALESCE(a)&lt;\"2002-01-01\";\n+---------------------+\n| a                   |\n+---------------------+\n| 2001-01-01 00:00:00 |\n+---------------------+\n</code></pre> <ul> <li>Example: <code>ON CONDITION</code></li> </ul> <pre><code>drop table if exists t1;\ndrop table if exists t2;\ncreate table t1(a INT,  b varchar(255));\ncreate table t2(a INT,  b varchar(255));\ninsert into t1 values(1, \"\u4f60\u597d\"), (3, \"\u518d\u89c1\");\ninsert into t2 values(2, \"\u65e5\u671f\u65f6\u95f4\"), (4, \"\u660e\u5929\");\n&gt; SELECT t1.a, t2.a FROM t1 JOIN t2 ON (length(COALESCE(t1.b)) = length(COALESCE(t2.b)));\n+------+------+\n| a    | a    |\n+------+------+\n|    1 |    4 |\n|    3 |    4 |\n+------+------+\n</code></pre>"},{"location":"MatrixOne/Reference/Operators/operators/comparison-functions-and-operators/comparison-functions-and-operators-overview/","title":"Comparison Functions and Operators Overview","text":"Name Description &gt; Greater than operator &gt;= Greater than or equal operator &lt; Less than operator &lt;&gt;,!= Not equal operator &lt;= Less than or equal operator = Equal operator BETWEEN ... AND ... Whether a value is within a range of values COALESCE Return the first non-null value in a list IN() Whether a value is within a set of values IS Test a value against a boolean IS NOT Test a value against a boolean IS NOT NULL NOT NULL value test IS NULL NULL value test ISNULL NULL value test LIKE Simple pattern matching ILIKE Simple pattern matching. Same as LIKE. But it is not case sensitive. NOT BETWEEN ... AND ... Whether a value is not within a range of values NOT IN shorthand for multiple <code>XOR</code> conditions. NOT LIKE Negation of simple pattern matching <p>Comparison operations result in a value of <code>TRUE</code>, <code>FALSE</code>, or <code>NULL</code>. These operations work for both numbers and strings. Strings are automatically converted to numbers and numbers to strings as necessary.</p> <p>The following relational comparison operators can be used to compare not only scalar operands, but row operands:</p> <pre><code>=  &gt;  &lt;  &gt;=  &lt;=  &lt;&gt;  !=\n</code></pre>"},{"location":"MatrixOne/Reference/Operators/operators/comparison-functions-and-operators/function_interval/","title":"INTERVAL","text":""},{"location":"MatrixOne/Reference/Operators/operators/comparison-functions-and-operators/function_interval/#description","title":"Description","text":"<p>The <code>INTERVAL</code> operator returns 0 if N &lt; N1, 1 if N &lt; N2 and so on or -1 if N is NULL. All arguments are treated as integers. It is required that N1 &lt; N2 &lt; N3 &lt; ... &lt; Nn for this function to work correctly. This is because a binary search is used (very fast).</p>"},{"location":"MatrixOne/Reference/Operators/operators/comparison-functions-and-operators/function_interval/#syntax","title":"Syntax","text":"<pre><code>&gt; INTERVAL(N,N1,N2,N3,...)\n</code></pre>"},{"location":"MatrixOne/Reference/Operators/operators/comparison-functions-and-operators/function_interval/#examples","title":"Examples","text":"<pre><code>&gt;\n</code></pre>"},{"location":"MatrixOne/Reference/Operators/operators/comparison-functions-and-operators/function_isnull/","title":"ISNULL","text":""},{"location":"MatrixOne/Reference/Operators/operators/comparison-functions-and-operators/function_isnull/#description","title":"Description","text":"<p>The <code>ISNULL()</code> function can be used instead of = to test whether a value is NULL. (Comparing a value to <code>NULL</code> using = always yields <code>NULL</code>.)</p> <p>If expression is <code>NULL</code>, this function returns <code>true</code>. Otherwise, it returns <code>false</code>.</p> <p>The <code>ISNULL()</code> function shares some special behaviors with the <code>IS NULL</code> comparison operator. See the description of <code>IS NULL</code>.</p>"},{"location":"MatrixOne/Reference/Operators/operators/comparison-functions-and-operators/function_isnull/#syntax","title":"Syntax","text":"<pre><code>&gt; ISNULL(expr)\n</code></pre>"},{"location":"MatrixOne/Reference/Operators/operators/comparison-functions-and-operators/function_isnull/#examples","title":"Examples","text":"<ul> <li>Example 1:</li> </ul> <pre><code>mysql&gt; SELECT ISNULL(1+1);\n+---------------+\n| isnull(1 + 1) |\n+---------------+\n| false         |\n+---------------+\n1 row in set (0.02 sec)\n</code></pre> <ul> <li>Example 2:</li> </ul> <pre><code>CREATE TABLE students (id INT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(50) NOT NULL, birth_date DATE );\n\nINSERT INTO students (name, birth_date) VALUES ('John Doe', '2000-05-15'), ('Alice Smith', NULL), ('Bob Johnson', '1999-10-20');\n\n-- Use the ISNULL() function to find students whose birth date is not filled in:\nmysql&gt; SELECT * FROM students WHERE ISNULL(birth_date);\n+------+-------------+------------+\n| id   | name        | birth_date |\n+------+-------------+------------+\n|    2 | Alice Smith | NULL       |\n+------+-------------+------------+\n1 row in set (0.00 sec)\n\n-- The ISNULL() function can also use IS NULL to achieve the same function, so the following queries are also equivalent:\nmysql&gt; SELECT * FROM students WHERE birth_date IS NULL;\n+------+-------------+------------+\n| id   | name        | birth_date |\n+------+-------------+------------+\n|    2 | Alice Smith | NULL       |\n+------+-------------+------------+\n1 row in set (0.01 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/Operators/operators/comparison-functions-and-operators/function_strcmp/","title":"STRCMP","text":""},{"location":"MatrixOne/Reference/Operators/operators/comparison-functions-and-operators/function_strcmp/#description","title":"Description","text":"<p>The <code>STRCMP()</code> returns 0 if the strings are the same, -1 if the first argument is smaller than the second according to the current sort order, and NULL if either argument is NULL. It returns 1 otherwise.</p>"},{"location":"MatrixOne/Reference/Operators/operators/comparison-functions-and-operators/function_strcmp/#syntax","title":"Syntax","text":"<pre><code>&gt; STRCMP(expr1,expr2)\n</code></pre>"},{"location":"MatrixOne/Reference/Operators/operators/comparison-functions-and-operators/function_strcmp/#examples","title":"Examples","text":""},{"location":"MatrixOne/Reference/Operators/operators/comparison-functions-and-operators/greater-than-or-equal/","title":"&gt;=","text":""},{"location":"MatrixOne/Reference/Operators/operators/comparison-functions-and-operators/greater-than-or-equal/#description","title":"Description","text":"<p>The <code>&gt;=</code> operator returns <code>true</code> only if the left-hand operand is greater than or equal to the right-hand operand.</p>"},{"location":"MatrixOne/Reference/Operators/operators/comparison-functions-and-operators/greater-than-or-equal/#syntax","title":"Syntax","text":"<pre><code>&gt; SELECT x &gt;= y;\n</code></pre>"},{"location":"MatrixOne/Reference/Operators/operators/comparison-functions-and-operators/greater-than-or-equal/#examples","title":"Examples","text":"<pre><code>mysql&gt; SELECT 2 &gt;= 2;\n+--------+\n| 2 &gt;= 2 |\n+--------+\n| true   |\n+--------+\n1 row in set (0.01 sec)\n</code></pre> <pre><code>create table t1 (spID smallint,userID bigint,score int);\ninsert into t1 values (1,1,1);\ninsert into t1 values (2,2,2);\ninsert into t1 values (2,1,4);\ninsert into t1 values (3,3,3);\ninsert into t1 values (1,1,5);\ninsert into t1 values (4,6,10);\ninsert into t1 values (5,11,99);\n\nmysql&gt; select userID,spID,score from t1 where spID&gt;=userID*score;\n+--------+------+-------+\n| userid | spid | score |\n+--------+------+-------+\n|      1 |    1 |     1 |\n+--------+------+-------+\n1 row in set (0.01 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/Operators/operators/comparison-functions-and-operators/greater-than/","title":"&gt;","text":""},{"location":"MatrixOne/Reference/Operators/operators/comparison-functions-and-operators/greater-than/#description","title":"Description","text":"<p>The <code>&gt;</code> operator returns <code>true</code> only if the left-hand operand is greater than the right-hand operand.</p>"},{"location":"MatrixOne/Reference/Operators/operators/comparison-functions-and-operators/greater-than/#syntax","title":"Syntax","text":"<pre><code>&gt; SELECT x &gt; y;\n</code></pre>"},{"location":"MatrixOne/Reference/Operators/operators/comparison-functions-and-operators/greater-than/#examples","title":"Examples","text":"<pre><code>mysql&gt; SELECT 2 &gt; 2;\n+-------+\n| 2 &gt; 2 |\n+-------+\n| false |\n+-------+\n1 row in set (0.00 sec)\n</code></pre> <pre><code>create table t1 (spID smallint,userID bigint,score int);\ninsert into t1 values (1,1,1);\ninsert into t1 values (2,2,2);\ninsert into t1 values (2,1,4);\ninsert into t1 values (3,3,3);\ninsert into t1 values (1,1,5);\ninsert into t1 values (4,6,10);\ninsert into t1 values (5,11,99);\n\nmysql&gt; select spID,userID,score from t1 where spID&gt;(userID-1);\n+------+--------+-------+\n| spid | userid | score |\n+------+--------+-------+\n|    1 |      1 |     1 |\n|    2 |      2 |     2 |\n|    2 |      1 |     4 |\n|    3 |      3 |     3 |\n|    1 |      1 |     5 |\n+------+--------+-------+\n5 rows in set (0.01 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/Operators/operators/comparison-functions-and-operators/ilike/","title":"ILIKE","text":""},{"location":"MatrixOne/Reference/Operators/operators/comparison-functions-and-operators/ilike/#description","title":"Description","text":"<p>The <code>ILIKE</code> operator is used similarly to the <code>LIKE</code> operator to search for a specified pattern in a column in the WHERE clause.</p> <p>The main difference between the <code>ILIKE</code> operator and the <code>LIKE</code> operator is case sensitivity. When using <code>ILIKE</code>, characters in a string are treated the same whether they are uppercase or lowercase.</p>"},{"location":"MatrixOne/Reference/Operators/operators/comparison-functions-and-operators/ilike/#syntax","title":"Syntax","text":"<pre><code>&gt; SELECT column1, column2, ...\nFROM table_name\nWHERE columnN ILIKE pattern;\n</code></pre>"},{"location":"MatrixOne/Reference/Operators/operators/comparison-functions-and-operators/ilike/#examples","title":"Examples","text":"<pre><code>drop table t1;\ncreate table t1(a varchar(20));\ninsert into t1 values ('abc'), ('ABC'), ('abC');\nselect * from t1 where a ilike '%abC%';\n\nmysql&gt; select * from t1 where a ilike '%abC%';\n+------+\n| a    |\n+------+\n| abc  |\n| ABC  |\n| abC  |\n+------+\n3 rows in set (0.01 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/Operators/operators/comparison-functions-and-operators/in/","title":"IN","text":""},{"location":"MatrixOne/Reference/Operators/operators/comparison-functions-and-operators/in/#description","title":"Description","text":"<p>The <code>IN</code> operator allows you to specify multiple values in a <code>WHERE</code> clause. And it's a shorthand for multiple <code>OR</code> conditions.</p>"},{"location":"MatrixOne/Reference/Operators/operators/comparison-functions-and-operators/in/#syntax","title":"Syntax","text":"<pre><code>&gt; SELECT column1, column2, ...\nFROM table_name\nWHERE column_name IN (value1, value2, ...);\n</code></pre>"},{"location":"MatrixOne/Reference/Operators/operators/comparison-functions-and-operators/in/#examples","title":"Examples","text":"<pre><code>create table t2(a int,b varchar(5),c float, d date, e datetime);\ninsert into t2 values(1,'a',1.001,'2022-02-08','2022-02-08 12:00:00');\ninsert into t2 values(2,'b',2.001,'2022-02-09','2022-02-09 12:00:00');\ninsert into t2 values(1,'c',3.001,'2022-02-10','2022-02-10 12:00:00');\ninsert into t2 values(4,'d',4.001,'2022-02-11','2022-02-11 12:00:00');\n\nmysql&gt; select * from t2 where a in (2,4);\na   b   c   d   e\n2   b   2.0010  2022-02-09  2022-02-09 12:00:00\n4   d   4.0010  2022-02-11  2022-02-11 12:00:00\n\nmysql&gt; select * from t2 where a not in (2,4);\na   b   c   d   e\n1   a   1.0010  2022-02-08  2022-02-08 12:00:00\n1   c   3.0010  2022-02-10  2022-02-10 12:00:00\n\nmysql&gt; select * from t2 where b not in ('e',\"f\");\na   b   c   d   e\n1   a   1.0010  2022-02-08  2022-02-08 12:00:00\n2   b   2.0010  2022-02-09  2022-02-09 12:00:00\n1   c   3.0010  2022-02-10  2022-02-10 12:00:00\n4   d   4.0010  2022-02-11  2022-02-11 12:00:00\n\nmysql&gt; select * from t2 where e not in ('2022-02-09 12:00:00') and a in (4,5);\na   b   c   d   e\n4   d   4.0010  2022-02-11  2022-02-11 12:00:00\n</code></pre>"},{"location":"MatrixOne/Reference/Operators/operators/comparison-functions-and-operators/in/#constraints","title":"Constraints","text":"<ul> <li>Currently, only constant lists are supported on the left side of <code>IN</code>.  </li> <li>There can only be a single column to the left of <code>IN</code>, not a tuple of multiple columns.</li> <li><code>NULL</code> values couldn't appear in the list to the right of <code>IN</code>.  </li> </ul>"},{"location":"MatrixOne/Reference/Operators/operators/comparison-functions-and-operators/is-not-null/","title":"IS NOT NULL","text":""},{"location":"MatrixOne/Reference/Operators/operators/comparison-functions-and-operators/is-not-null/#description","title":"Description","text":"<p>The <code>IS NOT NULL</code> function tests whether a value is not <code>NULL</code>.</p> <p>If expression is <code>NOT NULL</code>, this function returns <code>true</code>. Otherwise, it returns <code>false</code>.</p>"},{"location":"MatrixOne/Reference/Operators/operators/comparison-functions-and-operators/is-not-null/#syntax","title":"Syntax","text":"<pre><code>&gt; expression IS NOT NULL\n</code></pre>"},{"location":"MatrixOne/Reference/Operators/operators/comparison-functions-and-operators/is-not-null/#examples","title":"Examples","text":"<pre><code>mysql&gt; SELECT 1 IS NOT NULL, 0 IS NOT NULL, NULL IS NOT NULL;\n+---------------+---------------+------------------+\n| 1 is not null | 0 is not null | null is not null |\n+---------------+---------------+------------------+\n| true          | true          | false            |\n+---------------+---------------+------------------+\n1 row in set (0.01 sec)\n</code></pre> <pre><code>create table t1 (a boolean,b bool);\ninsert into t1 values (0,1),(true,false),(true,1),(0,false),(NULL,NULL);\n\nmysql&gt; select * from t1;\n+-------+-------+\n| a     | b     |\n+-------+-------+\n| false | true  |\n| true  | false |\n| true  | true  |\n| false | false |\n| NULL  | NULL  |\n+-------+-------+\nmysql&gt; select * from t1 where b is NOT NULL;\n+-------+-------+\n| a     | b     |\n+-------+-------+\n| false | true  |\n| true  | false |\n| true  | true  |\n| false | false |\n+-------+-------+\n4 rows in set (0.01 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/Operators/operators/comparison-functions-and-operators/is-not/","title":"IS NOT","text":""},{"location":"MatrixOne/Reference/Operators/operators/comparison-functions-and-operators/is-not/#description","title":"Description","text":"<p>The <code>IS NOT</code> tests a value against a boolean value, where boolean_value can be TRUE, FALSE, or UNKNOWN.</p>"},{"location":"MatrixOne/Reference/Operators/operators/comparison-functions-and-operators/is-not/#syntax","title":"Syntax","text":"<pre><code>&gt; IS NOT boolean_value\n</code></pre>"},{"location":"MatrixOne/Reference/Operators/operators/comparison-functions-and-operators/is-not/#examples","title":"Examples","text":"<pre><code>mysql&gt; SELECT 1 IS NOT TRUE, 0 IS NOT FALSE, NULL IS NOT UNKNOWN;\n+-----------+------------+----------+\n| 1 != true | 0 != false | null !=  |\n+-----------+------------+----------+\n| false     | false      | NULL     |\n+-----------+------------+----------+\n1 row in set (0.01 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/Operators/operators/comparison-functions-and-operators/is-null/","title":"IS NULL","text":""},{"location":"MatrixOne/Reference/Operators/operators/comparison-functions-and-operators/is-null/#description","title":"Description","text":"<p>The <code>IS NOT NULL</code> function tests whether a value is <code>NULL</code>.</p> <p>It returns <code>TRUE</code> if a <code>NULL</code> value is found, otherwise it returns <code>FALSE</code>. It can be used in a <code>SELECT</code>, <code>INSERT</code>, <code>UPDATE</code>, or <code>DELETE</code> statement.</p>"},{"location":"MatrixOne/Reference/Operators/operators/comparison-functions-and-operators/is-null/#syntax","title":"Syntax","text":"<pre><code>&gt; expression IS NULL\n</code></pre>"},{"location":"MatrixOne/Reference/Operators/operators/comparison-functions-and-operators/is-null/#examples","title":"Examples","text":"<pre><code>mysql&gt; SELECT 1 IS NULL, 0 IS NULL, NULL IS NULL;\n+-----------+-----------+--------------+\n| 1 is null | 0 is null | null is null |\n+-----------+-----------+--------------+\n| false     | false     | true         |\n+-----------+-----------+--------------+\n1 row in set (0.01 sec)\n</code></pre> <pre><code>create table t1 (a boolean,b bool);\ninsert into t1 values (0,1),(true,false),(true,1),(0,false),(NULL,NULL);\n\nmysql&gt; select * from t1;\n+-------+-------+\n| a     | b     |\n+-------+-------+\n| false | true  |\n| true  | false |\n| true  | true  |\n| false | false |\n| NULL  | NULL  |\n+-------+-------+\nmysql&gt; select * from t1 where a IS NULL;\n+------+------+\n| a    | b    |\n+------+------+\n| NULL | NULL |\n+------+------+\n1 row in set (0.01 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/Operators/operators/comparison-functions-and-operators/is/","title":"IS","text":""},{"location":"MatrixOne/Reference/Operators/operators/comparison-functions-and-operators/is/#description","title":"Description","text":"<p>The <code>IS</code> tests a value against a boolean value, where boolean_value can be TRUE, FALSE, or UNKNOWN.</p>"},{"location":"MatrixOne/Reference/Operators/operators/comparison-functions-and-operators/is/#syntax","title":"Syntax","text":"<pre><code>&gt; IS boolean_value\n</code></pre>"},{"location":"MatrixOne/Reference/Operators/operators/comparison-functions-and-operators/is/#examples","title":"Examples","text":"<pre><code>mysql&gt; SELECT 1 IS TRUE, 0 IS FALSE, NULL IS UNKNOWN;\n+----------+-----------+---------+\n| 1 = true | 0 = false | null =  |\n+----------+-----------+---------+\n| true     | true      | NULL    |\n+----------+-----------+---------+\n1 row in set (0.01 sec)\n</code></pre> <pre><code>create table t1 (a boolean,b bool);\ninsert into t1 values (0,1),(true,false),(true,1),(0,false),(NULL,NULL);\n\nmysql&gt; select * from t1;\n+-------+-------+\n| a     | b     |\n+-------+-------+\n| false | true  |\n| true  | false |\n| true  | true  |\n| false | false |\n| NULL  | NULL  |\n+-------+-------+\nmysql&gt; select * from t1 where a&lt;=b and a is not NULL;\n+-------+-------+\n| a     | b     |\n+-------+-------+\n| false | true  |\n| true  | true  |\n| false | false |\n+-------+-------+\n3 rows in set (0.01 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/Operators/operators/comparison-functions-and-operators/less-than-or-equal/","title":"&lt;=","text":""},{"location":"MatrixOne/Reference/Operators/operators/comparison-functions-and-operators/less-than-or-equal/#description","title":"Description","text":"<p>The <code>&lt;=</code> operator returns <code>true</code> only if the left-hand operand is less than or equal to the right-hand operand.</p>"},{"location":"MatrixOne/Reference/Operators/operators/comparison-functions-and-operators/less-than-or-equal/#syntax","title":"Syntax","text":"<pre><code>&gt; SELECT x &lt;= y;\n</code></pre>"},{"location":"MatrixOne/Reference/Operators/operators/comparison-functions-and-operators/less-than-or-equal/#examples","title":"Examples","text":"<pre><code>mysql&gt; SELECT 2 &lt;= 2;\n+--------+\n| 2 &lt;= 2 |\n+--------+\n| true   |\n+--------+\n1 row in set (0.00 sec)\n</code></pre> <pre><code>create table t1 (spID smallint,userID bigint,score int);\ninsert into t1 values (1,1,1);\ninsert into t1 values (2,2,2);\ninsert into t1 values (2,1,4);\ninsert into t1 values (3,3,3);\ninsert into t1 values (1,1,5);\ninsert into t1 values (4,6,10);\ninsert into t1 values (5,11,99);\n\nmysql&gt; select userID,score,spID from t1 where userID&lt;=score/spID;\n+--------+-------+------+\n| userid | score | spid |\n+--------+-------+------+\n|      1 |     1 |    1 |\n|      1 |     4 |    2 |\n|      1 |     5 |    1 |\n|     11 |    99 |    5 |\n+--------+-------+------+\n4 rows in set (0.00 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/Operators/operators/comparison-functions-and-operators/less-than/","title":"&lt;","text":""},{"location":"MatrixOne/Reference/Operators/operators/comparison-functions-and-operators/less-than/#description","title":"Description","text":"<p>The <code>&lt;</code> operator returns <code>true</code> only if the left-hand operand is less than the right-hand operand.</p>"},{"location":"MatrixOne/Reference/Operators/operators/comparison-functions-and-operators/less-than/#syntax","title":"Syntax","text":"<pre><code>&gt; SELECT x &lt; y;\n</code></pre>"},{"location":"MatrixOne/Reference/Operators/operators/comparison-functions-and-operators/less-than/#examples","title":"Examples","text":"<pre><code>mysql&gt; SELECT 2 &lt; 2;\n+-------+\n| 2 &lt; 2 |\n+-------+\n| false |\n+-------+\n1 row in set (0.00 sec)\n</code></pre> <pre><code>create table t1 (spID smallint,userID bigint,score int);\ninsert into t1 values (1,1,1);\ninsert into t1 values (2,2,2);\ninsert into t1 values (2,1,4);\ninsert into t1 values (3,3,3);\ninsert into t1 values (1,1,5);\ninsert into t1 values (4,6,10);\ninsert into t1 values (5,11,99);\n\nmysql&gt; select spID,userID,score from t1 where (userID-1)&lt;spID;\n+------+--------+-------+\n| spid | userid | score |\n+------+--------+-------+\n|    1 |      1 |     1 |\n|    2 |      2 |     2 |\n|    2 |      1 |     4 |\n|    3 |      3 |     3 |\n|    1 |      1 |     5 |\n+------+--------+-------+\n5 rows in set (0.00 sec)\nmysql&gt; select spID,userID,score from t1 where spID&lt;(userID-1);\n+------+--------+-------+\n| spid | userid | score |\n+------+--------+-------+\n|    4 |      6 |    10 |\n|    5 |     11 |    99 |\n+------+--------+-------+\n2 rows in set (0.00 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/Operators/operators/comparison-functions-and-operators/like/","title":"LIKE","text":""},{"location":"MatrixOne/Reference/Operators/operators/comparison-functions-and-operators/like/#description","title":"Description","text":"<p>The <code>LIKE</code> operator is used in a <code>WHERE</code> clause to search for a specified pattern in a column.</p> <p>There are two wildcards often used in conjunction with the <code>LIKE</code> operator:</p> <ul> <li> <p>The percent sign <code>%</code> wildcard: means to match any sequence of characters (including empty character sequences).</p> <ul> <li>%text: matches a string ending with \"text\".</li> <li>text%: matches a string starting with \"text\".</li> <li>%text%: Matches a string containing \"text\".</li> </ul> </li> <li> <p>Underscore <code>_</code> wildcard: means match a single character.</p> <ul> <li><code>te_t</code>: can match \"text\", \"test\", etc.</li> </ul> </li> <li> <p>Other characters: The <code>LIKE</code> operator is case-sensitive for other characters.</p> </li> </ul>"},{"location":"MatrixOne/Reference/Operators/operators/comparison-functions-and-operators/like/#syntax","title":"Syntax","text":"<pre><code>&gt; SELECT column1, column2, ...\nFROM table_name\nWHERE columnN LIKE pattern;\n</code></pre>"},{"location":"MatrixOne/Reference/Operators/operators/comparison-functions-and-operators/like/#examples","title":"Examples","text":"<pre><code>drop table t1;\ncreate table t1(a varchar(20));\ninsert into t1 values ('abc'), ('ABC'), ('abC');\nselect * from t1 where a ilike '%abC%';\n\nmysql&gt; select * from t1 where a like '%abC%';\n+------+\n| a    |\n+------+\n| abC  |\n+------+\n1 row in set (0.00 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/Operators/operators/comparison-functions-and-operators/not-between/","title":"NOT BETWEEN ... AND ...","text":""},{"location":"MatrixOne/Reference/Operators/operators/comparison-functions-and-operators/not-between/#description","title":"Description","text":"<p>If expr is less than or equal to min and expr is greater than or equal to max, NOT BETWEEN returns <code>true</code>, otherwise it returns <code>false</code>.</p>"},{"location":"MatrixOne/Reference/Operators/operators/comparison-functions-and-operators/not-between/#syntax","title":"Syntax","text":"<pre><code>&gt; expr NOT BETWEEN min AND max\n</code></pre>"},{"location":"MatrixOne/Reference/Operators/operators/comparison-functions-and-operators/not-between/#examples","title":"Examples","text":"<pre><code>mysql&gt; SELECT 2 NOT BETWEEN 1 AND 3, 2 NOT BETWEEN 3 and 1;\n+-----------------------+-----------------------+\n| 2 not between 1 and 3 | 2 not between 3 and 1 |\n+-----------------------+-----------------------+\n| false                 | true                  |\n+-----------------------+-----------------------+\n1 row in set (0.00 sec)\n</code></pre> <pre><code>create table t (id bigint unsigned, b int);\ninsert into t values(8894754949779693574,1);\ninsert into t values(8894754949779693579,2);\ninsert into t values(17790886498483827171,3);\n\nmysql&gt; select count(*) from t where id&gt;=8894754949779693574 and id =17790886498483827171 order by 1 asc;\n+----------+\n| count(*) |\n+----------+\n|        0 |\n+----------+\nmysql&gt; select count(*) from t where id not between 8894754949779693574 and 17790886498483827171;\n+----------+\n| count(*) |\n+----------+\n|        3 |\n+----------+\n1 row in set (0.00 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/Operators/operators/comparison-functions-and-operators/not-equal/","title":"&lt;&gt;,!=","text":""},{"location":"MatrixOne/Reference/Operators/operators/comparison-functions-and-operators/not-equal/#description","title":"Description","text":"<p>The <code>&lt;&gt;,!=</code> operator returns <code>true</code> only if the left-hand operand is not equal to the right-hand operand.</p>"},{"location":"MatrixOne/Reference/Operators/operators/comparison-functions-and-operators/not-equal/#syntax","title":"Syntax","text":"<pre><code>&gt; SELECT x &lt;&gt; y;\n</code></pre>"},{"location":"MatrixOne/Reference/Operators/operators/comparison-functions-and-operators/not-equal/#examples","title":"Examples","text":"<pre><code>mysql&gt; SELECT 2 &lt;&gt; 2;\n+--------+\n| 2 != 2 |\n+--------+\n| false  |\n+--------+\n1 row in set (0.01 sec)\n</code></pre> <pre><code>create table t1 (spID smallint,userID bigint,score int);\ninsert into t1 values (1,1,1);\ninsert into t1 values (2,2,2);\ninsert into t1 values (2,1,4);\ninsert into t1 values (3,3,3);\ninsert into t1 values (1,1,5);\ninsert into t1 values (4,6,10);\ninsert into t1 values (5,11,99);\n\nmysql&gt; select userID,spID,score from t1 where userID=spID and userID&lt;&gt;score;\n+--------+------+-------+\n| userid | spid | score |\n+--------+------+-------+\n|      1 |    1 |     5 |\n+--------+------+-------+\n1 row in set (0.00 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/Operators/operators/comparison-functions-and-operators/not-in/","title":"NOT IN","text":""},{"location":"MatrixOne/Reference/Operators/operators/comparison-functions-and-operators/not-in/#description","title":"Description","text":"<p>The <code>NOT IN</code> operator allows you to specify multiple values in a <code>WHERE</code> clause. And it's a shorthand for multiple <code>XOR</code> conditions.</p>"},{"location":"MatrixOne/Reference/Operators/operators/comparison-functions-and-operators/not-in/#syntax","title":"Syntax","text":"<pre><code>&gt; SELECT column1, column2, ...\nFROM table_name\nWHERE column_name NOT IN (value1, value2, ...);\n</code></pre>"},{"location":"MatrixOne/Reference/Operators/operators/comparison-functions-and-operators/not-in/#examples","title":"Examples","text":"<pre><code>create table t2(a int,b varchar(5),c float, d date, e datetime);\ninsert into t2 values(1,'a',1.001,'2022-02-08','2022-02-08 12:00:00');\ninsert into t2 values(2,'b',2.001,'2022-02-09','2022-02-09 12:00:00');\ninsert into t2 values(1,'c',3.001,'2022-02-10','2022-02-10 12:00:00');\ninsert into t2 values(4,'d',4.001,'2022-02-11','2022-02-11 12:00:00');\n\nmysql&gt; select * from t2 where a not in (2,4);\n+------+------+-------+------------+----------------------------+\n| a    | b    | c     | d          | e                          |\n+------+------+-------+------------+----------------------------+\n|    1 | a    | 1.001 | 2022-02-08 | 2022-02-08 12:00:00.000000 |\n|    1 | c    | 3.001 | 2022-02-10 | 2022-02-10 12:00:00.000000 |\n+------+------+-------+------------+----------------------------+\n2 rows in set (0.00 sec)\n\nmysql&gt; select * from t2 where b not in ('e',\"f\");\n+------+------+-------+------------+----------------------------+\n| a    | b    | c     | d          | e                          |\n+------+------+-------+------------+----------------------------+\n|    1 | a    | 1.001 | 2022-02-08 | 2022-02-08 12:00:00.000000 |\n|    2 | b    | 2.001 | 2022-02-09 | 2022-02-09 12:00:00.000000 |\n|    1 | c    | 3.001 | 2022-02-10 | 2022-02-10 12:00:00.000000 |\n|    4 | d    | 4.001 | 2022-02-11 | 2022-02-11 12:00:00.000000 |\n+------+------+-------+------------+----------------------------+\n4 rows in set (0.01 sec)\n\nmysql&gt; select * from t2 where e not in ('2022-02-09 12:00:00') and a in (4,5);\na   b   c   d   e\n4   d   4.0010  2022-02-11  2022-02-11 12:00:00\n</code></pre>"},{"location":"MatrixOne/Reference/Operators/operators/comparison-functions-and-operators/not-in/#constraints","title":"Constraints","text":"<ul> <li>Currently, only constant lists are supported on the left side of <code>NOT IN</code>.  </li> <li>There can only be a single column to the left of <code>NOT IN</code>, not a tuple of multiple columns.</li> <li><code>NULL</code> values couldn't appear in the list to the right of <code>NOT IN</code>.  </li> </ul>"},{"location":"MatrixOne/Reference/Operators/operators/comparison-functions-and-operators/not-like/","title":"NOT LIKE","text":""},{"location":"MatrixOne/Reference/Operators/operators/comparison-functions-and-operators/not-like/#description","title":"Description","text":"<p>The <code>NOT LIKE</code> operator is used in a WHERE clause to search for a specified pattern in a column.</p> <p>There are two wildcards often used in conjunction with the <code>NOT LIKE</code> operator:</p> <ul> <li>The percent sign (%) represents zero, one, or multiple characters.</li> <li>The underscore sign (_) represents one, single character.</li> </ul>"},{"location":"MatrixOne/Reference/Operators/operators/comparison-functions-and-operators/not-like/#syntax","title":"Syntax","text":"<pre><code>&gt; SELECT column1, column2, ...\nFROM table_name\nWHERE columnN NOT LIKE pattern;\n</code></pre>"},{"location":"MatrixOne/Reference/Operators/operators/comparison-functions-and-operators/not-like/#examples","title":"Examples","text":"<pre><code>create table t1 (a char(10));\ninsert into t1 values('abcdef');\ninsert into t1 values('_bcdef');\ninsert into t1 values('a_cdef');\ninsert into t1 values('ab_def');\ninsert into t1 values('abc_ef');\ninsert into t1 values('abcd_f');\ninsert into t1 values('abcde_');\n\nmysql&gt; select * from t1 where a not like 'a%';\n+--------+\n| a      |\n+--------+\n| _bcdef |\n+--------+\nmysql&gt; select * from t1 where a not like \"%d_\\_\";\n+--------+\n| a      |\n+--------+\n| abc_ef |\n+--------+\n1 row in set (0.01 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/Operators/operators/flow-control-functions/case-when/","title":"CASE WHEN","text":""},{"location":"MatrixOne/Reference/Operators/operators/flow-control-functions/case-when/#description","title":"Description","text":"<p><code>CASE WHEN</code> statement is used in that evaluates a list of conditions and returns one of multiple possible result expressions.</p> <p>Cases come in two formats: a simple <code>CASE</code> function compares an expression to a set of simple expressions to determine the result. The <code>CASE</code> search function evaluates a set of Boolean expressions to determine the result. Both formats support the optional <code>ELSE</code> argument.</p>"},{"location":"MatrixOne/Reference/Operators/operators/flow-control-functions/case-when/#syntax","title":"Syntax","text":"<ul> <li>Syntax 1:</li> </ul> <pre><code>CASE value WHEN compare_value THEN result [WHEN compare_value THEN result ...] [ELSE result] END\n</code></pre> <p>This <code>CASE</code> syntax returns the result for the first value=compare_value comparison that is true.</p> <ul> <li>Syntax 2:</li> </ul> <pre><code>CASE WHEN condition THEN result [WHEN condition THEN result ...] [ELSE result] END\n</code></pre> <p>This <code>CASE</code> syntax returns the result for the first condition that is true. If no comparison or condition is true, the result after ELSE is returned, or NULL if there is no ELSE part.</p> <p>note</p> <p>The <code>CASE</code> statement cannot have an <code>ELSE NULL</code> clause, and it is terminated with <code>END CASE</code> instead of <code>END</code>. <p></p>"},{"location":"MatrixOne/Reference/Operators/operators/flow-control-functions/case-when/#examples","title":"Examples","text":"<pre><code>mysql&gt; SELECT CASE WHEN 1&gt;0 THEN 'true' ELSE 'false' END;\n+------------------------------------------+\n| case when 1 &gt; 0 then true else false end |\n+------------------------------------------+\n| true                                     |\n+------------------------------------------+\n1 row in set (0.00 sec)\n</code></pre> <pre><code>CREATE TABLE t1 (a INT, b INT);\nQuery OK, 0 rows affected (0.01 sec)\n\nINSERT INTO t1 VALUES (1,1),(2,1),(3,2),(4,2),(5,3),(6,3);\nQuery OK, 6 rows affected (0.01 sec)\n\nmysql&gt; SELECT CASE WHEN AVG(a)&gt;=0 THEN 'Positive' ELSE 'Negative' END FROM t1 GROUP BY b;\n+-------------------------------------------------------+\n| case when avg(a) &gt;= 0 then Positive else Negative end |\n+-------------------------------------------------------+\n| Positive                                              |\n| Positive                                              |\n| Positive                                              |\n+-------------------------------------------------------+\n3 rows in set (0.00 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/Operators/operators/flow-control-functions/flow-control-functions-overview/","title":"Flow Control Functions","text":"Name Description CASE Case operator IF() If/else construct IFNULL() Null if/else construct NULLIF() Return NULL if expr1 = expr2"},{"location":"MatrixOne/Reference/Operators/operators/flow-control-functions/function_if/","title":"IF","text":""},{"location":"MatrixOne/Reference/Operators/operators/flow-control-functions/function_if/#description","title":"Description","text":"<p>The <code>IF()</code> function returns a value if a condition is <code>TRUE</code>, or another value if a condition is <code>FALSE</code>.</p>"},{"location":"MatrixOne/Reference/Operators/operators/flow-control-functions/function_if/#syntax","title":"Syntax","text":"<pre><code>&gt; IF(expr1,expr2,expr3)\n</code></pre> <ul> <li> <p>If expr1 is TRUE (expr1 &lt;&gt; 0 and expr1 IS NOT NULL), IF() returns expr2. Otherwise, it returns expr3.</p> </li> <li> <p>If only one of expr2 or expr3 is explicitly NULL, the result type of the IF() function is the type of the non-NULL expression.</p> </li> <li> <p>The default return type of IF() (which may matter when it is stored into a temporary table) is calculated as follows:</p> <ul> <li> <p>If expr2 or expr3 produce a string, the result is a string.</p> </li> <li> <p>If expr2 and expr3 are both strings, the result is case-sensitive if either string is case-sensitive.</p> </li> <li> <p>If expr2 or expr3 produce a floating-point value, the result is a floating-point value.</p> </li> <li> <p>If expr2 or expr3 produce an integer, the result is an integer.</p> </li> </ul> </li> </ul>"},{"location":"MatrixOne/Reference/Operators/operators/flow-control-functions/function_if/#examples","title":"Examples","text":"<pre><code>mysql&gt; SELECT IF(1&gt;2,2,3);\n+-----------------+\n| if(1 &gt; 2, 2, 3) |\n+-----------------+\n|               3 |\n+-----------------+\n1 row in set (0.01 sec)\nmysql&gt; SELECT IF(1&lt;2,'yes','no');\n+--------------------+\n| if(1 &lt; 2, yes, no) |\n+--------------------+\n| yes                |\n+--------------------+\n1 row in set (0.00 sec)\n</code></pre> <pre><code>CREATE TABLE t1 (st varchar(255) NOT NULL, u int(11) NOT NULL);\nINSERT INTO t1 VALUES ('a',1),('A',1),('aa',1),('AA',1),('a',1),('aaa',0),('BBB',0);\n\nmysql&gt; select if(u=1,st,st) s from t1 order by s;\n+------+\n| s    |\n+------+\n| A    |\n| AA   |\n| BBB  |\n| a    |\n| a    |\n| aa   |\n| aaa  |\n+------+\n7 rows in set (0.00 sec)\n\nmysql&gt; select if(u=1,st,st) s from t1 where st like \"%a%\" order by s;\n+------+\n| s    |\n+------+\n| a    |\n| a    |\n| aa   |\n| aaa  |\n+------+\n4 rows in set (0.00 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/Operators/operators/flow-control-functions/function_if/#constraints","title":"Constraints","text":"<p>Parameters BIGINT and VARCHAR are not supported with the function 'if'.</p>"},{"location":"MatrixOne/Reference/Operators/operators/flow-control-functions/function_ifnull/","title":"IFNULL","text":""},{"location":"MatrixOne/Reference/Operators/operators/flow-control-functions/function_ifnull/#description","title":"Description","text":"<p>If expr1 is not <code>NULL</code>, <code>IFNULL()</code> returns expr1; otherwise it returns expr2. The default return type of <code>IFNULL(expr1,expr2)</code> is the more \"general\" of the two expressions, in the order <code>STRING</code>, <code>REAL</code>, or <code>INTEGER</code>.</p>"},{"location":"MatrixOne/Reference/Operators/operators/flow-control-functions/function_ifnull/#syntax","title":"Syntax","text":"<pre><code>&gt; IFNULL(expr1,expr2)\n</code></pre>"},{"location":"MatrixOne/Reference/Operators/operators/flow-control-functions/function_ifnull/#examples","title":"Examples","text":"<pre><code>mysql&gt; SELECT IFNULL(NULL,10);\n+------------------+\n| ifnull(null, 10) |\n+------------------+\n|               10 |\n+------------------+\n1 row in set (0.00 sec)\n</code></pre> <pre><code>mysql&gt; SELECT CAST(IFNULL(NULL, NULL) AS DECIMAL);\n+-----------------------------------------+\n| cast(ifnull(null, null) as decimal(10)) |\n+-----------------------------------------+\n|                                    NULL |\n+-----------------------------------------+\n1 row in set (0.01 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/Operators/operators/flow-control-functions/function_nullif/","title":"NULLIF","text":""},{"location":"MatrixOne/Reference/Operators/operators/flow-control-functions/function_nullif/#description","title":"Description","text":"<p>The <code>NULLIF()</code> function returns NULL if expr1 = expr2 is true, otherwise returns expr1.</p> <p>The return value has the same type as the first argument.</p>"},{"location":"MatrixOne/Reference/Operators/operators/flow-control-functions/function_nullif/#syntax","title":"Syntax","text":"<pre><code>&gt; NULLIF(expr1,expr2)\n</code></pre>"},{"location":"MatrixOne/Reference/Operators/operators/flow-control-functions/function_nullif/#examples","title":"Examples","text":"<pre><code>CREATE TABLE employees ( id INT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(50) NOT NULL, salary DECIMAL(10, 2) );\n\nINSERT INTO employees (name, salary) VALUES ('John Doe', 1000), ('Alice Smith', 2000), ('Bob Johnson', 1500);\n\n-- Use the NULLIF() function to set the salary of employees whose salary is a specific value to NULL. The NULLIF(salary, 1500) function will compare the value of the salary field with 1500. Returns NULL if the salary value equals 1500; otherwise, returns the salary value.\nmysql&gt; SELECT name, salary, NULLIF(salary, 1500) AS adjusted_salary FROM employees;\n+-------------+---------+-----------------+\n| name        | salary  | adjusted_salary |\n+-------------+---------+-----------------+\n| John Doe    | 1000.00 | 1000.00         |\n| Alice Smith | 2000.00 | 2000.00         |\n| Bob Johnson | 1500.00 |                 |\n+-------------+---------+-----------------+\n3 rows in set (0.01 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/Operators/operators/logical-operators/and/","title":"AND,&amp;&amp;","text":""},{"location":"MatrixOne/Reference/Operators/operators/logical-operators/and/#description","title":"Description","text":"<p>Logical <code>AND,&amp;&amp;</code>. Evaluates to <code>true</code> if all operands are nonzero and not NULL, to <code>false</code> if one or more operands are 0, otherwise NULL is returned.</p>"},{"location":"MatrixOne/Reference/Operators/operators/logical-operators/and/#syntax","title":"Syntax","text":"<pre><code>&gt; SELECT column_1 AND column_2 FROM table_name;\n</code></pre>"},{"location":"MatrixOne/Reference/Operators/operators/logical-operators/and/#examples","title":"Examples","text":"<pre><code>mysql&gt; select 1 and 1;\n+---------+\n| 1 and 1 |\n+---------+\n| true    |\n+---------+\nmysql&gt; select 1 and 0;\n+---------+\n| 1 and 0 |\n+---------+\n| false   |\n+---------+\nmysql&gt; select 1 and null;\n+------------+\n| 1 and null |\n+------------+\n| NULL       |\n+------------+\nmysql&gt; select null and 0;\n+------------+\n| null and 0 |\n+------------+\n| false      |\n+------------+\n1 row in set (0.01 sec)\n</code></pre> <pre><code>create table t1 (a boolean,b bool);\ninsert into t1 values (0,1),(true,false),(true,1),(0,false),(NULL,NULL);\nmysql&gt; select a and b from t1;\n+---------+\n| a and b |\n+---------+\n| false   |\n| false   |\n| true    |\n| false   |\n| NULL    |\n+---------+\n5 rows in set (0.00 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/Operators/operators/logical-operators/logical-operators-overview/","title":"Logical Operators","text":"Name Description AND,&amp;&amp; Logical AND NOT,! Negates value OR Logical OR XOR Logical XOR"},{"location":"MatrixOne/Reference/Operators/operators/logical-operators/not/","title":"NOT,!","text":""},{"location":"MatrixOne/Reference/Operators/operators/logical-operators/not/#description","title":"Description","text":"<p>Logical <code>NOT,!</code>. Evaluates to <code>true</code> if the operand is 0, to <code>false</code> if the operand is nonzero, and NOT NULL returns NULL.</p>"},{"location":"MatrixOne/Reference/Operators/operators/logical-operators/not/#syntax","title":"Syntax","text":"<pre><code>&gt; SELECT not column_name FROM table_name;\n</code></pre>"},{"location":"MatrixOne/Reference/Operators/operators/logical-operators/not/#examples","title":"Examples","text":"<pre><code>mysql&gt; select not 0;\n+-------+\n| not 0 |\n+-------+\n| true  |\n+-------+\n1 row in set (0.02 sec)\nmysql&gt; select not null;\n+----------+\n| not null |\n+----------+\n| NULL     |\n+----------+\n1 row in set (0.00 sec)\nmysql&gt; select not 1;\n+-------+\n| not 1 |\n+-------+\n| false |\n+-------+\n1 row in set (0.01 sec)\n</code></pre> <pre><code>create table t1 (a boolean,b bool);\ninsert into t1 values (0,1),(true,false),(true,1),(0,false),(NULL,NULL);\n\nmysql&gt; select not a and not b from t1;\n+-----------------+\n| not a and not b |\n+-----------------+\n| false           |\n| false           |\n| false           |\n| true            |\n| NULL            |\n+-----------------+\n5 rows in set (0.00 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/Operators/operators/logical-operators/not/#constraints","title":"Constraints","text":"<p><code>!</code> is not supported for now.</p>"},{"location":"MatrixOne/Reference/Operators/operators/logical-operators/or/","title":"OR","text":""},{"location":"MatrixOne/Reference/Operators/operators/logical-operators/or/#description","title":"Description","text":"<p>Logical <code>OR,||</code>. When both operands are non-NULL, the result is <code>true</code> if any operand is nonzero, and <code>false</code> otherwise. With a NULL operand, the result is <code>true</code> if the other operand is nonzero, and NULL otherwise. If both operands are <code>NULL</code>, the result is <code>NULL</code>.</p>"},{"location":"MatrixOne/Reference/Operators/operators/logical-operators/or/#syntax","title":"Syntax","text":"<pre><code>&gt; SELECT column_1 OR column_2 FROM table_name;\n</code></pre>"},{"location":"MatrixOne/Reference/Operators/operators/logical-operators/or/#examples","title":"Examples","text":"<pre><code>mysql&gt; select 1 or 1;\n+--------+\n| 1 or 1 |\n+--------+\n| true   |\n+--------+\n1 row in set (0.01 sec)\n\nmysql&gt; select 1 or 0;\n+--------+\n| 1 or 0 |\n+--------+\n| true   |\n+--------+\n1 row in set (0.00 sec)\n\nmysql&gt; select 0 or 0;\n+--------+\n| 0 or 0 |\n+--------+\n| false  |\n+--------+\n1 row in set (0.01 sec)\n\nmysql&gt; select 0 or null;\n+-----------+\n| 0 or null |\n+-----------+\n| NULL      |\n+-----------+\n1 row in set (0.00 sec)\n\nmysql&gt; select 1 or null;\n+-----------+\n| 1 or null |\n+-----------+\n| true      |\n+-----------+\n1 row in set (0.00 sec)\n</code></pre> <pre><code>create table t1 (a boolean,b bool);\ninsert into t1 values (0,1),(true,false),(true,1),(0,false),(NULL,NULL);\n\nmysql&gt; select a or b from t1;\n+--------+\n| a or b |\n+--------+\n| true   |\n| true   |\n| true   |\n| false  |\n| NULL   |\n+--------+\n5 rows in set (0.00 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/Operators/operators/logical-operators/xor/","title":"XOR","text":""},{"location":"MatrixOne/Reference/Operators/operators/logical-operators/xor/#description","title":"Description","text":"<p>Logical <code>XOR</code>. Returns <code>NULL</code> if either operand is NULL. For non-NULL operands, evaluates to <code>true</code> if an odd number of operands is nonzero, otherwise <code>false</code> is returned.</p> <p><code>a XOR b</code> is mathematically equal to <code>(a AND (NOT b)) OR ((NOT a) and b)</code>.</p>"},{"location":"MatrixOne/Reference/Operators/operators/logical-operators/xor/#syntax","title":"Syntax","text":"<pre><code>&gt; SELECT column_1 XOR column_2 FROM table_name;\n</code></pre>"},{"location":"MatrixOne/Reference/Operators/operators/logical-operators/xor/#examples","title":"Examples","text":"<pre><code>mysql&gt; select 1 xor 1;\n+---------+\n| 1 xor 1 |\n+---------+\n| false   |\n+---------+\n1 row in set (0.01 sec)\n\nmysql&gt; select 1 xor 0;\n+---------+\n| 1 xor 0 |\n+---------+\n| true    |\n+---------+\n1 row in set (0.00 sec)\n\nmysql&gt; select 1 xor null;\n+------------+\n| 1 xor null |\n+------------+\n| NULL       |\n+------------+\n1 row in set (0.01 sec)\n\nmysql&gt; select 1 xor 1 xor 1;\n+---------------+\n| 1 xor 1 xor 1 |\n+---------------+\n| true          |\n+---------------+\n1 row in set (0.00 sec)\n</code></pre> <pre><code>create table t1 (a boolean,b bool);\ninsert into t1 values (0,1),(true,false),(true,1),(0,false),(NULL,NULL);\n\nmysql&gt; select a xor b from t1;\n+---------+\n| a xor b |\n+---------+\n| true    |\n| true    |\n| false   |\n| false   |\n| NULL    |\n+---------+\n5 rows in set (0.00 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/SQL-Type/","title":"Type of SQL Statements","text":"<p>In MatrixOne, SQL statements are classified into various categories, and each category's definition and contents are presented in the following sections:</p>"},{"location":"MatrixOne/Reference/SQL-Reference/SQL-Type/#ddl-data-definition-language","title":"DDL - Data Definition Language","text":"<p>Data Definition Language (DDL) is a subset of DBMS language used for defining data objects. In MatrixOne, DDL statements are divided into five categories:</p>"},{"location":"MatrixOne/Reference/SQL-Reference/SQL-Type/#create-statements-creating-various-objects-in-matrixone","title":"CREATE Statements - Creating Various Objects in MatrixOne","text":"<ul> <li>CREATE DATABASE</li> <li>CREATE INDEX</li> <li>CREATE TABLE</li> <li>CREATE EXTERNAL TABLE</li> <li>CREATE PUBLICATION</li> <li>CREATE SEQUENCE</li> <li>CREATE STAGE</li> <li>CREATE...FROM...PUBLICATION...</li> <li>CREATE VIEW</li> </ul>"},{"location":"MatrixOne/Reference/SQL-Reference/SQL-Type/#drop-statements-deleting-various-objects-in-matrixone","title":"DROP Statements - Deleting Various Objects in MatrixOne","text":"<ul> <li>DROP INDEX</li> <li>DROP TABLE</li> <li>DROP PUBLICATION</li> <li>DROP SEQUENCE</li> <li>DROP STAGE</li> <li>DROP VIEW</li> </ul>"},{"location":"MatrixOne/Reference/SQL-Reference/SQL-Type/#alter-statements-modifying-various-objects-in-matrixone","title":"ALTER Statements - Modifying Various Objects in MatrixOne","text":"<ul> <li>ALTER TABLE</li> <li>ALTER PUBLICATION</li> <li>ALTER STAGE</li> <li>ALTER VIEW</li> </ul>"},{"location":"MatrixOne/Reference/SQL-Reference/SQL-Type/#truncate-statement-clearing-data-from-a-table","title":"TRUNCATE Statement - Clearing Data from a Table","text":"<ul> <li>TRUNCATE TABLE</li> </ul>"},{"location":"MatrixOne/Reference/SQL-Reference/SQL-Type/#dml-data-manipulation-language","title":"DML - Data Manipulation Language","text":"<p>Data Manipulation Language (DML) is used for database operations, including programming statements to work with database objects and data. In MatrixOne, DML is categorized as follows:</p>"},{"location":"MatrixOne/Reference/SQL-Reference/SQL-Type/#insert-statements-inserting-new-rows-into-a-table","title":"INSERT Statements - Inserting New Rows into a Table","text":"<ul> <li>INSERT</li> <li>INSERT INTO SELECT</li> <li>INSERT ON DUPLICATE KEY UPDATE</li> </ul>"},{"location":"MatrixOne/Reference/SQL-Reference/SQL-Type/#delete-statement-deleting-existing-rows-from-a-table","title":"DELETE Statement - Deleting Existing Rows from a Table","text":"<ul> <li>DELETE</li> </ul>"},{"location":"MatrixOne/Reference/SQL-Reference/SQL-Type/#update-statement-modifying-data-in-existing-rows-of-a-table","title":"UPDATE Statement - Modifying Data in Existing Rows of a Table","text":"<ul> <li>UPDATE</li> </ul>"},{"location":"MatrixOne/Reference/SQL-Reference/SQL-Type/#load-data-statement-bulk-importing-data-from-files-into-the-database","title":"LOAD DATA Statement - Bulk Importing Data from Files into the Database","text":"<ul> <li>LOAD DATA</li> </ul>"},{"location":"MatrixOne/Reference/SQL-Reference/SQL-Type/#replace-statement-replacing-rows","title":"REPLACE Statement - Replacing Rows","text":"<ul> <li>REPLACE</li> </ul>"},{"location":"MatrixOne/Reference/SQL-Reference/SQL-Type/#dql-data-query-language","title":"DQL - Data Query Language","text":"<p>Data Query Language (DQL) is used to retrieve existing data in MatrixOne. It primarily consists of SELECT statements and includes the following categories:</p>"},{"location":"MatrixOne/Reference/SQL-Reference/SQL-Type/#single-table-query-involving-a-single-table-with-one-level-hierarchy","title":"Single-Table Query - Involving a Single Table with One-Level Hierarchy","text":"<ul> <li>SELECT</li> </ul>"},{"location":"MatrixOne/Reference/SQL-Reference/SQL-Type/#subquery-nested-queries-embedded-in-another-sql-query","title":"Subquery - Nested Queries Embedded in Another SQL Query","text":"<ul> <li>SUBQUERY with ANY or SOME</li> <li>SUBQUERY with ALL</li> <li>SUBQUERY with EXISTS</li> <li>SUBQUERY with IN</li> </ul>"},{"location":"MatrixOne/Reference/SQL-Reference/SQL-Type/#join-query-combining-results-from-multiple-tables","title":"Join Query - Combining Results from Multiple Tables","text":"<ul> <li>INNER JOIN</li> <li>LEFT JOIN</li> <li>RIGHT JOIN</li> <li>FULL JOIN</li> <li>OUTER JOIN</li> <li>NATURAL JOIN</li> </ul>"},{"location":"MatrixOne/Reference/SQL-Reference/SQL-Type/#common-table-expressions-temporary-results-for-reuse-in-queries","title":"Common Table Expressions - Temporary Results for Reuse in Queries","text":"<ul> <li>With CTE</li> </ul>"},{"location":"MatrixOne/Reference/SQL-Reference/SQL-Type/#combination-queries-combining-results-of-multiple-queries-with-union-intersect-and-minus-operations","title":"Combination Queries - Combining Results of Multiple Queries with UNION, INTERSECT, and MINUS Operations","text":"<ul> <li>UNION</li> <li>INTERSECT</li> <li>MINUS</li> </ul>"},{"location":"MatrixOne/Reference/SQL-Reference/SQL-Type/#in-addition-to-select-statements-dql-includes-values-statements-for-constants","title":"In addition to SELECT statements, DQL includes VALUES statements for constants","text":"<ul> <li>SELECT</li> </ul>"},{"location":"MatrixOne/Reference/SQL-Reference/SQL-Type/#and-internal-commands-corresponding-to-the-modump-tool","title":"And internal commands corresponding to the modump tool","text":"<ul> <li>Export Data</li> </ul>"},{"location":"MatrixOne/Reference/SQL-Reference/SQL-Type/#tcl-transaction-control-language","title":"TCL - Transaction Control Language","text":"<p>Transaction Control Language (TCL) in MatrixOne provides specialized language for transaction management and includes the following categories:</p>"},{"location":"MatrixOne/Reference/SQL-Reference/SQL-Type/#start-transaction-initiating-a-transaction-begin-can-be-used-as-a-dialect-in-matrixone","title":"START TRANSACTION - Initiating a Transaction (BEGIN can be used as a dialect in MatrixOne)","text":"<pre><code>START TRANSACTION;\n  TRANSACTION STATEMENTS\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/SQL-Type/#commit-committing-a-transaction","title":"COMMIT - Committing a Transaction","text":"<pre><code>START TRANSACTION;\n  TRANSACTION STATEMENTS\n  COMMIT;\n  OR\n  SET AUTOCOMMIT=0;\n  TRANSACTION STATEMENTS\n  COMMIT;\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/SQL-Type/#rollback-rolling-back-a-transaction","title":"ROLLBACK - Rolling Back a Transaction","text":"<pre><code>START TRANSACTION;\n  TRANSACTION STATEMENTS\n  ROLLBACK;\n  OR\n  SET AUTOCOMMIT=0;\n  TRANSACTION STATEMENTS\n  ROLLBACK;\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/SQL-Type/#dcl-data-control-language","title":"DCL - Data Control Language","text":"<p>Data Control Language (DCL) includes commands for resource allocation and deallocation, user and role creation and deletion, and authorization and revocation of permissions in MatrixOne, categorized as follows:</p>"},{"location":"MatrixOne/Reference/SQL-Reference/SQL-Type/#create-statements-creating-tenants-users-and-roles","title":"CREATE Statements - Creating Tenants, Users, and Roles","text":"<ul> <li>CREATE ACCOUNT</li> <li>CREATE ROLE</li> <li>CREATE USER</li> </ul>"},{"location":"MatrixOne/Reference/SQL-Reference/SQL-Type/#drop-statements-deleting-accounts-users-and-roles","title":"DROP Statements - Deleting Accounts, Users, and Roles","text":"<ul> <li>DROP ACCOUNT</li> <li>DROP USER</li> <li>DROP ROLE</li> </ul>"},{"location":"MatrixOne/Reference/SQL-Reference/SQL-Type/#alter-statements-modifying-account-or-user-information","title":"ALTER Statements - Modifying Account or User Information","text":"<ul> <li>ALTER ACCOUNT</li> <li>ALTER USER</li> </ul>"},{"location":"MatrixOne/Reference/SQL-Reference/SQL-Type/#grant-statement-granting-permissions-to-users-or-roles","title":"GRANT Statement - Granting Permissions to Users or Roles","text":"<ul> <li>GRANT</li> </ul>"},{"location":"MatrixOne/Reference/SQL-Reference/SQL-Type/#revoke-statement-revoking-permissions-from-users-or-roles","title":"REVOKE Statement - Revoking Permissions from Users or Roles","text":"<ul> <li>REVOKE</li> </ul>"},{"location":"MatrixOne/Reference/SQL-Reference/SQL-Type/#other-management-language","title":"Other - Management Language","text":"<p>Management language in MatrixOne pertains to parameters and resource allocation not directly associated with data. It includes various statement types:</p>"},{"location":"MatrixOne/Reference/SQL-Reference/SQL-Type/#show-statements","title":"SHOW Statements","text":"<p>Using SHOW statements to retrieve information:</p> <ul> <li>SHOW DATABASES</li> <li>SHOW CREATE TABLE</li> <li>SHOW CREATE VIEW</li> <li>SHOW CREATE PUBLICATION</li> <li>SHOW TABLES</li> <li>SHOW INDEX</li> <li>SHOW COLLATION</li> <li>SHOW COLUMNS</li> <li>SHOW FUNCTION STATUS</li> <li>SHOW GRANT</li> <li>SHOW PROCESSLIST</li> <li>SHOW PUBLICATIONS</li> <li>SHOW ROLES</li> <li>SHOW SEQUENCES</li> <li>SHOW STAGE</li> <li>SHOW SUBSCRIPTIONS</li> <li>SHOW VARIABLES</li> </ul>"},{"location":"MatrixOne/Reference/SQL-Reference/SQL-Type/#set-statements","title":"SET Statements","text":"<p>Using SET statements to adjust various database parameters, with results displayed via SHOW commands:</p> <ul> <li>SET ROLE</li> </ul>"},{"location":"MatrixOne/Reference/SQL-Reference/SQL-Type/#kill-statement","title":"KILL Statement","text":"<p>Used to terminate a specific database connection:</p> <ul> <li>KILL</li> </ul>"},{"location":"MatrixOne/Reference/SQL-Reference/SQL-Type/#use-statement","title":"USE Statement","text":"<p>Utilized for connecting to an existing database:</p> <ul> <li>USE DATABASE</li> </ul>"},{"location":"MatrixOne/Reference/SQL-Reference/SQL-Type/#explain-statement","title":"Explain Statement","text":"<p>Used to view SQL execution plans:</p> <ul> <li>Explain Analyze</li> </ul>"},{"location":"MatrixOne/Reference/SQL-Reference/SQL-Type/#prepare-statement","title":"PREPARE Statement","text":"<p>Prepares a SQL statement and assigns it a name:</p> <ul> <li>PREPARE</li> </ul>"},{"location":"MatrixOne/Reference/SQL-Reference/SQL-Type/#execute-statement","title":"EXECUTE Statement","text":"<p>After preparing a statement using PREPARE, you can reference the precompiled statement name and execute it:</p> <ul> <li>EXECUTE</li> </ul>"},{"location":"MatrixOne/Reference/SQL-Reference/SQL-Type/#deallocate-prepare-statement","title":"DEALLOCATE PREPARE Statement","text":"<p>Used to release precompiled statements generated by PREPARE. Executing the precompiled statement after deallocation will result in an error:</p> <ul> <li>DEALLOCATE</li> </ul>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Control-Language/alter-account/","title":"ALTER ACCOUNT","text":""},{"location":"MatrixOne/Reference/SQL-Reference/Data-Control-Language/alter-account/#description","title":"Description","text":"<p>Modify account information.</p> <p>Note</p> <ol> <li>The cluster administrator (i.e., the root user) can modify the password of the account it creates.</li> <li>Accounts themselves can modify their own passwords.</li> <li>Only the cluster administrator (i.e., the root user) can perform SUSPEND \u200b\u200band RECOVER (OPEN) account operations.</li> </ol>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Control-Language/alter-account/#syntax","title":"Syntax","text":"<pre><code>&gt; ALTER ACCOUNT [IF EXISTS]\naccount auth_option [COMMENT 'comment_string']\n\nauth_option: {\nADMIN_NAME [=] 'admin_name'\nIDENTIFIED BY 'auth_string'\n}\n\nstatus_option: {\nOPEN\n| SUSPEND\n}\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Control-Language/alter-account/#explanations","title":"Explanations","text":""},{"location":"MatrixOne/Reference/SQL-Reference/Data-Control-Language/alter-account/#auth_option","title":"auth_option","text":"<p>Modifies the default account name and authorization mode of the account, <code>auth_string</code> specifies the password explicitly.</p>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Control-Language/alter-account/#status_option","title":"status_option","text":"<p>Set the state of the account. They are stored as VARCHAR in the mo_account table under the system database mo_catalog.</p> <ul> <li>SUSPEND: Suspend the account's service; that is, the account can no longer access MatrixOne after the suspension; users who are accessing the account can continue to access, and after closing the session, they will no longer be able to access MatrixOne.</li> <li>OPEN: Resume a suspended account, after which the account will usually access MatrixOne.</li> </ul>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Control-Language/alter-account/#comment","title":"comment","text":"<p>Account notes are stored as VARCHAR in the table mo_account in the system database mo_catalog.</p> <p><code>COMMENT</code> can be arbitrary quoted text, and the new <code>COMMENT</code> replaces any existing user comments. As follows:</p> <pre><code>mysql&gt; desc mo_catalog.mo_account;\n+----------------+--------------+------+------+---------+-------+---------+\n| Field          | Type         | Null | Key  | Default | Extra | Comment |\n+----------------+--------------+------+------+---------+-------+---------+\n| account_id     | INT          | YES  |      | NULL    |       |         |\n| account_name   | VARCHAR(300) | YES  |      | NULL    |       |         |\n| status         | VARCHAR(300) | YES  |      | NULL    |       |         |\n| created_time   | TIMESTAMP    | YES  |      | NULL    |       |         |\n| comments       | VARCHAR(256) | YES  |      | NULL    |       |         |\n| suspended_time | TIMESTAMP    | YES  |      | null    |       |         |\n+----------------+--------------+------+------+---------+-------+---------+\n6 rows in set (0.06 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Control-Language/alter-account/#examples","title":"Examples","text":"<ul> <li>Example 1: Modify the information on the account</li> </ul> <pre><code>-- Create a account named \"root1\" with password \"111\"\nmysql&gt; create account acc1 admin_name \"root1\" identified by \"111\";\nQuery OK, 0 rows affected (0.42 sec)\n-- Change the initial password \"111\" to \"Abcd_1234@1234\"\nmysql&gt; alter account acc1 admin_name \"root1\" identified by \"Abcd_1234@1234\";\nQuery OK, 0 rows affected (0.01 sec)\n-- Modify the comment for account \"root1\"\nmysql&gt; alter account acc1 comment \"new account\";\nQuery OK, 0 rows affected (0.02 sec)\n-- Check to verify that the \"new account\" comment has been added to the account \"root1\"\nmysql&gt; show accounts;\n+--------------+------------+---------------------+--------+----------------+----------+-------------+-----------+-------+----------------+\n| account_name | admin_name | created             | status | suspended_time | db_count | table_count | row_count | size  | comment        |\n+--------------+------------+---------------------+--------+----------------+----------+-------------+-----------+-------+----------------+\n| acc1         | root1      | 2023-02-15 06:26:51 | open   | NULL           |        5 |          34 |       787 | 0.036 | new account    |\n| sys          | root       | 2023-02-14 06:58:15 | open   | NULL           |        8 |          57 |      3767 | 0.599 | system account |\n+--------------+------------+---------------------+--------+----------------+----------+-------------+-----------+-------+----------------+\n3 rows in set (0.19 sec)\n</code></pre> <ul> <li>Example 2: Modify the status of the account</li> </ul> <pre><code>-- Create a account named \"root1\" with password \"111\"\nmysql&gt; create account accx admin_name \"root1\" identified by \"111\";\nQuery OK, 0 rows affected (0.27 sec)\n-- Modify the account status to \"suspend\", that is, suspend user access to MatrixOne.\nmysql&gt; alter account accx suspend;\nQuery OK, 0 rows affected (0.01 sec)\n-- Check if the modification status is successful.\nmysql&gt; show accounts;\n+--------------+------------+---------------------+---------+---------------------+----------+-------------+-----------+-------+----------------+\n| account_name | admin_name | created             | status  | suspended_time      | db_count | table_count | row_count | size  | comment        |\n+--------------+------------+---------------------+---------+---------------------+----------+-------------+-----------+-------+----------------+\n| accx         | root1      | 2023-02-15 06:26:51 | suspend | 2023-02-15 06:27:15 |        5 |          34 |       787 | 0.036 | new accout     |\n| sys          | root       | 2023-02-14 06:58:15 | open    | NULL                |        8 |          57 |      3767 | 0.599 | system account |\n+--------------+------------+---------------------+---------+---------------------+----------+-------------+-----------+-------+----------------+\n2 rows in set (0.15 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Control-Language/alter-user/","title":"ALTER USER","text":""},{"location":"MatrixOne/Reference/SQL-Reference/Data-Control-Language/alter-user/#description","title":"Description","text":"<p>Modify the attributes and passwords of database users.</p> <p>Note</p> <ol> <li>Accounts can modify the passwords of the users they create and only modify the passwords of one user at a time. The modified passwords will take effect on the next login, and the current session will not be interrupted.</li> <li>Users can modify their own passwords, and the modified passwords will take effect on the next login, and the current session will not be interrupted.</li> </ol>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Control-Language/alter-user/#syntax","title":"Syntax","text":"<pre><code>ALTER USER [IF EXISTS]\n    user auth_option\n\nauth_option: {\n    IDENTIFIED BY 'auth_string'}\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Control-Language/alter-user/#explanations","title":"Explanations","text":""},{"location":"MatrixOne/Reference/SQL-Reference/Data-Control-Language/alter-user/#auth_option","title":"auth_option","text":"<p>Specifies the default user name and authorization mode of the account, <code>auth_string</code> specifies the password explicitly.</p>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Control-Language/alter-user/#examples","title":"Examples","text":"<pre><code>-- Create a user named \"admin_1\" with password \"123456\"\nmysql&gt; create user admin_1 identified by '123456';\nQuery OK, 0 rows affected (0.02 sec)\n\n-- Modify the user's initial password \"123456\" to \"111111\"\nmysql&gt; alter user 'admin_1' identified by '111111';\nQuery OK, 0 rows affected (0.02 sec)\n\n-- Check if the password was changed successfully\nmysql&gt; select * from mo_catalog.mo_user;\n+---------+-----------+-----------+-----------------------+--------+---------------------+--------------+------------+---------+-------+--------------+\n| user_id | user_host | user_name | authentication_string | status | created_time        | expired_time | login_type | creator | owner | default_role |\n+---------+-----------+-----------+-----------------------+--------+---------------------+--------------+------------+---------+-------+--------------+\n|       0 | localhost | root      | 111                   | unlock | 2023-04-19 06:37:58 | NULL         | PASSWORD   |       0 |     0 |            0 |\n|       1 | localhost | root      | 111                   | unlock | 2023-04-19 06:37:58 | NULL         | PASSWORD   |       0 |     0 |            0 |\n|       2 | localhost | admin_1   | 111111                | unlock | 2023-04-21 06:21:31 | NULL         | PASSWORD   |       1 |     0 |            1 |\n+---------+-----------+-----------+-----------------------+--------+---------------------+--------------+------------+---------+-------+--------------+\n3 rows in set (0.01 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Control-Language/create-account/","title":"CREATE ACCOUNT","text":""},{"location":"MatrixOne/Reference/SQL-Reference/Data-Control-Language/create-account/#description","title":"Description","text":"<p>Create a new account in your organization.</p>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Control-Language/create-account/#syntax","title":"Syntax","text":"<pre><code>&gt; CREATE ACCOUNT  [IF NOT EXISTS]\naccount auth_option\n[COMMENT 'comment_string']\n\nauth_option: {\n    ADMIN_NAME [=] 'admin_name'\n    IDENTIFIED BY 'auth_string'\n}\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Control-Language/create-account/#explanations","title":"Explanations","text":""},{"location":"MatrixOne/Reference/SQL-Reference/Data-Control-Language/create-account/#auth_option","title":"auth_option","text":"<p>Specifies the default account name and authorization mode of the account, <code>auth_string</code> specifies the password explicitly.</p>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Control-Language/create-account/#examples","title":"Examples","text":"<pre><code>&gt; create account tenant_test admin_name = 'root' identified by '111' comment 'tenant_test';\nQuery OK, 0 rows affected (0.08 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Control-Language/create-role/","title":"CREATE ROLE","text":""},{"location":"MatrixOne/Reference/SQL-Reference/Data-Control-Language/create-role/#description","title":"Description","text":"<p>Create a new role in the system.</p> <p>After creating roles, you can grant object privileges to the role and then grant the role to other roles or individual users to enable access control security for objects in the system.</p>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Control-Language/create-role/#syntax","title":"Syntax","text":"<pre><code>&gt; CREATE ROLE [IF NOT EXISTS] role [, role ] ...\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Control-Language/create-role/#examples","title":"Examples","text":"<pre><code>&gt; create role rolex;\nQuery OK, 0 rows affected (0.02 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Control-Language/create-user/","title":"CREATE USER","text":""},{"location":"MatrixOne/Reference/SQL-Reference/Data-Control-Language/create-user/#description","title":"Description","text":"<p>Creates a new user in the system.</p> <p>To use <code>CREATE USER</code>, you must have the <code>CREATE USER</code> privilege.</p> <ul> <li>The default role with <code>CREATE USER</code> privilege is <code>MOADMIN</code> or <code>ACCOUNTADMIN</code>: the cluster administrator (the default account is root), and the tenant administrator created by the cluster administrator has the privilege by default.</li> </ul>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Control-Language/create-user/#syntax","title":"Syntax","text":"<pre><code>&gt; CREATE USER [IF NOT EXISTS]\n    user auth_option [, user auth_option] ...\n    [DEFAULT ROLE rolename]  \n    [COMMENT 'comment_string' | ATTRIBUTE 'json_object']\n\nauth_option: {\n    IDENTIFIED BY 'auth_string'\n}\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Control-Language/create-user/#explanations","title":"Explanations","text":"<p>An user when first created has no privileges and a default role of NONE. To assign privileges or roles, use the GRANT statement.</p> <p>The basic SQL statement of <code>CREAT USER</code> is as follows:</p> <pre><code>create user user_name identified by 'password';\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Control-Language/create-user/#identified-by-auth_string","title":"IDENTIFIED BY 'auth_string'","text":"<p><code>CREATE USER</code> permits these <code>auth_option</code> syntaxes:</p> <ul> <li>'auth_string': 'auth_string' value (the default is password) will be stored in  the mo_user system table.</li> </ul>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Control-Language/create-user/#default-role","title":"DEFAULT ROLE","text":"<p>The DEFAULT ROLE clause defines which roles become active when the user connects to MatrixOne and authenticates, or when the user executes the <code>SET ROLE</code> statement during a session.</p> <pre><code>create user user_name identified by 'password' default role role_rolename;\n</code></pre> <p>The <code>DEFAULT ROLE</code> clause permits a list of one or more comma-separated role names. These roles must exist at the time <code>CREATE USER</code> is executed; otherwise the statement raises an error, and the user is not created.</p>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Control-Language/create-user/#examples","title":"Examples","text":"<pre><code>&gt; create user userx identified by '111';\nQuery OK, 0 rows affected (0.04 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Control-Language/create-user/#constraints","title":"Constraints","text":"<p>MatrxiOne does not supports <code>CREATE USER COMMENT</code> and <code>CREATE USER ATTRIBUTE</code> now.</p>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Control-Language/drop-account/","title":"DROP ACCOUNT","text":""},{"location":"MatrixOne/Reference/SQL-Reference/Data-Control-Language/drop-account/#description","title":"Description","text":"<p>Delete the account in your organization.</p>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Control-Language/drop-account/#syntax","title":"Syntax","text":"<pre><code>&gt; DROP ACCOUNT  [IF EXISTS] account\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Control-Language/drop-account/#examples","title":"Examples","text":"<pre><code>&gt; drop account if exists tenant_test;\nQuery OK, 0 rows affected (0.12 sec)\n</code></pre> <p>Note</p> <p>If the account is in the session, when the account is removed, the session will be disconnected and MatrixOne can no longer be connected.</p>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Control-Language/drop-role/","title":"DROP ROLE","text":""},{"location":"MatrixOne/Reference/SQL-Reference/Data-Control-Language/drop-role/#description","title":"Description","text":"<p>Removes the specified role from the system.</p>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Control-Language/drop-role/#syntax","title":"Syntax","text":"<pre><code>&gt; DROP ROLE [IF EXISTS] role [, role ] ...\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Control-Language/drop-role/#examples","title":"Examples","text":"<pre><code>&gt; drop role if exists rolex;\nQuery OK, 0 rows affected (0.02 sec)\n</code></pre> <p>Note</p> <p>If the user using this role is in a session, when the role is removed, the session will be disconnected immediately, and this role can no longer be used for operations.</p>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Control-Language/drop-user/","title":"DROP USER","text":""},{"location":"MatrixOne/Reference/SQL-Reference/Data-Control-Language/drop-user/#description","title":"Description","text":"<p>Removes the specified user from the system.</p>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Control-Language/drop-user/#syntax","title":"Syntax","text":"<pre><code>&gt; DROP USER [IF EXISTS] user [, user] ...\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Control-Language/drop-user/#examples","title":"Examples","text":"<pre><code>&gt; drop user if exists userx;\nQuery OK, 0 rows affected (0.02 sec)\n</code></pre> <p>Note</p> <p>If the user is in a session, when the user is removed, the session is disconnected and MatrixOne can no longer be connected.</p>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Control-Language/grant/","title":"GRANT","text":""},{"location":"MatrixOne/Reference/SQL-Reference/Data-Control-Language/grant/#description","title":"Description","text":"<p>The <code>GRANT</code> statement assigns privileges and roles to MatrixOne users and roles.</p>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Control-Language/grant/#grant-overview","title":"GRANT Overview","text":"<p>System permissions are those of the initial System account administrator ( The corresponding user is the root). The System account administrator can create and delete other accounts, and manage accounts. A System account administrator cannot manage other resources of other accounts.</p> <p>To use <code>GRANT</code> to GRANT permissions to other users or roles, you must first have the <code>WITH GRANT OPTION</code> permissions and the permissions you are granting. Use the' SHOW GRANTS' statement to find out the grant status of your current or another role. For more information, see SHOW GRANTS.</p> <p>The <code>REVOKE</code> statement is related to <code>GRANT</code> and enables administrators to remove account privileges. For more information on <code>REVOKE</code>, see REVOKE.</p> <p>Normally, a cluster has one root by default, the root first uses <code>CREATE ACCOUNT</code> to create a new account and define its nonprivilege characteristics such as its password, then account uses <code>CREATE USER</code> to create an user and uses <code>GRANT</code> to define its privileges. <code>ALTER ACCOUNT</code> may be used to change the nonprivilege characteristics of existing accounts. <code>ALTER USER</code> is used to change the privilege characteristics of existing users. For more information on privileges supported by MatrixOne, see Privilege Control Types.</p> <p><code>GRANT</code> responds with <code>Query OK, 0 rows affected</code> when executed successfully. To determine what privileges result from the operation, use SHOW GRANTS</p>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Control-Language/grant/#syntax","title":"Syntax","text":"<pre><code>&gt; GRANT\n    priv_type [(column_list)]\n      [, priv_type [(column_list)]] ...\n    ON [object_type] priv_level\n    TO user_or_role [, user_or_role] ...\n\nGRANT role [, role] ...\n    TO user_or_role [, user_or_role] ...\n    [WITH ADMIN OPTION]\n\nobject_type: {\n    TABLE\n  | FUNCTION\n  | PROCEDURE\n}\n\npriv_level: {\n    *\n  | *.*\n  | db_name.*\n  | db_name.tbl_name\n  | tbl_name\n  | db_name.routine_name\n}\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Control-Language/grant/#explanations","title":"Explanations","text":"<p>The <code>GRANT</code> statement enables account to grant privileges and roles, which can be granted to users and roles. These syntax restrictions apply:</p> <ul> <li> <p><code>GRANT</code> cannot mix granting both privileges and roles in the same statement. A given <code>GRANT</code> statement must grant either privileges or roles.</p> </li> <li> <p>The <code>ON</code> clause distinguishes whether the statement grants privileges or roles:</p> <ul> <li> <p>With <code>ON</code>, the statement grants privileges.</p> </li> <li> <p>Without <code>ON</code>, the statement grants roles.</p> </li> <li> <p>It is permitted to assign both privileges and roles to an account, but you must use separate GRANT statements, each with syntax appropriate to what is to be granted.</p> </li> </ul> </li> </ul> <p>To grant a privilege with <code>GRANT</code>, you must have the <code>GRANT OPTION</code> privilege, and you must have the privileges that you are granting.</p>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Control-Language/grant/#database-privileges","title":"Database Privileges","text":"<p>Database privileges apply to all objects in a given database. To assign database-level privileges, use <code>ON db_name *</code> syntax:</p> <pre><code>grant all on database * to role1;\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Control-Language/grant/#table-privileges","title":"Table Privileges","text":"<p>Table privileges apply to all columns in a given table. To assign table-level privileges, use <code>ON db_name.tbl_name</code> syntax:</p> <pre><code>grant all on table *.* to role1;\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Control-Language/grant/#granting-roles","title":"Granting Roles","text":"<p>GRANT syntax without an ON clause grants roles rather than individual privileges. A role is a named collection of privileges. For example:</p> <pre><code>grant role3 to role_user;\n</code></pre> <p>Each role to be granted must exist, as well as each user account or role to which it is to be granted.</p> <p>These privileges are required to grant roles:</p> <ul> <li>You have the privilege to grant or revoke any role to users or roles.</li> </ul>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Control-Language/grant/#examples","title":"Examples","text":"<pre><code>&gt; drop user if exists user_prepare_01;\n&gt; drop role if exists role_prepare_1;\n&gt; create user user_prepare_01 identified by '123456';\n&gt; create role role_prepare_1;\n&gt; create database if not exists p_db;\n&gt; grant create table ,drop table on database *.*  to role_prepare_1;\nQuery OK, 0 rows affected (0.01 sec)\n\n&gt; grant connect on account * to role_prepare_1;\nQuery OK, 0 rows affected (0.01 sec)\n\n&gt; grant insert,select on table *.* to role_prepare_1;\nQuery OK, 0 rows affected (0.01 sec)\n\n&gt; grant role_prepare_1 to user_prepare_01;\nQuery OK, 0 rows affected (0.01 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Control-Language/revoke/","title":"REVOKE","text":""},{"location":"MatrixOne/Reference/SQL-Reference/Data-Control-Language/revoke/#description","title":"Description","text":"<p>Removes one or more privileges on a securable object from a role. The privileges that can be revoked are object-specific.</p>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Control-Language/revoke/#syntax","title":"Syntax","text":"<pre><code>&gt; REVOKE [IF EXISTS]\n    priv_type [(column_list)]\n      [, priv_type [(column_list)]] ...\n    ON object_type priv_level\n\n&gt; REVOKE [IF EXISTS] role [, role ] ...\n    FROM user_or_role [, user_or_role ] ...\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Control-Language/revoke/#examples","title":"Examples","text":"<pre><code>&gt; CREATE USER mouser IDENTIFIED BY '111';\nQuery OK, 0 rows affected (0.10 sec)\n\n&gt; CREATE ROLE role_r1;\nQuery OK, 0 rows affected (0.05 sec)\n\n&gt; GRANT role_r1 to mouser;\nQuery OK, 0 rows affected (0.04 sec)\n\n&gt; GRANT create table on database * to role_r1;\nQuery OK, 0 rows affected (0.03 sec)\n\n&gt; SHOW GRANTS for mouser@localhost;\n+-------------------------------------------------------+\n| Grants for mouser@localhost                           |\n+-------------------------------------------------------+\n| GRANT create table ON database * `mouser`@`localhost` |\n| GRANT connect ON account  `mouser`@`localhost`        |\n+-------------------------------------------------------+\n2 rows in set (0.02 sec)\n\n&gt; REVOKE role_r1 from mouser;\nQuery OK, 0 rows affected (0.04 sec)\n\n&gt; SHOW GRANT for mouser@localhost;\n+------------------------------------------------+\n| Grants for mouser@localhost                    |\n+------------------------------------------------+\n| GRANT connect ON account  `mouser`@`localhost` |\n+------------------------------------------------+\n1 row in set (0.02 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Definition-Language/alter-publication/","title":"ALTER PUBLICATION","text":""},{"location":"MatrixOne/Reference/SQL-Reference/Data-Definition-Language/alter-publication/#grammar-description","title":"Grammar description","text":"<p><code>ALTER PUBLICATION</code> Modify the publication.</p>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Definition-Language/alter-publication/#grammar-structure","title":"Grammar structure","text":"<pre><code>ALTER PUBLICATION pubname \n    [ACCOUNT \n            { ALL\n            | account_name, [, ... ]\n            | ADD account_name, [, ... ]\n            | DROP account_name, [, ... ]]\n    [COMMENT 'string']\n    [DATABASE database_name]\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Definition-Language/alter-publication/#interpretation-of-grammar","title":"Interpretation of grammar","text":"<ul> <li>pubname: The name of the publication that already exists.</li> <li>account_name: Gets the tenant name for this publication.</li> <li>database_name: The name of the release library to modify.</li> </ul>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Definition-Language/alter-publication/#examples","title":"Examples","text":"<pre><code>create account acc0 admin_name 'root' identified by '111';\ncreate account acc1 admin_name 'root' identified by '111';\ncreate account acc2 admin_name 'root' identified by '111';\ncreate database t;\ncreate publication pub3 database t account acc0,acc1;\n\nalter publication pub3 account add accx;--Modification of the scope of publication\nmysql&gt; show create publication pub3;\n+-------------+-----------------------------------------------------------------------+\n| Publication | Create Publication                                                    |\n+-------------+-----------------------------------------------------------------------+\n| pub3        | CREATE PUBLICATION `pub3` DATABASE `t` ACCOUNT `acc0`, `acc1`, `accx` |\n+-------------+-----------------------------------------------------------------------+\n1 row in set (0.01 sec)\n\nmysql&gt; show publications;\n+-------------+----------+---------------------+---------------------+----------------+----------+\n| publication | database | create_time         | update_time         | sub_account    | comments |\n+-------------+----------+---------------------+---------------------+----------------+----------+\n| pub3        | t        | 2024-04-24 11:17:37 | 2024-04-24 11:17:44 | acc0,acc1,accx |          |\n+-------------+----------+---------------------+---------------------+----------------+----------+\n1 row in set (0.01 sec)\n\nalter publication pub3  comment \"this is pubs\";--\u4fee\u6539\u53d1\u5e03\u5907\u6ce8\nmysql&gt; show publications;\n+-------------+----------+---------------------+---------------------+----------------+--------------+\n| publication | database | create_time         | update_time         | sub_account    | comments     |\n+-------------+----------+---------------------+---------------------+----------------+--------------+\n| pub3        | t        | 2024-04-24 11:17:37 | 2024-04-24 11:41:43 | acc0,acc1,accx | this is pubs |\n+-------------+----------+---------------------+---------------------+----------------+--------------+\n1 row in set (0.00 sec)\n\ncreate database new_pub3;\nalter publication pub3 database new_pub3;--\u4fee\u6539\u53d1\u5e03\u6570\u636e\u5e93\nmysql&gt; show publications;\n+-------------+----------+---------------------+---------------------+----------------+--------------+\n| publication | database | create_time         | update_time         | sub_account    | comments     |\n+-------------+----------+---------------------+---------------------+----------------+--------------+\n| pub3        | new_pub3 | 2024-04-24 11:17:37 | 2024-04-24 11:43:36 | acc0,acc1,accx | this is pubs |\n+-------------+----------+---------------------+---------------------+----------------+--------------+\n1 row in set (0.00 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Definition-Language/alter-reindex/","title":"ALTER REINDEX","text":""},{"location":"MatrixOne/Reference/SQL-Reference/Data-Definition-Language/alter-reindex/#syntax-description","title":"Syntax Description","text":"<p><code>ALTER TABLE ... ALTER REINDEX</code> is used to repartition data in a vector table.</p> <p>When data records within a vector scale grow significantly, the original cluster center set may no longer be applicable. To do this, we have to re-index the data with the aim of identifying new cluster centers and repartitioning the dataset accordingly.</p> <p>Note</p> <p>A data insertion operation cannot be performed on this table while the index is being reconstructed.</p> <p>The ideal values for LISTS are:</p> <ul> <li>If total rows &lt;1000000:lists=total rows/1000</li> <li>If total rows &gt; 1000000:lists=sqrt (total rows)</li> </ul>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Definition-Language/alter-reindex/#syntax-structure","title":"Syntax structure","text":"<pre><code>&gt; ALTER TABLE table_name ALTER REINDEX  index_name LISTS=XX\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Definition-Language/alter-reindex/#examples","title":"Examples","text":"<pre><code>SET GLOBAL experimental_ivf_index = 1;--The parameter experimental_ivf_index needs to be set to 1 (default 0) to use vector indexes.\ndrop table if exists t1;\ncreate table t1(n1 int,n2  vecf32(3));\ninsert into t1 values(1,\"[1,2,3]\"),(2,\"[2,3,4]\"),(3,\"[3,4,5]\");\ncreate index idx_t1 using ivfflat on t1(n2)  lists=2 op_type \"vector_l2_ops\";\n\nmysql&gt; show create table t1;\n+-------+-------------------------------------------------------------------------------------------------------------------------------------------------+\n| Table | Create Table                                                                                                                                    |\n+-------+-------------------------------------------------------------------------------------------------------------------------------------------------+\n| t1    | CREATE TABLE `t1` (\n`n1` INT DEFAULT NULL,\n`n2` VECF32(3) DEFAULT NULL,\nKEY `idx_t1` USING ivfflat (`n2`) lists = 2  op_type 'vector_l2_ops' ) |\n+-------+-------------------------------------------------------------------------------------------------------------------------------------------------+\n1 row in set (0.01 sec)\n\nmysql&gt; show index from t1;\n+-------+------------+----------+--------------+-------------+-----------+-------------+----------+--------+------+------------+---------+---------------+-----------------------------------------+---------+------------+\n| Table | Non_unique | Key_name | Seq_in_index | Column_name | Collation | Cardinality | Sub_part | Packed | Null | Index_type | Comment | Index_comment | Index_params                            | Visible | Expression |\n+-------+------------+----------+--------------+-------------+-----------+-------------+----------+--------+------+------------+---------+---------------+-----------------------------------------+---------+------------+\n| t1    |          1 | idx_t1   |            1 | n2          | A         |           0 | NULL     | NULL   | YES  | ivfflat    |         |               | {\"lists\":\"2\",\"op_type\":\"vector_l2_ops\"} | YES     | NULL       |\n+-------+------------+----------+--------------+-------------+-----------+-------------+----------+--------+------+------------+---------+---------------+-----------------------------------------+---------+------------+\n1 row in set (0.00 sec)\n\nmysql&gt; alter table t1 alter reindex idx_t1 ivfflat lists=100;\nQuery OK, 0 rows affected (0.03 sec)\n\nmysql&gt; show create table t1;\n+-------+---------------------------------------------------------------------------------------------------------------------------------------------------+\n| Table | Create Table                                                                                                                                      |\n+-------+---------------------------------------------------------------------------------------------------------------------------------------------------+\n| t1    | CREATE TABLE `t1` (\n`n1` INT DEFAULT NULL,\n`n2` VECF32(3) DEFAULT NULL,\nKEY `idx_t1` USING ivfflat (`n2`) lists = 100  op_type 'vector_l2_ops' ) |\n+-------+---------------------------------------------------------------------------------------------------------------------------------------------------+\n1 row in set (0.00 sec)\n\nmysql&gt; show index from t1;\n+-------+------------+----------+--------------+-------------+-----------+-------------+----------+--------+------+------------+---------+---------------+-------------------------------------------+---------+------------+\n| Table | Non_unique | Key_name | Seq_in_index | Column_name | Collation | Cardinality | Sub_part | Packed | Null | Index_type | Comment | Index_comment | Index_params                              | Visible | Expression |\n+-------+------------+----------+--------------+-------------+-----------+-------------+----------+--------+------+------------+---------+---------------+-------------------------------------------+---------+------------+\n| t1    |          1 | idx_t1   |            1 | n2          | A         |           0 | NULL     | NULL   | YES  | ivfflat    |         |               | {\"lists\":\"100\",\"op_type\":\"vector_l2_ops\"} | YES     | NULL       |\n+-------+------------+----------+--------------+-------------+-----------+-------------+----------+--------+------+------------+---------+---------------+-------------------------------------------+---------+------------+\n1 row in set (0.01 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Definition-Language/alter-sequence/","title":"ALTER SEQUENCE","text":""},{"location":"MatrixOne/Reference/SQL-Reference/Data-Definition-Language/alter-sequence/#grammar-description","title":"Grammar description","text":"<p><code>ALTER SEQUENCE</code> is used to modify an existing sequence.</p>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Definition-Language/alter-sequence/#grammar-structure","title":"Grammar structure","text":"<pre><code>&gt; ALTER SEQUENCE [ IF EXISTS ] SEQUENCE_NAME\n[ AS data_type ]\n[ INCREMENT [ BY ] increment ]\n[ MINVALUE minvalue] [ MAXVALUE maxvalue]\n[ START [ WITH ] start ] [ [ NO ] CYCLE ]\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Definition-Language/alter-sequence/#grammatical-interpretation","title":"Grammatical interpretation","text":"<ul> <li> <p><code>[IF EXISTS]</code>: Optional clause indicating that no error is raised if the specified sequence does not exist. If this clause is used, the system checks whether the sequence exists, and if not, ignores the modification request.</p> </li> <li> <p><code>SEQUENCE_NAME</code>: The name of the sequence to modify.</p> </li> <li> <p><code>[AS data_type]</code>: Optional clause that allows you to specify a data type for a sequence. Typically, the data type of a sequence is an integer.</p> </li> <li> <p><code>[INCREMENT[BY]increment]</code>: This is the incremental value of the specified sequence. The increment value of a sequence is the amount to be added to the current value each time it is incremented or decremented. If no incremental value is specified, it usually defaults to 1.</p> </li> <li> <p><code>[MINVALUE minvalue]</code>: This is the minimum value of the sequence, which specifies the minimum value allowed for the sequence. If a minimum value is specified, the current value of the sequence cannot be lower than this value.</p> </li> <li> <p><code>[MAXVALUE maxvalue]</code>: This is the maximum value of the sequence, which specifies the maximum allowed for the sequence. If a maximum value is specified, the current value of the sequence cannot exceed this value.</p> </li> <li> <p><code>[ START [</code>WITH ] start ]: This is the start value of the sequence, which specifies the initial value of the sequence. If no starting value is specified, it usually defaults to 1.</p> </li> <li> <p><code>[NO] CYCLE]</code>: Optional clause that specifies whether sequence values should be recycled. If <code>NO CYCLE</code> is specified, the sequence stops incrementing or decrementing when the maximum or minimum value is reached. If this clause is not specified, it usually defaults to no loop.</p> </li> </ul>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Definition-Language/alter-sequence/#examples","title":"Examples","text":"<pre><code>-- Create a sequence called alter_seq_01, set the increment of the sequence to 2, set the minimum value of the sequence to 30 and the maximum value to 100, and enable the loop\ncreate sequence alter_seq_01 as smallint increment by 2 minvalue 30 maxvalue 100 cycle;\n\nmysql&gt; show sequences;\n+--------------+-----------+\n| Names        | Data Type |\n+--------------+-----------+\n| alter_seq_01 | SMALLINT  |\n+--------------+-----------+\n1 row in set (0.00 sec)\n\nmysql&gt; alter sequence alter_seq_01 as bigint;\nQuery OK, 0 rows affected (0.01 sec)\n\nmysql&gt; show sequences;\n+--------------+-----------+\n| Names        | Data Type |\n+--------------+-----------+\n| alter_seq_01 | BIGINT    |\n+--------------+-----------+\n1 row in set (0.00 sec)\n\n-- Cancel loop for sequence alter_seq_01\nmysql&gt; alter sequence alter_seq_01 no cycle;\nQuery OK, 0 rows affected (0.01 sec)\n\nmysql&gt; select nextval('alter_seq_01'),currval('alter_seq_01');\n+-----------------------+-----------------------+\n| nextval(alter_seq_01) | currval(alter_seq_01) |\n+-----------------------+-----------------------+\n| 30                    | 30                    |\n+-----------------------+-----------------------+\n1 row in set (0.01 sec)\n\nmysql&gt; select nextval('alter_seq_01'),currval('alter_seq_01');\n+-----------------------+-----------------------+\n| nextval(alter_seq_01) | currval(alter_seq_01) |\n+-----------------------+-----------------------+\n| 32                    | 32                    |\n+-----------------------+-----------------------+\n1 row in set (0.00 sec)\n\n-- Set the starting value of the sequence alter_seq_01 to 40\nmysql&gt; alter sequence alter_seq_01 start with 40;\nQuery OK, 0 rows affected (0.01 sec)\n\nmysql&gt; select nextval('alter_seq_01'),currval('alter_seq_01');\n+-----------------------+-----------------------+\n| nextval(alter_seq_01) | currval(alter_seq_01) |\n+-----------------------+-----------------------+\n| 40                    | 40                    |\n+-----------------------+-----------------------+\n1 row in set (0.01 sec)\n\nmysql&gt; select nextval('alter_seq_01'),currval('alter_seq_01');\n+-----------------------+-----------------------+\n| nextval(alter_seq_01) | currval(alter_seq_01) |\n+-----------------------+-----------------------+\n| 42                    | 42                    |\n+-----------------------+-----------------------+\n1 row in set (0.00 sec)\n\n-- Set the incremental value of the sequence alter_seq_01 to 3\nmysql&gt; alter sequence alter_seq_01 increment by 3;\nQuery OK, 0 rows affected (0.01 sec)\n\nmysql&gt; select nextval('alter_seq_01'),currval('alter_seq_01');\n+-----------------------+-----------------------+\n| nextval(alter_seq_01) | currval(alter_seq_01) |\n+-----------------------+-----------------------+\n| 40                    | 40                    |\n+-----------------------+-----------------------+\n1 row in set (0.00 sec)\n\nmysql&gt; select nextval('alter_seq_01'),currval('alter_seq_01');\n+-----------------------+-----------------------+\n| nextval(alter_seq_01) | currval(alter_seq_01) |\n+-----------------------+-----------------------+\n| 43                    | 43                    |\n+-----------------------+-----------------------+\n1 row in set (0.00 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Definition-Language/alter-stage/","title":"ALTER STAGE","text":""},{"location":"MatrixOne/Reference/SQL-Reference/Data-Definition-Language/alter-stage/#description","title":"Description","text":"<p><code>ALTER STAGE</code> is used to modify the attributes of an existing named internal or external stage.</p> <p>Note</p> <p>Cluster administrators (i.e., root users) and account administrators can modify the data stage.</p>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Definition-Language/alter-stage/#syntax","title":"Syntax","text":"<pre><code>&gt; ALTER STAGE [ IF EXISTS ] { stage_name }\n   { StageParams }\n   [ directoryTableParams ]\n   [ COMMENT = '&lt;string_literal&gt;' ]\n\nStageParams (for Amazon S3) :\nURL =  \"endpoint\"='&lt;string&gt;' CREDENTIALS = {\"access_key_id\"='&lt;string&gt;', \"secret_access_key\"='&lt;string&gt;'}\n\nStageParams (for Aliyun OSS) :\nURL =  \"endpoint\"='&lt;string&gt;' CREDENTIALS = {\"access_key_id\"='&lt;string&gt;', \"secret_access_key\"='&lt;string&gt;'}\n\nStageParams (for File System) :\nURL= 'filepath'\n\ndirectoryTableParams :\nENABLE = { TRUE | FALSE }\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Definition-Language/alter-stage/#explanations","title":"Explanations","text":"<ul> <li> <p><code>IF NOT EXISTS</code>: An optional parameter used to check whether a stage with the same name already exists when modifying a stage, avoiding duplicate creations.</p> </li> <li> <p><code>stage_name</code>: The name of the stage to be modified.</p> </li> <li> <p><code>StageParams</code>: This parameter group is used to specify the stage's configuration parameters.</p> <ul> <li> <p><code>endpoint</code>: The connection URL for the stage, indicating the location of the object storage service. This URL's content may vary for object storage services like Amazon S3, Aliyun OSS, or a file system. For example s3.us-west-2.amazonaws.com</p> </li> <li> <p><code>CREDENTIALS</code>: This JSON object contains the credentials required to connect to the object storage service, such as <code>access_key_id</code>, <code>secret_access_key</code>, etc.</p> </li> </ul> </li> <li> <p><code>directoryTableParams</code>: This parameter group is used to specify the configuration of a directory table associated with the stage.</p> <ul> <li><code>ENABLE</code>: Indicates whether the directory table is enabled, with values <code>TRUE</code> or <code>FALSE</code> values.</li> </ul> </li> </ul>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Definition-Language/alter-stage/#examples","title":"Examples","text":"<pre><code>CREATE TABLE `user` (`id` int(11) ,`user_name` varchar(255) ,`sex` varchar(255));\nINSERT INTO user(id,user_name,sex) values('1', 'weder', 'man'), ('2', 'tom', 'man'), ('3', 'wederTom', 'man');\n\n-- Create internal data stage\nmysql&gt; CREATE STAGE stage1 URL='/tmp' ENABLE = TRUE;\n\n-- Export data from the table to data stage\nmysql&gt; SELECT * FROM user INTO OUTFILE 'stage1:/user.csv';\n-- You can see your exported table in your local directory\n\nmysql&gt; SHOW STAGES;\n+------------+-----------------------------+---------+---------+\n| STAGE_NAME | URL                         | STATUS  | COMMENT |\n+------------+-----------------------------+---------+---------+\n| stage1     | /Users/Prinz/03testrepo/csv | ENABLED |         |\n+------------+-----------------------------+---------+---------+\n1 row in set (0.01 sec)\n\n-- modify the stage1\nmysql&gt; ALTER STAGE stage1 SET COMMENT 'user stage';\n\nmysql&gt; SHOW STAGES;\n+------------+-----------------------------+---------+------------+\n| STAGE_NAME | URL                         | STATUS  | COMMENT    |\n+------------+-----------------------------+---------+------------+\n| stage1     | /Users/Prinz/03testrepo/csv | ENABLED | user stage |\n+------------+-----------------------------+---------+------------+\n1 row in set (0.00 sec)\n\n-- disable the data stage named 'stage1'\nmysql&gt; ALTER STAGE stage1 SET ENABLE = FALSE;\nQuery OK, 0 rows affected (0.00 sec)\n\n-- Try to export the data of the user table to the data stage named 'stage1:/user.csv', but stage1 has been disabled, so it is no longer available, and an error is reported\nmysql&gt; SELECT * FROM user INTO OUTFILE 'stage1:/user.csv';\nERROR 20101 (HY000): internal error: stage 'stage1' is invalid, please check\n\n-- Re-enable with a data stage named 'stage1'\nmysql&gt; ALTER STAGE stage1 SET ENABLE = TRUE;\nQuery OK, 0 rows affected (0.00 sec)\n\n-- The export can be executed successfully again\nmysql&gt; SELECT * FROM user INTO OUTFILE 'stage1:/user.csv';\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Definition-Language/alter-table/","title":"ALTER TABLE","text":""},{"location":"MatrixOne/Reference/SQL-Reference/Data-Definition-Language/alter-table/#description","title":"Description","text":"<p><code>ALTER TABLE</code> is used to modify the existing data table structure.</p>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Definition-Language/alter-table/#syntax","title":"Syntax","text":"<pre><code>ALTER TABLE tbl_name\n    [alter_option [, alter_option] ...]\n\nalter_option: {\n    table_options\n  | ADD [COLUMN] col_name column_definition\n        [FIRST | AFTER col_name]\n  | ADD [COLUMN] (col_name column_definition,...)\n  | ADD {[INDEX | KEY] [index_name]\n        [index_option] ...\n  | ADD [CONSTRAINT] UNIQUE [INDEX | KEY]\n        [index_name][index_option] ...\n  | ADD [CONSTRAINT] FOREIGN KEY\n        [index_name] (col_name,...)\n        reference_definition\n  | ADD [CONSTRAINT [symbol]] PRIMARY KEY\n        [index_type] (key_part,...)\n  | CHANGE [COLUMN] old_col_name new_col_name column_definition\n        [FIRST | AFTER col_name]\n  | ALTER INDEX index_name {VISIBLE | INVISIBLE}\n  | DROP [COLUMN] col_name\n  | DROP {INDEX | KEY} index_name\n  | DROP FOREIGN KEY fk_symbol\n  | DROP PRIMARY KEY\n  | RENAME [TO | AS] new_tbl_name\n  | MODIFY [COLUMN] col_name column_definition\n        [FIRST | AFTER col_name]\n  | RENAME COLUMN old_col_name TO new_col_name\n    }\n\nkey_part: {col_name [(length)] | (expr)} [ASC | DESC]\nindex_option: {\n  COMMENT[=]'string'\n}\ntable_options:\n    table_option [[,] table_option] ...\ntable_option: {\n  COMMENT [=] 'string'\n}\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Definition-Language/alter-table/#explanations","title":"Explanations","text":"<p>The explanations of each parameter are as the following:</p> <ol> <li><code>ALTER TABLE tbl_name</code>: Indicates modifying a table named <code>tbl_name</code>.</li> <li> <p><code>alter_option</code>: Indicates that one or more change options can be executed, separated by commas.</p> <ul> <li><code>table_options</code>: Used to set or modify table options, such as table comments (COMMENT).</li> <li><code>ADD [COLUMN] col_name column_definition [FIRST | AFTER col_name]</code>: Adds a new column to the table, specifying the position of the new column (before or after a particular column).</li> <li><code>ADD [COLUMN] (col_name column_definition, ...)</code>: Adds multiple new columns simultaneously.</li> <li><code>ADD {[INDEX | KEY] [index_name] [index_option] ...</code>: Adds an index, specifying the index name and index options (such as comments).</li> <li><code>ADD [CONSTRAINT] UNIQUE [INDEX | KEY] [index_name][index_option] ...</code>: Adds a UNIQUE constraint or UNIQUE index.</li> <li><code>ADD [CONSTRAINT] FOREIGN KEY [index_name] (col_name, ...) reference_definition</code>: Adds a FOREIGN KEY constraint.</li> <li><code>ADD [CONSTRAINT [symbol]] PRIMARY KEY [index_type] (key_part,...)</code>: Add a primary key constraint.</li> <li><code>CHANGE [COLUMN] old_col_name new_col_name column_definition [FIRST | AFTER col_name]</code>: Modify the column definition, column name and order.</li> <li><code>ALTER INDEX index_name {VISIBLE | INVISIBLE}</code>: Changes the visibility of an index.</li> <li><code>DROP [COLUMN] col_name</code>: Drops a column.</li> <li><code>DROP {INDEX | KEY} index_name</code>: Drops an index.</li> <li><code>DROP FOREIGN KEY fk_symbol</code>: Drops a FOREIGN KEY constraint.</li> <li><code>DROP PRIMARY KEY</code>: Delete the primary key.</li> <li><code>RENAME [TO | AS] new_tbl_name</code>: Renames the table.</li> <li><code>MODIFY [COLUMN] col_name column_definition [FIRST | AFTER col_name]</code>: Modify column definition and order.</li> <li><code>RENAME COLUMN old_col_name TO new_col_name</code>: Rename a column.</li> </ul> </li> <li> <p><code>key_part</code>: Represents the components of an index, which can be column names (when creating an index on a text column, you might specify a length for the index to only consider a certain number of characters in that column. If you create an index using a column name without specifying a length, the index will use the entire column value as an index component. In some cases, this may result in reduced performance, especially when dealing with large text or binary data columns. Specifying a length is usually unnecessary for smaller data types, such as integers or dates.).</p> </li> <li><code>index_option</code>: Represents index options, such as comments (COMMENT).</li> <li><code>table_options</code>: Represents table options, such as table comments (COMMENT).</li> <li><code>table_option</code>: Specific table options, such as comments (COMMENT).</li> </ol>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Definition-Language/alter-table/#examples","title":"Examples","text":"<ul> <li>Example 1:</li> </ul> <pre><code>-- Create table f1 with two integer columns: fa (primary key) and fb (unique key)\nCREATE TABLE f1(fa INT PRIMARY KEY, fb INT UNIQUE KEY);\n-- Create table c1 with two integer columns: ca and cb\nCREATE TABLE c1 (ca INT, cb INT);\n-- Add a foreign key constraint named ffa to table c1, associating column ca of table c1 with column fa of table f1\nALTER TABLE c1 ADD CONSTRAINT ffa FOREIGN KEY (ca) REFERENCES f1(fa);\n-- Insert a record into table f1: (2, 2)\nINSERT INTO f1 VALUES (2, 2);\n-- Insert a record into table c1: (1, 1)\nINSERT INTO c1 VALUES (1, 1);\n-- Insert a record into table c1: (2, 2)\nINSERT INTO c1 VALUES (2, 2);\n-- Select all records from table c1 and order by column ca\nmysql&gt; select ca, cb from c1 order by ca;\n+------+------+\n| ca   | cb   |\n+------+------+\n|    2 |    2 |\n+------+------+\n1 row in set (0.01 sec)\n-- Drop the foreign key constraint named ffa from table c1\nALTER TABLE c1 DROP FOREIGN KEY ffa;\n-- Insert a record into table c1: (1, 1)\nINSERT INTO c1 VALUES (1, 1);\n-- Select all records from table c1 and order by column ca\nmysql&gt; select ca, cb from c1 order by ca;\n+------+------+\n| ca   | cb   |\n+------+------+\n|    1 |    1 |\n|    2 |    2 |\n+------+------+\n2 rows in set (0.01 sec)\n</code></pre> <ul> <li>Example 2:</li> </ul> <pre><code>-- Create a new table 't1' with columns a, b, c, and d. Column 'a' is of type INTEGER, 'b' is of type CHAR(10), 'c' is of type DATE, and 'd' is of type DECIMAL(7,2). A unique key is added on columns 'a' and 'b'.\nCREATE TABLE t1(a INTEGER, b CHAR(10), c DATE, d DECIMAL(7,2), UNIQUE KEY(a, b));\n\n-- Describe the structure of the 't1' table.\nmysql&gt; desc t1;\n+-------+--------------+------+------+---------+-------+---------+\n| Field | Type         | Null | Key  | Default | Extra | Comment |\n+-------+--------------+------+------+---------+-------+---------+\n| a     | INT(32)      | YES  |      | NULL    |       |         |\n| b     | CHAR(10)     | YES  |      | NULL    |       |         |\n| c     | DATE(0)      | YES  |      | NULL    |       |         |\n| d     | DECIMAL64(7) | YES  |      | NULL    |       |         |\n+-------+--------------+------+------+---------+-------+---------+\n4 rows in set (0.01 sec)\n\n-- Insert three rows into the 't1' table.\nINSERT INTO t1 VALUES(1, 'ab', '1980-12-17', 800);\nINSERT INTO t1 VALUES(2, 'ac', '1981-02-20', 1600);\nINSERT INTO t1 VALUES(3, 'ad', '1981-02-22', 500);\n\n-- Display all the rows from the 't1' table.\nmysql&gt; select * from t1;\n+------+------+------------+---------+\n| a    | b    | c          | d       |\n+------+------+------------+---------+\n|    1 | ab   | 1980-12-17 |  800.00 |\n|    2 | ac   | 1981-02-20 | 1600.00 |\n|    3 | ad   | 1981-02-22 |  500.00 |\n+------+------+------------+---------+\n3 rows in set (0.01 sec)\n\n-- Alter the 't1' table to add a primary key 'pk1' on columns 'a' and 'b'.\nmysql&gt; alter table t1 add primary key pk1(a, b);\nQuery OK, 0 rows affected (0.02 sec)\n\n-- Describe the modified structure of the 't1' table after adding the primary key.\nmysql&gt; desc t1;\n+-------+--------------+------+------+---------+-------+---------+\n| Field | Type         | Null | Key  | Default | Extra | Comment |\n+-------+--------------+------+------+---------+-------+---------+\n| a     | INT(32)      | NO   | PRI  | null    |       |         |\n| b     | CHAR(10)     | NO   | PRI  | null    |       |         |\n| c     | DATE(0)      | YES  |      | null    |       |         |\n| d     | DECIMAL64(7) | YES  |      | null    |       |         |\n+-------+--------------+------+------+---------+-------+---------+\n4 rows in set (0.01 sec)\n\n-- Display all the rows from the 't1' table after adding the primary key.\nmysql&gt; select * from t1;\n+------+------+------------+---------+\n| a    | b    | c          | d       |\n+------+------+------------+---------+\n|    1 | ab   | 1980-12-17 |  800.00 |\n|    2 | ac   | 1981-02-20 | 1600.00 |\n|    3 | ad   | 1981-02-22 |  500.00 |\n+------+------+------------+---------+\n3 rows in set (0.00 sec)\n</code></pre> <ul> <li>Example 3:</li> </ul> <pre><code>CREATE TABLE t1 (a INTEGER PRIMARY KEY, b CHAR(10));\nmysql&gt; desc t1;\n+-------+----------+------+------+---------+-------+---------+\n| Field | Type     | Null | Key  | Default | Extra | Comment |\n+-------+----------+------+------+---------+-------+---------+\n| a     | INT(32)  | NO   | PRI  | NULL    |       |         |\n| b     | CHAR(10) | YES  |      | NULL    |       |         |\n+-------+----------+------+------+---------+-------+---------+\n2 rows in set (0.01 sec)\n\ninsert into t1 values(1, 'ab');\ninsert into t1 values(2, 'ac');\ninsert into t1 values(3, 'ad');\n\nmysql&gt; select * from t1;\n+------+------+\n| a    | b    |\n+------+------+\n|    1 | ab   |\n|    2 | ac   |\n|    3 | ad   |\n+------+------+\n3 rows in set (0.01 sec)\n\n-- Modify table 't1', change column 'a' name to 'x', and change datatype to VARCHAR(20).\nmysql&gt; alter table t1 change a x VARCHAR(20);\nQuery OK, 0 rows affected (0.01 sec)\n\nmysql&gt; desc t1;\n+-------+-------------+------+------+---------+-------+---------+\n| Field | Type        | Null | Key  | Default | Extra | Comment |\n+-------+-------------+------+------+---------+-------+---------+\n| x     | VARCHAR(20) | NO   | PRI  | null    |       |         |\n| b     | CHAR(10)    | YES  |      | null    |       |         |\n+-------+-------------+------+------+---------+-------+---------+\n2 rows in set (0.01 sec)\n\nmysql&gt; select * from t1;\n+------+------+\n| x    | b    |\n+------+------+\n| 1    | ab   |\n| 2    | ac   |\n| 3    | ad   |\n+------+------+\n3 rows in set (0.00 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Definition-Language/alter-table/#constraints","title":"Constraints","text":"<ol> <li>The clauses: <code>CHANGE [COLUMN]</code>, <code>MODIFY [COLUMN]</code>, <code>RENAME COLUMN</code>, <code>ADD [CONSTRAINT [symbol]] PRIMARY KEY</code>, <code>DROP PRIMARY KEY</code>, and <code>ALTER COLUMN ORDER BY</code> can be freely combined in <code>ALTER TABLE</code>, these are not supported to be used with other clauses for the time being.</li> <li>Temporary tables currently do not support using <code>ALTER TABLE</code> to modify the table structure.</li> <li>Tables created using <code>CREATE TABLE ... CLUSTER BY...</code> do not allow modifications to the table structure using <code>ALTER TABLE</code>.</li> </ol>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Definition-Language/alter-view/","title":"ALTER VIEW","text":""},{"location":"MatrixOne/Reference/SQL-Reference/Data-Definition-Language/alter-view/#description","title":"Description","text":"<p><code>ALTER VIEW</code> is used to alter an existing view.</p> <p>If any of the views named in the syntax parameter list do not exist, the statement reports an error and cannot change those views that do not exist.</p>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Definition-Language/alter-view/#syntax","title":"Syntax","text":"<pre><code>&gt; ALTER VIEW view_name [(column_list)]\n  AS select_statement\n  [WITH [CASCADED | LOCAL] CHECK OPTION]\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Definition-Language/alter-view/#examples","title":"Examples","text":"<pre><code>drop table if exists t1;\ncreate table t1 (a int);\ninsert into t1 values(1),(2),(3),(4);\ncreate view v5 as select * from t1;\n\nmysql&gt; select * from v5;\n+------+\n| a    |\n+------+\n|    1 |\n|    2 |\n|    3 |\n|    4 |\n+------+\n4 rows in set (0.01 sec)\n\nalter view v5 as select * from t1 where a=1;\n\nmysql&gt; select * from v5;\n+------+\n| a    |\n+------+\n|    1 |\n+------+\n1 row in set (0.01 sec)\n\nalter view v5 as select * from t1 where a &gt; 2;\n\nmysql&gt; select * from v5;\n+------+\n| a    |\n+------+\n|    3 |\n|    4 |\n+------+\n2 rows in set (0.00 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Definition-Language/create-cluster-table/","title":"CREATE CLUSTER TABLE","text":""},{"location":"MatrixOne/Reference/SQL-Reference/Data-Definition-Language/create-cluster-table/#grammar-description","title":"Grammar description","text":"<p>A cluster table is a table created by the system library <code>mo_catalog</code> under a system tenant that takes effect simultaneously under other tenants. DDL and DML operations can be performed on the table under the system tenant, other tenants can only query or create views based on the table.</p> <p>This document describes how to set up cluster tables in a MatrixOne database.</p>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Definition-Language/create-cluster-table/#grammar-structure","title":"Grammar structure","text":"<pre><code>&gt; CREATE CLUSTER TABLE [IF NOT EXISTS] tbl_name\n    (create_definition,...)\n    [table_options]\n    [partition_options]\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Definition-Language/create-cluster-table/#instructions-for-use","title":"Instructions for use","text":"<ul> <li> <p>Creating cluster tables is limited to the sys tenant administrator role.</p> </li> <li> <p>The cluster table for the sys tenant contains all the data and may only see some data under other tenants.</p> </li> <li> <p>In the cluster table, the <code>account_id</code> field is automatically generated and represents the id of the visible tenant who specified the data when inserting or LOADING DATA. Only one visible tenant can be selected per data. If you want multiple tenants to be able to view the data, you need to insert the specified different tenant id multiple times, and the field data is not returned by queries in other tenants.</p> </li> <li> <p>Cluster tables cannot be exterior or temporary and have exactly the same table structure under all tenants.</p> </li> </ul>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Definition-Language/create-cluster-table/#examples","title":"Examples","text":"<pre><code>--Create two tenants, test1 and test2\nmysql&gt; create account test1 admin_name = 'root' identified by '111' open comment 'tenant_test';\nQuery OK, 0 rows affected (0.44 sec)\n\nmysql&gt; create account test2 admin_name = 'root' identified by '111' open comment 'tenant_test';\nQuery OK, 0 rows affected (0.51 sec)\n\n--Create a cluster table under the sys tenant\nmysql&gt; use mo_catalog;\nDatabase changed\nmysql&gt; drop table if exists t1;\nQuery OK, 0 rows affected (0.00 sec)\n\nmysql&gt; create cluster table t1(a int);\nQuery OK, 0 rows affected (0.01 sec)\n\n--View tenant id\nmysql&gt; select * from mo_account;\n+------------+--------------+--------+---------------------+----------------+---------+----------------+\n| account_id | account_name | status | created_time        | comments       | version | suspended_time |\n+------------+--------------+--------+---------------------+----------------+---------+----------------+\n|          0 | sys          | open   | 2024-01-11 08:56:57 | system account |       1 | NULL           |\n|          6 | test1        | open   | 2024-01-15 03:15:40 | tenant_test    |       7 | NULL           |\n|          7 | test2        | open   | 2024-01-15 03:15:48 | tenant_test    |       8 | NULL           |\n+------------+--------------+--------+---------------------+----------------+---------+----------------+\n3 rows in set (0.01 sec)\n\n--Inserting data into clustered table t1 is only visible to test1 tenants\nmysql&gt; insert into t1 values(1,6),(2,6),(3,6);\nQuery OK, 3 rows affected (0.01 sec)\n\n--Looking at the data for t1 in the sys tenant, you can see all the data including the `account_id` field\nmysql&gt; select * from t1;\n+------+------------+\n| a    | account_id |\n+------+------------+\n|    1 |          6 |\n|    2 |          6 |\n|    3 |          6 |\n+------+------------+\n3 rows in set (0.00 sec)\n\n--Looking at the data for t1 in the test1 tenant, you can see data that is not in the `account_id` field\nmysql&gt; select * from t1;\n+------+\n| a    |\n+------+\n|    1 |\n|    2 |\n|    3 |\n+------+\n3 rows in set (0.01 sec)\n\n--Viewing the data for t1 in the test2 tenant will not show any data\nmysql&gt; select * from t1;\nEmpty set (0.01 sec)\n\n--Creating a t1-based view in a test1 tenant\nmysql&gt; create view t1_view as select * from mo_catalog.t1;\nQuery OK, 0 rows affected (0.01 sec)\n\nmysql&gt; select * from t1_view;\n+------+\n| a    |\n+------+\n|    1 |\n|    2 |\n|    3 |\n+------+\n3 rows in set (0.00 sec)\n\n--Create a t1-based view in the test2 tenant\nmysql&gt; create view t1_view as select * from mo_catalog.t1;\nQuery OK, 0 rows affected (0.01 sec)\n\nmysql&gt; select * from t1_view;\nEmpty set (0.01 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Definition-Language/create-database/","title":"CREATE DATABASE","text":""},{"location":"MatrixOne/Reference/SQL-Reference/Data-Definition-Language/create-database/#description","title":"Description","text":"<p>Create a database.</p>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Definition-Language/create-database/#syntax","title":"Syntax","text":"<pre><code>&gt; CREATE DATABASE [IF NOT EXISTS] &lt;database_name&gt; [create_option] ...\n\n&gt; create_option: [DEFAULT] {\n    CHARACTER SET [=] charset_name\n  | COLLATE [=] collation_name\n  | ENCRYPTION [=] {'Y' | 'N'}\n}\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Definition-Language/create-database/#examples","title":"Examples","text":"<pre><code>CREATE DATABASE IF NOT EXISTS test01;\n</code></pre> <p>Expected Result</p> <p>You can use <code>SHOW DATABASES</code> to check if the databases have been created.</p> <pre><code>mysql&gt; show databases;\n+--------------------+\n| Database           |\n+--------------------+\n| mo_task            |\n| information_schema |\n| mysql              |\n| system_metrics     |\n| system             |\n| test01             |\n| mo_catalog         |\n+--------------------+\n10 rows in set (0.01 sec)\n</code></pre> <p>You can see that the new database test01 has been created in addition to the six system databases.</p>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Definition-Language/create-database/#constraints","title":"Constraints","text":"<ul> <li>Only <code>UTF-8</code> CHARACTER SET is supported for now.</li> <li><code>CHARACTER SET</code>, <code>COLLATE</code>, <code>ENCRYPTION</code> can be used but don't work.</li> </ul>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Definition-Language/create-dynamic-table/","title":"CREATE DYNAMIC TABLE","text":""},{"location":"MatrixOne/Reference/SQL-Reference/Data-Definition-Language/create-dynamic-table/#grammar-description","title":"Grammar description","text":"<p><code>CREATE DYNAMIC TABLE</code> Adds a new dynamic table to the current database.</p>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Definition-Language/create-dynamic-table/#grammar-structure","title":"Grammar structure","text":"<pre><code>CREATE DYNAMIC TABLE [IF NOT EXISTS] table_name AS SELECT ... from stream_name ;\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Definition-Language/create-dynamic-table/#interpretation-of-grammar","title":"Interpretation of grammar","text":"<ul> <li>table_name: Dynamic table name. The dynamic table name must be different from any existing dynamic table name in the current database.</li> <li>stream_name: The name of the SOURCE that has been created.</li> </ul>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Definition-Language/create-dynamic-table/#examples","title":"Examples","text":"<pre><code>create dynamic table dt_test as select * from stream_test; Query OK, 0 rows affected (0.01 sec) </code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Definition-Language/create-dynamic-table/#limitations","title":"Limitations","text":"<p>The use of aggregate functions, mathematical functions, string functions, date functions, and <code>limit, offset</code>, <code>from subquery</code>, <code>not in/in subquery</code>, <code>group by</code>, <code>order by``, having</code> statements is not yet supported when creating dynamic tables.</p> <p>Joins to two SOURCE tables, can join SOURCE tables, and normal data tables are not yet supported when creating dynamic tables.</p>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Definition-Language/create-external-table/","title":"CREATE EXTERNAL TABLE","text":""},{"location":"MatrixOne/Reference/SQL-Reference/Data-Definition-Language/create-external-table/#description","title":"Description","text":"<p>External table access data in external sources as if it were in a table in the database.</p> <p>You can connect to the database and create metadata for the external table using DDL.</p> <p>The DDL for an external table consists of two parts: one part that describes the MatrixOne column types, and another part (the access parameters) that describes the mapping of the external data to the MatrixOne data columns.</p> <p>This document describe how to create a new tables outside of the MatrixOne databases.</p>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Definition-Language/create-external-table/#syntax","title":"Syntax","text":""},{"location":"MatrixOne/Reference/SQL-Reference/Data-Definition-Language/create-external-table/#common-syntax","title":"Common syntax","text":"<pre><code>&gt; CREATE EXTERNAL TABLE [IF NOT EXISTS] [db.]table_name;\n(\n    name1 type1,\n    name2 type2,\n    ...\n)\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Definition-Language/create-external-table/#syntax_1","title":"Syntax","text":"<pre><code>## Create a external table for a local file (specify the compression format)\ncreate external table t(...) localfile{\"filepath\"='&lt;string&gt;', \"compression\"='&lt;string&gt;'} FIELDS TERMINATED BY ',' ENCLOSED BY '\\\"' LINES TERMINATED BY '\\n';\n\n## Create a external table for a local file (if no compression format is specified, the format is auto, and the file format is automatically checked)\ncreate external table t(...) localfile{\"filepath\"='&lt;string&gt;'} FIELDS TERMINATED BY ',' ENCLOSED BY '\\\"' LINES TERMINATED BY '\\n';\n\n\n## Create a external table for an S3 file (specify the compression format)\ncreate external table t(...) URL s3option{\"endpoint\"='&lt;string&gt;', \"access_key_id\"='&lt;string&gt;', \"secret_access_key\"='&lt;string&gt;', \"bucket\"='&lt;string&gt;', \"filepath\"='&lt;string&gt;', \"region\"='&lt;string&gt;', \"compression\"='&lt;string&gt;'} FIELDS TERMINATED BY ',' ENCLOSED BY '\\\"' LINES TERMINATED BY '\\n';\n\n## Create a external table for an S3 file (if no compression format is specified, the format is auto, and the file format is automatically checked)\ncreate external table t(...) URL s3option{\"endpoint\"='&lt;string&gt;', \"access_key_id\"='&lt;string&gt;', \"secret_access_key\"='&lt;string&gt;', \"bucket\"='&lt;string&gt;', \"filepath\"='&lt;string&gt;', \"region\"='&lt;string&gt;'} FIELDS TERMINATED BY ',' ENCLOSED BY '\\\"' LINES TERMINATED BY '\\n';\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Definition-Language/create-external-table/#explanations","title":"Explanations","text":""},{"location":"MatrixOne/Reference/SQL-Reference/Data-Definition-Language/create-external-table/#parameter-description","title":"Parameter Description","text":"Parameter Description endpoint A endpoint is a URL that can conncect to AWS Web service. For example: s3.us-west-2.amazonaws.com access_key_id S3 Access key ID secret_access_key S3 Secret access key bucket S3 Bucket to access filepath relative file path region AWS S3 Area compression Compressed format of S3 files. If empty, it indicates uncompressed files. Supported fields or Compressed format are \"auto\", \"none\", \"gzip\", \"bzip2\", \"flate\", \"zlib\", and \"lz4\". auto Compressed format: indicates that the file name extension automatically checks the compressed format of a file none Compressed format: indicates the uncompressed format, and the rest indicates the compressed format of the file"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Definition-Language/create-external-table/#example","title":"Example","text":"<pre><code>create external table ex_table_cpk(clo1 tinyint,clo2 smallint,clo3 int,clo4 bigint,clo5 tinyint unsigned,clo6 smallint unsigned,clo7 int unsigned,clo8 bigint unsigned,col9 float,col10 double,col11 varchar(255),col12 Date,col13 DateTime,col14 timestamp,col15 bool,col16 decimal(5,2),col17 text,col18 varchar(255),col19 varchar(255),col20 varchar(255))infile{\"filepath\"='$resources/external_table_file/cpk_table_1.csv'};\n</code></pre> <p>For more information on creating an external table with an <code>s3option</code> mapping to an S3 file, see Import the data from S3 Compatible object storage.</p>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Definition-Language/create-external-table/#constraints","title":"Constraints","text":"<p>MatrixOne only supports <code>select</code> on EXTERNAL TABLE, <code>delete</code>, <code>insert</code>, and <code>update</code> is not supported.</p>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Definition-Language/create-function-python/","title":"CREATE FUNCTION...LANGUAGE PYTHON AS","text":""},{"location":"MatrixOne/Reference/SQL-Reference/Data-Definition-Language/create-function-python/#grammar-description","title":"Grammar description","text":"<p><code>CREATE FUNCTION...LANGUAGE PYTHON AS</code> is used to create user-defined Python functions. Users use self-defined functions to meet customization needs and simplify query writing. UDFs can also be created by importing external Python files or external whl packages.</p> <p>In some scenarios, we'd expect a python function to receive multiple tuples at once to run more efficiently, and MatrixOne provides vector options for functions to handle this.</p> <p>MatrixOne Python UDF does not currently support overloading, and function names are required to be unique within a matrixone cluster.</p>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Definition-Language/create-function-python/#grammar-structure","title":"Grammar structure","text":"<pre><code>&gt; CREATE [ OR REPLACE ] FUNCTION &lt;name&gt; (\n[ &lt;arg_name&gt; &lt;arg_data_type&gt; ] [ , ... ] )\nRETURNS &lt;result_data_type&gt;  LANGUAGE PYTHON AS\n$$\n&lt;function_body&gt;\n[ add.vector = True ]\n$$\nHANDLER = '&lt;function_name&gt;'\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Definition-Language/create-function-python/#structural-description","title":"Structural description","text":"<ul> <li> <p><code>&lt;name&gt;</code>: Specifies the name of the custom function.</p> </li> <li> <p><code>&lt;arg_name&gt; &lt;arg_data_type&gt;</code>: Used to specify parameters for custom functions, where only the name and type are used.</p> </li> <li> <p><code>RETURNS &lt;result_data_type&gt;</code>: The data type used to declare the return value of a custom function.</p> </li> <li> <p><code>&lt;function_body&gt;</code>: The body portion of the custom function, which must contain a RETURN statement that specifies the return value of the custom function. <li> <p><code>[add.vector = True</code> ]: Flags that the python function receives multiple tuples at once.</p> </li> <li> <p><code>HANDLIER &lt;function_name&gt;:</code> Specifies the name of the python function called.</p> </li>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Definition-Language/create-function-python/#type-mapping","title":"Type Mapping","text":"<p>To ensure that the data types used in writing Python UDF are consistent with those supported by MatrixOne, you need to focus on the data type mapping relationship between the two, as follows:</p> MatrixOne  Type Python Type bool bool int8, int16, int32, int64, uint8, uint16, uint32, uint64 int float32, float64 float char, varchar, text, uuid str json str, int, float, list, dict time datetime.timedelta date datetime.date datetime, timestamp datetime.datetime decimal64, decimal128 decimal.Decimal binary, varbinary, blob bytes"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Definition-Language/create-function-python/#examples","title":"Examples","text":"<p>Example 1</p> <pre><code>--Sum of Two Numbers with python UDF\ncreate or replace function py_add(a int, b int) returns int language python as $$\ndef add(a, b):\nreturn a + b\n$$\nhandler 'add';\n\n--call function\nmysql&gt; select py_add(1,2);\n+--------------+\n| py_add(1, 2) |\n+--------------+\n|            3 |\n+--------------+\n1 row in set (0.01 sec)\n</code></pre> <p>Example 2</p> <pre><code>create or replace function py_helloworld() returns varchar(255) language python as $$\ndef helloworld():\nreturn \"helloworld!\"\n$$\nhandler 'helloworld';\n\nmysql&gt; select py_helloworld();\n+-----------------+\n| py_helloworld() |\n+-----------------+\n| helloworld!     |\n+-----------------+\n1 row in set (0.01 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Definition-Language/create-function-sql/","title":"CREATE FUNCTION...LANGUAGE SQL AS","text":""},{"location":"MatrixOne/Reference/SQL-Reference/Data-Definition-Language/create-function-sql/#grammar-description","title":"Grammar description","text":"<p><code>CREATE FUNCTION...LANGUAGE SQL AS</code> is used to create SQL UDFs.</p> <p>A SQL custom function is a user-written SQL function that performs custom actions based on specific needs. These functions can be used for tasks such as queries, data conversions, etc., making sQL code more modular and maintainable.</p> <p>MatrixOne SQL UDF does not currently support overloading and function names are required to be unique within a matrixone cluster.</p>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Definition-Language/create-function-sql/#grammar-structure","title":"Grammar structure","text":"<pre><code>&gt; CREATE [ OR REPLACE ] FUNCTION &lt;name&gt; (\n[ &lt;arg_name&gt; &lt;arg_data_type&gt; ] [ , ... ] )\nRETURNS &lt;result_data_type&gt;  LANGUAGE SQL AS 'function_body'\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Definition-Language/create-function-sql/#structural-description","title":"Structural description","text":"<ul> <li> <p><code>&lt;name&gt;</code>: Specifies the name of the custom function.</p> </li> <li> <p><code>&lt;arg_name&gt; &lt;arg_data_type&gt;</code>: Used to specify parameters for custom functions, where only the name and type are used.</p> </li> <li> <p><code>RETURNS &lt;result_data_type&gt;</code>: The data type used to declare the return value of a custom function, see Data Type Overview for the complete data type</p> </li> <li> <p><code>function_body</code>: The body part of the custom function. Users must use $1, $2, ... to reference parameters instead of the actual parameter name. The function body supports select statements and has unique return values. If the sql function body is not an expression and is a select statement on a table, the query should limit its results to 1 using limit 1 or an aggregate function without a group by clause.</p> </li> </ul>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Definition-Language/create-function-sql/#examples","title":"Examples","text":"<p>Example 1</p> <pre><code>--Creating an unparameterized sql custom function\n\nmysql&gt; create table t1(n1 int);\nQuery OK, 0 rows affected (0.02 sec)\n\nmysql&gt; insert into t1 values(1),(2),(3);\nQuery OK, 3 rows affected (0.01 sec)\n\nmysql&gt; CREATE FUNCTION t1_fun () RETURNS VARCHAR LANGUAGE SQL AS 'select n1 from t1 limit 1' ;\nQuery OK, 0 rows affected (0.01 sec)\n\nmysql&gt; select t1_fun();\n+----------+\n| t1_fun() |\n+----------+\n|        1 |\n+----------+\n1 row in set (0.01 sec)\n</code></pre> <p>Example 2</p> <pre><code>--Creating sql custom functions that return the sum of two arguments\nmysql&gt; CREATE FUNCTION twoadd (x int, y int) RETURNS int LANGUAGE SQL AS 'select $1 + $2' ;\nQuery OK, 0 rows affected (0.02 sec)\n\nmysql&gt; select twoadd(1,2);\n+--------------+\n| twoadd(1, 2) |\n+--------------+\n|            3 |\n+--------------+\n1 row in set (0.00 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Definition-Language/create-index-ivfflat/","title":"CREATE INDEX USING IVFFLAT","text":""},{"location":"MatrixOne/Reference/SQL-Reference/Data-Definition-Language/create-index-ivfflat/#syntax-description","title":"Syntax Description","text":"<p>Vector indexes can be used to speed up KNN (K-Nearest Neighbors) queries on tables containing vector columns. Matrixone currently supports IVFFLAT vector indexes with <code>l2_distance</code> metric.</p> <p>We can specify PROBE_LIMIT to determine the number of cluster centers to query. PROBE_LIMIT defaults to 1, that is, only 1 cluster center is scanned. But if you set it to a higher value, it scans for a larger number of cluster centers and vectors, which may degrade performance a little but increase accuracy. We can specify the appropriate number of probes to balance query speed and recall rate. The ideal values for PROBE_LIMIT are:</p> <ul> <li>If total rows &lt;1000000:PROBE_LIMIT=total rows/10</li> <li>If total rows &gt; 1000000:PROBE_LIMIT=sqrt (total rows)</li> </ul>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Definition-Language/create-index-ivfflat/#syntax-structure","title":"Syntax structure","text":"<pre><code>&gt; CREATE INDEX index_name\nUSING IVFFLAT\nON tbl_name (col,...)\nLISTS=lists \nOP_TYPE \"vector_l2_ops\"\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Definition-Language/create-index-ivfflat/#grammatical-interpretation","title":"Grammatical interpretation","text":"<ul> <li><code>index_name</code>: index name</li> <li><code>IVFFLAT</code>: vector index type, currently supports vector_l2_ops</li> <li><code>lists</code>: number of partitions required in index, must be greater than 0</li> <li><code>OP_TYPE</code>: distance measure to use</li> </ul> <p>NOTE:</p> <ul> <li>The ideal values for LISTS are:<ul> <li>If total rows &lt;1000000:lists=total rows/1000</li> <li>If total rows &gt; 1000000:lists=sqrt (total rows)</li> </ul> </li> <li>It is recommended that the index is not created until the data is populated. If a vector index is created on an empty table, all vector quantities will be mapped to a partition, and the amount of data continues to grow over time, causing the index to become larger and larger and query performance to degrade.</li> </ul>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Definition-Language/create-index-ivfflat/#examples","title":"Examples","text":"<pre><code>--The parameter experimental_ivf_index needs to be set to 1 (default 0) to use vector indexes.\nSET GLOBAL experimental_ivf_index = 1;\ndrop table if exists t1;\ncreate table t1(coordinate vecf32(2),class char);\n-- There are seven points, each representing its coordinates on the x and y axes, and each point's class is labeled A or B.\ninsert into t1 values(\"[2,4]\",\"A\"),(\"[3,5]\",\"A\"),(\"[5,7]\",\"B\"),(\"[7,9]\",\"B\"),(\"[4,6]\",\"A\"),(\"[6,8]\",\"B\"),(\"[8,10]\",\"B\");\n--Creating Vector Indexes\ncreate index idx_t1 using ivfflat on t1(coordinate)  lists=1 op_type \"vector_l2_ops\";\n\nmysql&gt; show create table t1;\n+-------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------+\n| Table | Create Table                                                                                                                                                           |\n+-------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------+\n| t1    | CREATE TABLE `t1` (\n`coordinate` VECF32(2) DEFAULT NULL,\n`class` CHAR(1) DEFAULT NULL,\nKEY `idx_t1` USING ivfflat (`coordinate`) lists = 1  op_type 'vector_l2_ops' ) |\n+-------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------+\n1 row in set (0.01 sec)\n\nmysql&gt; show index from t1;\n+-------+------------+----------+--------------+-------------+-----------+-------------+----------+--------+------+------------+---------+---------------+-----------------------------------------+---------+------------+\n| Table | Non_unique | Key_name | Seq_in_index | Column_name | Collation | Cardinality | Sub_part | Packed | Null | Index_type | Comment | Index_comment | Index_params                            | Visible | Expression |\n+-------+------------+----------+--------------+-------------+-----------+-------------+----------+--------+------+------------+---------+---------------+-----------------------------------------+---------+------------+\n| t1    |          1 | idx_t1   |            1 | coordinate  | A         |           0 | NULL     | NULL   | YES  | ivfflat    |         |               | {\"lists\":\"1\",\"op_type\":\"vector_l2_ops\"} | YES     | NULL       |\n+-------+------------+----------+--------------+-------------+-----------+-------------+----------+--------+------+------------+---------+---------------+-----------------------------------------+---------+------------+\n1 row in set (0.01 sec)\n\n--Set the number of clustering centers to scan\nSET @PROBE_LIMIT=1;\n--Now, we have a new point with coordinates (4, 4) and we want to use a KNN query to predict the class of this point.\nmysql&gt; select * from t1 order by l2_distance(coordinate,\"[4,4]\") asc;\n+------------+-------+\n| coordinate | class |\n+------------+-------+\n| [3, 5]     | A     |\n| [2, 4]     | A     |\n| [4, 6]     | A     |\n| [5, 7]     | B     |\n| [6, 8]     | B     |\n| [7, 9]     | B     |\n| [8, 10]    | B     |\n+------------+-------+\n7 rows in set (0.01 sec)\n\n--Based on the query results the category of this point can be predicted as A\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Definition-Language/create-index-ivfflat/#limitations","title":"Limitations","text":"<p>Only one vector index on one vector column is supported at a time. If you need to build a vector index on multiple vector columns, you can execute the create statement multiple times.</p>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Definition-Language/create-index/","title":"CREATE INDEX","text":""},{"location":"MatrixOne/Reference/SQL-Reference/Data-Definition-Language/create-index/#description","title":"Description","text":"<p>Create indexes on tables to query data more quickly and efficiently.</p> <p>You can't see the index; the index can only be used to speed up the search/query.</p> <p>Updating a table with an index takes longer than updating a table without an index because the index also needs to be updated. Therefore, the ideal approach is to create indexes only on frequently searched columns (and tables).</p> <p>There are two common types of indexes, namely:</p> <ul> <li>Primary Key: The primary key index, that is, the index identified on the primary key column.</li> <li>Secondary Index: the secondary index, that is, the index identified on the non-primary key.</li> </ul>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Definition-Language/create-index/#syntax","title":"Syntax","text":"<pre><code>&gt; CREATE [UNIQUE] INDEX index_name\nON tbl_name (key_part,...)\nCOMMENT 'string'\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Definition-Language/create-index/#explanations","title":"Explanations","text":""},{"location":"MatrixOne/Reference/SQL-Reference/Data-Definition-Language/create-index/#create-unique-index","title":"CREATE UNIQUE INDEX","text":"<p>Creates a unique index on a table. Duplicate values are not allowed.</p>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Definition-Language/create-index/#examples","title":"Examples","text":"<pre><code>drop table if exists t1;\ncreate table t1(id int PRIMARY KEY,name VARCHAR(255),age int);\ninsert into t1 values(1,\"Abby\", 24);\ninsert into t1 values(2,\"Bob\", 25);\ninsert into t1 values(3,\"Carol\", 23);\ninsert into t1 values(4,\"Dora\", 29);\ncreate unique index idx on t1(name);\nmysql&gt; select * from t1;\n+------+-------+------+\n| id   | name  | age  |\n+------+-------+------+\n|    1 | Abby  |   24 |\n|    2 | Bob   |   25 |\n|    3 | Carol |   23 |\n|    4 | Dora  |   29 |\n+------+-------+------+\n4 rows in set (0.00 sec)\n\nmysql&gt; show create table t1;\n+-------+--------------------------------------------------------------------------------------------------------------------------------------------------+\n| Table | Create Table                                                                                                                                     |\n+-------+--------------------------------------------------------------------------------------------------------------------------------------------------+\n| t1    | CREATE TABLE `t1` (\n`id` INT NOT NULL,\n`name` VARCHAR(255) DEFAULT NULL,\n`age` INT DEFAULT NULL,\nPRIMARY KEY (`id`),\nUNIQUE KEY `idx` (`name`)\n) |\n+-------+--------------------------------------------------------------------------------------------------------------------------------------------------+\n1 row in set (0.01 sec)\n\n\ncreate table t2 (\ncol1 bigint primary key,\ncol2 varchar(25),\ncol3 float,\ncol4 varchar(50)\n);\ncreate unique index idx on t2(col2) comment 'create varchar index';\ninsert into t2 values(1,\"Abby\", 24,'zbcvdf');\ninsert into t2 values(2,\"Bob\", 25,'zbcvdf');\ninsert into t2 values(3,\"Carol\", 23,'zbcvdf');\ninsert into t2 values(4,\"Dora\", 29,'zbcvdf');\nmysql&gt; select * from t2;\n+------+-------+------+--------+\n| col1 | col2  | col3 | col4   |\n+------+-------+------+--------+\n|    1 | Abby  |   24 | zbcvdf |\n|    2 | Bob   |   25 | zbcvdf |\n|    3 | Carol |   23 | zbcvdf |\n|    4 | Dora  |   29 | zbcvdf |\n+------+-------+------+--------+\n4 rows in set (0.00 sec)\nmysql&gt; show create table t2;\n+-------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+\n| Table | Create Table                                                                                                                                                                                                              |\n+-------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+\n| t2    | CREATE TABLE `t2` (\n`col1` BIGINT NOT NULL,\n`col2` VARCHAR(25) DEFAULT NULL,\n`col3` FLOAT DEFAULT NULL,\n`col4` VARCHAR(50) DEFAULT NULL,\nPRIMARY KEY (`col1`),\nUNIQUE KEY `idx` (`col2`) COMMENT `create varchar index`\n) |\n+-------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+\n1 row in set (0.01 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Definition-Language/create-publication/","title":"CREATE PUBLICATION","text":""},{"location":"MatrixOne/Reference/SQL-Reference/Data-Definition-Language/create-publication/#grammar-description","title":"Grammar description","text":"<p><code>CREATE PUBLICATION</code> Adds a new publication to the current database.</p>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Definition-Language/create-publication/#grammar-structure","title":"Grammar structure","text":"<pre><code>CREATE PUBLICATION pubname\n    DATABASE database_name ACCOUNT\n    [ { ALL\n    | account_name, [, ... ] }]\n    [ COMMENT 'string']\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Definition-Language/create-publication/#interpretation-of-grammar","title":"Interpretation of grammar","text":"<ul> <li>pubname: The publication name. The publication name must be different from the name of any existing publication in the current database.</li> <li>database_name: The name of a database that already exists under the current tenant.</li> <li>account_name: Gets the tenant name for this publication.</li> </ul>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Definition-Language/create-publication/#examples","title":"Examples","text":"<pre><code>create database t;\ncreate account acc0 admin_name 'root' identified by '111';\ncreate account acc1 admin_name 'root' identified by '111';\nmysql&gt; create publication pub1 database t account acc0,acc1;\nQuery OK, 0 rows affected (0.01 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Definition-Language/create-publication/#limitations","title":"Limitations","text":"<p>MatrxiOne currently only supports publishing one database data at a time.</p>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Definition-Language/create-sequence/","title":"CREATE SEQUENCE","text":""},{"location":"MatrixOne/Reference/SQL-Reference/Data-Definition-Language/create-sequence/#description","title":"Description","text":"<p>The <code>CREATE SEQUENCE</code> user creates a sequence object. A sequence is a unique database object that can automatically generate a unique sequence of numbers. Typically, sequences are used to automatically generate unique values for a table's primary key fields.</p> <p><code>CREATE SEQUENCE</code> is a command that creates an auto-increment number sequence to generate unique, continuous numeric values, usually used to create values for primary key columns or other columns requiring auto-increment numbers.</p>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Definition-Language/create-sequence/#syntax","title":"Syntax","text":"<pre><code>&gt; CREATE SEQUENCE [ IF NOT EXISTS ] SEQUENCE_NAME\n    [ AS data_type ]\n    [ INCREMENT [ BY ] increment ]\n    [ MINVALUE minvalue] [ MAXVALUE maxvalue]\n    [ START [ WITH ] start ] [ [ NO ] CYCLE ]\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Definition-Language/create-sequence/#explanations","title":"Explanations","text":""},{"location":"MatrixOne/Reference/SQL-Reference/Data-Definition-Language/create-sequence/#data_type","title":"data_type","text":"<p>The optional clause <code>AS data_type</code> specifies the data type of the sequence. Supported data types include <code>smallint [unsigned]</code>, <code>integer [unsigned]</code>, and <code>bigint [unsigned]</code>, with <code>bigint</code> being the default. The data type determines the default minimum and maximum values for the sequence.</p>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Definition-Language/create-sequence/#increment","title":"INCREMENT","text":"<p>The optional clause <code>INCREMENT [BY] increment</code> specifies the value to add to the current sequence value to create a new value. Positive values generate ascending sequences, and negative values generate descending sequences; the default value is 1.</p>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Definition-Language/create-sequence/#minvalue","title":"MINVALUE","text":"<p>The optional clause <code>MINVALUE minvalue</code> determines the minimum value that the sequence can generate. If this clause is not provided or <code>MINVALUE</code> is not specified, a default value will be used. The default value for an ascending sequence is <code>1</code>, and for a descending sequence it is the minimum value for the data type.</p>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Definition-Language/create-sequence/#maxvalue","title":"MAXVALUE","text":"<p>The optional clause <code>MAXVALUE maxvalue</code> determines the maximum value for the sequence. If this clause is not provided or <code>MAXVALUE</code> is not specified, a default value will be used. The default value for an ascending sequence is the maximum value for the data type, and for a descending sequence it is <code>-1</code>.</p>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Definition-Language/create-sequence/#start","title":"START","text":"<p>The optional clause <code>START [WITH] start</code> allows the sequence to start from any point. The default starting value is the minimum value for an ascending sequence and the maximum value for a descending sequence.</p>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Definition-Language/create-sequence/#cycle","title":"CYCLE","text":"<p>The <code>CYCLE</code> option allows the sequence to wrap around when it reaches the maximum or minimum value for an ascending or descending sequence, respectively. If the limit is reached, the next generated number will be the minimum or maximum value, respectively.</p>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Definition-Language/create-sequence/#operations","title":"Operations","text":"<p>The following functions are used to manipulate sequence values:</p>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Definition-Language/create-sequence/#nextvalsequence_name","title":"<code>NEXTVAL(sequence_name)</code>","text":"<p>Sets the current value to the next value in the sequence and returns it.</p>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Definition-Language/create-sequence/#currvalsequence_name","title":"<code>CURRVAL(sequence_name)</code>","text":"<p>Returns the current value in the sequence.</p>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Definition-Language/create-sequence/#setvalsequence_name-n-b","title":"<code>SETVAL(sequence_name, n [,b])</code>","text":"<p>Sets the current value in the sequence to n.</p> <ul> <li>If b is set to true, the next call to <code>NEXTVAL</code> will return <code>n</code>.</li> <li>If b is set to false, the next call to <code>NEXTVAL</code> will return <code>n+increment</code>.</li> </ul>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Definition-Language/create-sequence/#lastval","title":"<code>LASTVAL()</code>","text":"<p>Return the value of any sequence obtained by <code>NEXTVAL</code> in the current session; if the current value is set by <code>SETVAL</code> first, and then use <code>LASTVAL</code> to operate on the sequence, return <code>SETVAL</code> The current value of the setting. Since 'LASTVAL()' returns a 'NEXTVAL' value, 'LASTVAL()' can only be initialized by 'NEXTVAL'.</p> <p><code>LASTVAL()</code> is affected by <code>SETVAL(sequence_name, n [,true])</code> to change the current value, as shown in the following example:</p> <p>Suppose a sequence named seq_id was created with a starting value of 1, an increment of 1, and a maximum value of 1000:</p> <pre><code>CREATE SEQUENCE seq_id INCREMENT BY 1 MAXVALUE 1000 START with 1;\n</code></pre> <p>Then, the <code>NEXTVAL()</code> function can be used to get the next sequence value and automatically increment the sequence counter:</p> <pre><code>SELECT NEXTVAL('seq_id');\n</code></pre> <p>Next, the <code>LASTVAL()</code> function can be used to return the current value of the sequence:</p> <pre><code>SELECT LASTVAL();\n</code></pre> <p>Alternatively, the <code>SETVAL()</code> function can be used to set the current value to 30, with the optional <code>[,b]</code> parameter set to true:</p> <pre><code>SELECT SETVAL('seq_id', 30);\n</code></pre> <p>Afterward, the <code>NEXTVAL()</code> function can be used again to get the next sequence value:</p> <pre><code>SELECT NEXTVAL('seq_id');\n</code></pre> <p>This will return 31 because the current value has been set to 30, and the <code>NEXTVAL()</code> function will return the next sequence value 31.</p> <pre><code>SELECT LASTVAL();\n</code></pre> <p>Using <code>LASTVAL()</code> will return the value of the sequence that was retrieved with <code>NEXTVAL()</code> in the current session, which is 31 in this case.</p> <p>The above example shows that if the current value is set using <code>SETVAL(sequence_name, n [,true])</code> and then the next sequence value is retrieved using <code>NEXTVAL</code>, calling <code>LASTVAL()</code> again will return the value of the sequence retrieved with <code>NEXTVAL()</code>.</p>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Definition-Language/create-sequence/#using-sequence-in-a-table","title":"Using <code>SEQUENCE</code> in a table","text":"<p>To use a sequence in a table, the following steps need to be completed:</p> <ol> <li> <p>Create a sequence object: A sequence named \"my_sequence\" can be created using the following SQL command:</p> <pre><code>CREATE SEQUENCE my_sequence;\n</code></pre> <p>This will create a simple sequence object that will start at 1 and increment by 1.</p> </li> <li> <p>Apply a sequence to a field in a table: To apply a sequence to a field in a table, you need to specify a default value for the next value in the sequence in the table definition, as follows:</p> <pre><code>CREATE TABLE my_table (\nid INTEGER DEFAULT nextval('my_sequence'),\nname VARCHAR(50));\n</code></pre> <p>In the example above, the \"id\" field will automatically get the following unique value from the sequence as its default value.</p> </li> <li> <p>Insert data: After the table and sequence have been defined, you can use the <code>INSERT</code> statement to insert data into the table. When inserting a row of data, if no value is specified for the \"id\" field, MatrixOne will automatically get the following unique value from the sequence as its default value.</p> <p>For example, the following statement will insert a row into the \"my_table\" table and automatically assign a unique value to the \"id\" field:</p> <pre><code>INSERT INTO my_table (name) VALUES ('John');\nINSERT INTO my_table (name) VALUES ('Tom');\n</code></pre> </li> <li> <p>Using sequences makes it easy to automatically assign unique identifiers in the form, thus avoiding the possible errors of manually assigning identifiers. Use the following statement for query verification:</p> <pre><code>mysql&gt; select * from my_table;\n+------+------+\n| id   | name |\n+------+------+\n|    1 | John |\n|    2 | Tom  |\n+------+------+\n2 rows in set (0.01 sec)\n</code></pre> </li> </ol> <p>Note</p> <p>When using SEQUENCE in a table, the <code>auto_increment</code> and <code>sequence</code> cannot be used together; otherwise, an error will be reported.</p>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Definition-Language/create-sequence/#examples","title":"Examples","text":"<pre><code>-- Create a sequence named \"seq_id\" that starts from 1, increments by 1, and has a maximum value of 1000:\nCREATE SEQUENCE seq_id INCREMENT BY 1 MAXVALUE 1000 START with 1;\n-- After creating the sequence, the NEXTVAL function can be used to retrieve the next sequence value as shown below:\nmysql&gt; SELECT NEXTVAL('seq_id');\n+-----------------+\n| nextval(seq_id) |\n+-----------------+\n| 1               |\n+-----------------+\n1 row in set (0.02 sec)\n-- This command will return the next value in the sequence (e.g., 1) and automatically increment the counter of the sequence.\n\n-- The CURRVAL function returns the current value.\nmysql&gt; SELECT CURRVAL('seq_id');\n+-----------------+\n| currval(seq_id) |\n+-----------------+\n| 1               |\n+-----------------+\n1 row in set (0.01 sec)\n\n-- Returns the most recent value retrieved by NEXTVAL in the current session for any sequence.\nmysql&gt; SELECT LASTVAL();\n+-----------+\n| lastval() |\n+-----------+\n| 1         |\n+-----------+\n1 row in set (0.00 sec)\n\n-- Set the current value to 30.\nmysql&gt; SELECT SETVAL('seq_id', 30);\n+--------------------+\n| setval(seq_id, 30) |\n+--------------------+\n| 30                 |\n+--------------------+\n1 row in set (0.02 sec)\n\n-- The NEXTVAL function retrieves the next sequence value.\nmysql&gt; SELECT NEXTVAL('seq_id');\n+-----------------+\n| nextval(seq_id) |\n+-----------------+\n| 31              |\n+-----------------+\n1 row in set (0.00 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Definition-Language/create-snapshot/","title":"CREATE SNAPSHOT","text":""},{"location":"MatrixOne/Reference/SQL-Reference/Data-Definition-Language/create-snapshot/#syntax-description","title":"Syntax Description","text":"<p>The <code>CREATE SNAPSHOT</code> command is used to create a snapshot. System tenants can create snapshots for themselves or for regular tenants, but regular tenants can only create snapshots for themselves. Snapshots created by a tenant are visible only to this tenant.</p>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Definition-Language/create-snapshot/#syntax-structure","title":"Syntax structure","text":"<pre><code>&gt; CREATE SNAPSHOT snapshot_name FOR ACCOUNT account_name\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Definition-Language/create-snapshot/#examples","title":"Examples","text":"<pre><code>--Execute under system tenant sys\ncreate snapshot sp1 for account sys;\ncreate snapshot sp2 for account acc1;\n\nmysql&gt; show snapshots;\n+---------------+----------------------------+----------------+--------------+---------------+------------+\n| SNAPSHOT_NAME | TIMESTAMP                  | SNAPSHOT_LEVEL | ACCOUNT_NAME | DATABASE_NAME | TABLE_NAME |\n+---------------+----------------------------+----------------+--------------+---------------+------------+\n| sp2           | 2024-05-10 09:49:08.925908 | account        | acc1         |               |            |\n| sp1           | 2024-05-10 09:48:50.271707 | account        | sys          |               |            |\n+---------------+----------------------------+----------------+--------------+---------------+------------+\n2 rows in set (0.00 sec)\n\n--Executed under tenant acc1\nmysql&gt; create snapshot sp3 for account acc2;--Regular tenants can only create snapshots for themselves\nERROR 20101 (HY000): internal error: only sys tenant can create tenant level snapshot for other tenant\n\ncreate snapshot sp3 for account acc1;\n\nmysql&gt; show snapshots;\n+---------------+----------------------------+----------------+--------------+---------------+------------+\n| SNAPSHOT_NAME | TIMESTAMP                  | SNAPSHOT_LEVEL | ACCOUNT_NAME | DATABASE_NAME | TABLE_NAME |\n+---------------+----------------------------+----------------+--------------+---------------+------------+\n| sp3           | 2024-05-10 09:53:09.948762 | account        | acc1         |               |            |\n+---------------+----------------------------+----------------+--------------+---------------+------------+\n1 row in set (0.00 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Definition-Language/create-snapshot/#limitations","title":"Limitations","text":"<ul> <li>Currently only tenant-level snapshots are supported, not cluster-level, database-level, and table-level snapshots.</li> </ul>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Definition-Language/create-source/","title":"CREATE SOURCE","text":""},{"location":"MatrixOne/Reference/SQL-Reference/Data-Definition-Language/create-source/#grammar-description","title":"Grammar description","text":"<p><code>CREATE SOURCE</code> Creates a connection to streamed data and adds a new SOURCE table to the current database.</p>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Definition-Language/create-source/#grammar-structure","title":"Grammar structure","text":"<pre><code>CREATE [OR REPLACE] SOURCE [IF NOT EXISTS] stream_name ( { column_name data_type [KEY | HEADERS | HEADER(key)] } [, ...] )\nWITH ( property_name = expression [, ...]);\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Definition-Language/create-source/#interpretation-of-grammar","title":"Interpretation of grammar","text":"<ul> <li>stream_name: SOURCE Name. The SOURCE name must be different from any existing SOURCE name in the current database.</li> <li>column_name: Streaming data maps to column names in the SOURCE table.</li> <li>data_type: column_name corresponds to the type of field in the data table.</li> <li>property_name = expression: For specific configuration item names for streaming data mappings and corresponding values, the configurable items are as follows:</li> </ul> property_name expression Description \"type\" Only 'kafka' is supported: Currently, only kafka is supported as an accepted source. \"topic\" The corresponding topic in the kafka data source \"partion\" The corresponding partion in the kafka data source \"value\" Only 'json' is supported: Currently, only json is supported as an accepted data format. \"bootstrap.servers\" The IP:PORT of the kafka server. \"sasl.username\" Specify the SASL (Simple Authentication and Security Layer) username to use when connecting to Kafka. \"sasl.password\" Used in conjunction with sasl.username, this parameter provides the corresponding password \"sasl.mechanisms\" SASL mechanism for authentication between client and server \"security.protocol\" Specifies the security protocol to use when communicating with the Kafka server"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Definition-Language/create-source/#examples","title":"Examples","text":"<pre><code>create source stream_test(c1 char(25),c2 varchar(500),c3 text,c4 tinytext,c5 mediumtext,c6 longtext )with(\n\"type\"='kafka',\n\"topic\"= 'test',\n\"partition\" = '0',\n\"value\"= 'json',\n\"bootstrap.servers\"='127.0.0.1:9092'   )\nQuery OK, 0 rows affected (0.01 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Definition-Language/create-source/#limitations","title":"Limitations","text":"<p>drop and alter are not currently supported in the SOURCE table.</p> <p>Only join kafka is currently supported when creating a SOURCE table, and only transport data in json format is supported.</p>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Definition-Language/create-stage/","title":"CREATE STAGE","text":""},{"location":"MatrixOne/Reference/SQL-Reference/Data-Definition-Language/create-stage/#description","title":"Description","text":"<p>The <code>CREATE STAGE</code> command is used in the MatrixOne database to create a named internal or external data stage for data export. By creating a data stage and exporting data to it, you can download data files to your local system or store them in cloud storage services.</p> <ul> <li> <p>Internal Stage: Internal stages store data files within the MatrixOne system. Internal stages can be either permanent or temporary.</p> </li> <li> <p>External Stage: External stages reference data files stored outside the MatrixOne environment. Currently, the following cloud storage services are supported:</p> <ul> <li>Amazon S3 buckets</li> <li>Aliyun buckets</li> </ul> </li> </ul> <p>The storage location can be private/protected or public\u2014however, data held in archival cloud storage classes that require restoration before retrieval cannot be accessed.</p> <p>An internal or external stage can include a directory table. Directory tables maintain a catalog of staged file directories in cloud storage.</p> <ul> <li> <p>Configure a specified path to control the write permissions for user <code>SELECT INTO</code> operations. After creation, users can only write to the set <code>STAGE</code> path.</p> </li> <li> <p>If no <code>STAGE</code> is created or all <code>STAGE</code> instances are <code>DISABLED</code>, users can write to any path permitted by the operating system or object storage permissions.</p> </li> <li> <p>If not using a <code>STAGE</code>, users must forcefully include <code>credential</code> information during <code>SELECT INTO</code> operations.</p> </li> </ul> <p>Note</p> <ol> <li>Cluster administrators (i.e., root users) and tenant administrators can create data stages.</li> <li>Once created, data tables can only be imported to the paths specified in the STAGE.</li> </ol>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Definition-Language/create-stage/#syntax","title":"Syntax","text":"<pre><code>&gt; CREATE STAGE [ IF NOT EXISTS ] { stage_name }\n   { StageParams }\u0005\n   [ directoryTableParams ]\n   [ COMMENT = '&lt;string_literal&gt;' ]\n\nStageParams (for Amazon S3) :\nURL =  \"endpoint\"='&lt;string&gt;' CREDENTIALS = {\"access_key_id\"='&lt;string&gt;', \"secret_access_key\"='&lt;string&gt;'}\n\nStageParams (for Aliyun OSS) :\nURL =  \"endpoint\"='&lt;string&gt;' CREDENTIALS = {\"access_key_id\"='&lt;string&gt;', \"secret_access_key\"='&lt;string&gt;'}\n\nStageParams (for File System) :\nURL= 'filepath'\n\ndirectoryTableParams :\nENABLE = { TRUE | FALSE }\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Definition-Language/create-stage/#explanations","title":"Explanations","text":"<ul> <li> <p><code>IF NOT EXISTS</code>: An optional parameter used to check whether a stage with the same name already exists when creating a stage, avoiding duplicate creations.</p> </li> <li> <p><code>stage_name</code>: The name of the stage to be created.</p> </li> <li> <p><code>StageParams</code>: This parameter group is used to specify the stage's configuration parameters.</p> <ul> <li> <p><code>endpoint</code>: The connection URL for the stage, indicating the location of the object storage service. This URL's content may vary for object storage services like Amazon S3, Aliyun OSS, or a file system. For example s3.us-west-2.amazonaws.com</p> </li> <li> <p><code>CREDENTIALS</code>: This JSON object contains the credentials required to connect to the object storage service, such as <code>access_key_id</code>, <code>secret_access_key</code>, etc.</p> </li> </ul> </li> <li> <p><code>directoryTableParams</code>: This parameter group is used to specify the configuration of a directory table associated with the stage.</p> <ul> <li><code>ENABLE</code>: Indicates whether the directory table is enabled, with values <code>TRUE</code> or <code>FALSE</code> values.</li> </ul> </li> </ul>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Definition-Language/create-stage/#examples","title":"Examples","text":"<pre><code>CREATE TABLE `user` (`id` int(11) ,`user_name` varchar(255) ,`sex` varchar(255));\nINSERT INTO user(id,user_name,sex) values('1', 'weder', 'man'), ('2', 'tom', 'man'), ('3', 'wederTom', 'man');\n\n-- Create internal data stage\nmysql&gt; CREATE STAGE stage1 URL='/tmp' ENABLE = TRUE;\n\n-- Export data from the table to data stage\nmysql&gt; SELECT * FROM user INTO OUTFILE 'stage1:/user.csv';\n-- You can see your exported table in your local directory\n\n-- After setting the data stage, the data table can only be exported to the specified path, and an error will be reported when exporting to other paths\nmysql&gt; SELECT * FROM user INTO OUTFILE '~/tmp/csv2/user.txt';\nERROR 20101 (HY000): internal error: stage exists, please try to check and use a stage instead\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Definition-Language/create-subscription/","title":"CREATE...FROM...PUBLICATION...","text":""},{"location":"MatrixOne/Reference/SQL-Reference/Data-Definition-Language/create-subscription/#grammar-description","title":"Grammar description","text":"<p><code>CREATE...FROM...PUBLICATION...</code> is a subscription by a subscriber to a publication created by the publisher to get the publisher's shared data.</p>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Definition-Language/create-subscription/#grammar-structure","title":"Grammar structure","text":"<pre><code>CREATE DATABASE database_name\nFROM account_name\nPUBLICATION pubname;\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Definition-Language/create-subscription/#interpretation-of-grammar","title":"Interpretation of grammar","text":"<ul> <li>database_name: The name of the database created by the subscriber.</li> <li>pubname: The published name of the publisher.</li> <li>account_name: Gets the tenant name for this publication.</li> </ul>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Definition-Language/create-subscription/#examples","title":"Examples","text":"<pre><code>-- Suppose the system administrator creates a tenant, acc1, as a subscriber.\ncreate account acc1 admin_name 'root' identified by '111';\n\n-- Assuming session 1 is the publisher, the publisher first publishes a database to the tenant\ncreate database sys_db_1;\nuse sys_db_1;\ncreate table sys_tbl_1(a int primary key );\ninsert into sys_tbl_1 values(1),(2),(3);\ncreate view v1 as (select * from sys_tbl_1);\ncreate publication sys_pub_1 database sys_db_1;\nmysql&gt; show publications;\n+-------------+----------+---------------------+-------------+-------------+----------+\n| publication | database | create_time         | update_time | sub_account | comments |\n+-------------+----------+---------------------+-------------+-------------+----------+\n| sys_pub_1   | sys_db_1 | 2024-04-24 11:54:36 | NULL        | *           |          |\n+-------------+----------+---------------------+-------------+-------------+----------+\n1 row in set (0.01 sec)\n\n-- A new session is opened, assuming that session 2 is a subscriber who subscribes to the published database\nmysql -h 127.0.0.1 -P 6001 -u acc1:root -p  --Login to Tenant Account\n\ncreate database sub1 from sys publication sys_pub_1;\nmysql&gt; show databases;\n+--------------------+\n| Database           |\n+--------------------+\n| information_schema |\n| mo_catalog         |\n| mysql              |\n| sub1               |\n| system             |\n| system_metrics     |\n+--------------------+\n6 rows in set (0.01 sec)\n\nmysql&gt; show subscriptions;\n+-----------+-------------+--------------+---------------------+----------+---------------------+\n| pub_name  | pub_account | pub_database | pub_time            | sub_name | sub_time            |\n+-----------+-------------+--------------+---------------------+----------+---------------------+\n| sys_pub_1 | sys         | sys_db_1     | 2024-04-24 11:54:36 | sub1     | 2024-04-24 11:56:05 |\n+-----------+-------------+--------------+---------------------+----------+---------------------+\n1 row in set (0.01 sec)\n\nmysql&gt; use sub1;\nReading table information for completion of table and column names\nYou can turn off this feature to get a quicker startup with -A\n\nDatabase changed\nmysql&gt; show tables;\n+----------------+\n| Tables_in_sub1 |\n+----------------+\n| sys_tbl_1      |\n| v1             |\n+----------------+\n2 rows in set (0.01 sec)\n\nmysql&gt; desc sys_tbl_1;\n+-------+---------+------+------+---------+-------+---------+\n| Field | Type    | Null | Key  | Default | Extra | Comment |\n+-------+---------+------+------+---------+-------+---------+\n| a     | INT(32) | NO   | PRI  | NULL    |       |         |\n+-------+---------+------+------+---------+-------+---------+\n1 row in set (0.01 sec)\n\nmysql&gt; select * from sys_tbl_1 order by a;\n+------+\n| a    |\n+------+\n|    1 |\n|    2 |\n|    3 |\n+------+\n3 rows in set (0.01 sec)\n-- Subscription Success\n</code></pre> <p>Note</p> <p>If you need to unsubscribe, you can simply delete the subscribed database name and use <code>DROP DATABASE</code>.</p>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Definition-Language/create-table-as-select/","title":"CREATE TABLE AS SELECT","text":""},{"location":"MatrixOne/Reference/SQL-Reference/Data-Definition-Language/create-table-as-select/#syntax-description","title":"Syntax Description","text":"<p>The <code>CREATE TABLE AS SELECT</code> command creates a new table by copying column definitions and column data from an existing table specified in the <code>SELECT</code> query. However, it does not copy constraints, indexes, views, or other non-data attributes of the original table.</p>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Definition-Language/create-table-as-select/#syntax-structure","title":"Syntax structure","text":"<pre><code>&gt; CREATE [TEMPORARY] TABLE [ IF NOT EXISTS ] table_name\n[ (column_name [, ...] ) ] AS {query}\n\nQuery can be any select statement in MO syntax.\n\nSELECT\n[ALL | DISTINCT ]\nselect_expr [, select_expr] [[AS] alias] ...\n[INTO variable [, ...]]\n[FROM table_references\n[WHERE where_condition]\n[GROUP BY {col_name | expr | position}\n[ASC | DESC]]\n[HAVING where_condition]\n[ORDER BY {col_name | expr | position}\n[ASC | DESC]] [ NULLS { FIRST | LAST } ]\n[LIMIT {[offset,] row_count | row_count OFFSET offset}]\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Definition-Language/create-table-as-select/#grammatical-interpretation","title":"Grammatical interpretation","text":"<ul> <li> <p>ALL: Default option to return all matching rows, including duplicate rows.</p> </li> <li> <p>DISTINCT: Indicates that only unique rows are returned, i.e. duplicate rows are removed.</p> </li> <li> <p>select_expr: Indicates the column or expression to select.</p> </li> <li> <p>AS alias: Specifies an alias for the selected column or expression.</p> </li> <li> <p>[INTO variable[, ...]: Used to store query results in a variable instead of returning them to the client.</p> </li> <li> <p>[FROM table_references]: Specifies which table or tables to retrieve data from. table_references can be a table name or a complex expression (such as a join) with multiple tables.</p> </li> <li> <p>[WHERE where_condition]: Used to filter the result set to return only rows that satisfy the where_condition condition.</p> </li> <li> <p>[GROUP BY {col_name | expr | position} [ASC | DESC]]: Used to group result sets by one or more columns or expressions; ASC and DESC are used to specify how rows within a group are sorted.</p> </li> <li> <p>[HAVING where_condition]: Filter groups after they are grouped. Usually used with GROUP BY to filter out groups that do not meet the criteria.</p> </li> <li> <p>[ORDER BY {col_name | expr | position} [ASC | DESC] [NULLS {FIRST | LAST}]: Used to sort result sets; ASC and DESC are used to specify sorting methods.</p> </li> <li> <p>[NULLS {FIRST | LAST}]: Used to specify how to handle the position of NULL values in the sort.</p> </li> <li> <p>[LIMIT {[offset,] row_count | row_count OFFSET offset}]: Used to limit the number of rows returned. offset specifies which row of the result set to return from, with 0 being the first row. row_count Specifies the number of rows returned.</p> </li> </ul>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Definition-Language/create-table-as-select/#permissions","title":"Permissions","text":"<p>In <code>Matrixone</code>, executing the <code>CREATE TABLE AS SELECT</code> statement requires at least the following permissions:</p> <ul> <li> <p><code>CREATE</code> permissions: Users need to have permissions to create tables, which can be done with <code>CREATE</code> permissions.</p> </li> <li> <p><code>INSERT</code> permission: Because the <code>CREATE TABLE AS SELECT</code> statement inserts the selected data into the new table, the user also needs to have permission to insert data into the target table. This can be done with <code>INSERT</code> privileges.</p> </li> <li> <p><code>SELECT</code> permission: Users need to be able to select data from the source data table, so they need to have SELECT permission.</p> </li> </ul> <p>For more permission-related actions, check out the Matrixone permission classification and grant instructions.</p>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Definition-Language/create-table-as-select/#examples","title":"Examples","text":"<ul> <li>Example 1</li> </ul> <pre><code>create table t1(a int default 123, b char(5));\nINSERT INTO t1 values (1, '1'),(2,'2'),(0x7fffffff, 'max');\n\nmysql&gt; create table t2 as select *from t1;--Whole Table Replication\nQuery OK, 3 rows affected (0.02 sec)\n\nmysql&gt; desc t2;\n+-------+---------+------+------+---------+-------+---------+\n| Field | Type    | Null | Key  | Default | Extra | Comment |\n+-------+---------+------+------+---------+-------+---------+\n| a     | INT(32) | YES  |      | 123     |       |         |\n| b     | CHAR(5) | YES  |      | NULL    |       |         |\n+-------+---------+------+------+---------+-------+---------+\n2 rows in set (0.01 sec)\n\nmysql&gt; select * from t2;\n+------------+------+\n| a          | b    |\n+------------+------+\n|          1 | 1    |\n|          2 | 2    |\n| 2147483647 | max  |\n+------------+------+\n3 rows in set (0.00 sec)\n</code></pre> <ul> <li>Example 2</li> </ul> <pre><code>create table t1(a int default 123, b char(5));\nINSERT INTO t1 values (1, '1'),(2,'2'),(0x7fffffff, 'max');\n\nmysql&gt; CREATE table test as select a as alias_a from t1;--Specify an alias for the selection column\nQuery OK, 3 rows affected (0.02 sec)\n\nmysql&gt; desc test;\n+---------+---------+------+------+---------+-------+---------+\n| Field   | Type    | Null | Key  | Default | Extra | Comment |\n+---------+---------+------+------+---------+-------+---------+\n| alias_a | INT(32) | YES  |      | 123     |       |         |\n+---------+---------+------+------+---------+-------+---------+\n1 row in set (0.01 sec)\n\nmysql&gt; select * from test;\n+------------+\n| alias_a    |\n+------------+\n|          1 |\n|          2 |\n| 2147483647 |\n+------------+\n3 rows in set (0.01 sec)\n</code></pre> <ul> <li>Example 3</li> </ul> <pre><code>create table t1(a int default 123, b char(5));\nINSERT INTO t1 values (1, '1'),(2,'2'),(0x7fffffff, 'max');\n\nmysql&gt; create table t3 as select * from t1 where 1=2;--Copy only the fields, not the data\nQuery OK, 0 rows affected (0.01 sec)\n\nmysql&gt; desc t3;\n+-------+---------+------+------+---------+-------+---------+\n| Field | Type    | Null | Key  | Default | Extra | Comment |\n+-------+---------+------+------+---------+-------+---------+\n| a     | INT(32) | YES  |      | 123     |       |         |\n| b     | CHAR(5) | YES  |      | NULL    |       |         |\n+-------+---------+------+------+---------+-------+---------+\n2 rows in set (0.01 sec)\n\nmysql&gt; select * from t3;\nEmpty set (0.00 sec)\n</code></pre> <ul> <li>Example 4</li> </ul> <pre><code>create table t1(a int default 123, b char(5));\nINSERT INTO t1 values (1, '1'),(2,'2'),(0x7fffffff, 'max');\n\nmysql&gt; CREATE table t4(n1 int unique) as select max(a) from t1;--Use the original table data aggregation values as columns in the new table\nQuery OK, 1 row affected (0.03 sec)\n\nmysql&gt; desc t4;\n+--------+---------+------+------+---------+-------+---------+\n| Field  | Type    | Null | Key  | Default | Extra | Comment |\n+--------+---------+------+------+---------+-------+---------+\n| n1     | INT(32) | YES  | UNI  | NULL    |       |         |\n| max(a) | INT(32) | YES  |      | NULL    |       |         |\n+--------+---------+------+------+---------+-------+---------+\n2 rows in set (0.01 sec)\n\nmysql&gt; select * from t4;\n+------+------------+\n| n1   | max(a)     |\n+------+------------+\n| NULL | 2147483647 |\n+------+------------+\n1 row in set (0.00 sec)\n</code></pre> <ul> <li>Example 5</li> </ul> <pre><code>create table t5(n1 int,n2 int,n3 int);\ninsert into t5 values(1,1,1),(1,1,1),(3,3,3);\n\nmysql&gt; create table t5_1 as select distinct n1 from t5;--Remove duplicate lines\nQuery OK, 2 rows affected (0.02 sec)\n\nmysql&gt; select * from t5_1;\n+------+\n| n1   |\n+------+\n|    1 |\n|    3 |\n+------+\n2 rows in set (0.00 sec)\n</code></pre> <ul> <li>Example 6</li> </ul> <pre><code>create table t6(n1 int,n2 int,n3 int);\ninsert into t6 values(1,1,3),(2,2,2),(3,3,1);\n\nmysql&gt; create table t6_1 as select * from t6 order by n3;--Sorting the result set\nQuery OK, 3 rows affected (0.01 sec)\n\nmysql&gt; select * from t6_1;\n+------+------+------+\n| n1   | n2   | n3   |\n+------+------+------+\n|    3 |    3 |    1 |\n|    2 |    2 |    2 |\n|    1 |    1 |    3 |\n+------+------+------+\n3 rows in set (0.01 sec)\n</code></pre> <ul> <li>Example 7</li> </ul> <pre><code>create table t7(n1 int,n2 int,n3 int);\ninsert into t7 values(1,1,3),(1,2,2),(2,3,1),(2,3,1),(3,3,1);\n\nmysql&gt; CREATE TABLE t7_1 AS SELECT n1 FROM t7 GROUP BY n1 HAVING count(n1)&gt;1;--Grouping of result sets\nQuery OK, 2 rows affected (0.02 sec)\n\nmysql&gt; mysql&gt; select * from t7_1;\n+------+\n| n1   |\n+------+\n|    1 |\n|    2 |\n+------+\n2 rows in set (0.01 sec)\n</code></pre> <ul> <li>Example 8</li> </ul> <pre><code>create table t8(n1 int,n2 int,n3 int);\ninsert into t8 values(1,1,1),(2,2,2),(3,3,3);\n\nmysql&gt; CREATE TABLE t8_1 AS SELECT * FROM t8 limit 1 offset 1;--Specifies to return from the second row of the result set, and the number of rows to return is 1.\n\nmysql&gt; select * from t8_1;\n+------+------+------+\n| n1   | n2   | n3   |\n+------+------+------+\n|    2 |    2 |    2 |\n+------+------+------+\n1 row in set (0.00 sec)\n</code></pre> <ul> <li>Example 9</li> </ul> <pre><code>create table t9 (a int primary key, b varchar(5) unique key);\ncreate table t9_1 (\na int primary key,\nb varchar(5) unique,\nc int , d int,\nforeign key(c) references t9(a),\nINDEX idx_d(d)\n);\ninsert into t9 values (101,'abc'),(102,'def');\ninsert into t9_1 values (1,'zs1',101,1),(2,'zs2',102,1);\n\nmysql&gt; create table t9_2 as select * from t9_1;\n\nmysql&gt; show create table t9_1;\n+-------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+\n| Table | Create Table                                                                                                                                                                                                                                                                                                   |\n+-------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+\n| t9_1  | CREATE TABLE `t9_1` (\n`a` INT NOT NULL,\n`b` VARCHAR(5) DEFAULT NULL,\n`c` INT DEFAULT NULL,\n`d` INT DEFAULT NULL,\nPRIMARY KEY (`a`),\nUNIQUE KEY `b` (`b`),\nKEY `idx_d` (`d`),\nCONSTRAINT `018f27eb-0b33-7289-a3c2-af479b1833b1` FOREIGN KEY (`c`) REFERENCES `t9` (`a`) ON DELETE RESTRICT ON UPDATE RESTRICT\n) |\n+-------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+\n1 row in set (0.01 sec)\n\nmysql&gt; show create table t9_2;--If the source table has constraints or indexes, the new table created by CTAS will not have the constraints and indexes of the original table by default.\n+-------+-------------------------------------------------------------------------------------------------------------------+\n| Table | Create Table                                                                                                      |\n+-------+-------------------------------------------------------------------------------------------------------------------+\n| t9_2  | CREATE TABLE `t9_2` (\n`a` INT NOT NULL,\n`b` VARCHAR(5) DEFAULT NULL,\n`c` INT DEFAULT NULL,\n`d` INT DEFAULT NULL\n) |\n+-------+-------------------------------------------------------------------------------------------------------------------+\n1 row in set (0.00 sec)\n\n--If you want the new table to come with the original table with constraints and indexes, you can build the table by adding the\nALTER TABLE t9_2 ADD PRIMARY KEY (a);\nALTER TABLE t9_2 ADD UNIQUE KEY (b);\nALTER TABLE  t9_2 ADD FOREIGN KEY (c) REFERENCES t9 (a);\nALTER TABLE t9_2 ADD INDEX idx_d3 (d);\n\nmysql&gt; show create table t9_2;\n+-------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+\n| Table | Create Table                                                                                                                                                                                                                                                                                                    |\n+-------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+\n| t9_2  | CREATE TABLE `t9_2` (\n`a` INT NOT NULL,\n`b` VARCHAR(5) DEFAULT NULL,\n`c` INT DEFAULT NULL,\n`d` INT DEFAULT NULL,\nPRIMARY KEY (`a`),\nUNIQUE KEY `b` (`b`),\nKEY `idx_d3` (`d`),\nCONSTRAINT `018f282d-4563-7e9d-9be5-79c0d0e8136d` FOREIGN KEY (`c`) REFERENCES `t9` (`a`) ON DELETE RESTRICT ON UPDATE RESTRICT\n) |\n+-------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+\n1 row in set (0.00 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Definition-Language/create-table-like/","title":"CREATE TABLE ... LIKE","text":""},{"location":"MatrixOne/Reference/SQL-Reference/Data-Definition-Language/create-table-like/#syntax-description","title":"Syntax Description","text":"<p><code>CREATE TABLE ... LIKE</code> Create an empty table based on the definition of another table, which copies the structure of the original table but not the data stored in the original table.</p>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Definition-Language/create-table-like/#syntax-structure","title":"Syntax structure","text":"<pre><code>CREATE TABLE new_tbl LIKE orig_tbl;\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Definition-Language/create-table-like/#examples","title":"Examples","text":"<pre><code>create table test1 (a int primary key, b varchar(5) unique key);\ncreate table test2 (a int primary key,b varchar(5) unique key,c double DEFAULT 0, d char,e int, foreign key(e) references foreign01(a), unique index(c,d));\ninsert into test1 values (101,'abc'),(102,'def');\ninsert into test2 values (1,'zs1',1,'a',101),(2,'zs2',2,'b',102);\n\nmysql&gt; create table test3 like test2;\nQuery OK, 0 rows affected (0.02 sec)\n\nmysql&gt; show CREATE TABLE test2;\n+-------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+\n| Table | Create Table                                                                                                                                                                                                                                                                                                                                            |\n+-------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+\n| test2 | CREATE TABLE `test2` (\n`a` INT NOT NULL,\n`b` VARCHAR(5) DEFAULT NULL,\n`c` DOUBLE DEFAULT 0,\n`d` CHAR(1) DEFAULT NULL,\n`e` INT DEFAULT NULL,\nPRIMARY KEY (`a`),\nUNIQUE KEY `b` (`b`),\nUNIQUE KEY `c` (`c`,`d`),\nCONSTRAINT `018eb74f-38f3-7eb4-80c1-95d9c65de706` FOREIGN KEY (`e`) REFERENCES `foreign01` (`a`) ON DELETE RESTRICT ON UPDATE RESTRICT\n) |\n+-------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+\n1 row in set (0.00 sec)\n\nmysql&gt; show CREATE TABLE test3;\n+-------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+\n| Table | Create Table                                                                                                                                                                                                                                                                                                                                            |\n+-------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+\n| test3 | CREATE TABLE `test3` (\n`a` INT NOT NULL,\n`b` VARCHAR(5) DEFAULT null,\n`c` DOUBLE DEFAULT 0,\n`d` CHAR(1) DEFAULT null,\n`e` INT DEFAULT null,\nPRIMARY KEY (`a`),\nUNIQUE KEY `b` (`b`),\nUNIQUE KEY `c` (`c`,`d`),\nCONSTRAINT `018eb74f-38f3-7eb4-80c1-95d9c65de706` FOREIGN KEY (`e`) REFERENCES `foreign01` (`a`) ON DELETE RESTRICT ON UPDATE RESTRICT\n) |\n+-------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+\n1 row in set (0.00 sec)\n\nmysql&gt; select * from test2;\n+------+------+------+------+------+\n| a    | b    | c    | d    | e    |\n+------+------+------+------+------+\n|    1 | zs1  |    1 | a    |  101 |\n|    2 | zs2  |    2 | b    |  102 |\n+------+------+------+------+------+\n2 rows in set (0.00 sec)\n\nmysql&gt; select * from test3;\nEmpty set (0.01 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Definition-Language/create-table/","title":"CREATE TABLE","text":""},{"location":"MatrixOne/Reference/SQL-Reference/Data-Definition-Language/create-table/#description","title":"Description","text":"<p>Create a new table.</p>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Definition-Language/create-table/#syntax","title":"Syntax","text":"<pre><code>&gt; CREATE [TEMPORARY] TABLE [IF NOT EXISTS] tbl_name\n    (create_definition,...)\n    [table_options]\n    [partition_options]\n\ncreate_definition: {\n    col_name column_definition\n  | [CONSTRAINT [symbol]] PRIMARY KEY\n      [index_type] (key_part,...)\n      [index_option] ...\n  | [CONSTRAINT [symbol]] FOREIGN KEY\n      [index_name] (col_name,...)\n      reference_definition\n}\n\ncolumn_definition: {\n    data_type [NOT NULL | NULL] [DEFAULT {literal | (expr)} ]\n      [AUTO_INCREMENT] [UNIQUE [KEY]] [[PRIMARY] KEY]\n      [COMMENT 'string']\n      [reference_definition]\n  | data_type\n      [[PRIMARY] KEY]\n      [COMMENT 'string']\n      [reference_definition]\n}\n\nreference_definition:\n    REFERENCES tbl_name (key_part,...)\n      [ON DELETE reference_option]\n      [ON UPDATE reference_option]\n\nreference_option:\n    RESTRICT | CASCADE | SET NULL | NO ACTION\u0005\n\ntable_options:\n    table_option [[,] table_option] ...\n\ntable_option: {\n  | AUTO_INCREMENT [=] value\n  | COMMENT [=] 'string'\n  | START TRANSACTION\u0005\n}\n\npartition_options:\n    PARTITION BY\n        { [LINEAR] HASH(expr)\n        | [LINEAR] KEY [ALGORITHM={1 | 2}] (column_list)}\n    [PARTITIONS num]\n    [(partition_definition [, partition_definition] ...)]\n\npartition_definition:\n PARTITION partition_name\n     [VALUES\n         {LESS THAN {(expr | value_list) | MAXVALUE}\n         |\n         IN (value_list)}]\n     [COMMENT [=] 'string' ]\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Definition-Language/create-table/#explanations","title":"Explanations","text":"<p>Various parameters and options that can be used when creating a table, including table creation, column definition, constraints, options, and partitioning, are explained below:</p> <ul> <li> <p><code>CREATE [TEMPORARY] TABLE [IF NOT EXISTS] tbl_name</code>: This is the primary table syntax. The <code>TEMPORARY</code> keyword indicates creating a temporary table, <code>IF NOT EXISTS</code> ensures creation only if the table doesn't exist, and <code>tbl_name</code> is the name of the table to be created.</p> </li> <li> <p><code>(create_definition,...)</code>: This is the section for column definitions, used to define the table's columns and their attributes.</p> </li> <li> <p><code>[table_options]</code>: This is for table-level options where you can set parameters like storage engine, character set, etc.</p> </li> <li> <p><code>[partition_options]</code>: This is used for partitioned tables and defining partitioning methods and keys.</p> </li> </ul> <p>The <code>create_definition</code> section is used to define attributes for each column, and it can contain the following:</p> <ul> <li> <p><code>col_name column_definition</code>: This defines the column name and its attributes, including data type, whether it can be null, default value, etc.</p> </li> <li> <p><code>[CONSTRAINT [symbol]] PRIMARY KEY</code>: This defines a primary key constraint and can set a constraint name and the columns that make up the primary key.</p> </li> <li> <p><code>[CONSTRAINT [symbol]] FOREIGN KEY</code>: This defines a foreign key constraint and can set a constraint name, columns for the foreign key, and the referenced table.</p> </li> </ul> <p>The <code>column_definition</code> section is used to define attributes for specific columns and can include the following:</p> <ul> <li> <p><code>data_type [NOT NULL | NULL] [DEFAULT {literal | (expr)} ]</code>: This defines the data type of the column, whether it can be null, and its default value.</p> </li> <li> <p><code>[AUTO_INCREMENT] [UNIQUE [KEY]] [[PRIMARY] KEY]</code>: This sets options like auto-increment, uniqueness, and primary key constraint.</p> </li> <li> <p><code>[COMMENT 'string']</code>: This sets a comment for the column.</p> </li> <li> <p><code>[reference_definition]</code>: This is an optional reference definition used to define foreign key constraints.</p> </li> </ul> <p>The <code>reference_definition</code> section is used to define references for foreign keys and includes the following:</p> <ul> <li> <p><code>REFERENCES tbl_name (key_part,...)</code>: This specifies the referenced table and columns for the foreign key.</p> </li> <li> <p><code>[ON DELETE reference_option]</code>: This sets the action to be taken when a referenced row is deleted.</p> </li> <li> <p><code>[ON UPDATE reference_option]</code>: This sets the action to be taken when a referenced row is updated.</p> </li> </ul> <p><code>reference_option</code> represents the options for foreign key actions, including <code>RESTRICT</code>, <code>CASCADE</code>, <code>SET NULL</code>, and <code>NO ACTION</code>.</p> <p>The <code>table_options</code> section sets table-level options, including initial auto-increment value, table comments, etc.</p> <p>The <code>partition_options</code> section defines options for partitioned tables, including partitioning methods, partition keys, and the number of partitions.</p> <p>For more detailed syntax explanations, see the following content.</p>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Definition-Language/create-table/#temporary-tables","title":"Temporary Tables","text":"<p>You can use the <code>TEMPORARY</code> keyword when creating a table. A <code>TEMPORARY</code> table is visible only within the current session, and is dropped automatically when the session is closed. This means that two different sessions can use the same temporary table name without conflicting with each other or with an existing non-TEMPORARY table of the same name. (The existing table is hidden until the temporary table is dropped.)</p> <p>Dropping a database does automatically drop any <code>TEMPORARY</code> tables created within that database.</p> <p>The creating session can perform any operation on the table, such as <code>DROP TABLE</code>, <code>INSERT</code>, <code>UPDATE</code>, or <code>SELECT</code>.</p>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Definition-Language/create-table/#comment","title":"COMMENT","text":"<p>A comment for a column or a table can be specified with the <code>COMMENT</code> option.</p> <ul> <li>Up to 1024 characters long. The comment is displayed by the <code>SHOW CREATE TABLE</code> and <code>SHOW FULL COLUMNS</code> statements. It is also shown in the <code>COLUMN_COMMENT</code> column of the <code>INFORMATION_SCHEMA.COLUMNS</code> table.</li> </ul>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Definition-Language/create-table/#auto_increment","title":"AUTO_INCREMENT","text":"<p>The initial <code>AUTO_INCREMENT</code> value for the table.</p> <p>An integer column can have the additional attribute <code>AUTO_INCREMENT</code>. When you insert a value of NULL (recommended) or 0 into an indexed AUTO_INCREMENT column, the column is set to the next sequence value. Typically this is value+1, where the value is the largest value for the column currently in the table. <code>AUTO_INCREMENT</code> sequences begin with 1 default.</p> <p>There can be only one <code>AUTO_INCREMENT</code> column per table, which must be indexed and cannot have a DEFAULT value. An <code>AUTO_INCREMENT</code> column works properly only if it contains only positive values. Inserting a negative number is regarded as inserting a very large positive number. This is done to avoid precision problems when numbers \"wrap\" over from positive to negative and also to ensure that you do not accidentally get an <code>AUTO_INCREMENT</code> column that contains 0.</p> <p>You can use the <code>AUTO_INCREMENT</code> attribute to define the starting value of an auto-increment column. If you want to set the starting value of the auto-increment column to 10, you can use the <code>AUTO_INCREMENT</code> keyword when creating the table and specify the starting value later.</p> <p>For example, to create a table and define an auto-increment column with a starting value of 10, you can use the following SQL statement:</p> <pre><code>-- set up\ncreate table t1(a int auto_increment primary key) auto_increment = 10;\n</code></pre> <p>In this example, the <code>id</code> column is an auto-incrementing column with a starting value 10. When a new record is inserted into the table, the value of the <code>id</code> column will start from 10 and increment by 1 each time. If the starting value of <code>AUTO_INCREMENT</code> is not specified, the default starting value is 1, which is automatically incremented by 1 each time.</p> <p>Note</p> <ol> <li>MatrixOne currently only supports the default increment step size of 1; regardless of the initial value of the auto-increment column, each auto-increment is 1. Temporarily does not support setting the incremental step size.</li> <li>MatrixOne only syntax supports using the system variable <code>set @@auto_increment_offset=n</code> to set the initial value of the auto-increment column, but it does not take effect.</li> </ol>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Definition-Language/create-table/#primary-key","title":"PRIMARY KEY","text":"<p>The PRIMARY KEY constraint uniquely identifies each record in a table.</p> <p>Primary keys must contain UNIQUE values, and cannot contain NULL values.</p> <p>A table can have only ONE primary key; and in the table, this primary key can consist of single column (field).</p> <ul> <li>SQL PRIMARY KEY on CREATE TABLE</li> </ul> <p>The following SQL creates a PRIMARY KEY on the \"ID\" column when the \"Persons\" table is created:</p> <pre><code>&gt; CREATE TABLE Persons (\n    ID int NOT NULL,\n    LastName varchar(255) NOT NULL,\n    FirstName varchar(255),\n    Age int,\n    PRIMARY KEY (ID)\n);\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Definition-Language/create-table/#foreign-key","title":"FOREIGN KEY","text":"<p>The FOREIGN KEY constraint is used to prevent actions that would destroy links between tables.</p> <p>A FOREIGN KEY is a field (or collection of fields) in one table, that refers to the PRIMARY KEY in another table.</p> <p>The table with the foreign key is called the child table, and the table with the primary key is called the referenced or parent table.</p> <p>The FOREIGN KEY constraint prevents invalid data from being inserted into the foreign key column, because it has to be one of the values contained in the parent table.</p> <p>When defining FOREIGN KEY, the following rules need to be followed:</p> <ul> <li> <p>The parent table must already exist in the database or be a table currently being created. In the latter case, the parent table and the slave table are the same table, such a table is called a self-referential table, and this structure is called self-referential integrity.</p> </li> <li> <p>A primary key must be defined for the parent table.</p> </li> <li> <p>Specify the column name or combination of column names after the table name of the parent table. This column or combination of columns must be the primary or candidate key of the primary table.</p> </li> <li> <p>The number of columns in the foreign key must be the same as the number of columns in the primary key of the parent table.</p> </li> <li> <p>The data type of the column in the foreign key must be the same as the data type of the corresponding column in the primary key of the parent table.</p> </li> </ul> <p>The following is an example to illustrate the association of parent and child tables through FOREIGN KEY and PRIMARY KEY:</p> <p>First, create a parent table with field a as the primary key:</p> <pre><code>create table t1(a int primary key,b varchar(5));\ninsert into t1 values(101,'abc'),(102,'def');\nmysql&gt; select * from t1;\n+------+------+\n| a    | b    |\n+------+------+\n|  101 | abc  |\n|  102 | def  |\n+------+------+\n2 rows in set (0.00 sec)\n</code></pre> <p>Then create a child table with field c as the foreign key, associated with parent table field a:</p> <pre><code>create table t2(a int ,b varchar(5),c int, foreign key(c) references t1(a));\ninsert into t2 values(1,'zs1',101),(2,'zs2',102);\ninsert into t2 values(3,'xyz',null);\nmysql&gt; select * from t2;\n+------+------+------+\n| a    | b    | c    |\n+------+------+------+\n|    1 | zs1  |  101 |\n|    2 | zs2  |  102 |\n|    3 | xyz  | NULL |\n+------+------+------+\n3 rows in set (0.00 sec)\n</code></pre> <p>In addition, <code>[ON DELETE reference_option]</code> and <code>[ON UPDATE reference_option]</code> are used when defining a foreign key relationship to specify actions to be taken when records in the parent table are deleted or updated. These two parameters are primarily used to maintain data integrity and consistency:</p> <ul> <li> <p><code>ON DELETE reference_option</code>: This parameter specifies how to handle associated foreign key data when data in the referenced table is deleted. Common options include:</p> <ul> <li> <p><code>RESTRICT</code>: If related foreign key data exists in the referenced table, deletion of data in the table is not allowed. This prevents accidental deletion of related data, ensuring data consistency.</p> </li> <li> <p><code>CASCADE</code>: When data in the referenced table is deleted, associated foreign key data is also deleted. This is used for cascading deletion of related data to maintain data integrity.</p> </li> <li> <p><code>SET NULL</code>: When data in the referenced table is deleted, the value of the foreign key column is set to NULL. This is used to retain foreign key data while disconnecting it from the referenced data upon deletion.</p> </li> <li> <p><code>NO ACTION</code>: Indicates no action is taken; it only checks for the existence of associated data. This is similar to <code>RESTRICT</code> but may have minor differences in some databases.</p> </li> </ul> </li> <li> <p><code>ON UPDATE reference_option</code>: This parameter specifies how to handle associated foreign key data when data in the referenced table is updated. Common options are similar to those of <code>ON DELETE reference_option</code>, and their usage is identical, but they apply to data update operations.</p> </li> </ul> <p>See the example below:</p> <p>Suppose there are two tables, <code>Orders</code> and <code>Customers</code>, where the <code>Orders</code> table has a foreign key column <code>customer_id</code> referencing the <code>id</code> column in the <code>Customers</code> table. If, when a customer is deleted from the <code>Customers</code> table, you also want to delete the associated order data, you can use <code>ON DELETE CASCADE</code>.</p> <pre><code>CREATE TABLE Customers (\nid INT PRIMARY KEY,\nname VARCHAR(50)\n);\n\nCREATE TABLE Orders (\nid INT PRIMARY KEY,\norder_number VARCHAR(10),\ncustomer_id INT,\nFOREIGN KEY (customer_id) REFERENCES Customers(id) ON DELETE CASCADE\n);\n</code></pre> <p>In the above example, when a customer is deleted from the <code>Customers</code> table, the associated order data will also be deleted through cascading, maintaining data integrity. Similarly, the <code>ON UPDATE</code> parameter can handle update operations.</p> <p>For more information on data integrity constraints, see Data Integrity Constraints Overview.</p>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Definition-Language/create-table/#cluster-by","title":"Cluster by","text":"<p><code>Cluster by</code> is a command used to optimize the physical arrangement of a table. When creating a table, the <code>Cluster by</code> command can physically sort the table based on a specified column for tables without a primary key. It will rearrange the data rows to match the order of values in that column. Using <code>Cluster by</code> improves query performance.</p> <ul> <li>The syntax for a single column is: <code>create table() cluster by col;</code></li> <li>The syntax for multiple columns is: <code>create table() cluster by (col1, col2);</code></li> </ul> <p>Note: <code>Cluster by</code> cannot coexist with a primary key, or a syntax error will occur. <code>Cluster by</code> can only be specified when creating a table and does not support dynamic creation.</p> <p>For more information on using <code>Cluster by</code> for performing tuning, see Using <code>Cluster by</code> for performance tuning.</p>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Definition-Language/create-table/#table-partition-and-partitions","title":"Table PARTITION and PARTITIONS","text":"<pre><code>partition_options:\n PARTITION BY\n     { [LINEAR] HASH(expr)\n     | [LINEAR] KEY [ALGORITHM={1 | 2}] (column_list)\n [PARTITIONS num]\n [(partition_definition [, partition_definition] ...)]\n\npartition_definition:\n PARTITION partition_name\n     [VALUES\n         {LESS THAN {(expr | value_list) | MAXVALUE}\n         |\n         IN (value_list)}]\n     [COMMENT [=] 'string' ]\n</code></pre> <p>Partitions can be modified, merged, added to tables, and dropped from tables.</p> <ul> <li>PARTITION BY</li> </ul> <p>If used, a partition_options clause begins with PARTITION BY. This clause contains the function that is used to determine the partition; the function returns an integer value ranging from 1 to num, where num is the number of partitions.</p> <ul> <li>HASH(expr)</li> </ul> <p>Hashes one or more columns to create a key for placing and locating rows. expr is an expression using one or more table columns. For example, these are both valid CREATE TABLE statements using PARTITION BY HASH:</p> <pre><code>CREATE TABLE t1 (col1 INT, col2 CHAR(5))\n    PARTITION BY HASH(col1);\n\nCREATE TABLE t1 (col1 INT, col2 CHAR(5), col3 DATETIME)\n    PARTITION BY HASH ( YEAR(col3) );\n</code></pre> <ul> <li>KEY(column_list)</li> </ul> <p>This is similar to <code>HASH</code>. The column_list argument is simply a list of 1 or more table columns (maximum: 16). This example shows a simple table partitioned by key, with 4 partitions:</p> <pre><code>CREATE TABLE tk (col1 INT, col2 CHAR(5), col3 DATE)\n    PARTITION BY KEY(col3)\n    PARTITIONS 4;\n</code></pre> <p>For tables that are partitioned by key, you can employ linear partitioning by using the <code>LINEAR</code> keyword. This has the same effect as with tables that are partitioned by <code>HASH</code>. This example uses linear partitioning by <code>key</code> to distribute data between 5 partitions:</p> <pre><code>CREATE TABLE tk (col1 INT, col2 CHAR(5), col3 DATE)\n    PARTITION BY LINEAR KEY(col3)\n    PARTITIONS 5;\n</code></pre> <ul> <li>RANGE(expr)</li> </ul> <p>In this case, expr shows a range of values using a set of <code>VALUES LESS THAN</code> operators. When using range partitioning, you must define at least one partition using <code>VALUES LESS THAN</code>. You cannot use <code>VALUES IN</code> with range partitioning.</p> <p><code>PARTITION ... VALUES LESS THAN ...</code> statements work in a consecutive fashion. <code>VALUES LESS THAN MAXVALUE</code> works to specify \"leftover\" values that are greater than the maximum value otherwise specified.</p> <p>The clauses must be arranged in such a way that the upper limit specified in each successive <code>VALUES LESS THAN</code> is greater than that of the previous one, with the one referencing <code>MAXVALUE</code> coming last of all in the list.</p> <ul> <li>PARTITIONS num</li> </ul> <p>The number of partitions may optionally be specified with a PARTITIONS num clause, where num is the number of partitions. If both this clause and any PARTITION clauses are used, num must be equal to the total number of any partitions that are declared using PARTITION clauses.</p>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Definition-Language/create-table/#examples","title":"Examples","text":"<ul> <li>Example 1: Create a common table</li> </ul> <pre><code>CREATE TABLE test(a int, b varchar(10));\nINSERT INTO test values(123, 'abc');\n\nmysql&gt; SELECT * FROM test;\n+------+---------+\n|   a  |    b    |\n+------+---------+\n|  123 |   abc   |\n+------+---------+\n</code></pre> <ul> <li>Example 2: Add comments when creating a table</li> </ul> <pre><code>create table t2 (a int, b int) comment = \"fact table\";\n\nmysql&gt; show create table t2;\n+-------+---------------------------------------------------------------------------------------+\n| Table | Create Table                                                                          |\n+-------+---------------------------------------------------------------------------------------+\n| t2    | CREATE TABLE `t2` (\n`a` INT DEFAULT NULL,\n`b` INT DEFAULT NULL\n) COMMENT='fact table',    |\n+-------+---------------------------------------------------------------------------------------+\n</code></pre> <ul> <li>Example 3: Add comments to columns when creating tables</li> </ul> <pre><code>create table t3 (a int comment 'Column comment', b int) comment = \"table\";\n\nmysql&gt; SHOW CREATE TABLE t3;\n+-------+----------------------------------------------------------------------------------------------------------+\n| Table | Create Table                                                                                             |\n+-------+----------------------------------------------------------------------------------------------------------+\n| t3    | CREATE TABLE `t3` (\n`a` INT DEFAULT NULL COMMENT 'Column comment',\n`b` INT DEFAULT NULL\n) COMMENT='table',     |\n+-------+----------------------------------------------------------------------------------------------------------+\n</code></pre> <ul> <li>Example 4: Create a common partitioned table</li> </ul> <pre><code>CREATE TABLE tp1 (col1 INT, col2 CHAR(5), col3 DATE) PARTITION BY KEY(col3) PARTITIONS 4;\n\nmysql&gt; SHOW CREATE TABLE tp1;\n+-------+----------------------------------------------------------------------------------------------------------------------------------------------------------+\n| Table | Create Table                                                                                                                                             |\n+-------+----------------------------------------------------------------------------------------------------------------------------------------------------------+\n| tp1   | CREATE TABLE `tp1` (\n`col1` INT DEFAULT NULL,\n`col2` CHAR(5) DEFAULT NULL,\n`col3` DATE DEFAULT NULL\n) partition by key algorithm = 2 (col3) partitions 4 |\n+-------+----------------------------------------------------------------------------------------------------------------------------------------------------------+\n1 row in set (0.00 sec)\n\n-- do not specify the number of partitions\nCREATE TABLE tp2 (col1 INT, col2 CHAR(5), col3 DATE) PARTITION BY KEY(col3);\n\nmysql&gt; SHOW CREATE TABLE tp2;\n+-------+---------------------------------------------------------------------------------------------------------------------------------------------+\n| Table | Create Table                                                                                                                                |\n+-------+---------------------------------------------------------------------------------------------------------------------------------------------+\n| tp2   | CREATE TABLE `tp2` (\n`col1` INT DEFAULT NULL,\n`col2` CHAR(5) DEFAULT NULL,\n`col3` DATE DEFAULT NULL\n) partition by key algorithm = 2 (col3) |\n+-------+---------------------------------------------------------------------------------------------------------------------------------------------+\n1 row in set (0.00 sec)\n\n-- Specify partition algorithm\nCREATE TABLE tp3\n(\ncol1 INT,\ncol2 CHAR(5),\ncol3 DATE\n) PARTITION BY KEY ALGORITHM = 1 (col3);\n\n\nmysql&gt; show create table tp3;\n+-------+---------------------------------------------------------------------------------------------------------------------------------------------+\n| Table | Create Table                                                                                                                                |\n+-------+---------------------------------------------------------------------------------------------------------------------------------------------+\n| tp3   | CREATE TABLE `tp3` (\n`col1` INT DEFAULT NULL,\n`col2` CHAR(5) DEFAULT NULL,\n`col3` DATE DEFAULT NULL\n) partition by key algorithm = 1 (col3) |\n+-------+---------------------------------------------------------------------------------------------------------------------------------------------+\n1 row in set (0.00 sec)\n\n-- Specify partition algorithm and the number of partitions\nCREATE TABLE tp4 (col1 INT, col2 CHAR(5), col3 DATE) PARTITION BY LINEAR KEY ALGORITHM = 1 (col3) PARTITIONS 5;\n\nmysql&gt; SHOW CREATE TABLE tp4;\n+-------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------+\n| Table | Create Table                                                                                                                                                    |\n+-------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------+\n| tp4   | CREATE TABLE `tp4` (\n`col1` INT DEFAULT NULL,\n`col2` CHAR(5) DEFAULT NULL,\n`col3` DATE DEFAULT NULL\n) partition by linear key algorithm = 1 (col3) partitions 5 |\n+-------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------+\n1 row in set (0.01 sec)\n\n-- Multi-column partition\nCREATE TABLE tp5\n(\ncol1 INT,\ncol2 CHAR(5),\ncol3 DATE\n) PARTITION BY KEY(col1, col2) PARTITIONS 4;\n\nmysql&gt; SHOW CREATE TABLE tp5;\n+-------+----------------------------------------------------------------------------------------------------------------------------------------------------------------+\n| Table | Create Table                                                                                                                                                   |\n+-------+----------------------------------------------------------------------------------------------------------------------------------------------------------------+\n| tp5   | CREATE TABLE `tp5` (\n`col1` INT DEFAULT NULL,\n`col2` CHAR(5) DEFAULT NULL,\n`col3` DATE DEFAULT NULL\n) partition by key algorithm = 2 (col1, col2) partitions 4 |\n+-------+----------------------------------------------------------------------------------------------------------------------------------------------------------------+\n1 row in set (0.01 sec)\n\n-- Create a primary key column partition\nCREATE TABLE tp6\n(\ncol1 INT  NOT NULL PRIMARY KEY,\ncol2 DATE NOT NULL,\ncol3 INT  NOT NULL,\ncol4 INT  NOT NULL\n) PARTITION BY KEY(col1) PARTITIONS 4;\n\nmysql&gt; SHOW CREATE TABLE tp6;\n+-------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+\n| Table | Create Table                                                                                                                                                                        |\n+-------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+\n| tp6   | CREATE TABLE `tp6` (\n`col1` INT NOT NULL,\n`col2` DATE NOT NULL,\n`col3` INT NOT NULL,\n`col4` INT NOT NULL,\nPRIMARY KEY (`col1`)\n) partition by key algorithm = 2 (col1) partitions 4 |\n+-------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+\n1 row in set (0.01 sec)\n\n-- Create HASH partition\nCREATE TABLE tp7\n(\ncol1 INT,\ncol2 CHAR(5)\n) PARTITION BY HASH(col1);\n\nmysql&gt; SHOW CREATE TABLE tp7;\n+-------+------------------------------------------------------------------------------------------------------+\n| Table | Create Table                                                                                         |\n+-------+------------------------------------------------------------------------------------------------------+\n| tp7   | CREATE TABLE `tp7` (\n`col1` INT DEFAULT NULL,\n`col2` CHAR(5) DEFAULT NULL\n) partition by hash (col1) |\n+-------+------------------------------------------------------------------------------------------------------+\n1 row in set (0.01 sec)\n\n-- Specifies the number of HASH partitions when creating hash partition\nCREATE TABLE tp8\n(\ncol1 INT,\ncol2 CHAR(5)\n) PARTITION BY HASH(col1) PARTITIONS 4;\n\nmysql&gt; SHOW CREATE TABLE tp8;\n+-------+-------------------------------------------------------------------------------------------------------------------+\n| Table | Create Table                                                                                                      |\n+-------+-------------------------------------------------------------------------------------------------------------------+\n| tp8   | CREATE TABLE `tp8` (\n`col1` INT DEFAULT NULL,\n`col2` CHAR(5) DEFAULT NULL\n) partition by hash (col1) partitions 4 |\n+-------+-------------------------------------------------------------------------------------------------------------------+\n1 row in set (0.00 sec)\n\n-- specify the partition granularity when creating a partition\nCREATE TABLE tp9\n(\ncol1 INT,\ncol2 CHAR(5),\ncol3 DATETIME\n) PARTITION BY HASH (YEAR(col3));\n\nmysql&gt; SHOW CREATE TABLE tp9;\n+-------+------------------------------------------------------------------------------------------------------------------------------------------+\n| Table | Create Table                                                                                                                             |\n+-------+------------------------------------------------------------------------------------------------------------------------------------------+\n| tp9   | CREATE TABLE `tp9` (\n`col1` INT DEFAULT NULL,\n`col2` CHAR(5) DEFAULT NULL,\n`col3` DATETIME DEFAULT NULL\n) partition by hash (year(col3)) |\n+-------+------------------------------------------------------------------------------------------------------------------------------------------+\n1 row in set (0.00 sec)\n\n-- specify the partition granularity and number of partitions when creating a partition\nCREATE TABLE tp10\n(\ncol1 INT,\ncol2 CHAR(5),\ncol3 DATE\n) PARTITION BY LINEAR HASH( YEAR(col3)) PARTITIONS 6;\n\nmysql&gt; SHOW CREATE TABLE tp10;\n+-------+-----------------------------------------------------------------------------------------------------------------------------------------------------------+\n| Table | Create Table                                                                                                                                              |\n+-------+-----------------------------------------------------------------------------------------------------------------------------------------------------------+\n| tp10  | CREATE TABLE `tp10` (\n`col1` INT DEFAULT NULL,\n`col2` CHAR(5) DEFAULT NULL,\n`col3` DATE DEFAULT NULL\n) partition by linear hash (year(col3)) partitions 6 |\n+-------+-----------------------------------------------------------------------------------------------------------------------------------------------------------+\n1 row in set (0.00 sec)\n\n-- Use the primary key column as the HASH partition when creating a partition\nCREATE TABLE tp12 (col1 INT NOT NULL PRIMARY KEY, col2 DATE NOT NULL, col3 INT NOT NULL, col4 INT NOT NULL) PARTITION BY HASH(col1) PARTITIONS 4;\n\nmysql&gt; SHOW CREATE TABLE tp12;\n+-------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+\n| Table | Create Table                                                                                                                                                            |\n+-------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+\n| tp12  | CREATE TABLE `tp12` (\n`col1` INT NOT NULL,\n`col2` DATE NOT NULL,\n`col3` INT NOT NULL,\n`col4` INT NOT NULL,\nPRIMARY KEY (`col1`)\n) partition by hash (col1) partitions 4 |\n+-------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+\n1 row in set (0.01 sec)\n</code></pre> <ul> <li>Example 5: Primary key auto increment</li> </ul> <pre><code>drop table if exists t1;\ncreate table t1(a bigint primary key auto_increment,\nb varchar(10));\ninsert into t1(b) values ('bbb');\ninsert into t1 values (3, 'ccc');\ninsert into t1(b) values ('bbb1111');\n\nmysql&gt; select * from t1 order by a;\n+------+---------+\n| a    | b       |\n+------+---------+\n|    1 | bbb     |\n|    3 | ccc     |\n|    4 | bbb1111 |\n+------+---------+\n3 rows in set (0.01 sec)\n\ninsert into t1 values (2, 'aaaa1111');\n\nmysql&gt; select * from t1 order by a;\n+------+----------+\n| a    | b        |\n+------+----------+\n|    1 | bbb      |\n|    2 | aaaa1111 |\n|    3 | ccc      |\n|    4 | bbb1111  |\n+------+----------+\n4 rows in set (0.00 sec)\n\ninsert into t1(b) values ('aaaa1111');\n\nmysql&gt; select * from t1 order by a;\n+------+----------+\n| a    | b        |\n+------+----------+\n|    1 | bbb      |\n|    2 | aaaa1111 |\n|    3 | ccc      |\n|    4 | bbb1111  |\n|    5 | aaaa1111 |\n+------+----------+\n5 rows in set (0.01 sec)\n\ninsert into t1 values (100, 'xxxx');\ninsert into t1(b) values ('xxxx');\n\nmysql&gt; select * from t1 order by a;\n+------+----------+\n| a    | b        |\n+------+----------+\n|    1 | bbb      |\n|    2 | aaaa1111 |\n|    3 | ccc      |\n|    4 | bbb1111  |\n|    5 | aaaa1111 |\n|  100 | xxxx     |\n|  101 | xxxx     |\n+------+----------+\n7 rows in set (0.00 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Definition-Language/create-table/#constraints","title":"Constraints","text":"<ol> <li>Currently, it is not supported to use the <code>ALTER TABLE table_name DROP PRIMARY KEY</code> statement to drop the primary key from a table.</li> <li>The <code>ALTER TABLE table_name AUTO_INCREMENT = n;</code> statement is not supported to modify the initial value of the auto-increment column.</li> <li>In MatrixOne, only syntax supports using the system variable <code>set @@auto_increment_increment=n</code> to set the incremental step size, and only syntax supports using the system variable <code>set @@auto_increment_offset=n</code> to set the default auto-increment column initial value, but it does not take effect; currently supports setting the initial value <code>AUTO_INCREMENT=n</code> of the auto-increment column, but the step size is still 1 by default.</li> </ol>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Definition-Language/create-view/","title":"CREATE VIEW","text":""},{"location":"MatrixOne/Reference/SQL-Reference/Data-Definition-Language/create-view/#description","title":"Description","text":"<p>The view is a virtual table based on the result-set of an SQL statement.</p> <p>A view contains rows and columns, just like a real table. The fields in a view are fields from one or more real tables in the database.</p> <p>You can add SQL statements and functions to a view and present the data as if the data were coming from one single table.</p> <p>A view is created with the <code>CREATE VIEW</code> statement.</p>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Definition-Language/create-view/#syntax","title":"Syntax","text":"<pre><code>&gt; CREATE [OR REPLACE] VIEW view_name AS\n  SELECT column1, column2, ...\n  FROM table_name\n  WHERE condition;\n</code></pre> <p>Note</p> <p>A view always shows up-to-date data! The database engine recreates the view, every time a user queries it.</p>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Definition-Language/create-view/#examples","title":"Examples","text":"<ul> <li>Example 1:</li> </ul> <pre><code>CREATE TABLE t00(a INTEGER);\nINSERT INTO t00 VALUES (1),(2);\nCREATE TABLE t01(a INTEGER);\nINSERT INTO t01 VALUES (1);\nCREATE VIEW v0 AS SELECT t00.a, t01.a AS b FROM t00 LEFT JOIN t01 USING(a);\n\nmysql&gt; SELECT t00.a, t01.a AS b FROM t00 LEFT JOIN t01 USING(a);\n+------+------+\n| a    | b    |\n+------+------+\n|    1 |    1 |\n|    2 | NULL |\n+------+------+\n2 rows in set (0.01 sec)\n\nmysql&gt; SELECT * FROM v0 WHERE b &gt;= 0;\n+------+------+\n| a    | b    |\n+------+------+\n|    1 |    1 |\n+------+------+\n1 row in set (0.01 sec)\n\nmysql&gt; SHOW CREATE VIEW v0;\n+------+----------------------------------------------------------------------------+\n| View | Create View                                                                |\n+------+----------------------------------------------------------------------------+\n| v0   | CREATE VIEW v0 AS SELECT t00.a, t01.a AS b FROM t00 LEFT JOIN t01 USING(a) |\n+------+----------------------------------------------------------------------------+\n1 row in set (0.00 sec)\n</code></pre> <ul> <li>Example 2:</li> </ul> <pre><code>drop table if exists t1;\ncreate table t1 (id int,ti tinyint unsigned,si smallint,bi bigint unsigned,fl float,dl double,de decimal,ch char(20),vch varchar(20),dd date,dt datetime);\ninsert into t1 values(1,1,4,3,1113.32,111332,1113.32,'hello','subquery','2022-04-28','2022-04-28 22:40:11');\ninsert into t1 values(2,2,5,2,2252.05,225205,2252.05,'bye','sub query','2022-04-28','2022-04-28 22:40:11');\ninsert into t1 values(3,6,6,3,3663.21,366321,3663.21,'hi','subquery','2022-04-28','2022-04-28 22:40:11');\ninsert into t1 values(4,7,1,5,4715.22,471522,4715.22,'good morning','my subquery','2022-04-28','2022-04-28 22:40:11');\ninsert into t1 values(5,1,2,6,51.26,5126,51.26,'byebye',' is subquery?','2022-04-28','2022-04-28 22:40:11');\ninsert into t1 values(6,3,2,1,632.1,6321,632.11,'good night','maybe subquery','2022-04-28','2022-04-28 22:40:11');\ninsert into t1 values(7,4,4,3,7443.11,744311,7443.11,'yes','subquery','2022-04-28','2022-04-28 22:40:11');\ninsert into t1 values(8,7,5,8,8758.00,875800,8758.11,'nice to meet','just subquery','2022-04-28','2022-04-28 22:40:11');\ninsert into t1 values(9,8,4,9,9849.312,9849312,9849.312,'see you','subquery','2022-04-28','2022-04-28 22:40:11');\ndrop table if exists t2;\ncreate table t2 (id int,ti tinyint unsigned,si smallint,bi bigint unsigned,fl float,dl double,de decimal,ch char(20),vch varchar(20),dd date,dt datetime);\ninsert into t2 values(1,1,4,3,1113.32,111332,1113.32,'hello','subquery','2022-04-28','2022-04-28 22:40:11');\ninsert into t2 values(2,2,5,2,2252.05,225205,2252.05,'bye','sub query','2022-04-28','2022-04-28 22:40:11');\ninsert into t2 values(3,6,6,3,3663.21,366321,3663.21,'hi','subquery','2022-04-28','2022-04-28 22:40:11');\ninsert into t2 values(4,7,1,5,4715.22,471522,4715.22,'good morning','my subquery','2022-04-28','2022-04-28 22:40:11');\ninsert into t2 values(5,1,2,6,51.26,5126,51.26,'byebye',' is subquery?','2022-04-28','2022-04-28 22:40:11');\ninsert into t2 values(6,3,2,1,632.1,6321,632.11,'good night','maybe subquery','2022-04-28','2022-04-28 22:40:11');\ninsert into t2 values(7,4,4,3,7443.11,744311,7443.11,'yes','subquery','2022-04-28','2022-04-28 22:40:11');\ninsert into t2 values(8,7,5,8,8758.00,875800,8758.11,'nice to meet','just subquery','2022-04-28','2022-04-28 22:40:11');\ninsert into t2 values(9,8,4,9,9849.312,9849312,9849.312,'see you','subquery','2022-04-28','2022-04-28 22:40:11');\n\nmysql&gt; select * from (select * from t1) sub where id &gt; 4;\n+------+------+------+------+----------+---------+------+--------------+----------------+------------+---------------------+\n| id   | ti   | si   | bi   | fl       | dl      | de   | ch           | vch            | dd         | dt                  |\n+------+------+------+------+----------+---------+------+--------------+----------------+------------+---------------------+\n|    5 |    1 |    2 |    6 |    51.26 |    5126 |   51 | byebye       |  is subquery?  | 2022-04-28 | 2022-04-28 22:40:11 |\n|    6 |    3 |    2 |    1 |    632.1 |    6321 |  632 | good night   | maybe subquery | 2022-04-28 | 2022-04-28 22:40:11 |\n|    7 |    4 |    4 |    3 |  7443.11 |  744311 | 7443 | yes          | subquery       | 2022-04-28 | 2022-04-28 22:40:11 |\n|    8 |    7 |    5 |    8 |     8758 |  875800 | 8758 | nice to meet | just subquery  | 2022-04-28 | 2022-04-28 22:40:11 |\n|    9 |    8 |    4 |    9 | 9849.312 | 9849312 | 9849 | see you      | subquery       | 2022-04-28 | 2022-04-28 22:40:11 |\n+------+------+------+------+----------+---------+------+--------------+----------------+------------+---------------------+\n5 rows in set (0.01 sec)\n\ncreate view v1 as select * from (select * from t1) sub where id &gt; 4;\ncreate view v2 as select ti as t,fl as f from (select * from t1) sub where dl &lt;&gt; 4;\ncreate view v3 as select * from (select ti as t,fl as f from t1 where dl &lt;&gt; 4) sub;\ncreate view v4 as select id,min(ti) from (select * from t1) sub group by id;\ncreate view v5 as select * from (select id,min(ti) from (select * from t1) t1 group by id) sub;\nmysql&gt; select * from v1;\n+------+------+------+------+----------+---------+------+--------------+----------------+------------+---------------------+\n| id   | ti   | si   | bi   | fl       | dl      | de   | ch           | vch            | dd         | dt                  |\n+------+------+------+------+----------+---------+------+--------------+----------------+------------+---------------------+\n|    5 |    1 |    2 |    6 |    51.26 |    5126 |   51 | byebye       |  is subquery?  | 2022-04-28 | 2022-04-28 22:40:11 |\n|    6 |    3 |    2 |    1 |    632.1 |    6321 |  632 | good night   | maybe subquery | 2022-04-28 | 2022-04-28 22:40:11 |\n|    7 |    4 |    4 |    3 |  7443.11 |  744311 | 7443 | yes          | subquery       | 2022-04-28 | 2022-04-28 22:40:11 |\n|    8 |    7 |    5 |    8 |     8758 |  875800 | 8758 | nice to meet | just subquery  | 2022-04-28 | 2022-04-28 22:40:11 |\n|    9 |    8 |    4 |    9 | 9849.312 | 9849312 | 9849 | see you      | subquery       | 2022-04-28 | 2022-04-28 22:40:11 |\n+------+------+------+------+----------+---------+------+--------------+----------------+------------+---------------------+\n5 rows in set (0.00 sec)\n\nmysql&gt; select * from v2;\n+------+----------+\n| t    | f        |\n+------+----------+\n|    1 |  1113.32 |\n|    2 |  2252.05 |\n|    6 |  3663.21 |\n|    7 |  4715.22 |\n|    1 |    51.26 |\n|    3 |    632.1 |\n|    4 |  7443.11 |\n|    7 |     8758 |\n|    8 | 9849.312 |\n+------+----------+\n9 rows in set (0.00 sec)\n\nmysql&gt; select * from v3;\n+------+----------+\n| t    | f        |\n+------+----------+\n|    1 |  1113.32 |\n|    2 |  2252.05 |\n|    6 |  3663.21 |\n|    7 |  4715.22 |\n|    1 |    51.26 |\n|    3 |    632.1 |\n|    4 |  7443.11 |\n|    7 |     8758 |\n|    8 | 9849.312 |\n+------+----------+\n9 rows in set (0.00 sec)\n\nmysql&gt; select * from v4;\n+------+---------+\n| id   | min(ti) |\n+------+---------+\n|    1 |       1 |\n|    2 |       2 |\n|    3 |       6 |\n|    4 |       7 |\n|    5 |       1 |\n|    6 |       3 |\n|    7 |       4 |\n|    8 |       7 |\n|    9 |       8 |\n+------+---------+\n9 rows in set (0.00 sec)\n\nmysql&gt; select * from v5;\n+------+---------+\n| id   | min(ti) |\n+------+---------+\n|    1 |       1 |\n|    2 |       2 |\n|    3 |       6 |\n|    4 |       7 |\n|    5 |       1 |\n|    6 |       3 |\n|    7 |       4 |\n|    8 |       7 |\n|    9 |       8 |\n+------+---------+\n9 rows in set (0.01 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Definition-Language/drop-database/","title":"DROP DATABASE","text":""},{"location":"MatrixOne/Reference/SQL-Reference/Data-Definition-Language/drop-database/#description","title":"Description","text":"<p>Drop a database.</p>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Definition-Language/drop-database/#syntax","title":"Syntax","text":"<pre><code>&gt; DROP DATABASE [IF EXISTS] &lt;database_name&gt;\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Definition-Language/drop-database/#examples","title":"Examples","text":"<pre><code>CREATE DATABASE test01;\n\nmysql&gt; DROP DATABASE test01;\nQuery OK, 0 rows affected (0.01 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Definition-Language/drop-function/","title":"DROP FUNCTION","text":""},{"location":"MatrixOne/Reference/SQL-Reference/Data-Definition-Language/drop-function/#grammar-description","title":"Grammar description","text":"<p>The <code>DROP FUNCTION</code> statement represents the deletion of a user-defined function.</p>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Definition-Language/drop-function/#grammar-structure","title":"Grammar structure","text":"<pre><code>&gt; DROP FUNCTION &lt;name&gt; ([&lt;arg_data_type&gt; ]\u2026 )\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Definition-Language/drop-function/#examples","title":"Examples","text":"<p>Example 1</p> <pre><code>--Removing Parametric Functions\n\ncreate or replace function py_add(a int, b int) returns int language python as $$\ndef add(a, b):\nreturn a + b\n$$\nhandler 'add';\n\nmysql&gt; select py_add(1,2);\n+--------------+\n| py_add(1, 2) |\n+--------------+\n|            3 |\n+--------------+\n1 row in set (0.01 sec)\n\n--When we no longer need the function, we can remove it\ndrop function py_add(int, int);\n</code></pre> <p>Example 2</p> <pre><code>--Deleting Unreferenced Functions\nmysql&gt; CREATE FUNCTION t1_fun () RETURNS VARCHAR LANGUAGE SQL AS 'select n1 from t1 limit 1' ;\nQuery OK, 0 rows affected (0.01 sec)\n\nmysql&gt; drop function t1_fun();\nQuery OK, 0 rows affected (0.01 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Definition-Language/drop-index/","title":"DROP INDEX","text":""},{"location":"MatrixOne/Reference/SQL-Reference/Data-Definition-Language/drop-index/#description","title":"Description","text":"<p>This statement deletes the index from the currently selected table and will report an error if the index does not exist unless the <code>IF EXISTS</code> modifier is used.</p>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Definition-Language/drop-index/#syntax","title":"Syntax","text":"<pre><code>&gt; DROP INDEX index_name ON tbl_name\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Definition-Language/drop-index/#examples","title":"Examples","text":"<pre><code>create table t5(a int, b int, unique key(a));\nmysql&gt; show create table t5;\n+-------+----------------------------------------------------------------------------------------+\n| Table | Create Table                                                                           |\n+-------+----------------------------------------------------------------------------------------+\n| t5    | CREATE TABLE `t5` (\n`a` INT DEFAULT NULL,\n`b` INT DEFAULT NULL,\nUNIQUE KEY `a` (`a`)\n) |\n+-------+----------------------------------------------------------------------------------------+\n1 row in set (0.01 sec)\n\ncreate index b on t5(b);\nmysql&gt; show create table t5;\n+-------+-------------------------------------------------------------------------------------------------------+\n| Table | Create Table                                                                                          |\n+-------+-------------------------------------------------------------------------------------------------------+\n| t5    | CREATE TABLE `t5` (\n`a` INT DEFAULT NULL,\n`b` INT DEFAULT NULL,\nUNIQUE KEY `a` (`a`),\nKEY `b` (`b`)\n) |\n+-------+-------------------------------------------------------------------------------------------------------+\n1 row in set (0.02 sec)\n\ndrop index b on t5;\nmysql&gt; show create table t5;\n+-------+----------------------------------------------------------------------------------------+\n| Table | Create Table                                                                           |\n+-------+----------------------------------------------------------------------------------------+\n| t5    | CREATE TABLE `t5` (\n`a` INT DEFAULT NULL,\n`b` INT DEFAULT NULL,\nUNIQUE KEY `a` (`a`)\n) |\n+-------+----------------------------------------------------------------------------------------+\n1 row in set (0.02 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Definition-Language/drop-publication/","title":"DROP PUBLICATION","text":""},{"location":"MatrixOne/Reference/SQL-Reference/Data-Definition-Language/drop-publication/#description","title":"Description","text":"<p><code>DROP PUBLICATION</code> can delete the existed publication.</p>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Definition-Language/drop-publication/#syntax","title":"Syntax","text":"<pre><code>DROP PUBLICATION pubname;\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Definition-Language/drop-publication/#explanations","title":"Explanations","text":"<ul> <li>pubname: The name of an existing publication whose definition is to be deleted.</li> </ul>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Definition-Language/drop-publication/#examples","title":"Examples","text":"<pre><code>create account acc0 admin_name 'root' identified by '111';\ncreate account acc1 admin_name 'root' identified by '111';\ncreate account acc2 admin_name 'root' identified by '111';\ncreate database t;\ncreate publication pub3 database t account acc0,acc1;\n\nmysql&gt; show publications;\n+------+----------+\n| Name | Database |\n+------+----------+\n| pub3 | t        |\n+------+----------+\n1 row in set (0.00 sec)\n\nmysql&gt; drop publication pub3;\nQuery OK, 0 rows affected (0.01 sec)\n\nmysql&gt; show publications;\nEmpty set (0.00 sec)  </code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Definition-Language/drop-sequence/","title":"DROP SEQUENCE","text":""},{"location":"MatrixOne/Reference/SQL-Reference/Data-Definition-Language/drop-sequence/#description","title":"Description","text":"<p><code>DROP SEQUENCE</code> is used to drop a sequence. It allows you to delete sequences previously created with the <code>CREATE SEQUENCE</code> command.</p> <p>Deleting a sequence deletes all properties and values of the sequence. Therefore, before dropping a sequence, you must ensure that no tables are still using the sequence.</p>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Definition-Language/drop-sequence/#syntax","title":"Syntax","text":"<pre><code>&gt; DROP SEQUENCE [ IF EXISTS ] SEQUENCE_NAME [, ...]\n  [IF EXISTS]\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Definition-Language/drop-sequence/#examples","title":"Examples","text":"<pre><code>-- Delete the sequence named \"seq_id\"\nDROP SEQUENCE seq_id;\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Definition-Language/drop-snapshot/","title":"DROP SNAPSHOT","text":""},{"location":"MatrixOne/Reference/SQL-Reference/Data-Definition-Language/drop-snapshot/#syntax-description","title":"Syntax Description","text":"<p><code>DROP SNAPSHOT</code> is used to delete snapshots created under the current tenant.</p>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Definition-Language/drop-snapshot/#syntax-structure","title":"Syntax structure","text":"<pre><code>&gt; DROP SNAPSHOT snapshot_name;\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Definition-Language/drop-snapshot/#examples","title":"Examples","text":"<pre><code>create snapshot sp1 for account sys;\n\nmysql&gt;  show snapshots;\n+---------------+----------------------------+----------------+--------------+---------------+------------+\n| SNAPSHOT_NAME | TIMESTAMP                  | SNAPSHOT_LEVEL | ACCOUNT_NAME | DATABASE_NAME | TABLE_NAME |\n+---------------+----------------------------+----------------+--------------+---------------+------------+\n| sp1           | 2024-05-10 09:55:11.601605 | account        | sys          |               |            |\n+---------------+----------------------------+----------------+--------------+---------------+------------+\n1 row in set (0.01 sec)\n\ndrop snapshot sp1;\n\nmysql&gt;  show snapshots;\nEmpty set (0.01 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Definition-Language/drop-stage/","title":"DROP STAGE","text":""},{"location":"MatrixOne/Reference/SQL-Reference/Data-Definition-Language/drop-stage/#description","title":"Description","text":"<p><code>DROP STAGE</code> drops a named internal or external data stage from the database. The data stage is a temporary storage area that loads data from a file into a database table or exports data from a database table to a file. Use the <code>DROP STAGE</code> command to remove stages of data that are no longer needed from the database, freeing storage space and avoiding additional storage charges.</p> <p>Note</p> <p>The cluster administrator (i.e., the root user) and account administrators can delete data stages.</p>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Definition-Language/drop-stage/#syntax","title":"Syntax","text":"<pre><code>-- Delete internal stage\n&gt; DROP STAGE [IF EXISTS] {internal_stage_name};\n\n-- Delete external stage\n&gt; DROP STAGE  [IF EXISTS] {external_stage_name};\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Definition-Language/drop-stage/#examples","title":"Examples","text":"<pre><code>CREATE TABLE `user` (`id` int(11) ,`user_name` varchar(255) ,`sex` varchar(255));\nINSERT INTO user(id,user_name,sex) values('1', 'weder', 'man'), ('2', 'tom', 'man'), ('3', 'wederTom', 'man');\n\n-- Create internal data stage\nmysql&gt; CREATE STAGE stage1 URL='/tmp' ENABLE = TRUE;\n\n-- Export data from the table to data stage\nmysql&gt; SELECT * FROM user INTO OUTFILE 'stage1:/user.csv';\n-- You can see your exported table in your local directory\n\n-- delete stage1\nmysql&gt; drop stage stage1;\nQuery OK, 0 rows affected (0.01 sec)\n\n-- stage1 has been deleted; the data stage is not available\nmysql&gt; SELECT * FROM user INTO OUTFILE 'stage1:/user.csv';\nERROR 20101 (HY000): internal error: stage 'stage1' is not exists, please check\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Definition-Language/drop-table/","title":"DROP TABLE","text":""},{"location":"MatrixOne/Reference/SQL-Reference/Data-Definition-Language/drop-table/#description","title":"Description","text":"<p>Deletes the table.</p>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Definition-Language/drop-table/#syntax","title":"Syntax","text":"<pre><code>&gt; DROP TABLE [IF EXISTS] [db.]name\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Definition-Language/drop-table/#examples","title":"Examples","text":"<pre><code>CREATE TABLE table01(a int);\n\nmysql&gt; DROP TABLE table01;\nQuery OK, 0 rows affected (0.01 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Definition-Language/drop-view/","title":"DROP VIEW","text":""},{"location":"MatrixOne/Reference/SQL-Reference/Data-Definition-Language/drop-view/#description","title":"Description","text":"<p><code>DROP VIEW</code> removes one or more views.</p> <p>If any views named in the argument list do not exist, the statement fails with an error indicating by name which nonexisting views it was unable to drop, and no changes are made.</p> <p>The <code>IF EXISTS</code> clause prevents an error from occurring for views that don't exist. When this clause is given, a <code>NOTE</code> is generated for each nonexistent view.</p>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Definition-Language/drop-view/#syntax","title":"Syntax","text":"<pre><code>&gt; DROP VIEW [IF EXISTS]\n    view_name [, view_name] ...\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Definition-Language/drop-view/#examples","title":"Examples","text":"<pre><code>CREATE TABLE t1(c1 INT PRIMARY KEY, c2 INT);\nCREATE VIEW v1 AS SELECT * FROM t1;\n\nmysql&gt; DROP VIEW v1;\nQuery OK, 0 rows affected (0.02 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Definition-Language/restore-account/","title":"RESTORE ACCOUNT","text":""},{"location":"MatrixOne/Reference/SQL-Reference/Data-Definition-Language/restore-account/#syntax-description","title":"Syntax Description","text":"<p><code>RESTORE ACCOUNT</code> Restores a tenant/database/table to a state corresponding to a timestamp based on a snapshot created under the current tenant.</p>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Definition-Language/restore-account/#syntax-structure","title":"Syntax structure","text":"<pre><code>&gt; RESTORE ACCOUNT account_name [DATABASE database_name [TABLE table_name]] FROM SNAPSHOT snapshot_name [TO ACCOUNT account_name];\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Definition-Language/restore-account/#examples","title":"Examples","text":"<ul> <li>Example 1: Restore tenant to this tenant</li> </ul> <pre><code>--Executed under tenant acc1\nCREATE database db1;\nCREATE database db2;\n\nmysql&gt; show databases;\n+--------------------+\n| Database           |\n+--------------------+\n| db1                |\n| db2                |\n| information_schema |\n| mo_catalog         |\n| mysql              |\n| system             |\n| system_metrics     |\n+--------------------+\n7 rows in set (0.00 sec)\n\ncreate snapshot acc1_snap1 for account acc1;--Creating a Snapshot\ndrop database db1;--Delete databases db1,db2\ndrop database db2;\n\nmysql&gt; show databases;\n+--------------------+\n| Database           |\n+--------------------+\n| information_schema |\n| mo_catalog         |\n| mysql              |\n| system             |\n| system_metrics     |\n+--------------------+\n5 rows in set (0.01 sec)\n\nrestore account acc1 FROM snapshot acc1_snap1;--Restore tenant-level snapshots\n\nmysql&gt; show databases;--Successful recovery\n+--------------------+\n| Database           |\n+--------------------+\n| db1                |\n| db2                |\n| information_schema |\n| mo_catalog         |\n| mysql              |\n| system             |\n| system_metrics     |\n+--------------------+\n7 rows in set (0.01 sec)\n</code></pre> <ul> <li>Example 2: Restore database to this tenant</li> </ul> <pre><code>--Executed under tenant acc1\nCREATE database db1;\n\nmysql&gt; show databases;\n+--------------------+\n| Database           |\n+--------------------+\n| db1                |\n| information_schema |\n| mo_catalog         |\n| mysql              |\n| system             |\n| system_metrics     |\n+--------------------+\n7 rows in set (0.00 sec)\n\ncreate snapshot acc1_db_snap1 for account acc1;--Creating a Snapshot\ndrop database db1;--Delete database db1\n\nmysql&gt; show databases;\n+--------------------+\n| Database           |\n+--------------------+\n| information_schema |\n| mo_catalog         |\n| mysql              |\n| system             |\n| system_metrics     |\n+--------------------+\n6 rows in set (0.01 sec)\n\nrestore account acc1 database db1 FROM snapshot acc1_db_snap1;--Recovering database-level snapshots\n\nmysql&gt; show databases;--Successful recovery\n+--------------------+\n| Database           |\n+--------------------+\n| db1                |\n| information_schema |\n| mo_catalog         |\n| mysql              |\n| system             |\n| system_metrics     |\n+--------------------+\n7 rows in set (0.00 sec)\n</code></pre> <ul> <li>Example 3: Restore table to this tenant</li> </ul> <pre><code>--Executed under tenant acc1\nCREATE TABLE t1(n1 int);\nINSERT INTO t1 values(1);\n\nmysql&gt; SELECT * FROM t1;\n+------+\n| n1   |\n+------+\n|    1 |\n+------+\n1 row in set (0.00 sec)\n\ncreate snapshot acc1_tab_snap1 for account acc1;--Creating a Snapshot\ntruncate TABLE t1;--Clear t1\n\nmysql&gt; SELECT * FROM t1;\nEmpty set (0.01 sec)\n\nrestore account acc1 database db1 TABLE t1 FROM snapshot acc1_tab_snap1;--Restore Snapshot\n\nmysql&gt; SELECT * FROM t1;--Successful recovery\n+------+\n| n1   |\n+------+\n|    1 |\n+------+\n1 row in set (0.00 sec)\n</code></pre> <ul> <li>Example 4: System tenant restores normal tenant to normal tenant This tenant</li> </ul> <pre><code>--Executed under tenant acc1\ncreate database db1;\n\nmysql&gt; show databases;\n+--------------------+\n| Database           |\n+--------------------+\n| db1                |\n| information_schema |\n| mo_catalog         |\n| mysql              |\n| system             |\n| system_metrics     |\n+--------------------+\n6 rows in set (0.01 sec)\n\n--Execute under system tenant sys\ncreate snapshot acc1_snap1 for account acc1;--Creating a snapshot for acc1\n\n--Executed under tenant acc1\ndrop database db1;--Delete database db1\n\nmysql&gt; show databases;\n+--------------------+\n| Database           |\n+--------------------+\n| information_schema |\n| mo_catalog         |\n| mysql              |\n| system             |\n| system_metrics     |\n+--------------------+\n6 rows in set (0.01 sec)\n\n--Execute under system tenant sys\nrestore account acc1 FROM snapshot acc1_snap1 TO account acc1;--Snapshot recovery of acc1 under system tenant\n\n--Executed under tenant acc1\nmysql&gt; show databases;--Successful recovery\n+--------------------+\n| Database           |\n+--------------------+\n| db1                |\n| information_schema |\n| mo_catalog         |\n| mysql              |\n| system             |\n| system_metrics     |\n+--------------------+\n6 rows in set (0.01 sec)\n</code></pre> <ul> <li>Example 5: System tenant restores normal tenant to new tenant</li> </ul> <pre><code>--Executed under tenant acc1\ncreate database db1;\n\nmysql&gt; show databases;\n+--------------------+\n| Database           |\n+--------------------+\n| db1                |\n| information_schema |\n| mo_catalog         |\n| mysql              |\n| system             |\n| system_metrics     |\n+--------------------+\n6 rows in set (0.01 sec)\n\n--Execute under system tenant sys\ncreate snapshot acc1_snap1 for account acc1;--Creating a snapshot for acc1\n\n--Executed under tenant acc1\ndrop database db1;--Delete db1\n\nmysql&gt; show databases;\n+--------------------+\n| Database           |\n+--------------------+\n| information_schema |\n| mo_catalog         |\n| mysql              |\n| system             |\n| system_metrics     |\n+--------------------+\n6 rows in set (0.01 sec)\n\n--Execute under system tenant sys\ncreate account acc2 ADMIN_NAME admin IDENTIFIED BY '111';--Need to create new tenants to be targeted in advance\nrestore account acc1 FROM snapshot acc1_snap1 TO account acc2;--Snapshot recovery of acc1 under system tenant to acc2\n\n--Executed under tenant acc1\nmysql&gt; show databases;\n+--------------------+\n| Database           |\n+--------------------+\n| information_schema |\n| mo_catalog         |\n| mysql              |\n| system             |\n| system_metrics     |\n+--------------------+\n5 rows in set (0.00 sec)\n\n--Executed under tenant acc2\nmysql&gt; show databases;--Revert to acc2\n+--------------------+\n| Database           |\n+--------------------+\n| db1                |\n| information_schema |\n| mo_catalog         |\n| mysql              |\n| system             |\n| system_metrics     |\n+--------------------+\n6 rows in set (0.01 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Definition-Language/restore-account/#limitations","title":"Limitations","text":"<ul> <li> <p>Currently only tenant/database/table level recovery is supported, not clustered.</p> </li> <li> <p>System tenant recovery normal tenant to new tenant allows only tenant level recovery.</p> </li> <li> <p>Only system tenants can perform restore data to a new tenant, and only tenant-level restores are allowed. New tenants need to be created in advance, and in order to avoid object conflicts, it is best to have a new tenant.</p> </li> </ul>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Definition-Language/truncate-table/","title":"TRUNCATE TABLE","text":""},{"location":"MatrixOne/Reference/SQL-Reference/Data-Definition-Language/truncate-table/#description","title":"Description","text":"<p>The <code>TRUNCATE TABLE</code> statement deletes all rows in a table without logging individual row deletions. <code>TRUNCATE TABLE</code> is similar to a <code>DELETE</code> statement without a <code>WHERE</code> clause; however, <code>TRUNCATE TABLE</code> is faster and uses fewer system and transaction log resources.</p> <p><code>TRUNCATE TABLE</code> has the following characteristics:</p> <ul> <li> <p>It cannot be restored after the <code>TRUNCATE TABLE</code> is deleted.</p> </li> <li> <p>If the table has an <code>AUTO_INCREMENT</code> column, the <code>TRUNCATE TABLE</code> statement resets the auto-increment value to zero.</p> </li> <li> <p>The <code>TRUNCATE TABLE</code> statement deletes rows individually if the table has <code>FOREIGN KEY</code> constraints.</p> </li> <li> <p>If the table does not have any <code>FOREIGN KEY</code> constraints, the <code>TRUNCATE TABLE</code> statement will drop the table and recreate a new one with the same structure</p> </li> </ul> <p>The difference between <code>DROP TABLE</code>, <code>TRUNCATE TABLE</code>, and <code>DELETE TABLE</code>:</p> <ul> <li><code>DROP TABLE</code>: Use <code>DROP TABLE</code> when you no longer need the table.</li> <li><code>TRUNCATE TABLE</code>: Use <code>TRUNCATE TABLE</code> to keep the table, but delete all records.</li> <li><code>DELETE TABLE</code>: When you want to delete some records, use <code>DELETE TABLE</code>.</li> </ul>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Definition-Language/truncate-table/#syntax","title":"Syntax","text":"<pre><code>&gt; TRUNCATE [TABLE] table_name;\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Definition-Language/truncate-table/#explanations","title":"Explanations","text":""},{"location":"MatrixOne/Reference/SQL-Reference/Data-Definition-Language/truncate-table/#table","title":"TABLE","text":"<p>The TABLE keyword is optional. Use this to distinguish the <code>TRUNCATE TABLE</code> statement from the <code>TRUNCATE</code> function.</p>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Definition-Language/truncate-table/#examples","title":"Examples","text":"<pre><code>create table index_table_05 (col1 bigint not null auto_increment,col2 varchar(25),col3 int,col4 varchar(50),primary key (col1),unique key col2(col2),key num_id(col4));\ninsert into index_table_05(col2,col3,col4) values ('apple',1,'10'),('store',2,'11'),('bread',3,'12');\nmysql&gt; select * from index_table_05;\n+------+-------+------+------+\n| col1 | col2  | col3 | col4 |\n+------+-------+------+------+\n|    1 | apple |    1 | 10   |\n|    2 | store |    2 | 11   |\n|    3 | bread |    3 | 12   |\n+------+-------+------+------+\n3 rows in set (0.00 sec)\n\nmysql&gt; truncate table index_table_05;\nQuery OK, 0 rows affected (0.12 sec)\n\nmysql&gt; select * from index_table_05;\nEmpty set (0.03 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Manipulation-Language/case/","title":"CASE","text":""},{"location":"MatrixOne/Reference/SQL-Reference/Data-Manipulation-Language/case/#description","title":"Description","text":"<p>The CASE statement for stored programs implements a complex conditional construct.</p> <p>Note: There is also a CASE operator, which differs from the <code>CASE</code> statement described here. See Flow Control Functions. The <code>CASE</code> statement cannot have an <code>ELSE NULL</code> clause, and it is terminated with <code>END CASE</code> instead of <code>END</code>.</p> <p>If no <code>when_value</code> or <code>search_condition</code> matches the value tested and the <code>CASE</code> statement contains no <code>ELSE</code> clause, a <code>Case</code> not found for <code>CASE</code> statement error results.</p> <p>Each <code>statement_list</code> consists of one or more SQL statements; an empty <code>statement_list</code> is not permitted.</p>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Manipulation-Language/case/#syntax","title":"Syntax","text":""},{"location":"MatrixOne/Reference/SQL-Reference/Data-Manipulation-Language/case/#syntax-1","title":"Syntax 1","text":"<pre><code>CASE case_value\n    WHEN when_value THEN statement_list\n    [WHEN when_value THEN statement_list] ...\n    [ELSE statement_list]\nEND CASE\n</code></pre> <p>For the first syntax, <code>case_value</code> is an expression. This value is compared to the <code>when_value</code> expression in each <code>WHEN</code> clause until one of them is equal. When an equal <code>when_value</code> is found, the corresponding <code>THEN</code> clause <code>statement_list</code> executes. If no <code>when_value</code> is equal, the <code>ELSE</code> clause <code>statement_list</code> executes, if there is one.</p> <p>This syntax cannot be used to test for equality with <code>NULL</code> because <code>NULL = NULL</code> is false.</p>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Manipulation-Language/case/#syntax-2","title":"Syntax 2","text":"<pre><code>CASE\n    WHEN search_condition THEN statement_list\n    [WHEN search_condition THEN statement_list] ...\n    [ELSE statement_list]\nEND CASE\n</code></pre> <p>For the second syntax, each <code>WHEN</code> clause search_condition expression is evaluated until one is true, at which point its corresponding THEN clause <code>statement_list</code> executes. If no <code>search_condition</code> is equal, the <code>ELSE</code> clause <code>statement_list</code> executes, if there is one.</p>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Manipulation-Language/case/#examples","title":"Examples","text":"<pre><code>CREATE TABLE t1(c0 INTEGER, c1 INTEGER, c2 INTEGER);\nINSERT INTO t1 VALUES(1, 1, 1), (1, 1, 1);\n\nmysql&gt; SELECT CASE AVG (c0) WHEN any_value(c1) * any_value(c2) THEN 1 END FROM t1;\n+------------------------------------------------------------+\n| case avg(c0) when any_value(c1) * any_value(c2) then 1 end |\n+------------------------------------------------------------+\n|                                                          1 |\n+------------------------------------------------------------+\n1 row in set (0.01 sec)\n\nmysql&gt; SELECT CASE any_value(c1) * any_value(c2) WHEN SUM(c0) THEN 1 WHEN AVG(c0) THEN 2 END FROM t1;\n+--------------------------------------------------------------------------------+\n| case any_value(c1) * any_value(c2) when sum(c0) then 1 when avg(c0) then 2 end |\n+--------------------------------------------------------------------------------+\n|                                                                              2 |\n+--------------------------------------------------------------------------------+\n1 row in set (0.01 sec)\n\nmysql&gt; SELECT CASE any_value(c1) WHEN any_value(c1) + 1 THEN 1 END, ABS(AVG(c0)) FROM t1;\n+------------------------------------------------------+--------------+\n| case any_value(c1) when any_value(c1) + 1 then 1 end | abs(avg(c0)) |\n+------------------------------------------------------+--------------+\n|                                                 NULL |            1 |\n+------------------------------------------------------+--------------+\n1 row in set (0.00 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Manipulation-Language/delete/","title":"DELETE","text":""},{"location":"MatrixOne/Reference/SQL-Reference/Data-Manipulation-Language/delete/#description","title":"Description","text":"<p><code>DELETE</code> statement removes rows from a single table or multiple tables.</p>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Manipulation-Language/delete/#syntax","title":"Syntax","text":""},{"location":"MatrixOne/Reference/SQL-Reference/Data-Manipulation-Language/delete/#single-table-syntax","title":"Single-Table Syntax","text":"<pre><code>DELETE FROM tbl_name [[AS] tbl_alias]\n    [WHERE where_condition]\n    [ORDER BY ...]\n    [LIMIT row_count]\n</code></pre> <p>The DELETE statement deletes rows from tbl_name and returns the number of deleted rows.</p>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Manipulation-Language/delete/#explanations","title":"Explanations","text":"<ul> <li>The conditions in the optional <code>WHERE</code> clause identify which rows to delete. With no <code>WHERE</code> clause, all rows are deleted.</li> <li>If the <code>ORDER BY</code> clause is specified, the rows are deleted in the order that is specified. -The <code>LIMIT</code> clause places a limit on the number of rows that can be deleted.</li> </ul>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Manipulation-Language/delete/#examples","title":"Examples","text":"<ul> <li>Single-Table Examples</li> </ul> <pre><code>CREATE TABLE t1 (a bigint(3), b bigint(5) primary key);\ninsert INTO t1 VALUES (1,1),(1,2);\ndelete from t1 where a=1 limit 1;\n\nmysql&gt; select * from t1;\n+------+------+\n| a    | b    |\n+------+------+\n|    1 |    2 |\n+------+------+\n</code></pre> <ul> <li>Multiple-Table Examples</li> </ul> <p>Multiple-table join Syntax is also supported.</p> <pre><code>drop table if exists t1;\ndrop table if exists t2;\ncreate table t1 (a int);\ninsert into t1 values(1), (2), (4);\ncreate table t2 (b int);\ninsert into t2 values(1), (2), (5);\ndelete t1 from t1 join t2 where t1.a = 2;\n\nmysql&gt; select * from t1;\n+------+\n| a    |\n+------+\n|    1 |\n|    4 |\n+------+\n2 rows in set (0.00 sec)\n</code></pre> <pre><code>drop database if exists db1;\ndrop database if exists db2;\ncreate database db1;\ncreate database db2;\nuse db2;\ndrop table if exists t1;\ncreate table t1 (a int);\ninsert into t1 values (1),(2),(4);\nuse db1;\ndrop table if exists t2;\ncreate table t2 (b int);\ninsert into t2 values(1),(2),(3);\ndelete from db1.t2, db2.t1 using db1.t2 join db2.t1 on db1.t2.b = db2.t1.a where 2 &gt; 1;\n\nmysql&gt; select * from db1.t2;\n+------+\n| b    |\n+------+\n|    3 |\n+------+\nmysql&gt; select * from db2.t1;\n+------+\n| a    |\n+------+\n|    4 |\n+------+\n1 row in set (0.00 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Manipulation-Language/insert-into-select/","title":"INSERT INTO SELECT","text":""},{"location":"MatrixOne/Reference/SQL-Reference/Data-Manipulation-Language/insert-into-select/#description","title":"Description","text":"<p>The <code>INSERT INTO SELECT</code> statement copies data from one table and inserts it into another table.</p> <p>The existing records in the target table are unaffected.</p>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Manipulation-Language/insert-into-select/#syntax","title":"Syntax","text":"<pre><code>INSERT INTO table2 (column1, column2, column3, ...)\nSELECT column1, column2, column3, ...\nFROM table1\nWHERE condition;\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Manipulation-Language/insert-into-select/#examples","title":"Examples","text":"<pre><code>create table t1(id int, name varchar(10));\ninsert into t1 values(1, 'a');\ninsert into t1 values(2, 'b');\ninsert into t1 values(3, 'c');\ncreate table t2(id int, appname varchar(10), country varchar(10));\ninsert into t2 values(1, 'appone', 'CN');\ninsert into t2 values(2, 'apptwo', 'CN');\nINSERT INTO t1 (name) SELECT appname FROM t2;\n\nmysql&gt; select * from t1;\n+------+--------+\n| id   | name   |\n+------+--------+\n|    1 | a      |\n|    2 | b      |\n|    3 | c      |\n| NULL | appone |\n| NULL | apptwo |\n+------+--------+\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Manipulation-Language/insert/","title":"INSERT","text":""},{"location":"MatrixOne/Reference/SQL-Reference/Data-Manipulation-Language/insert/#description","title":"Description","text":"<p>Writing data.</p>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Manipulation-Language/insert/#syntax","title":"Syntax","text":"<pre><code>&gt; INSERT INTO [db.]table [(c1, c2, c3)] VALUES (v11, v12, v13), (v21, v22, v23), ...\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Manipulation-Language/insert/#examples","title":"Examples","text":"<pre><code>drop table if exists t1;\ncreate table t1(a int default (1+12), b int);\ninsert into t1(b) values(1), (1);\n\nmysql&gt; select * from t1;\n+------+------+\n| a    | b    |\n+------+------+\n|   13 |    1 |\n|   13 |    1 |\n+------+------+\n2 rows in set (0.01 sec)\n\ndrop table if exists t1;\ncreate table t1 (a date);\ninsert into t1 values(DATE(\"2017-06-15 09:34:21\")),(DATE(\"2019-06-25 10:12:21\")),(DATE(\"2019-06-25 18:20:49\"));\n\nmysql&gt; select * from t1;\n+------------+\n| a          |\n+------------+\n| 2017-06-15 |\n| 2019-06-25 |\n| 2019-06-25 |\n+------------+\n3 rows in set (0.00 sec)\n\ndrop table if exists t;\nCREATE TABLE t (i1 INT, d1 DOUBLE, e2 DECIMAL(5,2));\nINSERT INTO t VALUES ( 6, 6.0, 10.0/3), ( null, 9.0, 10.0/3), ( 1, null, 10.0/3), ( 2, 2.0, null );\n\nmysql&gt; select * from t;\n+------+------+------+\n| i1   | d1   | e2   |\n+------+------+------+\n|    6 |    6 | 3.33 |\n| NULL |    9 | 3.33 |\n|    1 | NULL | 3.33 |\n|    2 |    2 | NULL |\n+------+------+------+\n4 rows in set (0.01 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Manipulation-Language/load-data-infile/","title":"LOAD DATA","text":""},{"location":"MatrixOne/Reference/SQL-Reference/Data-Manipulation-Language/load-data-infile/#description","title":"Description","text":"<p>The LOAD DATA statement reads rows from a text file into a table at a very high speed. The file can be read from the server host or a S3 compatible object storage. <code>LOAD DATA</code> is the complement of <code>SELECT ... INTO OUTFILE</code>. To write data from a table to a file, use <code>SELECT ... INTO OUTFILE</code>. To read the file back into a table, use LOAD DATA. The syntax of the <code>FIELDS</code> and <code>LINES</code> clauses is the same for both statements.</p>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Manipulation-Language/load-data-infile/#syntax","title":"Syntax","text":"<pre><code>&gt; LOAD DATA [LOCAL]\n    INFILE 'file_name'\n    INTO TABLE tbl_name\n    [CHARACTER SET charset_name]\n    [{FIELDS | COLUMNS}\n        [TERMINATED BY 'string']\n        [[OPTIONALLY] ENCLOSED BY 'char']\n        [ENCASPED BY 'char']\n    ]\n    [LINES\n        [STARTING BY 'string']\n        [TERMINATED BY 'string']\n    ]\n    [IGNORE number {LINES | ROWS}]\n    [SET column_name_1=nullif(column_name_1, expr1), column_name_2=nullif(column_name_2, expr2)...]\n    [PARALLEL {'TRUE' | 'FALSE'}]\n    [STRICT {'TRUE' | 'FALSE'}]\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Manipulation-Language/load-data-infile/#input-file-location","title":"Input File Location","text":"<ul> <li> <p><code>LOAD DATA INFILE 'file_name'</code>: Indicates that the data file to be loaded is on the same machine as the MatrixOne host server. <code>file_name</code> can be the relative path name of the storage location of the file, or it can be the absolute path name.</p> </li> <li> <p><code>LOAD DATA LOCAL INFILE 'file_name'</code>: indicates that the data file to be loaded is not on the same machine as the MatrixOne host server; that is, the data file is on the client server. <code>file_name</code> can be the relative path name of the storage location of the file, or it can be the absolute path name.</p> </li> </ul>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Manipulation-Language/load-data-infile/#character-set","title":"CHARACTER SET","text":"<p>If the file content uses a different character set than the default, you can use <code>CHARACTER SET</code> to specify the character set. For example, you can use <code>CHARACTER SET utf8</code> to specify the character set of the imported content as utf8:</p> <pre><code>LOAD DATA INFILE '/tmp/test.txt' INTO TABLE table1 IGNORE 1 LINES;\n</code></pre> <p>Note</p> <p>In addition to utf8, <code>LOAD DATA</code> supports specifying character sets such as utf_8, UTF_16, UTF_xx, gbk, abcd, and so on. Character sets with - (e.g. utf-8,UTF-16) are not supported.</p>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Manipulation-Language/load-data-infile/#ignore-lines","title":"IGNORE LINES","text":"<p>The IGNORE number LINES clause can be used to ignore lines at the start of the file. For example, you can use <code>IGNORE 1 LINES</code> to skip an initial header line containing column names:</p> <pre><code>LOAD DATA INFILE '/tmp/test.txt' INTO TABLE table1 IGNORE 1 LINES;\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Manipulation-Language/load-data-infile/#field-and-line-handling","title":"Field and Line Handling","text":"<p>Use the <code>FIELDS</code> and <code>LINES</code> parameters to specify how to handle data formats.</p> <p>For <code>LOAD DATA</code> and <code>SELECT ... INTO OUTFILE</code> statements, the syntax of the <code>FIELDS</code> and <code>LINES</code> clauses is the same. Both clauses are optional, but if both are specified, <code>FIELDS</code> must precede <code>LINES</code>.</p> <p>If the <code>FIELDS</code> clause is specified, then each of the clauses of <code>FIELDS</code> (<code>TERMINATED BY</code>, <code>[OPTIONALLY] ENCLOSED BY</code>) is also optional, unless you must specify at least one of them.</p> <p><code>LOAD DATA</code> also supports the use of hexadecimal <code>ASCII</code> character expressions or binary <code>ASCII</code> character expressions as arguments to <code>FIELDS ENCLOSED BY</code> and <code>FIELDS TERMINATED BY</code>.</p> <p>If you do not specify a parameter for processing data, the following default values are used:</p> <pre><code>FIELDS TERMINATED BY '\\t' ENCLOSED BY '\"' ESCAPED BY '\\\\' LINES TERMINATED BY '\\n'\n</code></pre> <p>Note</p> <ul> <li><code>FIELDS TERMINATED BY '\\t'</code>: with and only <code>\\t</code> as delimiters.</li> <li><code>ENCLOSED BY '\"'</code>: with and only <code>\"</code> as the included character.</li> <li><code>ESCAPED BY '\\\\'</code>:use <code>\\</code> as an escape character, and only as an escape character.</li> <li><code>LINES TERMINATED BY '\\n'</code>: Use and only use <code>\\n</code> or <code>\\r\\n</code> as the line separator.</li> </ul> <p>FIELDS TERMINATED BY</p> <p><code>FIELDS TERMINATED BY</code> specifies the delimiter for a field. The <code>FIELDS TERMINATED BY</code> values can be more than one character.</p> <p>Examples</p> <pre><code>LOAD DATA INFILE 'data.txt' INTO TABLE table1\n  FIELDS TERMINATED BY ',';\n</code></pre> <p>FIELDS ENCLOSED BY</p> <p><code>FIELDS TERMINATED BY</code> option specifies the character enclose the input values. <code>ENCLOSED BY</code> value must be a single character. If the input values are not necessarily enclosed within quotation marks, use <code>OPTIONALLY</code> before the <code>ENCLOSED BY</code> option.</p> <p>Examples</p> <pre><code>LOAD DATA INFILE 'data.txt' INTO TABLE table1\n  FIELDS TERMINATED BY ',' OPTIONALLY ENCLOSED BY '\"';\n</code></pre> <p>FIELDS ESCAPED BY</p> <p><code>FIELDS ESCAPED BY</code> allows you to specify an escape character, with a default value of <code>\\\\</code>, which means that <code>\\</code> is an escape symbol that is deleted if the <code>FIELDS ESCAPED BY</code> character is not null and subsequent characters will be used literally as part of the field value.</p> <p>However, some two-character sequences have special meanings, as shown in the table below:</p> escape sequence Sequentially represented characters \\0 A space character \\b A backspace character \\n A newline (linefeed) character \\r A carriage return character \\t A tab character \\z ASCII 26 (Control+Z) <p>Examples</p> <ul> <li>Examples 1</li> </ul> <p>The contents of data.txt are as follows:</p> <pre><code>(base) admin@admindeMacBook-Pro case % cat data.txt \n1   a\\\\b\n</code></pre> <p>Connect mo than execute the following statement to import the data.txt contents to t1:</p> <pre><code>create table t1(n1 int,n2 varchar(255));\nload data infile 'Users/admin/test/case/data.txt' into table t1;\n\nmysql&gt; select * from t1;\n+------+------+\n| n1   | n2   |\n+------+------+\n|    1 | a\\b  |\n+------+------+\n1 row in set (0.00 sec)\n</code></pre> <p>The result of n2 is <code>a\\b</code> because the first <code>\\</code> was an escape character and was deleted.</p> <ul> <li>Examples 2</li> </ul> <p>The contents of data.txt are as follows:</p> <pre><code>(base) admin@admindeMacBook-Pro case % cat data.txt \n1   a\\\\b\n</code></pre> <p>Connect mo than execute the following statement to import the data.txt contents to t2:</p> <pre><code>create table t2(n1 int,n2 varchar(255));\nload data infile 'Users/admin/test/case/data.txt' into table t2 fields escaped by 'a';\n\nmysql&gt; select * from t2;\n+------+------+\n| n1   | n2   |\n+------+------+\n|    1 | \\\\b  |\n+------+------+\n1 row in set (0.00 sec)\n</code></pre> <p>The result of n2 is <code>\\\\b</code>, because here we specified the escape character as <code>a</code>, so <code>a</code> is removed.</p> <ul> <li>Examples 3</li> </ul> <p>The contents of data.txt are as follows:</p> <pre><code>(base) admin@admindeMacBook-Pro case % cat data.txt \n1   a\\\\b\n</code></pre> <p>Connect mo than execute the following statement to import the data.txt contents to t3:</p> <pre><code>create table t3(n1 int,n2 varchar(255));\nload data infile 'Users/admin/test/case/data.txt' into table t3 fields escaped by '';\n\nmysql&gt; SELECT * FROM t3;\n+------+------+\n| n1   | n2   |\n+------+------+\n|    1 | a\\\\b |\n+------+------+\n1 row in set (0.01 sec)\n</code></pre> <p>The result of n2 is <code>a\\\\b</code>, and when ESCAPED BY is empty, it is read as is without escaping the characters.</p> <ul> <li>Examples 4</li> </ul> <p>The contents of data.txt are as follows:</p> <pre><code>(base) admin@admindeMacBook-Pro case % cat data.txt \n1   a\\0b\n2   c\\bd\n3   a\\nb\n4   a\\rb\n5   a\\tb\n6   a\\Zb\n</code></pre> <p>Connect mo than execute the following statement to import the data.txt contents to t4:</p> <pre><code>create table t4(n1 int,n2 varchar(255));\nload data infile 'Users/admin/test/case/data.txt' into table t4;\n\nmysql&gt; select * from t1;\n+------+------+\n| n1   | n2   |\n+------+------+\n|    1 | a b  |\n|    2 | d  |\n|    3 | a\nb  |\nb  | 4 | a\n|    5 | a  b  |\n|    6 | ab  |\n+------+------+\n6 rows in set (0.01 sec)\n</code></pre> <p>when n1=1, the result of n2 is <code>a b</code> because <code>\\0</code> is a space character;</p> <p>When n1=2, the result of n2 is <code>d</code> because <code>\\b</code> is a backspace and <code>a</code> is deleted;</p> <p>When n1=3, the result of n2 is <code>a</code> plus a newline <code>b</code> because <code>\\n</code> is a newline;</p> <p>When n1=4, the result of n2 is <code>a</code> plus <code>b</code> after a carriage return, because <code>\\r</code> is a carriage return;</p> <p>When n1=5, the result of n2 is b for <code>a  b</code> because <code>\\t</code> is a tab;</p> <p>When n1=6, the result of n2 is <code>ab</code>, because <code>\\z</code> is a terminator.</p> <p>LINES TERMINATED BY</p> <p><code>LINES TERMINATED BY</code> specifies the delimiter for the a line. The <code>LINES TERMINATED BY</code> values can be more than one character.</p> <p>Examples</p> <p>For example, to read a file separated by comma, the syntax is:</p> <pre><code>LOAD DATA INFILE 'data.txt' INTO TABLE table1\n  FIELDS TERMINATED BY ',' ENCLOSED BY '\"'\n  LINES TERMINATED BY '\\r\\n';\n</code></pre> <p>LINE STARTING BY</p> <p>If all the input lines have a common prefix that you want to ignore, you can use <code>LINES STARTING BY</code> 'prefix_string' to skip the prefix and anything before it. If a line does not include the prefix, the entire line is skipped. Suppose that you issue the following statement:</p> <pre><code>LOAD DATA INFILE '/tmp/test.txt' INTO TABLE table1\n  FIELDS TERMINATED BY ','  LINES STARTING BY 'xxx';\n</code></pre> <p>If the data file looks like this:</p> <pre><code>xxx\"abc\",1\nsomething xxx\"def\",2\n\"ghi\",3\n</code></pre> <p>The resulting rows are (\"abc\",1) and (\"def\",2). The third row in the file is skipped because it does not contain the prefix.</p>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Manipulation-Language/load-data-infile/#set","title":"SET","text":"<p>MatrixOne only supports <code>SET column_name=nullif(column_name,expr)</code>. That is, when <code>column_name = expr</code>, it returns <code>NULL</code>; otherwise, it returns the original value of <code>column_name</code>. For example, <code>SET a=nullif(a,1)</code>, if a=1, returns <code>NULL</code>; otherwise, it returns the original value of column a.</p> <p>By setting the parameter, you can use <code>SET column_name=nullif(column_name,\"null\")</code> to return the <code>NULL</code> value in the column when loading the file.</p> <p>Example</p> <ol> <li> <p>The details of the local file <code>test.txt</code> are as follows:</p> <pre><code>id,user_name,sex\n1,\"weder\",\"man\"\n2,\"tom\",\"man\"\nnull,wederTom,\"man\"\n</code></pre> </li> <li> <p>Create a table named <code>user</code> in MatrixOne:</p> <pre><code>create database aaa;\nuse aaa;\nCREATE TABLE `user` (`id` int(11) ,`user_name` varchar(255) ,`sex` varchar(255));\n</code></pre> </li> <li> <p>Load <code>test.txt</code> into the table <code>user</code>:</p> <pre><code>LOAD DATA INFILE '/tmp/test.txt' INTO TABLE user SET id=nullif(id,\"null\");\n</code></pre> </li> <li> <p>The result of the talbe is as below:</p> <pre><code>select * from user;\n+------+-----------+------+\n| id   | user_name | sex  |\n+------+-----------+------+\n|    1 | weder     | man  |\n|    2 | tom       | man  |\n| null | wederTom  | man  |\n+------+-----------+------+\n</code></pre> </li> </ol>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Manipulation-Language/load-data-infile/#parallel","title":"PARALLEL","text":"<p>For a sizeable well-formed file, such as a JSOLLines file or a CSV file with no line breaks in a line of data, you can use <code>PARALLEL</code> to load the file in parallel to speed up the loading.</p> <p>For example, for a large file of 2 G, use two threads to load; the second thread first splits and locates the 1G position, then reads and loads backward. In this way, two threads can read large files at the same time, and each thread can read 1G of data.</p> <p>Enable/Disable Parallel Loading Command Line Example:</p> <pre><code>--  Enable Parallel Loading\nload data infile 'file_name' into table tbl_name FIELDS TERMINATED BY '|' ENCLOSED BY '\\\"' LINES TERMINATED BY '\\n' IGNORE 1 LINES PARALLEL 'TRUE';\n\n--  Disable Parallel Loading\nload data infile 'file_name' into table tbl_name FIELDS TERMINATED BY '|' ENCLOSED BY '\\\"' LINES TERMINATED BY '\\n' IGNORE 1 LINES PARALLEL 'FALSE';\n\n--  Parallel loading is disabled by default\nload data infile 'file_name' into table tbl_name FIELDS TERMINATED BY '|' ENCLOSED BY '\\\"' LINES TERMINATED BY '\\n' IGNORE 1 LINES;\n</code></pre> <p>Note</p> <p><code>[PARALLEL {'TRUE' | 'FALSE'}]</code> currently only support <code>TRUE</code> or <code>FALSE</code> and are not case-sensitive.</p> <p>Note: If the <code>PARALLEL</code> field is not added in the <code>LOAD</code> statement, for CSV files, parallel loading is disabled by default; for JSOLLines files, parallel loading is enabled by default. If there is a line terminator in the CSV file, such as '\\n', otherwise it may cause data errors when the file is loaded. If the file is too large, manually splitting the file from the '\\n' as the starting and ending point is recommended, then enabling parallel loading.</p>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Manipulation-Language/load-data-infile/#strict","title":"STRICT","text":"<p>MatrixOne supports the use of the STRICT parameter to specify the way to cut the file in parallel, which is only valid when PARALLEL is TRUE. The default value of STRICT is TRUE, which indicates that the cut is done using read-ahead detection, which not only relies on the line breaks for the segmentation, but also performs a read-ahead to verify that it matches the column definitions of the table, and will process it as a valid segmentation point only if the data meets the column definitions. Only if the data matches the column definition will it be processed as a valid split point. When the parameter is FALSE, it will use the newline character (default is '\\n') to cut in the parallel import of the cut file, and in the case of data with newline character, there may be an error in the cut.</p> <p>Example:</p> <pre><code>-- Enable pre-reading mode\nload data infile 'file_name' into table tbl_name PARALLEL 'TRUE' STRICT 'TRUE';\n\n-- Turn off pre-reading mode\nload data infile 'file_name' into table tbl_name PARALLEL 'TRUE' STRICT 'FALSE';\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Manipulation-Language/load-data-infile/#supported-file-formats","title":"Supported file formats","text":"<p>In MatrixOne's current release, <code>LOAD DATA</code> supports CSV(comma-separated values) format and JSONLines format file. See full tutorials for loading csv and jsonline.</p> <p>Note</p> <p><code>LOAD DATA</code> supports importing <code>lz4</code>, <code>gz</code>, <code>bz2</code>, <code>zlib</code>, <code>flate</code>, and does not support importing compressed files ending with <code>.tar</code> or <code>.tar.xx</code>.</p>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Manipulation-Language/load-data-infile/#csv-format-standard-description","title":"CSV format standard description","text":"<p>The CSV format loaded by MatrixOne conforms to the RFC4180 standard, and the CSV format is specified as follows:</p> <ol> <li> <p>Each record is on a separate line, separated by a newline character (CRLF):</p> <pre><code>aaa,bbb,ccc CRLF\nzzz,yyy,xxx CRLF\n</code></pre> <p>Imported into the table as follows:</p> <p>+---------+---------+---------+ | col1    | col2    | col3    | +---------+---------+---------+ | aaa     | b bb    | ccc     | | zzz     | yyy     | xxx     | +---------+---------+---------+</p> </li> <li> <p>The last record in the file can have a terminating newline or no terminating newline (CRLF):</p> <pre><code>aaa,bbb,ccc CRLF\nzzz,yyy,xxx\n</code></pre> <p>Imported into the table as follows:</p> <p>+---------+---------+---------+ | col1    | col2    | col3    | +---------+---------+---------+ | aaa     | b bb    | ccc     | | zzz     | yyy     | xxx     | +---------+---------+---------+</p> </li> <li> <p>An optional header line appears as the first line of the file and has the same format as a standard record line. For example:</p> <pre><code>field_name,field_name,field_name CRLF\naaa,bbb,ccc CRLF\nzzz,yyy,xxx CRLF\n</code></pre> <p>Imported into the table as follows:</p> <p>+------------+------------+------------+ | field_name | field_name | field_name | +------------+------------+------------+ | aaa        | bbb        | ccc        | | zzz        | yyy        | xxx        | +------------+------------+------------+</p> </li> <li> <p>In the header and each record, there may be one or more fields separated by commas. Whitespace within a field is part of the field and should not be ignored. A comma cannot follow the last field in each record. For example:</p> <pre><code>aaa,bbb,ccc\n</code></pre> <p>Or:</p> <pre><code>a aa, bbb,cc c\n</code></pre> <p>Both examples are correct.</p> <p>Imported into the table as follows:</p> <p>+---------+---------+---------+ | col1    | col2    | col3    | +---------+---------+---------+ | aaa     | bbb     | ccc     | +---------+---------+---------+</p> <p>Or:</p> <p>+---------+---------+---------+ | col1    | col2    | col3    | +---------+---------+---------+ | a aa    |  bbb    | cc c    | +---------+---------+---------+</p> </li> <li> <p>Each field can be enclosed in double quotes or not. Double quotes cannot appear inside a field if the field is not enclosed in double-quotes. For example:</p> <pre><code>\"aaa\",\"bbb\",\"ccc\" CRLF\nzzz,yyy,xxx\n</code></pre> <p>Or:</p> <pre><code>\"aaa\",\"bbb\",ccc CRLF\nzzz,yyy,xxx\n</code></pre> <p>Both examples are correct.</p> <p>Imported into the table as follows:</p> <p>+---------+---------+---------+ | col1    | col2    | col3    | +---------+---------+---------+ | aaa     | bbb     | ccc     | | zzz     | yyy     | xxx     | +---------+---------+---------+</p> </li> <li> <p>Fields containing line breaks (CRLF), double quotes, and commas should be enclosed in double-quotes. For example:</p> <pre><code>\"aaa\",\"b CRLF\nbb\",\"ccc\" CRLF\nzzz,yyy,xxx\n</code></pre> <p>Imported into the table as follows:</p> <p>+---------+---------+---------+ | col1    | col2    | col3    | +---------+---------+---------+ | aaa     | b bb    | ccc     | | zzz     | yyy     | xxx     | +---------+---------+---------+</p> </li> <li> <p>If double quotation marks are used to enclose the field, then multiple double quotation marks appearing in the field must also be enclosed in double quotation marks; otherwise, the first quotation mark of two double quotation marks in the field will be parsed as an escape character, thus keep a single, double quote. For example:</p> <pre><code>\"aaa\",\"b\",\"bb\",\"ccc\"\n</code></pre> <p>The above CSV will parse <code>\"b\"\"bb\"</code> into <code>b\"bb</code>; if the correct field is <code>b\"\"bb</code>, then it should be written as:</p> <pre><code>\"aaa\",\"b\"\"\"\"bb\",\"ccc\"\n</code></pre> <p>Or:</p> <pre><code>\"aaa\",b\"\"bb,\"ccc\"\n</code></pre> <p>Imported into the table as follows:</p> <p>+---------+---------+---------+ | col1    | col2    | col3    | +---------+---------+---------+ | aaa     | b\"\"bb   | ccc     | +---------+---------+---------+</p> </li> </ol>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Manipulation-Language/load-data-infile/#examples","title":"Examples","text":"<p>The SSB Test is an example of LOAD DATA syntax. Complete a SSB Test with MatrixOne</p> <pre><code>&gt; LOAD DATA INFILE '/ssb-dbgen-path/lineorder_flat.tbl ' INTO TABLE lineorder_flat;\n</code></pre> <p>The above statement means: load the lineorder_flat.tbl data set under the directory path /ssb-dbgen-path/ into the MatrixOne data table lineorder_flat.</p> <p>You can also refer to the following syntax examples to quickly understand <code>LOAD DATA</code>:</p>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Manipulation-Language/load-data-infile/#example-1-load-csv","title":"Example 1: LOAD CSV","text":""},{"location":"MatrixOne/Reference/SQL-Reference/Data-Manipulation-Language/load-data-infile/#simple-example","title":"Simple example","text":"<p>The data in the file locally named char_varchar.csv is as follows:</p> <pre><code>a|b|c|d\n\"a\"|\"b\"|\"c\"|\"d\"\n'a'|'b'|'c'|'d'\n\"'a'\"|\"'b'\"|\"'c'\"|\"'d'\"\n\"aa|aa\"|\"bb|bb\"|\"cc|cc\"|\"dd|dd\"\n\"aa|\"|\"bb|\"|\"cc|\"|\"dd|\"\n\"aa|||aa\"|\"bb|||bb\"|\"cc|||cc\"|\"dd|||dd\"\n\"aa'|'||aa\"|\"bb'|'||bb\"|\"cc'|'||cc\"|\"dd'|'||dd\"\naa\"aa|bb\"bb|cc\"cc|dd\"dd\n\"aa\"aa\"|\"bb\"bb\"|\"cc\"cc\"|\"dd\"dd\"\n\"aa\"\"aa\"|\"bb\"\"bb\"|\"cc\"\"cc\"|\"dd\"\"dd\"\n\"aa\"\"\"aa\"|\"bb\"\"\"bb\"|\"cc\"\"\"cc\"|\"dd\"\"\"dd\"\n\"aa\"\"\"\"aa\"|\"bb\"\"\"\"bb\"|\"cc\"\"\"\"cc\"|\"dd\"\"\"\"dd\"\n\"aa\"\"|aa\"|\"bb\"\"|bb\"|\"cc\"\"|cc\"|\"dd\"\"|dd\"\n\"aa\"\"\"\"|aa\"|\"bb\"\"\"\"|bb\"|\"cc\"\"\"\"|cc\"|\"dd\"\"\"\"|dd\"\n|||\n||||\n\"\"|\"\"|\"\"|\n\"\"\"\"|\"\"\"\"|\"\"\"\"|\"\"\"\"\n\"\"\"\"\"\"|\"\"\"\"\"\"|\"\"\"\"\"\"|\"\"\"\"\"\"\n</code></pre> <p>Create a table named t1 in MatrixOne:</p> <pre><code>mysql&gt; drop table if exists t1;\nQuery OK, 0 rows affected (0.01 sec)\n\nmysql&gt; create table t1(\n-&gt; col1 char(225),\n-&gt; col2 varchar(225),\n-&gt; col3 text,\n-&gt; col4 varchar(225)\n-&gt; );\nQuery OK, 0 rows affected (0.02 sec)\n</code></pre> <p>Load the data file into table t1:</p> <pre><code>load data infile '&lt;your-local-file-path&gt;/char_varchar.csv' into table t1 fields terminated by'|';\n</code></pre> <p>The query result is as follows:</p> <pre><code>mysql&gt; select * from t1;\n+-----------+-----------+-----------+-----------+\n| col1      | col2      | col3      | col4      |\n+-----------+-----------+-----------+-----------+\n| a         | b         | c         | d         |\n| a         | b         | c         | d         |\n| 'a'       | 'b'       | 'c'       | 'd'       |\n| 'a'       | 'b'       | 'c'       | 'd'       |\n| aa|aa     | bb|bb     | cc|cc     | dd|dd     |\n| aa|       | bb|       | cc|       | dd|       |\n| aa|||aa   | bb|||bb   | cc|||cc   | dd|||dd   |\n| aa'|'||aa | bb'|'||bb | cc'|'||cc | dd'|'||dd |\n| aa\"aa     | bb\"bb     | cc\"cc     | dd\"dd     |\n| aa\"aa     | bb\"bb     | cc\"cc     | dd\"dd     |\n| aa\"aa     | bb\"bb     | cc\"cc     | dd\"dd     |\n| aa\"\"aa    | bb\"\"bb    | cc\"\"cc    | dd\"\"dd    |\n| aa\"\"aa    | bb\"\"bb    | cc\"\"cc    | dd\"\"dd    |\n| aa\"|aa    | bb\"|bb    | cc\"|cc    | dd\"|dd    |\n| aa\"\"|aa   | bb\"\"|bb   | cc\"\"|cc   | dd\"\"|dd   |\n|           |           |           |           |\n|           |           |           |           |\n|           |           |           |           |\n| \"         | \"         | \"         | \"         |\n| \"\"        | \"\"        | \"\"        | \"\"        |\n+-----------+-----------+-----------+-----------+\n20 rows in set (0.00 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Manipulation-Language/load-data-infile/#add-conditional-example","title":"Add conditional Example","text":"<p>Following the example above, you can modify the <code>LOAD DATA</code> statement and add <code>LINES STARTING BY 'aa' ignore 10 lines;</code> at the end of the statement to experience the difference:</p> <pre><code>delete from t1;\nload data infile '&lt;your-local-file-path&gt;/char_varchar.csv' into table t1 fields terminated by'|' LINES STARTING BY 'aa' ignore 10 lines;\n</code></pre> <p>The query result is as follows:</p> <pre><code>mysql&gt; select * from t1;\n+---------+---------+---------+---------+\n| col1    | col2    | col3    | col4    |\n+---------+---------+---------+---------+\n| aa\"aa   | bb\"bb   | cc\"cc   | dd\"dd   |\n| aa\"\"aa  | bb\"\"bb  | cc\"\"cc  | dd\"\"dd  |\n| aa\"\"aa  | bb\"\"bb  | cc\"\"cc  | dd\"\"dd  |\n| aa\"|aa  | bb\"|bb  | cc\"|cc  | dd\"|dd  |\n| aa\"\"|aa | bb\"\"|bb | cc\"\"|cc | dd\"\"|dd |\n|         |         |         |         |\n|         |         |         |         |\n|         |         |         |         |\n| \"       | \"       | \"       | \"       |\n| \"\"      | \"\"      | \"\"      | \"\"      |\n+---------+---------+---------+---------+\n10 rows in set (0.00 sec)\n</code></pre> <p>As you can see, the query result ignores the first line and and ignores the common prefix aa.</p> <p>For more information on loding csv, see Import the .csv data.</p>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Manipulation-Language/load-data-infile/#example-2-load-jsonlines","title":"Example 2: LOAD JSONLines","text":""},{"location":"MatrixOne/Reference/SQL-Reference/Data-Manipulation-Language/load-data-infile/#simple-example_1","title":"Simple example","text":"<p>The data in the file locally named jsonline_array.jl is as follows:</p> <pre><code>[true,1,\"var\",\"2020-09-07\",\"2020-09-07 00:00:00\",\"2020-09-07 00:00:00\",\"18\",121.11,[\"1\",2,null,false,true,{\"q\":1}],\"1qaz\",null,null]\n[\"true\",\"1\",\"var\",\"2020-09-07\",\"2020-09-07 00:00:00\",\"2020-09-07 00:00:00\",\"18\",\"121.11\",{\"c\":1,\"b\":[\"a\",\"b\",{\"q\":4}]},\"1aza\",null,null]\n</code></pre> <p>Create a table named t1 in MatrixOne:</p> <pre><code>mysql&gt; drop table if exists t1;\nQuery OK, 0 rows affected (0.01 sec)\n\nmysql&gt; create table t1(col1 bool,col2 int,col3 varchar(100), col4 date,col5 datetime,col6 timestamp,col7 decimal,col8 float,col9 json,col10 text,col11 json,col12 bool);\nQuery OK, 0 rows affected (0.03 sec)\n</code></pre> <p>Load the data file into table t1:</p> <pre><code>load data infile {'filepath'='&lt;your-local-file-path&gt;/jsonline_array.jl','format'='jsonline','jsondata'='array'} into table t1;\n</code></pre> <p>The query result is as follows:</p> <pre><code>mysql&gt; select * from t1;\n+------+------+------+------------+---------------------+---------------------+------+--------+---------------------------------------+-------+-------+-------+\n| col1 | col2 | col3 | col4       | col5                | col6                | col7 | col8   | col9                                  | col10 | col11 | col12 |\n+------+------+------+------------+---------------------+---------------------+------+--------+---------------------------------------+-------+-------+-------+\n| true |    1 | var  | 2020-09-07 | 2020-09-07 00:00:00 | 2020-09-07 00:00:00 |   18 | 121.11 | [\"1\", 2, null, false, true, {\"q\": 1}] | 1qaz  | NULL  | NULL  |\n| true |    1 | var  | 2020-09-07 | 2020-09-07 00:00:00 | 2020-09-07 00:00:00 |   18 | 121.11 | {\"b\": [\"a\", \"b\", {\"q\": 4}], \"c\": 1}   | 1aza  | NULL  | NULL  |\n+------+------+------+------------+---------------------+---------------------+------+--------+---------------------------------------+-------+-------+-------+\n2 rows in set (0.00 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Manipulation-Language/load-data-infile/#add-conditional-example_1","title":"Add conditional Example","text":"<p>Following the example above, you can modify the <code>LOAD DATA</code> statement and add <code>ignore 1 lines</code> at the end of the statement to experience the difference:</p> <pre><code>delete from t1;\nload data infile {'filepath'='&lt;your-local-file-path&gt;/jsonline_array.jl','format'='jsonline','jsondata'='array'} into table t1 ignore 1 lines;\n</code></pre> <p>The query result is as follows:</p> <pre><code>mysql&gt; select * from t1;\n+------+------+------+------------+---------------------+---------------------+------+--------+-------------------------------------+-------+-------+-------+\n| col1 | col2 | col3 | col4       | col5                | col6                | col7 | col8   | col9                                | col10 | col11 | col12 |\n+------+------+------+------------+---------------------+---------------------+------+--------+-------------------------------------+-------+-------+-------+\n| true |    1 | var  | 2020-09-07 | 2020-09-07 00:00:00 | 2020-09-07 00:00:00 |   18 | 121.11 | {\"b\": [\"a\", \"b\", {\"q\": 4}], \"c\": 1} | 1aza  | NULL  | NULL  |\n+------+------+------+------------+---------------------+---------------------+------+--------+-------------------------------------+-------+-------+-------+\n1 row in set (0.00 sec)\n</code></pre> <p>As you can see, the query result ignores the first line.</p> <p>For more information on loding JSONLines, see Import the JSONLines data.</p>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Manipulation-Language/load-data-infile/#constraints","title":"Constraints","text":"<ol> <li>The <code>REPLACE</code> and <code>IGNORE</code> modifiers control handling of new (input) rows that duplicate existing table rows on unique key values (<code>PRIMARY KEY</code> or <code>UNIQUE index</code> values) are not supported in MatrixOne yet.</li> <li>Input pre-pressing with <code>SET</code> is supported very limitedly. Only <code>SET columns_name=nullif(expr1,expr2)</code> is supported.</li> <li>When enabling the parallel loading, it must be ensured that each row of data in the file does not contain the specified line terminator, such as '\\n'; otherwise, it will cause data errors during file loading.</li> <li>The parallel loading of files requires that the files be in uncompressed format, and parallel loading of files in compressed form is not currently supported.</li> <li>When you use <code>load data local</code>, you need to use the command line to connect to the MatrixOne service host: <code>mysql -h &lt;mo-host -ip&gt; -P 6001 -uroot -p111 --local-infile</code>.</li> </ol>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Manipulation-Language/load-data-inline/","title":"LOAD DATA INLINE","text":""},{"location":"MatrixOne/Reference/SQL-Reference/Data-Manipulation-Language/load-data-inline/#overview","title":"Overview","text":"<p>The <code>LOAD DATA INLINE</code> syntax imports strings organized in csv format into a data table, faster than <code>INSERT INTO</code> operations. The functionality of <code>LOAD DATA INLINE</code> is suitable for streaming fast data writes without a primary key, as in IoT class scenarios.</p>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Manipulation-Language/load-data-inline/#syntax-structure","title":"Syntax structure","text":"<pre><code>mysql&gt; LOAD DATA INLINE FORMAT='csv' ,\nDATA=$XXX$\ncsv_string $XXX$\nINTO TABLE tbl_name;\n</code></pre> <p>Parametric interpretation</p> <p><code>FORMAT='csv'</code> indicates that the string data in the following <code>DATA</code> is organized in <code>csv</code> format.</p> <p><code>$XXX$</code> in <code>DATA=$XXX$ csv_string $XXX$</code> is the identifier for the beginning and end of the data. <code>csv_string</code> is string data organized in <code>csv</code> format with <code>\\n</code> or <code>\\r\\n</code> as a newline character.</p> <p>Note</p> <p><code>$XXX$</code> is the identifier for the beginning and end of the data, note that <code>$XXX$</code> at the end of the data needs to be on the same line as the last line of data, a new line may cause <code>ERROR 20101</code></p>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Manipulation-Language/load-data-inline/#example-importing-data-using-load-data-inline","title":"Example: Importing data using <code>LOAD DATA INLINE</code>","text":"<ol> <li> <p>Start the MySQL client and connect to MatrixOne:</p> <pre><code>mysql -h 127.0.0.1 -P 6001 -uroot -p111\n</code></pre> <p>Note</p> <p>The login account in the above code section is the initial account. Please change the initial password promptly after logging into MatrixOne, see Password Management.</p> </li> <li> <p>Before executing <code>LOAD DATA INLINE</code> in MatrixOne, you need to create the completion data table <code>user</code> in MatrixOne in advance:</p> <pre><code>CREATE TABLE `user` (\n`name` VARCHAR(255) DEFAULT null,\n`age` INT DEFAULT null,\n`city` VARCHAR(255) DEFAULT null\n)\n</code></pre> </li> <li> <p>Perform a <code>LOAD DATA INLINE</code> on the MySQL client for data import, importing data in csv format:</p> <pre><code>mysql&gt; LOAD DATA INLINE FORMAT='csv',\nDATA=$XXX$\nLihua,23,Shanghai\nBob,25,Beijing $XXX$ INTO TABLE user;\n</code></pre> </li> </ol>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Manipulation-Language/replace/","title":"REPLACE","text":""},{"location":"MatrixOne/Reference/SQL-Reference/Data-Manipulation-Language/replace/#description","title":"Description","text":"<p><code>REPLACE</code> is a string function and a data manipulation statement for a replacement operation. The <code>REPLACE</code> statement functions to insert data into the table. If there is already a qualified record in the table, the record will be deleted first, and then new data will be inserted. New data will be inserted directly if there is no matching record in the table.</p> <p><code>REPLACE</code> is typically used on tables with unique constraints.</p> <ul> <li>The <code>REPLACE</code> statement requires that a primary key or unique index exist in the table to determine whether the same record exists.</li> <li>When using the <code>REPLACE</code> statement to insert a new record, the old record will be deleted if a record with the same primary key or unique index already exists. Then a new record will be inserted, which may cause the value of the auto-increment column to change.</li> </ul>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Manipulation-Language/replace/#syntax","title":"Syntax","text":"<pre><code>REPLACE\n    [INTO] tbl_name\n    [(col_name [, col_name] ...)]\n    { VALUES(value_list)\n      |\n      VALUES row_constructor_list\n    }\n\nREPLACE\n    [INTO] tbl_name\n    SET assignment_list\n\nvalue:\n    {expr | DEFAULT}\n\nvalue_list:\n    value [, value] ...\n\nrow_constructor_list:\n    ROW(value_list)\n\nassignment:\n    col_name = value\n\nassignment_list:\n    assignment [, assignment] ...\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Manipulation-Language/replace/#explanations","title":"Explanations","text":"<p>The <code>REPLACE</code> statement inserts data into a table or updates existing data. Its syntax has two forms: an insert form based on column names and an update form based on the SET clause.</p> <p>The following is an explanation of each parameter:</p> <ol> <li> <p><code>INTO</code>: optional keyword indicating which table to insert or update data.</p> </li> <li> <p><code>tbl_name</code>: Indicates the table's name to insert or update data.</p> </li> <li> <p><code>col_name</code>: Optional parameter indicating the column's name to be inserted or updated. In the insert form, the column to be inserted can be specified by column name; in the update form, the column to be updated can be specified.</p> </li> <li> <p><code>value</code>: Indicates the value to be inserted or updated. It can be a concrete expression (expr) or a default value (DEFAULT).</p> </li> <li> <p><code>value_list</code>: Indicates a set of values \u200b\u200bto be inserted. Separate multiple values \u200b\u200bwith commas.</p> </li> <li> <p>(Not supported yet) <code>row_constructor_list</code>: Indicates a row consisting of a set of values \u200b\u200bfor insertion. Values \u200b\u200bon each row are enclosed in parentheses and separated by commas.</p> </li> <li> <p><code>assignment</code>: Indicates the association between a column name and its corresponding value, which is used to update the form.</p> </li> <li> <p><code>assignment_list</code>: Indicates the association of multiple column names and corresponding values, which is used to update the form\u2014separate multiple column names and values \u200b\u200bwith commas.</p> </li> </ol> <p>Note</p> <ul> <li>When using the insert form, you can use the <code>VALUES</code> keyword followed by <code>value_list</code> means inserting one row of data.</li> <li>When using the update form, use the <code>SET</code> keyword followed by <code>assignment_list</code> to specify the columns to update and the corresponding values.</li> </ul>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Manipulation-Language/replace/#examples","title":"Examples","text":"<pre><code>create table names(id int PRIMARY KEY,name VARCHAR(255),age int);\n\n-- Insert a row of data, id=1, name=\"Abby\", age=24\nreplace into names(id, name, age) values(1,\"Abby\", 24);\nmysql&gt; select name, age from names where id = 1;\n+------+------+\n| name | age  |\n+------+------+\n| Abby |   24 |\n+------+------+\n1 row in set (0.00 sec)\n\nmysql&gt; select * from names;\n+------+------+------+\n| id   | name | age  |\n+------+------+------+\n|    1 | Abby |   24 |\n+------+------+------+\n1 row in set (0.00 sec)\n\n-- Use the replace statement to update the record with id=1 to have the values \u200b\u200b\"Bob\" and 25 in the name and age columns\nreplace into names(id, name, age) values(1,\"Bobby\", 25);\n\nmysql&gt; select name, age from names where id = 1;\n+-------+------+\n| name  | age  |\n+-------+------+\n| Bobby |   25 |\n+-------+------+\n1 row in set (0.00 sec)\n\nmysql&gt; select * from names;\n+------+-------+------+\n| id   | name  | age  |\n+------+-------+------+\n|    1 | Bobby |   25 |\n+------+-------+------+\n1 row in set (0.01 sec)\n\n-- Use the replace statement to insert a row of data, id=2, name=\"Ciro\", age is NULL\nreplace into names set id = 2, name = \"Ciro\";\n\nmysql&gt; select name, age from names where id = 2;\n+------+------+\n| name | age  |\n+------+------+\n| Ciro | NULL |\n+------+------+\n1 row in set (0.01 sec)\n\nmysql&gt; select * from names;\n+------+-------+------+\n| id   | name  | age  |\n+------+-------+------+\n|    1 | Bobby |   25 |\n|    2 | Ciro  | NULL |\n+------+-------+------+\n2 rows in set (0.00 sec)\n\n-- Use the replace statement to update the record with id=2 to have the value of the name column \"Ciro\" and the value of the age column 17\nreplace into names set id = 2, name = \"Ciro\", age = 17;\n\nmysql&gt; select name, age from names where id = 2;\n+------+------+\n| name | age  |\n+------+------+\n| Ciro |   17 |\n+------+------+\n1 row in set (0.01 sec)\n\nmysql&gt; select * from names;\n+------+-------+------+\n| id   | name  | age  |\n+------+-------+------+\n|    1 | Bobby |   25 |\n|    2 | Ciro  |   17 |\n+------+-------+------+\n2 rows in set (0.01 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Manipulation-Language/replace/#constraints","title":"Constraints","text":"<p>MatrixOne does not currently support rows of values \u200b\u200binserted using the <code>VALUES row_constructor_list</code> parameter.</p>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Manipulation-Language/update/","title":"UPDATE","text":""},{"location":"MatrixOne/Reference/SQL-Reference/Data-Manipulation-Language/update/#description","title":"Description","text":"<p>The <code>UPDATE</code> statement is used to modify the existing records in a table.</p>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Manipulation-Language/update/#syntax","title":"Syntax","text":""},{"location":"MatrixOne/Reference/SQL-Reference/Data-Manipulation-Language/update/#single-table-syntax","title":"Single-table Syntax","text":"<pre><code>UPDATE table_reference\n    SET assignment_list\n    [WHERE where_condition]\n    [ORDER BY ...]\n    [LIMIT row_count]\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Manipulation-Language/update/#explanations","title":"Explanations","text":"<ul> <li>The <code>UPDATE</code> statement updates columns of existing rows in the named table with new values.  </li> <li>The <code>SET</code> clause indicates which columns to modify and the values they should be given. Each value can be given as an expression, or the keyword <code>DEFAULT</code> to set a column explicitly to its default value.</li> <li>The <code>WHERE</code> clause, if given, specifies the conditions that identify which rows to update. With no <code>WHERE</code> clause, all rows are updated.</li> <li>If the <code>ORDER BY</code> clause is specified, the rows are updated in the order that is specified.</li> <li>The <code>LIMIT</code> clause places a limit on the number of rows that can be updated.</li> </ul>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Manipulation-Language/update/#examples","title":"Examples","text":"<ul> <li>Single-table Examples</li> </ul> <pre><code>CREATE TABLE t1 (a bigint(3), b bigint(5) primary key);\ninsert INTO t1 VALUES (1,1),(1,2);\nupdate t1 set a=2 where a=1 limit 1;\n\nmysql&gt; select * from t1;\n+------+------+\n| a    | b    |\n+------+------+\n|    2 |    1 |\n|    1 |    2 |\n+------+------+\n</code></pre> <ul> <li>Multiple-table Examples</li> </ul> <pre><code>drop table if exists t1;\ncreate table t1 (a int);\ninsert into t1 values(1), (2), (4);\ndrop table if exists t2;\ncreate table t2 (b int);\ninsert into t2 values(1), (2), (3);\nupdate t1, t2 set a = 1, b =2;\n\nmysql&gt; select * from t1;\n+------+\n| a    |\n+------+\n|    1 |\n|    1 |\n|    1 |\n+------+\n\nupdate t1, t2 set a = null, b =null;\n\nmysql&gt; select * from t2;\n+------+\n| b    |\n+------+\n| NULL |\n| NULL |\n| NULL |\n+------+\nmysql&gt; select * from t1;\n+------+\n| a    |\n+------+\n| NULL |\n| NULL |\n| NULL |\n+------+\n</code></pre> <p>Multiple-table join Syntax is also supported.</p> <pre><code>drop table if exists t1;\ndrop table if exists t2;\ncreate table t1 (a int, b int, c int);\ninsert into t1 values(1, 2, 3), (4, 5, 6), (7, 8, 9);\ncreate table t2 (a int, b int, c int);\ninsert into t2 values(1, 2, 3), (4, 5, 6), (7, 8, 9);\nupdate t1 join t2 on t1.a = t2.a set t1.b = 222, t1.c = 333, t2.b = 222, t2.c = 333;\n\nmysql&gt; select * from t1;\n+------+------+------+\n| a    | b    | c    |\n+------+------+------+\n|    1 |  222 |  333 |\n|    4 |  222 |  333 |\n|    7 |  222 |  333 |\n+------+------+------+\n\nmysql&gt; with t11 as (select * from (select * from t1) as t22) update t11 join t2 on t11.a = t2.a set t2.b = 666;\n\nmysql&gt; select * from t2;\n+------+------+------+\n| a    | b    | c    |\n+------+------+------+\n|    1 |  666 |  333 |\n|    4 |  666 |  333 |\n|    7 |  666 |  333 |\n+------+------+------+\n3 rows in set (0.00 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Manipulation-Language/information-functions/current_role/","title":"CURRENT_ROLE()","text":""},{"location":"MatrixOne/Reference/SQL-Reference/Data-Manipulation-Language/information-functions/current_role/#description","title":"Description","text":"<p>Returns the role of the current session.</p>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Manipulation-Language/information-functions/current_role/#syntax","title":"Syntax","text":"<pre><code>SELECT CURRENT_ROLE();\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Manipulation-Language/information-functions/current_role/#examples","title":"Examples","text":"<pre><code>mysql&gt; select current_role();\n+----------------+\n| current_role() |\n+----------------+\n| moadmin        |\n+----------------+\n1 row in set (0.00 sec)\n\n-- Create a role and switch to the new role\ncreate role use_role_1;\ngrant all on database * to use_role_1;\ngrant use_role_1 to root;\nset role use_role_1;\nmysql&gt; select current_role();\n+----------------+\n| current_role() |\n+----------------+\n| use_role_1     |\n+----------------+\n1 row in set (0.00 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Manipulation-Language/information-functions/last-insert-id/","title":"LAST_INSERT_ID()","text":""},{"location":"MatrixOne/Reference/SQL-Reference/Data-Manipulation-Language/information-functions/last-insert-id/#description","title":"Description","text":"<p>The LAST_INSERT_ID() function returns the AUTO_INCREMENT id of the last row that has been inserted or updated in a table.</p> <p>When the argument is <code>NULL</code>, <code>LAST_INSERT_ID()</code> returns a value representing the first automatically generated value successfully inserted for an <code>AUTO_INCREMENT</code> column as a result of the most recently executed <code>INSERT</code> statement; if you haven't inserted a column before, then the return value start at 1, and if you've inserted a column before, then the return value of the <code>AUTO_INCREMENT</code> column increases by 1.</p> <p>The value of <code>LAST_INSERT_ID()</code> remains unchanged if no rows are successfully inserted.</p> <p>In MySQL, if you insert multiple rows using a single INSERT statement, LAST_INSERT_ID() returns the value generated for the first inserted row only. For example:</p> <pre><code>mysql&gt; CREATE TABLE t (id INT AUTO_INCREMENT NOT NULL PRIMARY KEY, name VARCHAR(10) NOT NULL);\nmysql&gt; INSERT INTO t VALUES (NULL, 'Bob');\nmysql&gt; SELECT * FROM t;\n+----+------+\n| id | name |\n+----+------+\n|  1 | Bob  |\n+----+------+\n\nmysql&gt; SELECT LAST_INSERT_ID();\n+------------------+\n| LAST_INSERT_ID() |\n+------------------+\n|                1 |\n+------------------+\n\nmysql&gt; INSERT INTO t VALUES (NULL, 'Mary'), (NULL, 'Jane'), (NULL, 'Lisa');\n\nmysql&gt; SELECT * FROM t;\n+----+------+\n| id | name |\n+----+------+\n|  1 | Bob  |\n|  2 | Mary |\n|  3 | Jane |\n|  4 | Lisa |\n+----+------+\n\nmysql&gt; SELECT LAST_INSERT_ID();\n+------------------+\n| LAST_INSERT_ID() |\n+------------------+\n|                2 |\n+------------------+\n</code></pre> <p>But in MatrixOne, we have a different behavior; if you insert multiple rows using a single INSERT statement, LAST_INSERT_ID() returns the value generated for the last inserted row. Like the example above, when you execute <code>INSERT INTO t VALUES (NULL, 'Mary'), (NULL, 'Jane'), (NULL, 'Lisa');</code>, the <code>LAST_INSERT_ID()</code> will return 4.</p>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Manipulation-Language/information-functions/last-insert-id/#syntax","title":"Syntax","text":"<pre><code>LAST_INSERT_ID(), LAST_INSERT_ID(expr)\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Manipulation-Language/information-functions/last-insert-id/#examples","title":"Examples","text":"<pre><code>create table t1(a int auto_increment primary key);\ninsert into t1 values();\nmysql&gt; select last_insert_id();\n+------------------+\n| last_insert_id() |\n+------------------+\n|                1 |\n+------------------+\n1 row in set (0.02 sec)\n\ninsert into t1 values(11);\ninsert into t1 values();\nmysql&gt; select last_insert_id();\n+------------------+\n| last_insert_id() |\n+------------------+\n|               12 |\n+------------------+\n1 row in set (0.02 sec)\n\ninsert into t1 values(null);\nmysql&gt; select last_insert_id();\n+------------------+\n| last_insert_id() |\n+------------------+\n|               13 |\n+------------------+\n1 row in set (0.02 sec)\n\ncreate table t2(a int auto_increment primary key);\ninsert into t2 values();\nmysql&gt; select last_insert_id();\n+------------------+\n| last_insert_id() |\n+------------------+\n|                1 |\n+------------------+\n1 row in set (0.02 sec)\n\ninsert into t2 values(100);\ninsert into t2 values();\nmysql&gt; select last_insert_id();\n+------------------+\n| last_insert_id() |\n+------------------+\n|              101 |\n+------------------+\n1 row in set (0.02 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Manipulation-Language/information-functions/last-query-id/","title":"LAST_QUERY_ID","text":""},{"location":"MatrixOne/Reference/SQL-Reference/Data-Manipulation-Language/information-functions/last-query-id/#description","title":"Description","text":"<p>Returns the ID of a specified query in the current session. If no query is specified, the most recently-executed query is returned.</p>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Manipulation-Language/information-functions/last-query-id/#syntax","title":"Syntax","text":"<pre><code>LAST_QUERY_ID( [ &lt;num&gt; ] )\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Manipulation-Language/information-functions/last-query-id/#arguments","title":"Arguments","text":"<p>num: Specifies the query to return, based on the position of the query (within the session).</p> <p>Default: -1</p>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Manipulation-Language/information-functions/last-query-id/#usage-notes","title":"Usage Notes","text":"<p>Positive numbers start with the first query executed in the session. For example:</p> <ul> <li> <p>LAST_QUERY_ID(1) returns the first query.</p> </li> <li> <p>LAST_QUERY_ID(2) returns the second query.</p> </li> <li> <p>LAST_QUERY_ID(6) returns the sixth query.</p> </li> </ul> <p>Negative numbers start with the most recently-executed query in the session. For example:</p> <ul> <li> <p>LAST_QUERY_ID(-1) returns the most recently-executed query (equivalent to LAST_QUERY_ID()).</p> </li> <li> <p>LAST_QUERY_ID(-2) returns the second most recently-executed query.</p> </li> </ul>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Manipulation-Language/information-functions/last-query-id/#examples","title":"Examples","text":"<pre><code>mysql&gt; SELECT LAST_QUERY_ID(-1);\n+--------------------------------------+\n| last_query_id(-1)                    |\n+--------------------------------------+\n| af974680-b1b5-11ed-8eb9-5ad2460dea4f |\n+--------------------------------------+\n1 row in set (0.00 sec)\n\nmysql&gt; SELECT LAST_QUERY_ID();\n+--------------------------------------+\n| last_query_id()                      |\n+--------------------------------------+\n| 550e4d44-b1b5-11ed-8eb9-5ad2460dea4f |\n+--------------------------------------+\n1 row in set (0.00 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Manipulation-Language/upsert/insert-ignore/","title":"INSERT IGNORE","text":""},{"location":"MatrixOne/Reference/SQL-Reference/Data-Manipulation-Language/upsert/insert-ignore/#syntax-description","title":"Syntax Description","text":"<p><code>INSERT IGNORE</code> is used when inserting data into a database table with the same unique index or primary key to ignore the data if it already exists instead of returning an error, otherwise insert new data.</p> <p>Unlike MySQL, MatrixOne ignores errors when inserting duplicate values for unique indexes or primary keys, whereas MySQL has alert messages.  </p>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Manipulation-Language/upsert/insert-ignore/#syntax-structure","title":"Syntax structure","text":"<pre><code>&gt; INSERT IGNORE INTO [db.]table [(c1, c2, c3)] VALUES (v11, v12, v13), (v21, v22, v23), ...;\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Manipulation-Language/upsert/insert-ignore/#examples","title":"Examples","text":"<pre><code>CREATE TABLE user (\nid INT(11) NOT NULL PRIMARY KEY,\nname VARCHAR(50) NOT NULL,\nage INT(3) NOT NULL\n);\n-- Insert a new piece of data, the id doesn't exist, so enter the new data.\nmysql&gt; INSERT IGNORE INTO user VALUES (1, 'Tom', 18);\nQuery OK, 0 rows affected (0.02 sec)\n\nmysql&gt; SELECT * FROM USER;\n+------+------+------+\n| id   | name | age  |\n+------+------+------+\n|    1 | Tom  |   18 |\n+------+------+------+\n1 row in set (0.01 sec)\n\n-- Insert a new piece of data, the id exists, and the data is ignored.\nmysql&gt; INSERT IGNORE INTO user VALUES (1, 'Jane', 16);\nQuery OK, 0 rows affected (0.00 sec)\n\nmysql&gt; SELECT * FROM USER;\n+------+------+------+\n| id   | name | age  |\n+------+------+------+\n|    1 | Tom  |   18 |\n+------+------+------+\n1 row in set (0.01 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Manipulation-Language/upsert/insert-ignore/#limitations","title":"Limitations","text":"<ul> <li><code>INSERT IGNORE</code> does not support writing <code>NULL</code> to <code>NOT NULL</code> columns.</li> <li><code>INSERT IGNORE</code> does not support incorrect data type conversions.</li> <li><code>INSERT IGNORE</code> does not support handling operations where inserted data in a partition table contains mismatched partition values.</li> </ul>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Manipulation-Language/upsert/insert-on-duplicate/","title":"INSERT ... ON DUPLICATE KEY UPDATE","text":""},{"location":"MatrixOne/Reference/SQL-Reference/Data-Manipulation-Language/upsert/insert-on-duplicate/#grammar-description","title":"Grammar description","text":"<p><code>INSERT ... ON</code> DUPLICATE KEY UPDATE When inserting data into a database table, update the data if it already exists, otherwise insert new data.</p> <p>The <code>INSERT INTO</code> statement is the standard statement used to insert data into a database table; the <code>ON DUPLICATE KEY UPDATE</code> statement is used to update when there are duplicate records in the table. If a record with the same unique index or primary key exists in the table, use the <code>UPDATE</code> clause to update the corresponding column value, otherwise use the <code>INSERT</code> clause to insert a new record.</p> <p>It is important to note that using this syntax presupposes that a primary key constraint needs to be established in the table to determine if there are duplicate records. At the same time, both update and insert operations need to have the corresponding column values set, otherwise syntax errors will result.</p>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Manipulation-Language/upsert/insert-on-duplicate/#grammar-structure","title":"Grammar structure","text":"<pre><code>&gt; INSERT INTO [db.]table [(c1, c2, c3)] VALUES (v11, v12, v13), (v21, v22, v23), ...\n  [ON DUPLICATE KEY UPDATE column1 = value1, column2 = value2, column3 = value3, ...];\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Manipulation-Language/upsert/insert-on-duplicate/#examples","title":"Examples","text":"<pre><code>CREATE TABLE user (\nid INT(11) NOT NULL PRIMARY KEY,\nname VARCHAR(50) NOT NULL,\nage INT(3) NOT NULL\n);\n-- Insert a new piece of data, the id doesn't exist, so enter the new data.\nINSERT INTO user (id, name, age) VALUES (1, 'Tom', 18)\nON DUPLICATE KEY UPDATE name='Tom', age=18;\n\nmysql&gt; select * from user;\n+------+------+------+\n| id   | name | age  |\n+------+------+------+\n|    1 | Tom  |   18 |\n+------+------+------+\n1 row in set (0.01 sec)\n\n-- Increases the age field of an existing record by 1, while leaving the name field unchanged.\nINSERT INTO user (id, name, age) VALUES (1, 'Tom', 18)\nON DUPLICATE KEY UPDATE age=age+1;\n\nmysql&gt; select * from user;\n+------+------+------+\n| id   | name | age  |\n+------+------+------+\n|    1 | Tom  |   19 |\n+------+------+------+\n1 row in set (0.00 sec)\n\n-- Inserts a new row, updating the name and age fields to the specified values.\nINSERT INTO user (id, name, age) VALUES (2, 'Lucy', 20)\nON DUPLICATE KEY UPDATE name='Lucy', age=20;\n\nmysql&gt; select * from user;\n+------+------+------+\n| id   | name | age  |\n+------+------+------+\n|    1 | Tom  |   19 |\n|    2 | Lucy |   20 |\n+------+------+------+\n2 rows in set (0.01 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Manipulation-Language/upsert/insert-on-duplicate/#restrictions","title":"Restrictions","text":"<p><code>INSERT ... ON</code> DUPLICATE KEY UPDATE does not currently support Unique keys, which may cause some unknown errors because they can be <code>NULL</code>.</p>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Manipulation-Language/upsert/replace/","title":"REPLACE","text":""},{"location":"MatrixOne/Reference/SQL-Reference/Data-Manipulation-Language/upsert/replace/#grammar-description","title":"Grammar description","text":"<p><code>REPLACE</code> is not only a string function, but also a data manipulation statement for a replacement operation. The effect of the <code>REPLACE</code> statement is to insert data into the table. If an eligible record already exists in the table, the record is deleted before the new data is inserted. If no eligible records exist in the table, the new data is inserted directly.</p> <p><code>REPLACE</code> is typically used in tables with unique constraints.</p> <ul> <li>The <code>REPLACE</code> statement requires that a primary key or unique index must be present in the table to determine if the same record already exists.</li> <li>When inserting a new record using the <code>REPLACE</code> statement, if a record with the same primary key or unique index already exists, the old record is deleted and the new record is inserted, which may cause the value to change since it was added.</li> </ul>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Manipulation-Language/upsert/replace/#grammar-structure","title":"Grammar structure","text":"<pre><code>REPLACE\n    [INTO] tbl_name\n    [(col_name [, col_name] ...)]\n    { VALUES(value_list)\n      |\n      VALUES row_constructor_list\n    }\n\nREPLACE\n    [INTO] tbl_name\n    SET assignment_list\n\nvalue:\n    {expr | DEFAULT}\n\nvalue_list:\n    value [, value] ...\n\nrow_constructor_list:\n    ROW(value_list)\n\nassignment:\n    col_name = value\n\nassignment_list:\n    assignment [, assignment] ...\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Manipulation-Language/upsert/replace/#parameter-interpretation","title":"Parameter interpretation","text":"<p><code>REPLACE</code> statements are used to insert data into a table or to update existing data. Its syntax takes two forms: an insert based on the column name, and an update based on the SET clause.</p> <p>The following is an explanation of each parameter:</p> <ol> <li> <p><code>INTO</code>: Optional keyword indicating which table to insert or update data into.</p> </li> <li> <p><code>tbl_name</code>: Indicates the name of the table into which data is to be inserted or updated.</p> </li> <li> <p><code>col_name</code>: Optional parameter indicating the column name to insert or update. In insert form, you can specify which columns to insert by column name; in update form, specify which columns to update.</p> </li> <li> <p><code>value</code>: Indicates the value to insert or update. This can be a specific expression (expr) or default (DEFAULT).</p> </li> <li> <p><code>value_list</code>: Represents a set of values to insert. Multiple values are separated by commas.</p> </li> <li> <p>(Not yet supported) <code>row_constructor_list</code>: Represents a row consisting of a set of values used for insertion. The values for each line are enclosed in parentheses and separated by commas.</p> </li> <li> <p><code>assignment</code>: Represents the association of a column name with its corresponding value for updating the form.</p> </li> <li> <p><code>assignment_list</code>: Represents an association of multiple column names and corresponding values for updating forms. Multiple column names and values are separated by commas.</p> </li> </ol> <p>Note</p> <p>When using insert form, you can insert data using the <code>VALUES</code> keyword followed by <code>value_list</code> or <code>row_constructor_list</code>. <code>VALUES is</code> followed by <code>value_list</code> for inserting a row of data, and <code>VALUES</code> is followed by <code>row_constructor_list</code> for inserting multiple rows of data. - When using the update form, use the <code>SET</code> keyword followed by <code>assignment_list</code> to specify the columns and corresponding values to update.</p>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Manipulation-Language/upsert/replace/#examples","title":"Examples","text":"<pre><code>create table names(id int PRIMARY KEY,name VARCHAR(255),age int);\n\n-- Insert a row of data with id=1, name=\"Abby\", age=24\nreplace into names(id, name, age) values(1,\"Abby\", 24);\nmysql&gt; select name, age from names where id = 1;\n+------+------+\n| name | age  |\n+------+------+\n| Abby |   24 |\n+------+------+\n1 row in set (0.00 sec)\n\nmysql&gt; select * from names;\n+------+------+------+\n| id   | name | age  |\n+------+------+------+\n|    1 | Abby |   24 |\n+------+------+------+\n1 row in set (0.00 sec)\n\n-- Use the replace statement to update the name and age columns of the record with id=1 to the values \"Bob\" and 25.\nreplace into names(id, name, age) values(1,\"Bobby\", 25);\n\nmysql&gt; select name, age from names where id = 1;\n+-------+------+\n| name  | age  |\n+-------+------+\n| Bobby |   25 |\n+-------+------+\n1 row in set (0.00 sec)\n\nmysql&gt; select * from names;\n+------+-------+------+\n| id   | name  | age  |\n+------+-------+------+\n|    1 | Bobby |   25 |\n+------+-------+------+\n1 row in set (0.01 sec)\n\n-- Use the replace statement to insert a row with id=2, name=\"Ciro\", and age NULL.\nreplace into names set id = 2, name = \"Ciro\";\n\nmysql&gt; select name, age from names where id = 2;\n+------+------+\n| name | age  |\n+------+------+\n| Ciro | NULL |\n+------+------+\n1 row in set (0.01 sec)\n\nmysql&gt; select * from names;\n+------+-------+------+\n| id   | name  | age  |\n+------+-------+------+\n|    1 | Bobby |   25 |\n|    2 | Ciro  | NULL |\n+------+-------+------+\n2 rows in set (0.00 sec)\n\n-- Use the replace statement to update the name column of the record with id=2 to the value \"Ciro\" and the age column to the value 17\nreplace into names set id = 2, name = \"Ciro\", age = 17;\n\nmysql&gt; select name, age from names where id = 2;\n+------+------+\n| name | age  |\n+------+------+\n| Ciro |   17 |\n+------+------+\n1 row in set (0.01 sec)\n\nmysql&gt; select * from names;\n+------+-------+------+\n| id   | name  | age  |\n+------+-------+------+\n|    1 | Bobby |   25 |\n|    2 | Ciro  |   17 |\n+------+-------+------+\n2 rows in set (0.01 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Manipulation-Language/upsert/replace/#restrictions","title":"Restrictions","text":"<p>MatrixOne does not currently support rows consisting of a set of values inserted using the <code>VALUES row_constructor_list</code> parameter.</p>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Manipulation-Language/upsert/upsert/","title":"UPSERT","text":""},{"location":"MatrixOne/Reference/SQL-Reference/Data-Manipulation-Language/upsert/upsert/#what-is-upsert-in-sql","title":"What is Upsert in SQL?","text":"<p><code>UPSERT</code> is one of the basic functions of a database management system to manage a database. It is a combination of <code>UPDATE</code> and <code>INSERT</code> that allows the database operation language to insert a new piece of data into a table or update existing data. An <code>INSERT</code> operation is triggered when a <code>UPSERT</code> operation is a new piece of data, and <code>UPSERT is</code> similar to the <code>UPDATE</code> statement if the record already exists in the table.</p> <p>For example, we have a <code>student</code> table with the <code>id</code> column as the primary key:</p> <pre><code>&gt; desc student;\n+-------+-------------+------+------+---------+-------+---------+\n| Field | Type        | Null | Key  | Default | Extra | Comment |\n+-------+-------------+------+------+---------+-------+---------+\n| id    | INT(32)     | NO   | PRI  | NULL    |       |         |\n| name  | VARCHAR(50) | YES  |      | NULL    |       |         |\n+-------+-------------+------+------+---------+-------+---------+\n</code></pre> <p>We can use <code>upsert</code> when changing student information in this table. The logic goes like this:</p> <ul> <li> <p>If a student id exists in the table, update the row with new information.</p> </li> <li> <p>If no students exist in the table, add them as new rows.</p> </li> </ul> <p>However, the <code>UPSERT</code> command does not exist in Matrixone, but <code>UPSERT</code> can still be implemented. By default, Matrixone provides three ways to implement Matrixone UPSERT operations:</p> <ul> <li> <p>INSERT IGNORE</p> </li> <li> <p>INSERT ON DUPLICATE KEY UPDATE</p> </li> <li> <p>REPLACE</p> </li> </ul>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Manipulation-Language/upsert/upsert/#insert-ignore","title":"INSERT IGNORE","text":"<p>When we insert illegal rows into a table, the <code>INSERT IGNORE</code> statement ignores the execution error. For example, the primary key column does not allow us to store duplicate values. When we insert a piece of data into a table using INSERT and the primary key of that data already exists in the table, the Matrixone server generates an error and the statement execution fails. However, when we execute this statement using <code>INSERT IGNORE</code>, the Matrixone server will not generate an error.</p>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Manipulation-Language/upsert/upsert/#replace","title":"REPLACE","text":"<p>In some cases, we want to update data that already exists. You can use <code>REPLACE</code> at this point. When we use the REPLACE command, two things can happen:</p> <ul> <li> <p>If there is no corresponding record in the database, the standard <code>INSERT</code> statement is executed.</p> </li> <li> <p>If there are corresponding records in the database, the <code>REPLACE</code> statement deletes the corresponding records in the database before executing the standard INSERT statement (this update is performed when the primary key or unique index is duplicated)</p> </li> </ul> <p>In a <code>REPLACE</code> statement, updating data is done in two steps: deleting the original record and then inserting the record you want to update.</p>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Manipulation-Language/upsert/upsert/#insert-on-duplicate-key-update","title":"INSERT ON DUPLICATE KEY UPDATE","text":"<p>We've looked at two <code>UPSERT</code> commands so far, but both have some limitations. <code>INSERT ON DUPLICATE KEY IGNORE</code> simply ignores the <code>duplicate error</code>. <code>REPLACE</code> detects <code>INSERT errors</code>, but it deletes the old data before adding it. So we still need a better solution.</p> <p><code>INSERT ON DUPLICATE KEY UPDATE</code> is a better solution. It doesn't remove duplicate rows. When we use the <code>ON DUPLICATE KEY UPDATE</code> clause in a SQL statement and one row of data produces a <code>duplicate error</code> on the primary key or unique index, we update the existing data.</p>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Query-Language/intersect/","title":"INTERSECT","text":""},{"location":"MatrixOne/Reference/SQL-Reference/Data-Query-Language/intersect/#description","title":"Description","text":"<p><code>INTERSECT</code> returns only the different rows of two or more queries.</p>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Query-Language/intersect/#syntax","title":"Syntax","text":"<pre><code>SELECT column_list FROM table_1\nINTERSECT\nSELECT column_list FROM table_2;\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Query-Language/intersect/#examples","title":"Examples","text":"<pre><code>drop table if exists t1;\ndrop table if exists t2;\ncreate table t1 (a smallint, b bigint, c int);\ninsert into t1 values (1,2,3);\ninsert into t1 values (1,2,3);\ninsert into t1 values (3,4,5);\ninsert into t1 values (4,5,6);\ninsert into t1 values (4,5,6);\ninsert into t1 values (1,1,2);\ncreate table t2 (a smallint, b bigint, c int);\ninsert into t2 values (1,2,3);\ninsert into t2 values (3,4,5);\ninsert into t2 values (1,2,1);\n\nmysql&gt; select * from t1 intersect select * from t2;\n+------+------+------+\n| a    | b    | c    |\n+------+------+------+\n|    1 |    2 |    3 |\n|    3 |    4 |    5 |\n+------+------+------+\n2 rows in set (0.01 sec)\n\nmysql&gt; select a, b from t1 intersect select b, c from t2;\n+------+------+\n| a    | b    |\n+------+------+\n|    4 |    5 |\n+------+------+\n1 row in set (0.01 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Query-Language/minus/","title":"MINUS","text":""},{"location":"MatrixOne/Reference/SQL-Reference/Data-Query-Language/minus/#description","title":"Description","text":"<p><code>MINUS</code> compares the result of two queries and returns the different rows in the first query that are not output by the second query.</p>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Query-Language/minus/#syntax","title":"Syntax","text":"<pre><code>SELECT column_list_1 FROM table_1\nMINUS\nSELECT columns_list_2 FROM table_2;\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Query-Language/minus/#examples","title":"Examples","text":"<ul> <li>Example 1</li> </ul> <pre><code>CREATE TABLE t1 (id INT PRIMARY KEY);\nCREATE TABLE t2 (id INT PRIMARY KEY);\nINSERT INTO t1 VALUES (1),(2),(3);\nINSERT INTO t2 VALUES (2),(3),(4);\n\nmysql&gt; SELECT id FROM t1 MINUS SELECT id FROM t2;\n+------+\n| id   |\n+------+\n|    1 |\n+------+\n</code></pre> <ul> <li>Example 2</li> </ul> <pre><code>drop table if exists t1;\ndrop table if exists t2;\ncreate table t1 (a smallint, b bigint, c int);\ninsert into t1 values (1,2,3);\ninsert into t1 values (1,2,3);\ninsert into t1 values (3,4,5);\ninsert into t1 values (4,5,6);\ninsert into t1 values (4,5,6);\ninsert into t1 values (1,1,2);\ncreate table t2 (a smallint, b bigint, c int);\ninsert into t2 values (1,2,3);\ninsert into t2 values (3,4,5);\ninsert into t2 values (1,2,1);\n\nmysql&gt; select * from t1 minus select * from t2;\n+------+------+------+\n| a    | b    | c    |\n+------+------+------+\n|    1 |    1 |    2 |\n|    4 |    5 |    6 |\n+------+------+------+\n\nmysql&gt; select a, b from t1 minus select b, c from t2;\n+------+------+\n| a    | b    |\n+------+------+\n|    3 |    4 |\n|    1 |    1 |\n|    1 |    2 |\n+------+------+\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Query-Language/select/","title":"SELECT","text":""},{"location":"MatrixOne/Reference/SQL-Reference/Data-Query-Language/select/#description","title":"Description","text":"<p>Retrieves data from a table.</p>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Query-Language/select/#syntax","title":"Syntax","text":"<pre><code>SELECT\n[ALL | DISTINCT ]\nselect_expr [, select_expr] [[AS] alias] ...\n[INTO variable [, ...]]\n[FROM table_references\n[WHERE where_condition]\n[GROUP BY {col_name | expr | position}\n[ASC | DESC]]\n[HAVING where_condition]\n[ORDER BY {col_name | expr | position}\n[ASC | DESC]] [ NULLS { FIRST | LAST } ]\n[LIMIT {[offset,] row_count | row_count OFFSET offset}]\n[FOR {UPDATE}]\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Query-Language/select/#explanations","title":"Explanations","text":"<p>The most commonly used clauses of <code>SELECT</code> statements are these:</p>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Query-Language/select/#select_expr","title":"<code>select_expr</code>","text":"<p>Each <code>select_expr</code> indicates a column that you want to retrieve. There must be at least one <code>select_expr</code>.</p> <p>The list of <code>select_expr</code> terms comprises the select list that indicates which columns to retrieve. Terms specify a column or expression or can use *-shorthand:</p> <ul> <li>A select list consisting only of a single unqualified * can be used as shorthand to select all columns from all tables:</li> </ul> <pre><code>SELECT * FROM t1\n</code></pre> <ul> <li><code>tbl_name.*</code> can be used as a qualified shorthand to select all columns from the named table:</li> </ul> <pre><code>SELECT t1.*, t2.* FROM t1\n</code></pre> <ul> <li>A <code>select_expr</code> can be given an alias using <code>AS</code> alias_name.</li> </ul>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Query-Language/select/#table_references","title":"<code>table_references</code>","text":"<ul> <li> <p>The <code>FROM table_references</code> clause indicates the table or tables from which to retrieve rows.</p> </li> <li> <p>You can refer to a table within the default database as <code>tbl_name</code>, or as <code>db_name.tbl_name</code> to specify a database explicitly. You can refer to a column as <code>col_name</code>, <code>tbl_name.col_name</code>, or <code>db_name.tbl_name.col_name</code>. You need not specify a <code>tbl_name</code> or <code>db_name.tbl_name</code> prefix for a column reference unless the reference would be ambiguous.</p> </li> <li> <p>A table reference can be aliased using <code>tbl_name AS alias_name</code> or <code>tbl_name alias_name</code>.</p> </li> </ul>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Query-Language/select/#where","title":"<code>WHERE</code>","text":"<p>The <code>WHERE</code> clause, if given, indicates the condition or conditions that rows must satisfy to be selected. <code>where_condition</code> is an expression that evaluates to true for each row to be selected. The statement selects all rows if there is no <code>WHERE</code> clause.</p>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Query-Language/select/#group-by","title":"<code>GROUP BY</code>","text":"<p>Columns selected for output can be referred to in ORDER BY and GROUP BY clauses using column names, column aliases, or column positions.</p> <p>Note</p> <ul> <li>In the <code>GROUP BY</code> or <code>HAVING</code> clauses, it is not allowed to use an alias to define another alias.</li> <li>In the <code>GROUP BY</code> or <code>HAVING</code> clauses, the SQL engine first attempts to group or filter by column names. If the corresponding column names are not found in these clauses, it checks if aliases match and use the matched aliases as a fallback.</li> <li>It is recommended to avoid ambiguous column references when using aliases in the <code>GROUP BY</code> or <code>HAVING</code> clauses. In such cases, the SQL engine looks for matching columns based on the aliases, and if multiple matches are found, it will raise an error.</li> <li>In the <code>ORDER BY</code> clause, sorting is first attempted using aliases. If aliases are not found, the SQL engine attempts sorting using column names.</li> </ul>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Query-Language/select/#having","title":"<code>HAVING</code>","text":"<p>The <code>HAVING</code> clause, like the <code>WHERE</code> clause, specifies selection conditions.</p>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Query-Language/select/#order-by","title":"<code>ORDER BY</code>","text":"<p>To sort in reverse order, add the DESC (descending) keyword to the name of the column in the <code>ORDER BY</code> clause that you are sorting by. The default is ascending order; this can be specified explicitly using the ASC keyword.</p>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Query-Language/select/#limit","title":"<code>LIMIT</code>","text":"<p>The <code>LIMIT</code> clause can be used to constrain the number of rows returned by the SELECT statement.</p>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Query-Language/select/#for-update","title":"<code>FOR UPDATE</code>","text":"<p><code>SELECT...FOR UPDATE</code> is mainly used to lock a set of data rows in transaction processing to prevent them from being modified by other concurrent transactions. This statement is most commonly used in \"read-modify-write\" scenarios. That is, when you need to read a data set, make changes to it, and then write the results back to the database, you don't want other transactions to modify this data set.</p> <p>Using <code>SELECT FOR UPDATE</code> in a transaction can lock the selected rows until the transaction ends (either by commit or rollback) and the locks are released. This way, other transactions attempting to modify these rows are blocked until the first transaction is complete.</p> <p>See the example below:</p> <pre><code>START TRANSACTION;\n\nSELECT * FROM Orders\nWHERE OrderID = 1\nFOR UPDATE;\n</code></pre> <p>In the above transaction, the <code>SELECT FOR UPDATE</code> statement selects and locks the row with <code>OrderID</code> 1 in the <code>Orders</code> table. Other transactions cannot modify this row before the transaction ends. After you have finished modifying this row, you can commit the transaction to release the lock:</p> <pre><code>UPDATE Orders\nSET Quantity = Quantity - 1\nWHERE OrderID = 1;\n\nCOMMIT;\n</code></pre> <p>The above <code>UPDATE</code> statement modifies the <code>Quantity</code> value of the selected row, and then the <code>COMMIT</code> statement commits the transaction and releases the lock. At this point, other blocked transactions can continue. If you decide not to make any changes, you can use the <code>ROLLBACK</code> statement to end the transaction and release the lock.</p>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Query-Language/select/#examples","title":"Examples","text":"<pre><code>create table t1 (spID int,userID int,score smallint);\ninsert into t1 values (1,1,1);\ninsert into t1 values (2,2,2);\ninsert into t1 values (2,1,4);\ninsert into t1 values (3,3,3);\ninsert into t1 values (1,1,5);\ninsert into t1 values (4,6,10);\ninsert into t1 values (5,11,99);\ninsert into t1 values (null,0,99);\n\nmysql&gt; SELECT * FROM t1 WHERE spID&gt;2 AND userID &lt;2 || userID &gt;=2 OR userID &lt; 2 LIMIT 3;\n+------+--------+-------+\n| spid | userid | score |\n+------+--------+-------+\n| NULL |      0 |    99 |\n|    1 |      1 |     1 |\n|    2 |      2 |     2 |\n+------+--------+-------+\n\nmysql&gt; SELECT userID,MAX(score) max_score FROM t1 WHERE userID &lt;2 || userID &gt; 3 GROUP BY userID ORDER BY max_score;\n+--------+-----------+\n| userid | max_score |\n+--------+-----------+\n|      1 |         5 |\n|      6 |        10 |\n|      0 |        99 |\n|     11 |        99 |\n+--------+-----------+\n\nmysql&gt; select userID,count(score) from t1 group by userID having count(score)&gt;1 order by userID;\n+--------+--------------+\n| userid | count(score) |\n+--------+--------------+\n|      1 |            3 |\n+--------+--------------+\n\nmysql&gt; select userID,count(score) from t1 where userID&gt;2 group by userID having count(score)&gt;1 order by userID;\nEmpty set (0.01 sec)s\n\nmysql&gt; select * from t1 order by spID asc nulls last;\n+------+--------+-------+\n| spid | userid | score |\n+------+--------+-------+\n|    1 |      1 |     1 |\n|    1 |      1 |     5 |\n|    2 |      2 |     2 |\n|    2 |      1 |     4 |\n|    3 |      3 |     3 |\n|    4 |      6 |    10 |\n|    5 |     11 |    99 |\n| NULL |      0 |    99 |\n+------+--------+-------+\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Query-Language/select/#constraints","title":"Constraints","text":"<ol> <li><code>SELECT...FOR UPDATE</code> currently only supports single-table queries.</li> <li><code>INTO OUTFILE</code> is limitedly support.</li> <li>When the table name is <code>DUAL</code>, it is not supported to execute <code>SELECT xx from DUAL</code> directly into the corresponding database (<code>USE DBNAME</code>), but you can specify the database name to query the table <code>DUAL</code> by using <code>SELECT xx from DBNAME.DUAL</code>.</li> </ol>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Query-Language/union-intersect-minus-overview/","title":"Combining Queries (UNION,\u00a0INTERSECT,\u00a0MINUS)","text":"<p>The results of the two queries can be combined using the set operations <code>UNION</code>, <code>INTERSECT</code>, and <code>MINUS</code>. The syntax is as below:</p> <pre><code>query1 UNION [ALL] query2\nquery1 INTERSECT [ALL] query2\nquery1 MINUS [ALL] query2\n</code></pre> <p>Tips: Where query1 and query2 are queries that can use any of the features discussed up to this point.</p> <p><code>UNION</code> effectively appends the result of query2 to the result of query1 (although there is no guarantee that this is the order in which the rows are returned). Furthermore, it eliminates duplicate rows from its result, in the same way as <code>DISTINCT</code>, unless <code>UNION ALL</code> is used.</p> <p><code>INTERSECT</code> returns all rows in both the result of query1 and query2. Duplicate rows are eliminated unless <code>INTERSECT ALL</code> is used.</p> <p><code>MINUS</code> returns all rows in the result of query1 but not in query2. (This is sometimes called the difference between two queries.) Again, duplicates are eliminated unless <code>MINUS ALL</code> is used.</p> <p>To calculate the union, intersection, or difference of two queries, the two queries must be \"union compatible\", which means that they return the same number of columns and the corresponding columns have compatible data types.</p> <p>Set operations can be combined, for example:</p> <pre><code>query1 UNION query2 MINUS query3\n</code></pre> <p>which is equivalent to:</p> <pre><code>(query1 UNION query2) MINUS query3\n</code></pre> <p>As shown here, you can use parentheses to control the order of evaluation. Without parentheses, <code>UNION</code> and <code>MINUS</code> associate left-to-right, but <code>INTERSECT</code> binds more tightly than those two operators. Thus</p> <pre><code>query1 UNION query2 INTERSECT query3\n</code></pre> <p>that means:</p> <pre><code>query1 UNION (query2 INTERSECT query3)\n</code></pre> <p>You can also surround an individual query with parentheses. This is important if the query needs to use any of the clauses discussed in the following sections, such as <code>LIMIT</code>. Without parentheses, you'll get a syntax error, or else the clause will be understood as applying to the output of the set operation rather than one of its inputs. For example:</p> <pre><code>SELECT a FROM b UNION SELECT x FROM y LIMIT 10\n</code></pre> <p>is accepted, but it means:</p> <pre><code>(SELECT a FROM b UNION SELECT x FROM y) LIMIT 10\n</code></pre> <p>not as below:</p> <pre><code>SELECT a FROM b UNION (SELECT x FROM y LIMIT 10)\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Query-Language/union-intersect-minus-overview/#reference","title":"Reference","text":"<p>For more information on the single syntax as above, see:</p> <ul> <li>UNION</li> <li>INTERSECT</li> <li>MINUS</li> </ul>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Query-Language/union/","title":"UNION","text":""},{"location":"MatrixOne/Reference/SQL-Reference/Data-Query-Language/union/#description","title":"Description","text":"<p><code>UNION</code> combines the result from multiple <code>SELECT</code> statements into a single result set.</p>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Query-Language/union/#syntax","title":"Syntax","text":"<pre><code>SELECT ... UNION [ALL | DISTINCT] SELECT ... [UNION [ALL | DISTINCT] SELECT ...]\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Query-Language/union/#arguments","title":"Arguments","text":""},{"location":"MatrixOne/Reference/SQL-Reference/Data-Query-Language/union/#union-distinct-and-union-all","title":"<code>UNION [DISTINCT]</code> and <code>UNION ALL</code>","text":"<p>By default, duplicate rows are removed from the <code>UNION</code> results.  <code>UNION</code> is used as the same as <code>UNION [DISTINCT]</code>.</p> <p>Combining the result sets of two or more queries using the UNION operator requires the following conditions:</p> <ul> <li> <p>All <code>SELECT</code> statements must have the same number and order of columns.</p> </li> <li> <p>Data types must be same or convertible.</p> </li> </ul> <p>With <code>UNION ALL</code>, repeated lines (if available) are retained in the result.</p>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Query-Language/union/#order-by-and-limit-in-union","title":"<code>ORDER BY</code> and <code>LIMIT</code> In <code>UNION</code>","text":"<p>To apply an<code>ORDER BY</code> or <code>LIMIT</code> clause to an individual <code>SELECT</code>, parenthesize the <code>SELECT</code> and place the clause inside the parentheses:</p> <p>Use of <code>ORDER BY</code> for individual <code>SELECT</code> statements implies nothing about the order in which the rows appear in the final result because UNION by default produces an unordered set of rows. Therefore, <code>ORDER BY</code> in this context typically is used in conjunction with LIMIT, to determine the subset of the selected rows to retrieve for the <code>SELECT</code>, even though it does not necessarily affect the order of those rows in the final UNION result.</p> <p>For example:</p> <pre><code>(SELECT a FROM t1 WHERE a=10 AND B=1 ORDER BY a LIMIT 10)\nUNION\n(SELECT a FROM t2 WHERE a=11 AND B=2 ORDER BY a LIMIT 10);\n</code></pre> <p>Or:</p> <pre><code>(SELECT a FROM t1 WHERE a=10 AND B=1)\nUNION\n(SELECT a FROM t2 WHERE a=11 AND B=2)\nORDER BY a LIMIT 10;\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Query-Language/union/#examples","title":"Examples","text":"<pre><code>CREATE TABLE t1 (id INT PRIMARY KEY);\nCREATE TABLE t2 (id INT PRIMARY KEY);\nINSERT INTO t1 VALUES (1),(2),(3);\nINSERT INTO t2 VALUES (2),(3),(4);\n\nmysql&gt; SELECT id FROM t1 UNION SELECT id FROM t2;\n+------+\n| id   |\n+------+\n|    4 |\n|    1 |\n|    2 |\n|    3 |\n+------+\n\nmysql&gt; SELECT id FROM t1 UNION ALL SELECT id FROM t2;\n+------+\n| id   |\n+------+\n|    1 |\n|    2 |\n|    3 |\n|    2 |\n|    3 |\n|    4 |\n+------+\n</code></pre> <pre><code>drop table t1;\nCREATE TABLE t1 (a INT, b INT);\nINSERT INTO t1 VALUES ROW(4,-2),ROW(5,9),ROW(10,1),ROW(11,2),ROW(13,5);\ndrop table t2;\nCREATE TABLE t2 (a INT, b INT);\nINSERT INTO t2 VALUES ROW(1,2),ROW(3,4),ROW(11,2),ROW(10,3),ROW(15,8);\n\nmysql&gt; (SELECT a FROM t1 WHERE a=10 AND B=1 ORDER BY a LIMIT 10) UNION (SELECT a FROM t2 WHERE a=11 AND B=2 ORDER BY a LIMIT 10);\n+------+\n| a    |\n+------+\n|   10 |\n|   11 |\n+------+\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Query-Language/with-cte/","title":"WITH (Common Table Expressions)","text":""},{"location":"MatrixOne/Reference/SQL-Reference/Data-Query-Language/with-cte/#description","title":"Description","text":"<p>Common Table Expression (CTE) is a temporary result set defined within the scope of a single statement, valid only during the execution of the query. It can self-reference and can be referenced multiple times within the same query. Its purpose is simplifying complex queries, enhance code readability, and improve maintainability. A CTE can be seen as a temporary view that exists only for the query's execution and is not visible to external queries.</p> <p>Once defined, a CTE can be referenced like a <code>SELECT</code>, <code>INSERT</code>, <code>UPDATE</code>, <code>DELETE</code>, or <code>CREATE VIEW</code> statement.</p> <p>The <code>WITH</code> clause is used to specify Common Table Expressions, and the <code>WITH</code> clause can include one or more comma-separated clauses. Each clause provides a subquery that generates a result set and associates a name with the subquery.</p> <p>Use Cases:</p> <ul> <li>CTEs can reuse the same subquery in multiple places, avoiding redundant logic.</li> <li>They can simplify recursive queries, such as querying tree-structured data.</li> <li>Complex queries can be broken down into smaller parts using CTEs, making the query logic clearer and more understandable.</li> </ul> <p>Common Table Expressions are divided into two types: non-recursive and recursive:</p> <ul> <li> <p>Non-recursive CTE refers to an expression in which the CTE does not reference itself. It is used to build a one-time temporary result set and does not involve recursion.</p> </li> <li> <p>Recursive CTE refers to an expression in which the CTE references itself. It handles data with recursive structures, such as trees or graphs. A recursive CTE includes a base query (initial condition) in its definition, then performs recursive operations on the result of that base query until a stop condition is met.</p> </li> </ul>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Query-Language/with-cte/#non-recursive-cte","title":"Non-recursive CTE","text":""},{"location":"MatrixOne/Reference/SQL-Reference/Data-Query-Language/with-cte/#syntax","title":"Syntax","text":"<pre><code>WITH &lt;query_name&gt; AS (\n    &lt;query_definition&gt;\n)\nSELECT ... FROM &lt;query_name&gt;;\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Query-Language/with-cte/#explanations","title":"Explanations","text":"<ul> <li> <p><code>&lt;query_name&gt;</code>: Specifies the temporary name assigned to the CTE result set. It can be any valid identifier, similar to a table or column name.</p> </li> <li> <p><code>&lt;query_definition&gt;</code>: The query statement defines the CTE result set. It can be any valid <code>SELECT</code> query used to create the result set of the CTE.</p> </li> <li> <p><code>SELECT ... FROM &lt;query_name&gt;</code>: This is the query executed on the CTE, where you can use the name of the CTE.</p> </li> </ul>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Query-Language/with-cte/#recursive-cte","title":"Recursive CTE","text":""},{"location":"MatrixOne/Reference/SQL-Reference/Data-Query-Language/with-cte/#syntax_1","title":"Syntax","text":"<pre><code>WITH RECURSIVE &lt;query_name&gt; AS (\n    &lt;query_definition&gt;\n)\nSELECT ... FROM &lt;query_name&gt;;\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Query-Language/with-cte/#explanations_1","title":"Explanations","text":"<ul> <li> <p><code>WITH RECURSIVE</code>: Indicates that this is a recursive CTE.</p> </li> <li> <p><code>&lt;query_name&gt;</code>: Specifies the temporary name assigned to the result set of the recursive CTE. It can be any valid identifier, similar to a table or column name.</p> </li> <li> <p><code>&lt;query_definition&gt;</code>: This consists of two parts in the context of a recursive CTE:</p> <ul> <li>Initial part: Defines the recursion's initial condition and result set.</li> <li>Recursive function: Defines how to recursively generate the next round of the result set from the initial result set.</li> </ul> </li> <li> <p><code>SELECT ... FROM &lt;query_name&gt;</code>: Use the name of the recursive CTE to query the recursive CTE.</p> </li> </ul>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Query-Language/with-cte/#guidelines-for-using-recursive-ctes","title":"Guidelines for Using Recursive CTEs","text":""},{"location":"MatrixOne/Reference/SQL-Reference/Data-Query-Language/with-cte/#anchor-and-recursive-members","title":"Anchor and Recursive Members","text":"<p>A recursive common table expression (CTE) must consist of at least two query definitions: an anchor member and a recursive member. The anchor member should come before the first recursive member, and you can define multiple anchor and recursive members. All CTE query definitions are considered anchor members unless they reference the CTE itself.</p> <p>Suppose you have a table named <code>Employee</code> that contains employee information, including fields like <code>EmployeeID</code>, <code>Name</code>, and <code>ManagerID</code>, representing the employee's ID, name, and ID of their manager. You can use a recursive CTE to query the hierarchical relationship between employees and subordinates.</p> <p>Assuming the table data is as follows:</p> EmployeeID Name ManagerID 1 Alice NULL 2 Bob 1 3 Charlie 1 4 David 2 5 Eve 2 6 Frank 3 <p>Here's an example of using a recursive CTE to query the hierarchical relationship between employees and their subordinates:</p> <pre><code>WITH RECURSIVE EmployeeHierarchy AS (\n-- Anchor member: Find top-level employees\nSELECT EmployeeID, Name, ManagerID, 0 AS Level\nFROM Employee\nWHERE ManagerID IS NULL\n\nUNION ALL\n\n-- Recursive member: Recursively query subordinate employees\nSELECT e.EmployeeID, e.Name, e.ManagerID, eh.Level + 1\nFROM Employee AS e\nJOIN EmployeeHierarchy AS eh ON e.ManagerID = eh.EmployeeID\n)\nSELECT Name, Level\nFROM EmployeeHierarchy;\n</code></pre> <p>In the above example:</p> <ul> <li>The anchor member selects top-level employees (with <code>ManagerID</code> as NULL) and sets their level (<code>Level</code>) to 0.</li> <li>The recursive member queries subordinate employees based on the previous round's results (<code>EmployeeHierarchy</code>), incrementing the level.</li> <li>The final query uses <code>SELECT</code> to retrieve employee names and levels from the recursive CTE.</li> </ul> <p>Executing this query will provide information about the hierarchical relationship between employees and their subordinates. Both anchor and recursive members together form the structure of a recursive query. On the other hand, a non-recursive CTE is used to create a temporary result set with a single query definition, and you only need to reference this CTE in your query without concerning anchor and recursive members.</p>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Query-Language/with-cte/#operators-and-statement-requirements","title":"Operators and Statement Requirements","text":"<ul> <li> <p>Set Operators: Anchor members must be combined using set operators (such as <code>UNION ALL</code>, <code>UNION</code>, <code>INTERSECT</code>, or <code>EXCEPT</code>). Only <code>UNION ALL</code> is allowed between the last anchor member and the first recursive member, as well as when combining multiple recursive members.</p> </li> <li> <p>Column Matching: The number of columns in anchor and recursive members must be the same.</p> </li> <li> <p>Data Types: Columns in the recursive member must have the same data types as the corresponding columns in the anchor member.</p> </li> <li> <p>FROM Clause: The FROM clause of a recursive member can only reference the CTE expression_name once.</p> </li> <li> <p>Unsupported Features: Certain features are not allowed in the CTE_query_definition of a recursive member, including:</p> <ul> <li>Using the <code>SELECT DISTINCT</code> keyword for distinct queries.</li> <li>Using <code>GROUP BY</code> to group results.</li> <li>Using <code>HAVING</code> to filter results after grouping.</li> <li>Scalar aggregation applies an aggregate function (like <code>SUM</code>, <code>AVG</code>, etc.) to a set of rows and returns a single value.</li> <li>Outer join operations like <code>LEFT</code>, <code>RIGHT</code>, and <code>OUTER JOIN</code> (though <code>INNER JOIN</code> is allowed).</li> <li>Subqueries.</li> </ul> </li> </ul>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Query-Language/with-cte/#examples","title":"Examples","text":"<ul> <li>Non-recursive CTE example:</li> </ul> <pre><code>CREATE TABLE employees (\nid INT PRIMARY KEY,\nname VARCHAR(50),\nsalary INT\n);\n\nINSERT INTO employees (id, name, salary) VALUES\n(1, 'Alice', 50000),\n(2, 'Bob', 60000),\n(3, 'Charlie', 75000),\n(4, 'David', 55000),\n(5, 'Eve', 80000);\n\n-- Query employees whose salary is higher than the average salary\nmysql&gt; WITH avg_salary AS (\nSELECT AVG(salary) AS avg_salary FROM employees)\nSELECT name, salary\nFROM employees\nJOIN avg_salary ON salary &gt; avg_salary.avg_salary;\n+---------+--------+\n| name    | salary |\n+---------+--------+\n| Charlie |  75000 |\n| Eve     |  80000 |\n+---------+--------+\n2 rows in set (0.00 sec)\n</code></pre> <ul> <li>Recursive CTE example:</li> </ul> <pre><code>CREATE TABLE employees_hierarchy (\nid INT PRIMARY KEY,\nname VARCHAR(50),\nmanager_id INT\n);\n\nINSERT INTO employees_hierarchy (id, name, manager_id) VALUES\n(1, 'Alice', NULL),\n(2, 'Bob', 1),\n(3, 'Charlie', 1),\n(4, 'David', 2),\n(5, 'Eve', 2),\n(6, 'Frank', 3);\n\n-- Query an employee and all his employees\nmysql&gt; WITH RECURSIVE employee_hierarchy_cte (id, name, manager_id, level) AS (\nSELECT id, name, manager_id, 0\nFROM employees_hierarchy\nWHERE name = 'Alice'\nUNION ALL\nSELECT e.id, e.name, e.manager_id, eh.level + 1\nFROM employees_hierarchy AS e\nJOIN employee_hierarchy_cte AS eh ON e.manager_id = eh.id\n)\nSELECT name, level\nFROM employee_hierarchy_cte;\n+---------+-------+\n| name    | level |\n+---------+-------+\n| Alice   |     0 |\n| Bob     |     1 |\n| Charlie |     1 |\n| David   |     2 |\n| Eve     |     2 |\n| Frank   |     2 |\n+---------+-------+\n6 rows in set (0.00 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Query-Language/join/cross-join/","title":"CROSS JOIN","text":""},{"location":"MatrixOne/Reference/SQL-Reference/Data-Query-Language/join/cross-join/#grammar-description","title":"Grammar description","text":"<p><code>CROSS JOIN</code> is used to implement the Cartesian product of two tables, which is to generate a combination of all rows in both tables.</p>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Query-Language/join/cross-join/#grammar-structure","title":"Grammar structure","text":"<pre><code>&gt;SELECT column_list\nFROM table1\nCROSS JOIN table2;\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Query-Language/join/cross-join/#examples","title":"Examples","text":"<pre><code>CREATE TABLE Colors (\ncolor_id INT AUTO_INCREMENT,\ncolor_name VARCHAR(50),\nPRIMARY KEY (color_id)\n);\n\nCREATE TABLE Fruits (\nfruit_id INT AUTO_INCREMENT,\nfruit_name VARCHAR(50),\nPRIMARY KEY (fruit_id)\n);\n\nINSERT INTO Colors (color_name) VALUES ('Red'), ('Green'), ('Blue');\nINSERT INTO Fruits (fruit_name) VALUES ('Apple'), ('Banana'), ('Cherry');\n\nmysql&gt; SELECT c.color_name, f.fruit_name FROM Colors c CROSS JOIN Fruits f;--Generate a result set with all colors and all fruit combinations\n+------------+------------+\n| color_name | fruit_name |\n+------------+------------+\n| Red        | Apple      |\n| Green      | Apple      |\n| Blue       | Apple      |\n| Red        | Banana     |\n| Green      | Banana     |\n| Blue       | Banana     |\n| Red        | Cherry     |\n| Green      | Cherry     |\n| Blue       | Cherry     |\n+------------+------------+\n9 rows in set (0.00 sec)\n\nmysql&gt; SELECT c.color_name,f.fruit_name FROM Colors c CROSS JOIN Fruits f WHERE c.color_name = 'Red' AND f.fruit_name = 'Apple';--Filter out combinations of specific colors and specific fruits\n+------------+------------+\n| color_name | fruit_name |\n+------------+------------+\n| Red        | Apple      |\n+------------+------------+\n1 row in set (0.01 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Query-Language/join/full-join/","title":"FULL JOIN","text":""},{"location":"MatrixOne/Reference/SQL-Reference/Data-Query-Language/join/full-join/#description","title":"Description","text":"<p>The <code>FULL JOIN</code>  keyword returns all records when there is a match in left (table1) or right (table2) table records.</p> <p>note</p> <p><code>FULL OUTER JOIN</code> and <code>FULL JOIN</code> are the same.</p>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Query-Language/join/full-join/#syntax","title":"Syntax","text":"<pre><code>&gt; SELECT column_name(s)\nFROM table1\nFULL OUTER JOIN table2\nON table1.column_name=table2.column_name;\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Query-Language/join/full-join/#examples","title":"Examples","text":"<pre><code>drop table if exists t1,t2,t3;\ncreate table t1 (libname1 varchar(21) not null primary key, city varchar(20));\ncreate table t2 (isbn2 varchar(21) not null primary key, author varchar(20), title varchar(60));\ncreate table t3 (isbn3 varchar(21) not null, libname3 varchar(21) not null, quantity int);\ninsert into t2 values ('001','Daffy','Aducklife');\ninsert into t2 values ('002','Bugs','Arabbitlife');\ninsert into t2 values ('003','Cowboy','Lifeontherange');\ninsert into t2 values ('000','Anonymous','Wannabuythisbook?');\ninsert into t2 values ('004','BestSeller','OneHeckuvabook');\ninsert into t2 values ('005','EveryoneBuys','Thisverybook');\ninsert into t2 values ('006','SanFran','Itisasanfranlifestyle');\ninsert into t2 values ('007','BerkAuthor','Cool.Berkley.the.book');\ninsert into t3 values ('000','NewYorkPublicLibra',1);\ninsert into t3 values ('001','NewYorkPublicLibra',2);\ninsert into t3 values ('002','NewYorkPublicLibra',3);\ninsert into t3 values ('003','NewYorkPublicLibra',4);\ninsert into t3 values ('004','NewYorkPublicLibra',5);\ninsert into t3 values ('005','NewYorkPublicLibra',6);\ninsert into t3 values ('006','SanFransiscoPublic',5);\ninsert into t3 values ('007','BerkeleyPublic1',3);\ninsert into t3 values ('007','BerkeleyPublic2',3);\ninsert into t3 values ('001','NYC Lib',8);\ninsert into t1 values ('NewYorkPublicLibra','NewYork');\ninsert into t1 values ('SanFransiscoPublic','SanFran');\ninsert into t1 values ('BerkeleyPublic1','Berkeley');\ninsert into t1 values ('BerkeleyPublic2','Berkeley');\ninsert into t1 values ('NYCLib','NewYork');\n\nmysql&gt; select city,libname1,count(libname1) as a from t3 full join t1 on libname1=libname3 join t2 on isbn3=isbn2 group by city,libname1;\n+----------+--------------------+------+\n| city     | libname1           | a    |\n+----------+--------------------+------+\n| NewYork  | NewYorkPublicLibra |    6 |\n| SanFran  | SanFransiscoPublic |    1 |\n| Berkeley | BerkeleyPublic1    |    1 |\n| Berkeley | BerkeleyPublic2    |    1 |\n+----------+--------------------+------+\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Query-Language/join/inner-join/","title":"INNER JOIN","text":""},{"location":"MatrixOne/Reference/SQL-Reference/Data-Query-Language/join/inner-join/#description","title":"Description","text":"<p>The <code>INNER JOIN</code> keyword selects records that have matching values in both tables.(Same as <code>JOIN</code>)</p>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Query-Language/join/inner-join/#syntax","title":"Syntax","text":"<pre><code>&gt; SELECT column_name(s)\nFROM table1\nINNER JOIN table2\nON table1.column_name = table2.column_name;\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Query-Language/join/inner-join/#examples","title":"Examples","text":"<pre><code>drop table if exists t1,t2,t3;\ncreate table t1 (libname1 varchar(21) not null primary key, city varchar(20));\ncreate table t2 (isbn2 varchar(21) not null primary key, author varchar(20), title varchar(60));\ncreate table t3 (isbn3 varchar(21) not null, libname3 varchar(21) not null, quantity int);\ninsert into t2 values ('001','Daffy','Aducklife');\ninsert into t2 values ('002','Bugs','Arabbitlife');\ninsert into t2 values ('003','Cowboy','Lifeontherange');\ninsert into t2 values ('000','Anonymous','Wannabuythisbook?');\ninsert into t2 values ('004','BestSeller','OneHeckuvabook');\ninsert into t2 values ('005','EveryoneBuys','Thisverybook');\ninsert into t2 values ('006','SanFran','Itisasanfranlifestyle');\ninsert into t2 values ('007','BerkAuthor','Cool.Berkley.the.book');\ninsert into t3 values ('000','NewYorkPublicLibra',1);\ninsert into t3 values ('001','NewYorkPublicLibra',2);\ninsert into t3 values ('002','NewYorkPublicLibra',3);\ninsert into t3 values ('003','NewYorkPublicLibra',4);\ninsert into t3 values ('004','NewYorkPublicLibra',5);\ninsert into t3 values ('005','NewYorkPublicLibra',6);\ninsert into t3 values ('006','SanFransiscoPublic',5);\ninsert into t3 values ('007','BerkeleyPublic1',3);\ninsert into t3 values ('007','BerkeleyPublic2',3);\ninsert into t3 values ('001','NYC Lib',8);\ninsert into t1 values ('NewYorkPublicLibra','NewYork');\ninsert into t1 values ('SanFransiscoPublic','SanFran');\ninsert into t1 values ('BerkeleyPublic1','Berkeley');\ninsert into t1 values ('BerkeleyPublic2','Berkeley');\ninsert into t1 values ('NYCLib','NewYork');\n\nmysql&gt; select city,libname1,count(libname1) as a from t3 join t1 on libname1=libname3 join t2 on isbn3=isbn2 group by city,libname1;\n\n+----------+--------------------+------+\n| city     | libname1           | a    |\n+----------+--------------------+------+\n| NewYork  | NewYorkPublicLibra |    6 |\n| SanFran  | SanFransiscoPublic |    1 |\n| Berkeley | BerkeleyPublic1    |    1 |\n| Berkeley | BerkeleyPublic2    |    1 |\n+----------+--------------------+------+\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Query-Language/join/join/","title":"JOIN","text":""},{"location":"MatrixOne/Reference/SQL-Reference/Data-Query-Language/join/join/#description","title":"Description","text":"<p>The <code>JOIN</code> statement is used to combine rows from two or more tables.</p> <p>The following figure shows seven usages of <code>LEFT JOIN</code>, <code>RIGHT JOIN</code>, <code>INNER JOIN</code>, and <code>OUTER JOIN</code>.</p> <ul> <li><code>LEFT JOIN</code></li> </ul> SELECT [select_list] FROM TableA A LEFT JOIN TableB B ON A.Key=B.Key SELECT [select_list] FROM TableA A LEFT JOIN TableB B ON A.Key=B.Key WHERE B.Key IS NULL <ul> <li><code>RIGHT JOIN</code></li> </ul> SELECT [select_list] FROM TableA A RIGHT JOIN TableB B ON A.Key=B.Key SELECT [select_list] FROM TableA A RIGHT JOIN TableB B ON A.Key=B.Key WHERE A.Key IS NULL <ul> <li><code>INNER JOIN</code></li> </ul> SELECT [select_list] FROM TableA A INNER JOIN TableB B ON A.Key=B.Key <ul> <li><code>FULL JOIN</code></li> </ul> SELECT [select_list] FROM TableA A FULL OUTER JOIN TableB B ON A.Key=B.Key SELECT [select_list] FROM TableA A FULL OUTER JOIN TableB B ON A.Key=B.Key WHERE A.Key IS NULL OR B.Key IS NULL <p>For more information, see the reference below:</p> <ul> <li>LEFT JOIN</li> <li>RIGHT JOIN</li> <li>INNER JOIN</li> <li>FULL JOIN</li> <li>OUTER JOIN</li> <li>NATURAL JOIN</li> </ul>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Query-Language/join/left-join/","title":"LEFT JOIN","text":""},{"location":"MatrixOne/Reference/SQL-Reference/Data-Query-Language/join/left-join/#description","title":"Description","text":"<p>The <code>LEFT JOIN</code> keyword returns all records from the left table (table1), and the matching records from the right table (table2). The result is 0 records from the right side, if there is no match.</p> <p>note</p> <p>In some databases <code>LEFT JOIN</code> is called <code>LEFT OUTER JOIN</code>.</p>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Query-Language/join/left-join/#syntax","title":"Syntax","text":"<pre><code>&gt; SELECT column_name(s)\nFROM table1\nLEFT JOIN table2\nON table1.column_name=table2.column_name;\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Query-Language/join/left-join/#examples","title":"Examples","text":"<pre><code>drop table if exists t1,t2,t3;\ncreate table t1 (libname1 varchar(21) not null primary key, city varchar(20));\ncreate table t2 (isbn2 varchar(21) not null primary key, author varchar(20), title varchar(60));\ncreate table t3 (isbn3 varchar(21) not null, libname3 varchar(21) not null, quantity int);\ninsert into t2 values ('001','Daffy','Aducklife');\ninsert into t2 values ('002','Bugs','Arabbitlife');\ninsert into t2 values ('003','Cowboy','Lifeontherange');\ninsert into t2 values ('000','Anonymous','Wannabuythisbook?');\ninsert into t2 values ('004','BestSeller','OneHeckuvabook');\ninsert into t2 values ('005','EveryoneBuys','Thisverybook');\ninsert into t2 values ('006','SanFran','Itisasanfranlifestyle');\ninsert into t2 values ('007','BerkAuthor','Cool.Berkley.the.book');\ninsert into t3 values ('000','NewYorkPublicLibra',1);\ninsert into t3 values ('001','NewYorkPublicLibra',2);\ninsert into t3 values ('002','NewYorkPublicLibra',3);\ninsert into t3 values ('003','NewYorkPublicLibra',4);\ninsert into t3 values ('004','NewYorkPublicLibra',5);\ninsert into t3 values ('005','NewYorkPublicLibra',6);\ninsert into t3 values ('006','SanFransiscoPublic',5);\ninsert into t3 values ('007','BerkeleyPublic1',3);\ninsert into t3 values ('007','BerkeleyPublic2',3);\ninsert into t3 values ('001','NYC Lib',8);\ninsert into t1 values ('NewYorkPublicLibra','NewYork');\ninsert into t1 values ('SanFransiscoPublic','SanFran');\ninsert into t1 values ('BerkeleyPublic1','Berkeley');\ninsert into t1 values ('BerkeleyPublic2','Berkeley');\ninsert into t1 values ('NYCLib','NewYork');\n\nmysql&gt; select city,libname1,count(libname1) as a from t3 left join t1 on libname1=libname3 join t2 on isbn3=isbn2 group by city,libname1;\n+----------+--------------------+------+\n| city     | libname1           | a    |\n+----------+--------------------+------+\n| NewYork  | NewYorkPublicLibra |    6 |\n| SanFran  | SanFransiscoPublic |    1 |\n| Berkeley | BerkeleyPublic1    |    1 |\n| Berkeley | BerkeleyPublic2    |    1 |\n| NULL     | NULL               |    0 |\n+----------+--------------------+------+\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Query-Language/join/natural-join/","title":"NATURAL JOIN","text":""},{"location":"MatrixOne/Reference/SQL-Reference/Data-Query-Language/join/natural-join/#description","title":"Description","text":"<p>The <code>NATURAL JOIN</code> of two tables is defined to be semantically equivalent to an <code>INNER JOIN</code> or a <code>LEFT JOIN</code> with a <code>USING</code> clause that names all columns that exist in both tables.</p>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Query-Language/join/natural-join/#syntax","title":"Syntax","text":"<pre><code>&gt; SELECT table_column1, table_column2...\nFROM table_name1\nNATURAL JOIN table_name2;\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Query-Language/join/natural-join/#examples","title":"Examples","text":"<pre><code>create table t1(id int,desc1 varchar(50),desc2 varchar(50));\ncreate table t2(id int,desc3 varchar(50),desc4 varchar(50));\nINSERT INTO t1(id,desc1,desc2) VALUES(100,'desc11','desc12'),(101,'desc21','desc22'),(102,'desc31','desc32');\nINSERT INTO t2(id,desc3,desc4) VALUES(101,'desc41','desc42'),(103,'desc51','desc52'),(105,'desc61','desc62');\n\nmysql&gt; SELECT t1.id,t2.id,desc1,desc2,desc3,desc4 FROM t1 NATURAL JOIN t2;\n+------+------+--------+--------+--------+--------+\n| id   | id   | desc1  | desc2  | desc3  | desc4  |\n+------+------+--------+--------+--------+--------+\n|  101 |  101 | desc21 | desc22 | desc41 | desc42 |\n+------+------+--------+--------+--------+--------+\n1 row in set (0.00 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Query-Language/join/outer-join/","title":"OUTER JOIN","text":""},{"location":"MatrixOne/Reference/SQL-Reference/Data-Query-Language/join/outer-join/#description","title":"Description","text":"<p>When performing an <code>INNER JOIN</code>, rows from either table that are unmatched in the other table are not returned. In an <code>OUTER JOIN</code>, unmatched rows in one or both tables can be returned. There are a few types of outer joins:</p> <ul> <li><code>LEFT JOIN</code> returns only unmatched rows from the left table. For more information, see LEFT JOIN.</li> <li><code>RIGHT JOIN</code> returns only unmatched rows from the right table.For more information, see RIGHT JOIN.</li> <li><code>FULL OUTER JOIN</code> returns unmatched rows from both tables.For more information, see FULL JOIN.</li> </ul>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Query-Language/join/outer-join/#examples","title":"Examples","text":"<pre><code>create table t1 (a1 int, a2 char(3));\ninsert into t1 values(10,'aaa'), (10,null), (10,'bbb'), (20,'zzz');\ncreate table t2(a1 char(3), a2 int, a3 real);\ninsert into t2 values('AAA', 10, 0.5);\ninsert into t2 values('BBB', 20, 1.0);\n\nmysql&gt; select t1.a1, t1.a2, t2.a1, t2.a2 from t1 left outer join t2 on t1.a1=10;\n+------+------+------+------+\n| a1   | a2   | a1   | a2   |\n+------+------+------+------+\n|   10 | aaa  | AAA  |   10 |\n|   10 | aaa  | BBB  |   20 |\n|   10 | NULL | AAA  |   10 |\n|   10 | NULL | BBB  |   20 |\n|   10 | bbb  | AAA  |   10 |\n|   10 | bbb  | BBB  |   20 |\n|   20 | zzz  | NULL | NULL |\n+------+------+------+------+\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Query-Language/join/right-join/","title":"RIGHT JOIN","text":""},{"location":"MatrixOne/Reference/SQL-Reference/Data-Query-Language/join/right-join/#description","title":"Description","text":"<p>The <code>RIGHT JOIN</code> keyword returns all records from the right table (table2), and the matching records from the left table (table1). The result is <code>NULL</code> records from the left side, if there is no match.</p> <p>note</p> <p>In some databases <code>RIGHT JOIN</code> is called <code>RIGHT OUTER JOIN</code>.</p>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Query-Language/join/right-join/#syntax","title":"Syntax","text":"<pre><code>&gt; SELECT column_name(s)\nFROM table1\nRIGHT JOIN table2\nON table1.column_name=table2.column_name;\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Query-Language/join/right-join/#examples","title":"Examples","text":"<pre><code>drop table if exists t1,t2,t3;\ncreate table t1 (libname1 varchar(21) not null primary key, city varchar(20));\ncreate table t2 (isbn2 varchar(21) not null primary key, author varchar(20), title varchar(60));\ncreate table t3 (isbn3 varchar(21) not null, libname3 varchar(21) not null, quantity int);\ninsert into t2 values ('001','Daffy','Aducklife');\ninsert into t2 values ('002','Bugs','Arabbitlife');\ninsert into t2 values ('003','Cowboy','Lifeontherange');\ninsert into t2 values ('000','Anonymous','Wannabuythisbook?');\ninsert into t2 values ('004','BestSeller','OneHeckuvabook');\ninsert into t2 values ('005','EveryoneBuys','Thisverybook');\ninsert into t2 values ('006','SanFran','Itisasanfranlifestyle');\ninsert into t2 values ('007','BerkAuthor','Cool.Berkley.the.book');\ninsert into t3 values ('000','NewYorkPublicLibra',1);\ninsert into t3 values ('001','NewYorkPublicLibra',2);\ninsert into t3 values ('002','NewYorkPublicLibra',3);\ninsert into t3 values ('003','NewYorkPublicLibra',4);\ninsert into t3 values ('004','NewYorkPublicLibra',5);\ninsert into t3 values ('005','NewYorkPublicLibra',6);\ninsert into t3 values ('006','SanFransiscoPublic',5);\ninsert into t3 values ('007','BerkeleyPublic1',3);\ninsert into t3 values ('007','BerkeleyPublic2',3);\ninsert into t3 values ('001','NYC Lib',8);\ninsert into t1 values ('NewYorkPublicLibra','NewYork');\ninsert into t1 values ('SanFransiscoPublic','SanFran');\ninsert into t1 values ('BerkeleyPublic1','Berkeley');\ninsert into t1 values ('BerkeleyPublic2','Berkeley');\ninsert into t1 values ('NYCLib','NewYork');\n\nmysql&gt; select city,libname1,count(libname1) as a from t3 right join t1 on libname1=libname3 join t2 on isbn3=isbn2 group by city,libname1;\n+----------+--------------------+------+\n| city     | libname1           | a    |\n+----------+--------------------+------+\n| NewYork  | NewYorkPublicLibra |    6 |\n| SanFran  | SanFransiscoPublic |    1 |\n| Berkeley | BerkeleyPublic1    |    1 |\n| Berkeley | BerkeleyPublic2    |    1 |\n+----------+--------------------+------+\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Query-Language/subqueries/comparisons-using-subqueries/","title":"Comparisons Using Subqueries","text":""},{"location":"MatrixOne/Reference/SQL-Reference/Data-Query-Language/subqueries/comparisons-using-subqueries/#description","title":"Description","text":"<p>The most common use of a subquery is in the form:</p> <pre><code>non_subquery_operand comparison_operator (subquery)\n</code></pre> <p>Where comparison_operator is one of these operators:</p> <pre><code>=  &gt;  &lt;  &gt;=  &lt;=  &lt;&gt;  !=  &lt;=&gt;\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Query-Language/subqueries/comparisons-using-subqueries/#syntax","title":"Syntax","text":"<pre><code>&gt; SELECT column_name(s) FROM table_name WHERE 'a' = (SELECT column1 FROM t1)\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Query-Language/subqueries/comparisons-using-subqueries/#examples","title":"Examples","text":"<pre><code>create table t1 (a int);\ncreate table t2 (a int, b int);\ncreate table t3 (a int);\ncreate table t4 (a int not null, b int not null);\ninsert into t1 values (2);\ninsert into t2 values (1,7),(2,7);\ninsert into t4 values (4,8),(3,8),(5,9);\ninsert into t3 values (6),(7),(3);\n\nmysql&gt; select * from t3 where a = (select b from t2);\nERROR 1105 (HY000): scalar subquery returns more than 1 row\nmysql&gt; select * from t3 where a = (select distinct b from t2);\n+------+\n| a    |\n+------+\n|    7 |\n+------+\n1 rows in set (0.01 sec)\n\nmysql&gt; select a,b from t4 where a &gt; ( select a ,b from t2 where a&gt;1);\nERROR 1105 (HY000): Internal error: Unknow type TUPLE\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Query-Language/subqueries/derived-tables/","title":"Derived Tables","text":""},{"location":"MatrixOne/Reference/SQL-Reference/Data-Query-Language/subqueries/derived-tables/#description","title":"Description","text":"<p>This topic describes subqueries that occur as nested SELECT statements in the FROM clause of an outer SELECT statement. Such subqueries are sometimes called derived tables or table expressions because the outer query uses the results of the subquery as a data source.</p>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Query-Language/subqueries/derived-tables/#syntax","title":"Syntax","text":"<p>Every table in a FROM clause must have a name, therefore the [AS] name clause is mandatory. Any columns in the subquery select list must have unique names.</p> <pre><code>&gt; SELECT ... FROM (subquery) [AS] name ...\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Query-Language/subqueries/derived-tables/#examples","title":"Examples","text":"<pre><code>CREATE TABLE tb1 (c1 INT, c2 CHAR(5), c3 FLOAT);\nINSERT INTO tb1 VALUES (1, '1', 1.0);\nINSERT INTO tb1 VALUES (2, '2', 2.0);\nINSERT INTO tb1 VALUES (3, '3', 3.0);\n\nmysql&gt; select * from tb1;\n+------+------+--------+\n| c1   | c2   | c3     |\n+------+------+--------+\n|    1 | 1    | 1.0000 |\n|    2 | 2    | 2.0000 |\n|    3 | 3    | 3.0000 |\n+------+------+--------+\n3 rows in set (0.03 sec)\n\nmysql&gt; SELECT sc1, sc2, sc3 FROM (SELECT c1 AS sc1, c2 AS sc2, c3*3 AS sc3 FROM tb1) AS sb WHERE sc1 &gt; 1;\n+------+------+--------+\n| sc1  | sc2  | sc3    |\n+------+------+--------+\n|    2 | 2    | 6.0000 |\n|    3 | 3    | 9.0000 |\n+------+------+--------+\n2 rows in set (0.02 sec)\n</code></pre> <ul> <li>Subquery with Join:</li> </ul> <pre><code>create table t1 (libname1 varchar(21) not null primary key, city varchar(20));\ncreate table t2 (isbn2 varchar(21) not null primary key, author varchar(20), title varchar(60));\ncreate table t3 (isbn3 varchar(21) not null, libname3 varchar(21) not null, quantity int);\ninsert into t2 values ('001','Daffy','Aducklife');\ninsert into t2 values ('002','Bugs','Arabbitlife');\ninsert into t2 values ('003','Cowboy','Lifeontherange');\ninsert into t2 values ('000','Anonymous','Wannabuythisbook?');\ninsert into t2 values ('004','BestSeller','OneHeckuvabook');\ninsert into t2 values ('005','EveryoneBuys','Thisverybook');\ninsert into t2 values ('006','SanFran','Itisasanfranlifestyle');\ninsert into t2 values ('007','BerkAuthor','Cool.Berkley.the.book');\ninsert into t3 values('000','NewYorkPublicLibra',1);\ninsert into t3 values('001','NewYorkPublicLibra',2);\ninsert into t3 values('002','NewYorkPublicLibra',3);\ninsert into t3 values('003','NewYorkPublicLibra',4);\ninsert into t3 values('004','NewYorkPublicLibra',5);\ninsert into t3 values('005','NewYorkPublicLibra',6);\ninsert into t3 values('006','SanFransiscoPublic',5);\ninsert into t3 values('007','BerkeleyPublic1',3);\ninsert into t3 values('007','BerkeleyPublic2',3);\ninsert into t3 values('001','NYC Lib',8);\ninsert into t1 values ('NewYorkPublicLibra','NewYork');\ninsert into t1 values ('SanFransiscoPublic','SanFran');\ninsert into t1 values ('BerkeleyPublic1','Berkeley');\ninsert into t1 values ('BerkeleyPublic2','Berkeley');\ninsert into t1 values ('NYCLib','NewYork');\n\nmysql&gt; select * from (select city,libname1,count(libname1) as a from t3 join t1 on libname1=libname3 join t2 on isbn3=isbn2 group by city,libname1) sub ;\n+----------+--------------------+------+\n| city     | libname1           | a    |\n+----------+--------------------+------+\n| NewYork  | NewYorkPublicLibra |    6 |\n| SanFran  | SanFransiscoPublic |    1 |\n| Berkeley | BerkeleyPublic1    |    1 |\n| Berkeley | BerkeleyPublic2    |    1 |\n+----------+--------------------+------+\n4 rows in set (0.00 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Query-Language/subqueries/subquery-with-all/","title":"Subqueries with ALL","text":""},{"location":"MatrixOne/Reference/SQL-Reference/Data-Query-Language/subqueries/subquery-with-all/#description","title":"Description","text":"<p>The word <code>ALL</code>, which must follow a comparison operator, means \"return <code>TRUE</code> if the comparison is <code>TRUE</code> for <code>ALL</code> of the values in the column that the subquery returns.\":</p> <pre><code>operand comparison_operator ALL (subquery)\n</code></pre> <p>For example:</p> <pre><code>SELECT s1 FROM t1 WHERE s1 &gt; ALL (SELECT s1 FROM t2);\n</code></pre> <p>Suppose that there is a row in table t1 containing (10). The expression is <code>TRUE</code> if table t2 contains (-5,0,+5) because 10 is greater than all three values in t2. The expression is <code>FALSE</code> if table t2 contains (12,6,NULL,-100) because there is a single value 12 in table t2 that is greater than 10, and the result returns <code>Empty set</code>. The expression is unknown (that is, <code>NULL</code>) if table t2 contains (0,NULL,1).</p> <p>Finally, the expression is <code>TRUE</code> if table t2 is empty. So, the following expression is <code>TRUE</code> when table t2 is empty:</p> <pre><code>SELECT * FROM t1 WHERE 1 &gt; ALL (SELECT s1 FROM t2);\n</code></pre> <p>But this expression is <code>NULL</code> when table t2 is empty:</p> <pre><code>SELECT * FROM t1 WHERE 1 &gt; (SELECT s1 FROM t2);\n</code></pre> <p>In addition, the following expression is NULL when table t2 is empty:</p> <pre><code>SELECT * FROM t1 WHERE 1 &gt; ALL (SELECT MAX(s1) FROM t2);\n</code></pre> <p>In general, tables containing <code>NULL</code> values and empty tables are \"edge cases.\" When writing subqueries, always consider whether you have taken those two possibilities into account.</p>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Query-Language/subqueries/subquery-with-all/#syntax","title":"Syntax","text":"<pre><code>&gt; SELECT column_name(s) FROM table_name {WHERE | HAVING} [not] expression comparison_operator ALL (subquery)\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Query-Language/subqueries/subquery-with-all/#examples","title":"Examples","text":"<pre><code>create table t1 (a int);\ncreate table t2 (a int, b int);\ncreate table t3 (a int);\ncreate table t4 (a int not null, b int not null);\ncreate table t5 (a int);\ncreate table t6 (a int, b int);\ninsert into t1 values (2);\ninsert into t2 values (1,7),(2,7);\ninsert into t4 values (4,8),(3,8),(5,9);\ninsert into t5 values (null);\ninsert into t3 values (6),(7),(3);\ninsert into t6 values (10,7),(null,7);\n\nmysql&gt; select * from t3 where a &lt;&gt; all (select b from t2);\n+------+\n| a    |\n+------+\n|    6 |\n|    3 |\n+------+\n2 rows in set (0.00 sec)\n\nmysql&gt; select * from t4 where 5 &gt; all (select a from t5);\n+------+------+\n| a    | b    |\n+------+------+\n|    4 |    8 |\n|    3 |    8 |\n|    5 |    9 |\n+------+------+\n3 rows in set (0.01 sec)\n\nmysql&gt; select * from t3 where 10 &gt; all (select b from t2);\n+------+\n| a    |\n+------+\n|    6 |\n|    7 |\n|    3 |\n+------+\n3 rows in set (0.00 sec)\n\nmysql&gt; select a,b from t6 where a &gt; all ( select a ,b from t4 where a&gt;3);\nERROR 1105 (HY000): subquery should return 1 column\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Query-Language/subqueries/subquery-with-any-some/","title":"Subqueries with ANY or SOME","text":""},{"location":"MatrixOne/Reference/SQL-Reference/Data-Query-Language/subqueries/subquery-with-any-some/#description","title":"Description","text":"<p>Comparison operators (=, &gt;, &lt; , etc.) are used only on subqueries that return one row. SQL Subqueries with <code>ANY</code>, you can make comparisons on subqueries that return multiple rows. <code>ANY</code> evaluate whether any or all of the values returned by a subquery match the left-hand expression.</p> <p>Subqueries that use the <code>ANY</code> keyword return true when any value retrieved in the subquery matches the value of the left-hand expression.</p> <p>note</p> <p>The word <code>SOME</code> is an alias for <code>ANY</code>.</p>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Query-Language/subqueries/subquery-with-any-some/#syntax","title":"Syntax","text":"<pre><code>&gt; SELECT column_name(s) FROM table_name WHERE column_name ANY (subquery);\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Query-Language/subqueries/subquery-with-any-some/#examples","title":"Examples","text":"<pre><code>create table t1 (a int);\ncreate table t2 (a int, b int);\ncreate table t3 (a int);\ncreate table t4 (a int not null, b int not null);\ncreate table t5 (a int);\ncreate table t6 (a int, b int);\ninsert into t1 values (2);\ninsert into t2 values (1,7),(2,7);\ninsert into t4 values (4,8),(3,8),(5,9);\ninsert into t5 values (null);\ninsert into t3 values (6),(7),(3);\ninsert into t6 values (10,7),(null,7);\n\nmysql&gt; select * from t3 where a &lt;&gt; any (select b from t2);\n+------+\n| a    |\n+------+\n|    6 |\n|    3 |\n+------+\n2 rows in set (0.00 sec)\n\nmysql&gt; select * from t3 where a &lt;&gt; some (select b from t2);\n+------+\n| a    |\n+------+\n|    6 |\n|    3 |\n+------+\n2 rows in set (0.00 sec)\n\nmysql&gt; select * from t3 where a = some (select b from t2);\n+------+\n| a    |\n+------+\n|    7 |\n+------+\n1 row in set (0.00 sec)\n\nmysql&gt; select * from t3 where a = any (select b from t2);\n+------+\n| a    |\n+------+\n|    7 |\n+------+\n1 row in set (0.00 sec)\n\nmysql&gt; select a,b from t6 where a &gt;  any ( select a ,b from t4 where a&gt;3);\nERROR 1105 (HY000): subquery should return 1 column\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Query-Language/subqueries/subquery-with-exists/","title":"Subqueries with EXISTS or NOT EXISTS","text":""},{"location":"MatrixOne/Reference/SQL-Reference/Data-Query-Language/subqueries/subquery-with-exists/#description","title":"Description","text":"<p>The <code>EXISTS</code> operator is used to test for the existence of any record in a subquery.</p> <p>If a subquery returns any rows at all, <code>EXISTS</code> subquery is <code>TRUE</code>, and <code>NOT EXISTS</code> subquery is <code>FALSE</code>.</p>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Query-Language/subqueries/subquery-with-exists/#syntax","title":"Syntax","text":"<pre><code>&gt; SELECT column_name(s)\nFROM table_name\nWHERE EXISTS\n(SELECT column_name FROM table_name WHERE condition);\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Query-Language/subqueries/subquery-with-exists/#examples","title":"Examples","text":"<pre><code>create table t1 (a int);\ncreate table t2 (a int, b int);\ncreate table t3 (a int);\ncreate table t4 (a int not null, b int not null);\ninsert into t1 values (2);\ninsert into t2 values (1,7),(2,7);\ninsert into t4 values (4,8),(3,8),(5,9);\ninsert into t3 values (6),(7),(3);\n\nmysql&gt; select * from t3 where exists (select * from t2 where t2.b=t3.a);\n+------+\n| a    |\n+------+\n|    7 |\n+------+\n1 row in set (0.00 sec)\nmysql&gt; select * from t3 where not exists (select * from t2 where t2.b=t3.a);\n+------+\n| a    |\n+------+\n|    6 |\n|    3 |\n+------+\n2 rows in set (0.00 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Query-Language/subqueries/subquery-with-in/","title":"Subqueries with IN","text":""},{"location":"MatrixOne/Reference/SQL-Reference/Data-Query-Language/subqueries/subquery-with-in/#description","title":"Description","text":"<p>A subquery can be used with the <code>IN</code> operator as \"expression IN (subquery)\". The subquery should return a single column with one or more rows to form a list of values to be used by the <code>IN</code> operation.</p> <p>Use the <code>IN</code> clause for multiple-record, single-column subqueries. After the subquery returns results introduced by <code>IN</code> or <code>NOT IN</code>, the outer query uses them to return the final result.</p> <ul> <li>If any row in the sub-query result matches, the answer is true.</li> <li>If the subquery result is empty, the answer is false.</li> <li>If no row in the sub-query result matches, the answer is also false.</li> <li>If all of the values in the sub-query result are null, the answer is false.</li> </ul>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Query-Language/subqueries/subquery-with-in/#syntax","title":"Syntax","text":"<pre><code>&gt; SELECT ... FROM table_name WHERE column_name IN (subquery)\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Query-Language/subqueries/subquery-with-in/#examples","title":"Examples","text":"<pre><code>create table t1(val varchar(10));\ninsert into t1 values ('aaa'), ('bbb'),('eee'),('mmm'),('ppp');\n\nmysql&gt; select count(*) from t1 as w1 where w1.val in (select w2.val from t1 as w2 where w2.val like 'm%') and w1.val in (select w3.val from t1 as w3 where w3.val like 'e%');\n+----------+\n| count(*) |\n+----------+\n|        0 |\n+----------+\n1 row in set (0.01 sec)\n</code></pre> <pre><code>create table t1 (id int not null, text varchar(20) not null default '', primary key (id));\ninsert into t1 (id, text) values (1, 'text1'), (2, 'text2'), (3, 'text3'), (4, 'text4'), (5, 'text5'), (6, 'text6'), (7, 'text7'), (8, 'text8'), (9, 'text9'), (10, 'text10'), (11, 'text11'), (12, 'text12');\n\nmysql&gt; select * from t1 where id not in (select id from t1 where id &lt; 8);\n+------+--------+\n| id   | text   |\n+------+--------+\n|    8 | text8  |\n|    9 | text9  |\n|   10 | text10 |\n|   11 | text11 |\n|   12 | text12 |\n+------+--------+\n5 rows in set (0.00 sec)\n</code></pre> <pre><code>CREATE TABLE t1 (a int);\nCREATE TABLE t2 (a int, b int);\nCREATE TABLE t3 (b int NOT NULL);\nINSERT INTO t1 VALUES (1), (2), (3), (4);\nINSERT INTO t2 VALUES (1,10), (3,30);\n\nmysql&gt; select * from t1 where t1.a in (SELECT t1.a FROM t1 LEFT JOIN t2 ON t2.a=t1.a);\n+------+\n| a    |\n+------+\n|    1 |\n|    2 |\n|    3 |\n|    4 |\n+------+\n4 rows in set (0.01 sec)\n\nmysql&gt; SELECT * FROM t2 LEFT JOIN t3 ON t2.b=t3.b WHERE t3.b IS NOT NULL OR t2.a &gt; 10;\nEmpty set (0.01 sec)\nmysql&gt; SELECT * FROM t1 WHERE t1.a NOT IN (SELECT a FROM t2 LEFT JOIN t3 ON t2.b=t3.b WHERE t3.b IS NOT NULL OR t2.a &gt; 10);\n+------+\n| a    |\n+------+\n|    1 |\n|    2 |\n|    3 |\n|    4 |\n+------+\n4 rows in set (0.00 sec)\n</code></pre> <pre><code>create table t1 (a int);\ncreate table t2 (a int, b int);\ncreate table t3 (a int);\ncreate table t4 (a int not null, b int not null);\ncreate table t5 (a int);\ncreate table t6 (a int, b int);\ninsert into t1 values (2);\ninsert into t2 values (1,7),(2,7);\ninsert into t4 values (4,8),(3,8),(5,9);\ninsert into t5 values (null);\ninsert into t3 values (6),(7),(3);\ninsert into t6 values (10,7),(null,7);\n\nmysql&gt; select a,b from t6 where (a,b) in ( select a,b from t4 where a&gt;3);\nEmpty set (0.02 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Query-Language/subqueries/subquery/","title":"SUBQUERY","text":"<p>A subquery is a <code>SELECT</code> statement within another statement. is a SQL query nested inside a larger query.</p> <p>Here is an example of a subquery:</p> <pre><code>SELECT * FROM t1 WHERE column1 = (SELECT column1 FROM t2);\n</code></pre> <p>In this example, <code>SELECT * FROM t1 ...</code> is the outer query (or outer statement), and <code>(SELECT column1 FROM t2)</code> is the subquery. We say that the subquery is nested within the outer query, and in fact it is possible to nest subqueries within other subqueries, to a considerable depth. A subquery must always appear within parentheses.</p> <p>The main advantages of subqueries are:</p> <ul> <li> <p>They allow queries that are structured so that it is possible to isolate each part of a statement.</p> </li> <li> <p>They provide alternative ways to perform operations that would otherwise require complex joins and unions.</p> </li> <li> <p>Many people find subqueries more readable than complex joins or unions.</p> </li> </ul> <p>A subquery may occur in:</p> <ul> <li>A SELECT clause</li> <li>A FROM clause</li> <li>A WHERE clause</li> </ul> <p>For more information, see the reference below:</p> <ul> <li>Derived Tables</li> <li>Comparisons Using Subqueries</li> <li>SUBQUERY WITH ANY or SOME</li> <li>SUBQUERY WITH ALL</li> <li>SUBQUERY WITH EXISTS</li> <li>SUBQUERY WITH IN</li> </ul>"},{"location":"MatrixOne/Reference/SQL-Reference/Data-Query-Language/subqueries/subquery/#constraints","title":"Constraints","text":"<p>MatrixOne does not support selecting multiple columns for the subquery.</p>"},{"location":"MatrixOne/Reference/SQL-Reference/Other/kill/","title":"KILL","text":""},{"location":"MatrixOne/Reference/SQL-Reference/Other/kill/#description","title":"Description","text":"<p>The <code>KILL</code> statement terminates a running query or process.</p> <p>Info</p> <p>Terminating a process or query may result in the loss of unsaved data; terminating a running query may consume system resources and affect other running queries.</p>"},{"location":"MatrixOne/Reference/SQL-Reference/Other/kill/#syntax","title":"Syntax","text":"<pre><code>&gt; KILL [CONNECTION | QUERY] processlist_id\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Other/kill/#explanations","title":"Explanations","text":"<p><code>process_id</code> refers to the identifier of the process or query to be terminated. <code>process_id</code> is the connection identifier if the <code>CONNECTION</code> keyword is used, and <code>process_id</code> is the query identifier if the <code>QUERY</code> keyword is used.</p>"},{"location":"MatrixOne/Reference/SQL-Reference/Other/kill/#examples","title":"Examples","text":"<pre><code>select connection_id();\n+-----------------+\n| connection_id() |\n+-----------------+\n|            1008 |\n+-----------------+\n1 row in set (0.00 sec)\n\n-- Terminate query process\nmysql&gt; kill query 1008;\nQuery OK, 0 rows affected (0.00 sec)\n\n-- Terminate the connection process\nmysql&gt; kill connection 1008;\nQuery OK, 0 rows affected (0.00 sec)\n\n-- Test for disconnection\nmysql&gt; show databases;\nERROR 2013 (HY000): Lost connection to MySQL server during query\nNo connection. Trying to reconnect...\nConnection id:    1180\n-- The connection has been disconnected, and the service has started to reconnect\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Other/use-database/","title":"USE","text":""},{"location":"MatrixOne/Reference/SQL-Reference/Other/use-database/#description","title":"Description","text":"<p>The USE statement tells MatrixOne to use the named database as the default (current) database for subsequent statements.</p>"},{"location":"MatrixOne/Reference/SQL-Reference/Other/use-database/#syntax","title":"Syntax","text":"<pre><code>&gt; USE db_name\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Other/use-database/#examples","title":"Examples","text":"<pre><code>&gt; USE db1;\n&gt; SELECT COUNT(*) FROM mytable; </code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Other/Explain/explain-analyze/","title":"Get information with <code>EXPLAIN ANALYZE</code>","text":"<p><code>EXPLAIN ANALYZE</code> is an analysis tool for queries that shows you how long SQL spends on queries and why. It will schedule the query, detect it, and execute it, while counting the rows and measuring the time spent at various points in the execution plan. When execution is complete, <code>EXPLAIN ANALYZE</code> prints the plan and measurements instead of querying the results.</p> <p><code>EXPLAIN ANALYZE</code>, which runs SQL statements to produce <code>EXPLAIN</code> output, in addition to other information, such as time and iterator-based additional information, and about the expected versus actual execution of the optimizer.</p> <p>For each iterator, provide the following information:</p> <ul> <li>Estimated implementation costs</li> </ul> <p>Some iterators are not considered in the cost model and are therefore not included in the estimate.</p> <ul> <li> <p>Estimated number of rows returned</p> </li> <li> <p>Returns the time of the first row</p> </li> <li> <p>Time, in milliseconds, spent executing this iterator (including only child iterators but not parent iterators).</p> </li> <li> <p>Number of rows returned by the iterator</p> </li> <li> <p>Number of cycles</p> </li> </ul> <p>Query execution information is displayed using the <code>TREE</code> output format, where nodes represent iterators. <code>EXPLAIN ANALYZE</code> always uses the <code>TREE</code> output format.</p> <p><code>EXPLAIN ANALYZE</code> can be used with <code>SELECT</code> statements or with multi-table <code>UPDATE</code> and <code>DELETE</code> statements.</p> <p>You can use <code>KILL QUERY</code> or <code>CTRL-C</code> to terminate this statement.</p> <p><code>EXPLAIN ANALYZE</code> cannot be used with <code>FOR CONNECTION</code>.</p>"},{"location":"MatrixOne/Reference/SQL-Reference/Other/Explain/explain-analyze/#examples","title":"Examples","text":"<p>Building table</p> <pre><code>CREATE TABLE t1 (\nc1 INTEGER DEFAULT NULL,\nc2 INTEGER DEFAULT NULL\n);\n\nCREATE TABLE t2 (\nc1 INTEGER DEFAULT NULL,\nc2 INTEGER DEFAULT NULL\n);\n\nCREATE TABLE t3 (\npk INTEGER NOT NULL PRIMARY KEY,\ni INTEGER DEFAULT NULL\n);\n</code></pre> <p>Table output results:</p> <pre><code>&gt; mysql&gt; EXPLAIN ANALYZE SELECT * FROM t1 JOIN t2 ON (t1.c1 = t2.c2)\\G\n*************************** 1. row ***************************\nQUERY PLAN: Project\n*************************** 2. row ***************************\nQUERY PLAN:   Analyze: timeConsumed=0ms waitTime=0ms inputRows=0 outputRows=0 InputSize=0bytes OutputSize=0bytes MemorySize=0bytes\n*************************** 3. row ***************************\nQUERY PLAN:   -&gt;  Join\n*************************** 4. row ***************************\nQUERY PLAN:         Analyze: timeConsumed=0ms waitTime=0ms inputRows=0 outputRows=0 InputSize=0bytes OutputSize=0bytes MemorySize=16441bytes\n*************************** 5. row ***************************\nQUERY PLAN:         Join Type: INNER\n*************************** 6. row ***************************\nQUERY PLAN:         Join Cond: (t1.c1 = t2.c2)\n*************************** 7. row ***************************\nQUERY PLAN:         -&gt;  Table Scan on tpch.t1\n*************************** 8. row ***************************\nQUERY PLAN:               Analyze: timeConsumed=0ms waitTime=0ms inputRows=0 outputRows=0 InputSize=0bytes OutputSize=0bytes MemorySize=0bytes\n*************************** 9. row ***************************\nQUERY PLAN:         -&gt;  Table Scan on tpch.t2\n*************************** 10. row ***************************\nQUERY PLAN:               Analyze: timeConsumed=0ms waitTime=0ms inputRows=0 outputRows=0 InputSize=0bytes OutputSize=0bytes MemorySize=0bytes\n10 rows in set (0.00 sec)\n\n&gt; EXPLAIN ANALYZE SELECT * FROM t3 WHERE i &gt; 8\\G\n*************************** 1. row ***************************\nQUERY PLAN: Project\n*************************** 2. row ***************************\nQUERY PLAN:   Analyze: timeConsumed=0ms waitTime=0ms inputRows=0 outputRows=0 InputSize=0bytes OutputSize=0bytes MemorySize=0bytes\n*************************** 3. row ***************************\nQUERY PLAN:   -&gt;  Table Scan on tpch.t3\n*************************** 4. row ***************************\nQUERY PLAN:         Analyze: timeConsumed=0ms waitTime=0ms inputRows=0 outputRows=0 InputSize=0bytes OutputSize=0bytes MemorySize=0bytes\n*************************** 5. row ***************************\nQUERY PLAN:         Filter Cond: (t3.i &gt; 8)\n5 rows in set (0.00 sec)\n\n&gt; EXPLAIN ANALYZE SELECT * FROM t3 WHERE pk &gt; 17\\G\n*************************** 1. row ***************************\nQUERY PLAN: Project\n*************************** 2. row ***************************\nQUERY PLAN:   Analyze: timeConsumed=0ms waitTime=0ms inputRows=0 outputRows=0 InputSize=0bytes OutputSize=0bytes MemorySize=0bytes\n*************************** 3. row ***************************\nQUERY PLAN:   -&gt;  Table Scan on tpch.t3\n*************************** 4. row ***************************\nQUERY PLAN:         Analyze: timeConsumed=0ms waitTime=0ms inputRows=0 outputRows=0 InputSize=0bytes OutputSize=0bytes MemorySize=0bytes\n*************************** 5. row ***************************\nQUERY PLAN:         Filter Cond: (t3.pk &gt; 17)\n5 rows in set (0.01 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Other/Explain/explain-prepared/","title":"EXPLAIN PREPARED","text":""},{"location":"MatrixOne/Reference/SQL-Reference/Other/Explain/explain-prepared/#syntax-description","title":"Syntax Description","text":"<p>In MatrixOne, EXPLAIN is a command to get an execution plan for a SQL query, and PREPARE is a command to create a prepared statement. Using these two commands together provides the following advantages:</p> <ul> <li> <p>Performance tuning: By looking at the execution plan, you can understand the efficiency of queries and identify potential performance bottlenecks.</p> </li> <li> <p>Security: Because PREPARE separates the structure and data of SQL statements, it helps prevent SQL injection attacks.</p> </li> <li> <p>Reuse: Prepared statements can be reused, which is useful when you need to execute the same query multiple times but with different parameters.</p> </li> </ul>"},{"location":"MatrixOne/Reference/SQL-Reference/Other/Explain/explain-prepared/#syntax-structure","title":"Syntax structure","text":"<pre><code>PREPARE stmt_name FROM preparable_stmt\n</code></pre> <pre><code>EXPLAIN\n\nwhere option can be one of:\n    ANALYZE [ boolean ]\n    VERBOSE [ boolean ]\n    (FORMAT=TEXT)\n\nFORCE EXECUTE stmt_name\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Other/Explain/explain-prepared/#examples","title":"Examples","text":"<p>Example 1</p> <pre><code>create table t1(n1 int);\ninsert into t1 values(1);\nprepare st_t1 from 'select * from t1';\n\nmysql&gt; explain force execute st_t1;\n+----------------------------+\n| QUERY PLAN                 |\n+----------------------------+\n| Project                    |\n|   -&gt;  Table Scan on db1.t1 |\n+----------------------------+\n2 rows in set (0.01 sec)\n</code></pre> <p>Example 2</p> <pre><code>create table t2 (col1 int, col2 decimal);\ninsert into t2 values (1,2);\nprepare st from 'select * from t2 where col1 = ?';\nset @A = 1;\n\nmysql&gt; explain force execute st using @A;\n+---------------------------------------------------+\n| QUERY PLAN                                        |\n+---------------------------------------------------+\n| Project                                           |\n|   -&gt;  Table Scan on db1.t2                        |\n|         Filter Cond: (t2.col1 = cast('1' AS INT)) |\n+---------------------------------------------------+\n3 rows in set (0.00 sec)\n\nmysql&gt; explain verbose force execute st using @A;\n+----------------------------------------------------------------------------------------+\n| QUERY PLAN                                                                             |\n+----------------------------------------------------------------------------------------+\n| Project (cost=1000.00 outcnt=1000.00 selectivity=1.0000 blockNum=1)                    |\n|   Output: t2.col1, t2.col2                                                             |\n|   -&gt;  Table Scan on db1.t2 (cost=1000.00 outcnt=1000.00 selectivity=1.0000 blockNum=1) |\n|         Output: t2.col1, t2.col2                                                       |\n|         Table: 't2' (0:'col1', 1:'col2')                                               |\n|         Filter Cond: (t2.col1 = cast('1' AS INT))                                      |\n+----------------------------------------------------------------------------------------+\n6 rows in set (0.00 sec)\n\nmysql&gt; explain analyze force execute st using @A;\n+-----------------------------------------------------------------------------------------------------------------------------------------------+\n| QUERY PLAN                                                                                                                                    |\n+-----------------------------------------------------------------------------------------------------------------------------------------------+\n| Project                                                                                                                                       |\n|   Analyze: timeConsumed=0ms waitTime=0ms inputRows=1 outputRows=1 InputSize=20bytes OutputSize=20bytes MemorySize=0bytes                      |\n|   -&gt;  Table Scan on db1.t2                                                                                                                    |\n|         Analyze: timeConsumed=0ms waitTime=0ms inputBlocks=1 inputRows=1 outputRows=1 InputSize=20bytes OutputSize=20bytes MemorySize=21bytes |\n|         Filter Cond: (t2.col1 = 1)                                                                                                            |\n+-----------------------------------------------------------------------------------------------------------------------------------------------+\n5 rows in set (0.00 sec)\n\nmysql&gt; explain analyze verbose force execute st using @A;\n+-----------------------------------------------------------------------------------------------------------------------------------------------+\n| QUERY PLAN                                                                                                                                    |\n+-----------------------------------------------------------------------------------------------------------------------------------------------+\n| Project (cost=1000.00 outcnt=1000.00 selectivity=1.0000 blockNum=1)                                                                           |\n|   Output: t2.col1, t2.col2                                                                                                                    |\n|   Analyze: timeConsumed=0ms waitTime=0ms inputRows=1 outputRows=1 InputSize=20bytes OutputSize=20bytes MemorySize=0bytes                      |\n|   -&gt;  Table Scan on db1.t2 (cost=1000.00 outcnt=1000.00 selectivity=1.0000 blockNum=1)                                                        |\n|         Output: t2.col1, t2.col2                                                                                                              |\n|         Table: 't2' (0:'col1', 1:'col2')                                                                                                      |\n|         Analyze: timeConsumed=0ms waitTime=0ms inputBlocks=1 inputRows=1 outputRows=1 InputSize=20bytes OutputSize=20bytes MemorySize=21bytes |\n|         Filter Cond: (t2.col1 = 1)                                                                                                            |\n+-----------------------------------------------------------------------------------------------------------------------------------------------+\n8 rows in set (0.00 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Other/Explain/explain-workflow/","title":"EXPLAIN Output Format","text":""},{"location":"MatrixOne/Reference/SQL-Reference/Other/Explain/explain-workflow/#output-structure","title":"Output Structure","text":"<p>The syntax structure execution result is a textual description of the plan selected for the <code>statement</code>, optionally annotated with execution statistics.</p> <p>The following is an example of an output structure using query analysis of a dataset in TPCH:</p> <pre><code>explain SELECT * FROM customer WHERE c_nationkey = (SELECT n_nationkey FROM nation\nWHERE customer.c_nationkey  = nation.n_nationkey  AND nation.n_nationkey &gt; 5);\n</code></pre> <pre><code>mysql&gt; explain SELECT * FROM customer WHERE c_nationkey = (SELECT n_nationkey FROM nation\n    -&gt; WHERE customer.c_nationkey  = nation.n_nationkey  AND nation.n_nationkey &gt; 5);\n+----------------------------------------------------------------------+\n| QUERY PLAN                                                           |\n+----------------------------------------------------------------------+\n| Project                                                              |\n|   -&gt;  Filter                                                         |\n|         Filter Cond: (customer.c_nationkey = nation.n_nationkey)     |\n|         -&gt;  Join                                                     |\n|               Join Type: SINGLE   hashOnPK                           |\n|               Join Cond: (customer.c_nationkey = nation.n_nationkey) |\n|               -&gt;  Table Scan on tpch.customer                        |\n|               -&gt;  Table Scan on tpch.nation                          |\n|                     Filter Cond: (nation.n_nationkey &gt; 5)            |\n|                     Block Filter Cond: (nation.n_nationkey &gt; 5)      |\n+----------------------------------------------------------------------+\n10 rows in set (0.01 sec)\n</code></pre> <p>EXPLAIN \u8f93\u51fa\u4e00\u4e2a\u540d EXPLAIN outputs a tree structure named <code>QUERY PLAN</code>, with each leaf node containing the node type, affected objects. We will now only use node type information to simplify the presentation of the example above. The <code>QUERY PLAN</code> tree visualizes the entire process of a SQL query, showing the nodes through which it operates.</p> <pre><code>Project\n\u2514\u2500\u2500 Filter\n    \u2514\u2500\u2500 Join\n        \u2514\u2500\u2500 Table Scan\n        \u2514\u2500\u2500 Table Scan\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Other/Explain/explain-workflow/#node-type","title":"Node Type","text":"<p>MatrixOne supports the following node types.</p> Node name meaning Values Scan Scanning of processed values Table Scan Scanning data from a table External Scan Handling external data scanning Source Scan Processing a data scan of the source table Project Projective operations on data Sink Distribute the same data to one / more objects Sink Scan Read data distributed by other objects Recursive Scan In the loop CTE syntax, the data at the end of each loop is processed to determine whether to open the next round of looping CTE Scan Loop CTE syntax to read the data at the beginning of each loop Aggregate Aggregation of data Filter Filtering of data Join Concatenation of data Sample SAMPLE Sampling function to sample the data Sort Sorting data Partition Sorting data in the range window and slicing by value Union Combining result sets for two or more queries Union All Combination of result sets for two or more queries, including duplicate rows Window Perform range window calculations on data Time Window Perform time window calculations on data Fill Handling NULL values in the time window Insert Insertion of data Delete Deletion of data Intersect Combination of rows that exist for two or more queries Intersect All Combination of rows that exist for two or more queries, including duplicate rows. Minus Compares the results of two queries and returns the rows that exist in the first query but not in the second query Table Function Reading data through table functions PreInsert Organize the data to be written PreInsert UniqueKey Organize the data to be written to the unique key hidden table PreInsert SecondaryKey Organize the data to be written to the secondary index hidden table PreDelete Organize the data that needs to be deleted from the partitioned table. On Duplicate Key Updates to duplicate data Fuzzy Filter for duplicate key De-duplication of written/updated data Lock Locking the data of an operation"},{"location":"MatrixOne/Reference/SQL-Reference/Other/Explain/explain-workflow/#example","title":"Example","text":""},{"location":"MatrixOne/Reference/SQL-Reference/Other/Explain/explain-workflow/#values-scan-project","title":"VALUES Scan &amp; Project","text":"<pre><code>mysql&gt; explain  select abs(-1);\n+-------------------------------+\n| QUERY PLAN                    |\n+-------------------------------+\n| Project                       |\n|   -&gt;  Values Scan \"*VALUES*\"  |\n+-------------------------------+\n2 rows in set (0.00 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Other/Explain/explain-workflow/#table-scan","title":"Table Scan","text":"<pre><code>mysql&gt; explain select * from customer;\n+-----------------------------------+\n| QUERY PLAN                        |\n+-----------------------------------+\n| Project                           |\n|   -&gt;  Table Scan on tpch.customer |\n+-----------------------------------+\n2 rows in set (0.01 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Other/Explain/explain-workflow/#external-scan","title":"External Scan","text":"<pre><code>mysql&gt; create external table extable(n1 int)infile{\"filepath\"='yourpath/xx.csv'} ;\nQuery OK, 0 rows affected (0.03 sec)\n\nmysql&gt; explain select * from extable;\n+------------------------------------+\n| QUERY PLAN                         |\n+------------------------------------+\n| Project                            |\n|   -&gt;  External Scan on db1.extable |\n+------------------------------------+\n2 rows in set (0.01 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Other/Explain/explain-workflow/#sink-lock-delete-insert-preinsert-sink-scan","title":"Sink &amp; Lock &amp; Delete &amp; Insert &amp; PreInsert &amp; Sink Scan","text":"<pre><code>mysql&gt; create table t3(n1 int);\nQuery OK, 0 rows affected (0.02 sec)\n\nmysql&gt; insert into t3 values(1);\nQuery OK, 1 row affected (0.01 sec)\n\nmysql&gt; explain update t3 set n1=2;\n+-----------------------------------------------+\n| QUERY PLAN                                    |\n+-----------------------------------------------+\n| Plan 0:                                       |\n| Sink                                          |\n|   -&gt;  Lock                                    |\n|         -&gt;  Project                           |\n|               -&gt;  Project                     |\n|                     -&gt;  Table Scan on tpch.t3 |\n| Plan 1:                                       |\n| Delete on tpch.t3                             |\n|   -&gt;  Sink Scan                               |\n|         DataSource: Plan 0                    |\n| Plan 2:                                       |\n| Insert on tpch.t3                             |\n|   -&gt;  Project                                 |\n|         -&gt;  PreInsert on tpch.t3              |\n|               -&gt;  Project                     |\n|                     -&gt;  Sink Scan             |\n|                           DataSource: Plan 0  |\n+-----------------------------------------------+\n17 rows in set (0.00 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Other/Explain/explain-workflow/#recursive-scan-cte-scan-filter","title":"Recursive Scan &amp; CTE Scan &amp; Filter","text":"<pre><code>mysql&gt; create table t4(n1 int,n2 int);\nQuery OK, 0 rows affected (0.02 sec)\n\nmysql&gt; insert into t4 values(1,1),(2,2),(3,3);\nQuery OK, 3 rows affected (0.01 sec)\n\nmysql&gt; explain WITH RECURSIVE t4_1(n1_1) AS (\n-&gt;     SELECT n1 FROM t4 -&gt;     UNION all\n-&gt;     SELECT n1_1 FROM t4_1 WHERE n1_1=1\n-&gt; )\n-&gt; SELECT * FROM t4_1;\n+---------------------------------------------------------------------------------------------------+\n| QUERY PLAN                                                                                        |\n+---------------------------------------------------------------------------------------------------+\n| Plan 0:                                                                                           |\n| Sink                                                                                              |\n|   -&gt;  Project                                                                                     |\n|         -&gt;  Table Scan on tpch.t4                                                                 |\n| Plan 1:                                                                                           |\n| Sink                                                                                              |\n|   -&gt;  Project                                                                                     |\n|         -&gt;  Filter                                                                                |\n|               Filter Cond: (t4_1.n1_1 = 1), mo_check_level((t4_1.__mo_recursive_level_col &lt; 100)) |\n|               -&gt;  Recursive Scan                                                                  |\n|                     DataSource: Plan 2                                                            |\n| Plan 2:                                                                                           |\n| Sink                                                                                              |\n|   -&gt;  CTE Scan                                                                                    |\n|         DataSource: Plan 0, Plan 1                                                                |\n| Plan 3:                                                                                           |\n| Project                                                                                           |\n|   -&gt;  Sink Scan                                                                                   |\n|         DataSource: Plan 2                                                                        |\n+---------------------------------------------------------------------------------------------------+\n19 rows in set (0.00 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Other/Explain/explain-workflow/#aggregate","title":"Aggregate","text":"<pre><code>mysql&gt;  explain  SELECT count(*) FROM NATION group by N_NAME;\n+-------------------------------------------+\n| QUERY PLAN                                |\n+-------------------------------------------+\n| Project                                   |\n|   -&gt;  Aggregate                           |\n|         Group Key: nation.n_name          |\n|         Aggregate Functions: starcount(1) |\n|         -&gt;  Table Scan on tpch.nation     |\n+-------------------------------------------+\n5 rows in set (0.01 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Other/Explain/explain-workflow/#join","title":"Join","text":"<pre><code>mysql&gt;  create table t5(n1 int);\nQuery OK, 0 rows affected (0.01 sec)\n\nmysql&gt; insert into t5 values(1),(2),(3);\nQuery OK, 3 rows affected (0.01 sec)\n\nmysql&gt; create table t6(n1 int);\nQuery OK, 0 rows affected (0.01 sec)\n\nmysql&gt; insert into t5 values(3),(4),(5);\nQuery OK, 3 rows affected (0.01 sec)\n\nmysql&gt; explain SELECT * FROM t5 LEFT JOIN t6 ON t5.n1 = t6.n1;\n+------------------------------------+\n| QUERY PLAN                         |\n+------------------------------------+\n| Project                            |\n|   -&gt;  Join                         |\n|         Join Type: LEFT            |\n|         Join Cond: (t5.n1 = t6.n1) |\n|         -&gt;  Table Scan on tpch.t5  |\n|         -&gt;  Table Scan on tpch.t6  |\n+------------------------------------+\n6 rows in set (0.00 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Other/Explain/explain-workflow/#sample","title":"Sample","text":"<pre><code>mysql&gt; explain SELECT SAMPLE(c_address, 90 percent) FROM customer;\n+-----------------------------------------------------+\n| QUERY PLAN                                          |\n+-----------------------------------------------------+\n| Project                                             |\n|   -&gt;  Sample                                        |\n|         Sample 90.00 Percent by: customer.c_address |\n|         -&gt;  Table Scan on tpch.customer             |\n+-----------------------------------------------------+\n4 rows in set (0.00 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Other/Explain/explain-workflow/#sort","title":"SORT","text":"<pre><code>mysql&gt; explain select * from customer order by c_custkey;\n+-----------------------------------------------+\n| QUERY PLAN                                    |\n+-----------------------------------------------+\n| Project                                       |\n|   -&gt;  Sort                                    |\n|         Sort Key: customer.c_custkey INTERNAL |\n|         -&gt;  Table Scan on tpch.customer       |\n+-----------------------------------------------+\n4 rows in set (0.00 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Other/Explain/explain-workflow/#partition-window","title":"Partition &amp; Window","text":"<pre><code>mysql&gt;CREATE TABLE t7(n1 int,n2 int);\nQuery OK, 0 rows affected (0.01 sec)\n\nmysql&gt;  INSERT INTO t7 values(1,3),(2,2),(3,1);\nQuery OK, 3 rows affected (0.01 sec)\n\nmysql&gt; explain SELECT SUM(n1) OVER(PARTITION BY n2) AS sn1 FROM t7;\n+----------------------------------------------------------+\n| QUERY PLAN                                               |\n+----------------------------------------------------------+\n| Project                                                  |\n|   -&gt;  Window                                             |\n|         Window Function: sum(t7.n1); Partition By: t7.n2 |\n|         -&gt;  Partition                                    |\n|               Sort Key: t7.n2 INTERNAL                   |\n|               -&gt;  Table Scan on tpch.t7                  |\n+----------------------------------------------------------+\n6 rows in set (0.01 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Other/Explain/explain-workflow/#time-window-fill","title":"Time window &amp; Fill","text":"<pre><code>mysql&gt; CREATE TABLE sensor_data (ts timestamp(3) primary key, temperature FLOAT);\nQuery OK, 0 rows affected (0.01 sec)\n\nmysql&gt; INSERT INTO sensor_data VALUES('2023-08-01 00:00:00', 25.0);\nQuery OK, 1 row affected (0.01 sec)\n\nmysql&gt; INSERT INTO sensor_data VALUES('2023-08-01 00:05:00', 26.0);\nQuery OK, 1 row affected (0.01 sec)\n\nmysql&gt; explain select _wstart, _wend from sensor_data  interval(ts, 10, minute)  fill(prev);\n+---------------------------------------------------+\n| QUERY PLAN                                        |\n+---------------------------------------------------+\n| Project                                           |\n|   -&gt;  Fill                                        |\n|         Fill Columns:                             |\n|         Fill Mode: Prev                           |\n|         -&gt;  Time window                           |\n|               Sort Key: sensor_data.ts            |\n|               Aggregate Functions: _wstart, _wend |\n|               -&gt;  Table Scan on db2.sensor_data   |\n+---------------------------------------------------+\n8 rows in set (0.00 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Other/Explain/explain-workflow/#intersect","title":"Intersect","text":"<pre><code>mysql&gt; explain select * from t5 intersect select * from t6;\n+-----------------------------------------+\n| QUERY PLAN                              |\n+-----------------------------------------+\n| Project                                 |\n|   -&gt;  Intersect                         |\n|         -&gt;  Project                     |\n|               -&gt;  Table Scan on tpch.t5 |\n|         -&gt;  Project                     |\n|               -&gt;  Table Scan on tpch.t6 |\n+-----------------------------------------+\n6 rows in set (0.00 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Other/Explain/explain-workflow/#intersect-all","title":"Intersect All","text":"<pre><code>mysql&gt; explain select * from t5 intersect all select * from t6;\n+-----------------------------------------+\n| QUERY PLAN                              |\n+-----------------------------------------+\n| Project                                 |\n|   -&gt;  Intersect All                     |\n|         -&gt;  Project                     |\n|               -&gt;  Table Scan on tpch.t5 |\n|         -&gt;  Project                     |\n|               -&gt;  Table Scan on tpch.t6 |\n+-----------------------------------------+\n6 rows in set (0.00 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Other/Explain/explain-workflow/#minus","title":"Minus","text":"<pre><code>mysql&gt; explain select * from t5 minus  select * from t6;\n+-----------------------------------------+\n| QUERY PLAN                              |\n+-----------------------------------------+\n| Project                                 |\n|   -&gt;  Minus                             |\n|         -&gt;  Project                     |\n|               -&gt;  Table Scan on tpch.t5 |\n|         -&gt;  Project                     |\n|               -&gt;  Table Scan on tpch.t6 |\n+-----------------------------------------+\n6 rows in set (0.00 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Other/Explain/explain-workflow/#table-function","title":"Table Function","text":"<pre><code>mysql&gt;  explain select * from unnest('{\"a\":1}') u;\n+-------------------------------------+\n| QUERY PLAN                          |\n+-------------------------------------+\n| Project                             |\n|   -&gt;  Table Function on unnest      |\n|         -&gt;  Values Scan \"*VALUES*\"  |\n+-------------------------------------+\n3 rows in set (0.10 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Other/Explain/explain-workflow/#preinsert-uniquekey-fuzzy-filter-for-duplicate-key","title":"PreInsert UniqueKey &amp; Fuzzy Filter for duplicate key","text":"<pre><code>mysql&gt; CREATE TABLE t8(n1 int,n2 int UNIQUE key);\nQuery OK, 0 rows affected (0.01 sec)\n\nmysql&gt; explain INSERT INTO t8(n2) values(1);\n+---------------------------------------------------------------------------------+\n| QUERY PLAN                                                                      |\n+---------------------------------------------------------------------------------+\n| Plan 0:                                                                         |\n| Sink                                                                            |\n|   -&gt;  PreInsert on tpch.t8                                                      |\n|         -&gt;  Project                                                             |\n|               -&gt;  Project                                                       |\n|                     -&gt;  Values Scan \"*VALUES*\"                                  |\n| Plan 1:                                                                         |\n| Sink                                                                            |\n|   -&gt;  Lock                                                                      |\n|         -&gt;  PreInsert UniqueKey                                                 |\n|               -&gt;  Sink Scan                                                     |\n|                     DataSource: Plan 0                                          |\n| Plan 2:                                                                         |\n| Insert on tpch.__mo_index_unique_018e2d16-6629-719d-82b5-036222e9658a           |\n|   -&gt;  Sink Scan                                                                 |\n|         DataSource: Plan 1                                                      |\n| Plan 3:                                                                         |\n| Fuzzy Filter for duplicate key                                                  |\n|   -&gt;  Table Scan on tpch.__mo_index_unique_018e2d16-6629-719d-82b5-036222e9658a |\n|         Filter Cond: (__mo_index_idx_col = 1)                                   |\n|         Block Filter Cond: (__mo_index_idx_col = 1)                             |\n|   -&gt;  Sink Scan                                                                 |\n|         DataSource: Plan 1                                                      |\n| Plan 4:                                                                         |\n| Insert on tpch.t8                                                               |\n|   -&gt;  Sink Scan                                                                 |\n|         DataSource: Plan 0                                                      |\n+---------------------------------------------------------------------------------+\n27 rows in set (0.01 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Other/Explain/explain-workflow/#preinsert-secondarykey","title":"PreInsert SecondaryKey","text":"<pre><code>mysql&gt;  CREATE TABLE t9 ( n1 int , n2 int, KEY key2 (n2) USING BTREE);\nQuery OK, 0 rows affected (0.02 sec)\n\nmysql&gt;  explain INSERT INTO t9(n2) values(2);\n+--------------------------------------------------------------------------+\n| QUERY PLAN                                                               |\n+--------------------------------------------------------------------------+\n| Plan 0:                                                                  |\n| Sink                                                                     |\n|   -&gt;  PreInsert on tpch.t9                                               |\n|         -&gt;  Project                                                      |\n|               -&gt;  Project                                                |\n|                     -&gt;  Values Scan \"*VALUES*\"                           |\n| Plan 1:                                                                  |\n| Insert on tpch.__mo_index_secondary_018e2d14-6f20-7db0-babb-c1fd505fd3c5 |\n|   -&gt;  Lock                                                               |\n|         -&gt;  PreInsert SecondaryKey                                       |\n|               -&gt;  Sink Scan                                              |\n|                     DataSource: Plan 0                                   |\n| Plan 2:                                                                  |\n| Insert on tpch.t9                                                        |\n|   -&gt;  Sink Scan                                                          |\n|         DataSource: Plan 0                                               |\n+--------------------------------------------------------------------------+\n16 rows in set (0.00 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Other/Explain/explain/","title":"EXPLAIN","text":"<p>EXPLAIN - Shows the execution plan for a statement.</p>"},{"location":"MatrixOne/Reference/SQL-Reference/Other/Explain/explain/#syntax-structure","title":"Syntax structure","text":"<pre><code>EXPLAIN [ ( option [, ...] ) ] statement\n\nwhere option can be one of:\n    ANALYZE [ boolean ]\n    VERBOSE [ boolean ]\n    (FORMAT=TEXT)\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Other/Explain/explain/#syntax-description","title":"Syntax Description","text":"<p>The primary effect of this command is to display the execution plan generated by the MatrixOne scheduler for the supplied statement. The execution plan shows how to scan the tables referenced by statements through normal sequential scans, index scans, etc. If multiple tables are referenced, what join algorithm will be used to bring together the required rows in each input table.</p> <p>The most critical part of the display is estimating the cost of statement execution, that is, the scheduler will estimate the time it will take to run the statement (measured in either cost unit, but typically obtained from disk pages). Actually two numbers are shown here: the startup cost before returning the first row, and the total cost of returning all rows. For most queries, the total cost is the most important, but in subqueries in <code>EXISTS</code>, the scheduler chooses the smallest start-up cost over the smallest total cost (because the performer stops after getting a row). In addition, if you limit the number of rows returned with a <code>LIMIT</code> clause, the scheduler will interpolate the endpoint costs appropriately to estimate which plan is really cheapest.</p> <p>The <code>ANALYZE</code> clause syntax option adds actual runtime statistics to the display for statement actual execution, not just scheduled execution, including the total run time (in milliseconds) spent in each scheduled node and the total number of rows actually returned. This helps to understand whether planners' expectations are close to reality.</p>"},{"location":"MatrixOne/Reference/SQL-Reference/Other/Explain/explain/#parameter-interpretation","title":"Parameter interpretation","text":"<ul> <li>ANALYZE:</li> </ul> <p>Executes the command and displays actual runtime and other statistics. This parameter defaults to <code>FALSE</code>.</p> <ul> <li>VERBOSE:</li> </ul> <p><code>VERBOSE</code> is used to display additional information about the plan. Specifically, include a list of output columns, schema-qualified tables, and function names for each node in the plan tree, always tag variables in expressions with range table aliases, and always print the name of each trigger that displays statistics. This parameter defaults to <code>FALSE</code>.</p> <ul> <li>FORMAT:</li> </ul> <p><code>FORMAT</code> is used as the specified output format, the syntax is <code>explain (format xx)</code>, only <code>TEXT</code> format is supported for now. Non-text output contains information in the same format as text output and is easily parsed by the program. This parameter defaults to <code>TEXT</code>.</p> <ul> <li>BOOLEAN:</li> </ul> <p><code>BOOLEAN</code> Specifies whether the selected option is on or off. You can write <code>TRUE</code> to enable this option, or <code>FALSE</code> to disable it. This parameter defaults to <code>TRUE</code>.</p> <ul> <li>STATEMENT</li> </ul> <p>MatrixOne supports any <code>SELECT</code>, <code>INSERT</code>, <code>UPDATE</code>, <code>DELETE</code> statement execution plan.</p>"},{"location":"MatrixOne/Reference/SQL-Reference/Other/Prepared-Statements/deallocate/","title":"DEALLOCATE PREPARE","text":""},{"location":"MatrixOne/Reference/SQL-Reference/Other/Prepared-Statements/deallocate/#description","title":"Description","text":"<p>To deallocate a prepared statement produced with PREPARE, use a <code>DEALLOCATE PREPARE</code> statement that refers to the prepared statement name. Attempting to execute a prepared statement after deallocating it results in an error. If too many prepared statements are created and not deallocated by either the DEALLOCATE PREPARE statement or the end of the session, you might encounter the upper limit enforced by the max_prepared_stmt_count system variable.</p>"},{"location":"MatrixOne/Reference/SQL-Reference/Other/Prepared-Statements/deallocate/#syntax","title":"Syntax","text":"<pre><code>{DEALLOCATE | DROP} PREPARE stmt_name\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Other/Prepared-Statements/deallocate/#arguments","title":"Arguments","text":"Arguments Description stmt_name The name of the prepared statement."},{"location":"MatrixOne/Reference/SQL-Reference/Other/Prepared-Statements/deallocate/#examples","title":"Examples","text":"<pre><code>&gt; CREATE TABLE numbers(pk INTEGER PRIMARY KEY, ui BIGINT UNSIGNED, si BIGINT);\n&gt; INSERT INTO numbers VALUES (0, 0, -9223372036854775808), (1, 18446744073709551615, 9223372036854775807);\n&gt; SET @si_min = -9223372036854775808;\n&gt; SET @si_max = 9223372036854775807;\n&gt; PREPARE s2 FROM 'SELECT * FROM numbers WHERE si=?';\nQuery OK, 0 rows affected (0.00 sec)\n\n&gt; EXECUTE s2 USING @si_min;\n+------+------+----------------------+\n| pk   | ui   | si                   |\n+------+------+----------------------+\n|    0 |    0 | -9223372036854775808 |\n+------+------+----------------------+\n1 row in set (0.01 sec)\n\n&gt; EXECUTE s2 USING @si_max;\n+------+----------------------+---------------------+\n| pk   | ui                   | si                  |\n+------+----------------------+---------------------+\n|    1 | 18446744073709551615 | 9223372036854775807 |\n+------+----------------------+---------------------+\n1 row in set (0.01 sec)\n\n&gt; DEALLOCATE PREPARE s2;\nQuery OK, 0 rows affected (0.00 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Other/Prepared-Statements/execute/","title":"EXECUTE","text":""},{"location":"MatrixOne/Reference/SQL-Reference/Other/Prepared-Statements/execute/#description","title":"Description","text":"<p>After preparing a statement with <code>PREPARE</code>, you execute it with an <code>EXECUTE</code> statement that refers to the prepared statement name. If the prepared statement contains any parameter markers, you must supply a USING clause that lists user variables containing the values to be bound to the parameters. Parameter values can be supplied only by user variables, and the USING clause must name exactly as many variables as the number of parameter markers in the statement.</p> <p>You can execute a given prepared statement multiple times, passing different variables to it or setting the variables to different values before each execution.</p>"},{"location":"MatrixOne/Reference/SQL-Reference/Other/Prepared-Statements/execute/#syntax","title":"Syntax","text":"<pre><code>EXECUTE stmt_name\n    [USING @var_name [, @var_name] ...]\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Other/Prepared-Statements/execute/#arguments","title":"Arguments","text":"Arguments Description stmt_name The name of the prepared statement."},{"location":"MatrixOne/Reference/SQL-Reference/Other/Prepared-Statements/execute/#examples","title":"Examples","text":"<pre><code>&gt; CREATE TABLE numbers(pk INTEGER PRIMARY KEY, ui BIGINT UNSIGNED, si BIGINT);\n&gt; INSERT INTO numbers VALUES (0, 0, -9223372036854775808), (1, 18446744073709551615, 9223372036854775807);\n&gt; SET @si_min = -9223372036854775808;\n&gt; SET @si_max = 9223372036854775807;\n&gt; PREPARE s2 FROM 'SELECT * FROM numbers WHERE si=?';\nQuery OK, 0 rows affected (0.00 sec)\n\n&gt; EXECUTE s2 USING @si_min;\n+------+------+----------------------+\n| pk   | ui   | si                   |\n+------+------+----------------------+\n|    0 |    0 | -9223372036854775808 |\n+------+------+----------------------+\n1 row in set (0.01 sec)\n\n&gt; EXECUTE s2 USING @si_max;\n+------+----------------------+---------------------+\n| pk   | ui                   | si                  |\n+------+----------------------+---------------------+\n|    1 | 18446744073709551615 | 9223372036854775807 |\n+------+----------------------+---------------------+\n1 row in set (0.01 sec)\n\n&gt; DEALLOCATE PREPARE s2;\nQuery OK, 0 rows affected (0.00 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Other/Prepared-Statements/prepare/","title":"PREPARE","text":""},{"location":"MatrixOne/Reference/SQL-Reference/Other/Prepared-Statements/prepare/#description","title":"Description","text":"<p>The <code>PREPARE</code> statement prepares a SQL statement and assigns it a name, The prepared statement is executed with EXECUTE and released with <code>DEALLOCATE PREPARE</code>.</p> <p>Statement names are not case-sensitive.</p>"},{"location":"MatrixOne/Reference/SQL-Reference/Other/Prepared-Statements/prepare/#syntax","title":"Syntax","text":"<pre><code>PREPARE stmt_name FROM preparable_stmt\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Other/Prepared-Statements/prepare/#arguments","title":"Arguments","text":"Arguments Description stmt_name The name of the prepared statement. preparable_stmt a string literal or a user variable that contains the text of the SQL statement. The text must represent a single statement, not multiple statements. Within the statement, ? characters can be used as parameter markers to indicate where data values are to be bound to the query later when you execute it. The ? characters should not be enclosed within quotation marks, even if you intend to bind them to string values. Parameter markers can be used only where data values should appear, not for SQL keywords, identifiers, and so forth. <p>If a prepared statement with the given name already exists, it is deallocated implicitly before the new statement is prepared. This means that if the new statement contains an error and cannot be prepared, an error is returned and no statement with the given name exists.</p> <p>The scope of a prepared statement is the session within which it is created, which as several implications:</p> <ul> <li> <p>A prepared statement created in one session is not available to other sessions.</p> </li> <li> <p>When a session ends, whether normally or abnormally, its prepared statements no longer exist. If auto-reconnect is enabled, the client is not notified that the connection was lost. For this reason, clients may wish to disable auto-reconnect.</p> </li> </ul> <p>A parameter used in a prepared statement has its type determined when the statement is first prepared, and retains this type whenever <code>EXECUTE</code> is invoked for this prepared statement. Rules for determining a parameter's type are listed here:</p> <ul> <li> <p>A parameter which is an operand of a binary arithmetic operator has the same data type as the other operand.</p> </li> <li> <p>If both operands of a binary arithmetic operator are parameters, the type of the parameters is decided by the context of the operator.</p> </li> <li> <p>If a parameter is the operand of a unary arithmetic operator, the parameter's type is decided by the context of the operator.</p> </li> <li> <p>If an arithmetic operator has no type-determining context, the derived type for any parameters involved is <code>DOUBLE PRECISION</code>. This can happen, for example, when the parameter is a top-level node in a <code>SELECT</code> list, or when it is part of a comparison operator.</p> </li> <li> <p>A parameter which is an operand of a character string operator has the same derived type as the aggregated type of the other operands. If all operands of the operator are parameters, the derived type is <code>VARCHAR;</code> its collation is determined by the value of <code>collation_connection</code>.</p> </li> <li> <p>A parameter which is an operand of a temporal operator has type DATETIME if the operator returns a <code>DATETIME</code>, <code>TIME</code> if the operator returns a <code>TIME</code>, and <code>DATE</code> if the operator returns a <code>DATE</code>.</p> </li> <li> <p>A parameter which is an operand of a binary comparison operator has the same derived type as the other operand of the comparison.</p> </li> <li> <p>A parameter that is an operand of a ternary comparison operator such as <code>BETWEEN</code> has the same derived type as the aggregated type of the other operands.</p> </li> <li> <p>If all operands of a comparison operator are parameters, the derived type for each of them is <code>VARCHAR</code>, with collation determined by the value of <code>collation_connection</code>.</p> </li> <li> <p>A parameter that is an output operand of any of CASE, COALESCE, IF, IFNULL, or NULLIF has the same derived type as the aggregated type of the operator's other output operands.</p> </li> <li> <p>If all output operands of any of CASE, COALESCE, IF, IFNULL, or NULLIF are parameters, or they are all NULL, the type of the parameter is decided by the context of the operator.</p> </li> <li> <p>If the parameter is an operand of any of CASE, COALESCE(), IF, or IFNULL, and has no type-determining context, the derived type for each of the parameters involved is VARCHAR, and its collation is determined by the value of collation_connection.</p> </li> <li> <p>A parameter which is the operand of a CAST() has the same type as specified by the CAST().</p> </li> <li> <p>If a parameter is an immediate member of a SELECT list that is not part of an INSERT statement, the derived type of the parameter is VARCHAR, and its collation is determined by the value of collation_connection.</p> </li> <li> <p>If a parameter is an immediate member of a SELECT list that is part of an INSERT statement, the derived type of the parameter is the type of the corresponding column into which the parameter is inserted.</p> </li> <li> <p>If a parameter is used as source for an assignment in a SET clause of an UPDATE statement or in the ON DUPLICATE KEY UPDATE clause of an INSERT statement, the derived type of the parameter is the type of the corresponding column which is updated by the SET or ON DUPLICATE KEY UPDATE clause.</p> </li> <li> <p>If a parameter is an argument of a function, the derived type depends on the function's return type.</p> </li> </ul> <p>For some combinations of actual type and derived type, an automatic repreparation of the statement is triggered. Repreparation does not occur if any of the following conditions are true:</p> <ul> <li> <p>NULL is used as the actual parameter value.</p> </li> <li> <p>A parameter is an operand of a CAST(). (Instead, a cast to the derived type is attempted, and an exception raised if the cast fails.)</p> </li> <li> <p>A parameter is a string. (In this case, an implicit CAST(? AS derived_type) is performed.)</p> </li> <li> <p>The derived type and actual type of the parameter are both INTEGER and have the same sign.</p> </li> <li> <p>The parameter's derived type is DECIMAL and its actual type is either DECIMAL or INTEGER.</p> </li> <li> <p>The derived type is DOUBLE and the actual type is any numeric type.</p> </li> <li> <p>Both the derived type and the actual type are string types.</p> </li> <li> <p>If the derived type is temporal and the actual type is temporal. Exceptions: The derived type is TIME and the actual type is not TIME; the derived type is DATE and the actual type is not DATE.</p> </li> <li> <p>The derived type is temporal and the actual type is numeric.</p> </li> </ul> <p>For cases other than those just listed, the statement is reprepared and the actual parameter types are used instead of the derived parameter types.</p> <p>These rules also apply to a user variable referenced in a prepared statement.</p> <p>Using a different data type for a given parameter or user variable within a prepared statement for executions of the statement subsequent to the first execution causes the statement to be reprepared. This is less efficient; it may also lead to the parameter's (or variable's) actual type to vary, and thus for results to be inconsistent, with subsequent executions of the prepared statement. For these reasons, it is advisable to use the same data type for a given parameter when re-executing a prepared statement.</p>"},{"location":"MatrixOne/Reference/SQL-Reference/Other/Prepared-Statements/prepare/#examples","title":"Examples","text":"<pre><code>&gt; create table t13 (a int primary key);\n&gt; insert into t13 values (1);\n&gt; select * from t13 where 3 in (select (1+1) union select 1);\nEmpty set (0.01 sec)\n\n&gt; select * from t13 where 3 in (select (1+2) union select 1);\n+------+\n| a    |\n+------+\n|    1 |\n+------+\n1 row in set (0.01 sec)\n\n&gt; prepare st_18492 from 'select * from t13 where 3 in (select (1+1) union select 1)';\nQuery OK, 0 rows affected (0.00 sec)\n\n&gt; execute st_18492;\nEmpty set (0.01 sec)\n\n&gt; prepare st_18493 from 'select * from t13 where 3 in (select (2+1) union select 1)';\nQuery OK, 0 rows affected (0.00 sec)\n\n&gt; execute st_18493;\n+------+\n| a    |\n+------+\n|    1 |\n+------+\n1 row in set (0.00 sec)\n\n&gt; deallocate prepare st_18492;\nQuery OK, 0 rows affected (0.00 sec)\n\n&gt; deallocate prepare st_18493;\nQuery OK, 0 rows affected (0.00 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Other/SHOW-Statements/show-account/","title":"SHOW ACCOUNTS","text":""},{"location":"MatrixOne/Reference/SQL-Reference/Other/SHOW-Statements/show-account/#description","title":"Description","text":"<p>Lists the meta information and statistics for the accounts created.</p>"},{"location":"MatrixOne/Reference/SQL-Reference/Other/SHOW-Statements/show-account/#syntax","title":"Syntax","text":"<pre><code>&gt; SHOW ACCOUNTS;\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Other/SHOW-Statements/show-account/#meta-information-of-account","title":"Meta information of account","text":"Column Name Details Type Date Source ACCOUNT_NAME Account name varchar mo_account ADMIN_NAME The default administrator name is created varchar In the mo_user table under each account CREATED Created time timestamp mo_account STATUS Status, OPEN or SUSPENDED varchar mo_account SUSPENDED_TIME Suspended time timestamp mo_account DB_COUNT the number of databases bigint unsigned mo_tables TABLE_COUNT the number of tables bigint unsigned mo_tables ROW_COUNT Total line number bigint unsigned sum(mo_table_rows()) SIZE Total space used (MB) decimal(29,3) sum(mo_table_size(mt.reldatabase,mt.relname) COMMENT COMMENT information at creation time varchar mo_account"},{"location":"MatrixOne/Reference/SQL-Reference/Other/SHOW-Statements/show-account/#examples","title":"Examples","text":"<pre><code>mysql&gt; show accounts;\n+--------------+------------+---------------------+--------+----------------+----------+-------------+-----------+-------+----------------+\n| account_name | admin_name | created             | status | suspended_time | db_count | table_count | row_count | size  | comment        |\n+--------------+------------+---------------------+--------+----------------+----------+-------------+-----------+-------+----------------+\n| sys          | root       | 2023-02-14 06:58:15 | open   | NULL           |        8 |          57 |      2681 | 0.351 | system account |\n+--------------+------------+---------------------+--------+----------------+----------+-------------+-----------+-------+----------------+\n1 row in set (0.14 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Other/SHOW-Statements/show-collation/","title":"SHOW COLLATION","text":""},{"location":"MatrixOne/Reference/SQL-Reference/Other/SHOW-Statements/show-collation/#description","title":"Description","text":"<p>This statement lists collations supported by MatrixOne. By default, the output from SHOW COLLATION includes all available collations. The LIKE clause, if present, indicates which collation names to match. The WHERE clause can be given to select rows using more general conditions.</p>"},{"location":"MatrixOne/Reference/SQL-Reference/Other/SHOW-Statements/show-collation/#syntax","title":"Syntax","text":"<pre><code>&gt; SHOW COLLATION\n    [LIKE 'pattern' | WHERE expr]\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Other/SHOW-Statements/show-collation/#examples","title":"Examples","text":"<pre><code>mysql&gt; show collation;\n+-------------+---------+------+----------+---------+\n| Collation   | Charset | Id   | Compiled | Sortlen |\n+-------------+---------+------+----------+---------+\n| utf8mb4_bin | utf8mb4 |   46 | Yes      |       1 |\n+-------------+---------+------+----------+---------+\n1 row in set (0.00 sec)\n\nmysql&gt; show collation like '%';\n+-------------+---------+------+----------+---------+\n| Collation   | Charset | Id   | Compiled | Sortlen |\n+-------------+---------+------+----------+---------+\n| utf8mb4_bin | utf8mb4 |   46 | Yes      |       1 |\n+-------------+---------+------+----------+---------+\n1 row in set (0.00 sec)\n\nmysql&gt; show collation where 'Charset'='utf8mb4';\n+-------------+---------+------+----------+---------+\n| Collation   | Charset | Id   | Compiled | Sortlen |\n+-------------+---------+------+----------+---------+\n| utf8mb4_bin | utf8mb4 |   46 | Yes      |       1 |\n+-------------+---------+------+----------+---------+\n1 row in set (0.00 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Other/SHOW-Statements/show-columns/","title":"SHOW COLUMNS","text":""},{"location":"MatrixOne/Reference/SQL-Reference/Other/SHOW-Statements/show-columns/#description","title":"Description","text":"<p><code>SHOW COLUMNS</code> displays information about the columns in a given table.</p>"},{"location":"MatrixOne/Reference/SQL-Reference/Other/SHOW-Statements/show-columns/#syntax","title":"Syntax","text":"<pre><code>&gt; SHOW [FULL] {COLUMNS}\n    {FROM | IN} tbl_name\n    [{FROM | IN} db_name]\n    [LIKE 'pattern' | WHERE expr]\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Other/SHOW-Statements/show-columns/#examples","title":"Examples","text":"<pre><code>drop table if exists t1;\ncreate table t1(\ncol1 int comment 'First column',\ncol2 float comment '\"%$^&amp;*()_+@!',\ncol3 varchar comment 'ZD5lTndyuEzw49gxR',\ncol4 bool comment ''\n);\nmysql&gt; show columns from t1;\n+-------+----------------+------+------+---------+-------+-------------------+\n| Field | Type           | Null | Key  | Default | Extra | Comment           |\n+-------+----------------+------+------+---------+-------+-------------------+\n| col1  | INT            | YES  |      | NULL    |       | First column      |\n| col2  | FLOAT          | YES  |      | NULL    |       | \"%$^&amp;*()_+@!      |\n| col3  | VARCHAR(65535) | YES  |      | NULL    |       | ZD5lTndyuEzw49gxR |\n| col4  | BOOL           | YES  |      | NULL    |       |                   |\n+-------+----------------+------+------+---------+-------+-------------------+\n4 rows in set (0.02 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Other/SHOW-Statements/show-create-publication/","title":"SHOW CREATE PUBLICATION","text":""},{"location":"MatrixOne/Reference/SQL-Reference/Other/SHOW-Statements/show-create-publication/#description","title":"Description","text":"<p>Returns the SQL statement when PUBLICATION was created.</p>"},{"location":"MatrixOne/Reference/SQL-Reference/Other/SHOW-Statements/show-create-publication/#syntax","title":"Syntax","text":"<pre><code>SHOW CREATE PUBLICATION pubname;\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Other/SHOW-Statements/show-create-publication/#examples","title":"Examples","text":"<pre><code>create account acc0 admin_name 'root' identified by '111';\ncreate account acc1 admin_name 'root' identified by '111';\ncreate account acc2 admin_name 'root' identified by '111';\ncreate database t;\ncreate publication pub3 database t account acc0,acc1;\nmysql&gt; alter publication pub3 account add accx;\nQuery OK, 0 rows affected (0.00 sec)\n\nmysql&gt; show create publication pub3;\n+-------------+-----------------------------------------------------------------------+\n| Publication | Create Publication                                                    |\n+-------------+-----------------------------------------------------------------------+\n| pub3        | CREATE PUBLICATION `pub3` DATABASE `t` ACCOUNT `acc0`, `acc1`, `accx` |\n+-------------+-----------------------------------------------------------------------+\n1 row in set (0.01 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Other/SHOW-Statements/show-create-table/","title":"SHOW CREATE TABLE","text":""},{"location":"MatrixOne/Reference/SQL-Reference/Other/SHOW-Statements/show-create-table/#description","title":"Description","text":"<p>This statement shows the <code>CREATE TABLE</code> statement that creates the named table.</p>"},{"location":"MatrixOne/Reference/SQL-Reference/Other/SHOW-Statements/show-create-table/#syntax","title":"Syntax","text":"<pre><code>&gt; SHOW CREATE TABLE tbl_name\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Other/SHOW-Statements/show-create-table/#examples","title":"Examples","text":"<pre><code>drop table if exists t1;\ncreate table t1(\ncol1 int comment 'First column',\ncol2 float comment '\"%$^&amp;*()_+@!',\ncol3 varchar comment 'ZD5lTndyuEzw49gxR',\ncol4 bool comment ''\n);\nmysql&gt; show create table t1;\n+-------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+\n| Table | Create Table                                                                                                                                                                                                     |\n+-------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+\n| t1    | CREATE TABLE `t1` (\n`col1` INT DEFAULT NULL COMMENT 'First column',\n`col2` FLOAT DEFAULT NULL COMMENT '\"%$^&amp;*()_+@!',\n`col3` VARCHAR(65535) DEFAULT NULL COMMENT 'ZD5lTndyuEzw49gxR',\n`col4` BOOL DEFAULT NULL\n) |\n+-------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+\n1 row in set (0.00 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Other/SHOW-Statements/show-create-view/","title":"SHOW CREATE VIEW","text":""},{"location":"MatrixOne/Reference/SQL-Reference/Other/SHOW-Statements/show-create-view/#description","title":"Description","text":"<p>This statement shows the <code>CREATE VIEW</code> statement that creates the named view.</p>"},{"location":"MatrixOne/Reference/SQL-Reference/Other/SHOW-Statements/show-create-view/#syntax","title":"Syntax","text":"<pre><code>&gt; SHOW CREATE VIEW view_name\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Other/SHOW-Statements/show-create-view/#examples","title":"Examples","text":"<pre><code>create table test_table(col1 int, col2 float, col3 bool, col4 Date, col5 varchar(255), col6 text);\ncreate view test_view as select * from test_table;\nmysql&gt; show create view test_view;\n+-----------+---------------------------------------------------+\n| View      | Create View                                       |\n+-----------+---------------------------------------------------+\n| test_view | create view test_view as select * from test_table |\n+-----------+---------------------------------------------------+\n1 row in set (0.01 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Other/SHOW-Statements/show-databases/","title":"SHOW DATABASES","text":""},{"location":"MatrixOne/Reference/SQL-Reference/Other/SHOW-Statements/show-databases/#description","title":"Description","text":"<p><code>SHOW DATABASES</code> lists the databases on the MatrixOne. <code>SHOW SCHEMAS</code> is a synonym for <code>SHOW DATABASES</code>. The LIKE clause, if present, indicates which database names to match. The WHERE clause can be given to select rows using more general conditions.</p> <p>MatrixOne implements databases as directories in the data directory, so this statement simply lists directories in that location.</p> <p>Database information is also available from the <code>INFORMATION_SCHEMA</code> SCHEMATA table.</p>"},{"location":"MatrixOne/Reference/SQL-Reference/Other/SHOW-Statements/show-databases/#syntax","title":"Syntax","text":"<pre><code>&gt; SHOW {DATABASES | SCHEMAS}\n    [LIKE 'pattern' | WHERE expr]\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Other/SHOW-Statements/show-databases/#examples","title":"Examples","text":"<pre><code>create database demo_1;\n\nmysql&gt; show databases;\n+--------------------+\n| Database           |\n+--------------------+\n| mo_task            |\n| information_schema |\n| mysql              |\n| system_metrics     |\n| system             |\n| demo_1         |\n| mo_catalog         |\n+--------------------+\n7 rows in set (0.00 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Other/SHOW-Statements/show-function-status/","title":"SHOW FUNCTION STATUS","text":""},{"location":"MatrixOne/Reference/SQL-Reference/Other/SHOW-Statements/show-function-status/#description","title":"Description","text":"<p><code>SHOW FUNCTION STATUS</code> displays information about all functions in the database, including function name, database name, creation time, etc.</p> <p>The <code>SHOW FUNCTION STATUS</code> command only shows user-defined functions, not system functions.</p>"},{"location":"MatrixOne/Reference/SQL-Reference/Other/SHOW-Statements/show-function-status/#syntax","title":"Syntax","text":"<pre><code>&gt; SHOW FUNCTION STATUS\n    [LIKE 'pattern' | WHERE expr]\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Other/SHOW-Statements/show-function-status/#explanations","title":"Explanations","text":"<p><code>LIKE 'pattern'</code> is an optional argument to filter the functions to display. <code>pattern</code> is a string that can use <code>%</code> and <code>_</code> wildcards. For example, to display all functions starting with <code>my_function</code>, the following command can be used:</p> <pre><code>SHOW FUNCTION STATUS LIKE 'my_function%';\n</code></pre> <p>The output will include the function name, database name, type, creation time, and modification time.</p>"},{"location":"MatrixOne/Reference/SQL-Reference/Other/SHOW-Statements/show-function-status/#examples","title":"Examples","text":"<pre><code>create or replace function py_add(a int, b int) returns int language python as $$\ndef add(a, b):\nreturn a + b\n$$\nhandler 'add';\ncreate function twosum (x float, y float) returns float language sql as 'select $1 + $2' ;\ncreate function helloworld () returns int language sql as 'select id from tbl1 limit 1';\n\nmysql&gt; show function status;\n+------+-------------+----------+---------+---------------------+---------------------+---------------+---------+----------------------+----------------------+--------------------+\n| Db   | Name        | Type     | Definer | Modified            | Created             | Security_type | Comment | character_set_client | collation_connection | Database Collation |\n+------+-------------+----------+---------+---------------------+---------------------+---------------+---------+----------------------+----------------------+--------------------+\n| db1  | py_add      | FUNCTION | root    | 2024-01-16 08:00:21 | 2024-01-16 08:00:21 | DEFINER       |         | utf8mb4              | utf8mb4_0900_ai_ci   | utf8mb4_0900_ai_ci |\n| db1  | twosum      | FUNCTION | root    | 2024-01-16 08:00:39 | 2024-01-16 08:00:39 | DEFINER       |         | utf8mb4              | utf8mb4_0900_ai_ci   | utf8mb4_0900_ai_ci |\n| db1  | helloworld  | FUNCTION | root    | 2024-01-16 08:00:53 | 2024-01-16 08:00:53 | DEFINER       |         | utf8mb4              | utf8mb4_0900_ai_ci   | utf8mb4_0900_ai_ci |\n+------+-------------+----------+---------+---------------------+---------------------+---------------+---------+----------------------+----------------------+--------------------+\n3 rows in set (0.01 sec)\n\nmysql&gt; show function status like 'two%';\n+------+--------+----------+---------+---------------------+---------------------+---------------+---------+----------------------+----------------------+--------------------+\n| Db   | Name   | Type     | Definer | Modified            | Created             | Security_type | Comment | character_set_client | collation_connection | Database Collation |\n+------+--------+----------+---------+---------------------+---------------------+---------------+---------+----------------------+----------------------+--------------------+\n| db1  | twosum | FUNCTION | root    | 2024-01-16 08:00:39 | 2024-01-16 08:00:39 | DEFINER       |         | utf8mb4              | utf8mb4_0900_ai_ci   | utf8mb4_0900_ai_ci |\n+------+--------+----------+---------+---------------------+---------------------+---------------+---------+----------------------+----------------------+--------------------+\n1 rows in set (0.01 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Other/SHOW-Statements/show-grants/","title":"SHOW GRANTS","text":""},{"location":"MatrixOne/Reference/SQL-Reference/Other/SHOW-Statements/show-grants/#description","title":"Description","text":"<p>Use the <code>SHOW GRANTS</code> statement to display all grant information for a user. This would display privileges that were assigned to the user using the <code>GRANT</code> command.</p> <p><code>SHOW GRANTS</code> requires the <code>SELECT</code> privilege privileges to query all tables in the mo_catalog database, except to display privileges and roles for the current user.</p> <p>To name the account or role for <code>SHOW GRANTS</code>, use the same format as for the <code>GRANT</code> statement, for example:</p> <pre><code>show grants for 'root'@'localhost';\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Other/SHOW-Statements/show-grants/#syntax","title":"Syntax","text":"<pre><code>&gt; SHOW GRANTS FOR {username[@hostname] | rolename};\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Other/SHOW-Statements/show-grants/#examples","title":"Examples","text":"<pre><code>&gt; create role role1;\n&gt; grant all on table *.* to role1;\n&gt; grant create table, drop table on database *.* to role1;\n&gt; create user user1 identified by 'pass1';\n&gt; grant role1 to user1;\n&gt; show grants for 'user1'@'localhost';\n+--------------------------------------------------------+\n| Grants for user1@localhost                             |\n+--------------------------------------------------------+\n| GRANT connect ON account  `user1`@`localhost`          |\n| GRANT table all ON table *.* `user1`@`localhost`       |\n| GRANT create table ON database *.* `user1`@`localhost` |\n| GRANT drop table ON database *.* `user1`@`localhost`   |\n+--------------------------------------------------------+\n4 rows in set (0.00 sec)\n\nmysql&gt; show grants for ROLE role1;\n+--------------------------------------------+\n| Grants for role1                           |\n+--------------------------------------------+\n| GRANT table all ON table *.* `role1`       |\n| GRANT create table ON database *.* `role1` |\n| GRANT drop table ON database *.* `role1`   |\n+--------------------------------------------+\n3 rows in set (0.00 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Other/SHOW-Statements/show-index/","title":"SHOW INDEX","text":""},{"location":"MatrixOne/Reference/SQL-Reference/Other/SHOW-Statements/show-index/#description","title":"Description","text":"<p><code>SHOW INDEX</code> returns table index information.</p> <p><code>SHOW INDEX</code> returns the following fields:</p> Fields Description Table The name of the table. Non_unique 0 if the index cannot contain duplicates, 1 if it can. Key_name The name of the index. If the index is the primary key, the name is always PRIMARY. Seq_in_index The column sequence number in the index, starting with 1. Column_name The column name. See also the description for the Expression column. Collation How the column is sorted in the index. This can have values A (ascending), D (descending), or NULL (not sorted). Cardinality An estimate of the number of unique values in the index. To update this number, run ANALYZE TABLE or (for MyISAM tables) myisamchk -a.Cardinality is counted based on statistics stored as integers, so the value is not necessarily exact even for small tables. The higher the cardinality, the greater the chance that MySQL uses the index when doing joins. Sub_part The index prefix. That is, the number of indexed characters if the column is only partly indexed, NULL if the entire column is indexed.  Note: Prefix limits are measured in bytes. However, prefix lengths for index specifications in CREATE TABLE, ALTER TABLE, and CREATE INDEX statements are interpreted as number of characters for nonbinary string types (CHAR, VARCHAR, TEXT) and number of bytes for binary string types (BINARY, VARBINARY, BLOB). Take this into account when specifying a prefix length for a nonbinary string column that uses a multibyte character set. Packed Indicates how the key is packed. NULL if it is not. Null Contains YES if the column may contain NULL values and '' if not. Index_type The index method used (BTREE, FULLTEXT, HASH, RTREE). Comment Information about the index not described in its own column, such as disabled if the index is disabled. Visible Whether the index is visible to the optimizer. Expression For a nonfunctional key part, Column_name indicates the column indexed by the key part and Expression is NULL.For a functional key part, Column_name column is NULL and Expression indicates the expression for the key part."},{"location":"MatrixOne/Reference/SQL-Reference/Other/SHOW-Statements/show-index/#syntax","title":"Syntax","text":"<pre><code>&gt; SHOW {INDEX | INDEXES}\n    {FROM | IN} tbl_name\n    [{FROM | IN} db_name]\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Other/SHOW-Statements/show-index/#explanations","title":"Explanations","text":"<p>An alternative to tbl_name FROM db_name syntax is db_name.tbl_name.</p>"},{"location":"MatrixOne/Reference/SQL-Reference/Other/SHOW-Statements/show-index/#examples","title":"Examples","text":"<pre><code>CREATE TABLE show_01(sname varchar(30),id int);\nmysql&gt; show INDEX FROM show_01;\n+---------+------------+------------+--------------+-------------+-----------+-------------+----------+--------+------+------------+------------------+---------+------------+\n| Table   | Non_unique | Key_name   | Seq_in_index | Column_name | Collation | Cardinality | Sub_part | Packed | Null | Index_type | Comment          | Visible | Expression |\n+---------+------------+------------+--------------+-------------+-----------+-------------+----------+--------+------+------------+------------------+---------+------------+\n| show_01 |          0 | id         |            1 | id          | A         |           0 | NULL     | NULL   | YES  |            |                  | YES     | NULL       |\n| show_01 |          0 | sname      |            1 | sname       | A         |           0 | NULL     | NULL   | YES  |            |                  | YES     | NULL       |\n| show_01 |          0 | __mo_rowid |            1 | __mo_rowid  | A         |           0 | NULL     | NULL   | NO   |            | Physical address | NO      | NULL       |\n+---------+------------+------------+--------------+-------------+-----------+-------------+----------+--------+------+------------+------------------+---------+------------+\n3 rows in set (0.02 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Other/SHOW-Statements/show-processlist/","title":"SHOW PROCESSLIST","text":""},{"location":"MatrixOne/Reference/SQL-Reference/Other/SHOW-Statements/show-processlist/#description","title":"Description","text":"<p><code>SHOW PROCESSLIST</code> is used to view a list of currently executing threads (also known as a process list), providing information about all active connections and executing queries on the MatrixOne server.</p> <p><code>SHOW PROCESSLIST</code> is used to monitor and manage activities in the database, identify potential issues, help diagnose query performance problems, and aid in decision-making to optimize database operations:</p> <ul> <li> <p>Monitoring Database Activity: By executing <code>SHOW PROCESSLIST</code>, you can view the queries and operations currently running in the database in real time. This is useful for monitoring database activity and promptly identifying potential performance issues. You can see which queries are running, their status, and whether there are long-running or blocked queries, as well as information about locks, deadlocks, or resource contention.</p> </li> <li> <p>Terminating Queries: By examining the process list, you can identify the query ID of a specific query that needs to be terminated and then use the <code>KILL</code> command to stop that particular query. This is beneficial for controlling long-running queries or resolving deadlock situations.</p> </li> </ul>"},{"location":"MatrixOne/Reference/SQL-Reference/Other/SHOW-Statements/show-processlist/#syntax","title":"Syntax","text":"<pre><code>&gt; SHOW PROCESSLIST;\n</code></pre> <p>The explanations for the queried table structure are as follows:</p> Column Name Data Type Constraint Remarks node_id varchar not null Node ID uniquely identifies different nodes in the database cluster. In MatrixOne, a node corresponds to a CN (Compute Node).  Note:  - In the single-node version of MatrixOne, there is usually only one node and all processes run on this node, so all processes have the same node_id.  - In the distributed version of MatrixOne, each node has a unique node_id. System tenants can view the node_id corresponding to the nodes where all executing threads run. In contrast, non-system tenants can only see the node_id corresponding to the nodes where threads executing for their tenant are running. conn_id uint32 not null Connection ID used to identify different database connections. To terminate a specific database connection, use the <code>KILL CONNECTION conn_id;</code> command. Each connection in the database is assigned a unique conn_id for identification.  Note: System tenants can view all conn_id, while non-system tenants can only see conn_id for their tenant. session_id varchar not null Session ID account varchar not null account Note: Under the system, account, sessions, and account names can be viewed. Non-system accounts can only view sessions and account names of their accounts. user varchar not null User host varchar not null Hostname of client-server db varchar Database name session_start varchar Session start time command varchar not null Command type, e.g., COM_QUERY info varchar Current or previous SQL statement txn_id varchar not null Current or previous transaction ID statement_id varchar Current or previous statement ID statement_type varchar Current or previous statement type query_type varchar Query type, e.g., DDL, DML, etc. sql_source_type varchar SQL source type, e.g., external_sql, internal_sql, etc. query_start varchar Query start time"},{"location":"MatrixOne/Reference/SQL-Reference/Other/SHOW-Statements/show-processlist/#examples","title":"Examples","text":"<pre><code>mysql&gt; SHOW PROCESSLIST;\nn| node_id                              | conn_id | session_id                           | account | user                                 | host           | db      | session_start              | command   | info                                                                                                                                                                                                                                                                                                                                                                                                                                                                               | txn_id                           | statement_id                         | statement_type   | query_type | sql_source_type | query_start                |\nn| dd1dccb4-4d3c-41f8-b482-5251dc7a41bf |       1 | 97f85f80-2a5c-11ee-ae41-5ad2460dea4f | sys     | mo_logger                            | 127.0.0.1:6001 |         | 2023-07-24 19:59:27.005755 | COM_QUERY | COMMIT                                                                                                                                                                                                                                                                                                                                                                                                                                                                             |                                  |                                      |                  |            | internal_sql    |                            |\n| dd1dccb4-4d3c-41f8-b482-5251dc7a41bf |       8 | a056b7c6-2a5c-11ee-ae42-5ad2460dea4f | sys     | root                                 | 127.0.0.1:6001 | aab     | 2023-07-24 19:59:41.045851 | COM_QUERY | SHOW PROCESSLIST                                                                                                                                                                                                                                                                                                                                                                                                                                                                   | c207acc30a19432f8d3cbac387c6e520 | 421aadaa-2a68-11ee-ae5b-5ad2460dea4f | Show Processlist | Other      | external_sql    | 2023-07-24 21:22:56.907266 |\n| dd1dccb4-4d3c-41f8-b482-5251dc7a41bf |      24 | 0915f91a-2a63-11ee-ae4d-5ad2460dea4f | sys     | 3bf028e0-aa43-4917-b82f-ed533c0f401e | 127.0.0.1:6001 | mo_task | 2023-07-24 20:45:33.762679 | COM_QUERY | select\ntask_id,\ntask_metadata_id,\ntask_metadata_executor,\ntask_metadata_context,\ntask_metadata_option,\ntask_parent_id,\ntask_status,\ntask_runner,\ntask_epoch,\nlast_heartbeat,\nresult_code,\nerror_msg,\ncreate_at,\nend_at\nfrom mo_task.sys_async_task where task_id&gt;17 AND task_runner='dd1dccb4-4d3c-41f8-b482-5251dc7a41bf' AND task_status=1 order by task_id limit 3 |                                  |                                      |                  |            | internal_sql    |                            |\n| dd1dccb4-4d3c-41f8-b482-5251dc7a41bf |      36 | d8aa4060-2a67-11ee-ae59-5ad2460dea4f | sys     | 3bf028e0-aa43-4917-b82f-ed533c0f401e | 127.0.0.1:6001 | mo_task | 2023-07-24 21:20:00.009746 | COM_QUERY | select\ncron_task_id,\ntask_metadata_id,\ntask_metadata_executor,\ntask_metadata_context,\ntask_metadata_option,\ncron_expr,\nnext_time,\ntrigger_times,\ncreate_at,\nupdate_at\nfrom mo_task.sys_cron_task                                                                                                                                                                        |                                  |                                      |                  |            | internal_sql    |                            |\nn4 rows in set (0.01 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Other/SHOW-Statements/show-publications/","title":"SHOW PUBLICATIONS","text":""},{"location":"MatrixOne/Reference/SQL-Reference/Other/SHOW-Statements/show-publications/#description","title":"Description","text":"<p>Returns a list of all publish names, the database name of the publish, the publish creation time, the publish last modification time, a list of the tenant names specified by the publish (show \"*\" if all), and notes.</p> <p>For more information, you need to have tenant administrator privileges and view the system table mo_pubs to see more parameters.</p>"},{"location":"MatrixOne/Reference/SQL-Reference/Other/SHOW-Statements/show-publications/#syntax","title":"Syntax","text":"<pre><code>SHOW PUBLICATIONS;\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Other/SHOW-Statements/show-publications/#examples","title":"Examples","text":"<pre><code>create account acc0 admin_name 'root' identified by '111';\ncreate account acc1 admin_name 'root' identified by '111';\ncreate account acc2 admin_name 'root' identified by '111';\ncreate database t;\ncreate publication pub3 database t account acc0,acc1;\n\nmysql&gt; show publications;\n+-------------+----------+---------------------+-------------+-------------+----------+\n| publication | database | create_time         | update_time | sub_account | comments |\n+-------------+----------+---------------------+-------------+-------------+----------+\n| pub3        | t        | 2024-04-23 10:10:59 | NULL        | acc0,acc1   |          |\n+-------------+----------+---------------------+-------------+-------------+----------+\n1 row in set (0.00 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Other/SHOW-Statements/show-roles/","title":"SHOW ROLES","text":""},{"location":"MatrixOne/Reference/SQL-Reference/Other/SHOW-Statements/show-roles/#description","title":"Description","text":"<p>Lists the meta information of the roles created under your account, including role name, creator, creation time, and comments.</p> <p>Note: To query the role you are currently using, use the <code>select current_role()</code> statement.</p>"},{"location":"MatrixOne/Reference/SQL-Reference/Other/SHOW-Statements/show-roles/#syntax","title":"Syntax","text":"<pre><code>&gt; SHOW ROLES [LIKE 'pattern'];\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Other/SHOW-Statements/show-roles/#examples","title":"Examples","text":"<pre><code>-- Show the roles currently under your account\nmysql&gt; show roles;\n+-----------+---------+---------------------+----------+\n| ROLE_NAME | CREATOR | CREATED_TIME        | COMMENTS |\n+-----------+---------+---------------------+----------+\n| moadmin   |       0 | 2023-04-19 06:37:58 |          |\n| public    |       0 | 2023-04-19 06:37:58 |          |\n+-----------+---------+---------------------+----------+\n2 rows in set (0.01 sec)\n\n-- create a new role named rolex\nmysql&gt; create role rolex;\nQuery OK, 0 rows affected (0.02 sec)\n\n-- Show the roles currently under your account\nmysql&gt; show roles;\n+-----------+---------+---------------------+----------+\n| ROLE_NAME | CREATOR | CREATED_TIME        | COMMENTS |\n+-----------+---------+---------------------+----------+\n| rolex     |       1 | 2023-04-19 06:43:29 |          |\n| moadmin   |       0 | 2023-04-19 06:37:58 |          |\n| public    |       0 | 2023-04-19 06:37:58 |          |\n+-----------+---------+---------------------+----------+\n3 rows in set (0.01 sec)\n\n-- Query the role you are currently using\nmysql&gt; select current_role();\n+----------------+\n| current_role() |\n+----------------+\n| moadmin        |\n+----------------+\n1 row in set (0.00 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Other/SHOW-Statements/show-sequences/","title":"SHOW SEQUENCES","text":""},{"location":"MatrixOne/Reference/SQL-Reference/Other/SHOW-Statements/show-sequences/#description","title":"Description","text":"<p><code>SHOW SEQUENCES</code> is used to view the name and list type of the current sequence list.</p>"},{"location":"MatrixOne/Reference/SQL-Reference/Other/SHOW-Statements/show-sequences/#syntax","title":"Syntax","text":"<pre><code>&gt; SHOW SQUENCES\n       [WHERE expr]\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Other/SHOW-Statements/show-sequences/#examples","title":"Examples","text":"<pre><code>CREATE SEQUENCE s1 START 101;\nCREATE SEQUENCE s3 as smallint INCREMENT 10 MINVALUE -100 MAXVALUE 100 START 0 CYCLE;\nCREATE SEQUENCE seq_id INCREMENT BY 1 MAXVALUE 1000 START with 1;\nmysql&gt; show sequences;\n+--------+-----------+\n| Names  | Data Type |\n+--------+-----------+\n| s3     | SMALLINT  |\n| s1     | BIGINT    |\n| seq_id | BIGINT    |\n+--------+-----------+\n3 rows in set (0.01 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Other/SHOW-Statements/show-stage/","title":"SHOW STAGES","text":""},{"location":"MatrixOne/Reference/SQL-Reference/Other/SHOW-Statements/show-stage/#description","title":"Description","text":"<p>Display the data stage of the current database creation as a list.</p> <p>MatrixOne users use <code>SHOW STAGES</code> to view all the data stages of the current database and can choose a valid path to export the data to.</p>"},{"location":"MatrixOne/Reference/SQL-Reference/Other/SHOW-Statements/show-stage/#syntax","title":"Syntax","text":"<pre><code>&gt; SHOW STAGES [LIKE 'pattern']\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Other/SHOW-Statements/show-stage/#examples","title":"Examples","text":"<pre><code>CREATE TABLE `user` (`id` int(11) ,`user_name` varchar(255) ,`sex` varchar(255));\nINSERT INTO user(id,user_name,sex) values('1', 'weder', 'man'), ('2', 'tom', 'man'), ('3', 'wederTom', 'man');\n\n-- Create internal data stage\nmysql&gt; CREATE STAGE stage1 URL='/tmp' ENABLE = TRUE;\n\n-- Export data from table to the data stage\nmysql&gt; SELECT * FROM user INTO OUTFILE 'stage1:/user.csv';\n-- You can see your exported table in your local directory\n\n-- Display the data stage of the current database creation as a list.\nmysql&gt; SHOW STAGES;\n+------------+-----------------------------+---------+---------+\n| STAGE_NAME | URL                         | STATUS  | COMMENT |\n+------------+-----------------------------+---------+---------+\n| stage1     | /tmp                        | ENABLED |         |\n+------------+-----------------------------+---------+---------+\n1 row in set (0.00 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Other/SHOW-Statements/show-subscriptions/","title":"SHOW SUBSCRIPTIONS","text":""},{"location":"MatrixOne/Reference/SQL-Reference/Other/SHOW-Statements/show-subscriptions/#description","title":"Description","text":"<p>Returns all publish names, publish tenant names, published database names, times published to that tenant, subscription names, and times when that subscription was created.</p>"},{"location":"MatrixOne/Reference/SQL-Reference/Other/SHOW-Statements/show-subscriptions/#syntax","title":"Syntax","text":"<pre><code>SHOW SUBSCRIPTIONS [ALL];\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Other/SHOW-Statements/show-subscriptions/#syntax-explanation","title":"Syntax explanation","text":"<ul> <li>The ALL option allows you to see all subscriptions with permissions, unsubscribed sub_time, sub_name is null, without ALL you can only see the published information of subscribed ones.</li> </ul>"},{"location":"MatrixOne/Reference/SQL-Reference/Other/SHOW-Statements/show-subscriptions/#examples","title":"Examples","text":"<pre><code>mysql&gt; show subscriptions all;\n+----------+-------------+--------------+---------------------+----------+----------+\n| pub_name | pub_account | pub_database | pub_time            | sub_name | sub_time |\n+----------+-------------+--------------+---------------------+----------+----------+\n| pub3     | sys         | t            | 2024-04-23 11:11:06 | NULL     | NULL     |\n+----------+-------------+--------------+---------------------+----------+----------+\n1 row in set (0.01 sec)\n\nmysql&gt; show subscriptions;\nEmpty set (0.00 sec)\n\nmysql&gt;  create database sub3 from sys publication pub3;\nQuery OK, 1 row affected (0.02 sec)\n\nmysql&gt; show subscriptions all;\n+----------+-------------+--------------+---------------------+----------+---------------------+\n| pub_name | pub_account | pub_database | pub_time            | sub_name | sub_time            |\n+----------+-------------+--------------+---------------------+----------+---------------------+\n| pub3     | sys         | t            | 2024-04-23 11:11:06 | sub3     | 2024-04-23 11:12:11 |\n+----------+-------------+--------------+---------------------+----------+---------------------+\n1 row in set (0.00 sec)\n\nmysql&gt; show subscriptions;\n+----------+-------------+--------------+---------------------+----------+---------------------+\n| pub_name | pub_account | pub_database | pub_time            | sub_name | sub_time            |\n+----------+-------------+--------------+---------------------+----------+---------------------+\n| pub3     | sys         | t            | 2024-04-23 11:11:06 | sub3     | 2024-04-23 11:12:11 |\n+----------+-------------+--------------+---------------------+----------+---------------------+\n1 row in set (0.01 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Other/SHOW-Statements/show-tables/","title":"SHOW TABLES","text":""},{"location":"MatrixOne/Reference/SQL-Reference/Other/SHOW-Statements/show-tables/#description","title":"Description","text":"<p>Shows the list of tables in the currently selected database.</p>"},{"location":"MatrixOne/Reference/SQL-Reference/Other/SHOW-Statements/show-tables/#syntax","title":"Syntax","text":"<pre><code>&gt; SHOW TABLES  [LIKE 'pattern' | WHERE expr | FROM 'pattern' | IN 'pattern']\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Other/SHOW-Statements/show-tables/#examples","title":"Examples","text":"<pre><code>&gt; SHOW TABLES;\n+---------------+\n| name          |\n+---------------+\n| clusters      |\n| contributors  |\n| databases     |\n| functions     |\n| numbers       |\n| numbers_local |\n| numbers_mt    |\n| one           |\n| processes     |\n| settings      |\n| tables        |\n| tracing       |\n+---------------+\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Other/SHOW-Statements/show-variables/","title":"SHOW VARIABLES","text":""},{"location":"MatrixOne/Reference/SQL-Reference/Other/SHOW-Statements/show-variables/#description","title":"Description","text":"<p><code>SHOW VARIABLES</code> shows the values of MatrixOne system variables.</p>"},{"location":"MatrixOne/Reference/SQL-Reference/Other/SHOW-Statements/show-variables/#syntax","title":"Syntax","text":"<pre><code>&gt; SHOW VARIABLES\n    [LIKE 'pattern']\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Other/SHOW-Statements/show-variables/#explanations","title":"Explanations","text":"<ul> <li> <p>With a LIKE clause, the statement displays only rows for those variables with names that match the pattern.</p> </li> <li> <p>To get a list of variables whose name match a pattern, use the % wildcard character in a LIKE clause.</p> </li> </ul>"},{"location":"MatrixOne/Reference/SQL-Reference/Other/SHOW-Statements/show-variables/#examples","title":"Examples","text":"<pre><code>mysql&gt; SHOW VARIABLES;\n+--------------------------+-----------------------------------------------------------------------------------------------------------------------+\n| Variable_name            | Value                                                                                                                 |\n+--------------------------+-----------------------------------------------------------------------------------------------------------------------+\n| auto_increment_increment | 1                                                                                                                     |\n| auto_increment_offset    | 1                                                                                                                     |\n| autocommit               | 1                                                                                                                     |\n| character_set_client     | utf8mb4                                                                                                               |\n| character_set_connection | utf8mb4                                                                                                               |\n| character_set_database   | utf8mb4                                                                                                               |\n| character_set_results    | utf8mb4                                                                                                               |\n| character_set_server     | utf8mb4                                                                                                               |\n| collation_connection     | default                                                                                                               |\n| collation_server         | utf8mb4_bin                                                                                                           |\n| completion_type          | NO_CHAIN                                                                                                              |\n| host                     | 0.0.0.0                                                                                                               |\n| init_connect             |                                                                                                                       |\n| interactive_timeout      | 28800                                                                                                                 |\n| license                  | APACHE                                                                                                                |\n| lower_case_table_names   | 0                                                                                                                     |\n| max_allowed_packet       | 16777216                                                                                                              |\n| net_write_timeout        | 60                                                                                                                    |\n| performance_schema       | 0                                                                                                                     |\n| port                     | 6001                                                                                                                  |\n| profiling                | 0                                                                                                                     |\n| query_result_maxsize     | 100                                                                                                                   |\n| query_result_timeout     | 24                                                                                                                    |\n| save_query_result        | 0                                                                                                                     |\n| sql_mode                 | ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION |\n| sql_safe_updates         | 0                                                                                                                     |\n| sql_select_limit         | 18446744073709551615                                                                                                  |\n| system_time_zone         |                                                                                                                       |\n| testbotchvar_nodyn       | 0                                                                                                                     |\n| testbothvar_dyn          | 0                                                                                                                     |\n| testglobalvar_dyn        | 0                                                                                                                     |\n| testglobalvar_nodyn      | 0                                                                                                                     |\n| testsessionvar_dyn       | 0                                                                                                                     |\n| testsessionvar_nodyn     | 0                                                                                                                     |\n| time_zone                | SYSTEM                                                                                                                |\n| transaction_isolation    | REPEATABLE-READ                                                                                                       |\n| transaction_read_only    | 0                                                                                                                     |\n| tx_isolation             | REPEATABLE-READ                                                                                                       |\n| tx_read_only             | 0                                                                                                                     |\n| version_comment          | MatrixOne                                                                                                             |\n| wait_timeout             | 28800                                                                                                                 |\n+--------------------------+-----------------------------------------------------------------------------------------------------------------------+\n41 rows in set (0.01 sec)\n\nmysql&gt; show variables like 'auto%';\n+--------------------------+-------+\n| Variable_name            | Value |\n+--------------------------+-------+\n| auto_increment_increment | 1     |\n| auto_increment_offset    | 1     |\n| autocommit               | 1     |\n+--------------------------+-------+\n3 rows in set (0.00 sec)\n\nmysql&gt; show variables like 'auto_increment_increment';\n+--------------------------+-------+\n| Variable_name            | Value |\n+--------------------------+-------+\n| auto_increment_increment | 1     |\n+--------------------------+-------+\n1 row in set (0.00 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Other/Set/set-role/","title":"SET ROLE","text":""},{"location":"MatrixOne/Reference/SQL-Reference/Other/Set/set-role/#description","title":"Description","text":"<p>Specifies the active/current primary role or secondary role for the session.</p> <p>The authorization to perform any SQL action other than creating objects can be provided by secondary roles.</p>"},{"location":"MatrixOne/Reference/SQL-Reference/Other/Set/set-role/#syntax","title":"Syntax","text":"<pre><code>&gt; SET SECONDARY ROLE {\n    NONE\n  | ALL  \n}\nSET ROLE role\n</code></pre>"},{"location":"MatrixOne/Reference/SQL-Reference/Other/Set/set-role/#explanations","title":"Explanations","text":"<p>A role is a collection of permissions, and a user can correspond to multiple roles.</p> <p>For example, user1 has the primary role role1, secondary roles role2 and role3, role1 is granted the permissions pri1 and pri2; role2 is given the permission pri3; role3 is given the permission pri4, the permission comparison representation is as follows:</p> User name Role name Privilege name user1 role1 pri1,pri2 role2 pri3 role3 pri4 <p>For a more intuitive understanding, you can refer to the following example:</p> User Role Privilege Name Tom Application Developer Read Data, Write Data O&amp;M expert Read data Database Administrator Administrator Privileges <p>At this time, Tom's main role is an application developer, and Tom needs to call administrator authority, then Tom can use two methods:</p> <ul> <li>To switch his role to database administrator, use the <code>SET ROLE role</code> statement.</li> <li>To use all privileges of primary and secondary roles, use the <code>SET SECONDARY ROLE ALL</code> statement.</li> </ul> <p>The two statements are explained as follows:</p>"},{"location":"MatrixOne/Reference/SQL-Reference/Other/Set/set-role/#set-secondary-role-all","title":"SET SECONDARY ROLE ALL","text":"<p>The union of all roles of the user.</p>"},{"location":"MatrixOne/Reference/SQL-Reference/Other/Set/set-role/#set-secondary-role-none","title":"SET SECONDARY ROLE NONE","text":"<p>Kicking all roles except the PRIMARY ROLE from the current session.</p>"},{"location":"MatrixOne/Reference/SQL-Reference/Other/Set/set-role/#set-role-role","title":"SET ROLE role","text":"<p>Switching the current ROLE to a new role.</p>"},{"location":"MatrixOne/Reference/SQL-Reference/Other/Set/set-role/#examples","title":"Examples","text":"<pre><code>&gt; drop role if exists use_role_1,use_role_2,use_role_3,use_role_4,use_role_5;\n&gt; drop user if exists use_user_1,use_user_2;\n&gt; drop database if exists use_db_1;\n&gt; create role use_role_1,use_role_2,use_role_3,use_role_4,use_role_5;\n&gt; create database use_db_1;\n&gt; create user use_user_1 identified by '123456' default role use_role_1;\n##grant the `select`, `insert` and `update` privileges of all tables to use_role_1\n&gt; grant select ,insert ,update on table *.* to use_role_1;\n#grant all the privileges of database to use_role_2\n&gt; grant all on database * to use_role_2;\n#grant the use_role_2 to use_user_1\n&gt; grant use_role_2 to use_user_1;\n#create table named `use_table_1`\n&gt; create table use_db_1.use_table_1(a int,b varchar(20),c double );\n#set user use_user_1 primary and secondary roles are all available\n&gt; set secondary role all;\n#show the privileges of `use_user_1`\n&gt; show grants for 'use_user_1'@'localhost';\n+-----------------------------------------------------------+\n| Grants for use_user_1@localhost                           |\n+-----------------------------------------------------------+\n| GRANT select ON table *.* `use_user_1`@`localhost`        |\n| GRANT insert ON table *.* `use_user_1`@`localhost`        |\n| GRANT update ON table *.* `use_user_1`@`localhost`        |\n| GRANT connect ON account  `use_user_1`@`localhost`        |\n| GRANT database all ON database * `use_user_1`@`localhost` |\n+-----------------------------------------------------------+\n5 rows in set (0.01 sec)\n#It can be seen that the `use_user_1` has the default privilege to connect to MatrixOne; it also has the `select`, `insert` and `update` privileges on all tables, and also has all the privileges on the database\n</code></pre>"},{"location":"MatrixOne/Reference/System-Parameters/configuration-settings/","title":"Boot Parameters for standalone installation","text":"<p>There are three configuration files cn.toml, tn.toml and log.toml in the matrixone/etc/launch-tae-CN-tae-TN/ directory.</p> <p>The parameters contained in each configuration file are explained as follows:</p>"},{"location":"MatrixOne/Reference/System-Parameters/configuration-settings/#cntoml","title":"cn.toml","text":"Parameters Description service-type = \"CN\" Node Type data-dir = \"./mo-data\" Default data directory [log] level = \"info\" Log level, can be modified to <code>info/debug/error/faltal</code> format = \"console\" Log format max-size = 512 Log default length [hakeeper-client] HAkeeper default address and port, not recommended to change service-addresses = [  \"127.0.0.1:32001\",] [metacache] Metadata Cache memory-capacity = \"512MB\" Set the cache size for metadata, default is 512MB. The data caching feature results in slower first-time queries, but subsequent queries will be faster. [[fileservice]] fileservice, not recommended to change name = \"LOCAL\" fileservice storage type, local storage backend = \"DISK\" fileservice backend, disk [[fileservice]] name = \"SHARED\" fileservice storage type, S3 backend = \"DISK\" fileservice backend, disk data-dir = \"mo-data/s3\" s3 storage data directory [fileservice.cache] memory-capacity = \"512MB\" cache memory size used by fileservice disk-capacity = \"8GB\" cache disk size used by fileservice disk-path = \"mo-data/file-service-cache\" fileservice disk cache path disk-min-evict-interval = \"7m\" Interval for disk cache recovery, in seconds (s) or minutes (m) disk-evict-target = 0.8 Target capacity for disk cache recovery, parameter is the ratio of template capacity to total capacity [[fileservice]] name = \"ETL\" fileservice storage type, ETL backend = \"DISK-ETL\" fileservice backend, DISK-ETL [observability] Observability parameter, disabled by default disableTrace = true disableMetric = true [cn] cn code number, cannot be modified uuid = \"dd1dccb4-4d3c-41f8-b482-5251dc7a41bf\" [cn.Engine] Storage engine of the cn node, distributed tae, cannot be modified type = \"distributed-tae\" [cn.txn] enable-sacrificing-freshness = false When set to true and push mode, this parameter does not guarantee that a transaction can see the latest committed data. Instead, it uses the latest Logtail commit timestamp received by the current CN as the transaction start time. This setting ensures that a transaction on the same database connection can see the data written by its previously committed transactions. enable-cn-based-consistency = false When the above parameter is set to true, it ensures external consistency on the same CN. When a transaction starts, it can see the data written by previously committed transactions."},{"location":"MatrixOne/Reference/System-Parameters/configuration-settings/#tntoml","title":"tn.toml","text":"Parameters Description service-type = \"TN\" Node Type data-dir = \"./mo-data\" Default data directory [log] level = \"info\" Log level, can be modified to <code>info/debug/error/faltal</code> format = \"console\" Log format max-size = 512 Log default length [hakeeper-client] HAkeeper default address and port, not recommended to change service-addresses = [  \"127.0.0.1:32001\",] [metacache] Metadata Cache memory-capacity = \"512MB\" Set the cache size for metadata, default is 512MB. The data caching feature results in slower first-time queries, but subsequent queries will be faster. [[fileservice]] fileservice, not recommended to change name = \"LOCAL\" fileservice storage type, local storage backend = \"DISK\" fileservice backend, disk [[fileservice]] name = \"SHARED\" fileservice storage type, S3 backend = \"DISK\" fileservice backend, disk data-dir = \"mo-data/s3\" s3 storage data directory [fileservice.cache] memory-capacity = \"512MB\" cache memory size used by fileservice disk-capacity = \"8GB\" cache disk size used by fileservice disk-path = \"mo-data/file-service-cache\" fileservice disk cache path disk-min-evict-interval = \"7m\" Interval for disk cache recovery, in seconds (s) or minutes (m) disk-evict-target = 0.8 Target capacity for disk cache recovery, parameter is the ratio of template capacity to total capacity [[fileservice]] name = \"ETL\" fileservice storage type, ETL backend = \"DISK-ETL\" fileservice backend, DISK-ETL [tn] uuid = \"dd4dccb4-4d3c-41f8-b482-5251dc7a41bf\" uuid of TN, cannot be modified [tn.Txn.Storage] The storage engine of the TN transaction backend, cannot be modified backend = \"TAE\" log-backend = \"logservice\" [tn.Txn] incremental-dedup = false If set to false, TN initiates deduplication for all data. If set to true, TN will only deduplicate primary key data after the snapshot timestamp. [tn.Ckp] the checkpoint related parameters of TN, not recommended to change flush-interval = \"60s\" internal refresh interval min-count = 100 Minimum number of checkpoints scan-interval = \"5s\" internal scan interval incremental-interval = \"180s\" checkpoint increment interval global-min-count = 60 The global minimum number of TN checkpoints [tn.LogtailServer] listen-address = \"0.0.0.0:32003\" logtail listening port service-address = \"127.0.0.1:32003\" logtail internal access address rpc-max-message-size = \"16KiB\" maximum rpc message size used by logtail rpc-payload-copy-buffer-size = \"16KiB\" rpc copy buffer size rpc-enable-checksum = true whether to enable rpc checksum logtail-collect-interval = \"2ms\" logtail statistics collection interval logtail-response-send-timeout = \"10s\" logtail sending timeout max-logtail-fetch-failure = 5 The maximum number of failures allowed by fetching logtail"},{"location":"MatrixOne/Reference/System-Parameters/configuration-settings/#logtoml","title":"log.toml","text":"Parameters Description service-type = \"LOG\" Node Type data-dir = \"./mo-data\" Default data directory [log] level = \"info\" Log level, can be modified to <code>info/debug/error/faltal</code> format = \"console\" Log format max-size = 512 Log default length [[fileservice]] fileservice configuration, not recommended to change name = \"LOCAL\" fileservice storage type, local storage backend = \"DISK\" fileservice backend media, disk [[fileservice]] name = \"SHARED\" fileservice storage type, S3 backend = \"DISK\" fileservice backend, disk data-dir = \"mo-data/s3\" s3 storage data directory [fileservice.cache] memory-capacity = \"512MB\" cache memory size used by fileservice disk-capacity = \"8GB\" cache disk size used by fileservice disk-path = \"mo-data/file-service-cache\" fileservice disk cache path disk-min-evict-interval = \"7m\" Interval for disk cache recovery, in seconds (s) or minutes (m) disk-evict-target = 0.8 Target capacity for disk cache recovery, parameter is the ratio of template capacity to total capacity [[fileservice]] name = \"ETL\" fileservice storage type, ETL backend = \"DISK-ETL\" fileservice backend, DISK-ETL [observability] Monitor parameters statusPort = 7001 Reserve the monitoring port of Prometheus enableTraceDebug = false Enable the dbug mode of the trace [hakeeper-client] HAkeeper default address and port, not recommended to change service-addresses = [  \"127.0.0.1:32001\",] [logservice] The parameters of logservice, cannot be modified deployment-id = 1 Deployment ID of logservice uuid = \"7c4dccb4-4d3c-41f8-b482-5251dc7a41bf\" Node ID of logservice raft-address = \"127.0.0.1:32000\" The address of the raft protocol logservice-address = \"127.0.0.1:32001\" logservice address gossip-address = \"127.0.0.1:32002\" The address of the gossip protocol gossip-seed-addresses = [\"127.0.0.1:32002\",] The root node address of the gossip protocol gossip-allow-self-as-seed = true Whether to allow the gossip protocol to use this node as a root node [logservice.BootstrapConfig] Bootstrap parameters, cannot be modified bootstrap-cluster = true Whether bootstrap cluster launchs num-of-log-shards = 1 The number of shards of logservice num-of-tn-shards = 1 The number of shards of tn num-of-log-shard-replicas = 1 The number of replicas of the logservice shard init-hakeeper-members = [ \"131072:7c4dccb4-4d3c-41f8-b482-5251dc7a41bf\",] Initialize members of hakeeper"},{"location":"MatrixOne/Reference/System-Parameters/distributed-configuration-settings/","title":"Distributed Common Parameters Configuration","text":"<p>In the matrixone/etc/launch-with-proxy/ directory, there are four configuration files: cn.toml, tn.toml, proxy.toml, and log.toml. The parameters contained in these configuration files are explained below:</p>"},{"location":"MatrixOne/Reference/System-Parameters/distributed-configuration-settings/#cntoml","title":"cn.toml","text":""},{"location":"MatrixOne/Reference/System-Parameters/distributed-configuration-settings/#default-parameters","title":"Default Parameters","text":"<p>The cn.toml file contains the following default parameters:</p> Parameter Explanation Example [log] Log configuration section level Log level, default is info, can be modified to different levels level = \"info\" [cn] cn node, not editable / port-base Starting port number used by \"cn\". Find an available port for internal services by incrementing from this base port number, continuously checking the next 20 ports port-base = 18000 service-host Service connection address used for registration with HAKeeper service-host = \"127.0.0.1\" [cn.frontend] Frontend configuration section port Port for MatrixOne to listen on and for client connections port = 6001 host Listening IP address host = \"0.0.0.0\" [fileservice.s3] S3 File service configuration section bucket S3 bucket name bucket = \"my-bucket\" key-prefix S3 key prefix key-prefix = \"prefix/\""},{"location":"MatrixOne/Reference/System-Parameters/distributed-configuration-settings/#extended-parameters","title":"Extended Parameters","text":"<p>In the cn.toml file, you can also customize and add the following configuration parameters:</p> Parameter Explanation Example [log] Log configuration section format Log save format as JSON or other format = \"console\" filename Log filename filename = \"log1.log\" [cn.frontend] Frontend configuration section unix-socket Listen on Unix domain socket unix-socket = \"/tmp/mysql.sock\" lengthOfQueryPrinted Console output query length lengthOfQueryPrinted = 200000 enableTls Enable TLS enableTls = false tlsCaFile Client SSL CA list file path tlsCaFile = '' tlsCertFile Client X509 PEM format key file path tlsCertFile = '' tlsKeyFile Client X509 PEM format key file path tlsKeyFile = '' saveQueryResult Save query results saveQueryResult = false queryResultTimeout Query result timeout queryResultTimeout = 24 queryResultMaxsize Maximum query result size queryResultMaxsize = 100 lowerCaseTableNames Case sensitivity of identifiers. The default value is 1, which means case-insensitive lowerCaseTableNames = 1 [cn.Txn] Transaction configuration section isolation Transaction isolation level. This parameter configures the isolation level on the node (cn). The isolation level defines how transactions behave when dealing with concurrent operations. By default, if the isolation level (Isolation) is not set and the transaction mode (Mode) is set to optimistic, the isolation level will be set to Serializable Isolation (SI). When the transaction mode is pessimistic, the isolation level will be set to Read Committed Isolation (RC). Default: RC isolation = \"RC\" mode Transaction mode. This parameter configures the transaction mode on the node (cn). The transaction mode defines how operations and concurrency are handled in transactions. Valid values are optimistic and pessimistic, with the default being pessimistic. mode = \"pessimistic\" [fileservice.s3] endpoint S3 endpoint address endpoint = \"s3.amazonaws.com\" [fileservice.cache] File service cache configuration section memory-capacity Cache memory size memory-capacity = \"512MB\" disk-path Disk cache path disk-path = \"/var/matrixone/cache\" disk-capacity Disk cache capacity disk-capacity = \"8GB\" [observability] Observability parameters host Exposed metrics service listening IP. This parameter specifies the IP address that the metrics service listens on. host = \"0.0.0.0\" statusPort Prometheus monitoring port. This parameter defines the port number that the metrics service listens on. Metrics services typically provide metric data via HTTP. This parameter and the host parameter form the access address for the metrics service. statusPort = 7001 enableMetricToProm Enable metric service. If set to true, metric service will be enabled enableMetricToProm = false disableMetric Disable metric collection. If set to true, the system will not collect any metric data, and the metric service port will not be listened to disableMetric = false disableTrace Disable trace collection. If set to true, the system will stop collecting any trace, metric, and log data disableTrace = false longQueryTime Log queries that exceed execution time. This parameter defines a threshold in seconds to filter out queries that exceed this threshold in execution time. The execution plans (ExecPlan) of these queries are then logged for later analysis. If set to 0.0, all execution plans of queries will be logged. longQueryTime = 1.0"},{"location":"MatrixOne/Reference/System-Parameters/distributed-configuration-settings/#tntoml","title":"tn.toml","text":""},{"location":"MatrixOne/Reference/System-Parameters/distributed-configuration-settings/#default-parameters_1","title":"Default Parameters","text":"<p>The tn.toml file contains the following default parameters:</p> Parameter Explanation Example [log] Log configuration section level Log level, default is info, can be modified to different levels level = \"info\" [dn] TN node, not editable uuid Unique identifier of TN, not editable uuid = \"dd4dccb4-4d3c-41f8-b482-5251dc7a41bf\" port-base Starting port number used by \"TN\". Find an available port for internal services by incrementing from this base port number, continuously checking the next 20 ports port-base = 19000 service-host Service connection address used for registration with HAKeeper service-host = \"0.0.0.0\" [fileservice.s3] S3 File service configuration section bucket S3 bucket name bucket = \"my-bucket\" key-prefix S3 key prefix key-prefix = \"prefix/\""},{"location":"MatrixOne/Reference/System-Parameters/distributed-configuration-settings/#extended-parameters_1","title":"Extended Parameters","text":"<p>In the tn.toml file, you can also customize and add the following configuration parameters:</p> <p>| Parameter          |</p> <p>Explanation                                | Example                   | |-------------------|-------------------------------------------|---------------------------| | [log]             | Log configuration section                 |                           | | format             | Log save format as JSON or other           | format = \"console\"        | | filename           | Log filename                              | filename = \"log1.log\"          | | [dn.LogtailServer]| Logtail server configuration section      |                           | | rpc-enable-checksum| Enable RPC checksum                       | rpc-enable-checksum = false| | [fileservice.s3]   |                        |                           | | endpoint           | S3 endpoint address                      | endpoint = \"s3.amazonaws.com\"| | [fileservice.cache]| File service cache configuration section |                           | | memory-capacity    | Cache memory size                         | memory-capacity = \"512MB\" | | disk-path          | Disk cache path                           | disk-path = \"/var/matrixone/cache\"| | disk-capacity      | Disk cache capacity                       | disk-capacity = \"8GB\"| | [observability]    | Observability parameters                  |                           | | host               | Exposed metrics service listening IP. This parameter specifies the IP address that the metrics service listens on. | host = \"0.0.0.0\"          | | statusPort         | Prometheus monitoring port. This parameter defines the port number that the metrics service listens on. Metrics services typically provide metric data via HTTP. This parameter and the host parameter form the access address for the metrics service. | statusPort = 7001         | | enableMetricToProm | Enable metric service. If set to true, metric service will be enabled | enableMetricToProm = false| | disableMetric      | Disable metric collection. If set to true, the system will not collect any metric data, and the metric service port will not be listened to | disableMetric = false     | | disableTrace       | Disable trace collection. If set to true, the system will stop collecting any trace, metric, and log data | disableTrace = false      | | longQueryTime      | Log queries that exceed execution time. This parameter defines a threshold in seconds to filter out queries that exceed this threshold in execution time. The execution plans (ExecPlan) of these queries are then logged for later analysis. If set to 0.0, all execution plans of queries will be logged. | longQueryTime = 1.0              |</p>"},{"location":"MatrixOne/Reference/System-Parameters/distributed-configuration-settings/#logtoml","title":"log.toml","text":""},{"location":"MatrixOne/Reference/System-Parameters/distributed-configuration-settings/#default-parameters_2","title":"Default Parameters","text":"<p>The log.toml file contains the following default parameters:</p> Parameter Explanation Example [log] Log configuration section level Log level, default is info, can be modified to different levels level = \"info\" [logservice] Logservice configuration section uuid Unique identifier of Logservice, not editable uuid = \"dd1dccb4-4d3c-41f8-b482-5251dc7a41bf\" data-dir Default data directory data-dir = \"./mo-data/logservice\" [fileservice.s3] S3 File service configuration section bucket S3 bucket name bucket = \"my-bucket\" key-prefix S3 key prefix key-prefix = \"prefix/\""},{"location":"MatrixOne/Reference/System-Parameters/distributed-configuration-settings/#extended-parameters_2","title":"Extended Parameters","text":"<p>In the log.toml file, you can also customize and add the following configuration parameters:</p> Parameter Explanation Example [log] Log configuration section format Log save format as JSON or other format = \"console\" filename Log filename filename = \"log1.log\" [logservice.BootstrapConfig] num-of-log-shards num-of-log-shards = 0 num-of-tn-shards num-of-tn-shards = 0 num-of-log-shard-replicas num-of-log-shard-replicas = 0 [fileservice.s3] endpoint S3 endpoint address endpoint = \"s3.amazonaws.com\" [fileservice.cache] File service cache configuration section memory-capacity Cache memory size memory-capacity = \"512MB\" disk-path Disk cache path disk-path = \"/var/matrixone/cache\" disk-capacity Disk cache capacity disk-capacity = \"8GB\" [observability] Observability parameters host Exposed metrics service listening IP. This parameter specifies the IP address that the metrics service listens on. host = \"0.0.0.0\" statusPort Prometheus monitoring port. This parameter defines the port number that the metrics service listens on. Metrics services typically provide metric data via HTTP. This parameter and the host parameter form the access address for the metrics service. statusPort = 7001 enableMetricToProm Enable metric service. If set to true, metric service will be enabled enableMetricToProm = false disableMetric Disable metric collection. If set to true, the system will not collect any metric data, and the metric service port will not be listened to disableMetric = false disableTrace Disable trace collection. If set to true, the system will stop collecting any trace, metric, and log data disableTrace = false longQueryTime Log queries that exceed execution time. This parameter defines a threshold in seconds to filter out queries that exceed this threshold in execution time. The execution plans (ExecPlan) of these queries are then logged for later analysis. If set to 0.0, all execution plans of queries will be logged. longQueryTime = 1.0"},{"location":"MatrixOne/Reference/System-Parameters/distributed-configuration-settings/#proxytoml","title":"proxy.toml","text":""},{"location":"MatrixOne/Reference/System-Parameters/distributed-configuration-settings/#default-parameters_3","title":"Default Parameters","text":"<p>The proxy.toml file contains the following default parameters:</p> Parameter Explanation Example [log] Log configuration section level Log level, default is info, can be modified to different levels level = \"info\" [proxy] Proxy configuration section listen-address Listen address, default is <code>0.0.0.0:6009</code> listen-address = \"0.0.0.0:6009\" [fileservice.s3] S3 File service configuration section bucket S3 bucket name bucket = \"my-bucket\" key-prefix S3 key prefix key-prefix = \"prefix/\""},{"location":"MatrixOne/Reference/System-Parameters/distributed-configuration-settings/#extended-parameters_3","title":"Extended Parameters","text":"<p>In the proxy.toml file, you can also customize and add the following configuration parameters:</p> Parameter Explanation Example [log] Log configuration section format Log save format as JSON or other format = \"console\" filename Log filename filename = \"log1.log <p>\"          | | [proxy]            | Proxy configuration section               |                            | | rebalance-interval | Rebalance interval. This is the time interval between two rebalance operations. In distributed systems, rebalance operations are performed to balance the load between servers, ensuring each server has a similar workload. | rebalance-interval = 30   | | rebalance-disabled | Rebalance disabled flag. If set to true, the rebalance is disabled, and the system won't perform rebalance operations automatically. | rebalance-disabled = false| | rebalance-tolerance| Rebalance tolerance. This parameter indicates the tolerance level of the rebalance. When the number of connections exceeds the average value avg * (1 + tolerance), the connections will be migrated to other CN (Compute Node) servers. The tolerance value should be less than 1, defining to what extent the number of connections can exceed the average without triggering a rebalance operation. For example, if tolerance is set to 0.3 when the number of connections on a server exceeds 30% of the average connection count, rebalance operations will migrate connections to other servers to balance the load. | rebalance-tolerance = 0.3 | | [fileservice.s3]   |                        |                           | | endpoint           | S3 endpoint address                      | endpoint = \"s3.amazonaws.com\"| | [fileservice.cache]| File service cache configuration section |                           | | memory-capacity    | Cache memory size                         | memory-capacity = \"512MB\" | | disk-path          | Disk cache path                           | disk-path = \"/var/matrixone/cache\"| | disk-capacity      | Disk cache capacity                       | disk-capacity = \"8GB\"| | [observability]    | Observability parameters                  |                           | | host               | Exposed metrics service listening IP. This parameter specifies the IP address that the metrics service listens on. | host = \"0.0.0.0\"          | | statusPort         | Prometheus monitoring port. This parameter defines the port number that the metrics service listens on. Metrics services typically provide metric data via HTTP. This parameter and the host parameter form the access address for the metrics service. | statusPort = 7001         | | enableMetricToProm | Enable metric service. If set to true, metric service will be enabled | enableMetricToProm = false| | disableMetric      | Disable metric collection. If set to true, the system will not collect any metric data, and the metric service port will not be listened to | disableMetric = false     | | disableTrace       | Disable trace collection. If set to true, the system will stop collecting any trace, metric, and log data | disableTrace = false      | | longQueryTime      | Log queries that exceed execution time. This parameter defines a threshold in seconds to filter out queries that exceed this threshold in execution time. The execution plans (ExecPlan) of these queries are then logged for later analysis. If set to 0.0, all execution plans of queries will be logged. | longQueryTime = 1.0              |</p>"},{"location":"MatrixOne/Reference/System-Parameters/standalone-configuration-settings/","title":"Standalone Common Parameters Configuration","text":"<p>Four configuration files are in the matrixone/etc/launch/ directory: cn.toml, tn.toml, proxy.toml, and log.toml, used to configure standard parameters.</p>"},{"location":"MatrixOne/Reference/System-Parameters/standalone-configuration-settings/#cntoml","title":"cn.toml","text":""},{"location":"MatrixOne/Reference/System-Parameters/standalone-configuration-settings/#default-parameters","title":"Default Parameters","text":"<p>The cn.toml file contains the following default parameters:</p> Parameter Explanation Example [log] Log configuration section level Log level, default is info, can be modified to different levels level = \"info\" [cn] cn node, not editable / port-base Starting port number used by \"cn\", continuously finding 20 available ports for internal services starting from this port number port-base = 18000 service-host Service connection address used for registration to HAKeeper service-host = \"127.0.0.1\" [cn.frontend] Frontend configuration section port Port for MatrixOne to listen and for client connections port = 6001 host Listening IP address host = \"0.0.0.0\""},{"location":"MatrixOne/Reference/System-Parameters/standalone-configuration-settings/#extended-parameters","title":"Extended Parameters","text":"<p>In the cn.toml file, you can also customize and add the following configuration parameters:</p> Parameter Explanation Example [log] Log configuration section format Log save format as JSON or other format = \"console\" filename Log filename filename = \"mo.log\" [cn.frontend] Frontend configuration section unix-socket Listen to Unix domain interface unix-socket = \"/tmp/mysql.sock\" lengthOfQueryPrinted Console output query length lengthOfQueryPrinted = 200000 enableTls Enable TLS enableTls = false tlsCaFile Client SSL CA list file path tlsCaFile = '' tlsCertFile Client X509 PEM format key file path tlsCertFile = '' tlsKeyFile Client X509 PEM format key file path tlsKeyFile = '' saveQueryResult Save query results saveQueryResult = false queryResultTimeout Query result timeout time queryResultTimeout = 24 queryResultMaxsize Query result maximum size queryResultMaxsize = 100 lowerCaseTableNames Identifier case sensitivity, the default parameter value is 1, indicating case insensitivity lowerCaseTableNames = 1 [cn.Txn] Transaction configuration section isolation Transaction isolation level, used to configure the transaction isolation level on the \"cn\" node. The isolation level defines the behavior of transactions during concurrent operations. By default, if the isolation level (Isolation) is not set, it will be set to Serializable Isolation (SI) when the transaction mode (Mode) is set to optimistic and to Read Committed Isolation (RC) when the transaction mode is set to pessimistic. Default: RC isolation = \"RC\" mode Transaction mode configures the transaction mode on the \"cn\" node. The transaction mode defines how operations and concurrency are handled in a transaction. Possible values are optimistic and pessimistic, with the default value being optimistic. mode = \"optimistic\" [fileservice.cache] File service cache configuration section memory-capacity Cache memory size memory-capacity = \"512MB\" [observability] Observability parameters host Exposed metrics service listening IP. This parameter specifies the IP address that the metrics service listens on. host = \"0.0.0.0\" statusPort Prometheus monitoring port. This parameter defines the port number that the metrics service listens on. Metrics services typically provide metric data via HTTP. This parameter and the host parameter form the access address for the metrics service. statusPort = 7001 enableMetricToProm Enable metric service. If set to true, metric service will be enabled enableMetricToProm = false disableMetric Disable metric collection. If set to true, the system will not collect any metric data, and the metric service port will not be listened to disableMetric = false disableTrace Disable trace collection. If set to true, the system will stop collecting any trace, metric, and log data disableTrace = false longQueryTime Log queries that exceed execution time. This parameter defines a threshold in seconds to filter out queries that exceed this threshold in execution time. The execution plans (ExecPlan) of these queries are then logged for later analysis. If set to 0.0, all execution plans of queries will be logged. longQueryTime = 1.0"},{"location":"MatrixOne/Reference/System-Parameters/standalone-configuration-settings/#tntoml","title":"tn.toml","text":""},{"location":"MatrixOne/Reference/System-Parameters/standalone-configuration-settings/#default-parameters_1","title":"Default Parameters","text":"<p>The tn.toml file contains the following default parameters:</p> Parameter Explanation Example [log] Log configuration section level Log level, default is info, can be modified to different levels level = \"info\" [dn] TN node, not editable uuid Unique identifier of TN, not editable uuid = \"dd4dccb4-4d3c-41f8-b482-5251dc7a41bf\" port-base Starting port number used by \"TN\", continuously finding 20 available ports for internal services starting from this port number port-base = 19000 service-host Service connection address used for registration to HAKeeper service-host = \"0.0.0.0\""},{"location":"MatrixOne/Reference/System-Parameters/standalone-configuration-settings/#extended-parameters_1","title":"Extended Parameters","text":"<p>In the tn.toml file, you can also customize and add the following configuration parameters:</p> Parameter Explanation Example [log] Log configuration section format Log save format as JSON or other format = \"console\" filename Log filename filename = \"tn.log\" [dn.LogtailServer] Logtail Server configuration section rpc-enable-checksum Enable RPC checksum rpc-enable-checksum = false [fileservice.cache] File service cache configuration section memory-capacity Cache memory size memory-capacity = \"512MB\" [observability] Observability parameters host Exposed metrics service listening IP. This parameter specifies the IP address that the metrics service listens on. host = \"0.0.0.0\" statusPort Prometheus monitoring port. This parameter defines the port number that the metrics service listens on. Metrics services typically <p>Provide metric data via HTTP. This parameter and the host parameter form the access address for the metrics service. | statusPort = 7001         | | enableMetricToProm | Enable metric service. If set to true, metric service will be enabled | enableMetricToProm = false| | disableMetric      | Disable metric collection. If set to true, the system will not collect any metric data, and the metric service port will not be listened to | disableMetric = false     | | disableTrace       | Disable trace collection. If set to true, the system will stop collecting any trace, metric, and log data | disableTrace = false      | | longQueryTime      | Log queries that exceed execution time. This parameter defines a threshold in seconds to filter out queries that exceed this threshold in execution time. The execution plans (ExecPlan) of these queries are then logged for later analysis. If set to 0.0, all execution plans of queries will be logged. | longQueryTime = 1.0             |</p>"},{"location":"MatrixOne/Reference/System-Parameters/standalone-configuration-settings/#logtoml","title":"log.toml","text":""},{"location":"MatrixOne/Reference/System-Parameters/standalone-configuration-settings/#default-parameters_2","title":"Default Parameters","text":"<p>The log.toml file contains the following default parameters:</p> Parameter Explanation Example [log] Log configuration section level Log level, default is info, can be modified to different levels level = \"info\" [logservice] Logservice configuration section uuid Unique identifier of Logservice, not editable uuid = \"dd1dccb4-4d3c-41f8-b482-5251dc7a41bf\" data-dir Default data directory data-dir = \"./mo-data\""},{"location":"MatrixOne/Reference/System-Parameters/standalone-configuration-settings/#extended-parameters_2","title":"Extended Parameters","text":"<p>In the log.toml file, you can also customize and add the following configuration parameters:</p> Parameter Explanation Example [log] Log configuration section format Log save format as JSON or other format = \"console\" filename Log filename filename = \"log1.log\" [logservice] Logservice configuration section logservice-address Logservice address logservice-address = \"0.0.0.0:32000\" raft-address Raft address raft-address = \"0.0.0.0:32001\" gossip-address Gossip address gossip-address = \"0.0.0.0:32002\" gossip-seed-addresses Gossip seed node addresses gossip-seed-addresses = \" \" [LogtailServer.BootstrapConfig] LogtailServer bootstrap configuration section init-hakeeper-members Initial HAKeeper members init-hakeeper-members = \" \" [fileservice.cache] File service cache configuration section memory-capacity Cache memory size memory-capacity = \"512MB\" [observability] Observability parameters host Exposed metrics service listening IP. This parameter specifies the IP address that the metrics service listens on. host = \"0.0.0.0\" statusPort Prometheus monitoring port. This parameter defines the port number that the metrics service listens on. Metrics services typically provide metric data via HTTP. This parameter and the host parameter form the access address for the metrics service. statusPort = 7001 enableMetricToProm Enable metric service. If set to true, metric service will be enabled enableMetricToProm = false disableMetric Disable metric collection. If set to true, the system will not collect any metric data, and the metric service port will not be listened to disableMetric = false disableTrace Disable trace collection. If set to true, the system will stop collecting any trace, metric, and log data disableTrace = false longQueryTime Log queries that exceed execution time. This parameter defines a threshold in seconds to filter out queries that exceed this threshold in execution time. The execution plans (ExecPlan) of these queries are then logged for later analysis. If set to 0.0, all execution plans of queries will be logged. longQueryTime = 1.0"},{"location":"MatrixOne/Reference/System-Parameters/standalone-configuration-settings/#proxytoml","title":"proxy.toml","text":""},{"location":"MatrixOne/Reference/System-Parameters/standalone-configuration-settings/#default-parameters_3","title":"Default Parameters","text":"<p>The proxy.toml file contains the following default parameters:</p> Parameter Explanation Example [log] Log configuration section level Log level, default is info, can be modified to different levels level = \"info\" [proxy] Proxy configuration section listen-address Listen address, default is <code>0.0.0.0:6009</code> listen-address = \"0.0.0.0:6009\""},{"location":"MatrixOne/Reference/System-Parameters/standalone-configuration-settings/#extended-parameters_3","title":"Extended Parameters","text":"<p>In the proxy.toml file, you can also customize and add the following configuration parameters:</p> Parameter Explanation Example [log] Log configuration section format Log save format as JSON or other format = \"console\" filename Log filename filename = \"proxy.log\" [proxy] Proxy configuration section rebalance-interval Rebalance interval. This is the time interval between two rebalance operations. In distributed systems, rebalance operations are performed to balance the load between servers and ensure each server has a similar workload. rebalance-interval = 30 rebalance-disabled Rebalance disable flag. If set to true, the rebalance will be disabled, and the system will not automatically perform rebalance operations. rebalance-disabled = false rebalance-tolerance Rebalance tolerance. This parameter indicates the tolerance of the rebalance. When the number of connections exceeds the average value avg * (1 + tolerance), the connections will be migrated to other CN (compute node) servers. The tolerance value should be less than 1, defining to what extent the number of connections can exceed the average value without triggering a rebalance operation. For example, suppose tolerance is set to 0.3 when a server's connections exceed 30% of the average connection count. In that case, the rebalance operation will migrate connections to other servers to balance the load. rebalance-tolerance = 0.3 [fileservice.cache] File service cache configuration section memory-capacity Cache memory size memory-capacity = \"512MB\" [observability] Observability parameters <p>|                           | | host               | Exposed metrics service listening IP. This parameter specifies the IP address that the metrics service listens on. | host = \"0.0.0.0\"          | | statusPort         | Prometheus monitoring port. This parameter defines the port number that the metrics service listens on. Metrics services typically provide metric data via HTTP. This parameter and the host parameter form the access address for the metrics service. | statusPort = 7001         | | enableMetricToProm | Enable metric service. If set to true, metric service will be enabled | enableMetricToProm = false| | disableMetric      | Disable metric collection. If set to true, the system will not collect any metric data, and the metric service port will not be listened to | disableMetric = false     | | disableTrace       | Disable trace collection. If set to true, the system will stop collecting any trace, metric, and log data | disableTrace = false      | | longQueryTime      | Log queries that exceed execution time. This parameter defines a threshold in seconds to filter out queries that exceed this threshold in execution time. The execution plans (ExecPlan) of these queries are then logged for later analysis. If set to 0.0, all execution plans of queries will be logged. | longQueryTime = 1.0             |</p>"},{"location":"MatrixOne/Reference/System-Parameters/system-parameter/","title":"System Parameters Overview","text":"<p>In MatrixOne, various database system parameters are involved, some configured through configuration files and take effect only during startup. Such parameters are referred to as static parameters.</p> <p>Another type is parameters that can be dynamically configured on the client and take effect immediately. These are referred to as dynamic parameters. Both parameters are used to configure and control the behavior of the MatrixOne server.</p> <p>Dynamic parameter modifications can be done at the session and global levels.</p> <ul> <li> <p>Global Level Parameter Configuration: Pertains to parameter configuration for the current tenant in MatrixOne. These parameters affect all new sessions connected to this tenant. Global parameters are persistently stored in the metadata table <code>mo_catalog.mo_mysql_compatbility_mode</code> when the MatrixOne server starts, and changes to global parameters will take effect on the next login.</p> </li> <li> <p>Session Level Parameter Configuration: Pertains to parameter configuration for an individual MatrixOne connection. These parameters only affect the behavior of that connection. When the connection is established, session parameters are read from <code>mo_catalog.mo_mysql_compatbility_mode</code> and can be configured for the current connection using client commands. The session parameter configuration will be reset to the default values when the connection is closed.</p> </li> </ul> <p>It's worth noting that MatrixOne is a multi-tenant database, and the <code>set global</code> command will only affect the current tenant.</p>"},{"location":"MatrixOne/Reference/System-Parameters/system-parameter/#reference-documentation","title":"Reference Documentation","text":"<p>For documentation on static parameters, you can refer to:</p> <ul> <li>Standalone Common Parameters Configuration</li> <li>Distributed Common Parameters Configuration</li> </ul> <p>For documentation on dynamic parameters, you can refer to:</p> <ul> <li>System Variables Overview</li> <li>Custom Variables</li> </ul>"},{"location":"MatrixOne/Reference/Variable/custom-variable/","title":"Setting custom variable","text":"<p>In MatrixOne, custom variables are a mechanism for storing and manipulating values. Custom variables can be set through the the'SET'statement, and the value can be kept unchanged throughout the session. You can customize variables through the <code>SET</code> command and use it in SQL. The specific syntax is as follows:</p> <pre><code>SET @variable_name = value;\n</code></pre> <p><code>@variable_name</code> is the name of the custom variable, and <code>value</code> is the value to be assigned to the variable. Once defined, the variable can be used in the SQL statement instead of the actual value.</p> <p>For example, the following statement will define a variable named <code>@max_salary</code> and set it to 100000:</p> <pre><code>SET @max_salary = 100000;\n--View the value set by the @max_salary variable\nmysql&gt; select @max_salary;\n+-------------+\n| @max_salary |\n+-------------+\n| 100000      |\n+-------------+\n1 row in set (0.01 sec)\n</code></pre> <p>When using a custom variable, you can include it in an SQL statement and reference it as <code>@variable_name</code>. For example, the following statement will return all employee records whose salary is less than <code>@max_salary</code>:</p> <pre><code>SELECT * FROM employees WHERE salary &lt; @max_salary;\n</code></pre> <p>You can affect the result of an SQL query by changing the value of a custom variable. For example, the following statement will change the value of <code>@max_salary</code> and return a new query result:</p> <pre><code>SET @max_salary = 80000;\nSELECT * FROM employees WHERE salary &lt; @max_salary;\n</code></pre> <p>It should be noted that custom variables only remain valid in the current session, and when the session ends, the variables will be deleted and released. In addition, variable names must start with the <code>@</code> symbol and are case-sensitive.</p>"},{"location":"MatrixOne/Reference/Variable/custom-variable/#simple-example","title":"Simple Example","text":"<p>Now let's define two variables, a and b:</p> <pre><code>&gt; SET  @a=2, @b=3;\nQuery OK, 0 rows affected (0.00 sec)\n\n&gt; select @a;\n+------+\n| @a   |\n+------+\n|    2 |\n+------+\n1 row in set (0.00 sec)\n\n&gt; select @b;\n+------+\n| @b   |\n+------+\n|    3 |\n+------+\n1 row in set (0.00 sec)\n</code></pre> <p>Using custom variables in SQL:</p> <pre><code>&gt; create table t1(a int,b varchar(1));\nQuery OK, 0 rows affected (0.02 sec)\n\n&gt; insert into t1 values(@a,@b);\nQuery OK, 1 row affected (0.02 sec)\n\n&gt; select * from t1;\n+------+------+\n| a    | b    |\n+------+------+\n|    2 | 3    |\n+------+------+\n1 row in set (0.01 sec)\n</code></pre> <p>Note</p> <p>The variables a and b are both ints here. If you want a string of 2 or 3, it is recommended to use <code>SET @a ='2', @b='3';</code>.</p>"},{"location":"MatrixOne/Reference/Variable/custom-variable/#mysql-compatibility","title":"MySQL compatibility","text":"<p>MatrixOne supports the session level, which is the same as MySQL support.</p>"},{"location":"MatrixOne/Reference/Variable/system-variables/foreign_key_checks/","title":"Foreign key constraint checking","text":"<p>In MatrixOne, <code>foreign_key_checks</code> is a system variable that controls the checking of foreign key constraints. This variable can be global or session level. When set to 1 (the default), MatrixOne checks the integrity of the foreign key constraint, ensuring the referential integrity of the data. If set to 0, these checks are skipped.</p> <p>Note</p> <p>What is inconsistent with MySQL behavior is that when foreign key constraint checking is turned off, the parent table is deleted and MySQL does not delete the foreign key relationship of the child table referencing the parent table, but MatrixOne deletes the foreign key relationship of the child table referencing the parent table and reestablishes the foreign key relationship after rebuilding the parent table.</p>"},{"location":"MatrixOne/Reference/Variable/system-variables/foreign_key_checks/#view-foreign_key_checks","title":"View foreign_key_checks","text":"<p>Use the following command in MatrixOne to view foreign_key_checks:</p> <pre><code>--global mode\nSELECT @@global.foreign_key_checks;\nSHOW global VARIABLES LIKE 'foreign_key_checks';\n\n--session mode\nSELECT @@session.foreign_key_checks;\nSHOW session VARIABLES LIKE 'foreign_key_checks';\n</code></pre>"},{"location":"MatrixOne/Reference/Variable/system-variables/foreign_key_checks/#set-foreign_key_checks","title":"Set foreign_key_checks","text":"<p>Set foreign_key_checks in MatrixOne with the following command:</p> <pre><code>--Global mode, reconnecting the database takes effect\nset global foreign_key_checks = 'xxx' --session mode\nset session foreign_key_checks = 'xxx'\n</code></pre>"},{"location":"MatrixOne/Reference/Variable/system-variables/foreign_key_checks/#examples","title":"Examples","text":"<pre><code>mysql&gt;  SELECT @@session.foreign_key_checks;\n+----------------------+\n| @@foreign_key_checks |\n+----------------------+\n| 1                    |\n+----------------------+\n1 row in set (0.00 sec)\n\ncreate table t2(a int primary key,b int);\ncreate table t1( b int, constraint `c1` foreign key `fk1` (b) references t2(a));\n\ninsert into t2 values(1,2);\nmysql&gt; insert into t1 values(3);--When foreign key constraint checking is turned on, values that violate the constraint cannot be inserted\nERROR 20101 (HY000): internal error: Cannot add or update a child row: a foreign key constraint fails\n\nmysql&gt; drop table t2;--Parent table cannot be deleted when foreign key constraint checking is turned on\nERROR 20101 (HY000): internal error: can not drop table 't2' referenced by some foreign key constraint\n\nset session foreign_key_checks =0;--Turn off foreign key constraint checking\nmysql&gt;  SELECT @@session.foreign_key_checks;\n+----------------------+\n| @@foreign_key_checks |\n+----------------------+\n| 0                    |\n+----------------------+\n1 row in set (0.00 sec)\n\nmysql&gt; insert into t1 values(3);--When you turn off foreign key constraint checking, you can insert values that violate constraints\nQuery OK, 1 row affected (0.01 sec)\n\nmysql&gt; drop table t2;--When you turn off foreign key constraint checking, you can delete the parent table.\nQuery OK, 0 rows affected (0.02 sec)\n\nmysql&gt; show create table t1;--Delete the parent table and the foreign key constraints are also deleted\n+-------+--------------------------------------------+\n| Table | Create Table                               |\n+-------+--------------------------------------------+\n| t1    | CREATE TABLE `t1` (\n`b` INT DEFAULT NULL\n) |\n+-------+--------------------------------------------+\n1 row in set (0.00 sec)\n\nmysql&gt; create table t2(n1 int);--Rebuild the deleted parent table t2 with the original foreign key reference columns of the child table.\nERROR 20101 (HY000): internal error: column 'a' no exists in table ''\n\nmysql&gt; create table t2(n1 int,a int primary key);--Contains referenced primary key column a, rebuild successful\nQuery OK, 0 rows affected (0.01 sec)\n\nmysql&gt; show create table t1;--After rebuilding t2, the foreign key relationship is automatically re-established\n+-------+-------------------------------------------------------------------------------------------------------------------------------------------+\n| Table | Create Table                                                                                                                              |\n+-------+-------------------------------------------------------------------------------------------------------------------------------------------+\n| t1    | CREATE TABLE `t1` (\n`b` INT DEFAULT NULL,\nCONSTRAINT `c1` FOREIGN KEY (`b`) REFERENCES `t2` (`a`) ON DELETE RESTRICT ON UPDATE RESTRICT\n) |\n+-------+-------------------------------------------------------------------------------------------------------------------------------------------+\n1 row in set (0.00 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/Variable/system-variables/keep_user_target_list_in_result/","title":"keep_user_target_list_in_result Keep query result set column names consistent with user specified case","text":"<p>In a MatrixOne query, keep the result set column names the same size as the name specified by the user, except by using aliases, or by setting parameters.</p> <p><code>keep_user_target_list_in_result</code> is a global parameter that MatrixOne sets whether the query result set column names match the user-specified name case.</p>"},{"location":"MatrixOne/Reference/Variable/system-variables/keep_user_target_list_in_result/#view-keep_user_target_list_in_result","title":"View keep_user_target_list_in_result","text":"<p>View <code>keep_user_target_list_in_result</code> in MatrixOne using the following command:</p> <pre><code>--default 1\nshow variables like \"keep_user_target_list_in_result\";\nselect @@keep_user_target_list_in_result;\n</code></pre>"},{"location":"MatrixOne/Reference/Variable/system-variables/keep_user_target_list_in_result/#set-keep_user_target_list_in_result","title":"Set keep_user_target_list_in_result","text":"<p>Set <code>keep_user_target_list_in_result</code> in MatrixOne with the following command:</p> <pre><code>--default is 1, reconnecting to database takes effect \nset global keep_user_target_list_in_result = 0; </code></pre>"},{"location":"MatrixOne/Reference/Variable/system-variables/keep_user_target_list_in_result/#examples","title":"Examples","text":"<pre><code>create table t1(aa int, bb int, cc int, AbC varchar(25), A_BC_d double);\ninsert into t1 values (1,2,3,'A',10.9);\n\nmysql&gt; select * from t1; +------+------+------+------+--------+\n| aa   | bb   | cc   | abc  | a_bc_d |\n+------+------+------+------+--------+\n|    1 |    2 |    3 | A    |   10.9 |\n+------+------+------+------+--------+\n1 row in set (0.00 sec)\n\nmysql&gt; select @@keep_user_target_list_in_result; --Query parameter values, on by default\n+-----------------------------------+\n| @@keep_user_target_list_in_result |\n+-----------------------------------+\n| 1                                 |\n+-----------------------------------+\n1 row in set (0.01 sec)\n\nmysql&gt; select aA, bB, CC, abc, a_Bc_D from t1;--On, the query result set column names are case sensitive as specified by the user.\n+------+------+------+------+--------+\n| aA   | bB   | CC   | abc  | a_Bc_D |\n+------+------+------+------+--------+\n|    1 |    2 |    3 | A    |   10.9 |\n+------+------+------+------+--------+\n1 row in set (0.00 sec)\n\nmysql&gt; set global keep_user_target_list_in_result =0;--Turn off the query result set column name and user-specified name size consistency setting\nQuery OK, 0 rows affected (0.01 sec)\n\nmysql&gt; exit;--Parameters take effect after exiting the database and reconnecting\n\nmysql&gt; show variables like \"keep_user_target_list_in_result\";\n+---------------------------------+-------+\n| Variable_name                   | Value |\n+---------------------------------+-------+\n| keep_user_target_list_in_result | 0     |\n+---------------------------------+-------+\n1 row in set (0.00 sec)\n\nmysql&gt; select aA, bB, CC, abc, a_Bc_D from t1;--The column names of the query result set do not match the case of the user-specified name when the setting is turned off\n+------+------+------+------+--------+\n| aa   | bb   | cc   | abc  | a_bc_d |\n+------+------+------+------+--------+\n|    1 |    2 |    3 | A    |   10.9 |\n+------+------+------+------+--------+\n1 row in set (0.00 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/Variable/system-variables/lower_case_tables_name/","title":"lower_case_table_names Case sensitive support","text":"<p><code>lower_case_table_names</code> is a global variable that MatrixOne sets whether case is sensitive.</p> <p>Note</p> <p>Unlike mysql, MatrixOne supports only 0 and 1 modes for now, and defaults to 1 on both linux and mac systems.</p>"},{"location":"MatrixOne/Reference/Variable/system-variables/lower_case_tables_name/#view-lower_case_table_names","title":"View lower_case_table_names","text":"<p>View <code>lower_case_table_names</code> in MatrixOne using the following command:</p> <pre><code>show variables like \"lower_case_table_names\"; -- defaults to 1\n</code></pre>"},{"location":"MatrixOne/Reference/Variable/system-variables/lower_case_tables_name/#set-lower_case_table_names","title":"Set lower_case_table_names","text":"<p>Set <code>lower_case_table_names</code> in MatrixOne with the following command:</p> <pre><code>set global lower_case_table_names = 0; --default is 1, reconnecting to database takes effect\n</code></pre>"},{"location":"MatrixOne/Reference/Variable/system-variables/lower_case_tables_name/#explanation-of-parameters","title":"Explanation of parameters","text":""},{"location":"MatrixOne/Reference/Variable/system-variables/lower_case_tables_name/#parameter-is-set-to-0","title":"parameter is set to 0","text":"<p>Set <code>lower_case_table_names</code> to 0. Identifiers are stored as raw strings with names that are case sensitive.</p> <p>Examples</p> <pre><code>mysql&gt; show variables like \"lower_case_table_names\";--Check the default parameter, the default value is 1\n+------------------------+-------+\n| Variable_name          | Value |\n+------------------------+-------+\n| lower_case_table_names | 1     |\n+------------------------+-------+\n1 row in set (0.00 sec)\n\nset global lower_case_table_names = 0;--Reconnecting to the database takes effect\n\nmysql&gt; show variables like \"lower_case_table_names\";--Reconnect to the database to view the parameters, the change was successful\n+------------------------+-------+\n| Variable_name          | Value |\n+------------------------+-------+\n| lower_case_table_names | 0     |\n+------------------------+-------+\n1 row in set (0.00 sec)\n\ncreate table Tt (Aa int);\ninsert into Tt values (1), (2), (3);\n\nmysql&gt; select Aa from Tt;--Name comparison is case sensitive\n+------+\n| Aa   |\n+------+\n|    1 |\n|    2 |\n|    3 |\n+------+\n3 rows in set (0.03 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/Variable/system-variables/lower_case_tables_name/#parameter-set-to-1","title":"Parameter set to 1","text":"<p>Set <code>lower_case_table_names</code> to 1. identifiers are stored in lowercase and name comparisons are case insensitive.</p> <p>Example</p> <pre><code>set global lower_case_table_names = 1;--Reconnecting to the database takes effect\n\nmysql&gt; show variables like \"lower_case_table_names\";--Reconnect to the database to view the parameters, the change was successful\n+------------------------+-------+\n| Variable_name          | Value |\n+------------------------+-------+\n| lower_case_table_names | 1     |\n+------------------------+-------+\n1 row in set (0.00 sec)\n\ncreate table Tt (Aa int,Bb int);\ninsert into Tt values (1,2), (2,3), (3,4);\n\nmysql&gt; select Aa from Tt;--Name comparison is case insensitive\n+------+\n| aa   |\n+------+\n|    1 |\n|    2 |\n|    3 |\n+------+\n3 rows in set (0.03 sec)\n\n-- The alias of a column displays the original string when the result set is returned, but the name comparison is case insensitive, as shown in the following example:\nmysql&gt; select Aa as AA,Bb from Tt;\n+------+------+\n| AA   | bb   |\n+------+------+\n|    1 |    2 |\n|    2 |    3 |\n|    3 |    4 |\n+------+------+\n3 rows in set (0.00 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/Variable/system-variables/save_query_result/","title":"save_query_result Save query result support","text":"<p>When <code>save_query_result</code> is turned on, MatrixOne saves the query results.</p> <p>There are three parameters that have an impact on saving query results:</p> <ul> <li> <p><code>save_query_result</code>: Turn on/off saving query results.</p> </li> <li> <p><code>query_result_timeout</code>: Set how long to save query results.</p> </li> <li> <p><code>query_result_maxsize</code>: Sets the maximum value of a single query result.</p> </li> </ul>"},{"location":"MatrixOne/Reference/Variable/system-variables/save_query_result/#limitations","title":"Limitations","text":"<ul> <li>Only statements with returned results, such as <code>SELECT</code>, <code>SHOW</code>, <code>DESC</code>, <code>EXECUTE</code> statements, are supported for saving</li> <li>For <code>SELECT</code> statements, only the results of <code>SELECT</code> statements that start fixedly with <code>/*cloud_user */</code> and <code>/*save_result */</code> are saved.</li> </ul>"},{"location":"MatrixOne/Reference/Variable/system-variables/save_query_result/#turn-on-the-save-query-results-setting","title":"Turn on the Save Query Results setting","text":"<ul> <li>Turn on save query results for current session only:</li> </ul> <pre><code> -- defaults to off \nset save_query_result = on ```\n\n- To turn on saving query results globally:\n\n```sql\n-- defaults to off \nset global save_query_result = on </code></pre>"},{"location":"MatrixOne/Reference/Variable/system-variables/save_query_result/#set-save-time","title":"Set save time","text":"<p>Set the save time in hours.</p> <ul> <li>Open query results save time only for current session:</li> </ul> <pre><code>-- Defaults to 24 \nset query_result_timeout = 48 </code></pre> <ul> <li>To open query results globally save time:</li> </ul> <pre><code>-- defaults to 24 \nset global query_result_timeout = 48 </code></pre> <p>Note: Save timeIf the value set is shorter than the last setting, it does not affect the previous save result.</p>"},{"location":"MatrixOne/Reference/Variable/system-variables/save_query_result/#sets-the-maximum-value-of-a-single-query-result","title":"Sets the maximum value of a single query result","text":"<p>Sets the maximum value in MB for a single query result.</p> <ul> <li>Set a maximum value for query results only for the current session:</li> </ul> <pre><code>-- defaults to 100 \nset query_result_maxsize = 200 </code></pre> <ul> <li>Set the maximum value of query results for the global:</li> </ul> <pre><code>-- defaults to 100 \nset global query_result_maxsize = 200 </code></pre> <p>Note: The maximum value of a single query result does not affect the previously saved result size if the value set is smaller than the previous setting.</p>"},{"location":"MatrixOne/Reference/Variable/system-variables/save_query_result/#query-metadata-information","title":"Query metadata information","text":"<p>You can query metadata information using the following SQL statement:</p> <pre><code>select * from meta_scan(query_id) as u;\ncurrent account_id\nselect query_id from meta_scan(query_id) as u;\n</code></pre> <p>The metadata information is as follows:</p> column type comments query_id uuid Result ID statement text SQL statement executed account_id uint32 Account ID role_id uint32 Character ID result_path text The default path to save the query result is matrixone folder mo-data/s3, if you want to change the default path, you need to change <code>data-dir = \"mo-data/s3\"</code> in the configuration file. If you need to change the default path, you need to change <code>data-dir = \"mo-data/s3\"</code> in the configuration file. For a description of the configuration file parameters, see General Parameter Configuration created_time timestamp Creation time result_size float Result size in MB. tables text Tables used in SQL user_id uint32 User ID expired_time timestamp Timeout for query results column_map text If a query has columns with the same name, result scan remaps the columns."},{"location":"MatrixOne/Reference/Variable/system-variables/save_query_result/#save-query-results","title":"Save query results","text":"<p>You can save the query results on your local disk or S3.</p>"},{"location":"MatrixOne/Reference/Variable/system-variables/save_query_result/#syntax-structure","title":"Syntax structure","text":"<pre><code>MODUMP QUERY_RESULT query_id INTO s3_path\n[FIELDS TERMINATED BY 'char']\n[ENCLOSED BY 'char']\n[LINES TERMINATED BY 'string']\n[header 'bool']\n[MAX_FILE_SIZE unsigned_number]\n</code></pre> <ul> <li> <p>query_id: is a string of UUIDs.</p> </li> <li> <p>s3_path: is the path where the query result file is saved. The default save path is the matrixone folder mo-data/s3. To modify the default save path, modify <code>data-dir = \"mo-data/s3\"</code> in the configuration file. For a description of the profile parameters, see General Parameters Configuration</p> </li> </ul> <pre><code>root@rootMacBook-Pro 02matrixone % cd matrixone/mo-data\nroot@rootMacBook-Pro mo-data % ls\ntn-data         etl             local           logservice-data s3\n</code></pre> <p>Note: If you need to export a <code>csv</code> file. The path needs to start with <code>etl:</code> The beginning.</p> <ul> <li> <p>[FIELDS TERMINATED BY 'char']: Optional parameter. Field split symbol, defaults to single quotes<code>'</code>.</p> </li> <li> <p>[ENCLOSED BY 'char']: Optional parameter. Fields include symbols, defaulting to the quotient double sign <code>'</code>.</p> </li> <li> <p>[LINES TERMINATED BY 'string']: Optional parameter. End of line symbol, defaults to line break symbol <code>\\n</code>.</p> </li> <li> <p>[header 'bool']: optional argument. The bool type can be selected as <code>true</code> or <code>false</code>. The header row for each column name in the first line <code>of the csv</code> file.</p> </li> <li> <p>[MAX_FILE_SIZE unsigned_number]: Optional parameter. Maximum file size of the file in KB. The default is 0.</p> </li> </ul>"},{"location":"MatrixOne/Reference/Variable/system-variables/save_query_result/#examples","title":"Examples","text":"<ul> <li>Example 1</li> </ul> <pre><code>mysql&gt; set global save_query_result = on;\nmysql&gt; set global query_result_timeout = 24;\nmysql&gt; set global query_result_maxsize = 200;\nmysql&gt; create table t1 (a int);\nmysql&gt; insert into t1 values(1);\nmysql&gt; /* cloud_user */select a from t1;\n+------+\n| a    |\n+------+\n|    1 |\n+------+\n1 row in set (0.16 sec)\n-- Queries the ID of the most recently executed query in the current session\nmysql&gt; select last_query_id();\n+--------------------------------------+\n| last_query_id()                      |\n+--------------------------------------+\n| f005ebc6-a3dc-11ee-bb76-26dd28356ef3 |\n+--------------------------------------+\n1 row in set (0.12 sec)\n-- Get results for this query ID\nmysql&gt; select * from result_scan('f005ebc6-a3dc-11ee-bb76-26dd28356ef3') as t;\n+------+\n| a    |\n+------+\n|    1 |\n+------+\n1 row in set (0.01 sec)\n-- View metadata for this query ID\nmysql&gt; select * from meta_scan('f005ebc6-a3dc-11ee-bb76-26dd28356ef3') as t;\n+--------------------------------------+------------------+------------+---------+---------------------------------------------------------------------+---------------------+----------------------+--------+---------+---------------------+-----------+\n| query_id                             | statement        | account_id | role_id | result_path                                                         | create_time         | result_size          | tables | user_id | expired_time        | ColumnMap |\n+--------------------------------------+------------------+------------+---------+---------------------------------------------------------------------+---------------------+----------------------+--------+---------+---------------------+-----------+\n| f005ebc6-a3dc-11ee-bb76-26dd28356ef3 | select a from t1 |          0 |       0 | SHARED:/query_result/sys_f005ebc6-a3dc-11ee-bb76-26dd28356ef3_1.blk | 2023-12-26 18:53:01 | 0.000003814697265625 | t1     |       0 | 2023-12-27 18:53:01 | a -&gt; a    |\n+--------------------------------------+------------------+------------+---------+---------------------------------------------------------------------+---------------------+----------------------+--------+---------+---------------------+-----------+\n1 row in set (0.01 sec)\n\n-- Save query results locally\nMODUMP QUERY_RESULT 'f005ebc6-a3dc-11ee-bb76-26dd28356ef3' INTO 'etl:your_local_path';\n</code></pre> <ul> <li>Example 2</li> </ul> <pre><code>mysql&gt; set global save_query_result = on;\nmysql&gt; set global query_result_timeout = 24;\nmysql&gt; set global query_result_maxsize = 200;\nmysql&gt; create table t1 (a int);\nmysql&gt; insert into t1 values(1);\nmysql&gt; /* save_result */select a from t1;\n+------+\n| a    |\n+------+\n|    1 |\n+------+\n1 row in set (0.02 sec)\n\nmysql&gt; select last_query_id();\n+--------------------------------------+\n| last_query_id()                      |\n+--------------------------------------+\n| afc82394-a45e-11ee-bb9a-26dd28356ef3 |\n+--------------------------------------+\n1 row in set (0.00 sec)\n\nmysql&gt; select * from result_scan('afc82394-a45e-11ee-bb9a-26dd28356ef3') as t;\n+------+\n| a    |\n+------+\n|    1 |\n+------+\n1 row in set (0.01 sec)\n\nmysql&gt; select * from meta_scan('afc82394-a45e-11ee-bb9a-26dd28356ef3') as t;\n+--------------------------------------+------------------+------------+---------+---------------------------------------------------------------------+---------------------+----------------------+--------+---------+---------------------+-----------+\n| query_id                             | statement        | account_id | role_id | result_path                                                         | create_time         | result_size          | tables | user_id | expired_time        | ColumnMap |\n+--------------------------------------+------------------+------------+---------+---------------------------------------------------------------------+---------------------+----------------------+--------+---------+---------------------+-----------+\n| afc82394-a45e-11ee-bb9a-26dd28356ef3 | select a from t1 |          0 |       0 | SHARED:/query_result/sys_afc82394-a45e-11ee-bb9a-26dd28356ef3_1.blk | 2023-12-27 10:21:47 | 0.000003814697265625 | t1     |       0 | 2023-12-28 10:21:47 | a -&gt; a    |\n+--------------------------------------+------------------+------------+---------+---------------------------------------------------------------------+---------------------+----------------------+--------+---------+---------------------+-----------+\n1 row in set (0.00 sec)\n</code></pre> <ul> <li>Example 3</li> </ul> <pre><code>mysql&gt; set global save_query_result = on;\nmysql&gt; set global query_result_timeout = 24;\nmysql&gt; set global query_result_maxsize = 200;\nmysql&gt; create table t1 (a int);\nmysql&gt; insert into t1 values(1);\nmysql&gt; show create table t1;\n+-------+--------------------------------------------+\n| Table | Create Table                               |\n+-------+--------------------------------------------+\n| t1    | CREATE TABLE `t1` (\n`a` INT DEFAULT NULL\n) |\n+-------+--------------------------------------------+\n1 row in set (0.02 sec)\n\nmysql&gt; select * from meta_scan(last_query_id()) as t;\n+--------------------------------------+----------------------+------------+---------+---------------------------------------------------------------------+---------------------+-----------------------+--------+---------+---------------------+----------------------------------------------+\n| query_id                             | statement            | account_id | role_id | result_path                                                         | create_time         | result_size           | tables | user_id | expired_time        | ColumnMap                                    |\n+--------------------------------------+----------------------+------------+---------+---------------------------------------------------------------------+---------------------+-----------------------+--------+---------+---------------------+----------------------------------------------+\n| 617647f4-a45c-11ee-bb97-26dd28356ef3 | show create table t1 |          0 |       0 | SHARED:/query_result/sys_617647f4-a45c-11ee-bb97-26dd28356ef3_1.blk | 2023-12-27 10:05:17 | 0.0000858306884765625 |        |       0 | 2023-12-28 10:05:17 | Table -&gt; Table, Create Table -&gt; Create Table |\n+--------------------------------------+----------------------+------------+---------+---------------------------------------------------------------------+---------------------+-----------------------+--------+---------+---------------------+----------------------------------------------+\n1 row in set (0.00 sec)\n</code></pre> <ul> <li>Example 4</li> </ul> <pre><code>mysql&gt; set global save_query_result = on;\nmysql&gt; set global query_result_timeout = 24;\nmysql&gt; set global query_result_maxsize = 200;\nmysql&gt; create table t1 (a int);\nmysql&gt; insert into t1 values(1);\nmysql&gt; desc t1;\n+-------+---------+------+------+---------+-------+---------+\n| Field | Type    | Null | Key  | Default | Extra | Comment |\n+-------+---------+------+------+---------+-------+---------+\n| a     | INT(32) | YES  |      | NULL    |       |         |\n+-------+---------+------+------+---------+-------+---------+\n1 row in set (0.03 sec)\n\nmysql&gt; select * from meta_scan(last_query_id()) as t;\n+--------------------------------------+-----------+------------+---------+---------------------------------------------------------------------+---------------------+---------------------+------------+---------+---------------------+----------------------------------------------------------------------------------------------------------------+\n| query_id                             | statement | account_id | role_id | result_path                                                         | create_time         | result_size         | tables     | user_id | expired_time        | ColumnMap                                                                                                      |\n+--------------------------------------+-----------+------------+---------+---------------------------------------------------------------------+---------------------+---------------------+------------+---------+---------------------+----------------------------------------------------------------------------------------------------------------+\n| 143a54b6-a45d-11ee-bb97-26dd28356ef3 | desc t1   |          0 |       0 | SHARED:/query_result/sys_143a54b6-a45d-11ee-bb97-26dd28356ef3_1.blk | 2023-12-27 10:10:17 | 0.00016021728515625 | mo_columns |       0 | 2023-12-28 10:10:17 | Field -&gt; Field, Type -&gt; Type, Null -&gt; Null, Key -&gt; Key, Default -&gt; Default, Extra -&gt; Extra, Comment -&gt; Comment |\n+--------------------------------------+-----------+------------+---------+---------------------------------------------------------------------+---------------------+---------------------+------------+---------+---------------------+----------------------------------------------------------------------------------------------------------------+\n1 row in set (0.00 sec)\n</code></pre> <ul> <li>Example 5</li> </ul> <pre><code>mysql&gt; CREATE TABLE numbers(pk INTEGER PRIMARY KEY, ui BIGINT UNSIGNED, si BIGINT);\nQuery OK, 0 rows affected (0.02 sec)\n\nmysql&gt; INSERT INTO numbers VALUES (0, 0, -9223372036854775808), (1, 18446744073709551615, 9223372036854775807);\nQuery OK, 2 rows affected (0.01 sec)\n\nmysql&gt; SET @si_min = -9223372036854775808;\nQuery OK, 0 rows affected (0.00 sec)\n\nmysql&gt; PREPARE s2 FROM 'SELECT * FROM numbers WHERE si=?';\nQuery OK, 0 rows affected (0.01 sec)\n\nmysql&gt; EXECUTE s2 USING @si_min;\n+------+------+----------------------+\n| pk   | ui   | si                   |\n+------+------+----------------------+\n|    0 |    0 | -9223372036854775808 |\n+------+------+----------------------+\n1 row in set (0.02 sec)\n\nmysql&gt; select * from meta_scan(last_query_id()) as t;\n+--------------------------------------+---------------------------------------------------------------------------------------------------+------------+---------+---------------------------------------------------------------------+---------------------+----------------------+--------+---------+---------------------+------------------------------+\n| query_id                             | statement                                                                                         | account_id | role_id | result_path                                                         | create_time         | result_size          | tables | user_id | expired_time        | ColumnMap                    |\n+--------------------------------------+---------------------------------------------------------------------------------------------------+------------+---------+---------------------------------------------------------------------+---------------------+----------------------+--------+---------+---------------------+------------------------------+\n| e83b8df2-a45d-11ee-bb98-26dd28356ef3 | EXECUTE s2 USING @si_min // SELECT * FROM numbers WHERE si=? ; SET @si_min = -9223372036854775808 |          0 |       0 | SHARED:/query_result/sys_e83b8df2-a45d-11ee-bb98-26dd28356ef3_1.blk | 2023-12-27 10:16:13 | 0.000019073486328125 |        |       0 | 2023-12-28 10:16:13 | pk -&gt; pk, ui -&gt; ui, si -&gt; si |\n+--------------------------------------+---------------------------------------------------------------------------------------------------+------------+---------+---------------------------------------------------------------------+---------------------+----------------------+--------+---------+---------------------+------------------------------+\n1 row in set (0.00 sec)\n</code></pre> <ul> <li>Example 6</li> </ul> <pre><code>mysql&gt; set global save_query_result = on;\nmysql&gt; set global query_result_timeout = 24;\nmysql&gt; set global query_result_maxsize = 200;\nmysql&gt; create table t1 (a int);\nmysql&gt; insert into t1 values(1);\nmysql&gt; select * from t1;\n+------+\n| a    |\n+------+\n|    1 |\n+------+\n1 row in set (0.00 sec)\n\nmysql&gt; select * from meta_scan(last_query_id()) as t;\nERROR 20405 (HY000): file query_result_meta/sys_c16859e4-a462-11ee-bba0-26dd28356ef3.blk is not found\n</code></pre>"},{"location":"MatrixOne/Reference/Variable/system-variables/sql-mode/","title":"SQL Mode","text":"<p>sql_mode is a system parameter in MatrixOne that specifies the mode in which MatrixOne performs queries and operations. sql_mode can affect the syntax and semantic rules of MatrixOne, changing the behavior of MatrixOne queries for SQL. In this article, you will be introduced to the mode of sql_mode, what it does, and how to set SQL mode.</p> <p>Note</p> <p>MatrixOne currently supports only the <code>ONLY_FULL_GROUP_BY</code> mode. Other modes are syntax-only. <code>ONLY_FULL_GROUP_BY</code> is used to control the behavior of the GROUP BY statement. When <code>ONLY_FULL_GROUP_BY</code> mode is enabled, MatrixOne requires that the columns in the GROUP BY clause in the SELECT statement must be aggregate functions (such as SUM, COUNT, etc.) or columns that appear in the GROUP BY clause. If there are columns in the SELECT statement that do not meet this requirement, an error will be thrown. If your table structure is complex, you can choose to turn <code>ONLY_FULL_GROUP_BY</code> mode off for easy querying.</p>"},{"location":"MatrixOne/Reference/Variable/system-variables/sql-mode/#view-sql_mode","title":"View sql_mode","text":"<p>View sql_mode in MatrixOne using the following command:</p> <pre><code>SELECT @@global.sql_mode; --global mode \nSELECT @@session.sql_mode; --session mode \n</code></pre>"},{"location":"MatrixOne/Reference/Variable/system-variables/sql-mode/#set-sql_mode","title":"Set sql_mode","text":"<p>Set sql_mode in MatrixOne using the following command:</p> <pre><code>set global sql_mode = 'xxx' -- global mode, reconnecting to database takes effect \nset session sql_mode = 'xxx' -- session mode \n</code></pre>"},{"location":"MatrixOne/Reference/Variable/system-variables/sql-mode/#examples","title":"Examples","text":"<pre><code>CREATE TABLE student(\nid int,\nname char(20),\nage int,\nnation char(20)\n);\n\nINSERT INTO student values(1,'tom',18,'\u4e0a\u6d77'),(2,'jan',19,'\u4e0a\u6d77'),(3,'jen',20,'\u5317\u4eac'),(4,'bob',20,'\u5317\u4eac'),(5,'tim',20,'\u5e7f\u5dde');\n\nmysql&gt; select * from student group by nation;--This operation is not supported in `ONLY_FULL_GROUP_BY` mode\nERROR 1149 (HY000): SQL syntax error: column \"student.id\" must appear in the GROUP BY clause or be used in an aggregate function\n\nmysql&gt; SET session sql_mode='ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION,NO_ZERO_DATE,NO_ZERO_IN_DATE,STRICT_TRANS_TAB\nLES';--Turns off ONLY_FULL_GROUP_BY mode for the current session\nQuery OK, 0 rows affected (0.02 sec)\n\nmysql&gt; select * from student group by nation;--Turns off `ONLY_FULL_GROUP_BY` mode immediately in the current session\n+------+------+------+--------+\n| id   | name | age  | nation |\n+------+------+------+--------+\n|    1 | tom  |   18 | \u4e0a\u6d77   |\n|    3 | jen  |   20 | \u5317\u4eac   |\n|    5 | tim  |   20 | \u5e7f\u5dde   |\n+------+------+------+--------+\n3 rows in set (0.00 sec)\n\nmysql&gt; SET global sql_mode='ONLY_FULL_GROUP_BY';--Set the global ONLY_FULL_GROUP_BY mode on.\nQuery OK, 0 rows affected (0.02 sec)\n\nmysql&gt; select * from student group by nation;--ONLY_FULL_GROUP_BY mode does not take effect, because you need to reconnect to the database for global mode to take effect.\n+------+------+------+--------+\n| id   | name | age  | nation |\n+------+------+------+--------+\n|    1 | tom  |   18 | \u4e0a\u6d77   |\n|    3 | jen  |   20 | \u5317\u4eac   |\n|    5 | tim  |   20 | \u5e7f\u5dde   |\n+------+------+------+--------+\n3 rows in set (0.00 sec)\n\nmysql&gt; exit --Exit the current session\n\nmysql&gt; select * from student group by nation;--After reconnecting the database and executing the query, ONLY_FULL_GROUP_BY mode is successfully enabled.\nERROR 1149 (HY000): SQL syntax error: column \"student.id\" must appear in the GROUP BY clause or be used in an aggregate function\n</code></pre>"},{"location":"MatrixOne/Reference/Variable/system-variables/system-variables-overview/","title":"Server System Variables","text":"<p>MatrixOne server system variables are variables used to control or configure the behavior of the database engine or other components in the MatrixOne server. The values of these variables can be set and changed using the <code>SET</code> statement.</p> <p>System variables can be divided into two categories: Global variables and Session variables.</p> <ul> <li> <p>Global variables: Global variables apply to all connected sessions of the MatrixOne server. Their values are set when the MatrixOne server starts and remain unchanged until the server is shut down. Global variables are typically used to control the behavior of the MatrixOne server, such as specifying default backup and restore locations, the default language environment, and so on.</p> </li> <li> <p>Session variables: Session variables apply only to the currently connected user's session of the MatrixOne server. Their values can be changed anytime during the user's connection and are automatically cleared when the user disconnects. Session variables are typically used to control session behavior, such as how to print the information displayed and specify transaction isolation levels.</p> </li> </ul>"},{"location":"MatrixOne/Reference/Variable/system-variables/system-variables-overview/#how-to-query-system-variables","title":"How to query system variables?","text":"<p>You can use the following SQL to query:</p> <pre><code>SHOW VARIABLES;\n</code></pre> <p>This will list all system variables and their current values. If you only want to see system variables related to a specific topic, you can use the following syntax:</p> <pre><code>SHOW VARIABLES LIKE '%theme%';\n</code></pre> <p>This will list all system variables with names containing the word <code>theme</code> and their current values.</p> <p>Note: The <code>LIKE</code> operator is used for fuzzy matching query strings, with % representing zero or more arbitrary characters. Therefore, the above command will match any system variables with names containing the word <code>theme</code>.</p>"},{"location":"MatrixOne/Reference/Variable/system-variables/system-variables-overview/#how-to-query-global-variables","title":"How to query global variables?","text":"<p>You can use the following SQL to query:</p> <pre><code>SHOW GLOBAL VARIABLES;\n</code></pre> <p>This will list all global variables and their current values. If you only want to see global variables related to a specific topic, you can use the following syntax:</p> <pre><code>SHOW GLOBAL VARIABLES LIKE '%theme%';\n</code></pre> <p>This will list all global variables with names containing the word <code>theme</code> and their current values.</p> <p>Note: The <code>LIKE</code> operator is used for fuzzy matching query strings, with % representing zero or more arbitrary characters. Therefore, the above command will match any global variables with names containing the word <code>theme</code>.</p>"},{"location":"MatrixOne/Reference/Variable/system-variables/system-variables-overview/#how-to-query-session-variables","title":"How to query session variables?","text":"<p>You can use the following SQL to query:</p> <pre><code>SHOW SESSION VARIABLES;\n</code></pre> <p>This will list all session variables and their current values. If you only want to see session variables related to a specific topic, you can use the following syntax:</p> <pre><code>SHOW SESSION VARIABLES LIKE '%theme%';\n</code></pre> <p>This will list all session variables with names containing the word <code>theme</code> and their current values.</p> <p>Note: The <code>LIKE</code> operator is used for fuzzy matching query strings, with % representing zero or more arbitrary characters. Therefore, the above command will match any session variables with names containing the word <code>theme</code>.</p>"},{"location":"MatrixOne/Reference/Variable/system-variables/system-variables-overview/#system-veariable-reference","title":"System Veariable Reference","text":"Variable_name Cmd-Line(Y/N) Option File(Y/N) Variable Type System Var(Y/N) Var Scope(Global/Both/Session) Dynamic(Y/N) Default Value Optional value auto_increment_increment Y N int Y Both Y 1 1-65535 auto_increment_offset Y N int Y Both Y 1 1-65535 autocommit Y N bool Y Both Y TRUE FALSE character_set_client Y N string Y Both Y \"utf8mb4\" character_set_connection Y N string Y Both Y \"utf8mb4\" character_set_database Y N string Y Both Y \"utf8mb4\" character_set_results Y N string Y Both Y \"utf8mb4\" character_set_server Y N string Y Both Y \"utf8mb4\" collation_connection Y N string Y Both Y \"default\" collation_server Y N string Y Both Y \"utf8mb4_bin\" completion_type Y N enum Y Both Y \"NO_CHAIN\" \"NO_CHAIN\",\"CHAIN\", \"RELEASE\" host Y N string Y Both N \"0.0.0.0\" init_connect Y N string Y Both Y \"\" interactive_timeout Y N int Y Both Y 28800 1-31536000 license Y N string Y Both N \"APACHE\" lower_case_table_names Y N int Y Both N 1 0-2 max_allowed_packet Y N int Y Both Y 16777216 1024-1073741824 net_write_timeout Y N int Y Both Y 60 1-31536000 performance_schema Y N int Y Both Y 0 0-1 port Y N int Y Both N 6001 0-65535 profiling Y N int Y Both Y 0 0-1 query_result_maxsize Y N uint Y Both Y 100 0-18446744073709551615 query_result_timeout Y N uint Y Both Y 24 0-18446744073709551615 save_query_result Y N bool Y Both Y FALSE TRUE sql_mode Y N set Y Both Y \"ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION\" \"ANSI\", \"TRADITIONAL\", \"ALLOW_INVALID_DATES\", \"ANSI_QUOTES\", \"ERROR_FOR_DIVISION_BY_ZERO\", \"HIGH_NOT_PRECEDENCE\", \"IGNORE_SPACE\", \"NO_AUTO_VALUE_ON_ZERO\", \"NO_BACKSLASH_ESCAPES\", \"NO_DIR_IN_CREATE\", \"NO_ENGINE_SUBSTITUTION\", \"NO_UNSIGNED_SUBTRACTION\", \"NO_ZERO_DATE\", \"NO_ZERO_IN_DATE\", \"ONLY_FULL_GROUP_BY\", \"PAD_CHAR_TO_FULL_LENGTH\", \"PIPES_AS_CONCAT\", \"REAL_AS_FLOAT\", \"STRICT_ALL_TABLES\", \"STRICT_TRANS_TABLES\", \"TIME_TRUNCATE_FRACTIONAL\" sql_safe_updates Y N int Y Both Y 0 0-1 sql_select_limit Y N uint Y Both Y 18446744073709551615 0-18446744073709551615 system_time_zone Y N string Y Both N \"\" time_zone Y N string Y Both N \"SYSTEM\" transaction_isolation Y N enum Y Both Y \"REPEATABLE-READ\" \"READ-UNCOMMITTED\", \"READ-COMMITTED\", \"REPEATABLE-READ\",\"REPEATABLE-READ\", \"SERIALIZABLE\" transaction_read_only Y N int Y Both Y 0 0-1 version_comment Y N string Y Both N \"MatrixOne\" wait_timeout Y N int Y Both Y 28800 1-2147483"},{"location":"MatrixOne/Reference/Variable/system-variables/system-variables-overview/#constraints","title":"Constraints","text":"<p>MatrixOne is compatible with MySQL, and the SQL mode only supports the <code>ONLY_FULL_GROUP_BY</code> mode; other SQL modes are only supported by syntax and have no actual effect.</p>"},{"location":"MatrixOne/Reference/Variable/system-variables/timezone/","title":"Time Zone Support","text":"<p>The time zone in MatrixOne is decided by three <code>time_zone</code> system variables: <code>global.time_zone</code>, <code>session.time_zone</code>, <code>global.system_time_zone</code>.</p> <ul> <li> <p><code>global.system_time_zone</code> indicates the server system time zone. When the server starts, it attempts to determine the time zone of the host machine and uses it to set the system_time_zone system variable.</p> </li> <li> <p>The server current time zone. The <code>global.time_zone</code> system variable indicates the time zone the server currently is operating in. The initial time_zone value is 'SYSTEM', which indicates that the server time zone is the same as the system time zone.</p> </li> </ul> <p>You can use the following statement to set the global server time_zone value at runtime. But it won't be effective in the current session, only if you exit and reconnect to MatrixOne you may see the time_zone affected.</p> <pre><code>&gt; SET GLOBAL time_zone = timezone;\n</code></pre> <ul> <li>Per-session time zones. Each client that connects has its own session time zone setting, given by the session time_zone variable. Initially, the session variable takes its value from the global time_zone variable, but the client can change its own time zone with this statement. This setting will only last during the current session.</li> </ul> <pre><code>SET time_zone = timezone;\n</code></pre> <p>You can use the following statement to view the current values of the global, client-specific and system time zones:</p> <pre><code>&gt; SELECT @@global.time_zone, @@session.time_zone, @@global.system_time_zone;\n+-------------+-------------+--------------------+\n| @@time_zone | @@time_zone | @@system_time_zone |\n+-------------+-------------+--------------------+\n| timezone    | +08:00      | CST                |\n+-------------+-------------+--------------------+\n1 row in set (0.01 sec)\n</code></pre> <p>To set the format of the value of the time_zone:</p> <ul> <li> <p>The value <code>SYSTEM</code> indicates that the time zone should be the same as the server system time zone.</p> </li> <li> <p>The value <code>UTC</code> indicates that the time zone is set to Coordinated Universal Time. Only <code>UTC</code> as time zone abbreviation is supported.</p> </li> <li> <p>The value can be given as a string indicating an offset from UTC of the form <code>HH:MM</code> with a + or -, such as <code>+10:00</code> or <code>-06:00</code>. The permitted range is <code>-13:59</code> to <code>+14:00</code>, inclusive.</p> </li> </ul> <p>The current session time zone setting affects the display and storage of time values that are zone-sensitive. This includes the values displayed by functions such as <code>NOW()</code> and values stored in and retrieved from TIMESTAMP columns.</p> <p>The session time zone setting does not affect values displayed by functions such as UTC_TIMESTAMP() or values in DATE, TIME, or DATETIME columns.</p> <p>Note</p> <p>Only the values of the Timestamp data type is affected by time zone. This is because the Timestamp data type uses the literal value + time zone information. Other data types, such as Datetime/Date/Time, do not have time zone information, thus their values are not affected by the changes of time zone.</p> <pre><code>&gt; SELECT @@global.time_zone, @@session.time_zone, @@global.system_time_zone;\n+-------------+-------------+--------------------+\n| @@time_zone | @@time_zone | @@system_time_zone |\n+-------------+-------------+--------------------+\n| SYSTEM      | SYSTEM      | CST                |\n+-------------+-------------+--------------------+\n1 row in set (0.00 sec)\n\n&gt; create table t (ts timestamp, dt datetime);\nQuery OK, 0 rows affected (0.02 sec)\n\nmysql&gt; set @@time_zone = 'UTC';\nQuery OK, 0 rows affected (0.00 sec)\n\nmysql&gt; insert into t values ('2017-09-30 11:11:11', '2017-09-30 11:11:11');\nQuery OK, 1 row affected (0.02 sec)\n\nmysql&gt; set @@time_zone = '+08:00';\nQuery OK, 0 rows affected (0.00 sec)\n\nmysql&gt; select * from t;\n+---------------------+---------------------+\n| ts                  | dt                  |\n+---------------------+---------------------+\n| 2017-09-30 19:11:11 | 2017-09-30 11:11:11 |\n+---------------------+---------------------+\n1 row in set (0.00 sec)\n</code></pre> <p>In this example, no matter how you adjust the value of the time zone, the value of the Datetime data type is not affected. But the displayed value of the Timestamp data type changes if the time zone information changes. In fact, the value that is stored in the storage does not change, it's just displayed differently according to different time zone setting.</p> <p>Note</p> <p>Time zone is involved during the conversion of the value of Timestamp and Datetime, which is handled based on the current time_zone.</p>"},{"location":"MatrixOne/Reference/Variable/system-variables/timezone/#changing-matrixone-time-zone","title":"Changing MatrixOne Time Zone","text":"<ol> <li>View the current time and time zone:</li> </ol> <pre><code>&gt; select now();\n+----------------------------+\n| now()                      |\n+----------------------------+\n| 2022-10-14 18:38:27.876181 |\n+----------------------------+\n1 row in set (0.00 sec)\n\n&gt; show variables like \"%time_zone%\";\n+------------------+--------+\n| Variable_name    | Value  |\n+------------------+--------+\n| system_time_zone | CST    |\n| time_zone        | SYSTEM |\n+------------------+--------+\n2 rows in set (0.00 sec)\n</code></pre> <ul> <li> <p><code>time_zone</code> indicates that MatrixOne uses the system time zone.</p> </li> <li> <p><code>system_time_zone</code> indicates the time zone which server system uses.</p> </li> <li> <p>modify the time zone:</p> </li> </ul> <pre><code>set global time_zone = '+08:00';\nset time_zone = '+08:00';\n</code></pre> <ul> <li><code>set global time_zone = '+08:00';</code>: Change the global time zone to Beijing time if we are in the east eight zones.</li> <li><code>set time_zone = '+08:00';</code>: Change the time zone of the current session.</li> </ul>"},{"location":"MatrixOne/Reference/Variable/system-variables/timezone/#constraints","title":"Constraints","text":"<p>Only <code>(+/-)HH:MM</code> form and <code>UTC</code> is supported for setting <code>time_zone</code> values.  </p>"},{"location":"MatrixOne/Reference/mo-tools/mo_ctl/","title":"mo_ctl Distributed Edition Tool Guide","text":"<p><code>mo_ctl</code> Distributed Edition is a command-line tool for business users that assists them in deploying MatrixOne distributed clusters, installing related components, and ultimately providing MatrixOne services to users</p> <p>Note</p> <p>mo_ctl Distributed Edition is an efficient database cluster management tool designed for enterprise users. To get a download path for the tool, contact your MatrixOne account manager.</p>"},{"location":"MatrixOne/Reference/mo-tools/mo_ctl/#overview-of-features","title":"Overview of features","text":"<p><code>mo_ctl</code> has now been adapted to the operating system as shown in the following table:</p> Operating System Version Debian 11 \u53ca\u4ee5\u4e0a Ubuntu 20.04 \u53ca\u4ee5\u4e0a UOS 20.0.0 Open  EulerOS 20.3.0 <p><code>mo_ctl</code>'s current list of features is shown in the following table:</p> Command Features <code>mo_ctl help</code> See a list of statements and functions for the <code>mo_ctl</code> tool itself. <code>mo_ctl precheck</code> Check the dependencies needed to install the cluster, e.g. CPU, memory, etc. <code>mo_ctl install</code> Create the cluster, install the appropriate plug-ins, and initialize the matrixone cluster according to the configuration file. <code>mo_ctl registry</code> Operate on highly available mirror repositories created in the cluster, e.g., add, delete, change, and check mirrors. <code>mo_ctl node</code> Manage nodes in the cluster, add nodes, delete nodes, etc. <code>mo_ctl matrixone</code> Manages matrixone clusters in a cluster, creating, starting, stopping, and deleting them. <code>mo_ctl s3</code> Manage distributed minio in the cluster, check status, expand capacity, and more. <code>mo_ctl backup</code> Perform backups and restores of matrixone clusters in the cluster. <code>mo_ctl destroy</code> Destroy the matrixone service and wipe the cluster."},{"location":"MatrixOne/Reference/mo-tools/mo_ctl/#get-started-quickly","title":"Get started quickly","text":"<ol> <li> <p>Use the command <code>mo_ctl help</code> to view the tool guide.</p> </li> <li> <p>Use the command <code>mo_ctl precheck</code> to see if the predependencies are met.</p> <pre><code>mo_ctl precheck --config xxx.yaml \n</code></pre> </li> <li> <p>Deploy the MatrixOne cluster with the command <code>mo_ctl install</code>:</p> <pre><code>mo_ctl install --config xxx.yaml \n</code></pre> </li> <li> <p>Use the command <code>mo_ctl matrixone list</code> to check the status of MatrixOne.</p> <pre><code>mo_ctl matrixone list --type cluster \n</code></pre> </li> </ol>"},{"location":"MatrixOne/Reference/mo-tools/mo_ctl/#reference-command-guide","title":"Reference Command Guide","text":""},{"location":"MatrixOne/Reference/mo-tools/mo_ctl/#help","title":"help","text":"<p>Use <code>mo_ctl help</code> to print the reference guide.</p> <pre><code>./mo_ctl help\nInstall, destroy, and operation matrixone cluster\n\nUsage:\n  mo_ctl [command]\n\nAvailable Commands:\n  backup      backup matrixone cluster\n  completion  Generate the autocompletion script for the specified shell\n  destroy     destroy k8s cluster and apps on it\n  help        Help about any command\n  install     Install k8s, matrixone, minio, and other apps\n  matrixone   matrixone operation cmd\n  precheck    precheck cluster machine environment before install\n  registry    registry operations\n\nFlags:\n      --config string       Specify the mo_ctl config file\n  -d, --debug               turn on debug mode\n  -h, --help                help for mo_ctl\n      --kubeconfig string   Path to the kubeconfig file to use (default \"/root/.kube/config\")\n      --logfile string      Specify the log file\n\nUse \"mo_ctl [command] --help\" for more information about a command.\n</code></pre>"},{"location":"MatrixOne/Reference/mo-tools/mo_ctl/#precheck","title":"precheck","text":"<p>Use <code>mo_ctl precheck</code> to precheck whether the hardware and software environments are suitable for installing MatrixOne.</p> <pre><code>./mo_ctl precheck --help\nprecheck cluster machine environment before install\n\nUsage:\n  mo_ctl precheck [flags]\n\nFlags:\n  -h, --help   help for precheck\n</code></pre>"},{"location":"MatrixOne/Reference/mo-tools/mo_ctl/#install","title":"install","text":"<p>Use <code>mo_ctl install</code> to install k8s, matrixone, minio, and other applications on your computer (machine or virtual machine). You will need to contact your account manager for the download path to the mirror package before executing this command.</p> <ul> <li>clusterimage.tar: for those who need to use <code>mo_ctl</code> to create a cluster and install related components with the base k8s component and the corresponding app component for matrixone</li> <li>moappdistro.tar: for existing k8s clusters, requires component management using <code>mo_ctl</code> with matrixone and corresponding components</li> </ul> <pre><code>./mo_ctl install --help\nInstall k8s, matrixone, minio, and other apps\n\nUsage:\n  mo_ctl install [flags]\n\nFlags:\n      --app       only install k8s app\n      --dry-run   dry run\n  -h, --help      help for install\n</code></pre>"},{"location":"MatrixOne/Reference/mo-tools/mo_ctl/#destory","title":"destory","text":"<p>Use <code>mo_ctl destroy</code> to destroy the k8s cluster and the applications on it.</p> <pre><code>./mo_ctl destroy --help\ndestroy k8s cluster and apps on it\n\nUsage:\n  mo_ctl destroy [flags]\n\nFlags:\n      --configmap   get clusterfile from k8s configmap\n      --dry-run     dry run\n      --force       force destroy, no notice\n  -h, --help        help for destroy\n</code></pre>"},{"location":"MatrixOne/Reference/mo-tools/mo_ctl/#register","title":"register","text":"<p>Use <code>mo_ctl register</code> to manipulate the highly available mirror repository created in the cluster, for example: add, delete, and lookup mirrors.</p> <pre><code> mo_ctl registry --help\nUsage:\n  mo_ctl registry [flags]\n  mo_ctl registry [command]\n\nAliases:\n  registry, reg\n\nAvailable Commands:\n  delete      delete (image)\n  list        list (image | chart)\n  push        push (image | chart)\n\nFlags:\n  -h, --help          help for registry\n      --type string   registry type (image | chart) (default \"image\")\n</code></pre>"},{"location":"MatrixOne/Reference/mo-tools/mo_ctl/#backup","title":"backup","text":"<p>Use <code>mo_ctl backup</code> to backup, restore, and more to a matrixone cluster in a cluster</p> <pre><code> ./mo_ctl backup --help\nbackup matrixone cluster\n\nUsage:\n  mo_ctl backup [flags]\n  mo_ctl backup [command]\n\nAvailable Commands:\n  list        list matrixone cluster backup revison\n  restore     restore backup matrixone cluster\n  start       start backup matrixone cluster\n\nFlags:\n  -h, --help   help for backup\n</code></pre> <ul> <li> <p>start</p> <ol> <li> <p>First you need to prepare a yaml file that describes the backup job, where the generated yaml name is preset as backup.yaml.</p> <pre><code>apiVersion: core.matrixorigin.io/v1alpha1\nkind: BackupJob\nmetadata:\n# Specify the name of the job here\nname: backupjob\n# This specifies the namespace to which the job belongs\n# \u6ce8\u610f:\u6b64\u5904\u8981\u4e0e\u9700\u8981\u5907\u4efd\u7684 mo \u96c6\u7fa4\u5904\u4e8e\u540c\u4e00\u4e2a namespace\nnamespace: mocluster1\nspec:\nsource:\n    # The name of the mo cluster, available via the mo_ctl matrixone list command.\n    clusterRef: mocluster-mocluster1\n# Configure the backup storage location, either object storage or local path storage. For details, refer to https://github.com/matrixorigin/matrixone-operator/blob/main/docs/reference/api-reference.md#backupjob\ntarget:\n    s3:\n    type: minio\n    endpoint: http://minio.s3-minio-tenant-test1\n    path: mo-test/backup-01\n    secretRef:\n        name: minio\n</code></pre> </li> <li> <p>Create a backup job for the backup operation with the following command</p> <pre><code># An exit code of 0 proves that the backup job was created successfully\nsudo ./mo_ctl backup start --values backup.yaml \n</code></pre> </li> <li> <p>After successful creation, you can wait for the backup to complete with the following command</p> <pre><code># The backupjob here is the name defined in step one\nsudo kubectl wait --for=condition=ended backupjob --all -A --timeout=5m \n</code></pre> </li> </ol> </li> <li> <p>restore</p> <ol> <li> <p>Gets the name (ID) of the backup job, which can be obtained by</p> <pre><code>sudo ./mo_ctl backup list \n</code></pre> </li> <li> <p>First you need to prepare a yaml file that describes the restore job, where the generated yaml name is preset as restore.yaml.</p> <pre><code># In addition to restoreFrom, other fields can be found at https://github.com/matrixorigin/matrixone-operator/blob/main/docs/reference/api-reference.md#matrixonecluster\napiVersion: core.matrixorigin.io/v1alpha1\nkind: MatrixOneCluster\nmetadata:\nname: morestore\nnamespace: mocluster1\nspec:\n# Here you need to fill in the name of the backup job you got in step 1\nrestoreFrom: #BackupName\n# Here you need to fill in the actual mirror repository information\nimageRepository: sea.hub:5000/matrixorigin/matrixone\nversion: 1.1.0\nlogService:\nreplicas: 1\nsharedStorage:\n    # Here you need to fill in the actual object storage information\n    s3:\n    type: minio\n    path: mo-test/backup-01\n    endpoint: http://minio.s3-minio-tenant-test1\n    secretRef:\n        name: minio\nvolume:\n    size: 10Gi\ntn:\nreplicas: 1\ncacheVolume:\n    size: 10Gi\ncnGroups:\n- name: tp\nreplicas: 1\ncacheVolume:\nsize: 10Gi\n</code></pre> </li> <li> <p>Perform backup restore commands  </p> <pre><code>sudo ./mo_ctl backup restore --values restore.yaml \n</code></pre> </li> </ol> </li> </ul>"},{"location":"MatrixOne/Reference/mo-tools/mo_ctl/#matrixone","title":"matrixone","text":"<p>Use <code>mo_ctl matrixone</code> to manage matrixone clusters in a cluster, create, start, stop, delete, and more</p> <pre><code>./mo_ctl matrixone --help\nUsed for matrixone operation cmd\n\nUsage:\n  mo_ctl matrixone [flags]\n  mo_ctl matrixone [command]\n\nAliases:\n  matrixone, mo\n\nAvailable Commands:\n  history     history all matrixone (cluster | operator)\n  list        list matrixone (cluster | operator)\n  remove      remove matrixone (cluster)\n  rollback    rollback depoly of matrixone (cluster | operator)\n  setup       setup matrixone (cluster)\n  start       start matrixone (cluster)\n  stop        stop matrixone (cluster)\n  upgrade     upgrade matrixone (cluster | operator)\n\nFlags:\n      --dry-run       dry run\n  -h, --help          help for matrixone\n      --name string   Specify matrixorigin cluster name\n      --type string   Specify a type (cluster | operator) (default \"cluster\")\n</code></pre>"},{"location":"MatrixOne/Reference/mo-tools/mo_ctl_standalone/","title":"mo_ctl Standalone Tools Guide","text":"<p><code>mo_ctl</code> Standalone is a command-line tool that helps you with deployment installation, start-stop control, and database connectivity for Standalone MatrixOne.</p>"},{"location":"MatrixOne/Reference/mo-tools/mo_ctl_standalone/#overview-of-features","title":"Overview of features","text":"<p><code>mo_ctl</code>'s currently adapted operating systems are shown in the following table:</p> Operating System Version Debian 11 and above Ubuntu 20.04 and above macOS Monterey 12.3 and above OpenCloudOS v8.0 / v9.0 Open  EulerOS 20.03 TencentOS Server v2.4 / v3.1 UOS V20 KylinOS V10 KylinSEC v3.0 <p><code>mo_ctl</code>'s current list of features is shown in the following table.</p> commandS clarification <code>mo_ctl help</code> View a list of statements and functions for the <code>mo_ctl</code> tool itself <code>mo_ctl precheck</code> Check the dependencies required for MatrixOne source code installation, which are golang, gcc, git, MySQL Client. <code>mo_ctl deploy</code> Download, install and compile the appropriate version of MatrixOne, the latest stable version is installed by default. <code>mo_ctl start</code> Starting the MatrixOne Service <code>mo_ctl status</code> Check if the MatrixOne service is running <code>mo_ctl stop</code> Stop all MatrixOne service processes <code>mo_ctl restart</code> Restarting the MatrixOne Service <code>mo_ctl connect</code> Calling MySQL Client to Connect to MatrixOne Service <code>mo_ctl upgrade</code> Upgrading/downgrading MatrixOne from the current version to a release or commit id version <code>mo_ctl set_conf</code> Setting the parameters for each type of use <code>mo_ctl get_conf</code> View currently used parameters <code>mo_ctl uninstall</code> Uninstall MatrixOne from MO_PATH path <code>mo_ctl watchdog</code> Set up a timed task to ensure MatrixOne service availability, checking the status of MatrixOne every minute and automatically pulling up the service if it is found to be aborted <code>mo_ctl sql</code> Execute SQL or a text file consisting of SQL directly by command. <code>mo_ctl ddl_convert</code> Tools for Converting MySQL DDL Statements to MatrixOne Statements <code>mo_ctl get_cid</code> View the current version of the source code that was downloaded from the repository using MatrixOne <code>mo_ctl get_branch</code> View the current branch version of a repository downloaded using MatrixOne <code>mo_ctl pprof</code> Used to collect MatrixOne performance analysis data"},{"location":"MatrixOne/Reference/mo-tools/mo_ctl_standalone/#install-mo_ctl","title":"Install mo_ctl","text":"<p>Depending on whether you have Internet access, you can choose to install the <code>mo_ctl</code> tool online or offline. You need to be careful to always execute commands as root or with sudo privileges (and add sudo before each command). Meanwhile, <code>install.sh</code> will use the <code>unzip</code> command to extract <code>the mo_ctl</code> package. Make sure the <code>unzip</code> command is installed.</p>"},{"location":"MatrixOne/Reference/mo-tools/mo_ctl_standalone/#install-online","title":"Install online","text":"<pre><code>wget https://raw.githubusercontent.com/matrixorigin/mo_ctl_standalone/main/install.sh &amp;&amp; sudo bash +x ./install.sh\n\n# Alternate address\nwget https://ghproxy.com/https://github.com/matrixorigin/mo_ctl_standalone/blob/main/install.sh &amp;&amp; sudo bash +x install.sh \n</code></pre> <p>For users running this command in a macOS environment, if you are a non-root user, run <code>install.sh</code> with the following statement:</p> <pre><code>sudo -u $(whoami) bash +x ./install.sh \n</code></pre>"},{"location":"MatrixOne/Reference/mo-tools/mo_ctl_standalone/#offline-installation","title":"Offline installation","text":"<pre><code># 1. Download the installation script to your local computer before uploading it to the installation machine\nwget https://raw.githubusercontent.com/matrixorigin/mo_ctl_standalone/main/install.sh \nwget https://github.com/matrixorigin/mo_ctl_standalone/archive/refs/heads/main.zip -O mo_ctl.zip\n\n# If the original github address downloads too slowly, you can try downloading from the following mirror address:\nwget https://mirror.ghproxy.com/https://github.com/matrixorigin/mo_ctl_standalone/blob/main/install.sh \nwget https://githubfast.com/matrixorigin/mo_ctl_standalone/archive/refs/heads/main.zip -O mo_ctl.zip\n\n# 2. Install from offline package\nbash +x ./install.sh mo_ctl.zip \n</code></pre>"},{"location":"MatrixOne/Reference/mo-tools/mo_ctl_standalone/#get-started-quickly","title":"Get started quickly","text":"<p>The Deployment Standalone Edition of MatrixOne can be quickly installed by following these steps, and the detailed guide provides a view of the Standalone Deployment MatrixOne.</p> <ol> <li> <p>Use the command <code>mo_ctl help</code> to view the tool guide.</p> </li> <li> <p>Use the command <code>mo_ctl precheck</code> to see if the predependencies are met.</p> </li> <li> <p>Use the command <code>mo_ctl get_conf</code> to set the relevant parameters, which may be configured as follows:</p> <pre><code>mo_ctl set_conf MO_PATH=\"/data/mo/matrixone\" #Set custom MatrixOne download path \nmo_ctl set_conf MO_GIT_URL=\"https://githubfast.com/matrixorigin/matrixone.git\" #Set mirror download address for slow download of github original address\n</code></pre> </li> <li> <p>Install and deploy the latest stable version of MatrixOne using the command <code>mo_ctl deploy</code>.</p> </li> <li> <p>Start the MatrixOne service with the command <code>mo_ctl start</code>.</p> </li> <li> <p>Use the command <code>mo_ctl connect</code> to connect to the MatrixOne service.</p> </li> </ol>"},{"location":"MatrixOne/Reference/mo-tools/mo_ctl_standalone/#reference-command-guide","title":"Reference Command Guide","text":""},{"location":"MatrixOne/Reference/mo-tools/mo_ctl_standalone/#help-print-reference-guide","title":"help - Print Reference Guide","text":"<pre><code>mo_ctl help\nUsage             : mo_ctl [option_1] [option_2]\n\n  [option_1]      : available: connect | ddl_connect | deploy | get_branch | get_cid | get_conf | help | pprof | precheck | query | restart | set_conf | sql | start | status | stop | uninstall | upgrade | watchdog\n  1) connect      : connect to mo via mysql client using connection info configured\n  2) ddl_convert  : convert ddl file to mo format from other types of database\n  3) deploy       : deploy mo onto the path configured\n  4) get_branch   : upgrade or downgrade mo from current version to a target commit id or stable version\n  5) get_cid      : print mo git commit id from the path configured\n  6) get_conf     : get configurations\n  7) help         : print help information\n  8) pprof        : collect pprof information\n  9) precheck     : check pre-requisites for mo_ctl\n  10) restart     : a combination operation of stop and start\n  11) set_conf    : set configurations\n  12) sql         : execute sql from string, or a file or a path containg multiple files\n  13) start       : start mo-service from the path configured\n  14) status      : check if there's any mo process running on this machine\n  15) stop        : stop all mo-service processes found on this machine\n  16) uninstall   : uninstall mo from path MO_PATH=/data/mo/20230712_1228//matrixone\n  17) upgrade     : upgrade or downgrade mo from current version to a target commit id or stable version\n  18) watchdog    : setup a watchdog crontab task for mo-service to keep it alive\n  e.g.            : mo_ctl status\n\n  [option_2]      : Use \" mo_ctl [option_1] help \" to get more info\n  e.g.            : mo_ctl deploy help\n</code></pre> <p>Use <code>mo_ctl [option_1] help</code> to get a guide to the next level of <code>mo_ctl [option_1]</code> functionality.</p>"},{"location":"MatrixOne/Reference/mo-tools/mo_ctl_standalone/#precheck-check-for-predependencies","title":"precheck - check for predependencies","text":"<p>Use <code>mo_ctl precheck</code> to check for pre-dependencies before installing MatrixOne in source code, which currently depends on <code>go</code>/<code>gcc</code>/<code>git</code>/<code>mysql (client)</code>.</p> <pre><code>mo_ctl precheck help\nUsage         : mo_ctl precheck # check pre-requisites for mo_ctl\n   Check list : go gcc git mysql\n</code></pre>"},{"location":"MatrixOne/Reference/mo-tools/mo_ctl_standalone/#deploy-install-matrixone","title":"deploy - Install MatrixOne","text":"<p>Use <code>mo_ctl deploy [mo_version] [force]</code> to install the deployment stable version of MatrixOne, or a specified version. The <code>force</code> option allows you to remove an existing version of MatrixOne in the same directory and force a new installation.</p> <pre><code>mo_ctl deploy help\nUsage         : mo_ctl deploy [mo_version] [force] # deploy mo onto the path configured\n  [mo_version]: optional, specify an mo version to deploy\n  [force]     : optional, if specified will delete all content under MO_PATH and deploy from beginning\n  e.g.        : mo_ctl deploy             # default, same as mo_ctl deploy 1.2.3\n              : mo_ctl deploy main        # deploy development latest version\n              : mo_ctl deploy d29764a     # deploy development version d29764a\n              : mo_ctl deploy 1.2.3       # deploy stable verson 1.2.3\n              : mo_ctl deploy force       # delete all under MO_PATH and deploy verson 1.2.3\n              : mo_ctl deploy 1.2.3 force # delete all under MO_PATH and deploy stable verson 1.2.3 from beginning\n</code></pre>"},{"location":"MatrixOne/Reference/mo-tools/mo_ctl_standalone/#start-starts-the-matrixone-service","title":"start - Starts the MatrixOne service","text":"<p>Start the MatrixOne service with <code>mo_ctl start</code>, with the startup file path under <code>MO_PATH</code>.</p> <pre><code>mo_ctl start help\nUsage         : mo_ctl start # start mo-service from the path configured\n</code></pre>"},{"location":"MatrixOne/Reference/mo-tools/mo_ctl_standalone/#stop-stop-the-matrixone-service","title":"stop - stop the MatrixOne service","text":"<p>Use <code>mo_ctl stop [force]</code> to stop all MatrixOne services on this machine, or all if there are multiple MatrixOne services running.</p> <pre><code> mo_ctl stop help\nUsage         : mo_ctl stop [force] # stop all mo-service processes found on this machine\n [force]      : optional, if specified, will try to kill mo-services with -9 option, so be very carefully\n  e.g.        : mo_ctl stop         # default, stop all mo-service processes found on this machine\n              : mo_ctl stop force   # stop all mo-services with kill -9 command\n</code></pre>"},{"location":"MatrixOne/Reference/mo-tools/mo_ctl_standalone/#restart-restart-the-matrixone-service","title":"restart - restart the MatrixOne service","text":"<p>Use <code>mo_ctl restart [force]</code> to stop all MatrixOne services on this machine and restart the MatrixOne service located under the <code>MO_PATH</code> path.</p> <pre><code>mo_ctl restart help\nUsage         : mo_ctl restart [force] # a combination operation of stop and start\n [force]      : optional, if specified, will try to kill mo-services with -9 option, so be very carefully\n  e.g.        : mo_ctl restart         # default, stop all mo-service processes found on this machine and start mo-serivce under path of conf MO_PATH\n              : mo_ctl restart force   # stop all mo-services with kill -9 command and start mo-serivce under path of conf MO_PATH\n</code></pre>"},{"location":"MatrixOne/Reference/mo-tools/mo_ctl_standalone/#connect-connect-to-the-matrixone-service-via-mysql-client","title":"connect - connect to the MatrixOne service via mysql-client","text":"<p>Use <code>mo_ctl connect</code> to connect to the MatrixOne service, the connection parameters are set in the <code>mo_ctl</code> tool.</p> <pre><code>mo_ctl connect help\nUsage         : mo_ctl connect # connect to mo via mysql client using connection info configured\n</code></pre>"},{"location":"MatrixOne/Reference/mo-tools/mo_ctl_standalone/#status-checks-the-status-of-matrixone","title":"status - Checks the status of MatrixOne","text":"<p>Use <code>mo_ctl status</code> to check whether MatrixOne is running or not.</p> <pre><code>mo_ctl status help\nUsage         : mo_ctl status # check if there's any mo process running on this machine\n</code></pre>"},{"location":"MatrixOne/Reference/mo-tools/mo_ctl_standalone/#get_cid-print-matrixone-code-submission-id","title":"get_cid - Print MatrixOne code submission id","text":"<p>Use <code>mo_ctl get_cid</code> to print the MatrixOne codebase commit id under the current <code>MO_PATH</code> path.</p> <pre><code>mo_ctl get_cid help\nUsage         : mo_ctl get_cid # print mo commit id from the path configured\n</code></pre>"},{"location":"MatrixOne/Reference/mo-tools/mo_ctl_standalone/#get_branch-print-matrixone-code-commit-id","title":"get_branch - print MatrixOne code commit id","text":"<p>Use <code>mo_ctl get_branch</code> to print the MatrixOne codebase branch under the current <code>MO_PATH</code> path.</p> <pre><code>mo_ctl get_branch help\nUsage           : mo_ctl get_branch        # print which git branch mo is currently on\n</code></pre>"},{"location":"MatrixOne/Reference/mo-tools/mo_ctl_standalone/#pprof-collect-performance-information","title":"pprof - Collect performance information","text":"<p>Use <code>mo_ctl pprof [item]</code> [duration] to gather performance information about MatrixOne, primarily for debugging use by developers.</p> <pre><code>mo_ctl pprof help\nUsage         : mo_ctl pprof [item] [duration] # collect pprof information\n  [item]      : optional, specify what pprof to collect, available: profile | heap | allocs\n  1) profile  : default, collect profile pprof for 30 seconds\n  2) heap     : collect heap pprof at current moment\n  3) allocs   : collect allocs pprof at current moment\n  [duration]  : optional, only valid when [item]=profile, specifiy duration to collect profile\n  e.g.        : mo_ctl pprof\n              : mo_ctl pprof profile    # collect duration will use conf value PPROF_PROFILE_DURATION from conf file or 30 if it's not set\n              : mo_ctl pprof profile 30\n              : mo_ctl pprof heap\n</code></pre>"},{"location":"MatrixOne/Reference/mo-tools/mo_ctl_standalone/#set_conf-configuration-parameters","title":"set_conf - configuration parameters","text":"<p>Use <code>mo_ctl set_conf [conf_list]</code> to configure 1 or more usage parameters.</p> <pre><code>mo_ctl set_conf help\nUsage         : mo_ctl setconf [conf_list] # set configurations\n [conf_list]  : configuration list in key=value format, seperated by comma\n  e.g.        : mo_ctl setconf MO_PATH=/data/mo/matrixone,MO_PW=M@trix0riginR0cks,MO_PORT=6101  # set multiple configurations\n              : mo_ctl setconf MO_PATH=/data/mo/matrixone                                       # set single configuration\n</code></pre> <p>Note</p> <p>When the path to set_conf's settings contains variables such as <code>${MO_PATH}</code>, <code>$</code> needs to be preceded by <code>\\</code>, for example:</p> <pre><code>mo_ctl set_conf  MO_CONF_FILE=\"\\${MO_PATH}/matrixone/etc/launch/launch.toml\"\n</code></pre>"},{"location":"MatrixOne/Reference/mo-tools/mo_ctl_standalone/#get_conf-get-the-list-of-parameters","title":"get_conf - Get the list of parameters","text":"<p>Use <code>mo_ctl get_conf [conf_list]</code> to get one or more current configuration items.</p> <pre><code>mo_ctl get_conf help\nUsage         : mo_ctl getconf [conf_list] # get configurations\n [conf_list]  : optional, configuration list in key, seperated by comma.\n              : use 'all' or leave it as blank to print all configurations\n  e.g.        : mo_ctl getconf MO_PATH,MO_PW,MO_PORT  # get multiple configurations\n              : mo_ctl getconf MO_PATH                # get single configuration\n              : mo_ctl getconf all                    # get all configurations\n              : mo_ctl getconf                        # get all configurations\n</code></pre>"},{"location":"MatrixOne/Reference/mo-tools/mo_ctl_standalone/#mo_ctl-get_conf-list-of-detailed-parameters","title":"mo_ctl get_conf - list of detailed parameters","text":"<p>Using <code>mo_ctl get_conf</code> will print a list of all parameters used by the current tool, their interpretations and ranges of values are shown in the following table.</p> Parameter name features Value specification MO_PATH MatrixOne's codebase and executables are located at Folder Path MO_LOG_PATH Where MatrixOne's logs are stored Folder path, default is ${MO_PATH}/matrixone/logs MO_HOST IP address to which the MatrixOne service is connected IP address, default is 127.0.0.1 MO_PORT Port number to which the MatrixOne service is connected Port number, default is 6001 MO_USER User name for connecting to the MatrixOne service Username, default is root MO_PW Password for connecting to the MatrixOne service Password, default is 111 CHECK_LIST precheck Required check dependencies The default is (\"go\" \"gcc\" \"git\" \"mysql\"). GCC_VERSION The version of gcc that precheck checks default 8.5.0 GO_VERSION The go version of the precheck check default 1.22.3 MO_GIT_URL MatrixOne source code pulling address default https://github.com/matrixorigin/matrixone.git MO_DEFAULT_VERSION The version of MatrixOne that is pulled by default default 1.2.3 GOPROXY GOPROXY address, generally used for domestic accelerated pull golang dependencies default https://goproxy.cn,direct STOP_INTERVAL Stop interval, wait time to detect service status after stopping service default 5 seconds START_INTERVAL Startup interval, wait time to detect service status after starting the service default 2 seconds MO_DEBUG_PORT MatrixOne's debug port, typically used by developers. default 9876 MO_CONF_FILE MatrixOne startup configuration file default ${MO_PATH}/matrixone/etc/launch/launch.toml RESTART_INTERVAL Restart interval, wait time to detect service status after restarting the service default 2 seconds PPROF_OUT_PATH golang's performance collection data output path default /tmp/pprof-test/ PPROF_PROFILE_DURATION Performance collection time for golang default 30 seconds"},{"location":"MatrixOne/Reference/mo-tools/mo_ctl_standalone/#ddl_convert-ddl-format-conversion","title":"ddl_convert - DDL format conversion","text":"<p>Use <code>mo_ctl ddl_convert [options] [src_file] [tgt_file]</code> to convert a DDL file from another database syntax format to MatrixOne's DDL format, currently supported only in <code>mysql_to_mo</code> mode.</p> <pre><code>mo_ctl ddl_convert help\nUsage           : mo_ctl ddl_convert [options] [src_file] [tgt_file] # convert a ddl file to mo format from other types of database\n [options]      : available: mysql_to_mo\n [src_file]     : source file to be converted, will use env DDL_SRC_FILE from conf file by default\n [tgt_file]     : target file of converted output, will use env DDL_TGT_FILE from conf file by default\n  e.g.          : mo_ctl ddl_convert mysql_to_mo /tmp/mysql.sql /tmp/mo.sql\n</code></pre>"},{"location":"MatrixOne/Reference/mo-tools/mo_ctl_standalone/#sql-execute-sql","title":"sql - Execute SQL","text":"<p>Use <code>mo_ctl sql [sql]</code> to execute SQL text or SQL files.</p> <pre><code>mo_ctl sql help\nUsage           : mo_ctl sql [sql]                 # execute sql from string, or a file or a path containg multiple files\n  [sql]         : a string quote by \"\", or a file, or a path\n  e.g.          : mo_ctl sql \"use test;select 1;\"  # execute sql \"use test;select 1\"\n                : mo_ctl sql /data/q1.sql          # execute sql in file /data/q1.sql\n                : mo_ctl sql /data/                # execute all sql files with .sql postfix in /data/\n</code></pre>"},{"location":"MatrixOne/Reference/mo-tools/mo_ctl_standalone/#uninstall-uninstall-matrixone","title":"uninstall - Uninstall MatrixOne","text":"<p>Use <code>mo_ctl uninstall</code> to uninstall MatrixOne from MO_PATH.</p> <pre><code>mo_ctl uninstall help\nUsage           : mo_ctl uninstall        # uninstall mo from path MO_PATH=/data/mo//matrixone\n                                          # note: you will need to input 'Yes/No' to confirm before uninstalling\n</code></pre>"},{"location":"MatrixOne/Reference/mo-tools/mo_ctl_standalone/#upgrade-upgradedowngrade-matrixone-version","title":"upgrade - upgrade/downgrade MatrixOne version","text":"<p>MatrixOne 0.8 and later can use <code>mo_ctl upgrade version</code> or <code>mo_ctl upgrade commitid</code> to upgrade or downgrade MatrixOne from the current version to a stable version or a commit id version.</p> <pre><code>mo_ctl upgrade help\nUsage           : mo_ctl upgrade [version_commitid]   # upgrade or downgrade mo from current version to a target commit id or stable version\n [commitid]     : a commit id such as '38888f7', or a stable version such as '1.2.3'\n                : use 'latest' to upgrade to latest commit on main branch if you don't know the id\n  e.g.          : mo_ctl upgrade 38888f7              # upgrade/downgrade to commit id 38888f7 on main branch\n                : mo_ctl upgrade latest               # upgrade/downgrade to latest commit on main branch\n                : mo_ctl upgrade 1.2.3               # upgrade/downgrade to stable version 1.2.3\n</code></pre>"},{"location":"MatrixOne/Reference/mo-tools/mo_ctl_standalone/#watchdog-keep-matrixone-alive","title":"watchdog - Keep MatrixOne alive","text":"<p>Use <code>mo_ctl watchdog [options]</code> to set a scheduled task to guarantee MatrixOne service availability, check the status of MatrixOne every minute, and automatically pull up the service if it is found to be aborted.</p> <pre><code>mo_ctl watchdog help\nUsage           : mo_ctl watchdog [options]   # setup a watchdog crontab task for mo-service to keep it alive\n [options]      : available: enable | disable | status\n  e.g.          : mo_ctl watchdog enable      # enable watchdog service for mo, by default it will check if mo-servie is alive and pull it up if it's dead every one minute\n                : mo_ctl watchdog disable     # disable watchdog\n                : mo_ctl watchdog status      # check if watchdog is enabled or disabled\n                : mo_ctl watchdog             # same as mo_ctl watchdog status\n</code></pre>"},{"location":"MatrixOne/Reference/mo-tools/mo_datax_writer/","title":"mo_datax_writer Tool Guide","text":"<p><code>mo_datax_writer</code> is a tool to help you migrate data from mysql to matrixone.</p> <p>Note</p> <p>The <code>mo_datax_writer</code> tool is currently only supported for deployment on Linux system x86 architectures.</p>"},{"location":"MatrixOne/Reference/mo-tools/mo_datax_writer/#pre-dependency","title":"Pre-dependency","text":"<ul> <li>Finished installing and starting MatrixOne</li> <li>Download DataX Tools</li> <li>Download and install MySQL</li> <li>Finished installing Python 3.8 (or plus)</li> <li>Installed wget</li> <li>Set environment encoding to UTF-8  </li> </ul>"},{"location":"MatrixOne/Reference/mo-tools/mo_datax_writer/#install-mo_datax_writer","title":"Install mo_datax_writer","text":"<pre><code>wget https://github.com/matrixorigin/mo_datax_writer/archive/refs/tags/v1.0.1.zip\nunzip v1.0.1.zip cd mo_datax_writer-1.0.1/ #Extract mo_datax_writer into the datax/plugin/writer/ directory\nunzip matrixonewriter.zip -d ../datax/plugin/writer/\n</code></pre>"},{"location":"MatrixOne/Reference/mo-tools/mo_datax_writer/#initialize-the-matrixone-data-table","title":"Initialize the MatrixOne data table","text":""},{"location":"MatrixOne/Reference/mo-tools/mo_datax_writer/#creating-a-database","title":"Creating a database","text":"<pre><code>create database test; </code></pre>"},{"location":"MatrixOne/Reference/mo-tools/mo_datax_writer/#creating-a-table","title":"Creating a table","text":"<pre><code>use test;\n\nCREATE TABLE `user` (\n`name` VARCHAR(255) DEFAULT null,\n`age` INT DEFAULT null,\n`city` VARCHAR(255) DEFAULT null\n);\n</code></pre>"},{"location":"MatrixOne/Reference/mo-tools/mo_datax_writer/#initialize-mysql-data-table","title":"Initialize MySQL data table","text":""},{"location":"MatrixOne/Reference/mo-tools/mo_datax_writer/#creating-a-database_1","title":"Creating a database","text":"<pre><code>create database test; </code></pre>"},{"location":"MatrixOne/Reference/mo-tools/mo_datax_writer/#creating-a-table_1","title":"Creating a table","text":"<pre><code>use test;\n\nCREATE TABLE `user` (\n`name` varchar(255) COLLATE utf8mb4_general_ci DEFAULT NULL,\n`age` int DEFAULT NULL,\n`city` varchar(255) COLLATE utf8mb4_general_ci DEFAULT NULL\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;\n</code></pre>"},{"location":"MatrixOne/Reference/mo-tools/mo_datax_writer/#import-data","title":"Import Data","text":"<pre><code>insert into user values('zhangsan',26,'Shanghai'),('lisi',24,'Chengdu'),('wangwu',28,'Xian'),('zhaoliu',22,'Beijing'),('tianqi',26,'Shenzhen');\n\nmysql&gt; select * from user;\n+----------+------+----------+\n| name     | age  | city     |\n+----------+------+----------+\n| zhangsan |   26 | Shanghai |\n| lisi     |   24 | Chengdu  |\n| wangwu   |   28 | Xian     |\n| zhaoliu  |   22 | Beijing  |\n| tianqi   |   26 | Shenzhen |\n+----------+------+----------+\n5 rows in set (0.00 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/mo-tools/mo_datax_writer/#importing-data-using-datax","title":"Importing data using DataX","text":""},{"location":"MatrixOne/Reference/mo-tools/mo_datax_writer/#writing-configuration-files","title":"Writing configuration files","text":"<p>Add the datax configuration file mysql2mo.json to the datax/job directory as follows:</p> <pre><code>{\n\"job\": {\n\"setting\": {\n\"speed\": {\n\"channel\": 1\n},\n\"errorLimit\": {\n\"record\": 0,\n\"percentage\": 0\n}\n},\n\"content\": [\n{\n\"reader\": {\n\"name\": \"mysqlreader\",\n\"parameter\": {\n// MySQL Database User Name\n\"username\": \"root\",\n// MySQL Database Password\n\"password\": \"111\",\n// Column Names for MySQL Data Table Reads\n\"column\": [\"name\",\"age\",\"city\"],\n\"splitPk\": \"\",\n\"connection\": [\n{\n// MySQL Data Tables\n\"table\": [\"user\"],\n// MySQL Connection Information\n\"jdbcUrl\": [\n\"jdbc:mysql://127.0.0.1:3306/test?useSSL=false\"\n]\n}\n]\n}\n},\n\"writer\": {\n\"name\": \"matrixonewriter\",\n\"parameter\": {\n// Database User Name\n\"username\": \"root\",\n// Database Password\n\"password\": \"111\",\n// Column names of tables to be imported\n\"column\": [\"name\",\"age\",\"city\"],\n// SQL statements that need to be executed before the import task starts\n\"preSql\": [],\n// SQL statement to execute after the import task is complete\n\"postSql\": [],\n// Batch write count, i.e., how many pieces of data to read and then execute load data inline import task\n\"maxBatchRows\": 60000,\n// Batch write size, i.e. how much data to read and then perform load data inline import task\n\"maxBatchSize\": 5242880,\n// Import task execution interval, i.e. after how long the load data inline import task is executed\n\"flushInterval\": 300000,\n\"connection\": [\n{\n// Database Connection Information\n\"jdbcUrl\": \"jdbc:mysql://127.0.0.1:6001/test?useUnicode=true&amp;useSSL=false\",\n// database name\n\"database\": \"test\",\n// database table\n\"table\": [\"user\"]\n}\n]\n}\n}\n}\n]\n}\n}\n</code></pre>"},{"location":"MatrixOne/Reference/mo-tools/mo_datax_writer/#perform-datax-tasks","title":"Perform DataX tasks","text":"<p>Go to the datax installation directory and execute the following command</p> <pre><code>python bin/datax.py job/mysql2mo.json </code></pre> <p>When the execution is complete, the output is as follows:</p> <pre><code>2024-06-06 06:26:52.145 [job-0] INFO  StandAloneJobContainerCommunicator - Total 5 records, 75 bytes | Speed 7B/s, 0 records/s | Error 0 records, 0 bytes |  All Task WaitWriterTime 0.000s |  All Task WaitReaderTime 0.012s | Percentage 100.00%\n2024-06-06 06:26:52.147 [job-0] INFO  JobContainer - \n\u4efb\u52a1\u542f\u52a8\u65f6\u523b                    : 2024-06-06 14:26:41\n\u4efb\u52a1\u7ed3\u675f\u65f6\u523b                    : 2024-06-06 14:26:52\n\u4efb\u52a1\u603b\u8ba1\u8017\u65f6                    :                 10s\n\u4efb\u52a1\u5e73\u5747\u6d41\u91cf                    :                7B/s\n\u8bb0\u5f55\u5199\u5165\u901f\u5ea6                    :              0rec/s\n\u8bfb\u51fa\u8bb0\u5f55\u603b\u6570                    :                   5\n\u8bfb\u5199\u5931\u8d25\u603b\u6570                    :                   0\n</code></pre>"},{"location":"MatrixOne/Reference/mo-tools/mo_datax_writer/#view-results","title":"View Results","text":"<p>View the results in the MatrixOne database and see that the data has been synchronized from MySQL into MatrixOne</p> <pre><code>mysql&gt; select * from user;\n+----------+------+-----------+\n| name     | age  | city      |\n+----------+------+-----------+\n| zhangsan |   26 | Shanghai  |\n| lisi     |   24 | Chengdu   |\n| wangwu   |   28 | Xian      |\n| zhaoliu  |   22 | Beijing   |\n| tianqi   |   26 | Shenzhen  |\n+----------+------+-----------+\n5 rows in set (0.01 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/mo-tools/mo_ssb_open/","title":"mo_ssb_open Tool Guide","text":"<p><code>mo_ssb_open</code> is a tool that implements SSB testing for MatrixOne.</p> <p>Note</p> <p>The <code>mo_ssb_open</code> tool is currently only supported for deployment on Linux system x86 architectures.</p>"},{"location":"MatrixOne/Reference/mo-tools/mo_ssb_open/#pre-dependency","title":"Pre-dependency","text":"<ul> <li>Finished installing and starting MatrixOne</li> <li>Environment encoding set to UTF-8  </li> <li>Installed wget</li> <li>The bc command is installed  </li> </ul>"},{"location":"MatrixOne/Reference/mo-tools/mo_ssb_open/#install-mo_ssb_open","title":"Install mo_ssb_open","text":"<pre><code>wget https://github.com/matrixorigin/mo_ssb_open/archive/refs/tags/v1.0.1.zip unzip v1.0.1.zip </code></pre>"},{"location":"MatrixOne/Reference/mo-tools/mo_ssb_open/#generate-data-set","title":"Generate Data Set","text":"<pre><code>cd mo_ssb_open-1.0.1 ./bin/gen-ssb-data.sh -s 1 -c 5 </code></pre> <p>-s: means generating a dataset of about 1GB, no parameters specified, 100G data generated by default,</p> <p>-c: Indicates the number of threads generating lineorder table data. Default is 10 threads.</p> <p>Generating a complete data set may take some time. When you are done, you can see the result file in the mo_ssb_open-1.0.1/bin/ssb-data/ directory.</p> <pre><code>root@host-10-222-4-8:~/soft/ssb/mo_ssb_open-1.0.1/bin/ssb-data# ls -l\ntotal 604976\n-rwS--S--T 1 root root   2837046 Jun  7 03:31 customer.tbl\n-rw-r--r-- 1 root root    229965 Jun  7 03:31 date.tbl\n-rw-r--r-- 1 root root 118904702 Jun  7 03:31 lineorder.tbl.1\n-rw-r--r-- 1 root root 119996341 Jun  7 03:31 lineorder.tbl.2\n-rw-r--r-- 1 root root 120146777 Jun  7 03:31 lineorder.tbl.3\n-rw-r--r-- 1 root root 120000311 Jun  7 03:31 lineorder.tbl.4\n-rw-r--r-- 1 root root 120057972 Jun  7 03:31 lineorder.tbl.5\n-rw-r--r-- 1 root root  17139259 Jun  7 03:31 part.tbl\n-rw-r--r-- 1 root root    166676 Jun  7 03:31 supplier.tbl\n</code></pre>"},{"location":"MatrixOne/Reference/mo-tools/mo_ssb_open/#building-tables-in-matrixone","title":"Building tables in MatrixOne","text":"<p>Modify the configuration file conf/matrxione.conf to specify the address, username, password for MatrixOne. An example configuration file is shown below</p> <pre><code># MatrixOne host\nexport HOST='127.0.0.1'\n# MatrixOne port\nexport PORT=6001\n# MatrixOne username\nexport USER='root'\n# MatrixOne password\nexport PASSWORD='111'\n# The database where SSB tables located\nexport DB='ssb' \n</code></pre> <p>Then execute the following script to build the table.</p> <pre><code>./bin/create-ssb-tables.sh </code></pre> <p>Connect to MatrixOne to view and build table successfully.</p> <pre><code>mysql&gt; show tables;\n+----------------+\n| Tables_in_ssb  |\n+----------------+\n| customer       |\n| dates          |\n| lineorder      |\n| lineorder_flat |\n| part           |\n| supplier       |\n+----------------+\n6 rows in set (0.01 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/mo-tools/mo_ssb_open/#import-data","title":"Import Data","text":"<p>Execute the following script to import the data required for the ssb test:</p> <pre><code>./bin/load-ssb-data.sh -c 10 </code></pre> <p>Parameter interpretation</p> <p>-c: You can specify the number of threads to perform the import, which defaults to 5.</p> <p>Once loaded, you can query the data in MatrixOne using the created table.</p>"},{"location":"MatrixOne/Reference/mo-tools/mo_ssb_open/#run-the-query-command","title":"Run the query command","text":"<p>query result first column is query coding,</p> <ul> <li>Multiple table queries</li> </ul> <pre><code>root@host-10-222-4-8:~/soft/ssb/mo_ssb_open-1.0.1# ./bin/run-ssb-queries.sh\nmysqlslap  Ver 8.0.37 for Linux on x86_64 (MySQL Community Server - GPL)\nmysql  Ver 8.0.37 for Linux on x86_64 (MySQL Community Server - GPL)\nbc 1.07.1\nCopyright 1991-1994, 1997, 1998, 2000, 2004, 2006, 2008, 2012-2017 Free Software Foundation, Inc.\nHOST: 127.0.0.1\nPORT: 6001\nUSER: root\nDB: ssb\nq1.1:   0.22    0.16    0.13    fast:0.13\nq1.2:   0.17    0.17    0.17    fast:0.17\nq1.3:   0.15    0.19    0.18    fast:0.15\nq2.1:   0.22    0.21    0.23    fast:0.21\nq2.2:   0.18    0.17    0.16    fast:0.16\nq2.3:   0.15    0.16    0.17    fast:0.15\nq3.1:   0.24    0.23    0.23    fast:0.23\nq3.2:   0.16    0.16    0.20    fast:0.16\nq3.3:   0.16    0.14    0.13    fast:0.13\nq3.4:   0.12    0.11    0.11    fast:0.11\nq4.1:   0.24    0.22    0.30    fast:0.22\nq4.2:   0.22    0.21    0.22    fast:0.21\nq4.3:   0.20    0.21    0.20    fast:0.20\ntotal time: 2.23 seconds\nFinish ssb queries.\n</code></pre> <ul> <li>Single table query</li> </ul> <pre><code>root@host-10-222-4-8:~/soft/ssb/mo_ssb_open-1.0.1#  ./bin/run-ssb-flat-queries.sh\nmysqlslap  Ver 8.0.37 for Linux on x86_64 (MySQL Community Server - GPL)\nmysql  Ver 8.0.37 for Linux on x86_64 (MySQL Community Server - GPL)\nbc 1.07.1\nCopyright 1991-1994, 1997, 1998, 2000, 2004, 2006, 2008, 2012-2017 Free Software Foundation, Inc.\nHOST: 127.0.0.1\nPORT: 6001\nUSER: root\nDB: ssb\nq1.1:   0.21    0.13    0.14    fast:0.13\nq1.2:   0.15    0.13    0.15    fast:0.13\nq1.3:   0.16    0.21    0.22    fast:0.16\nq2.1:   0.36    0.34    0.38    fast:0.34\nq2.2:   0.36    0.34    0.32    fast:0.32\nq2.3:   0.25    0.26    0.22    fast:0.22\nq3.1:   0.39    0.39    0.30    fast:0.30\nq3.2:   0.32    0.33    0.29    fast:0.29\nq3.3:   0.22    0.23    0.29    fast:0.22\nq3.4:   0.32    0.28    0.31    fast:0.28\nq4.1:   0.42    0.38    0.38    fast:0.38\nq4.2:   0.42    0.48    0.45    fast:0.42\nq4.3:   0.35    0.34    0.29    fast:0.29\ntotal time: 3.48 seconds\nFinish ssb-flat queries.\n</code></pre> <p>The query results correspond to: query statement, first query result, second query result, third query result, and fastest result in s.</p> <p>Note</p> <p>You can view specific query statements in the mo_ssb_open-1.0.1/ssb-queries directory.</p>"},{"location":"MatrixOne/Reference/mo-tools/mo_tpch_open/","title":"mo_tpch_open Tool Guide","text":"<p><code>mo_tpch_open</code> is a tool that implements TPCH testing for MatrixOne.</p> <p>Note</p> <p>The <code>mo_tpch_open</code> tool is currently only supported for deployment on Linux system x86 architectures.</p>"},{"location":"MatrixOne/Reference/mo-tools/mo_tpch_open/#pre-dependency","title":"Pre-dependency","text":"<ul> <li>Finished installing and starting MatrixOne</li> <li>Set environment encoding to UTF-8  </li> <li>Installed wget</li> <li>The bc command is installed  </li> </ul>"},{"location":"MatrixOne/Reference/mo-tools/mo_tpch_open/#install-mo_tpch_open","title":"Install mo_tpch_open","text":"<pre><code>wget https://github.com/matrixorigin/mo_tpch_open/archive/refs/tags/v1.0.1.zip unzip v1.0.1.zip </code></pre>"},{"location":"MatrixOne/Reference/mo-tools/mo_tpch_open/#generate-data-set","title":"Generate Data Set","text":"<p>Generate the dataset using the following command:</p> <pre><code>cd mo_tpch_open-1.0.1 ./bin/gen-tpch-data.sh -s 1 -c 5 </code></pre> <p>Parameter interpretation</p> <p>-s: means generating a dataset of about 1GB, no parameters specified, 100G data generated by default,</p> <p>-c: Indicates the number of threads generating table data. Default is 10 threads.</p> <p>Generating a complete data set may take some time. When you are done, you can see the result file in the mo_tpch_open-1.0.1/bin/tpch-data directory.</p> <pre><code>root@host-10-222-4-8:~/soft/tpch/tpch-tools/bin/tpch-data# ls -l\nroot@host-10-222-4-8:~/soft/tpch/mo_tpch_open-1.0.1/bin/tpch-data# ls -l\ntotal 1074936\n-rw-r--r-- 1 root root  24346144 Jun  7 03:16 customer.tbl\n-rw-r--r-- 1 root root 151051198 Jun  7 03:16 lineitem.tbl.1\n-rw-r--r-- 1 root root 152129724 Jun  7 03:16 lineitem.tbl.2\n-rw-r--r-- 1 root root 152344710 Jun  7 03:16 lineitem.tbl.3\n-rw-r--r-- 1 root root 152123661 Jun  7 03:16 lineitem.tbl.4\n-rw-r--r-- 1 root root 152213994 Jun  7 03:16 lineitem.tbl.5\n-rw-r--r-- 1 root root      2224 Jun  7 03:16 nation.tbl\n-rw-r--r-- 1 root root  34175478 Jun  7 03:16 orders.tbl.1\n-rw-r--r-- 1 root root  34463858 Jun  7 03:16 orders.tbl.2\n-rw-r--r-- 1 root root  34437453 Jun  7 03:16 orders.tbl.3\n-rw-r--r-- 1 root root  34445732 Jun  7 03:16 orders.tbl.4\n-rw-r--r-- 1 root root  34429640 Jun  7 03:16 orders.tbl.5\n-rw-r--r-- 1 root root  24135125 Jun  7 03:16 part.tbl\n-rw-r--r-- 1 root root  23677134 Jun  7 03:16 partsupp.tbl.1\n-rw-r--r-- 1 root root  23721079 Jun  7 03:16 partsupp.tbl.2\n-rw-r--r-- 1 root root  23808550 Jun  7 03:16 partsupp.tbl.3\n-rw-r--r-- 1 root root  23894802 Jun  7 03:16 partsupp.tbl.4\n-rw-r--r-- 1 root root  23883051 Jun  7 03:16 partsupp.tbl.5\n-rw-r--r-- 1 root root       389 Jun  7 03:16 region.tbl\n-rw-r--r-- 1 root root   1409184 Jun  7 03:16 supplier.tbl\n</code></pre>"},{"location":"MatrixOne/Reference/mo-tools/mo_tpch_open/#building-tables-in-matrixone","title":"Building tables in MatrixOne","text":"<p>Modify the configuration file conf/matrxione.conf to specify the address, username, password for MatrixOne. An example configuration file is shown below</p> <pre><code># MatrixOne host\nexport HOST='127.0.0.1'\n# MatrixOne port\nexport PORT=6001\n# MatrixOne username\nexport USER='root'\n# MatrixOne password\nexport PASSWORD='111'\n# The database where TPC-H tables located\nexport DB='tpch' \n</code></pre> <p>Then execute the following script to build the table.</p> <pre><code>./bin/create-tpch-tables.sh </code></pre> <p>Connect to MatrixOne to view and build table successfully.</p> <pre><code>mysql&gt; show tables;\n+----------------+\n| Tables_in_tpch |\n+----------------+\n| customer       |\n| lineitem       |\n| nation         |\n| orders         |\n| part           |\n| partsupp       |\n| region         |\n| revenue0       |\n| supplier       |\n+----------------+\n9 rows in set (0.00 sec)\n</code></pre>"},{"location":"MatrixOne/Reference/mo-tools/mo_tpch_open/#import-data","title":"Import Data","text":"<p>Execute the following script to import the data required for the TPC-H test:</p> <pre><code>./bin/load-tpch-data.sh -c 10\n</code></pre> <p>Parameter interpretation</p> <p>-c: You can specify the number of threads to perform the import, which defaults to 5.</p> <p>Once loaded, you can query the data in MatrixOne using the created table.</p>"},{"location":"MatrixOne/Reference/mo-tools/mo_tpch_open/#run-the-query-command","title":"Run the query command","text":"<p>Execute the following command to query:</p> <pre><code>root@host-10-222-4-8:~/soft/tpch/mo_tpch_open-1.0.1# ./bin/run-tpch-queries.sh\nmysql  Ver 8.0.37 for Linux on x86_64 (MySQL Community Server - GPL)\nHOST: 127.0.0.1\nPORT: 6001\nUSER: root\nDB: tpch\nTime Unit: ms\nq1  836 715 691 691\nq2  111 80  88  80\nq3  325 235 212 212\nq4  221 181 177 177\nq5  240 236 295 236\nq6  215 292 350 292\nq7  373 327 299 299\nq8  236 238 243 238\nq9  443 406 413 406\nq10 375 390 422 390\nq11 201 237 231 231\nq12 461 460 400 400\nq13 321 294 301 294\nq14 289 261 282 261\nq15 391 285 294 285\nq16 222 288 255 255\nq17 333 247 243 243\nq18 275 262 317 262\nq19 513 479 511 479\nq20 240 244 198 198\nq21 1503    1746    1786    1746\nq22 138 122 126 122\nTotal cold run time: 8262 ms\nTotal hot run time: 7797 ms\nFinish tpch queries.\n</code></pre> <p>The query results correspond to: query statement, first query result, second query result, third query result, and fastest result in ms.</p> <p>Note</p> <p>You can view specific query statements in the mo_tpch_open-1.0.1/queries directory.</p>"},{"location":"MatrixOne/Reference/mo-tools/mo_ts_perf_test/","title":"mo_ts_perf_test Tool Guide","text":"<p><code>mo_ts_perf_test</code> is a timed write and query test tool for MatrixOne.</p> <p>Note</p> <p>The <code>mo_ts_perf_test</code> tool is currently only supported for deployment on Linux system x86 architectures.</p>"},{"location":"MatrixOne/Reference/mo-tools/mo_ts_perf_test/#pre-dependency","title":"Pre-dependency","text":"<ul> <li>Finished installing and starting MatrixOne.</li> <li>Installed wget</li> </ul>"},{"location":"MatrixOne/Reference/mo-tools/mo_ts_perf_test/#install-mo_ts_perf_test","title":"Install mo_ts_perf_test","text":"<pre><code>wget https://github.com/matrixorigin/mo_ts_perf_test/archive/refs/tags/v1.0.1.zip unzip v1.0.1.zip </code></pre>"},{"location":"MatrixOne/Reference/mo-tools/mo_ts_perf_test/#configuration","title":"Configuration","text":"<p>Modify the db.conf configuration file in the matrixone/conf directory as appropriate</p> <pre><code>root@host-10-222-4-8:~/soft/perf/mo_ts_perf_test-1.0.0/matrixone/conf# cat db.conf [dbInfo]\nhost = 127.0.0.1\nport = 6001\nuser = root\npassword = 111\ntablePrefix = d\npoint_query_ts_condition = '2017-07-14 10:40:06.379'\nloadFilePath = /root/soft/perf/\n</code></pre> <p>Configuration instructions:</p> <ul> <li>tablePrefix: When writing to multiple tables for lookup, the prefix of the table name, for example, with a value of d, will automatically create three tables: d0, d1, d2;</li> <li>point_query_ts_condition: Filter criteria value for the ts field when querying for points;</li> <li>loadFilePath: When importing for load data infile, the directory where the local csv file is to be imported; note: the loadFilePath path must be local to the MO database, that is: the csv file is to be placed on the server where the MO database is located.</li> </ul>"},{"location":"MatrixOne/Reference/mo-tools/mo_ts_perf_test/#perform-write-tests-with-mo-write","title":"Perform write tests with mo-write","text":"<p>mo-write is the MO write test tool with the command:</p> <pre><code>mo-write -T -r -n -retry -mode -txc -tType -wType -wType\n</code></pre> <p>Note</p> <p>All writes are to tables under the test database, single-table writes are to d0 tables, multi-table writes are to d0, d1, d2, and so on (the number is determined by the client data).</p> <p>Parameter description</p> <ul> <li>-T: Indicates the number of clients writing concurrently, which defaults to 7;</li> <li>-r: Indicates the number of data rows submitted per write, default 10000;</li> <li>-n: Indicates the total number of data rows to import per client, default 500,000;</li> <li>-retry: Indicates the number of tests (eventually the average write speed is calculated automatically), default 1;</li> <li>-mode: Indicates write mode, single for single table writes, multi for multi table writes, default multi;</li> <li>-txc: Indicates the number of writes per transaction commit, value &gt;=0, default 0 (0 means no transactions open);</li> <li>-tType: Indicates the type of table written to, ts, tsPK, intPK, respectively, default ts, ts for a time series table without a primary key, tsPK for a time series table with a primary key, and intPK for a normal table with a primary key of type int;</li> <li>-wType: Indicates the type of write, divided into insert, loadLine, loadFile, insert denotes insert into values for writing data, loadLine denotes load data inline for writing, and loadFile denotes load data infile for importing into a local csv file (local csv data file fetch: can be automatically generated in its parent data directory via sr-write).</li> </ul>"},{"location":"MatrixOne/Reference/mo-tools/mo_ts_perf_test/#examples","title":"Examples","text":"<ul> <li>Example 1</li> </ul> <pre><code>root@host-10-222-4-8:~/soft/perf/mo_ts_perf_test-1.0.0/matrixone/mo-write# ./mo-write r=10000, T=7, n=500000, mode=multi, retry=1, txc=0, tType=ts, wType=loadLine \ndbConfig:{127.0.0.1 6001 root 111 d '2017-07-14 10:40:06.379'   /root/soft/perf/}\nstart create db conn, count:7\ndb connection[1] created.\ndb connection[2] created.\ndb connection[3] created.\ndb connection[4] created.\ndb connection[5] created.\ndb connection[6] created.\ndb connection[7] created.\nmo-data of all clinet(7 thread) has ready!\nInitialize database and table completed.\nstart preparing test data.\nspend time of prepare testing data:7.255468 s\n\u6309 Y \u6216\u8005 \u56de\u8f66\u952e,\u5c06\u5f00\u59cb\u63d2\u5165\u6570\u636e,\u6309 N \u5c06\u9000\u51fa, \u5f00\u7684\u7b2c1\u6b21\u6d4b\u8bd5, txc=0 \n\nstart test 1 \u2026\u2026.\nspend time:7.405524 s\n1 test: 3500000/7.405524 = 472620.159086 records/second\n======== avg test: 472620.159086/1 = 472620.159086 records/second txc=0 ===========\n</code></pre> <ul> <li>Example 2</li> </ul> <p>Each of the 2 clients uses insert into to write 100,000 pieces of data to a time series table (d0) with a primary key:</p> <pre><code>root@host-10-222-4-8:~/soft/perf/mo_ts_perf_test-1.0.1/matrixone/mo-write# ./mo-write -T 2 -n 100000 -mode single -tType tsPK -wType insert\nr=10000, T=2, n=100000, mode=single, retry=1, txc=0, tType=tsPK, wType=insert \ndbConfig:{127.0.0.1 6001 root 111 d '2017-07-14 10:40:06.379'   /root/soft/perf/}\nstart create db conn, count:2\ndb connection[1] created.\ndb connection[2] created.\nmo-data of all clinet(2 thread) has ready!\nInitialize database and table completed.\nstart preparing test data.\nspend time of prepare testing data:0.819425 s\n\u6309 Y \u6216\u8005 \u56de\u8f66\u952e,\u5c06\u5f00\u59cb\u63d2\u5165\u6570\u636e,\u6309 N \u5c06\u9000\u51fa, \u5f00\u7684\u7b2c1\u6b21\u6d4b\u8bd5, txc=0 \n\nstart test 1 \u2026\u2026.\nspend time:11.388648 s\n1 test: 200000/11.388648 = 17561.347089 records/second\n======== avg test: 17561.347089/1 = 17561.347089 records/second txc=0 ===========\n</code></pre> <ul> <li>Example 3</li> </ul> <p>1 client tests a set of data by writing 500,000 pieces of data to a normal table (d0) with a primary key of type int using load data inline:</p> <pre><code>root@host-10-222-4-8:~/soft/perf/mo_ts_perf_test-1.0.1/matrixone/mo-write# ./mo-write -T 1 -tType=intPK -retry 1\nr=10000, T=1, n=500000, mode=multi, retry=1, txc=0, tType=intPK, wType=loadLine \ndbConfig:{127.0.0.1 6001 root 111 d '2017-07-14 10:40:06.379'   /root/soft/perf/}\nstart create db conn, count:1\ndb connection[1] created.\nmo-data of all clinet(1 thread) has ready!\nInitialize database and table completed.\nstart preparing test data.\nspend time of prepare testing data:1.583363 s\n\u6309 Y \u6216\u8005 \u56de\u8f66\u952e,\u5c06\u5f00\u59cb\u63d2\u5165\u6570\u636e,\u6309 N \u5c06\u9000\u51fa, \u5f00\u7684\u7b2c1\u6b21\u6d4b\u8bd5, txc=0 \n\nstart test 1 \u2026\u2026.\nspend time:5.062582 s\n1 test: 500000/5.062582 = 98763.826906 records/second\n======== avg test: 98763.826906/1 = 98763.826906 records/second txc=0 ===========\n</code></pre> <ul> <li>Example 4</li> </ul> <p>Using load data inline, 8 clients write 500,000 pieces of data to a time series table (d0......d7) without a primary key via a transaction commit (10 writes per commit), automatically testing 3 groups for averaging:</p> <pre><code>root@host-10-222-4-8:~/soft/perf/mo_ts_perf_test-1.0.1/matrixone/mo-write# ./mo-write -T 8 -txc 10 -retry 3\nr=10000, T=8, n=500000, mode=multi, retry=3, txc=10, tType=ts, wType=loadLine \ndbConfig:{127.0.0.1 6001 root 111 d '2017-07-14 10:40:06.379'   /root/soft/perf/}\nstart create db conn, count:8\ndb connection[1] created.\ndb connection[2] created.\ndb connection[3] created.\ndb connection[4] created.\ndb connection[5] created.\ndb connection[6] created.\ndb connection[7] created.\ndb connection[8] created.\nmo-data of all clinet(8 thread) has ready!\nInitialize database and table completed.\nstart preparing test data.\nspend time of prepare testing data:7.854798 s\n\u6309 Y \u6216\u8005 \u56de\u8f66\u952e,\u5c06\u5f00\u59cb\u63d2\u5165\u6570\u636e,\u6309 N \u5c06\u9000\u51fa, \u5f00\u7684\u7b2c1\u6b21\u6d4b\u8bd5, txc=10 \n\nstart test 1 \u2026\u2026.\n\u5f00\u59cb\u4e8b\u52a1\u63d0\u4ea4\u5199\u5165, \u4e00\u6b21\u4e8b\u52a1\u63d0\u4ea4\u7684\u5199\u5165: 10\nspend time:9.482012 s\n1 test: 4000000/9.482012 = 421851.388088 records/second\n\u6309 Y \u6216\u8005 \u56de\u8f66\u952e,\u5c06\u5f00\u59cb\u63d2\u5165\u6570\u636e,\u6309 N \u5c06\u9000\u51fa, \u5f00\u7684\u7b2c2\u6b21\u6d4b\u8bd5, txc=10 \n\nstart test 2 \u2026\u2026.\ntables has truncated and start insert data \u2026\u2026\n\u5f00\u59cb\u4e8b\u52a1\u63d0\u4ea4\u5199\u5165, \u4e00\u6b21\u4e8b\u52a1\u63d0\u4ea4\u7684\u5199\u5165: 10\nspend time:10.227261 s\n2 test: 4000000/10.227261 = 391111.576833 records/second\n\u6309 Y \u6216\u8005 \u56de\u8f66\u952e,\u5c06\u5f00\u59cb\u63d2\u5165\u6570\u636e,\u6309 N \u5c06\u9000\u51fa, \u5f00\u7684\u7b2c3\u6b21\u6d4b\u8bd5, txc=10 \n\nstart test 3 \u2026\u2026.\ntables has truncated and start insert data \u2026\u2026\n\u5f00\u59cb\u4e8b\u52a1\u63d0\u4ea4\u5199\u5165, \u4e00\u6b21\u4e8b\u52a1\u63d0\u4ea4\u7684\u5199\u5165: 10\nspend time:8.994586 s\n3 test: 4000000/8.994586 = 444711.979564 records/second\n======== avg test: 1257674.944485/3 = 419224.981495 records/second txc=10 ===========\n</code></pre>"},{"location":"MatrixOne/Reference/mo-tools/mo_ts_perf_test/#perform-query-testing-with-mo-query","title":"Perform query testing with mo-query","text":"<p>mo-query is a query testing tool that tests the time of queries such as select *, point queries, common aggregate queries, time windows, etc. All queries query only the table d0 in the test library. The command is:</p> <pre><code>mo-query -T </code></pre> <p>Parameter description</p> <p>-T: Indicates the number of clients executing select * queries concurrently. Defaults to 1.</p>"},{"location":"MatrixOne/Reference/mo-tools/mo_ts_perf_test/#examples_1","title":"Examples","text":"<pre><code>root@host-10-222-4-8:~/soft/perf/mo_ts_perf_test-1.0.1/matrixone/mo-query# ./mo-query -T 5\nT=5 \ndbConfig:{127.0.0.1 6001 root 111 d '2017-07-14 10:40:06.379'   /root/soft/perf/}\nstart create db conn, count:5\ndb connection[1] created.\ndb connection[2] created.\ndb connection[3] created.\ndb connection[4] created.\ndb connection[5] created.\nmo all clinet(5 thread) has ready!\n\n count value is:200000\n'count(*)' query spend time:0.062345 s\n\n'select *' (5 client concurrent query) spend time:0.850350 s\nquery speed: 1000000/0.850350 = 1175985.806764 records/second\n\n point query sql: select * from test.d0 where ts='2017-07-14 10:40:06.379'\n'point query' spend time:0.001589 s\n\n avg value is: 0.07560730761790913\n'avg(current)' query spend time:0.026116 s\n\n sum value is: 15121.461523581824\n'sum(current)' query spend time:0.023109 s\n\n max value is: 3.9999022\n'max(current)' query spend time:0.054021 s\n\n min value is: -3.9999993\n'min(current)' query spend time:0.035809 s\n\nTimeWindow query sql:select _wstart, _wend, max(current), min(current) from d0 interval(ts, 60, minute) sliding(60, minute)\n2017-07-14 02:00:00 +0000 UTC 2017-07-14 03:00:00 +0000 UTC 3.9999022 -3.9999993\nTimeWindow query spend time:0.180333 s\n</code></pre>"},{"location":"MatrixOne/Release-Notes/release-timeline/","title":"MatrixOne Release Timeline","text":"<p>This document shows all the released MatrixOne versions in reverse chronological order.</p> Version Release Date v24.1.2.3 2024/09/11 v24.1.2.2 2024/07/12 v24.1.2.1 2024/06/30 v24.1.2.0 2024/05/20 v24.1.1.3 2024/04/16 v24.1.1.2 2024/04/02 v24.1.1.1 2024/02/04 v23.1.1.0 2023/12/29 v23.1.0.2 2023/12/23 v23.1.0.1 2023/12/16 v23.1.0.0 2023/11/13 v23.1.0.0-rc2 2023/10/24 v23.1.0.0-rc1 2023/8/24 v23.0.8.0 2023/6/30 v23.0.7.0 2023/2/23 v22.0.6.0 2022/11/29 v22.0.5.1 2022/8/19 v22.0.5.0 2022/7/18 v22.0.4.0 2022/5/5 v22.0.3.0 2022/3/10 v22.0.2.0 2022/1/6 v21.0.1.0 2021/10/24"},{"location":"MatrixOne/Release-Notes/v21.0.1.0/","title":"MatrixOne v21.0.1.0 Release Notes","text":"<p>We are excited to announce the first release of MatrixOne v21.0.1.0 on 2021/10/24. Cheers!</p>"},{"location":"MatrixOne/Release-Notes/v21.0.1.0/#docker","title":"Docker","text":"<p>docker pull matrixorigin/matrixone:0.1.0</p>"},{"location":"MatrixOne/Release-Notes/v21.0.1.0/#features","title":"Features","text":""},{"location":"MatrixOne/Release-Notes/v21.0.1.0/#sql","title":"SQL","text":"<p>Following SQL statements are supported in this release.</p>"},{"location":"MatrixOne/Release-Notes/v21.0.1.0/#ddl","title":"DDL","text":"<ul> <li>CREATE / DROP DATABASE</li> <li>CREATE / DROP TABLE</li> </ul>"},{"location":"MatrixOne/Release-Notes/v21.0.1.0/#dml","title":"DML","text":"<ul> <li>INSERT</li> <li>LOAD DATA</li> <li>SELECT<ul> <li>WHERE</li> <li>GROUP BY</li> <li>ORDER BY</li> <li>LIMIT, OFFSET</li> </ul> </li> <li>SHOW<ul> <li>DATABASES</li> <li>TABLES</li> </ul> </li> <li>USE</li> </ul>"},{"location":"MatrixOne/Release-Notes/v21.0.1.0/#data-types","title":"Data Types","text":"<ul> <li>TINYINT / SMALLINT / INT / BIGINT, SIGNED / UNSIGNED</li> <li>FLOAT / DOUBLE</li> <li>CHAR / VARCHAR</li> </ul>"},{"location":"MatrixOne/Release-Notes/v21.0.1.0/#operators","title":"Operators","text":"<ul> <li>&lt;, &gt;=, &lt;, &lt;=, &lt;&gt;, !=, =</li> <li>BETWEEN \u2026 AND \u2026, NOT BETWEEN \u2026 AND \u2026</li> <li>AND, &amp;&amp;, OR, ||</li> <li>+, -, *, /, %, MOD, DIV, NEG</li> <li>CAST</li> </ul>"},{"location":"MatrixOne/Release-Notes/v21.0.1.0/#aggregation-functions","title":"Aggregation Functions","text":"<ul> <li>COUNT</li> <li>SUM</li> <li>AVG</li> <li>MAX</li> <li>MIN</li> </ul>"},{"location":"MatrixOne/Release-Notes/v21.0.1.0/#database-engine","title":"Database Engine","text":"<ul> <li>MySQL dialect is supported.</li> <li>Build-in Append only columnar engine(AOE) has been supported as the first fusion database engine.</li> <li>Real-time analytical queries are supported.</li> <li>Vectorized query execution engine, based on MPP solution, is introduced.</li> <li>Part of the expression execution has been vectorized through SIMD instructions.</li> <li>Distributed AOE with strong consistency guaranteed by RAFT has been supported.</li> <li>The performance of replicated state machine has been greatly improved through the unique design of reusing RAFT log as well as Write-Ahead log without any redundancy.</li> </ul>"},{"location":"MatrixOne/Release-Notes/v21.0.1.0/#contributors","title":"Contributors","text":"<p>This release includes 453 commits by 16 authors. Special thanks to the first author:</p> <p>Yan Wenze (@nnsgmsone) Chen Mingsong(@m-schen) Jin Hai (@JinHai-CN) Jiang xinmeng (@jiangxinmeng1) Li Yang (@lignay) Lin Junhong (@iamlinjunhong) lni (@lni) Long Ran (@aunjgr) Peng Zhen (@daviszhen) Qin Shuqi (@sukki37) Shen JiangWei(@LeftHandCold) Wei Ziran (@w-zr) Xiong Jingjuan (@anitajjx) Xu Peng (@XuPeng-SH) Yan Wenze(@nnsgmsone) Zilong Zhou (@zzl200012) Zhang Yingfeng (@yingfeng)</p>"},{"location":"MatrixOne/Release-Notes/v22.0.2.0/","title":"MatrixOne v22.0.2.0 Release Notes","text":"<p>We are excited to announce MatrixOne v22.0.2.0 release on 2022/1/6. Cheers!</p>"},{"location":"MatrixOne/Release-Notes/v22.0.2.0/#docker","title":"Docker","text":"<p>docker pull matrixorigin/matrixone:0.2.0</p>"},{"location":"MatrixOne/Release-Notes/v22.0.2.0/#features","title":"Features","text":"<ul> <li>Support automatic rebalancing for the built-in AOE columnar storage engine.</li> <li>Introduce new SQL parser.</li> <li>Introduce factorized SQL execution engine which is the fastest MPP in Golang.</li> <li>Support CREATE / DROP INDEX.</li> <li>Support PRIMARY KEY in CREATE TABLE.</li> <li>Support more data types for SQL binary operators.</li> <li>Support equi join with group by or aggregation statements.</li> <li>Support new types of DATE and DATETIME.</li> </ul>"},{"location":"MatrixOne/Release-Notes/v22.0.2.0/#database-engine","title":"Database Engine","text":"<ul> <li>For continuous table creation actions in a script, the parameter of pre-allocated-group-num should be set to a bigger value such in cluster scenarios. Otherwise, \"no available raft group\" may be notified during tables creation sequence.</li> </ul>"},{"location":"MatrixOne/Release-Notes/v22.0.2.0/#contributors","title":"Contributors","text":"<p>This release includes 243 commits by 21 authors.</p> <ul> <li>BingLin Chang (@decster)</li> <li>Chen Mingsong(@m-schen)</li> <li>Nan Deng (@dengn)</li> <li>Jin Hai (@JinHai-CN)</li> <li>Jiang xinmeng (@jiangxinmeng1)</li> <li>Li Yang (@lignay)</li> <li>Lin Junhong (@iamlinjunhong)</li> <li>lni (@lni)</li> <li>Long Ran (@aunjgr)</li> <li>Peng Zhen (@daviszhen)</li> <li>Qin Shuqi (@sukki37)</li> <li>Shen JiangWei(@LeftHandCold)</li> <li>Jian Wang(@jianwan0214)</li> <li>broccoliSpicy(@broccoliSpicy)</li> <li>Ryan Wang(@wanglei4687)</li> <li>Xiong Jingjuan (@anitajjx)</li> <li>Xu Peng (@XuPeng-SH)</li> <li>Yan Wenze(@nnsgmsone)</li> <li>Yuesheng Li(@reusee)</li> <li>Zilong Zhou (@zzl200012)</li> <li>Zhang Yingfeng (@yingfeng)</li> </ul>"},{"location":"MatrixOne/Release-Notes/v22.0.3.0/","title":"MatrixOne v22.0.3.0 Release Notes","text":"<p>We are excited to announce MatrixOne v22.0.3.0 release on 2022/3/10. Cheers!</p>"},{"location":"MatrixOne/Release-Notes/v22.0.3.0/#docker","title":"Docker","text":"<p>docker pull matrixorigin/matrixone:0.3.0</p>"},{"location":"MatrixOne/Release-Notes/v22.0.3.0/#features","title":"Features","text":"<ul> <li>Exports data into CSV file.</li> <li>Introduces parallel execution and improve performance for projection query.</li> <li>Introduces IN operator and allows you to specify multiple values in a WHERE clause.</li> <li>Support NULLABLE column in group by expression.</li> <li>Introduces new functions: round and floor.</li> <li>Introduces a Chaos Testing framework for distributed system.</li> </ul>"},{"location":"MatrixOne/Release-Notes/v22.0.3.0/#known-issues","title":"Known issues","text":"<ul> <li>For continuous table creation actions in a script, the parameter of pre-allocated-group-num should be set to a bigger value such in cluster scenarios. Otherwise, \"no available raft group\" may be notified during tables creation sequence.</li> </ul>"},{"location":"MatrixOne/Release-Notes/v22.0.3.0/#contributors","title":"Contributors","text":"<p>This release includes 157 commits by 21 authors.</p> <ul> <li>broccoliSpicy(@broccoliSpicy)</li> <li>Chen Mingsong(@m-schen)</li> <li>hanfang (@aptend)</li> <li>O2 (@ikenchina)</li> <li>Jin Hai (@JinHai-CN)</li> <li>Jiang xinmeng (@jiangxinmeng1)</li> <li>Lin Junhong (@iamlinjunhong)</li> <li>Long Ran (@aunjgr)</li> <li>Nan Deng (@dengn)</li> <li>Otter(@WenhaoKong2001)</li> <li>Peng Zhen (@daviszhen)</li> <li>Qin Shuqi (@sukki37)</li> <li>Sundy Li(@sundy-li)</li> <li>Shen JiangWei(@LeftHandCold)</li> <li>Jian Wang(@jianwan0214)</li> <li>Wan Hanbo(@wanhanbo )</li> <li>Xu Peng (@XuPeng-SH)</li> <li>Yan Wenze(@nnsgmsone)</li> <li>Yuesheng Li(@reusee)</li> <li>Zilong Zhou (@zzl200012)</li> <li>Zhang Yingfeng (@yingfeng)</li> </ul>"},{"location":"MatrixOne/Release-Notes/v22.0.3.0/#new-contributors","title":"New Contributors","text":"<ul> <li>@wanhanbo made their first contribution in https://github.com/matrixorigin/matrixone/pull/1600</li> <li>@ikenchina made their first contribution in https://github.com/matrixorigin/matrixone/pull/1685</li> <li>@sundy-li made their first contribution in https://github.com/matrixorigin/matrixone/pull/1704</li> <li>@WenhaoKong2001 made their first contribution in https://github.com/matrixorigin/matrixone/pull/1838</li> </ul> <p>We appreciate your contribution! Welcome to MatrixOne community.</p>"},{"location":"MatrixOne/Release-Notes/v22.0.3.0/#full-changelog","title":"Full Changelog","text":"<p>https://github.com/matrixorigin/matrixone/compare/v0.2.0...v0.3.0</p>"},{"location":"MatrixOne/Release-Notes/v22.0.4.0/","title":"MatrixOne v22.0.4.0 Release Notes","text":"<p>We are excited to announce MatrixOne v22.0.4.0 release on 2022/5/5. Cheers!</p>"},{"location":"MatrixOne/Release-Notes/v22.0.4.0/#docker","title":"Docker","text":"<p>docker pull matrixorigin/matrixone:0.4.0</p>"},{"location":"MatrixOne/Release-Notes/v22.0.4.0/#features","title":"Features","text":"<ul> <li>Support inner join with equality operator.</li> <li>Support subquery within from clause.</li> <li>Support decimal data type.</li> <li>Support following builtin functions:<ul> <li>Mathematical: Abs, Log, Ln, Ceil, Exp, Power, Pi, Sin, Sinh, Cos, ACos, Tan, ATan, Cot</li> <li>Datetime: Month, Weekday, Date, DayOfYear</li> <li>String: Space, Reverse, Substring, Ltrim, Rtrim, StartsWith, EndsWith, Lpad, Rpad, Empty, LengthUTF8</li> </ul> </li> <li>Support following aggregate functions:<ul> <li>Bit_and, Bit_or, Bit_xor, Stddev_pop, Var</li> </ul> </li> </ul>"},{"location":"MatrixOne/Release-Notes/v22.0.4.0/#known-issues","title":"Known issues","text":"<ul> <li>For continuous table creation actions in a script, the parameter of pre-allocated-group-num should be set to a bigger value such in cluster scenarios. Otherwise, \"no available raft group\" may be notified during tables creation sequence.</li> </ul>"},{"location":"MatrixOne/Release-Notes/v22.0.4.0/#contributors","title":"Contributors","text":"<p>This release includes 253 commits by 50 authors.</p>"},{"location":"MatrixOne/Release-Notes/v22.0.4.0/#new-contributors","title":"New Contributors","text":"<ul> <li>@BePPPower</li> <li>@JackTan25</li> <li>@Charlie17Li</li> <li>@domingozhang</li> <li>@Fungx</li> <li>@JasonPeng1310</li> <li>@jiajunhuang</li> <li>@NTH19</li> <li>@noneback</li> <li>@RinChanNOWWW</li> <li>@chaixuqing</li> <li>@Y7n05h</li> <li>@yuxubinchen</li> <li>@adlternative</li> <li>@ajian2002</li> <li>@bxiiiiii</li> <li>@coderzc</li> <li>@e11jah</li> <li>@fengttt</li> <li>@florashi181</li> <li>@hiyoyolumi</li> <li>@jinfuchiang</li> <li>@ouyuanning</li> <li>@qingxinhome</li> <li>@supermario1990</li> <li>@whileskies</li> <li>@xiw5</li> <li>@yclchuxue</li> <li>@ZtXavier</li> </ul> <p>We appreciate your contribution! Welcome to MatrixOne community.</p>"},{"location":"MatrixOne/Release-Notes/v22.0.4.0/#full-changelog","title":"Full Changelog","text":"<p>https://github.com/matrixorigin/matrixone/compare/v0.3.0...v0.4.0</p>"},{"location":"MatrixOne/Release-Notes/v22.0.5.0/","title":"MatrixOne v22.0.5.0 Release Notes","text":"<p>We are excited to announce MatrixOne v22.0.5.0 release on 2022/7/18. In this release, MatrixOne has a stand-alone columnar storage engine which can support HTAP workloads. Cheers!</p>"},{"location":"MatrixOne/Release-Notes/v22.0.5.0/#docker","title":"Docker","text":"<pre><code>docker pull matrixorigin/matrixone:0.5.0\n</code></pre>"},{"location":"MatrixOne/Release-Notes/v22.0.5.0/#features","title":"Features","text":"<ul> <li>Support ACID transaction with a Snapshot Isolation level.</li> <li>Support UPDATE, DELETE and INSERT INTO ... SELECT ... statement.</li> <li>Support BOOL and Timestamp data type.</li> <li>Support LEFT / RIGHT / OUTER / NATURAL JOIN.</li> <li>Support Having expression.</li> <li>Support subquery.</li> <li>Support Common Table Expression.</li> <li>Support CASE ... WHEN expression.</li> <li>Support Interval expression.</li> <li>Support Explain plan tree.</li> <li>Support new aggregate function: any_value</li> <li>Lots of new functions are supported.</li> </ul>"},{"location":"MatrixOne/Release-Notes/v22.0.5.0/#known-issues","title":"Known issues","text":"<ul> <li>Hotfix on 0.5.0 may cause data format incompatable.</li> <li>'Too many open files' error might be issued when user insert/update/delete data or create/drop table frequently. User need to increase the 'max open files' to resolve the issue.</li> <li>Running 1GB TPCH benchmark test with memory less than 64GB may result in an out of memory error.</li> <li>Loading large size of CSV file than 100GB might lead to system hanging. #3858</li> <li>Mixed TP and AP work loads running for a long time, might cause system panic. #3947 #3961</li> </ul>"},{"location":"MatrixOne/Release-Notes/v22.0.5.0/#contributors","title":"Contributors","text":"<p>This release includes 811 commits by 73 authors.</p>"},{"location":"MatrixOne/Release-Notes/v22.0.5.0/#new-contributors","title":"New Contributors","text":"<ul> <li>@lawrshen</li> <li>@lyfer233</li> <li>@wuliuqii</li> <li>@ericsyh</li> <li>@dongdongyang33</li> <li>@aylei</li> <li>@richelleguice</li> <li>@aressu1985</li> <li>@mklzl</li> </ul> <p>We appreciate your contribution! Welcome to MatrixOne community.</p>"},{"location":"MatrixOne/Release-Notes/v22.0.5.0/#full-changelog","title":"Full Changelog","text":"<p>https://github.com/matrixorigin/matrixone/compare/v0.4.0...v0.5.0</p>"},{"location":"MatrixOne/Release-Notes/v22.0.5.1/","title":"MatrixOne v22.0.5.1 Release Notes","text":"<p>We are excited to announce MatrixOne v22.0.5.1 release on 2022/8/19. In this release, MatrixOne resolved some log replaying and storage Garbage Collection(GC) issues.</p>"},{"location":"MatrixOne/Release-Notes/v22.0.5.1/#docker","title":"Docker","text":"<pre><code>docker pull matrixorigin/matrixone:0.5.1\n</code></pre>"},{"location":"MatrixOne/Release-Notes/v22.0.5.1/#function-optimize","title":"Function Optimize","text":"<ul> <li>Optimize checkpoint in replay. #4214</li> <li>Fix the bug that block and index file reference count is not released. #4052</li> <li>Fix the bug that replay dead loop when the log is not full. #4051</li> </ul> <p>These bugs lead to some stability issues of a MatrixOne instance.</p>"},{"location":"MatrixOne/Release-Notes/v22.0.5.1/#full-changelog","title":"Full Changelog","text":"<p>https://github.com/matrixorigin/matrixone/compare/v0.4.0...v0.5.1</p>"},{"location":"MatrixOne/Release-Notes/v22.0.6.0/","title":"MatrixOne v220.6.0 Release Notes","text":"<p>We are excited to announce MatrixOne v22.0.6.0 release on 2022/11/29. In this release, MatrixOne has upgraded to a disaggregated compute and storage  architecture, with a cloud native HTAP engine and many new features. Cheers!</p>"},{"location":"MatrixOne/Release-Notes/v22.0.6.0/#docker","title":"Docker","text":"<pre><code>docker pull matrixorigin/matrixone:0.6.0\n</code></pre>"},{"location":"MatrixOne/Release-Notes/v22.0.6.0/#features","title":"Features","text":"<ul> <li>Support distributed ACID transaction with a Snapshot Isolation level.</li> <li>Support TEXT, BLOB, TIME, JSON data type.</li> <li>Support multi-tenancy with account, user and role.</li> <li>Support VIEW.</li> <li>Support Java, Python, Golang connector and Mybatis, Spring JPA, SQLAlchemy ORM connection.</li> <li>Support import CSV and JSON data from local file system and cloud S3 storage.</li> <li>Implemented a MatrixOne dedicated backup tool <code>modump</code>.</li> <li>Support composite primary key, unique key and auto-increment constraint.</li> <li>Add <code>system_metrics</code> database in the catalog to monitor instance status.</li> <li>Add <code>system</code> database in the catalog to record user statements and system logs.</li> <li>Support timezone.</li> <li>Support TLS encrypted connection.</li> <li>Support pre-compilation statements PREPARE, EXECUTE, DEALLOCATE.</li> <li>Support EXPLAIN ANALYZE.</li> <li>Support UNION, UNION ALL, INTERSECT, MINUS operators.</li> <li>Support TEMPORARY TABLE.</li> <li>Support EXTERNAL TABLE.</li> <li>Support PARTITION BY.</li> <li>Add many system variables and tables to maintain MySQL compatibility.</li> <li>Add many new JSON, Datetime functions.</li> </ul>"},{"location":"MatrixOne/Release-Notes/v22.0.6.0/#known-issues","title":"Known Issues","text":"<ul> <li>0.6.0 data format is not compatible with the previous versions.</li> <li>Transactional performance doesn't compete with mature DBMS products.</li> <li>Composite Primary Key, Unique Key and Secondary Key doesn't improve any performance. #6028</li> <li>Insert/update into select having more than 100MB data will fail in a distributed setting. #6780</li> <li>Execute load data in a loop may cause out of memory. #6793</li> <li>Data race happens in a distributed setting. #6855, #6926</li> <li>Background jobs have a low probability causing user transaction being aborted due to r-w conflict. #6049</li> <li>Insert file into BLOB type might fail. #6302</li> </ul>"},{"location":"MatrixOne/Release-Notes/v22.0.6.0/#contributors","title":"Contributors","text":"<p>This release includes 1520 commits by 97 authors.</p>"},{"location":"MatrixOne/Release-Notes/v22.0.6.0/#new-contributors","title":"New Contributors","text":"<ul> <li>@lokax</li> <li>@triump2020</li> <li>@Abirdcfly</li> <li>@yjw1268</li> <li>@Juneezee</li> <li>@ZoranPandovski</li> <li>@Toms1999</li> <li>@xy2398437254</li> <li>@goodMan-code</li> <li>@DanielZhangQD</li> <li>@taofengliu</li> <li>@TszKitLo40</li> <li>@TheR1sing3un</li> <li>@qqIsAProgrammer</li> </ul> <p>We appreciate your contribution! Welcome to MatrixOne community.</p>"},{"location":"MatrixOne/Release-Notes/v22.0.6.0/#full-changelog","title":"Full Changelog","text":"<p>https://github.com/matrixorigin/matrixone/compare/v0.5.1...v0.6.0</p>"},{"location":"MatrixOne/Release-Notes/v23.0.7.0/","title":"MatrixOne v23.0.7.0 Release Notes","text":"<p>We are excited to announce MatrixOne v23.0.7.0 release on 2023/2/23. In this release, MatrixOne version 0.7.0 has been optimized for stability and performance under a cloud-native architecture and complete database functionality.</p> <p>To improve stability, we have optimized the memory management mechanism to significantly reduce the likelihood of memory leaks. We have also adjusted the timeout mechanism of some modules to prevent the system from becoming unresponsive during extreme cases, such as data import and restart. Additionally, we have fixed the issue where a single module failure in the distributed architecture would cause a system-wide collapse.</p> <p>To enhance performance, this iteration has focused on read and write optimization. For reading, we have implemented Zonemap-based statistical information and provided a better execution plan. We have also added the Cluster by field when creating a table to arrange data in advance, making it easier to obtain data faster. Furthermore, we have optimized many performance bottlenecks, including the IN operator, type conversion, and predicate filtering. As for writing, this iteration has achieved many parallel writes to shared storage directly through the CN node, greatly improving loading performance.</p>"},{"location":"MatrixOne/Release-Notes/v23.0.7.0/#docker","title":"Docker","text":"<pre><code>docker pull matrixorigin/matrixone:0.7.0\n</code></pre>"},{"location":"MatrixOne/Release-Notes/v23.0.7.0/#features","title":"Features","text":"<ul> <li>Support parallel load data mode.</li> <li>Support <code>Foreign Key</code>.</li> <li>Support adding <code>Cluster by</code> in DDL statements.</li> <li>Add a MYSQL_COMPATBILITY_MODE to manage MySQL-compatible behaviors.</li> <li>Modify the system default isolation level parameter to <code>REPEATABLE_READ</code> for better MySQL compatibility.</li> <li>Improve <code>Unique Index</code> behavior.</li> <li>Support to load data from the client machine.</li> <li>Support <code>Alter View</code>.</li> <li>Add query_result() function to get saved query results.</li> <li>Support account suspending.</li> <li>Support system table sharing to accounts.</li> <li>Support aggregate function <code>group_concat</code>.</li> <li>Support built-in functions: <code>format</code>, <code>replace</code>, <code>curdate</code>, <code>field</code>, <code>substring_index</code>, and other system functions.</li> </ul>"},{"location":"MatrixOne/Release-Notes/v23.0.7.0/#known-issues","title":"Known Issues","text":"<ul> <li>0.7.0 data format is not compatible with the previous versions.</li> <li>Transactional performance doesn't compete with mature DBMS products.</li> <li>The concurrent performance of OLTP type load is unstable.</li> <li>Secondary Key doesn't improve any performance.</li> <li>Only support up to 100GB benchmark testing.</li> <li>Out of memory(OOM) error or context deadline will occur after 5 hours of frequent testing.</li> <li>Loading multiple GB-level large tables in a distributed cluster will cause OOM problems.</li> </ul>"},{"location":"MatrixOne/Release-Notes/v23.0.7.0/#contributors","title":"Contributors","text":"<p>This release includes 656 commits by 43 authors.</p>"},{"location":"MatrixOne/Release-Notes/v23.0.7.0/#new-contributors","title":"New Contributors","text":"<ul> <li>@sourcelliu</li> <li>@iceTTTT</li> <li>@chrisxu333</li> <li>@songjiayang</li> <li>@dr-lab</li> <li>@arjunsk</li> <li>@Morranto</li> </ul> <p>We appreciate your contribution! Welcome to MatrixOne community.</p>"},{"location":"MatrixOne/Release-Notes/v23.0.7.0/#full-changelog","title":"Full Changelog","text":"<p>https://github.com/matrixorigin/matrixone/compare/v0.6.0...v0.7.0</p>"},{"location":"MatrixOne/Release-Notes/v23.0.8.0/","title":"MatrixOne v0.8.0 Release Notes","text":"<p>We are excited to announce MatrixOne v23.0.8.0 release on 2023/6/30.</p> <p>After four months of intensive development, MatrixOne has achieved significant performance, scalability, and usability enhancements. This update's highlight is the Proxy module's introduction, which accurately associates various SQL requests and load types with corresponding CN groups. This results in notable improvements in critical functions such as tenant isolation, read-write separation, and separation of transaction processing (TP) and analytical processing (AP) loads. Worth noting is that this 0.8.0 release is the final version of MatrixOne before its full public launch and also serves as the public Beta version of the MatrixOne product. We cordially invite all users and developers to download, test, and give feedback. Cheers!</p>"},{"location":"MatrixOne/Release-Notes/v23.0.8.0/#docker","title":"Docker","text":"<ul> <li>General Image:</li> </ul> <pre><code>docker pull matrixorigin/matrixone:0.8.0\n</code></pre> <ul> <li>If you are using the network in mainland China, you can pull the image on Alibaba Cloud:</li> </ul> <pre><code>docker pull registry.cn-shanghai.aliyuncs.com/matrixorigin/matrixone:0.8.0\n</code></pre>"},{"location":"MatrixOne/Release-Notes/v23.0.8.0/#key-points","title":"Key Points","text":""},{"location":"MatrixOne/Release-Notes/v23.0.8.0/#performance","title":"Performance","text":"<ul> <li>OLTP Performance: In common OLTP scenarios such as point queries and insertions, MatrixOne's performance has improved several times, reaching the performance level of MySQL in the standalone version.</li> <li>OLAP Performance: MatrixOne has further improved its OLAP performance. Standard OLAP benchmarks such as TPCH are comparable to the performance of leading OLAP databases in the industry.</li> <li>Scalability: MatrixOne implements second-level expansion of CN computing nodes, and after expansion, the performance of OLTP and OLAP increases linearly.</li> </ul>"},{"location":"MatrixOne/Release-Notes/v23.0.8.0/#improved-usability","title":"Improved Usability","text":"<ul> <li>Backward Compatibility of Data Format: Starting from version 0.8.0, all subsequent versions of MatrixOne will be compatible with the underlying data storage format of version 0.8.0. When upgrading the version, you no longer need to delete or re-import the old data directory.</li> <li>Simplified Deployment and Administration Tools: This iteration provides a simplified deployment and administration command-line tool, <code>mo_ctl</code>, which helps users quickly check the basic hardware environment, initialize configurations, and perform one-click installation and deployment. Both standalone and distributed version users no longer need to use complex Linux and K8s native commands for deployment and maintenance.</li> <li>Improved MySQL Compatibility: An upper and lower case mode compatible with MySQL has been added, and a tool for converting SQL from MySQL to MatrixOne is provided. Additionally, MatrixOne has added many table structures in the <code>information_schema</code> library, significantly reducing the adaptation work required for migration from MySQL.</li> <li>Support for Pessimistic Transactions: To better adapt to the current OLTP application transaction usage habits, MatrixOne has added support for pessimistic transactions. Also, MatrixOne supports SI and RC isolation levels. There is no need to set a retry mechanism for potential conflicts arising from optimistic transactions. At the same time, MatrixOne has added support for the <code>Select for update</code> command. (Experimental)</li> </ul>"},{"location":"MatrixOne/Release-Notes/v23.0.8.0/#other-features","title":"Other Features","text":"<ul> <li>Support window function <code>RANK()</code>, <code>ROW_NUMBER()</code> and <code>DENSE_RANK()</code>.</li> <li>Support the <code>BINARY</code> type and related functions.</li> <li>Support data sharing between tenants and <code>PUBLISH</code>/<code>SUBSCRIBE</code> functions.</li> <li>Support <code>INSERT...ON DUPLICATE KEY UPDATE</code> statement.</li> <li>Add <code>Sequence</code> and related statements.</li> <li>Support <code>ADD [COLUMN] | DROP [COLUMN]</code> in the <code>ALTER TABLE</code> statement.</li> <li>Support multi-layer foreign key.</li> <li>Support <code>RAND()</code> built-in function.</li> <li>Support setting global variables in configuration files.</li> <li>Secure initial MatrixOne account by password replacement.</li> <li>Several types of partitioning are supported. (Experimental)</li> </ul>"},{"location":"MatrixOne/Release-Notes/v23.0.8.0/#known-issues","title":"Known Issues","text":"<ul> <li>Data formats of versions before 0.8.0 are incompatible and cannot be upgraded directly.</li> <li>Secondary indexes have not been improved in any performance.</li> <li>Occasional memory leaks may lead to system out-of-memory(OOM) errors.</li> <li>Workload isolation tags are currently only supported in JDBC.</li> <li>TN represents a single point of failure for distributed version.</li> <li>Occasional system hang-ups under high-concurrency workloads.</li> <li>Pessimistic transaction has a few fatal bugs remaining.</li> </ul>"},{"location":"MatrixOne/Release-Notes/v23.0.8.0/#contributors","title":"Contributors","text":""},{"location":"MatrixOne/Release-Notes/v23.0.8.0/#new-contributors","title":"New Contributors","text":"<ul> <li>@zengyan1</li> <li>@forsaken628</li> <li>@gavinyue</li> <li>@gouhongshen</li> <li>@WitcherTheWhite</li> </ul> <p>We appreciate your contribution! Welcome to the MatrixOne community.</p>"},{"location":"MatrixOne/Release-Notes/v23.0.8.0/#full-changelog","title":"Full Changelog","text":"<p>https://github.com/matrixorigin/matrixone/compare/v0.7.0...v0.8.0</p>"},{"location":"MatrixOne/Release-Notes/v23.1.0.0-rc1/","title":"MatrixOne v23.1.0.0-RC1 Release Notes","text":"<p>We are thrilled to announce the release of MatrixOne v23.1.0.0-RC1 on 2023/8/24!</p> <p>This milestone marks we have basically achieved the initial design goal of the MatrixOne open-source project. Cheers!</p>"},{"location":"MatrixOne/Release-Notes/v23.1.0.0-rc1/#matrixone-100-rc1-review","title":"MatrixOne 1.0.0-RC1 Review","text":"<p>MatrixOne is designed to provide a unified and scalable database management solution for transactional, analytical and streaming workloads and powers a wide range of applications.  In general, MatrixOne 1.0.0-RC1 has delivered a cloud-native architecture with separated storage and computing, presenting a fully-functional database with high performance queries and elastic scaling with familiar relational SQL. The OLTP and OLAP performance of MatrixOne has also reached the industry's average level, meanwhile MatrixOne provides an experimental function of <code>Stream table</code> and <code>Kafka connector</code> for streaming processing.</p>"},{"location":"MatrixOne/Release-Notes/v23.1.0.0-rc1/#sql","title":"SQL","text":"<ul> <li>Syntax: MatrixOne SQL syntax is highly compatible with MySQL 8.0.</li> <li>DDL: Supports common DDL statements such as <code>CREATE</code>, <code>ALTER</code>, and <code>DELETE</code> databases, tables, views, and partitioned tables.</li> <li>DML: Supports common DML statements including <code>INSERT</code>, <code>UPDATE</code>, <code>DELETE</code>, and data import/export statements.</li> <li>Basic SQL query: Supports basic query capabilities such as grouping, deduplication, filtering, sorting, limiting, regular expressions, etc.</li> <li>Advanced SQL query: Supports advanced query capabilities including views, subqueries, joins, unions, Common Table Expressions (CTE), window functions, prepared statements, etc.</li> <li>Data Types: Supports data types including integer, floating-point, string, date/time, boolean, enum, binary, and JSON types.</li> <li>Aggregate Functions: Supports common aggregate functions such as AVG, COUNT, MIN, MAX, SUM, etc.</li> <li>System Functions and Operators: Supports common string, date/time, mathematical functions, and operators.</li> <li>Indexes and Constraints: Supports primary keys, unique constraints, non-null constraints, foreign keys, auto-increment constraints, and secondary indexes.</li> <li>Streaming: Supports the creation of streaming tables and integration with Kafka data sources.</li> <li>Multi-tenancy: Supports the creation and management of internal tenants within the database.</li> </ul>"},{"location":"MatrixOne/Release-Notes/v23.1.0.0-rc1/#data-import-and-export","title":"Data Import and Export","text":"<ul> <li>Supports batch insert data using <code>INSERT</code>, <code>LOAD DATA</code>, <code>SOURCE</code>, etc.</li> <li>Supports data export using <code>SELECT INTO</code> and <code>modump</code> methods.</li> <li>Supports direct import from local files and object storage.</li> </ul>"},{"location":"MatrixOne/Release-Notes/v23.1.0.0-rc1/#transactions","title":"Transactions","text":"<ul> <li>Supports ACID (Atomicity, Consistency, Isolation, Durability) transaction properties.</li> <li>Supports transaction initiation, commit, and rollback operations.</li> <li>Supports both pessimistic and optimistic transactions, allowing users to switch between them.</li> <li>Provides configuration options for isolation levels, including Snapshot Isolation and Read Committed.</li> </ul>"},{"location":"MatrixOne/Release-Notes/v23.1.0.0-rc1/#deployment","title":"Deployment","text":"<ul> <li>Supports both standalone and distributed deployment architectures.</li> <li>Supports deployment through source code, binary packages, Docker, and Kubernetes.</li> <li>Supports deployment on public cloud, private cloud, and physical machines.</li> </ul>"},{"location":"MatrixOne/Release-Notes/v23.1.0.0-rc1/#application-development","title":"Application Development","text":"<ul> <li>Supports native connectors for popular development languages such as Java, Python, and Golang, including JDBC, pymysql, go-sql-driver.</li> <li>Supports common ORM frameworks for various languages such as MyBatis, Spring JPA, SQLAlchemy, GORM.</li> <li>Supports popular MySQL management tools like Navicat, MySQL Workbench, DBeaver, HeidiSQL.</li> <li>Provides a standalone and distributed command-line management tool named <code>mo_ctl</code>.</li> <li>Includes comprehensive database logging and query recording capabilities, with the ability to integrate with visualization components like Grafana for real-time cluster monitoring.</li> </ul>"},{"location":"MatrixOne/Release-Notes/v23.1.0.0-rc1/#security-and-privileges","title":"Security and Privileges","text":"<ul> <li>Supports Transport Layer Security (TLS) encrypted connections.</li> <li>Supports Role-Based Access Control (RBAC).</li> </ul>"},{"location":"MatrixOne/Release-Notes/v23.1.0.0-rc1/#backup-and-restore","title":"Backup and Restore","text":"<ul> <li>Supports logical backups using the <code>modump</code> tool.</li> <li>Supports physical backups using the <code>mobr</code> tool.</li> </ul>"},{"location":"MatrixOne/Release-Notes/v23.1.0.0-rc1/#matrixone-use-cases","title":"MatrixOne Use Cases","text":""},{"location":"MatrixOne/Release-Notes/v23.1.0.0-rc1/#operational-analytics","title":"Operational Analytics","text":"<p>As the data volume of common IT systems such as OA, ERP, CRM, etc., increases with business growth, traditional single-node databases may not meet their performance requirements. Many companies set up a separate analytical database system to meet the needs of important reporting requirements at month-end or quarter-end, or use sharding techniques to reduce query loads. An operational analytics system is one that allows you to make quick decisions based on the current operational system. MatrixOne can fulfill the requirements of both the business system and the analytical system with a single database, while providing powerful scalability that can seamlessly expand as the business grows.</p>"},{"location":"MatrixOne/Release-Notes/v23.1.0.0-rc1/#real-time-analytics","title":"Real-time Analytics","text":"<p>For typical OLAP (Online Analytical Processing) applications in business, such as dashboards and BI reports, massive data analysis is often required. When the data volume becomes significant, performance bottlenecks may arise, resulting in poor timeliness. MatrixOne offers fast data ingestion, powerful analytical performance and scalability, enabling accelerated processing of complex and large-scale SQL queries, achieving sub-second response times, and improving the agility of enterprise decision-making and analysis.</p>"},{"location":"MatrixOne/Release-Notes/v23.1.0.0-rc1/#iot-monitoring","title":"IoT Monitoring","text":"<p>With the widespread application of sensors and network technologies, various IoT devices generate massive amounts of data, such as manufacturing plant production lines, renewable energy vehicles, city surveillance cameras, and more. The scale of data can easily reach hundreds of terabytes or even petabytes. There is an increasing demand for enterprises to store and utilize this data. Traditional database solutions cannot handle the real-time data ingestion and processing required in such massive and large-scale scenarios. MatrixOne provides powerful capabilities for streaming data ingestion and processing, along with robust scalability to handle any workload and data volume, fully meeting the requirements of this scenario.</p>"},{"location":"MatrixOne/Release-Notes/v23.1.0.0-rc1/#fluctuating-web-applications","title":"Fluctuating Web Applications","text":"<p>For internet-based web applications such as gaming, e-commerce, entertainment, social media, news, etc., where user numbers are large and business fluctuations are frequent and significant, substantial computing resources are often required to support business demands during peak events. MatrixOne, with its fully cloud-native architecture, offers exceptional scalability, automatically scaling up or down in response to changes in the business, thereby greatly reducing the operational complexity for users.</p>"},{"location":"MatrixOne/Release-Notes/v23.1.0.0-rc1/#saas-applications","title":"SaaS Applications","text":"<p>SaaS applications have experienced explosive growth in recent years. In SaaS application development, a multi-tenant model needs to be considered. Traditional solutions often involve either shared database instances for multiple tenants or dedicated database instances for each tenant, facing a trade-off between management costs and isolation. MatrixOne comes with built-in multi-tenancy capabilities, providing natural workload isolation between tenants and independent scalability. It also offers centralized management capabilities, effectively addressing cost, ease of management, and isolation requirements, making it the ideal choice for SaaS applications.</p>"},{"location":"MatrixOne/Release-Notes/v23.1.0.0-rc1/#quick-start","title":"Quick Start","text":""},{"location":"MatrixOne/Release-Notes/v23.1.0.0-rc1/#docker","title":"Docker","text":"<pre><code>docker pull matrixorigin/matrixone:1.0.0-rc1\n</code></pre> <p>This documentation site also provides detailed architecture instructions, installation guides, and development tutorials to help you explore the features and capabilities of MatrixOne here.</p> <p>Additionally, our GitHub and community forums are available for any questions, discussions, or feedback you may have.</p>"},{"location":"MatrixOne/Release-Notes/v23.1.0.0-rc1/#whats-changed-from-08-to-10","title":"What's changed from 0.8 to 1.0","text":"<p>From 0.8 to 1.0, we mainly developed some new functions and improve usability for production-level deployment.</p>"},{"location":"MatrixOne/Release-Notes/v23.1.0.0-rc1/#key-new-features","title":"Key New Features","text":""},{"location":"MatrixOne/Release-Notes/v23.1.0.0-rc1/#physical-backupenterprise-edition","title":"Physical Backup(Enterprise Edition)","text":"<p>In this version, we have introduced the physical backup feature, allowing users to easily backup and restore databases. Now, you can effortlessly create snapshots of your database and restore to previous states when needed, ensuring data integrity and reliability.</p>"},{"location":"MatrixOne/Release-Notes/v23.1.0.0-rc1/#stream-computing","title":"Stream Computing","text":"<p>As the final piece of the HSTAP architecture puzzle, we have completed the framework design for stream computing. In this iteration, we have added the ability to create streaming tables and implemented a Kafka connector to meet the streaming data ingestion needs of various time-series scenarios.</p>"},{"location":"MatrixOne/Release-Notes/v23.1.0.0-rc1/#recursive-cte","title":"Recursive CTE","text":"<p>Recursive CTE (Common Table Expression) is a feature that allows for repeatedly executing an initial CTE to return subsets of data until the complete result set is obtained. The implementation in this iteration enables users to easily handle hierarchical data and build more complex and flexible queries using recursive queries.</p>"},{"location":"MatrixOne/Release-Notes/v23.1.0.0-rc1/#key-improvements","title":"Key Improvements","text":""},{"location":"MatrixOne/Release-Notes/v23.1.0.0-rc1/#mysql-ddl-compatibility","title":"MySQL DDL Compatibility","text":"<p>We have further improved MatrixOne's compatibility with MySQL, enabling better support for MySQL table creation statements. Now, users can seamlessly migrate existing MySQL applications to MatrixOne without modifying existing table creation statements.</p>"},{"location":"MatrixOne/Release-Notes/v23.1.0.0-rc1/#session-migration-during-scaling","title":"Session Migration during Scaling","text":"<p>We have added the capability to migrate sessions seamlessly during distributed instance scaling operations. Users can easily adjust the capacity of MatrixOne without impacting existing sessions and business operations.</p>"},{"location":"MatrixOne/Release-Notes/v23.1.0.0-rc1/#simplified-system-configuration","title":"Simplified System Configuration","text":"<p>We have significantly simplified the startup configuration options for both single-node and distributed versions, allowing users to quickly and easily start the database.</p>"},{"location":"MatrixOne/Release-Notes/v23.1.0.0-rc1/#mo_ctl-tool","title":"mo_ctl Tool","text":"<p>We have optimized the functionality of the mo_ctl maintenance tool for both single-node and distributed setups, providing more powerful and user-friendly maintenance capabilities. Now, you can effortlessly deploy, upgrade, scale, and perform other maintenance operations using the distributed mo_ctl tool (Enterprise Edition).</p>"},{"location":"MatrixOne/Release-Notes/v23.1.0.0-rc1/#other-features","title":"Other Features","text":"<ul> <li>Add <code>Replace</code> for DDL</li> <li>Add column modification for <code>Alter Table</code></li> <li>Add <code>Create Stage</code> statement, simplify Data Import/Export process</li> <li>Add <code>Show Processlist</code> for checking system status</li> <li>Add <code>enum</code> data type</li> <li>Add <code>Year</code> data type</li> <li>Add <code>To_Days</code>/<code>To_Seconds</code> system functions</li> <li>Improve <code>Group by</code> behavior by alias support</li> </ul>"},{"location":"MatrixOne/Release-Notes/v23.1.0.0-rc1/#known-issues","title":"Known Issues","text":"<ul> <li>Secondary Key doesn't improve any performance.</li> <li>Memory leak occasionally happens and may lead to an OOM error.</li> <li>DN is a single point of failure for distributed version.</li> <li>Occasional system hung under high concurrency workload.</li> </ul>"},{"location":"MatrixOne/Release-Notes/v23.1.0.0-rc1/#full-changelog","title":"Full Changelog","text":"<p>https://github.com/matrixorigin/matrixone/compare/v0.8.0...v1.0.0-rc1</p>"},{"location":"MatrixOne/Release-Notes/v23.1.0.0-rc2/","title":"MatrixOne v23.1.0.0-RC2 Release Notes","text":"<p>Compared with the previous v23.1.0.0-RC1, v23.1.0.0-RC2 doesn't introduce any new features but focuses on some improvements and bug fixes.</p>"},{"location":"MatrixOne/Release-Notes/v23.1.0.0-rc2/#improvements","title":"Improvements","text":"<ul> <li>Improved stability #11384, #11416, #12134, #12145, #12217, #12289 and etc.</li> <li>Improved system observability #11607, #11240, #12237, #12276 and etc.</li> <li>Enhanced and improved Merge strategy and stability #11694, #12210.</li> <li>Optimized performance and stability of <code>delete</code> operations #11541, #11542, #11882, #11969.</li> <li>Optimized memory usage in some scenarios #11533, #12178 and etc.</li> <li>Enhanced performance and algorithms for some aggregate queries #11543, #11841, #11843, #11910 and etc.</li> <li>Optimized performance and stability of locks #11649, #12077 and etc.</li> <li>Optimized decimal data type operation #11617, #11606, #11820.</li> <li>Enhanced the functionality of prepared statements #11616.</li> <li>Enhanced the functionality of <code>on duplicate key</code> #11632, #11760.</li> <li>Improved recursive Common Table Expression (CTE) capabilities #11508, #11564, #11614.</li> <li>Optimized performance and resource consumption in metrics/log/trace collection #11540, #11648, #12061, and #12115.</li> <li>Optimized the filtering performance for composite primary keys #11626.</li> <li>Enhanced write performance for large datasets #11633.</li> <li>Added support for Aliyun OSS in fileservice #11660, #11715, #11880, #11942, #12037.</li> <li>Improved capabilities of <code>mo_ctl</code> #11680, #12247.</li> <li>Further enhancements to <code>partition</code> related features #11762.</li> <li>Enhanced and improved <code>runtime filter</code> #11868.</li> <li>Optimized the local testing framework #11904.</li> <li>Optimized performance for <code>count/min/max</code> operations #11959.</li> <li>Improved compatibility with MySQL DDL #11482, #11557, #11589 and etc.</li> </ul>"},{"location":"MatrixOne/Release-Notes/v23.1.0.0-rc2/#bugfix","title":"Bugfix","text":"<ul> <li>Fixed <code>checkpoint</code> related bugs #12014, #12124, #12172 and etc.</li> <li>Fixed <code>alter table/db</code> related bugs #11429, #11484, #12162 and etc.</li> <li>Fixed DDL related bugs #11842, #11770, #11789, #12188 and etc.</li> <li>Fixed GC-related issues #11689.</li> <li>Fixed <code>taskservice</code> related bugs #11544.</li> <li>Fixed window function-related bugs #11461.</li> <li>Fixed high-concurrency conflict issues #11759.</li> <li>Fixed <code>show backend servers</code> incorrect results #11414.</li> <li>Fixed <code>insert</code> related bugs #11495 and etc.</li> <li>Fixed deduplication-related bugs #11895 and etc.</li> <li>Fixed foreign key-related issues #11560, #11586 and etc.</li> <li>Fixed data race problems in the systems, #11571, #11588, and etc.</li> <li>Fixed bloomfilter bug #11914 and etc.</li> <li>Fixed various functional bugs #11668, #12270,#11504 and etc.</li> <li>Fixed startup issues in the system #11756, #12055, #12160 and etc.</li> </ul>"},{"location":"MatrixOne/Release-Notes/v23.1.0.0-rc2/#full-changelog","title":"Full Changelog","text":"<p>https://github.com/matrixorigin/matrixone/compare/v1.0.0-rc1...v1.0.0-rc2</p>"},{"location":"MatrixOne/Release-Notes/v23.1.0.0/","title":"MatrixOne v23.1.0.0 Release Notes","text":"<p>Release date: November 13, 2023</p> <p>MatrixOne version: v23.1.0.0</p> <p>Compared with the previous v23.1.0.0-RC2, v23.1.0.0 doesn't introduce any new features but focuses on some improvements and bug fixes.</p>"},{"location":"MatrixOne/Release-Notes/v23.1.0.0/#improvements","title":"Improvements","text":"<ul> <li>Storage Optimization: #12465 #12676</li> <li>More metrics added: #12302 #12313 #12511</li> <li>Update Object Cache policy: #12699 #12661</li> </ul>"},{"location":"MatrixOne/Release-Notes/v23.1.0.0/#bugfix","title":"Bugfix","text":"<ul> <li>Fix aliyun sdk related bugs: #12296 #12695</li> <li>Fix some operator related bugs: #12360 #12611</li> <li>Fix flush panic: #12342</li> <li>Fix system table bugs: #12372 #12689</li> <li>Fix GC related bugs: #12487</li> </ul>"},{"location":"MatrixOne/Release-Notes/v23.1.0.0/#full-changelog","title":"Full Changelog","text":"<p>https://github.com/matrixorigin/matrixone/compare/v1.0.0-rc2...v1.0.0</p>"},{"location":"MatrixOne/Release-Notes/v23.1.0.1/","title":"MatrixOne v23.1.0.1 Release Notes","text":"<p>Release date: December 16, 2023</p> <p>MatrixOne version: v23.1.0.1</p> <p>Compared with the previous v23.1.0.0, v23.1.0.1 introduces a few features but the focus was primarily on improvements and bug fixes.</p>"},{"location":"MatrixOne/Release-Notes/v23.1.0.1/#improvements","title":"Improvements","text":"<ul> <li>Refactor the collection of account storage usage information:#12468</li> <li>Improve <code>lockservice</code> p99 latency performance:#12760</li> <li>Enhance system observability:#12756 #12767 #12801#13282#13388</li> <li>Add some debug commands:#12772 #12804 #12901 </li> <li>Improve cu stats:#12925</li> </ul>"},{"location":"MatrixOne/Release-Notes/v23.1.0.1/#bugfix","title":"Bugfix","text":"<ul> <li>Fixed some MySQL compatibility issues:#12753 #13330</li> <li>Resolved an issue with incorrect calculation of FileService cache size:#12729</li> <li>Fixed some system hung issues:#12777 #13004 #13227</li> <li>Modified prefetch strategy to reduce memory usage:#12827</li> <li>Corrected create/drop account issues:#12841 #12863 #13130 #13343</li> <li>Resolved <code>show processlist</code> issue: #12834</li> <li>Fixed the issue of a large number of SQL queries accumulating:#12899 #12923</li> <li>Fixed some rpc bugs:#12884</li> <li>Fixed go routine leak:#13312</li> <li>Fixed some lock bugs:#13082 #13346</li> <li>Fixed the continuous FATAL issue in CN:#13047</li> <li>Fixed an error in the maximum data packet length calculation:#13112</li> <li>Fixed incorrect routing issue:#13103</li> <li>Fixed unexcepted ckp stopped bug:#13308</li> <li>Resolved the issue of abnormal display of transaction DDL execution results:#13440</li> <li>Fixed blob type encoding bug:#13507</li> <li>Fixed non-reserved keyword collation:#13501</li> </ul>"},{"location":"MatrixOne/Release-Notes/v23.1.0.1/#features","title":"Features","text":"<ul> <li>Support <code>lower()</code>, <code>upper()</code>, <code>locate()</code> #13442</li> </ul>"},{"location":"MatrixOne/Release-Notes/v23.1.0.1/#full-changelog","title":"Full Changelog","text":"<p>https://github.com/matrixorigin/matrixone/compare/v1.0.0...v1.0.1</p>"},{"location":"MatrixOne/Release-Notes/v23.1.0.2/","title":"MatrixOne v23.1.0.2 Release Notes","text":"<p>Release date: December 23, 2023</p> <p>MatrixOne version: v23.1.0.2</p> <p>Compared with the previous v23.1.0.1, v23.1.0.2 introduces a few features/improvements but the focus was primarily on bug fixes.</p>"},{"location":"MatrixOne/Release-Notes/v23.1.0.2/#improvements","title":"Improvements","text":"<ul> <li>Support transitivity of equalities:#13596</li> </ul>"},{"location":"MatrixOne/Release-Notes/v23.1.0.2/#bugfix","title":"Bugfix","text":"<ul> <li>Fix some reserved keywords bugs:#13561</li> <li>Fix PrefecthDelete bug:#13590</li> <li>Fix blob related bug:#13593</li> <li>Fix mo_ctl merge hung:#13601</li> <li>Fix the issue of incorrectly pushing down runtime filters during left join:#13661</li> <li>Fix a bug where the package partition never considers the constant vector:#13607</li> <li>Ignore invalid symlink in local fs list:#13675</li> <li>Fixed the issue of an abnormal interruption during flush:#13696 #13706 #13708</li> <li>Fixed the issue where executing SHOW SUBSCRIPTIONS; fails in certain special scenarios:#13656 #13599</li> <li>Fix the bug where DirtyBlocks removes the wrong block:#13647</li> </ul>"},{"location":"MatrixOne/Release-Notes/v23.1.0.2/#features","title":"Features","text":"<ul> <li>Support <code>lcase()</code>, <code>ucase()</code>#13686</li> </ul>"},{"location":"MatrixOne/Release-Notes/v23.1.0.2/#full-changelog","title":"Full Changelog","text":"<p>https://github.com/matrixorigin/matrixone/compare/v1.0.1...v1.0.2</p>"},{"location":"MatrixOne/Release-Notes/v23.1.1.0/","title":"MatrixOne v23.1.1.0 Release Notes","text":"<p>We are thrilled to announce the release of MatrixOne v23.1.1.0 on 2023/12/29!</p> <p>MatrixOne is a hyper-converged cloud-native database. It is designed to provide a cloud-native, high-performance, highly scalable, MySQL-compatible HTAP database. MatrixOne enables users to handle mixed workloads such as transactions, analytics, time-series, and streaming processing through a one-stop data processing solution.</p>"},{"location":"MatrixOne/Release-Notes/v23.1.1.0/#whats-new-in-v110","title":"What's New in v1.1.0?","text":""},{"location":"MatrixOne/Release-Notes/v23.1.1.0/#vector-data-type","title":"Vector Data Type","text":"<p>These features enable users to quickly build AI applications, such as RAG applications based on large language models (LLMs). Unlike specialized vector databases, MatrixOne is a general database highly compatible with MySQL, enabling users to get started quickly without additional learning barriers. It also integrates structured and vector data processing for building AI applications.</p> <ul> <li>Implemented vecf32 (float32) and vecf64 (float64) type.</li> <li>Support for basic binary operators: +,-,*,/.</li> <li>Support for comparison operators: =, !=, &gt;, &gt;=, &lt;, &lt;=.</li> <li>Support for unary functions: sqrt,abs,cast.</li> <li>Support for vector functions: summation,l1_norm,l2_norm,vector_dims,inner_product,cosine_similarity.</li> <li>Support for aggregate function: count.</li> </ul>"},{"location":"MatrixOne/Release-Notes/v23.1.1.0/#time-series","title":"Time Series","text":"<ul> <li>Support for streaming loading with LOAD INTO INLINE, surpassing INSERT INTO in performance.</li> <li>Support for time-series tables with timestamps as primary keys, and support for any dimension/metric columns.</li> <li>Support sliding window for downsampling queries over different time periods.</li> <li>Support for interpolation with various interpolation methods.</li> </ul>"},{"location":"MatrixOne/Release-Notes/v23.1.1.0/#kafka-connectorbeta","title":"Kafka Connector(beta)","text":"<ul> <li>Support for creating dynamic and append-only table with CREATE DYNAMIC TABLE.</li> <li>Support for configuring external data sources with CREATE SOURCE.</li> <li>Support for Kafka topic integration with JSON or protobuf format.</li> </ul>"},{"location":"MatrixOne/Release-Notes/v23.1.1.0/#user-defined-functionsbeta","title":"User Defined Functions(beta)","text":"<ul> <li>Support for creating Python-based UDF</li> </ul>"},{"location":"MatrixOne/Release-Notes/v23.1.1.0/#other-new-features","title":"Other New Features","text":""},{"location":"MatrixOne/Release-Notes/v23.1.1.0/#ddl-statements","title":"DDL Statements","text":"<ul> <li>Support for insert on duplicate key ignore.</li> <li>Support for create or replace view.</li> <li>Support for alter sequence.</li> <li>Support for Key, hash partition pruning capabilities (beta).</li> <li>Support for List/List column, Range/Range Columns partition storage capabilities (beta).</li> </ul>"},{"location":"MatrixOne/Release-Notes/v23.1.1.0/#indexes-and-constraints","title":"Indexes and Constraints","text":"<ul> <li>Full support of secondary indexes for dynamic query acceleration.</li> </ul>"},{"location":"MatrixOne/Release-Notes/v23.1.1.0/#built-in-functions","title":"Built-in Functions","text":"<ul> <li>Added SAMPLE sampling function.</li> <li>Added CONVERT_TZ time zone conversion function.</li> <li>Added SHA2 encryption function.</li> <li>Added Encode/Decode encoding and decoding functions.</li> </ul>"},{"location":"MatrixOne/Release-Notes/v23.1.1.0/#security","title":"Security","text":"<ul> <li>Support for managing path permissions for select into through creating Stage.</li> </ul>"},{"location":"MatrixOne/Release-Notes/v23.1.1.0/#tools","title":"Tools","text":""},{"location":"MatrixOne/Release-Notes/v23.1.1.0/#mo_dump-tool-logical-backup","title":"mo_dump tool (logical backup)","text":"<ul> <li>Starting from this iteration, modump is managed in a separate repo (https://github.com/matrixorigin/mo_dump).</li> <li>Supports exporting DDLs separately.</li> <li>Supports exporting multiple databases and tables.</li> <li>mo_backup tool (physical backup)</li> <li>Supports file systems and object storage as storage media for backup and restoration.</li> </ul>"},{"location":"MatrixOne/Release-Notes/v23.1.1.0/#mo_ctl_standalone-tool","title":"mo_ctl_standalone Tool","text":"<ul> <li>Supports automatic data backup.</li> <li>Supports automatic log table data cleaning.</li> <li>Supports converting data files from CSV format to insert or load data inline format.</li> <li>Supports automatic docker image building.</li> <li>Supports docker mode for standalone deployment.</li> </ul>"},{"location":"MatrixOne/Release-Notes/v23.1.1.0/#mo_ctl_distributed-tool","title":"mo_ctl_distributed Tool","text":"<ul> <li>Supports one-click installation and uninstallation of distributed clusters.</li> <li>Supports start/stop, upgrade/rollback operations for matrixone clusters.</li> <li>Supports installing matrixone clusters in different k8s clusters.</li> </ul>"},{"location":"MatrixOne/Release-Notes/v23.1.1.0/#mo_operator-tool","title":"mo_operator tool","text":"<ul> <li>Supports configuring custom S3 certificates.</li> <li>Supports backup and recovery, and management of backup data for matrixone clusters via API.</li> <li>Supports setting optimized Go GC strategies automatically for matrixone clusters.</li> <li>Supports enabling Python UDF for matrixone clusters.</li> <li>Supports integration of matrixone on Kubernetes with Prometheus.</li> </ul>"},{"location":"MatrixOne/Release-Notes/v23.1.1.0/#mysql-compatibility","title":"MySQL Compatibility","text":"<ul> <li>Remove hundreds of MySQL-incompatible reserved keywords.</li> </ul>"},{"location":"MatrixOne/Release-Notes/v23.1.1.0/#known-issues","title":"Known Issues","text":"<ul> <li>Secondary Index doesn't apply for IN queries.</li> <li>Kafka connector works only in a standlone deployment.</li> <li>Occasional system hung under high concurrency workload.</li> <li>Memory leak occasionally happens and may lead to an OOM error.</li> </ul>"},{"location":"MatrixOne/Release-Notes/v23.1.1.0/#new-contributors","title":"New Contributors","text":"<ul> <li>@aronchanisme made their first contribution in #11424</li> <li>@xmh1011 made their first contribution in #12112</li> <li>@orangekame3 made their first contribution in #12330</li> <li>@joker-star-l made their first contribution in #11098</li> <li>@lcxznpy made their first contribution in #13810</li> </ul>"},{"location":"MatrixOne/Release-Notes/v23.1.1.0/#full-changelog","title":"Full Changelog","text":"<p>https://github.com/matrixorigin/matrixone/compare/v1.0.0...v1.1.0</p>"},{"location":"MatrixOne/Release-Notes/v24.1.1.1/","title":"MatrixOne v24.1.1.1 Release Notes","text":"<p>Release date: February 04, 2024</p> <p>MatrixOne version: v24.1.1.1</p> <p>Compared with the previous v24.1.1.0, v24.1.1.1 doesn't introduce any new features but focuses on some improvements and bug fixes.</p>"},{"location":"MatrixOne/Release-Notes/v24.1.1.1/#improvements","title":"Improvements","text":"<ul> <li>Improved stability by fixing bugs related to lock service and proxy.</li> <li>Enhanced forward compatibility.</li> <li>Optimized MySQL compatibility.</li> <li>Improved the accuracy of runtime resource consumption statistics.</li> </ul>"},{"location":"MatrixOne/Release-Notes/v24.1.1.1/#bugfix","title":"Bugfix","text":"<ul> <li>Fixed some unhandled error and redundant codes:#13909 #13910</li> <li>Fixed checkAddNameConflictLocked :#13916 #13917</li> <li>Fixed mo_ ctl permission bugs:#13926</li> <li>Fixed data race bugs:#13928 #14196</li> <li>Fixed a bug related to import data with Aliyun Cloud account ARN:#13921 #13930 #13979</li> <li>Change account for sysbench :#13935</li> <li>Fixed year() bugs:#13945</li> <li>Fixed the prepare wait condition from execute to close:#13896 #14075</li> <li>Fixed memory leak bugs:#13966</li> <li>Fixed lockservice bugs:#13941 #13981</li> <li>Fixed slow insert bugs:#13992</li> <li>Fixed non reserverd keyword last:#14014</li> <li>Fixed mo-dump bugs:#14010</li> <li>Fixed routing packet bugs:#14003</li> <li>Fixed TPCH 1t query timeout bugs:#14018 #14022</li> <li>Fixed panic if allocating lock table from dn failed:#14039</li> <li>Fixed SCA failure during GO version upgrade:#14029</li> <li>Fixed marshal query bugs:#14004 #14036</li> <li>Remove segdel batch and block meta without deltaloc in ckp:#13952</li> <li>Fixed panic error in stability testing:#14034#14035</li> <li>Fixed the bug of establishing a large number of connections for too long on distributed mode regression TKE:#14045</li> <li>Fixed premature termination when the sender has nothing to send bugs:#14052#14053</li> <li>Fixed occasional loading timeout bugs in running TPCH tests:#13268 #14051 #14304</li> <li>Fixed TPCC regression testing errors:#14058</li> <li>Fixed bug: prepare statement should throw an error when too many parameters:#14037</li> <li>Fixed bug: string as primary key under some boundary conditions:#14055</li> <li>Fixed bug: significant performance differences between single table and multiple table point queries in TPS:#14089</li> <li>Fixed StorageUsage bugs:#14103 #14233 #14246</li> <li>Fixed incorrect CPU statistics bugs:#14105</li> <li>Fixed some panic errors :#13938 #14109</li> <li>Fixed bug related to \"invalid file path\" :#14143</li> <li>Fixed bug: should throw err when preparing multi stmt:#14112 #14124</li> <li>Fixed invalid deadlock error :#14153</li> <li>Fixed right join panic:#14164</li> <li>Fixed bug related to distributed mode with too many open files:#14177</li> <li>Fixed lock table map :#14202</li> <li>Fixed flush block error handling:#14215</li> <li>Fixed upgraded GC error:#14218</li> <li>Fixed create account timeout:#14182</li> <li>Fixed the bug of interrupting cron tasks when errors occurred:#14200</li> <li>Fixed Aliyun Cloud bugs:#14184</li> <li>Fixed bug related to load too many checkpoints during checkpoint replay:#14221 #14222</li> <li>Print more ckp details:#14188</li> <li>Fixed bind changed not handled :#14243</li> <li>Fixed concurrent map writes bugs:#14238</li> <li>Fixed  show tables panic:#14227 #14229</li> <li>Fixed mpool leak in LockMoDatabase:#14217 #14249</li> <li>Fixed node communication timeout bugs:#14253</li> <li>Fixed mpool leak in txn.WriteBatch bugs:#14220 #14250</li> <li>Fixed bug related to TN return status error:#14257</li> <li>Fixed EOB bugs:#13949</li> <li>Fixed hidden table bugs: :#14261</li> <li>Fixed mpool leak for remote run:#14264</li> <li>Fixed inserting _binary data bugs:#14262</li> <li>Fixed setvar in the active transaction :#14258</li> <li>Fixed different counts bugs:#14060 #14271 #14272</li> <li>Fixed update table panic:#14171#14251</li> <li>Fixed bug related wrong statementid due to order adjustment:#14067 #14179</li> <li>Fixed continue can not connect to remote:#14294</li> <li>Fixed bit/hex bugs:#14290</li> <li>Upgraded UUID version:#14318</li> <li>Improve slow query performance:#14301 #14323</li> <li>Fixed error query result bugs:#14333</li> <li>Fixed index bugs:#14334</li> <li>Fixed delete panic:#14337</li> <li>Fixed bug related access system table with regular account:#14340</li> <li>Fixed subscription error:#14351</li> <li>Fixed ut error:#14355</li> <li>ix keep remote lock failed:#14357</li> <li>Fixed bug related to internal error:#14366</li> <li>Fixed TN panic:#14368</li> <li>Fixed ta bug that space without releasing when deleting data:#14361</li> <li>Fixed a bug that cause funtion convert_tz bad performance.</li> </ul>"},{"location":"MatrixOne/Release-Notes/v24.1.1.1/#full-changelog","title":"Full Changelog","text":"<p>https://github.com/matrixorigin/matrixone/compare/v1.1.0...v1.1.1</p>"},{"location":"MatrixOne/Release-Notes/v24.1.1.2/","title":"MatrixOne v24.1.1.2 Release Notes","text":"<p>Release date: April 02, 2024</p> <p>MatrixOne version: v24.1.1.2</p> <p>Compared with the previous v24.1.1.1, v24.1.1.2 doesn't introduce any new features but focuses on some improvements and bug fixes.</p>"},{"location":"MatrixOne/Release-Notes/v24.1.1.2/#improvements","title":"Improvements","text":"<ul> <li>Query performance optimization: #14819 #14519 #14835</li> <li>Backup parallelization optimization: #14543</li> <li>Support for S3 retry: #14992</li> <li>Optimization of Proxy migration capabilities: #14858 #14901 #15162</li> <li>Optimized UUID performance: #15187</li> </ul>"},{"location":"MatrixOne/Release-Notes/v24.1.1.2/#bugfix","title":"Bugfix","text":"<ul> <li>Fixed data accuracy:#14653 </li> <li>Fixed transaction commit WW and DUP: #15034 #15123 #15145</li> </ul> <p>For additional bug fixes, please refer to the MatrixOne-v24.1.1.2 for more details.</p>"},{"location":"MatrixOne/Release-Notes/v24.1.1.2/#full-changelog","title":"Full Changelog","text":"<p>https://github.com/matrixorigin/matrixone/compare/v1.1.1...v1.1.2</p>"},{"location":"MatrixOne/Release-Notes/v24.1.1.3/","title":"MatrixOne v24.1.1.3 Release Notes","text":"<p>Release date: April 16, 2024</p> <p>MatrixOne version: v24.1.1.3</p> <p>Compared with the previous v24.1.1.2, v24.1.1.3 doesn't introduce any new features but focuses on some bug fixes.</p>"},{"location":"MatrixOne/Release-Notes/v24.1.1.3/#bugfix","title":"Bugfix","text":"<ul> <li>Resolved data integrity issues caused by orphaned transactions #15452.</li> <li>Fixed potential transaction leak issues #15505 .</li> <li>Addressed issues related to system tables #15331 #15332 .</li> <li>Rectified problems associated with the lockable #15402 .</li> </ul> <p>For additional bug fixes, please refer to the MatrixOne-v24.1.1.3 for more details.</p>"},{"location":"MatrixOne/Release-Notes/v24.1.1.3/#full-changelog","title":"Full Changelog","text":"<p>https://github.com/matrixorigin/matrixone/compare/v1.1.2...v1.1.3</p>"},{"location":"MatrixOne/Release-Notes/v24.1.2.0/","title":"MatrixOne v24.1.2.0 Release Notes","text":"<p>We are thrilled to announce the release of MatrixOne v24.1.2.0 on 2024/05/20!</p>"},{"location":"MatrixOne/Release-Notes/v24.1.2.0/#what-is-matrixone","title":"What is Matrixone?","text":"<p>MatrixOne is a hyper-converged cloud-native database. It is designed to provide a cloud-native, high-performance, highly scalable, MySQL-compatible HTAP database. MatrixOne enables users to handle mixed workloads such as transactions, analytics, time-series, and streaming processing through a one-stop data processing solution.</p> <p> </p>"},{"location":"MatrixOne/Release-Notes/v24.1.2.0/#whats-new-in-v120","title":"What's New in v1.2.0?","text":""},{"location":"MatrixOne/Release-Notes/v24.1.2.0/#snapshot-backup-and-recoverybeta","title":"Snapshot Backup and Recovery(Beta)","text":"<p>Database snapshot is an efficient technology for database backup and recovery, providing a read-only static copy of the database at a specific point in time. It assists database administrators and developers in performing various operations while ensuring the consistency and integrity of the data.  </p> <ul> <li>Support for tenant-level snapshot backup and recovery using the mo_br tool and sql statement.  </li> <li>Support for uninterrupted database operation during the snapshot creation process.  </li> <li>Support for rapidly restoring data to the state at the time of backup, effectively reducing the Recovery Time Objective (RTO).</li> </ul>"},{"location":"MatrixOne/Release-Notes/v24.1.2.0/#incremental-physical-backupenterprise-edition","title":"Incremental Physical Backup(Enterprise Edition)","text":"<p>On the basis of full backup in the mo_backup tool,we support for incremental backup feature , which only backs up the newly changed data, significantly reducing the backup time and storage space requirements.</p>"},{"location":"MatrixOne/Release-Notes/v24.1.2.0/#ctas","title":"CTAS","text":"<p>Support for CTAS (Create Table As Select).CTAS is an SQL statement used to quickly create a new table based on existing data. It combines the functionality of table creation with a select query, providing an efficient way to create snapshots of tables, perform data transformations, or build data models for reporting and analysis.</p>"},{"location":"MatrixOne/Release-Notes/v24.1.2.0/#bitmap-fast-deduplication","title":"BITMAP Fast Deduplication","text":"<p>BITMAP is a set of built-in functions for handling bitmaps, mainly used for rapid deduplication of large volumes of data.</p> <ul> <li>Support for rapid data deduplication using BITMAP functions.</li> <li>Support for determining the bucket number with the BITMAP_BUCKET_NUMBER() function.</li> <li>Support for returning the relative bit position within a bucket using the BITMAP_BIT_POSITION() function.</li> <li>Support for constructing bitmaps with the BITMAP_CONSTRUCT_AGG() function.</li> </ul>"},{"location":"MatrixOne/Release-Notes/v24.1.2.0/#vector-index","title":"Vector Index","text":"<ul> <li>Support for using vector indexing to accelerate KNN queries.</li> </ul>"},{"location":"MatrixOne/Release-Notes/v24.1.2.0/#other-new-features","title":"Other New Features","text":""},{"location":"MatrixOne/Release-Notes/v24.1.2.0/#sql-statements","title":"SQL Statements","text":"<ul> <li>Support for insert ignore</li> <li>Support for create table ... like</li> <li>Support for create index ... using ivfflat</li> <li>Support for alter table ... alter reindex</li> <li>Support for load data ... character set</li> <li>Support for creat snapshot</li> <li>Support for show snapshots</li> <li>Support for restore account</li> <li>Support for drop snapshot</li> <li>Optimized alter publication</li> <li>Optimized show publications</li> <li>Optimized show subscriptions</li> </ul>"},{"location":"MatrixOne/Release-Notes/v24.1.2.0/#date-type","title":"Date Type","text":"<ul> <li>Support for bit</li> </ul>"},{"location":"MatrixOne/Release-Notes/v24.1.2.0/#indexs-and-constraints","title":"Indexs and Constraints","text":"<ul> <li>Support for Vector Index</li> </ul>"},{"location":"MatrixOne/Release-Notes/v24.1.2.0/#built-in-functions-and-operators","title":"Built-in Functions and Operators","text":"<ul> <li>Added SYSDATE date function.</li> <li>Added TO_BASE64 and FROM_BASE64 encoding and decoding functions.</li> <li>Added MD5 and SHA1/SHA encryption functions.</li> <li>Added SUBVECTOR function for extracting subvectors.</li> <li>Added SERIAL_EXTRACT function for extracting sub-elements.</li> <li>Added CLUSTER_CENTERS cluster centers function.</li> <li>Support operations between vector and scalar.</li> </ul>"},{"location":"MatrixOne/Release-Notes/v24.1.2.0/#system-parameters","title":"System Parameters","text":"<ul> <li>Added keep_user_target_list_in_result.</li> <li>Added foreign_key_checks.</li> </ul>"},{"location":"MatrixOne/Release-Notes/v24.1.2.0/#mysql-compatibility","title":"MySQL Compatibility","text":"<ul> <li>Refactored the CSV reader and CSV splitting to maintain compatibility with MySQL.</li> </ul>"},{"location":"MatrixOne/Release-Notes/v24.1.2.0/#known-issues","title":"Known Issues","text":"<ul> <li>Vector Index works only in l2_distance.</li> <li>Only support tenant-level snapshot backup and recovery.</li> <li>Snapshot recovery requires rewriting the entire data, which consumes a lot of CPU and memory resources.</li> <li>Out-Of-Memory (OOM) issues occur with large data volumes Occasionally.</li> <li>Under high concurrency load, the system occasionally becomes unresponsive.</li> </ul>"},{"location":"MatrixOne/Release-Notes/v24.1.2.0/#full-changelog","title":"Full Changelog","text":"<p>https://github.com/matrixorigin/matrixone/compare/v1.1.0...v1.2.0</p>"},{"location":"MatrixOne/Release-Notes/v24.1.2.1/","title":"MatrixOne v24.1.2.1 Release Notes","text":"<p>Release date: June 30, 2024</p> <p>MatrixOne version: v24.1.2.1</p> <p>Compared with the previous v24.1.2.0, v24.1.2.1 doesn't introduce new features but only focuses on bug fixes and minor optimizations.</p>"},{"location":"MatrixOne/Release-Notes/v24.1.2.1/#improvements","title":"Improvements","text":"<ul> <li>Memory cache supports multiple memory allocators.  </li> <li>Optimize the performance of show accounts.  </li> <li>Optimize observability metrics for fileservice.  </li> <li>Support incremental backup.  </li> <li>Optimize TCP packet estimation.  </li> <li>Refactor mologging.  </li> <li>Support restoration of system tables.  </li> <li>Support manual merge based on zonemap.  </li> </ul>"},{"location":"MatrixOne/Release-Notes/v24.1.2.1/#bugfix","title":"Bugfix","text":"<p>Fixed bugs related to snapshot reads, MySQL compatibility, lockservice, runtime filters, and system table upgrades. For additional bug fixes, please refer to the MatrixOne-v24.1.2.1 for more details.</p>"},{"location":"MatrixOne/Release-Notes/v24.1.2.1/#full-changelog","title":"Full Changelog","text":"<p>https://github.com/matrixorigin/matrixone/compare/v1.2.0...v1.2.1</p>"},{"location":"MatrixOne/Release-Notes/v24.1.2.2/","title":"MatrixOne v24.1.2.2 Release Notes","text":"<p>Release date: July 12, 2024</p> <p>MatrixOne version: v24.1.2.2</p> <p>Compared with the previous v24.1.2.1, v24.1.2.2 doesn't introduce new features but only focuses on bug fixes and minor optimizations.</p>"},{"location":"MatrixOne/Release-Notes/v24.1.2.2/#improvements","title":"Improvements","text":"<ul> <li>Support GROUP BY 1, MAKEDATE.</li> <li>Add runtime metrics.</li> <li>Support reload auto increment cache.</li> <li>Allow loading file info asynchronously for the disk cache.</li> <li>Optimize flush and merge.</li> </ul>"},{"location":"MatrixOne/Release-Notes/v24.1.2.2/#bugfix","title":"Bugfix","text":"<p>Fixed bugs related to partition state, proxy, MySQL compatibility, lockservice, stats, and merge memory control.For additional bug fixes, please refer to the MatrixOne-v24.1.2.2 for more details.</p>"},{"location":"MatrixOne/Release-Notes/v24.1.2.2/#full-changelog","title":"Full Changelog","text":"<p>https://github.com/matrixorigin/matrixone/compare/v1.2.1...v1.2.2</p>"},{"location":"MatrixOne/Release-Notes/v24.1.2.3/","title":"MatrixOne v24.1.2.3 Release Notes","text":"<p>Release Date: September 11, 2024 MatrixOne Version: v24.1.2.3</p> <p>Compared to the previous version, v24.1.2.3 focuses on bug fixes, performance optimizations, and minor feature enhancements, without introducing major new features.</p>"},{"location":"MatrixOne/Release-Notes/v24.1.2.3/#improvements","title":"Improvements","text":"<ul> <li>Memory Optimization: Enhancements in memory usage, particularly for duplicate checks, SEMI Join, and TableScan operations.</li> <li>Enhanced Logging: Added logs for account restrictions, account suspensions, and additional operations, improving debugging and monitoring capabilities.</li> <li>Performance Enhancements: Optimized handling of LIMIT 0 queries, improved dynamic cache management, and refined query performance for JSON type ordering.</li> </ul>"},{"location":"MatrixOne/Release-Notes/v24.1.2.3/#bug-fixes","title":"Bug Fixes","text":"<p>This release addresses multiple issues related to memory usage, transaction handling, proxy connection stability, and more. These fixes improve the overall stability and reliability of MatrixOne.</p> <p>For additional bug fixes, please refer to the MatrixOne-v24.1.2.3 for more details.</p>"},{"location":"MatrixOne/Release-Notes/v24.1.2.3/#full-changelog","title":"Full Changelog","text":"<p>v24.1.2.2-v24.1.2.3</p>"},{"location":"MatrixOne/Security/Authentication/","title":"Authentication and Authorization","text":"<p>When accessing the MatrixOne database, users need to undergo authentication and authorization. Currently, MatrixOne only supports username-password authentication. The database verifies the identity of the user accessing the data, confirms whether the user can be associated with a database user, and checks the validity of the provided password.</p>"},{"location":"MatrixOne/Security/Authentication/#syntax","title":"Syntax","text":"<p>In MatrixOne, a user's login identity comprises <code>acccount_name</code>, <code>user_name</code>, <code>host</code>, and <code>password</code>. The complete syntax is as follows:</p> <pre><code>mysql -h host -p password -u accountname:username -P port\n</code></pre> <p>The <code>-h</code>, <code>-p</code>, and <code>-P</code> parameters are the same as those used in MySQL. The difference lies in:</p> <ul> <li><code>-u</code> represents the user. In MatrixOne's user system, users are a concept below the tenant <code>account</code>. Therefore, when logging in, you need to specify the tenant <code>account_name</code> first and then specify the user <code>username</code> within the tenant to complete the login. If <code>account_name</code> is not specified, the default is the system tenant <code>sys</code>.</li> </ul> <p>Example:</p> <pre><code>&gt; mysql -h 127.0.0.1 -P6001 -utenant1:u1 -p111\n</code></pre> <p>Note</p> <p>For the standalone version of MatrixOne, you can configure the connection string as parameters in the mo_ctl tool to simplify the login process.</p>"},{"location":"MatrixOne/Security/Authentication/#query-current-user","title":"Query Current User","text":"<p>After logging in, you can retrieve information about the current user using the <code>user()</code> or <code>current_user()</code> functions.</p> <pre><code>mysql&gt; select user();\n+--------------------+\n| user()             |\n+--------------------+\n| tenant1:u1@0.0.0.0 |\n+--------------------+\n1 row in set (0.00 sec)\nmysql&gt; select current_user();\n+--------------------+\n| current_user()     |\n+--------------------+\n| tenant1:u1@0.0.0.0 |\n+--------------------+\n1 row in set (0.00 sec)\n</code></pre> <p>Note</p> <p>MatrixOne currently does not support IP whitelisting. Therefore, regardless of the location you log in, the user will always be shown as 0.0.0.0.</p>"},{"location":"MatrixOne/Security/Authentication/#query-all-users","title":"Query All Users","text":"<p>Each user identity is unique, and users with the <code>accountadmin</code> role in a tenant can view all users within that tenant.</p> <pre><code>mysql&gt; select * from mo_catalog.mo_user;\n+---------+-----------+-----------+-------------------------------------------+--------+---------------------+--------------+------------+---------+-------+--------------+\n| user_id | user_host | user_name | authentication_string                     | status | created_time        | expired_time | login_type | creator | owner | default_role |\n+---------+-----------+-----------+-------------------------------------------+--------+---------------------+--------------+------------+---------+-------+--------------+\n|   10001 | localhost | u1        | *832EB84CB764129D05D498ED9CA7E5CE9B8F83EB | unlock | 2023-07-10 06:43:44 | NULL         | PASSWORD   |       0 |     0 |            1 |\n|       0 | localhost | root      | *832EB84CB764129D05D498ED9CA7E5CE9B8F83EB | unlock | 2023-07-08 03:17:27 | NULL         | PASSWORD   |       0 |     0 |            0 |\n|       1 | localhost | root      | *832EB84CB764129D05D498ED9CA7E5CE9B8F83EB | unlock | 2023-07-08 03:17:27 | NULL         | PASSWORD   |       0 |     0 |            0 |\n+---------+-----------+-----------+-------------------------------------------+--------+---------------------+--------------+------------+---------+-------+--------------+\n3 rows in set (0.01 sec)\n</code></pre> <p>Note</p> <p>The location and table structure of user records in MatrixOne differs from MySQL. In MatrixOne, user metadata is not stored in the <code>mysql.user</code> table but in the <code>mo_catalog.mo_user</code> table.</p>"},{"location":"MatrixOne/Security/Authentication/#constraints","title":"Constraints","text":"<ol> <li>MatrixOne currently does not enforce password complexity requirements. It is recommended that users set strong passwords. For password modification operations, refer to Password Management.</li> <li>The initial password for the initial user (<code>root</code> user of the <code>sys</code> tenant) in MatrixOne is 111. After users modify their passwords, they need to remember the new password. Once a password is forgotten, MatrixOne currently does not provide a means to retrieve or bypass security verification to reset the password. Reinstallation of MatrixOne is required.</li> </ol>"},{"location":"MatrixOne/Security/Security-Permission-Overview/","title":"Security and Permissions Overview","text":"<p>Database security and permissions are critical to ensuring the protection and management of a database system and the data it stores. It involves a range of strategies, measures, and permission controls to ensure that only authorized users can access, modify, and operate the database. This chapter introduces the security and permission management system of the MatrixOne database.</p>"},{"location":"MatrixOne/Security/Security-Permission-Overview/#security-management","title":"Security Management","text":"<p>MatrixOne database security aims to protect the database from unauthorized access, data leaks, data tampering, and other security threats. MatrixOne provides the following capabilities to ensure database security:</p> <ul> <li>Identity authentication and authentication: Enhance database security through identity identification, user authentication, roles, and password management.</li> <li>Access control: Restrict access to the database system and specific data objects only to authorized users using authentication and authorization mechanisms.</li> <li>Data transmission encryption: Encrypt data transmission to ensure that data cannot be intercepted, decrypted, and read during transmission.</li> <li>Audit and logging: Monitor database activities, record access, and operation logs to track abnormal behavior, and conduct audits.</li> </ul>"},{"location":"MatrixOne/Security/Security-Permission-Overview/#permission-management","title":"Permission Management","text":"<p>MatrixOne database permission management manages user access and operation permissions to the database. Implementing fine-grained permission controls ensures that each user can only perform the necessary operations and restricts access to sensitive data. MatrixOne's database permission management includes the following aspects:</p> <ul> <li>User roles and permission assignments: Assign users to different roles, each with different levels of permissions. Then associate permissions with roles to simplify permission management.</li> <li>Object-level permissions: Define user access and operation permissions for specific database objects, such as tables and views, to ensure that users can only perform operations within their authorized scope.</li> <li>Permission inheritance and control: Using inheritance mechanisms, transfer role permissions to users or other roles and control the inheritance process to ensure proper permission inheritance and management.</li> </ul>"},{"location":"MatrixOne/Security/TLS-introduction/","title":"Data Transmission Encryption","text":"<p>This document will introduce MatrixOne's support for data transmission encryption and how to enable encrypted transmission.</p>"},{"location":"MatrixOne/Security/TLS-introduction/#overview","title":"Overview","text":"<p>MatrixOne uses non-encrypted transmission by default and supports encrypted transmission based on TLS protocol. Encrypted transmission can reduce the risk of leakage of sensitive information in the database. Encrypted transmission is the process of encrypting and decrypting information using keys, which can effectively protect data security.</p> <p>Transport Layer Security (TLS) is a widely adopted security protocol. The protocol versions supported by MatrixOne include TLS 1.0, TLS 1.1, and TLS 1.2.</p> <ul> <li>Do not enable TLS encrypted transmission (default): Use the username and password to connect to MatrixOne directly.</li> <li>Use encrypted transmission: It is necessary to enable encrypted transmission support on the MatrixOne server and specify the use of encrypted transmission on the client side. You can follow the instructions in this article to enable TLS secure connections.</li> </ul>"},{"location":"MatrixOne/Security/TLS-introduction/#how-to-use","title":"How to Use","text":"<p>Main steps of TLS secure connection configuration:</p> <ol> <li> <p>First, enable TLS in MatrixOne.</p> </li> <li> <p>Then, configure the MySQL client security connection parameters.</p> </li> </ol> <p>After completing the configuration of these two main steps, a TLS secure connection can be established.</p>"},{"location":"MatrixOne/Security/TLS-introduction/#step-1-enable-matrixones-tls-support","title":"Step 1: Enable MatrixOne's TLS support","text":"<ol> <li> <p>Generate certificate and key: MatrixOne does not yet support loading a private key protected by a password, so a private key file without a password must be provided. Certificates and keys can be issued and generated using OpenSSL. It is recommended to use the tool <code>mysql_ssl_rsa_setup</code> that comes with MySQL to generate quickly:</p> <pre><code>#Check your local MySQL client installation directory\nps -ef|grep mysql\n#Go to the installation directory of your local MySQL client\ncd /usr/local/mysql/bin\n#Generate certificate and key\n./mysql_ssl_rsa_setup --datadir=&lt;yourpath&gt;\n#Check your generated pem file\nls &lt;yourpath&gt;\n\u251c\u2500\u2500 ca-key.pem\n\u251c\u2500\u2500 ca.pem\n\u251c\u2500\u2500 client-cert.pem\n\u251c\u2500\u2500 client-key.pem\n\u251c\u2500\u2500 private_key.pem\n\u251c\u2500\u2500 public_key.pem\n\u251c\u2500\u2500 server-cert.pem\n\u2514\u2500\u2500 server-key.pem\n</code></pre> <p>Note:  <code>&lt;yourpath&gt;</code> in the above code is the local directory path where you need to store the generated certificate and key files.</p> </li> <li> <p>Enter the cn.toml configuration file in your local MatrixOne file directory path matrixone/etc/launch-tae-CN-tae-TN/:</p> <p>You can also use the vim command to open the cn. toml file directly in the terminal</p> <pre><code>vim $matrixone/etc/launch-tae-CN-tae-TN/cn.toml\n</code></pre> <p>Copy and paste the code below into the configuration file:</p> <pre><code>[cn.frontend]\n#default is false. With true. Server will support tls\nenableTls = true\n\n#default is ''. Path of file that contains X509 certificate in PEM format for client\ntlsCertFile = \"&lt;yourpath&gt;/server-cert.pem\"\n\n#default is ''. Path of file that contains X509 key in PEM format for client\ntlsKeyFile = \"&lt;yourpath&gt;/server-key.pem\"\n\n#default is ''. Path of file that contains list of trusted SSL CAs for client\ntlsCaFile = \"&lt;yourpath&gt;/ca.pem\"\n</code></pre> <p>Note: <code>&lt;yourpath&gt;</code> in the above code is the local directory path where you need to store the generated certificate and key files</p> <p>In the above code, the configuration parameters are explained as follows:</p> Parameters Description enableTls Bool, enable TLS support on the MatrixOne server. tlsCertFile Specify the SSL certificate file path tlsKeyFile Specify the private key corresponding to the certificate file tlsCaFile Optional, specify the trusted CA certificate file path <p>Note: If you use Docker to install and launch MatrixOne, before modifying the configuration file, you need to mount the configuration file first and then modify it. For more information, see Mount directory to Docker container.</p> </li> <li> <p>Verify that MatrixOne's SSL is enabled.</p> <p>\u2460 Use the MySQL client to connect to MatrixOne:</p> <pre><code>mysql -h 127.0.0.1 -P 6001 -uroot -p111\n\nType 'help;' or '\\h' for help. Type '\\c' to clear the current input statement.\n</code></pre> <p>\u2461 Use the <code>Status</code> command to check whether SSL is enabled.</p> <p>Successfully enabled, the code example is as follows; you can see that the SSL status is <code>Cipher in use is TLS_AES_128_GCM_SHA256</code>:</p> <pre><code>mysql&gt; status\nmysql  Ver 8.0.28 for macos11 on arm64 (MySQL Community Server - GPL)\n\nConnection id:          1001\nCurrent database:\nCurrent user:           root@0.0.0.0\nSSL:                    Cipher in use is TLS_AES_128_GCM_SHA256\nCurrent pager:          stdout\nUsing outfile:          ''\nUsing delimiter:        ;\nServer version:         8.0.30-MatrixOne-v1.2.3 MatrixOne\nProtocol version:       10\nConnection:             127.0.0.1 via TCP/IP\nServer characterset:    utf8mb4\nDB     characterset:    utf8mb4\nClient characterset:    utf8mb4\nConn.  characterset:    utf8mb4\nTCP port:               6001\nBinary data as:         Hexadecimal\n--------------\n</code></pre> <p>If it is not enabled successfully, the returned result is as follows; you can see that the SSL status is <code>Not in use</code>; you need to recheck whether the local directory path (namely ) of the certificate and key file you configured in the above steps is correct: <pre><code>mysql&gt; status;\n/usr/local/mysql/bin/mysql  Ver 8.0.30 for macos12 on arm64 (MySQL Community Server - GPL)\n\nConnection id:      1009\nCurrent database:   test\nCurrent user:       root@0.0.0.0\nSSL:            Not in use\nCurrent pager:      stdout\nUsing outfile:      ''\nUsing delimiter:    ;\nServer version:     8.0.30-MatrixOne-v1.2.3 MatrixOne\nProtocol version:   10\nConnection:     127.0.0.1 via TCP/IP\nServer characterset:    utf8mb4\nDb     characterset:    utf8mb4\nClient characterset:    utf8mb4\nConn.  characterset:    utf8mb4\nTCP port:       6001\nBinary data as:     Hexadecimal\n--------------\n</code></pre> <p>After completing the above steps, MatrixOne's TLS is enabled.</p>"},{"location":"MatrixOne/Security/TLS-introduction/#step-2-configure-the-parameters-of-mysql-client","title":"Step 2: Configure the parameters of MySQL client","text":"<p>When a MySQL client connects to Matrix One Server, the encrypted connection behavior needs to be specified by the <code>--ssl-mode</code> parameter, such as:</p> <pre><code>mysql -h 127.0.0.1 -P 6001 -uroot -p111 --ssl-mode=PREFFERED\n</code></pre> <p>Info</p> <p>The login account in the above code snippet is the initial account; please change the initial password after logging in to MatrixOne; see Password Management.</p> <p>The value types of <code>ssl mode</code> are as follows:</p> <code>ssl-mode</code> value Description DISABLED Establish an encrypted connection without SSL/TLS, synonymous with skip-ssl. PREFFERED The default behavior is first to establish an encrypted connection using SSL/TLS; if it cannot be established, it will try to establish a non-SSL/TLS connection. REQUIRED Only SSL/TLS will be attempted to establish an encrypted connection, and if the connection cannot be established, the connection will fail. VERIFY_CA As with the REQUIRED behavior, and also verifies that the CA certificate on the Server side is valid. VERIFY_IDENTITY It acts like VERIFY_CA and verifies that the host in the server-side CA certificate is the same as the hostname for the actual connection. <p>Note</p> <p>When the client specifies <code>--ssl-mode=VERIFY_CA</code>, it needs to use <code>--ssl-ca</code> to specify the CA certificate; If <code>--ssl-mode=VERIFY_IDENTITY</code> is specified on the client, you need to specify the CA certificate. You need to use <code>--ssl-key</code> to specify the client private key and <code>--ssl-cert</code> to specify the client certificate.</p>"},{"location":"MatrixOne/Security/audit/","title":"Audit","text":""},{"location":"MatrixOne/Security/audit/#overview","title":"Overview","text":"<p>The audit function records user behaviors and major internal events in the database. After logging in to the database, it registers all users' database operations and major internal events. It is also one of the essential features of many enterprise databases.</p> <p>In daily database operation and maintenance, an audit is a very effective means to ensure that all behaviors of database users comply with the law. When important events occur in the database, such as start and stop, node breakdown, and so on., the audit content can be very convenient for tracing the behavior of the protective device library before and after the period.</p> <p>It is necessary to enable database audit when you need to effectively and completely monitor necessary service information tables or system configuration tables. For example, it monitors all user A's behaviors in the database to discover the source of data modification or deletion promptly. For the monitoring of major internal events in the database, the fault can be rectified immediately, and the root cause of the accident can be traced back.</p> <p>MatrixOne supports auditing user behavior, operation logs, and SQL statements. The audit data of MatrixOne is stored in the database table, and the audit data can be queried directly through SQL interaction.</p>"},{"location":"MatrixOne/Security/audit/#enable-audit","title":"Enable Audit","text":"<p>To enable the audit, execute the following SQL statements:</p> <pre><code>drop database if exists mo_audits;\ncreate database mo_audits;\nuse mo_audits;\ncreate view mo_user_action as select request_at,user,host,statement,status from system.statement_info where user in (select distinct user_name from mo_catalog.mo_user) and statement not like '______internal_%' order by request_at desc;\ncreate view mo_events as select timestamp,level,message from system.log_info where level in ('error','panic','fatal') order by timestamp desc;\n</code></pre>"},{"location":"MatrixOne/Security/audit/#audit-query","title":"Audit Query","text":"<p>To audit user behaviors, execute the following SQL statement:</p> <pre><code>mysql&gt; select * from mo_audits.mo_user_action;\n</code></pre> <p>The example query result as below:</p> <pre><code>+----------------------------+------+---------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+---------+\n| request_at                 | user | host    | statement                                                                                                                                                                                                                                      | status  |\n+----------------------------+------+---------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+---------+\n| 2023-02-10 19:54:28.831970 | root | 0.0.0.0 | create view mo_user_action as select request_at, user, host, statement, status from system.statement_info where user in (select distinct user_name from mo_catalog.mo_user) and statement not like \"______internal_%\" order by request_at desc | Success |\n| 2023-02-10 19:54:14.079939 | root | 0.0.0.0 | show tables                                                                                                                                                                                                                                    | Success |\n| 2023-02-10 19:54:14.076260 | root | 0.0.0.0 | show databases                                                                                                                                                                                                                                 | Success |\n| 2023-02-10 19:54:14.071728 | root | 0.0.0.0 | use mo_audits                                                                                                                                                                                                                                  | Success |\n| 2023-02-10 19:54:14.071108 | root | 0.0.0.0 | select database()                                                                                                                                                                                                                              | Success |\n| 2023-02-10 19:54:01.007241 | root | 0.0.0.0 | create database mo_audits                                                                                                                                                                                                                      | Success |\n| 2023-02-10 19:53:48.924819 | root | 0.0.0.0 | drop database if exists mo_audits                                                                                                                                                                                                              | Success |\n| 2023-02-10 19:30:59.668646 | root | 0.0.0.0 | show triggers                                                                                                                                                                                                                                  | Success |\n| 2023-02-10 19:30:53.438212 | root | 0.0.0.0 | show locks                                                                                                                                                                                                                                     | Success |\n| 2023-02-10 19:30:44.258894 | root | 0.0.0.0 | show index from t                                                                                                                                                                                                                              | Success |\n| 2023-02-10 19:30:43.662063 | root | 0.0.0.0 | create table t (a int, b int, c int, primary key (a))                                                                                                                                                                                          | Success |\n| 2023-02-10 19:30:23.104830 | root | 0.0.0.0 | show triggers                                                                                                                                                                                                                                  | Success |\n| 2023-02-10 19:30:20.062010 | root | 0.0.0.0 | show tables                                                                                                                                                                                                                                    | Success |\n| 2023-02-10 19:30:20.060324 | root | 0.0.0.0 | show databases                                                                                                                                                                                                                                 | Success |\n| 2023-02-10 19:30:20.055515 | root | 0.0.0.0 | use aab                                                                                                                                                                                                                                        | Success |\n| 2023-02-10 19:30:20.055186 | root | 0.0.0.0 | select database()                                                                                                                                                                                                                              | Success |\n| 2023-02-10 19:30:17.152087 | root | 0.0.0.0 | create database aab                                                                                                                                                                                                                            | Success |\n| 2023-02-10 19:30:10.621294 | root | 0.0.0.0 | create aab                                                                                                                                                                                                                                     | Failed  |\n| 2023-02-10 19:29:59.983433 | root | 0.0.0.0 | show databases                                                                                                                                                                                                                                 | Success |\n| 2023-02-10 19:29:45.370956 | root | 0.0.0.0 | show index from t                                                                                                                                                                                                                              | Failed  |\n| 2023-02-10 19:29:44.875580 | root | 0.0.0.0 | create table t (a int, b int, c int, primary key (a))                                                                                                                                                                                          | Failed  |\n| 2023-02-10 19:29:44.859588 | root | 0.0.0.0 | drop table if exists t                                                                                                                                                                                                                         | Success |\n| 2023-02-10 19:29:19.974775 | root | 0.0.0.0 | show index                                                                                                                                                                                                                                     | Failed  |\n| 2023-02-10 19:29:11.188286 | root | 0.0.0.0 | show locks                                                                                                                                                                                                                                     | Success |\n| 2023-02-10 19:29:06.618778 | root | 0.0.0.0 | show node list                                                                                                                                                                                                                                 | Success |\n| 2023-02-10 19:19:11.319058 | root | 0.0.0.0 | show triggers                                                                                                                                                                                                                                  | Failed  |\n| 2023-02-10 19:19:06.809302 | root | 0.0.0.0 | show databases                                                                                                                                                                                                                                 | Success |\n| 2023-02-10 19:18:52.840282 | root | 0.0.0.0 | show triggers                                                                                                                                                                                                                                  | Failed  |\n| 2023-02-10 10:54:09.892254 | root | 0.0.0.0 | show databases                                                                                                                                                                                                                                 | Success |\n| 2023-02-10 10:54:04.468721 | root | 0.0.0.0 | select @@version_comment limit 1                                                                                                                                                                                                               | Success |\n+----------------------------+------+---------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+---------+\n30 rows in set (0.81 sec)\n</code></pre> <p>Query database internal status change query, execute the following SQL statement to view:</p> <pre><code>mysql&gt; select * from mo_events;\n</code></pre> <p>The example query result as below:</p> <pre><code>|\n| 2022-10-18 15:26:20.293735 | error | error: timeout, converted to code|\n| 2022-10-18 15:26:20.293725 | error | failed to propose initial cluster info|\n| 2022-10-18 15:26:20.288695 | error | failed to set initial cluster info|\n| 2022-10-18 15:26:20.288559 | error | failed to propose initial cluster info|\n| 2022-10-18 15:26:20.285384 | error | failed to set initial cluster info|\n| 2022-10-18 15:26:20.285235 | error | failed to propose initial cluster info|\n| 2022-10-18 15:26:18.473472 | error | failed to join the gossip group, 1 error occurred:\n    * Failed to join 127.0.0.1:32022: dial tcp 127.0.0.1:32022: connect: connection refused|\n| 2022-10-18 15:26:18.469029 | error | failed to join the gossip group, 1 error occurred:\n    * Failed to join 127.0.0.1:32012: dial tcp 127.0.0.1:32012: connect: connection refused       \n</code></pre>"},{"location":"MatrixOne/Security/audit/#disable-audit","title":"Disable Audit","text":"<p>To disable the audit, execute the following SQL statement:</p> <pre><code>&gt; drop database if exists mo_audits;\n</code></pre>"},{"location":"MatrixOne/Security/password-mgmt/","title":"MatrixOne Password Management","text":"<p>To protect the security of user passwords, MatrixOne supports password management capabilities:</p> <ul> <li>Password complexity strategy: Requires users to set strong passwords to prevent empty or weak passwords.</li> </ul>"},{"location":"MatrixOne/Security/password-mgmt/#password-complexity-strategy","title":"Password Complexity Strategy","text":"<p>MatrixOne recommends that users set complex passwords to ensure account security.</p> <ul> <li>Suggested complexity: uppercase letters, lowercase letters, numbers, and special symbols.</li> <li>Recommended length: no less than 12 characters.</li> </ul>"},{"location":"MatrixOne/Security/password-mgmt/#modify-password-permissions","title":"Modify Password Permissions","text":"<ul> <li>System Administrator (i.e., the root user): Has the highest authority. Can modify the password of the root user itself and the password of Accounts created by the root user.</li> <li>Accounts: Have authority second only to the system administrator. They can modify their own password and the password of ordinary users created by the Account.</li> <li>Other ordinary users: Can only modify their own passwords.</li> </ul> <p>For more information about permission levels, see Privilege Control Types.</p>"},{"location":"MatrixOne/Security/password-mgmt/#tutorial-of-password-changing","title":"Tutorial of Password Changing","text":""},{"location":"MatrixOne/Security/password-mgmt/#root-user-changing-password","title":"Root User Changing Password","text":""},{"location":"MatrixOne/Security/password-mgmt/#root-user-changing-their-own-password","title":"Root User Changing their own Password","text":"<p>After starting MatrixOne and successfully logging in with the root, you can use the following command to change the password:</p> <pre><code>mysql&gt; alter user root identified by '${your password}'\n</code></pre> <p>After the change is completed, you can go ahead and exit the current session and log into MatrixOne again for the new password to take effect.</p> <p>Note</p> <p>Since the root account is the user with the highest authority by default, please log in with the initial account password and change the password in time.</p>"},{"location":"MatrixOne/Security/password-mgmt/#root-changing-accounts-password","title":"Root Changing Account's Password","text":"<p>Refer to ALTER ACCOUNT</p>"},{"location":"MatrixOne/Security/password-mgmt/#other-users-changing-password","title":"Other Users Changing Password","text":""},{"location":"MatrixOne/Security/password-mgmt/#account-changing-their-own-password","title":"Account Changing their own Password","text":"<p>Refer to ALTER ACCOUNT</p>"},{"location":"MatrixOne/Security/password-mgmt/#account-changing-the-password-of-other-users-they-created","title":"Account Changing The Password Of Other Users They Created","text":"<p>Refer to ALTER USER</p>"},{"location":"MatrixOne/Security/password-mgmt/#ordinary-user-changing-their-own-password","title":"Ordinary User Changing their own Password","text":"<p>Refer to ALTER USER</p>"},{"location":"MatrixOne/Security/how-tos/quick-start-create-account/","title":"Create accounts, Verify Resource Isolation","text":"<p>When initializing access to the MatrixOne cluster, the system will automatically generate a default cluster administrator. The cluster administrator is automatically granted the authority to manage accounts by default, but cannot manage resources under the account.</p> <p>This document will guide you to use the cluster administrator to create two new accounts, grant the permissions of the accountadmin, and check whether the resource isolation between accounts is implemented.</p>"},{"location":"MatrixOne/Security/how-tos/quick-start-create-account/#before-you-start","title":"Before you start","text":"<ul> <li>MatrixOne cluster has been depolyed and connected.</li> <li>You have obtained the cluster administrator user name and password (The default user name and password are root and 111 respectively).</li> </ul>"},{"location":"MatrixOne/Security/how-tos/quick-start-create-account/#steps","title":"Steps","text":"<ol> <li> <p>Log into MatrixOne with the cluster administrator's username (root by default) and password:</p> <pre><code>mysql -h 127.0.0.1 -P 6001 -u root -p\n</code></pre> </li> <li> <p>Create a new account:</p> <ul> <li>The login username and password of account a1 are: admin1, test123</li> <li>The login username and password of account a2 are: admin2, test456</li> </ul> <pre><code>create account a1 ADMIN_NAME 'admin1' IDENTIFIED BY 'test123';\ncreate account a2 ADMIN_NAME 'admin2' IDENTIFIED BY 'test456';\n</code></pre> </li> <li> <p>Use admin1 to log in to account a1, and create data table db1.t1:</p> <pre><code>mysql -h 127.0.0.1 -P 6001 -u a1:admin1 -p\ncreate database db1;\ncreate table db1.t1(c1 int,c2 varchar);\ninsert into db1.t1 values (1,'shanghai'),(2,'beijing');\n</code></pre> <p>Use the following command to verify whether the table was created successfully for account a1:</p> <pre><code>mysql&gt; select * from db1.t1;\n+------+----------+\n| c1   | c2       |\n+------+----------+\n|    1 | shanghai |\n|    2 | beijing  |\n+------+----------+\n2 rows in set (0.01 sec)\n</code></pre> </li> <li> <p>Login to account a2 using admin2:</p> <pre><code>mysql -h 127.0.0.1 -P 6001 -u a2:admin2 -p\n</code></pre> <p>Check db1.t1 data in account a1:</p> <pre><code>mysql&gt; select * from db1.t1;\nERROR 1064 (HY000): SQL parser error: table \"t1\" does not exist\n</code></pre> <p>The above command runs an error, which proves that the database db1 in the account a1 cannot be seen in the account a2:</p> </li> <li> <p>The database db1 and table db1.t1 can also be created in the account a2:</p> <pre><code>mysql&gt; create database db1;\nQuery OK, 0 rows affected (0.03 sec)\n\nmysql&gt; create table db1.t1(c1 int,c2 varchar);\nQuery OK, 0 rows affected (0.05 sec)\n\nmysql&gt; insert into db1.t1 values (3,'guangzhou');\nQuery OK, 1 row affected (0.05 sec)\n</code></pre> <p>Insert different data into table db1.t1 of account a2 from table db1.t1 in account a1 and check:</p> <pre><code>mysql&gt; insert into db1.t1 values (3,'guangzhou');\nQuery OK, 1 row affected (0.05 sec)\n\nmysql&gt; select * from db1.t1;\n+------+-----------+\n| c1   | c2        |\n+------+-----------+\n|    3 | guangzhou |\n+------+-----------+\n1 row in set (0.01 sec)\n</code></pre> <p>It can be seen that even though the database and table in account a1 have the same name, the two databases and tables do not interfere with each other and are completely isolated.</p> </li> </ol>"},{"location":"MatrixOne/Security/how-tos/quick-start-create-user/","title":"Create a new account, use the new account, creates users, create roles, and grant the privilege","text":"<p>When initializing access to the MatrixOne cluster, the system will automatically generate a default account, which is the cluster administrator. The default user name of the cluster administrator is root. root is both a cluster administrator and a system account administrator. root can create and manage other common accounts (non-system account administrators).</p> <p>This document will guide you through creating a new account, switching to the new account to log in, using the new account account to create users, creating roles, creating permissions, and granting user privileges.</p>"},{"location":"MatrixOne/Security/how-tos/quick-start-create-user/#before-you-start","title":"Before you start","text":"<ul> <li>MatrixOne cluster has been depolyed and connected.</li> <li>You have obtained the cluster administrator user name and password (The default user name and password are root and 111 respectively).</li> </ul>"},{"location":"MatrixOne/Security/how-tos/quick-start-create-user/#steps","title":"Steps","text":""},{"location":"MatrixOne/Security/how-tos/quick-start-create-user/#step-1-create-a-new-account","title":"Step 1: Create a new account","text":"<ol> <li> <p>Log into MatrixOne with the cluster administrator's username (root by default) and password:</p> <pre><code>mysql -h 127.0.0.1 -P 6001 -u root -p\n</code></pre> </li> <li> <p>Create a new account a1; the username and password of account a1 are: admin, test123:</p> <pre><code>create account a1 ADMIN_NAME 'admin' IDENTIFIED BY 'test123';\n</code></pre> <p>Check all accounts information in the cluster (only root can view):</p> <pre><code>mysql&gt; select * from mo_catalog.mo_account;\n+------------+--------------+--------+---------------------+----------------+----------------+\n| account_id | account_name | status | created_time        | comments       | suspended_time |\n+------------+--------------+--------+---------------------+----------------+----------------+\n|          1 | a1           | open   | 2022-12-19 14:47:19 |                | NULL           |\n|          0 | sys          | open   | 2022-12-07 11:00:58 | system account | NULL           |\n+------------+--------------+--------+---------------------+----------------+----------------+\n</code></pre> </li> </ol>"},{"location":"MatrixOne/Security/how-tos/quick-start-create-user/#step-2-log-in-to-the-new-account-account-create-users-create-roles-and-grant-the-privilege","title":"Step 2: Log in to the new account account, create users, create roles and grant the privilege","text":"<ol> <li> <p>You can reopen a new session with admin login to account a1:</p> <pre><code>mysql -h 127.0.0.1 -P 6001 -u a1:admin -p\n</code></pre> </li> <li> <p>Now you can check the default users and roles under the account as a1:</p> <pre><code>mysql&gt; select * from mo_catalog.mo_role;\n+---------+--------------+---------+-------+---------------------+----------+\n| role_id | role_name    | creator | owner | created_time        | comments |\n+---------+--------------+---------+-------+---------------------+----------+\n|       2 | accountadmin |       0 |     0 | 2022-12-19 14:47:20 |          |\n|       1 | public       |       0 |     0 | 2022-12-19 14:47:20 |          |\n+---------+--------------+---------+-------+---------------------+----------+\n2 rows in set (0.01 sec)\n\nmysql&gt; select * from mo_catalog.mo_user;\n+---------+-----------+-----------+-----------------------+--------+---------------------+--------------+------------+---------+-------+--------------+\n| user_id | user_host | user_name | authentication_string | status | created_time        | expired_time | login_type | creator | owner | default_role |\n+---------+-----------+-----------+-----------------------+--------+---------------------+--------------+------------+---------+-------+--------------+\n|       2 | localhost | admin     | test123               | unlock | 2022-12-19 14:47:20 | NULL         | PASSWORD   |       0 |     0 |            2 |\n+---------+-----------+-----------+-----------------------+--------+---------------------+--------------+------------+---------+-------+--------------+\n1 row in set (0.00 sec)\n</code></pre> <p>After account a1 is successfully created, it has account administrator privileges by default so that you can view the system table information under account a1. In the mo_user table, it can be observed that there is currently a user account named admin, which is specified when creating a account; in addition, there are two default roles, accountadmin and public:</p> <ul> <li>accountadmin has the highest authority of the account, and the account named admin is granted by default;</li> <li>The system will authorize the public role for each new ordinary user by default, and the initial permission of the public role is <code>connect</code>, that is, to connect to MatrixOne.</li> </ul> <p>In addition, you can also view the privilege sets of these default roles in the system table:</p> <pre><code>mysql&gt; select * from mo_catalog.mo_role_privs;\n+---------+--------------+----------+--------+--------------+--------------------+-----------------+-------------------+---------------------+-------------------+\n| role_id | role_name    | obj_type | obj_id | privilege_id | privilege_name     | privilege_level | operation_user_id | granted_time        | with_grant_option |\n+---------+--------------+----------+--------+--------------+--------------------+-----------------+-------------------+---------------------+-------------------+\n|       2 | accountadmin | account  |      0 |            3 | create user        | *               |                 0 | 2022-12-19 14:47:20 | true              |\n|       2 | accountadmin | account  |      0 |            4 | drop user          | *               |                 0 | 2022-12-19 14:47:20 | true              |\n|       2 | accountadmin | account  |      0 |            5 | alter user         | *               |                 0 | 2022-12-19 14:47:20 | true              |\n|       2 | accountadmin | account  |      0 |            6 | create role        | *               |                 0 | 2022-12-19 14:47:20 | true              |\n|       2 | accountadmin | account  |      0 |            7 | drop role          | *               |                 0 | 2022-12-19 14:47:20 | true              |\n|       2 | accountadmin | account  |      0 |            9 | create database    | *               |                 0 | 2022-12-19 14:47:20 | true              |\n|       2 | accountadmin | account  |      0 |           10 | drop database      | *               |                 0 | 2022-12-19 14:47:20 | true              |\n|       2 | accountadmin | account  |      0 |           11 | show databases     | *               |                 0 | 2022-12-19 14:47:20 | true              |\n|       2 | accountadmin | account  |      0 |           12 | connect            | *               |                 0 | 2022-12-19 14:47:20 | true              |\n|       2 | accountadmin | account  |      0 |           13 | manage grants      | *               |                 0 | 2022-12-19 14:47:20 | true              |\n|       2 | accountadmin | account  |      0 |           14 | account all        | *               |                 0 | 2022-12-19 14:47:20 | true              |\n|       2 | accountadmin | database |      0 |           18 | show tables        | *               |                 0 | 2022-12-19 14:47:20 | true              |\n|       2 | accountadmin | database |      0 |           20 | create table       | *               |                 0 | 2022-12-19 14:47:20 | true              |\n|       2 | accountadmin | database |      0 |           23 | drop table         | *               |                 0 | 2022-12-19 14:47:20 | true              |\n|       2 | accountadmin | database |      0 |           26 | alter table        | *               |                 0 | 2022-12-19 14:47:20 | true              |\n|       2 | accountadmin | database |      0 |           21 | create view        | *               |                 0 | 2022-12-19 14:47:20 | true              |\n|       2 | accountadmin | database |      0 |           24 | drop view          | *               |                 0 | 2022-12-19 14:47:20 | true              |\n|       2 | accountadmin | database |      0 |           27 | alter view         | *               |                 0 | 2022-12-19 14:47:20 | true              |\n|       2 | accountadmin | database |      0 |           28 | database all       | *               |                 0 | 2022-12-19 14:47:20 | true              |\n|       2 | accountadmin | database |      0 |           29 | database ownership | *               |                 0 | 2022-12-19 14:47:20 | true              |\n|       2 | accountadmin | table    |      0 |           30 | select             | *.*             |                 0 | 2022-12-19 14:47:20 | true              |\n|       2 | accountadmin | table    |      0 |           31 | insert             | *.*             |                 0 | 2022-12-19 14:47:20 | true              |\n|       2 | accountadmin | table    |      0 |           32 | update             | *.*             |                 0 | 2022-12-19 14:47:20 | true              |\n|       2 | accountadmin | table    |      0 |           33 | truncate           | *.*             |                 0 | 2022-12-19 14:47:20 | true              |\n|       2 | accountadmin | table    |      0 |           34 | delete             | *.*             |                 0 | 2022-12-19 14:47:20 | true              |\n|       2 | accountadmin | table    |      0 |           35 | reference          | *.*             |                 0 | 2022-12-19 14:47:20 | true              |\n|       2 | accountadmin | table    |      0 |           36 | index              | *.*             |                 0 | 2022-12-19 14:47:20 | true              |\n|       2 | accountadmin | table    |      0 |           37 | table all          | *.*             |                 0 | 2022-12-19 14:47:20 | true              |\n|       2 | accountadmin | table    |      0 |           38 | table ownership    | *.*             |                 0 | 2022-12-19 14:47:20 | true              |\n|       2 | accountadmin | table    |      0 |           41 | values             | t               |                 0 | 2022-12-19 14:47:20 | true              |\n|       1 | public       | account  |      0 |           12 | connect            | *               |                 0 | 2022-12-19 14:47:20 | true              |\n+---------+--------------+----------+--------+--------------+--------------------+-----------------+-------------------+---------------------+-------------------+\n</code></pre> </li> <li> <p>In account a1, create a new user and role:</p> <ul> <li>Username and password for user u1 are: u1, user123</li> <li>Username and password for user u2 are: u2, user456</li> <li>Role r1 is named: r1</li> <li>Role r2 is named: r2</li> </ul> <pre><code>create user u1 identified by 'user123';\ncreate user u2 identified by 'user456';\ncreate role r1;\ncreate role r2;\n</code></pre> </li> <li> <p>Create database db1 and create table t1 in db1:</p> <pre><code>create database db1;\ncreate table db1.t1(c1 int,c2 varchar);\n</code></pre> </li> <li> <p>Grant <code>select</code> privilege on db1.t1 to r1 and <code>insert</code> privilege to r2:</p> <pre><code>grant select on table db1.t1 to r1;\ngrant insert on table db1.t1 to r2;\n</code></pre> </li> <li> <p>Grant role r1 to user u1; grant role r2 to user u2:</p> <pre><code>grant r1 to u1;\ngrant r2 to u2;\n</code></pre> <p>At this point, the newly created user, role, and object permission relationship is shown in the following figure:</p> <p></p> </li> </ol>"},{"location":"MatrixOne/Security/how-tos/quick-start-create-user/#step-3-verify-the-privilege-is-valid","title":"Step 3: Verify the privilege is valid","text":"<p>Log in to account a1 with users u1 and u2, respectively, to verify that the privileges are in effect.</p> <p>Since u2 has been granted the r2 role, and r2 has been granted the <code>insert</code> privilege of db1.t1, so u2 has the <code>insert</code> privilege of db1.t1, that is, db1.t1 insert data.</p> <p>Use u1 to log into a1 to verify that the privilege is valid:</p> <pre><code>mysql -h 127.0.0.1 -P 6001 -u a1:u2:r2 -p\n\nmysql&gt; insert into db1.t1 values (1,'shanghai'),(2,'beijing');\nQuery OK, 2 rows affected (0.04 sec)\n\nmysql&gt; select * from db1.t1;\nERROR 20101 (HY000): internal error: do not have privilege to execute the statement\n</code></pre> <p>u2 can successfully insert data into the table db1.t1, but cannot view the data in the table db1.t1.</p> <p>Similarly, you can use u1 to log in to a1 for privilege verification:</p> <pre><code>mysql -h 127.0.0.1 -P 6001 -u a1:u1:r1 -p\n\nmysql&gt; select * from db1.t1;\n+------+----------+\n| c1   | c2       |\n+------+----------+\n|    1 | shanghai |\n|    2 | beijing  |\n+------+----------+\n2 rows in set (0.01 sec)\n\nmysql&gt; insert into db1.t1 values (3,'guangzhou');\nERROR 20101 (HY000): internal error: do not have privilege to execute the statement\n</code></pre> <p>As shown in the above code, u1 can successfully query the data of table db1.t1, but cannot insert data into it.</p> <p>Note</p> <p>For more information about system tables, see MatrixOne System Database and Tables</p>"},{"location":"MatrixOne/Security/how-tos/user-guide/","title":"Privileges Management Overview","text":""},{"location":"MatrixOne/Security/how-tos/user-guide/#manage-account","title":"Manage Account","text":"<ul> <li>Prerequisites: Account management is only possible with a cluster administrator (the default account is the root).</li> </ul> <p>The roles and permissions corresponding to the root are shown in the following table:</p> Username Explanation Role Privilege Description root Cluster administrator MOADMIN Create, edit, delete accounts Automatically generated and granted after cluster creation root System account administrator MOADMIN Manage all resources under the system account, including users, roles, databases/tables/views, authorization management Automatically generated and granted after the cluster is created"},{"location":"MatrixOne/Security/how-tos/user-guide/#create-account","title":"Create Account","text":"<p>SQL Statement</p> <pre><code>create account &lt;account_name&gt; admin_name='&lt;user_name&gt;' identified by '&lt;password&gt;';\n</code></pre> <p>Parameter Description</p> Parameter Description account_name account name user_name The administrator username of the newly created account, which will be automatically granted the highest privilege role of the account, namely <code>ACCOUNTADMIN</code> password Newly created account administrator password <p>For more information, see CREATE ACCOUNT.</p>"},{"location":"MatrixOne/Security/how-tos/user-guide/#select-account","title":"Select Account","text":"<p>SQL Statement</p> <pre><code>select * from mo_catalog.mo_account;\n</code></pre>"},{"location":"MatrixOne/Security/how-tos/user-guide/#delect-account","title":"Delect Account","text":"<p>SQL Statement</p> <pre><code>drop account if exists &lt;account_name&gt;;\n</code></pre> <p>Parameter Description</p> Parameter Description account_name The name of the account to be deleted <p>Note</p> <p>After the account is deleted, it cannot be restored, including all data under the account account. Please use it with caution.</p> <p>For more information, see DROP ACCOUNT.</p>"},{"location":"MatrixOne/Security/how-tos/user-guide/#manage-user","title":"Manage User","text":""},{"location":"MatrixOne/Security/how-tos/user-guide/#create-user","title":"Create User","text":"<ul> <li> <p>Prerequisites: Has the <code>CREATE USER</code> privilege.</p> <p>\u00b7 The default role with this privilege is <code>MOADMIN</code> or <code>ACCOUNTADMIN</code>: the cluster administrator (the default account is root), and the tenant administrator created by the cluster administrator has the privilege by default.</p> </li> <li> <p>Introduction: Create a username and password for a user in the current account.</p> </li> </ul> <p>SQL Statement</p> <pre><code>create user &lt;user_name&gt; identified by '&lt;password&gt;';\n</code></pre> <p>Parameter Description</p> Parameter Description user_name The name of a new user password The password of a new user <p>For more information, see CREATE USER.</p>"},{"location":"MatrixOne/Security/how-tos/user-guide/#view-user","title":"View User","text":"<ul> <li> <p>Prerequisites: Has the privilege to view users.</p> <p>\u00b7 The default role with this privilege is <code>MOADMIN</code> or <code>ACCOUNTADMIN</code>: the cluster administrator (the default account is root), and the tenant administrator created by the cluster administrator has the privilege by default.</p> </li> <li> <p>Introduction: View all the users in the current account.</p> </li> </ul> <p>SQL Statement</p> <pre><code>select * from mo_catalog.mo_user;\n</code></pre>"},{"location":"MatrixOne/Security/how-tos/user-guide/#delete-user","title":"Delete User","text":"<ul> <li> <p>Prerequisites: Has the <code>DROP USER</code> privilege.</p> <p>\u00b7 The default role with this privilege is <code>MOADMIN</code> or <code>ACCOUNTADMIN</code>: the cluster administrator (the default account is root), and the tenant administrator created by the cluster administrator has the privilege by default.</p> </li> <li> <p>Introduction: Delete the specified user in the current account.</p> </li> </ul> <p>SQL Statement</p> <pre><code>drop user if exist &lt;user_name&gt;;\n</code></pre> <p>Parameter Description</p> Parameter Description user_name The name of the user to be deleted <p>Note</p> <p>When deleting a user, you need to stop the user's current session first, otherwise the deletion will fail.</p> <p>For more information, see DROP USER.</p>"},{"location":"MatrixOne/Security/how-tos/user-guide/#manage-role","title":"Manage Role","text":""},{"location":"MatrixOne/Security/how-tos/user-guide/#create-role","title":"Create Role","text":"<ul> <li> <p>Prerequisites: Has the <code>CREATE ROLE</code> privilege.</p> <p>\u00b7 The default role with this privilege is <code>MOADMIN</code> or <code>ACCOUNTADMIN</code>: the cluster administrator (the default account is root), and the tenant administrator created by the cluster administrator has the privilege by default.</p> </li> <li> <p>Introduction: Create a custom role in the current account.</p> </li> </ul> <p>SQL Statement</p> <pre><code>create role &lt;role_name&gt;;\n</code></pre> <p>Parameter Description</p> Parameter Description role_name The name of a new role <p>For more information, see CREATE ROLE.</p>"},{"location":"MatrixOne/Security/how-tos/user-guide/#view-role","title":"View Role","text":"<ul> <li> <p>Prerequisites: Has the privilege to view role.</p> <p>\u00b7 The default role with this privilege is <code>MOADMIN</code> or <code>ACCOUNTADMIN</code>: the cluster administrator (the default account is root), and the tenant administrator created by the cluster administrator has the privilege by default.</p> </li> <li> <p>Introduction: View all the roles in the current account.</p> </li> </ul> <p>SQL Statement</p> <pre><code>select * from mo_catalog.mo_role;\n</code></pre>"},{"location":"MatrixOne/Security/how-tos/user-guide/#switch-role","title":"Switch Role","text":"<ul> <li> <p>Prerequisites: Has the <code>SET ROLE</code> privilege. By default, all users have this privilege.</p> </li> <li> <p>Introduction: Switch the role of the user in the account, and obtain the privilege of the secondary role to execute the corresponding SQL.</p> </li> </ul> <p>SQL Statement</p> <pre><code>set role &lt;role_name&gt;;\n</code></pre> <p>Parameter Description</p> Parameter Description role_name The name of the role to be switched <p>For more information, see SET ROLE.</p>"},{"location":"MatrixOne/Security/how-tos/user-guide/#delete-role","title":"Delete Role","text":"<ul> <li> <p>Prerequisites: Has the <code>DROP ROLE</code> privilege.</p> <p>\u00b7 The default role with this privilege is <code>MOADMIN</code> or <code>ACCOUNTADMIN</code>: the cluster administrator (the default account is root), and the tenant administrator created by the cluster administrator has the privilege by default.</p> </li> <li> <p>Introduction: Delete the specified role in the current account.</p> </li> </ul> <p>SQL Statement</p> <pre><code>drop role if exists &lt;role_name&gt;;\n</code></pre> <p>Parameter Description</p> Parameter Description role_name The name of the role to be deleted <p>Note</p> <p>When deleting a specified role, the roles of authorized users will be recovered simultaneously.</p> <p>For more information, see DROP ROLE.</p>"},{"location":"MatrixOne/Security/how-tos/user-guide/#manage-privilege","title":"Manage Privilege","text":""},{"location":"MatrixOne/Security/how-tos/user-guide/#grant-an-object-privilege-to-a-role","title":"Grant an object privilege to a role","text":"<ul> <li> <p>Prerequisites: Has the <code>MANAGE GRANTS</code> privilege.</p> <p>\u00b7 The default role with this privilege is <code>MOADMIN</code> or <code>ACCOUNTADMIN</code>: the cluster administrator (the default account is root), and the tenant administrator created by the cluster administrator has the privilege by default.</p> </li> <li> <p>Introduction: Grant an object privilege to a role.</p> </li> </ul> <p>SQL Statement</p> <pre><code>grant &lt;privilege&gt; on &lt;object_type&gt; &lt;object_name&gt; to &lt;role_name&gt;\n</code></pre> <p>Parameter Description</p> Parameter Description privilege Privilege Name object_type The type of object object_name The name of object role_name The name of the role which is granted <p>For more information, see GRANT.</p>"},{"location":"MatrixOne/Security/how-tos/user-guide/#grant-certain-kind-of-object-privileges-to-a-role","title":"Grant certain kind of object privileges to a role","text":"<ul> <li> <p>Prerequisites: Has the <code>MANAGE GRANTS</code> privilege.</p> <p>\u00b7 The default role with this privilege is <code>MOADMIN</code> or <code>ACCOUNTADMIN</code>: the cluster administrator (the default account is root), and the tenant administrator created by the cluster administrator has the privilege by default.</p> </li> <li> <p>Introduction: Grant the privilege on all databases/tables to a role.</p> </li> </ul> <p>SQL Statement</p> <pre><code>grant &lt;privilege&gt; on database * to &lt;role_name&gt;;\ngrant &lt;privilege&gt; on table *.* to &lt;role_name&gt;;\n</code></pre> <p>Parameter Description</p> Parameter Description privilege Privilege Name role_name The name of the role which is granted <p>Note</p> <p>Although this operation is relatively simple when authorizing multiple objects of the same category, it is also prone to permission leakage, so please use it with caution.</p> <p>For more information, see GRANT.</p>"},{"location":"MatrixOne/Security/how-tos/user-guide/#grant-a-role-to-a-user","title":"Grant a role to a user","text":"<ul> <li> <p>Prerequisites: Has the <code>MANAGE GRANTS</code> privilege.</p> <p>\u00b7 The default role with this privilege is <code>MOADMIN</code> or <code>ACCOUNTADMIN</code>: the cluster administrator (the default account is root), and the tenant administrator created by the cluster administrator has the privilege by default.</p> </li> <li> <p>Introduction: Grant a role to a user.</p> </li> </ul> <p>SQL Statement</p> <pre><code>grant &lt;role_name&gt; to &lt;user_name&gt;;\n</code></pre> <p>Parameter Description</p> Parameter Description role_name The name of the role which is granted user_name The name of the user which is granted <p>For more information, see GRANT.</p>"},{"location":"MatrixOne/Security/how-tos/user-guide/#one-role-inherit-the-privileges-of-another-role","title":"One role inherit the privileges of another role","text":"<ul> <li> <p>Prerequisites: Has the <code>MANAGE GRANTS</code> privilege.</p> <p>\u00b7 The default role with this privilege is <code>MOADMIN</code> or <code>ACCOUNTADMIN</code>: the cluster administrator (the default account is root), and the tenant administrator created by the cluster administrator has the privilege by default.</p> </li> <li> <p>Introduction: Let role_b inherit all privileges of role_a.</p> </li> </ul> <p>SQL Statement</p> <pre><code>grant &lt;role_a&gt; to &lt;role_b&gt;;\n</code></pre> <p>Note</p> <p>The permissions are inherited dynamically. If the permissions of role_a change, the permissions inherited by role_b will also change dynamically. MatrixOne does not allow role ring inheritance; that is, role1 inherits role2, role2 inherits role3, but  role3 can not inherits role1.</p> <p>For more information, see GRANT ROLE.</p>"},{"location":"MatrixOne/Security/how-tos/user-guide/#show-the-privilege-of-user","title":"Show the privilege of user","text":"<ul> <li> <p>Prerequisites: Has the <code>SHOW GRANTS</code> privilege.</p> <p>\u00b7 The default role with this privilege is <code>MOADMIN</code> or <code>ACCOUNTADMIN</code>: the cluster administrator (the default account is root), and the tenant administrator created by the cluster administrator has the privilege by default.</p> </li> <li> <p>Introduction: Show all privileges currently owned by the specified user.</p> </li> </ul> <p>SQL Statement</p> <pre><code>show grants for &lt;user_name&gt;@&lt;localhost&gt;\n</code></pre> <p>Parameter Description</p> Parameter Description user_name The name of user which is granted. <p>For more information, see SHOW GRANTS.</p>"},{"location":"MatrixOne/Security/how-tos/user-guide/#revoke-the-role-of-user","title":"Revoke the role of user","text":"<ul> <li> <p>Prerequisites: Has the <code>REVOKE</code> privilege.</p> <p>\u00b7 The default role with this privilege is <code>MOADMIN</code> or <code>ACCOUNTADMIN</code>: the cluster administrator (the default account is root), and the tenant administrator created by the cluster administrator has the privilege by default.</p> </li> <li> <p>Introduction: Remove a role from a user.</p> </li> </ul> <p>SQL Statement</p> <pre><code>revoke &lt;role_name&gt; from &lt;user_name&gt;\n</code></pre> <p>Parameter Description</p> Parameter Description role_name The name of role which is granted. user_name The name of user which is granted. <p>For more information, see REVOKE.</p>"},{"location":"MatrixOne/Security/how-tos/user-guide/#revoke-privilege-of-roles","title":"Revoke privilege of roles","text":"<ul> <li> <p>Prerequisites: Has the <code>REVOKE</code> privilege.</p> <p>\u00b7 The default role with this privilege is <code>MOADMIN</code> or <code>ACCOUNTADMIN</code>: the cluster administrator (the default account is root), and the tenant administrator created by the cluster administrator has the privilege by default.</p> </li> <li> <p>Introduction: Revoke privileges on an object in a role.</p> </li> </ul> <p>SQL Statement</p> <pre><code>revoke &lt;privilege&gt; on &lt;object_type&gt; &lt;object_name&gt; to &lt;role_name&gt;;\n</code></pre> <p>Parameter Description</p> Parameter Description privilege Privilege object_type The type of the object object_name The name of the object role_name A role that needs to be granted <p>For more information, see REVOKE.</p>"},{"location":"MatrixOne/Security/role-priviledge-management/about-privilege-management/","title":"Privilege Management Overview","text":"<p>MatrixOne privilege management helps you manage accounts and users' life cycles, assign users complementary roles, and control access rights to resources in MatrixOne. When there are multiple users in a database or cluster unit, privilege management ensures that users only access authorized help, and granting users the principle of least authority can reduce enterprise information security risks. MatrixOne can also implement multi-account solutions through rights management. In MatrixOne, the data or resources owned by each account in the cluster are safely isolated, and users across cluster units cannot access the help of other cluster units. Only users authorized to access resources in the cluster have the right to access this A resource within a cluster unit.</p>"},{"location":"MatrixOne/Security/role-priviledge-management/about-privilege-management/#privilege-management-features","title":"Privilege Management Features","text":"<p>MatrixOne's privilege management is designed and implemented by combining two security models: RBAC (Role-based access control) and discretionary access control (DAC, Discretionary access control). These two security models are neutral access. The control mechanism mainly revolves around role and authority authorization strategies. It not only ensures data access security but also provides flexible and convenient management methods for database operation and maintenance personnel.</p> <ul> <li>Role-Based Access Control (RBAC): assign privileges to roles, and then assign roles to users.</li> </ul> <p></p> <ul> <li>Discretionary Access Control (DAC): Every object has an owner who can set and grant access privileges to that object.</li> </ul> <p></p>"},{"location":"MatrixOne/Security/role-priviledge-management/about-privilege-management/#key-concepts","title":"Key Concepts","text":""},{"location":"MatrixOne/Security/role-priviledge-management/about-privilege-management/#object","title":"Object","text":"<p>In MatrixOne, the privileges are encapsulated in an entity, which is objectto facilitate the management of multiple operation privileges.</p> <p>For example, operation privileges such as <code>Select</code>, <code>Insert</code>, and <code>Update</code> is encapsulated in the Table object. For more information about object privileges, please refer to MatrixOne Privilege Control Types.</p>"},{"location":"MatrixOne/Security/role-priviledge-management/about-privilege-management/#relationship-between-objects","title":"Relationship between objects","text":"<p>As shown in the diagram below: from above, higher-level objects can create (or delete) lower-level objects.</p> <p></p> <p>The hierarchical relationships in the above figure are all 1:n relationships; that is, multiple accounts can be created in one cluster, multiple users and roles can be created under one account, and multiple tables and views can be created in one database.</p> <p>In MatrixOne, although the operation privileges in each object are independent of each other (for example, the <code>SHOW TABLES</code> privilege in the Database object is not directly related to the <code>SELECT</code> privilege in the Table object), the creation of objects still has Certain associations, for example, the <code>CREAT TABLE</code> privilege in the Database object can create Table objects, which forms a hierarchical relationship between objects,</p> <p>Then, since high-level objects can create low-level objects, the higher-level objects are object creators (Owner).</p>"},{"location":"MatrixOne/Security/role-priviledge-management/about-privilege-management/#object-creators-owner","title":"Object creators (Owner)","text":"<p>When an object is created, the creator is the object's owner, who has the highest authority to manage the object (that is, Ownership authority, which is all the authority encapsulated in the object). The owner's operation authority sets all operations on the object.</p> <p>For example, the Table object has <code>Select</code>, <code>Insert</code>, <code>Update</code>, <code>Delete</code>, <code>Truncate</code>, and <code>Ownership</code> privileges; if a role has the Ownership privilege of a certain Table, then the role is equivalent to having <code>Select</code>, <code>Insert</code>, <code>Update</code>, <code>Delete</code>, <code>Truncate</code> privileges.</p> <p>Due to the transitivity between privileges, roles, and users, you can understand the creator of an object (starting now referred to as the object owner) as a role.</p> <p>How to understand that the creator of an object is a role?</p> <p>A user can have multiple roles at the same time. For example, User A has three roles: Role 1, Role 2, and Role 3. Each role has different privileges, as shown in the following figure, to help you quickly understand this behavior:</p> <p></p> <p>If User A is currently using Role 1, User A needs to create a new User B, but the current Role 1 does not have privilege to create new users. Role 2 has the authorization to create new users, then User A needs to switch to the Role 2 role and create a new user. Then, the Owner of New User B is Role 2, and other roles, Role 1 and Role 3, cannot have the ownership of User B.</p> <p>Owner points to the object</p> <ul> <li> <p>An object's Owner is a role, and the object's original Owner is the role that created it.</p> </li> <li> <p>There is only one Owner of an object at any time.</p> </li> <li> <p>A role can create multiple objects so that a role can be the Owner of multiple objects.</p> </li> <li> <p>A role is an object, so a role also has an Owner.</p> </li> <li> <p>When the Owner of an object is deleted, the Owner of the object will be automatically changed to the Owner of the deleted role.</p> </li> <li> <p>The owner can be transferred to another role.</p> </li> </ul> <p>Note: ACCOUNTADMIN (account administrator role, automatically generated after the account is created) is not the Owner of the objects used in the account. Still, it has the Ownership privilege of all objects.</p>"},{"location":"MatrixOne/Security/role-priviledge-management/about-privilege-management/#cluste","title":"Cluste","text":"<p>The cluster is the highest-level object in MatrixOne privileges management.</p> <p>Tip: The collection of operational privileges on cluster objects is called system privileges.</p>"},{"location":"MatrixOne/Security/role-priviledge-management/about-privilege-management/#account","title":"Account","text":"<p>In the MatrixOne cluster, multiple accounts with completely isolated data and user authority systems can be created and managed, and these resource-isolated accounts can be managed. This multi-account function not only saves the cost of deploying and operating multiple sets of data business systems but also can take advantage of sharing hardware resources between accounts to save machine costs to the greatest extent.</p>"},{"location":"MatrixOne/Security/role-priviledge-management/about-privilege-management/#system-account","title":"System Account","text":"<p>To be compatible with the usage habits of traditional non-multi-account databases, MatrixOne will automatically create a new system default account after the cluster is created, that is, Sys Account. If you only have one set of data business systems that need to be managed by MatrixOne, there is no need to create more accounts, log in and access the Sys Account directly.</p>"},{"location":"MatrixOne/Security/role-priviledge-management/about-privilege-management/#role","title":"Role","text":"<p>A role is also an object used to manage and grant privileges in MatrixOne.</p> <p>First of all, you need to have a high-privilege account first to do some initial resource allocation; for example, create some roles and users by Sys Account or Account, grant object privileges to the role, and then grant the role to the user, at this time, the user can operate on the object. It needs to be granted to a user. In a account, the user cannot perform any operations if a user is not granted a role.</p> <p>Role is set up to save the operation cost of granting the same authority. The three privileges p1, p2, and p3 must be granted to users u1, u2, and u3. You only need to grant p1, p2, and p3 to role r1 first, then grant role r1 to users u1, u2, and u3 simultaneously. It is easier to operate than granting each privilege to each user separately, and this advantage will become more obvious as the number of users and privileges increases. At the same time, the emergence of roles further abstracts the privilege set and its relationship, which is also very convenient for later privilege maintenance.</p> <p>After the cluster and account (Account) are created, MatrixOne will automatically create some default roles and users (see the Initialization Access section below for details); these roles have the highest management authority and are used to manage the cluster and account at the beginning ( Account), we do not recommend that you grant these roles to users who execute SQL daily. Excessive privileges will introduce more security issues. Therefore, MatrixOne supports the creation of custom roles. You can customize roles according to the user's business needs and assign appropriate privileges to these roles.</p> <p>Highlights</p> <p>In MatrixOne, the behavior details of roles are as follows:</p> <ul> <li>A role can be granted multiple privileges.</li> <li>A role can be granted to multiple users.</li> <li> <p>A role can pass its privileges to another role.</p> <ul> <li>Use all the privileges of a role to another role; for example, pass all the privileges of role1 to role2, then role2 inherits the privileges of role1,</li> </ul> </li> <li> <p>Roles and users only take effect within their respective Account, including the Sys Account.</p> </li> </ul> <p>Note</p> <ol> <li>The privilege inheritance of roles is dynamic. If the privileges of the inherited role change, the scope of privileges inherited by the inherited role will also change dynamically.</li> <li>The inheritance relationship of roles cannot form a loop. For example, role1 inherits role2, role 2 inherits role3, and role3 inherits role1.</li> <li>The transfer of privileges between roles makes privilege management more convenient, but it also has risks. For this reason, MatrixOne only allows roles with Manage Grants privilege to do this kind of operation. This privilege is granted to the system default role MOADMIN by default or ACCOUNTADMIN, and it is not recommended to grant this privilege to a custom role when creating a new one.</li> </ol>"},{"location":"MatrixOne/Security/role-priviledge-management/about-privilege-management/#role-switching","title":"Role Switching","text":"<p>A user is granted multiple roles to perform different types of data services.</p> <p>Main role: The user can only use one of the roles at a particular moment; we call the currently used role main role.</p> <p>Secondary role: In addition to the main role, the set of other roles owned by the user is called the secondary role.</p> <p>By default, if a user wants to execute SQL with another role's privilege, he needs to switch roles first (Use SQL as <code>set role &lt;role&gt;</code>). In addition, to be compatible with the privilege behavior of classic databases, MatrixOne also supports the function of using secondary roles: use <code>set secondary role all</code>; after executing this SQL, the user can have the privileges of all his roles at the same time, execute <code>set secondary role none</code> to turn off this feature.</p>"},{"location":"MatrixOne/Security/role-priviledge-management/about-privilege-management/#application-scenarios","title":"Application scenarios","text":""},{"location":"MatrixOne/Security/role-priviledge-management/about-privilege-management/#resource-isolation-scenarios-introduction","title":"Resource Isolation Scenarios Introduction","text":"<p>Company A purchased a MatrixOne cluster and completed the deployment. Since Company A has a large scale, many complex business lines, and a huge amount of data, it wants to develop an application for a certain business line, assuming it is named BusinessApp. Still, it needs to be isolated from the data of other business lines. So how does MatrxiOne isolate these data resources and authority resources?</p> <p>After completing the deployment of the MatrixOne cluster, Tom of the R&amp;D department obtained the account of the cluster administrator, and the company assigned him to complete the task of resource isolation. Tom needs to do this:</p> <ol> <li>Tom logs into MatrixOne with the cluster administrator account.</li> <li> <p>Tom needs to create two accounts first, one is BusinessAccount and the other is ElseAccount.</p> <ul> <li>The data resources within BusinessAccount are mainly used to develop the application BusinessApp.</li> <li>Data resources within ElseAccount may be used for other business purposes.</li> </ul> </li> </ol> <p>For the specific operation of resource isolation, please refer to Quick Start: Create accounts, Verify Resource Isolation.</p>"},{"location":"MatrixOne/Security/role-priviledge-management/about-privilege-management/#introduction-to-user-creation-and-authorization-scenarios","title":"Introduction to User Creation and Authorization Scenarios","text":"<p>Still using the above scenario example, Tom gives the account account BusinessAccount to the company's data administrator Robert, and asks Robert to assign new user accounts and privileges to other R&amp;D colleagues.</p> <p>R&amp;D colleague Joe is the application developer of this company. A project BusinessApp, Joe has a development task, and Joe needs to use all the data in the database. Then Robert will help Joe open an account and authorize Joe:</p> <ol> <li>Robert first creates a user account (i.e., user) for Joe, named Joe_G, and Joe uses Joe_G to log in to MatrixOne.</li> <li>Robert creates another role for Joe, named Appdeveloper, and assigns the Appdeveloper role to Joe's user account Joe_G.</li> <li>Robert grants the ALL ON DATABASE permission to the role Appdeveloper.</li> <li>Joe can use the account Joe_G to log in to MatrixOne, and has full authority to operate the database for development.</li> </ol> <p>For specific user creation and authorization operations, see Quick start: Create a new account, use the new account, creates users, create roles, and grant the privilege.</p>"},{"location":"MatrixOne/Security/role-priviledge-management/about-privilege-management/#initialize-access","title":"Initialize Access","text":"<p>After initializing the cluster or account, the system will automatically generate some default users and default roles:</p> Username Explanation Role Privilege Description root Cluster administrator MOADMIN Create, edit, delete accounts Automatically generated and granted after cluster creation root System account administrator MOADMIN Manage all resources under the system account, including users, roles, databases/tables/views, authorization management Automatically generated and granted after the cluster is created account administrator ACCOUNTADMIN Manage all resources under common accounts, including users, roles, databases/tables/views, and authorization management Accounts are automatically generated and granted after they are created All users Ordinary users PUBLIC Connect to MatrixOne After all users are created, they are automatically granted the PUBLIC role"},{"location":"MatrixOne/Security/role-priviledge-management/about-privilege-management/#quick-start","title":"Quick Start","text":"<ul> <li>Quick Start: Create accounts, Verify Resource Isolation</li> <li>Quick start: Create a new account, use the new account, creates users, create roles, and grant the privilege</li> <li>Typical Application Scenarios</li> </ul>"},{"location":"MatrixOne/Security/role-priviledge-management/app-scenarios/","title":"Privilege Management Scenario","text":""},{"location":"MatrixOne/Security/role-priviledge-management/app-scenarios/#scenario-overview","title":"Scenario overview","text":"<ul> <li> <p>If your company has deployed a MatrixOne cluster after the deployment, a cluster administrator will automatically exist when the cluster is initialized. If you like, contact the project manager or sales representative of MatrixOne to get the account information and initial password. Using the cluster administrator, you can create a new account, manage the life cycle of the account, and assign the account account password to the corresponding person in charge of your company. For more information on how to manage accounts, see Quick Start: Create accounts, Verify Resource Isolation or Privilege Management Operation Guide.</p> </li> <li> <p>If your enterprise only needs to use MatrixOne cluster account resources, after the deployment is complete, the MatrixOne cluster administrator will help you open an account administrator account. Please contact the MatrixOne project manager or sales representative for the account information and initial password. Using the account administrator account, you can create new users, manage user lifecycles and resources in the account (users, roles, and permissions), and assign user account passwords to the corresponding persons in charge of your company. For more information on how to manage accounts, see Quick Start: Create accounts, Verify Resource Isolation or Privilege Management Operation Guide.</p> </li> </ul>"},{"location":"MatrixOne/Security/role-priviledge-management/app-scenarios/#scenario-1-create-a-new-data-administrator-and-grant-the-privilege","title":"Scenario 1: Create a new data administrator and grant the privilege","text":""},{"location":"MatrixOne/Security/role-priviledge-management/app-scenarios/#scenario-introduction","title":"Scenario Introduction","text":"<p>In practical application scenarios, it is necessary to set up a data administrator position responsible for managing the allocation of resources in the entire database. For example, other company members need to be assigned a user account, password, and role and be granted minimum Usage rights.</p>"},{"location":"MatrixOne/Security/role-priviledge-management/app-scenarios/#before-you-start","title":"Before you start","text":"<ul> <li> <p>You first need to have an account of account Administrator.</p> </li> <li> <p>Already connected to the MatrixOne cluster.</p> </li> </ul>"},{"location":"MatrixOne/Security/role-priviledge-management/app-scenarios/#solution","title":"Solution","text":"<p>Create a data administrator role and grant him global management permissions within the account; then, you need to do the following:</p> <ul> <li>Create a new user, username: dbauser; password: 123456.</li> <li>Assign a data administrator role to this user, and the role is named: dba.</li> <li>This role requires the following permissions:<ul> <li>Own all permissions of the account object: With this permission, the data administrator can create new users and new roles and assign permissions to other users.</li> <li>Own all permissions of database objects: With this permission, the data administrator can create, edit, and delete databases.</li> <li>Own all permissions of the table object: With this permission, the data administrator can create, edit, and delete data tables.</li> </ul> </li> </ul>"},{"location":"MatrixOne/Security/role-priviledge-management/app-scenarios/#steps","title":"Steps","text":""},{"location":"MatrixOne/Security/role-priviledge-management/app-scenarios/#step-1-use-the-account-administrator-to-create-the-database-administrator","title":"Step 1: Use the account administrator to create the database administrator","text":"<ol> <li> <p>Log in to the account with the account administrator account:</p> <p>Note: The account administrator account account1 here is an example; you can customize it when creating an account administrator.</p> <pre><code>mysql -h 127.0.0.1 -P 6001 -u account1:admin:admin -p\n</code></pre> </li> <li> <p>Create a user and named dbauser with a password of 123456:</p> <pre><code>create user dbauser identified by \"123456\";\n</code></pre> </li> <li> <p>Create a data administrator role named dba:</p> <pre><code>create role dba;\n</code></pre> </li> <li> <p>Grant the privilege to the role the following permissions:</p> <ul> <li>Full permissions on the account object</li> <li>Full permissions on database objects</li> <li>Full permissions on the table object</li> </ul> <pre><code>grant all on account * to dba with grant option;\ngrant all on database * to dba with grant option;\ngrant all on table *.* to dba with grant option;\n</code></pre> </li> <li> <p>Grant role dba to user dbauser:</p> <pre><code>grant dba to dbauser;\n</code></pre> </li> <li> <p>Check the privilege using the following command:</p> <pre><code>show grants for dbauser@localhost;\n</code></pre> </li> </ol>"},{"location":"MatrixOne/Security/role-priviledge-management/app-scenarios/#step-2-use-the-data-administrator-to-log-and-test","title":"Step 2: Use the data administrator to log and test","text":"<ol> <li> <p>Log into MatrixOne with the data administrator account dbauser:</p> <pre><code>mysql -h 127.0.0.1 -P 6001 -u account1:dbauser:dba -p\n</code></pre> </li> <li> <p>Check the privileges of dbauser:</p> <pre><code>show grants for dbauser@localhost;\n</code></pre> </li> <li> <p>Check the role of dbauser:</p> <pre><code>SET SECONDARY ROLE ALL;\nuse mo_catalog;\nselect mu.user_name,mr.role_name from mo_role mr,mo_user mu,mo_user_grant mug where mu.user_id=mug.user_id and mr.role_id=mug.role_id and mu.user_name='dbauser';\n</code></pre> </li> <li> <p>Create a database to verify the privilege is valid:</p> <pre><code>drop database if exists test;\ncreate database test;\nuse test;\ncreate table t1(a int);\ninsert into t1 values(1),(2),(3);\nselect * from t1;\n</code></pre> </li> <li> <p>The above code indicates that the verification is successful.</p> </li> </ol>"},{"location":"MatrixOne/Security/role-priviledge-management/app-scenarios/#scenario-2-application-system-goes-online","title":"Scenario 2: Application System Goes Online","text":""},{"location":"MatrixOne/Security/role-priviledge-management/app-scenarios/#scenario-introduction_1","title":"Scenario Introduction","text":"<p>When the application system goes online, a new database and corresponding database user will be created according to the usage requirements of the application system, and this user will be granted all permissions of the target database.</p>"},{"location":"MatrixOne/Security/role-priviledge-management/app-scenarios/#before-you-start_1","title":"Before you start","text":"<ul> <li> <p>You first need to have an account of account administrator (or you, as a user, already have full privileges to create new users and authorize new user the database objects).</p> </li> <li> <p>Already connected to the MatrixOne cluster.</p> </li> </ul>"},{"location":"MatrixOne/Security/role-priviledge-management/app-scenarios/#solution_1","title":"Solution","text":"<ul> <li> <p>Requirement 1: The application system requires a new database dedicated to application development.</p> <ul> <li>Solution: Create a new database named appdb.</li> </ul> </li> <li> <p>Requirement 2: The application system requires a dedicated role.</p> <ul> <li>Solution: Create a new database role, named approle, and grant all database privileges to this role.</li> </ul> </li> <li> <p>Requirement 3: The application system requires a dedicated person to manage the database.</p> <ul> <li>Solution: Create a new database user, named appuser, and authorize the role to this user.</li> </ul> </li> </ul>"},{"location":"MatrixOne/Security/role-priviledge-management/app-scenarios/#steps_1","title":"Steps","text":""},{"location":"MatrixOne/Security/role-priviledge-management/app-scenarios/#step-1-the-account-administrator-creates-and-authorizes-the-database-user","title":"Step 1: The account administrator creates and authorizes the database user","text":"<ol> <li> <p>Log in to the account with the account administrator:</p> <p>Note: The account administrator account account1 here is an example; you can customize it when creating an account administrator.</p> <pre><code>mysql -h 127.0.0.1 -P 6001 -u account1:admin:admin -p\n</code></pre> </li> <li> <p>To create the database required by the application, name the database appdb :</p> <pre><code>create database appdb;\n</code></pre> </li> <li> <p>Create a role named approle and grant this role full privilege to database appdb :</p> <pre><code>create role approle;\ngrant all on database appdb to approle;\ngrant all on table appdb.* to approle;\n</code></pre> </li> <li> <p>Create user appuser with password 123456 and grant the role approle to appuser :</p> <pre><code>create user appuser identified by \"123456\" default role approle;\n</code></pre> </li> </ol>"},{"location":"MatrixOne/Security/role-priviledge-management/app-scenarios/#step-2-use-the-data-user-to-log-in-and-test","title":"Step 2: Use the data user to log in and test","text":"<ol> <li> <p>Log into MatrixOne with the data user appuser:</p> <pre><code>mysql -h127.0.0.1 -utest:appuser -P6001 -p123456\n</code></pre> </li> <li> <p>Verify the privileges of the data user appuser:</p> <pre><code>set secondary role all;\nuse appdb;\ncreate table t1(a int);\ninsert into t1 values(1),(2),(3);\nselect * from t1;\ndrop table t1;\n</code></pre> </li> <li> <p>The above code indicates that the verification is successful.</p> </li> </ol>"},{"location":"MatrixOne/Security/role-priviledge-management/best-practice/","title":"Best Practices","text":"<p>The following are typical roles and recommended minimum permissions in MatrixOne for you to reference.</p>"},{"location":"MatrixOne/Security/role-priviledge-management/best-practice/#engineer-responsible-for-database-resource-user-role-permission-management","title":"Engineer responsible for database resource (user, role, permission) management","text":"<p>Database Administrator</p> <ul> <li>Main job functions: manage all configuration information in the tenant, user permissions, backup and recovery, performance tuning, troubleshooting</li> <li>Reference grant role: the default administrator role accountadmin generated when creating a tenant.</li> <li>Refer to granting permissions: user management (<code>CREATE USER</code>, <code>ALTER USER</code>, <code>DROP USER</code>), authority management (<code>MANAGE GRANTS</code>)</li> </ul>"},{"location":"MatrixOne/Security/role-priviledge-management/best-practice/#engineer-responsible-for-data-management","title":"Engineer responsible for data management","text":"<p>Data Operation and Maintenance Engineer</p> <ul> <li>Main job function: manage all data and metadata information in the tenant, and authorize data permissions</li> <li>Refer to Granting Permissions: Tenant-Level Data Management (<code>ALL ON ACCOUNT</code>)</li> </ul> <p>App Developer</p> <ul> <li>Main job function: operate specific databases under the development environment tenant, and have read-only permission from the system tenant</li> <li>Refer to grant permissions: database level data management (<code>ALL ON DATABASE</code>), system database read-only (<code>SELECT ON DATABASE</code>)</li> </ul> <p>Application System Management Engineer</p> <ul> <li>Main job function: operate specific databases under the production environment tenant</li> <li>Refer to Granting Permissions: Data Management at the Database Level (<code>ALL ON DATABASE</code>)</li> </ul> <p>System Monitoring Engineer</p> <ul> <li>Main job function: monitor all system statistics and error messages under the tenant</li> <li>Refer to grant permissions: read-only permissions for all system databases (<code>SELECT ON DATABASE</code>)</li> </ul>"},{"location":"MatrixOne/Test/performance-testing/SSB-test-with-matrixone/","title":"Complete a SSB Test with MatrixOne","text":"<p>The Star Schema Benchmark(SSB)Test is a popular scenario for OLAP database performance test. By going through this tutorial, you'll learn how to complete a SSB Test with MatrixOne.</p>"},{"location":"MatrixOne/Test/performance-testing/SSB-test-with-matrixone/#before-you-start","title":"Before you start","text":"<p>Make sure you have already Deployed standalone MatrixOne.</p>"},{"location":"MatrixOne/Test/performance-testing/SSB-test-with-matrixone/#1-compile-dbgen","title":"1. Compile dbgen","text":"<pre><code>git clone git@github.com:vadimtk/ssb-dbgen.git\ncd ssb-dbgen\nmake\n</code></pre> <p>Note</p> <p>Compile dbgen on a PC with M1 chip. See Deployment FAQs.</p>"},{"location":"MatrixOne/Test/performance-testing/SSB-test-with-matrixone/#2-generate-data","title":"2. Generate data","text":""},{"location":"MatrixOne/Test/performance-testing/SSB-test-with-matrixone/#option-1-generate-the-single-table-dataset","title":"Option 1: Generate the single table dataset","text":"<p>With -s 1 dbgen generates 6 million rows (670MB), while while -s 10 it generates 60 million rows (which takes some time)</p> <pre><code>./dbgen -s 1 -T c\n./dbgen -s 1 -T l\n./dbgen -s 1 -T p\n./dbgen -s 1 -T s\n./dbgen -s 1 -T d\n</code></pre>"},{"location":"MatrixOne/Test/performance-testing/SSB-test-with-matrixone/#option-2-download-the-large-wide-table-dataset","title":"Option 2: Download the large wide table dataset","text":"<p>We have also prepared a 1GB large wide table dataset for downloading. You can get the data files directly:</p> <pre><code>https://community-shared-data-1308875761.cos.ap-beijing.myqcloud.com/lineorder_flat.tar.bz2\n</code></pre>"},{"location":"MatrixOne/Test/performance-testing/SSB-test-with-matrixone/#3-create-tables-in-matrixone","title":"3. Create tables in MatrixOne","text":"<pre><code>create database if not exists ssb;\nuse ssb;\n\ndrop table if exists lineorder;\ndrop table if exists part;\ndrop table if exists supplier;\ndrop table if exists customer;\ndrop table if exists date;\ndrop table if exists lineorder_flat;\n\ncreate table lineorder (\n        lo_orderkey bigint,\n        lo_linenumber int,\n        lo_custkey int,\n        lo_partkey int,\n        lo_suppkey int,\n        lo_orderdate date,\n        lo_orderpriority char (15),\n        lo_shippriority tinyint,\n        lo_quantity double,\n        lo_extendedprice double,\n        lo_ordtotalprice double,\n        lo_discount double,\n        lo_revenue double,\n        lo_supplycost double,\n        lo_tax double,\n        lo_commitdate date,\n        lo_shipmode char (10)\n) ;\n\ncreate table part (\n        p_partkey int,\n        p_name varchar (22),\n        p_mfgr char (6),\n        p_category char (7),\n        p_brand char (9),\n        p_color varchar (11),\n        p_type varchar (25),\n        p_size int,\n        p_container char (10)\n) ;\n\ncreate table supplier (\n        s_suppkey int,\n        s_name char (25),\n        s_address varchar (25),\n        s_city char (10),\n        s_nation char (15),\n        s_region char (12),\n        s_phone char (15)\n) ;\n\ncreate table customer (\n        c_custkey int,\n        c_name varchar (25),\n        c_address varchar (25),\n        c_city char (10),\n        c_nation char (15),\n        c_region char (12),\n        c_phone char (15),\n        c_mktsegment char (10)\n) ;\n\ncreate table date (\n        d_datekey date,\n        d_date char (18),\n        d_dayofweek char (9),\n        d_month char (9),\n        d_year int,\n        d_yearmonthnum int,\n        d_yearmonth char (7),\n        d_daynuminweek varchar(12),\n        d_daynuminmonth int,\n        d_daynuminyear int,\n        d_monthnuminyear int,\n        d_weeknuminyear int,\n        d_sellingseason varchar (12),\n        d_lastdayinweekfl varchar (1),\n        d_lastdayinmonthfl varchar (1),\n        d_holidayfl varchar (1),\n        d_weekdayfl varchar (1)\n) ;\n\nCREATE TABLE lineorder_flat(\n  LO_ORDERKEY bigint key,\n  LO_LINENUMBER int,\n  LO_CUSTKEY int,\n  LO_PARTKEY int,\n  LO_SUPPKEY int,\n  LO_ORDERDATE date,\n  LO_ORDERPRIORITY char(15),\n  LO_SHIPPRIORITY tinyint,\n  LO_QUANTITY double,\n  LO_EXTENDEDPRICE double,\n  LO_ORDTOTALPRICE double,\n  LO_DISCOUNT double,\n  LO_REVENUE int unsigned,\n  LO_SUPPLYCOST int unsigned,\n  LO_TAX double,\n  LO_COMMITDATE date,\n  LO_SHIPMODE char(10),\n  C_NAME varchar(25),\n  C_ADDRESS varchar(25),\n  C_CITY char(10),\n  C_NATION char(15),\n  C_REGION char(12),\n  C_PHONE char(15),\n  C_MKTSEGMENT char(10),\n  S_NAME char(25),\n  S_ADDRESS varchar(25),\n  S_CITY char(10),\n  S_NATION char(15),\n  S_REGION char(12),\n  S_PHONE char(15),\n  P_NAME varchar(22),\n  P_MFGR char(6),\n  P_CATEGORY char(7),\n  P_BRAND char(9),\n  P_COLOR varchar(11),\n  P_TYPE varchar(25),\n  P_SIZE int,\n  P_CONTAINER char(10)\n);\n</code></pre>"},{"location":"MatrixOne/Test/performance-testing/SSB-test-with-matrixone/#4-load-data-into-the-created-tables","title":"4. Load data into the created tables","text":""},{"location":"MatrixOne/Test/performance-testing/SSB-test-with-matrixone/#option-1-load-the-sigle-table-dataset-into-related-tables-with-this-command-in-matrixone","title":"Option 1: Load the sigle table dataset into related tables with this command in MatrixOne","text":"<pre><code>load data infile '/ssb-dbgen-path/supplier.tbl' into table supplier FIELDS TERMINATED BY ',' OPTIONALLY ENCLOSED BY '\"' LINES TERMINATED BY '\\n';\n\nload data infile '/ssb-dbgen-path/customer.tbl' into table customer FIELDS TERMINATED BY ',' OPTIONALLY ENCLOSED BY '\"' LINES TERMINATED BY '\\n';\n\nload data infile '/ssb-dbgen-path/date.tbl' into table date FIELDS TERMINATED BY ',' OPTIONALLY ENCLOSED BY '\"' LINES TERMINATED BY '\\n';\n\nload data infile '/ssb-dbgen-path/part.tbl' into table part FIELDS TERMINATED BY ',' OPTIONALLY ENCLOSED BY '\"' LINES TERMINATED BY '\\n';\n\nload data infile '/ssb-dbgen-path/lineorder.tbl' into table lineorder FIELDS TERMINATED BY ',' OPTIONALLY ENCLOSED BY '\"' LINES TERMINATED BY '\\n';\n</code></pre> <p>Then you can query data in MatrixOne with the created table.</p>"},{"location":"MatrixOne/Test/performance-testing/SSB-test-with-matrixone/#option-2-load-the-large-wide-table-dataset-into-the-lineorder_flat","title":"Option 2: Load the large wide table dataset into the lineorder_flat","text":"<pre><code>load data infile '/ssb-dbgen-path/lineorder_flat.tbl' into table lineorder_flat FIELDS TERMINATED BY ',' OPTIONALLY ENCLOSED BY '\"' LINES TERMINATED BY '\\n';\n</code></pre>"},{"location":"MatrixOne/Test/performance-testing/SSB-test-with-matrixone/#5-run-ssb-queries","title":"5. Run SSB Queries","text":""},{"location":"MatrixOne/Test/performance-testing/SSB-test-with-matrixone/#flat-table-queries","title":"Flat table queries","text":"<pre><code>--Q1.1\nSELECT sum(LO_EXTENDEDPRICE * LO_DISCOUNT) AS revenue FROM lineorder_flat WHERE year(LO_ORDERDATE)=1993 AND LO_DISCOUNT BETWEEN 1 AND 3 AND LO_QUANTITY &lt; 25;\n\n--Q1.2\nSELECT sum(LO_EXTENDEDPRICE * LO_DISCOUNT) AS revenue FROM lineorder_flat WHERE year(LO_ORDERDATE)=1994 AND LO_DISCOUNT BETWEEN 4 AND 6 AND LO_QUANTITY BETWEEN 26 AND 35;\n\n--Q1.3\nSELECT sum(LO_EXTENDEDPRICE * LO_DISCOUNT) AS revenue FROM lineorder_flat WHERE year(LO_ORDERDATE)=1994 AND LO_DISCOUNT BETWEEN 5 AND 7 AND LO_QUANTITY BETWEEN 26 AND 35;\n\n--Q2.1\nSELECT sum(LO_REVENUE),year(LO_ORDERDATE) AS year,P_BRAND FROM lineorder_flat WHERE P_CATEGORY = 'MFGR#12' AND S_REGION = 'AMERICA' GROUP BY year, P_BRAND ORDER BY year,P_BRAND;\n\n--Q2.2\nSELECT sum(LO_REVENUE), year(LO_ORDERDATE) AS year, P_BRAND FROM lineorder_flat WHERE P_BRAND BETWEEN 'MFGR#2221' AND 'MFGR#2228' AND S_REGION = 'ASIA' GROUP BY year, P_BRAND ORDER BY year, P_BRAND;\n\n--Q2.3\nSELECT sum(LO_REVENUE), year(LO_ORDERDATE) AS year, P_BRAND FROM lineorder_flat WHERE P_BRAND = 'MFGR#2239' AND S_REGION = 'EUROPE' GROUP BY year, P_BRAND ORDER BY year, P_BRAND;\n\n--Q3.1\nSELECT C_NATION, S_NATION, year(LO_ORDERDATE) AS year, sum(LO_REVENUE) AS revenue FROM lineorder_flat WHERE C_REGION = 'ASIA' AND S_REGION = 'ASIA' AND year(LO_ORDERDATE)  between 1992 AND 1997 GROUP BY C_NATION, S_NATION, year(LO_ORDERDATE) ORDER BY year asc, revenue desc;\n\n--Q3.2\nSELECT C_CITY, S_CITY, year(LO_ORDERDATE) AS year, sum(LO_REVENUE) AS revenue FROM lineorder_flat WHERE C_NATION = 'CHINA' AND S_NATION = 'CHINA' AND year(LO_ORDERDATE)  between 1992 AND 1997 GROUP BY C_CITY, S_CITY, year(LO_ORDERDATE)  ORDER BY year asc, revenue desc;\n\n--Q3.3\nSELECT C_CITY, S_CITY, year(LO_ORDERDATE) AS year, sum(LO_REVENUE) AS revenue FROM lineorder_flat WHERE (C_CITY = 'UNITED KI0' OR C_CITY = 'UNITED KI7') AND (S_CITY = 'UNITED KI0' OR S_CITY = 'UNITED KI7') AND year(LO_ORDERDATE)  between 1992 AND 1997 GROUP BY C_CITY, S_CITY, year(LO_ORDERDATE) ORDER BY year asc, revenue desc;\n\n--Q3.4\nSELECT C_CITY, S_CITY, year(LO_ORDERDATE) AS year, sum(LO_REVENUE) AS revenue FROM lineorder_flat WHERE (C_CITY = 'UNITED KI0' OR C_CITY = 'UNITED KI7') AND (S_CITY = 'MOZAMBIQU1' OR S_CITY = 'KENYA    4') AND year(LO_ORDERDATE)= 1997 GROUP BY C_CITY, S_CITY, year(LO_ORDERDATE) ORDER BY year asc, revenue desc;\n\n--Q4.1\nSELECT year(LO_ORDERDATE) AS year, C_NATION, sum(LO_REVENUE - LO_SUPPLYCOST) AS profit FROM lineorder_flat WHERE C_REGION = 'AMERICA' AND S_REGION = 'AMERICA' AND (P_MFGR = 'MFGR#1' OR P_MFGR = 'MFGR#2') GROUP BY year(LO_ORDERDATE), C_NATION ORDER BY year, C_NATION;\n\n--Q4.2\nSELECT year(LO_ORDERDATE) AS year, S_NATION, P_CATEGORY, sum(LO_REVENUE - LO_SUPPLYCOST) AS profit FROM lineorder_flat WHERE C_REGION = 'AMERICA' AND S_REGION = 'AMERICA' AND (year(LO_ORDERDATE) = 1997 OR year(LO_ORDERDATE) = 1998) AND (P_MFGR = 'MFGR#1' OR P_MFGR = 'MFGR#2') GROUP BY  year(LO_ORDERDATE), S_NATION, P_CATEGORY ORDER BY year, S_NATION, P_CATEGORY;\n\n--Q4.3\nSELECT year(LO_ORDERDATE) AS year, S_CITY, P_BRAND, sum(LO_REVENUE - LO_SUPPLYCOST) AS profit FROM lineorder_flat WHERE S_NATION = 'UNITED STATES' AND (year(LO_ORDERDATE) = 1997 OR year(LO_ORDERDATE) = 1998) AND P_CATEGORY = 'MFGR#14' GROUP BY  year(LO_ORDERDATE), S_CITY, P_BRAND ORDER BY year, S_CITY, P_BRAND;\n</code></pre>"},{"location":"MatrixOne/Test/performance-testing/SSB-test-with-matrixone/#multiple-tables-queries","title":"Multiple tables queries","text":"<pre><code>--Q1.1\nselect sum(lo_revenue) as revenue\nfrom lineorder join date on lo_orderdate = d_datekey\nwhere year(d_datekey)  = 1993 and lo_discount between 1 and 3 and lo_quantity &lt; 25;\n\n--Q1.2\nselect sum(lo_revenue) as revenue\nfrom lineorder\njoin date on lo_orderdate = d_datekey\nwhere d_yearmonthnum = 199401\nand lo_discount between 4 and 6\nand lo_quantity between 26 and 35;\n\n--Q1.3\nselect sum(lo_revenue) as revenue\nfrom lineorder\njoin date on lo_orderdate = d_datekey\nwhere d_weeknuminyear = 6 and year(d_datekey)  = 1994\nand lo_discount between 5 and 7\nand lo_quantity between 26 and 35;\n\n--Q2.1\nselect sum(lo_revenue) as lo_revenue, year(d_datekey) as year, p_brand\nfrom lineorder\njoin date on lo_orderdate = d_datekey\njoin part on lo_partkey = p_partkey\njoin supplier on lo_suppkey = s_suppkey\nwhere p_category = 'MFGR#12' and s_region = 'AMERICA'\ngroup by year, p_brand\norder by year, p_brand;\n\n--Q2.2\nselect sum(lo_revenue) as lo_revenue, year(d_datekey) as year, p_brand\nfrom lineorder\njoin date on lo_orderdate = d_datekey\njoin part on lo_partkey = p_partkey\njoin supplier on lo_suppkey = s_suppkey\nwhere p_brand between 'MFGR#2221' and 'MFGR#2228' and s_region = 'ASIA'\ngroup by year, p_brand\norder by year, p_brand;\n\n--Q2.3\nselect sum(lo_revenue) as lo_revenue, year(d_datekey) as year, p_brand\nfrom lineorder\njoin date on lo_orderdate = d_datekey\njoin part on lo_partkey = p_partkey\njoin supplier on lo_suppkey = s_suppkey\nwhere p_brand = 'MFGR#2239' and s_region = 'EUROPE'\ngroup by year, p_brand\norder by year, p_brand;\n\n--Q3.1\nselect c_nation, s_nation, year(d_datekey) as year, sum(lo_revenue) as lo_revenue\nfrom lineorder\njoin date on lo_orderdate = d_datekey\njoin customer on lo_custkey = c_custkey\njoin supplier on lo_suppkey = s_suppkey\nwhere c_region = 'ASIA' and s_region = 'ASIA' and year(d_datekey) between 1992 and 1997\ngroup by c_nation, s_nation, year\norder by year asc, lo_revenue desc;\n\n--Q3.2\nselect c_city, s_city, year(d_datekey) as year, sum(lo_revenue) as lo_revenue\nfrom lineorder\njoin date on lo_orderdate = d_datekey\njoin customer on lo_custkey = c_custkey\njoin supplier on lo_suppkey = s_suppkey\nwhere c_nation = 'UNITED STATES' and s_nation = 'UNITED STATES'\nand year(d_datekey) between 1992 and 1997\ngroup by c_city, s_city, year\norder by year asc, lo_revenue desc;\n\n--Q3.3\nselect c_city, s_city, year(d_datekey) as year, sum(lo_revenue) as lo_revenue\nfrom lineorder\njoin date on lo_orderdate = d_datekey\njoin customer on lo_custkey = c_custkey\njoin supplier on lo_suppkey = s_suppkey\nwhere (c_city='UNITED KI1' or c_city='UNITED KI5')\nand (s_city='UNITED KI1' or s_city='UNITED KI5')\nand year(d_datekey) between 1992 and 1997\ngroup by c_city, s_city, year\norder by year asc, lo_revenue desc;\n\n--Q3.4\nselect c_city, s_city, year(d_datekey) as year, sum(lo_revenue) as lo_revenue\nfrom lineorder\njoin date on lo_orderdate = d_datekey\njoin customer on lo_custkey = c_custkey\njoin supplier on lo_suppkey = s_suppkey\nwhere (c_city='UNITED KI1' or c_city='UNITED KI5') and (s_city='UNITED KI1' or s_city='UNITED KI5') and d_yearmonth = 'Dec1997'\ngroup by c_city, s_city, year\norder by year asc, lo_revenue desc;\n\n--Q4.1\nselect year(d_datekey) as year, c_nation, sum(lo_revenue) - sum(lo_supplycost) as profit\nfrom lineorder\njoin date on lo_orderdate = d_datekey\njoin customer on lo_custkey = c_custkey\njoin supplier on lo_suppkey = s_suppkey\njoin part on lo_partkey = p_partkey\nwhere c_region = 'AMERICA' and s_region = 'AMERICA' and (p_mfgr = 'MFGR#1' or p_mfgr = 'MFGR#2')\ngroup by year, c_nation\norder by year, c_nation;\n\n--Q4.2\nselect year(d_datekey) as year, s_nation, p_category, sum(lo_revenue) - sum(lo_supplycost) as profit\nfrom lineorder\njoin date on lo_orderdate = d_datekey\njoin customer on lo_custkey = c_custkey\njoin supplier on lo_suppkey = s_suppkey\njoin part on lo_partkey = p_partkey\nwhere c_region = 'AMERICA'and s_region = 'AMERICA'\nand (year(d_datekey) = 1997 or year(d_datekey) = 1998)\nand (p_mfgr = 'MFGR#1' or p_mfgr = 'MFGR#2')\ngroup by year, s_nation, p_category\norder by year, s_nation, p_category;\n\n--Q4.3\nselect year(d_datekey) as year, s_city, p_brand, sum(lo_revenue) - sum(lo_supplycost) as profit,c_region , s_nation, p_category\nfrom lineorder\njoin date on lo_orderdate = d_datekey\njoin customer on lo_custkey = c_custkey\njoin supplier on lo_suppkey = s_suppkey\njoin part on lo_partkey = p_partkey\nwhere\n(year(d_datekey) = 1997 or year(d_datekey) = 1998)\nand s_nation='ALGERIA'\ngroup by year, s_city, p_brand\norder by year, s_city, p_brand;\n</code></pre>"},{"location":"MatrixOne/Test/performance-testing/SSB-test-with-matrixone/#6-expected-results","title":"6. Expected Results","text":""},{"location":"MatrixOne/Test/performance-testing/SSB-test-with-matrixone/#flat-table-queries-expected-results","title":"Flat table queries expected results","text":"<pre><code>-- Q1.1\n+--------------+\n| revenue      |\n+--------------+\n| 702223464659 |\n+--------------+\n\n-- Q1.2\n+---------------+\n| revenue       |\n+---------------+\n| 1842875090496 |\n+---------------+\n\n-- Q1.3\n+---------------+\n| revenue       |\n+---------------+\n| 2208738861324 |\n+---------------+\n\n-- Q2.1\n+-----------------+------+-----------+\n| sum(lo_revenue) | year | p_brand   |\n+-----------------+------+-----------+\n|       283684289 | 1992 | MFGR#121  |\n|      1344702529 | 1992 | MFGR#1210 |\n|       757158682 | 1992 | MFGR#1211 |\n|      1156022815 | 1992 | MFGR#1212 |\n|       676164367 | 1992 | MFGR#1213 |\n|       522779256 | 1992 | MFGR#1214 |\n|       233507213 | 1992 | MFGR#1215 |\n|       726755819 | 1992 | MFGR#1216 |\n|      1865504710 | 1992 | MFGR#1217 |\n|       685600451 | 1992 | MFGR#1218 |\n|       814671470 | 1992 | MFGR#1219 |\n|       655405800 | 1992 | MFGR#122  |\n|       962120553 | 1992 | MFGR#1220 |\n|       961393626 | 1992 | MFGR#1221 |\n|       922110830 | 1992 | MFGR#1222 |\n|       814842712 | 1992 | MFGR#1223 |\n|      1402773165 | 1992 | MFGR#1224 |\n|       977517439 | 1992 | MFGR#1225 |\n|      1392114944 | 1992 | MFGR#1226 |\n|       658922951 | 1992 | MFGR#1227 |\n|       892495927 | 1992 | MFGR#1228 |\n|       806609100 | 1992 | MFGR#1229 |\n|       578875657 | 1992 | MFGR#123  |\n|       691236902 | 1992 | MFGR#1230 |\n|       482715249 | 1992 | MFGR#1231 |\n|       618556590 | 1992 | MFGR#1232 |\n|       981657009 | 1992 | MFGR#1233 |\n|      1050794669 | 1992 | MFGR#1234 |\n|      1335217991 | 1992 | MFGR#1235 |\n|       686009527 | 1992 | MFGR#1236 |\n|       605242584 | 1992 | MFGR#1237 |\n|       430455641 | 1992 | MFGR#1238 |\n|       359654993 | 1992 | MFGR#1239 |\n|       818818457 | 1992 | MFGR#124  |\n|      1388502581 | 1992 | MFGR#1240 |\n|       711566198 | 1992 | MFGR#125  |\n|       893045647 | 1992 | MFGR#126  |\n|      1240534333 | 1992 | MFGR#127  |\n|       871966127 | 1992 | MFGR#128  |\n|       719176622 | 1992 | MFGR#129  |\n|       245880758 | 1993 | MFGR#121  |\n|      1480662753 | 1993 | MFGR#1210 |\n|       982292725 | 1993 | MFGR#1211 |\n|      1001136766 | 1993 | MFGR#1212 |\n|       227144072 | 1993 | MFGR#1213 |\n|       291611370 | 1993 | MFGR#1214 |\n|       454576668 | 1993 | MFGR#1215 |\n|       772027256 | 1993 | MFGR#1216 |\n|      1155751851 | 1993 | MFGR#1217 |\n|       897883050 | 1993 | MFGR#1218 |\n|      1209508962 | 1993 | MFGR#1219 |\n|       530577973 | 1993 | MFGR#122  |\n|       901650471 | 1993 | MFGR#1220 |\n|       739540494 | 1993 | MFGR#1221 |\n|       698751459 | 1993 | MFGR#1222 |\n|      1327979157 | 1993 | MFGR#1223 |\n|      1476697469 | 1993 | MFGR#1224 |\n|       792103134 | 1993 | MFGR#1225 |\n|      1420277376 | 1993 | MFGR#1226 |\n|      1446032835 | 1993 | MFGR#1227 |\n|       884375309 | 1993 | MFGR#1228 |\n|       522705868 | 1993 | MFGR#1229 |\n|       601685233 | 1993 | MFGR#123  |\n|       806727248 | 1993 | MFGR#1230 |\n|       399477390 | 1993 | MFGR#1231 |\n|       894047578 | 1993 | MFGR#1232 |\n|       496067089 | 1993 | MFGR#1233 |\n|      1050223756 | 1993 | MFGR#1234 |\n|       891681399 | 1993 | MFGR#1235 |\n|      1402903631 | 1993 | MFGR#1236 |\n|       347380448 | 1993 | MFGR#1237 |\n|       514853194 | 1993 | MFGR#1238 |\n|       410543863 | 1993 | MFGR#1239 |\n|       673483594 | 1993 | MFGR#124  |\n|       713343630 | 1993 | MFGR#1240 |\n|       512610707 | 1993 | MFGR#125  |\n|      1228110634 | 1993 | MFGR#126  |\n|       936958961 | 1993 | MFGR#127  |\n|       579067515 | 1993 | MFGR#128  |\n|       636174833 | 1993 | MFGR#129  |\n|       370347074 | 1994 | MFGR#121  |\n|       483900410 | 1994 | MFGR#1210 |\n|      1240306281 | 1994 | MFGR#1211 |\n|      1003345253 | 1994 | MFGR#1212 |\n|       557310864 | 1994 | MFGR#1213 |\n|       314972328 | 1994 | MFGR#1214 |\n|      1130260810 | 1994 | MFGR#1215 |\n|       401618319 | 1994 | MFGR#1216 |\n|       652173601 | 1994 | MFGR#1217 |\n|       923612074 | 1994 | MFGR#1218 |\n|       469711377 | 1994 | MFGR#1219 |\n|       580152115 | 1994 | MFGR#122  |\n|       433134653 | 1994 | MFGR#1220 |\n|       730569849 | 1994 | MFGR#1221 |\n|       607609104 | 1994 | MFGR#1222 |\n|       949877669 | 1994 | MFGR#1223 |\n|      1644687916 | 1994 | MFGR#1224 |\n|       492974194 | 1994 | MFGR#1225 |\n|       921499688 | 1994 | MFGR#1226 |\n|       719059761 | 1994 | MFGR#1227 |\n|      1000497056 | 1994 | MFGR#1228 |\n|       486968927 | 1994 | MFGR#1229 |\n|       734124906 | 1994 | MFGR#123  |\n|       645016873 | 1994 | MFGR#1230 |\n|       526638240 | 1994 | MFGR#1231 |\n|      1358112405 | 1994 | MFGR#1232 |\n|      1167074905 | 1994 | MFGR#1233 |\n|      1102915239 | 1994 | MFGR#1234 |\n|       693058125 | 1994 | MFGR#1235 |\n|      1673392892 | 1994 | MFGR#1236 |\n|       849630029 | 1994 | MFGR#1237 |\n|       721392705 | 1994 | MFGR#1238 |\n|      1237195774 | 1994 | MFGR#1239 |\n|      1107832795 | 1994 | MFGR#124  |\n|       827906290 | 1994 | MFGR#1240 |\n|       682827304 | 1994 | MFGR#125  |\n|      1198768141 | 1994 | MFGR#126  |\n|      1274148181 | 1994 | MFGR#127  |\n|       738849138 | 1994 | MFGR#128  |\n|       751136619 | 1994 | MFGR#129  |\n|       318978803 | 1995 | MFGR#121  |\n|       383199448 | 1995 | MFGR#1210 |\n|      1300165814 | 1995 | MFGR#1211 |\n|      1550400731 | 1995 | MFGR#1212 |\n|       451958158 | 1995 | MFGR#1213 |\n|       431434279 | 1995 | MFGR#1214 |\n|       713735582 | 1995 | MFGR#1215 |\n|       919323722 | 1995 | MFGR#1216 |\n|      1542358864 | 1995 | MFGR#1217 |\n|       500930092 | 1995 | MFGR#1218 |\n|      1208162086 | 1995 | MFGR#1219 |\n|       785707989 | 1995 | MFGR#122  |\n|       993828211 | 1995 | MFGR#1220 |\n|       667253893 | 1995 | MFGR#1221 |\n|      1654114297 | 1995 | MFGR#1222 |\n|       986528377 | 1995 | MFGR#1223 |\n|       755014642 | 1995 | MFGR#1224 |\n|      1090300100 | 1995 | MFGR#1225 |\n|      1063626454 | 1995 | MFGR#1226 |\n|      1382528859 | 1995 | MFGR#1227 |\n|       919953351 | 1995 | MFGR#1228 |\n|       457795295 | 1995 | MFGR#1229 |\n|       953851827 | 1995 | MFGR#123  |\n|       807209283 | 1995 | MFGR#1230 |\n|       236304454 | 1995 | MFGR#1231 |\n|       668449537 | 1995 | MFGR#1232 |\n|       240657083 | 1995 | MFGR#1233 |\n|       920389826 | 1995 | MFGR#1234 |\n|       684096065 | 1995 | MFGR#1235 |\n|      1005844219 | 1995 | MFGR#1236 |\n|       626170996 | 1995 | MFGR#1237 |\n|       984581826 | 1995 | MFGR#1238 |\n|       602850634 | 1995 | MFGR#1239 |\n|      1172025628 | 1995 | MFGR#124  |\n|       489788581 | 1995 | MFGR#1240 |\n|       643100327 | 1995 | MFGR#125  |\n|       894596661 | 1995 | MFGR#126  |\n|       706917239 | 1995 | MFGR#127  |\n|       428671983 | 1995 | MFGR#128  |\n|       971611472 | 1995 | MFGR#129  |\n|       306497573 | 1996 | MFGR#121  |\n|       890719726 | 1996 | MFGR#1210 |\n|      1761977172 | 1996 | MFGR#1211 |\n|       633845765 | 1996 | MFGR#1212 |\n|       475801202 | 1996 | MFGR#1213 |\n|       271930385 | 1996 | MFGR#1214 |\n|       366399844 | 1996 | MFGR#1215 |\n|       877472476 | 1996 | MFGR#1216 |\n|       970366290 | 1996 | MFGR#1217 |\n|       537175690 | 1996 | MFGR#1218 |\n|       956970528 | 1996 | MFGR#1219 |\n|       711962074 | 1996 | MFGR#122  |\n|      1062161683 | 1996 | MFGR#1220 |\n|       406293744 | 1996 | MFGR#1221 |\n|       785404335 | 1996 | MFGR#1222 |\n|       579267044 | 1996 | MFGR#1223 |\n|      1220640256 | 1996 | MFGR#1224 |\n|       490130196 | 1996 | MFGR#1225 |\n|      1603805636 | 1996 | MFGR#1226 |\n|      1530646510 | 1996 | MFGR#1227 |\n|      1093328922 | 1996 | MFGR#1228 |\n|       596520140 | 1996 | MFGR#1229 |\n|       450815571 | 1996 | MFGR#123  |\n|       315053350 | 1996 | MFGR#1230 |\n|       198951017 | 1996 | MFGR#1231 |\n|       579778438 | 1996 | MFGR#1232 |\n|       480905486 | 1996 | MFGR#1233 |\n|      1433336215 | 1996 | MFGR#1234 |\n|       560925251 | 1996 | MFGR#1235 |\n|      1038766181 | 1996 | MFGR#1236 |\n|       783697960 | 1996 | MFGR#1237 |\n|       972656445 | 1996 | MFGR#1238 |\n|       614528801 | 1996 | MFGR#1239 |\n|      1418931894 | 1996 | MFGR#124  |\n|       995139591 | 1996 | MFGR#1240 |\n|       824028471 | 1996 | MFGR#125  |\n|       669475113 | 1996 | MFGR#126  |\n|       831704651 | 1996 | MFGR#127  |\n|       920514555 | 1996 | MFGR#128  |\n|       436162421 | 1996 | MFGR#129  |\n|       553684594 | 1997 | MFGR#121  |\n|      1317368046 | 1997 | MFGR#1210 |\n|      1617056983 | 1997 | MFGR#1211 |\n|      1196031005 | 1997 | MFGR#1212 |\n|      1056458336 | 1997 | MFGR#1213 |\n|       352179650 | 1997 | MFGR#1214 |\n|       511058114 | 1997 | MFGR#1215 |\n|       658259312 | 1997 | MFGR#1216 |\n|      1238450697 | 1997 | MFGR#1217 |\n|       376245955 | 1997 | MFGR#1218 |\n|       913437812 | 1997 | MFGR#1219 |\n|      1114996000 | 1997 | MFGR#122  |\n|       814059433 | 1997 | MFGR#1220 |\n|       817328516 | 1997 | MFGR#1221 |\n|       541428597 | 1997 | MFGR#1222 |\n|      1260539052 | 1997 | MFGR#1223 |\n|      1766426582 | 1997 | MFGR#1224 |\n|      1221271245 | 1997 | MFGR#1225 |\n|      1499152922 | 1997 | MFGR#1226 |\n|       491586909 | 1997 | MFGR#1227 |\n|       911517084 | 1997 | MFGR#1228 |\n|       728186585 | 1997 | MFGR#1229 |\n|       904363416 | 1997 | MFGR#123  |\n|       605369014 | 1997 | MFGR#1230 |\n|       290370455 | 1997 | MFGR#1231 |\n|       602414397 | 1997 | MFGR#1232 |\n|       765339065 | 1997 | MFGR#1233 |\n|      1170973957 | 1997 | MFGR#1234 |\n|       860319765 | 1997 | MFGR#1235 |\n|      1031080311 | 1997 | MFGR#1236 |\n|       736404810 | 1997 | MFGR#1237 |\n|      1012330790 | 1997 | MFGR#1238 |\n|       681055343 | 1997 | MFGR#1239 |\n|       601626600 | 1997 | MFGR#124  |\n|       920404157 | 1997 | MFGR#1240 |\n|      1007678757 | 1997 | MFGR#125  |\n|       622347203 | 1997 | MFGR#126  |\n|      1215295592 | 1997 | MFGR#127  |\n|       822274972 | 1997 | MFGR#128  |\n|       643903475 | 1997 | MFGR#129  |\n|       470008435 | 1998 | MFGR#121  |\n|       568508492 | 1998 | MFGR#1210 |\n|       323759101 | 1998 | MFGR#1211 |\n|       572013331 | 1998 | MFGR#1212 |\n|       448137748 | 1998 | MFGR#1213 |\n|       137422458 | 1998 | MFGR#1214 |\n|       346491756 | 1998 | MFGR#1215 |\n|       454542243 | 1998 | MFGR#1216 |\n|       759205210 | 1998 | MFGR#1217 |\n|       674544462 | 1998 | MFGR#1218 |\n|       735952270 | 1998 | MFGR#1219 |\n|       490186568 | 1998 | MFGR#122  |\n|       769456686 | 1998 | MFGR#1220 |\n|       654540341 | 1998 | MFGR#1221 |\n|       800329859 | 1998 | MFGR#1222 |\n|       263849231 | 1998 | MFGR#1223 |\n|       445461642 | 1998 | MFGR#1224 |\n|       387808862 | 1998 | MFGR#1225 |\n|       675424382 | 1998 | MFGR#1226 |\n|       265906673 | 1998 | MFGR#1227 |\n|       585938371 | 1998 | MFGR#1228 |\n|       683188537 | 1998 | MFGR#1229 |\n|       304403717 | 1998 | MFGR#123  |\n|       533781674 | 1998 | MFGR#1230 |\n|       304060011 | 1998 | MFGR#1231 |\n|       635275907 | 1998 | MFGR#1232 |\n|       658295080 | 1998 | MFGR#1233 |\n|       524133341 | 1998 | MFGR#1234 |\n|       363911877 | 1998 | MFGR#1235 |\n|       300885635 | 1998 | MFGR#1236 |\n|       532608453 | 1998 | MFGR#1237 |\n|       484291410 | 1998 | MFGR#1238 |\n|       445336624 | 1998 | MFGR#1239 |\n|       719027801 | 1998 | MFGR#124  |\n|       518860961 | 1998 | MFGR#1240 |\n|       491235383 | 1998 | MFGR#125  |\n|       520917638 | 1998 | MFGR#126  |\n|      1158787745 | 1998 | MFGR#127  |\n|       401190922 | 1998 | MFGR#128  |\n|       406656337 | 1998 | MFGR#129  |\n+-----------------+------+-----------+\n\n-- Q2.2\n+-----------------+------+-----------+\n| sum(lo_revenue) | year | p_brand   |\n+-----------------+------+-----------+\n|      1259802358 | 1992 | MFGR#2221 |\n|      1728549344 | 1992 | MFGR#2222 |\n|      1375260024 | 1992 | MFGR#2223 |\n|      1299982475 | 1992 | MFGR#2224 |\n|      1541960331 | 1992 | MFGR#2225 |\n|      1151853513 | 1992 | MFGR#2226 |\n|      1271175264 | 1992 | MFGR#2227 |\n|      1726441695 | 1992 | MFGR#2228 |\n|      1251460032 | 1993 | MFGR#2221 |\n|      1331062515 | 1993 | MFGR#2222 |\n|       902809293 | 1993 | MFGR#2223 |\n|       980512417 | 1993 | MFGR#2224 |\n|      1253088003 | 1993 | MFGR#2225 |\n|       959195148 | 1993 | MFGR#2226 |\n|       555593932 | 1993 | MFGR#2227 |\n|      2186479174 | 1993 | MFGR#2228 |\n|      1094092222 | 1994 | MFGR#2221 |\n|      1491699323 | 1994 | MFGR#2222 |\n|      1501160826 | 1994 | MFGR#2223 |\n|      1387107418 | 1994 | MFGR#2224 |\n|      1641588884 | 1994 | MFGR#2225 |\n|      1387296390 | 1994 | MFGR#2226 |\n|      1038341470 | 1994 | MFGR#2227 |\n|      1565763138 | 1994 | MFGR#2228 |\n|      1412945650 | 1995 | MFGR#2221 |\n|      1546178356 | 1995 | MFGR#2222 |\n|      1218352073 | 1995 | MFGR#2223 |\n|      1052197762 | 1995 | MFGR#2224 |\n|      1822921900 | 1995 | MFGR#2225 |\n|       728142181 | 1995 | MFGR#2226 |\n|       966131607 | 1995 | MFGR#2227 |\n|      1379320517 | 1995 | MFGR#2228 |\n|      1042767284 | 1996 | MFGR#2221 |\n|       994733835 | 1996 | MFGR#2222 |\n|      1615788545 | 1996 | MFGR#2223 |\n|      1113980216 | 1996 | MFGR#2224 |\n|      1622570253 | 1996 | MFGR#2225 |\n|      1540226758 | 1996 | MFGR#2226 |\n|      1115687883 | 1996 | MFGR#2227 |\n|      1716355343 | 1996 | MFGR#2228 |\n|       867705636 | 1997 | MFGR#2221 |\n|      1529877498 | 1997 | MFGR#2222 |\n|      1594444450 | 1997 | MFGR#2223 |\n|       587421043 | 1997 | MFGR#2224 |\n|      1112274470 | 1997 | MFGR#2225 |\n|      1327884722 | 1997 | MFGR#2226 |\n|       884180880 | 1997 | MFGR#2227 |\n|      1664207656 | 1997 | MFGR#2228 |\n|       827743515 | 1998 | MFGR#2221 |\n|       662242310 | 1998 | MFGR#2222 |\n|       861445539 | 1998 | MFGR#2223 |\n|       694538672 | 1998 | MFGR#2224 |\n|       675179021 | 1998 | MFGR#2225 |\n|       480728720 | 1998 | MFGR#2226 |\n|       643763072 | 1998 | MFGR#2227 |\n|       994499201 | 1998 | MFGR#2228 |\n+-----------------+------+-----------+\n\n-- Q2.3\n+-----------------+------+-----------+\n| sum(lo_revenue) | year | p_brand   |\n+-----------------+------+-----------+\n|      1428843284 | 1992 | MFGR#2239 |\n|      1865666054 | 1993 | MFGR#2239 |\n|      2242753254 | 1994 | MFGR#2239 |\n|      1446677305 | 1995 | MFGR#2239 |\n|       921681503 | 1996 | MFGR#2239 |\n|      1549990572 | 1997 | MFGR#2239 |\n|       926327433 | 1998 | MFGR#2239 |\n+-----------------+------+-----------+\n\n-- Q3.1\n+-----------+-----------+------+-------------+\n| c_nation  | s_nation  | year | revenue     |\n+-----------+-----------+------+-------------+\n| VIETNAM   | CHINA     | 1992 | 17194479086 |\n| JAPAN     | CHINA     | 1992 | 15572594510 |\n| JAPAN     | JAPAN     | 1992 | 13861682954 |\n| INDONESIA | CHINA     | 1992 | 13499663933 |\n| VIETNAM   | INDONESIA | 1992 | 13163103649 |\n| JAPAN     | INDONESIA | 1992 | 13035158590 |\n| INDIA     | CHINA     | 1992 | 12987688902 |\n| INDONESIA | JAPAN     | 1992 | 12939737918 |\n| VIETNAM   | JAPAN     | 1992 | 12174715858 |\n| JAPAN     | VIETNAM   | 1992 | 11669093753 |\n| INDIA     | INDONESIA | 1992 | 11452602145 |\n| INDONESIA | INDONESIA | 1992 | 10394407561 |\n| INDIA     | JAPAN     | 1992 | 10313084900 |\n| JAPAN     | INDIA     | 1992 | 10035511089 |\n| CHINA     | CHINA     | 1992 |  9828744666 |\n| VIETNAM   | VIETNAM   | 1992 |  9701522505 |\n| INDONESIA | INDIA     | 1992 |  9271105764 |\n| INDIA     | INDIA     | 1992 |  8879645522 |\n| CHINA     | INDONESIA | 1992 |  8373693838 |\n| CHINA     | JAPAN     | 1992 |  8051248951 |\n| VIETNAM   | INDIA     | 1992 |  7804539029 |\n| INDONESIA | VIETNAM   | 1992 |  7615465790 |\n| CHINA     | INDIA     | 1992 |  7344868842 |\n| INDIA     | VIETNAM   | 1992 |  6830508508 |\n| CHINA     | VIETNAM   | 1992 |  6529888238 |\n| JAPAN     | CHINA     | 1993 | 18839180326 |\n| VIETNAM   | CHINA     | 1993 | 14761890330 |\n| JAPAN     | INDONESIA | 1993 | 13648082171 |\n| INDONESIA | CHINA     | 1993 | 13518181805 |\n| INDIA     | CHINA     | 1993 | 13249555999 |\n| JAPAN     | JAPAN     | 1993 | 12667833152 |\n| JAPAN     | VIETNAM   | 1993 | 11529854580 |\n| CHINA     | CHINA     | 1993 | 11216468573 |\n| INDONESIA | INDONESIA | 1993 | 10953284722 |\n| VIETNAM   | INDONESIA | 1993 | 10582912267 |\n| INDIA     | JAPAN     | 1993 | 10482950584 |\n| VIETNAM   | JAPAN     | 1993 | 10370811002 |\n| INDIA     | INDONESIA | 1993 | 10145286112 |\n| INDONESIA | JAPAN     | 1993 |  9850020303 |\n| VIETNAM   | VIETNAM   | 1993 |  9591468153 |\n| CHINA     | INDONESIA | 1993 |  9015864524 |\n| CHINA     | JAPAN     | 1993 |  8972996729 |\n| INDONESIA | INDIA     | 1993 |  8903638786 |\n| JAPAN     | INDIA     | 1993 |  8848048514 |\n| INDONESIA | VIETNAM   | 1993 |  8024464882 |\n| VIETNAM   | INDIA     | 1993 |  7806575746 |\n| INDIA     | VIETNAM   | 1993 |  7537331106 |\n| INDIA     | INDIA     | 1993 |  7211053846 |\n| CHINA     | VIETNAM   | 1993 |  6700022269 |\n| CHINA     | INDIA     | 1993 |  6327331541 |\n| JAPAN     | CHINA     | 1994 | 15661051644 |\n| VIETNAM   | CHINA     | 1994 | 13958591931 |\n| JAPAN     | JAPAN     | 1994 | 13566252348 |\n| CHINA     | CHINA     | 1994 | 12870010072 |\n| VIETNAM   | JAPAN     | 1994 | 12728320716 |\n| INDONESIA | CHINA     | 1994 | 12295790872 |\n| INDIA     | CHINA     | 1994 | 12166419121 |\n| JAPAN     | INDONESIA | 1994 | 11358955025 |\n| INDIA     | INDONESIA | 1994 | 11111248365 |\n| JAPAN     | INDIA     | 1994 | 10078806371 |\n| VIETNAM   | INDONESIA | 1994 |  9923852578 |\n| INDIA     | JAPAN     | 1994 |  9839136767 |\n| CHINA     | JAPAN     | 1994 |  9836586308 |\n| INDONESIA | JAPAN     | 1994 |  9786694572 |\n| INDIA     | VIETNAM   | 1994 |  9551081406 |\n| JAPAN     | VIETNAM   | 1994 |  9035431932 |\n| VIETNAM   | INDIA     | 1994 |  9032319402 |\n| INDONESIA | INDONESIA | 1994 |  8876012426 |\n| CHINA     | INDONESIA | 1994 |  8375581981 |\n| VIETNAM   | VIETNAM   | 1994 |  8095638136 |\n| INDONESIA | INDIA     | 1994 |  7943993512 |\n| INDONESIA | VIETNAM   | 1994 |  7927236697 |\n| INDIA     | INDIA     | 1994 |  7534915457 |\n| CHINA     | VIETNAM   | 1994 |  6062387221 |\n| CHINA     | INDIA     | 1994 |  5816794324 |\n| VIETNAM   | CHINA     | 1995 | 15128423080 |\n| INDONESIA | CHINA     | 1995 | 14794647970 |\n| INDIA     | CHINA     | 1995 | 14724240804 |\n| JAPAN     | CHINA     | 1995 | 14579848516 |\n| CHINA     | CHINA     | 1995 | 14296657586 |\n| INDIA     | JAPAN     | 1995 | 13511381754 |\n| JAPAN     | JAPAN     | 1995 | 12015968288 |\n| VIETNAM   | INDONESIA | 1995 | 11290647784 |\n| JAPAN     | INDONESIA | 1995 | 10968840402 |\n| INDIA     | INDONESIA | 1995 | 10879296370 |\n| CHINA     | INDONESIA | 1995 | 10611767914 |\n| VIETNAM   | JAPAN     | 1995 | 10493043807 |\n| INDONESIA | INDONESIA | 1995 | 10350165199 |\n| VIETNAM   | INDIA     | 1995 | 10147175135 |\n| CHINA     | JAPAN     | 1995 |  9967113498 |\n| JAPAN     | VIETNAM   | 1995 |  9871240910 |\n| INDONESIA | JAPAN     | 1995 |  9554798320 |\n| JAPAN     | INDIA     | 1995 |  9224478715 |\n| INDIA     | INDIA     | 1995 |  8880501531 |\n| VIETNAM   | VIETNAM   | 1995 |  8530802028 |\n| INDIA     | VIETNAM   | 1995 |  8470249830 |\n| CHINA     | INDIA     | 1995 |  8460557790 |\n| INDONESIA | VIETNAM   | 1995 |  8393411088 |\n| CHINA     | VIETNAM   | 1995 |  7838238263 |\n| INDONESIA | INDIA     | 1995 |  7001659338 |\n| JAPAN     | CHINA     | 1996 | 14974943391 |\n| INDIA     | CHINA     | 1996 | 14236197987 |\n| VIETNAM   | CHINA     | 1996 | 13723231674 |\n| JAPAN     | INDONESIA | 1996 | 13304501801 |\n| INDONESIA | CHINA     | 1996 | 12444022202 |\n| CHINA     | CHINA     | 1996 | 12120893189 |\n| INDIA     | JAPAN     | 1996 | 11649117519 |\n| INDONESIA | JAPAN     | 1996 | 11345350775 |\n| VIETNAM   | JAPAN     | 1996 | 11294284203 |\n| INDONESIA | INDONESIA | 1996 | 11111201530 |\n| JAPAN     | INDIA     | 1996 | 10871364136 |\n| JAPAN     | JAPAN     | 1996 | 10836947449 |\n| INDIA     | INDONESIA | 1996 | 10568008435 |\n| JAPAN     | VIETNAM   | 1996 | 10503890555 |\n| VIETNAM   | INDONESIA | 1996 | 10494783196 |\n| INDONESIA | VIETNAM   | 1996 |  9940440124 |\n| INDONESIA | INDIA     | 1996 |  9864980677 |\n| VIETNAM   | VIETNAM   | 1996 |  9560258720 |\n| INDIA     | VIETNAM   | 1996 |  9324764214 |\n| INDIA     | INDIA     | 1996 |  9023346020 |\n| VIETNAM   | INDIA     | 1996 |  8968179949 |\n| CHINA     | INDONESIA | 1996 |  8877441837 |\n| CHINA     | JAPAN     | 1996 |  8749420872 |\n| CHINA     | VIETNAM   | 1996 |  6973983457 |\n| CHINA     | INDIA     | 1996 |  6515658476 |\n| JAPAN     | CHINA     | 1997 | 15365039212 |\n| INDONESIA | CHINA     | 1997 | 14159930904 |\n| VIETNAM   | CHINA     | 1997 | 13678288757 |\n| INDIA     | CHINA     | 1997 | 13599028484 |\n| JAPAN     | JAPAN     | 1997 | 12921870544 |\n| CHINA     | CHINA     | 1997 | 12720975220 |\n| VIETNAM   | JAPAN     | 1997 | 11929000810 |\n| VIETNAM   | INDONESIA | 1997 | 11325447090 |\n| JAPAN     | INDONESIA | 1997 | 10764312416 |\n| INDONESIA | JAPAN     | 1997 | 10555558162 |\n| INDONESIA | INDONESIA | 1997 | 10416928126 |\n| CHINA     | INDONESIA | 1997 | 10317902565 |\n| INDIA     | JAPAN     | 1997 | 10272590051 |\n| JAPAN     | VIETNAM   | 1997 |  9940032294 |\n| CHINA     | JAPAN     | 1997 |  9519485461 |\n| JAPAN     | INDIA     | 1997 |  9465935835 |\n| INDIA     | INDONESIA | 1997 |  9405085270 |\n| INDONESIA | INDIA     | 1997 |  8930955270 |\n| INDIA     | INDIA     | 1997 |  8295504178 |\n| VIETNAM   | VIETNAM   | 1997 |  8293412532 |\n| INDONESIA | VIETNAM   | 1997 |  8116443059 |\n| INDIA     | VIETNAM   | 1997 |  7960292262 |\n| VIETNAM   | INDIA     | 1997 |  7529455873 |\n| CHINA     | VIETNAM   | 1997 |  7038413355 |\n| CHINA     | INDIA     | 1997 |  6530770558 |\n+-----------+-----------+------+-------------+\n\n-- Q3.2\n\n+------------+------------+------+-----------+\n| c_city     | s_city     | year | revenue   |\n+------------+------------+------+-----------+\n| CHINA    3 | CHINA    0 | 1992 | 539864249 |\n| CHINA    0 | CHINA    6 | 1992 | 471363128 |\n| CHINA    8 | CHINA    1 | 1992 | 421384110 |\n| CHINA    6 | CHINA    1 | 1992 | 382204882 |\n| CHINA    6 | CHINA    7 | 1992 | 355755835 |\n| CHINA    8 | CHINA    9 | 1992 | 349006417 |\n| CHINA    7 | CHINA    7 | 1992 | 320232842 |\n| CHINA    8 | CHINA    3 | 1992 | 296105733 |\n| CHINA    5 | CHINA    3 | 1992 | 277283951 |\n| CHINA    6 | CHINA    6 | 1992 | 265527771 |\n| CHINA    4 | CHINA    1 | 1992 | 237402078 |\n| CHINA    8 | CHINA    6 | 1992 | 234720401 |\n| CHINA    4 | CHINA    6 | 1992 | 230169075 |\n| CHINA    9 | CHINA    1 | 1992 | 223815249 |\n| CHINA    1 | CHINA    1 | 1992 | 223467947 |\n| CHINA    2 | CHINA    1 | 1992 | 219559691 |\n| CHINA    9 | CHINA    6 | 1992 | 205915890 |\n| CHINA    7 | CHINA    9 | 1992 | 201288909 |\n| CHINA    1 | CHINA    6 | 1992 | 195622902 |\n| CHINA    9 | CHINA    7 | 1992 | 190345063 |\n| CHINA    8 | CHINA    4 | 1992 | 174478626 |\n| CHINA    1 | CHINA    7 | 1992 | 173803257 |\n| CHINA    9 | CHINA    9 | 1992 | 162458028 |\n| CHINA    6 | CHINA    0 | 1992 | 154260702 |\n| CHINA    8 | CHINA    0 | 1992 | 149794069 |\n| CHINA    5 | CHINA    9 | 1992 | 149369922 |\n| CHINA    8 | CHINA    8 | 1992 | 147607252 |\n| CHINA    6 | CHINA    4 | 1992 | 147137516 |\n| CHINA    7 | CHINA    8 | 1992 | 139974858 |\n| CHINA    5 | CHINA    6 | 1992 | 138467127 |\n| CHINA    3 | CHINA    6 | 1992 | 119521008 |\n| CHINA    8 | CHINA    7 | 1992 | 109887269 |\n| CHINA    6 | CHINA    3 | 1992 | 107201214 |\n| CHINA    9 | CHINA    4 | 1992 | 101504450 |\n| CHINA    1 | CHINA    3 | 1992 | 101388208 |\n| CHINA    7 | CHINA    0 | 1992 |  98475237 |\n| CHINA    5 | CHINA    8 | 1992 |  98370738 |\n| CHINA    2 | CHINA    6 | 1992 |  93254616 |\n| CHINA    2 | CHINA    4 | 1992 |  86394644 |\n| CHINA    3 | CHINA    7 | 1992 |  81027008 |\n| CHINA    5 | CHINA    4 | 1992 |  78587418 |\n| CHINA    3 | CHINA    9 | 1992 |  78114762 |\n| CHINA    2 | CHINA    0 | 1992 |  77786892 |\n| CHINA    2 | CHINA    8 | 1992 |  75605732 |\n| CHINA    4 | CHINA    3 | 1992 |  75101512 |\n| CHINA    7 | CHINA    4 | 1992 |  74119240 |\n| CHINA    2 | CHINA    9 | 1992 |  73413108 |\n| CHINA    5 | CHINA    7 | 1992 |  73199718 |\n| CHINA    4 | CHINA    4 | 1992 |  72839118 |\n| CHINA    1 | CHINA    9 | 1992 |  68538220 |\n| CHINA    0 | CHINA    8 | 1992 |  65856888 |\n| CHINA    0 | CHINA    9 | 1992 |  65590624 |\n| CHINA    3 | CHINA    8 | 1992 |  64556586 |\n| CHINA    2 | CHINA    7 | 1992 |  63336330 |\n| CHINA    4 | CHINA    9 | 1992 |  57645963 |\n| CHINA    0 | CHINA    7 | 1992 |  55251918 |\n| CHINA    0 | CHINA    1 | 1992 |  51774462 |\n| CHINA    6 | CHINA    8 | 1992 |  45676858 |\n| CHINA    3 | CHINA    3 | 1992 |  41147560 |\n| CHINA    3 | CHINA    4 | 1992 |  36838082 |\n| CHINA    5 | CHINA    0 | 1992 |  36554488 |\n| CHINA    3 | CHINA    1 | 1992 |  32036313 |\n| CHINA    4 | CHINA    8 | 1992 |  31517575 |\n| CHINA    0 | CHINA    3 | 1992 |  25524054 |\n| CHINA    1 | CHINA    4 | 1992 |  12681846 |\n| CHINA    7 | CHINA    3 | 1992 |  11395152 |\n| CHINA    6 | CHINA    9 | 1992 |   8642375 |\n| CHINA    8 | CHINA    6 | 1993 | 638396852 |\n| CHINA    7 | CHINA    6 | 1993 | 576731239 |\n| CHINA    2 | CHINA    6 | 1993 | 528008729 |\n| CHINA    8 | CHINA    9 | 1993 | 522412584 |\n| CHINA    8 | CHINA    7 | 1993 | 475478848 |\n| CHINA    8 | CHINA    1 | 1993 | 452064153 |\n| CHINA    0 | CHINA    1 | 1993 | 425902649 |\n| CHINA    9 | CHINA    1 | 1993 | 405252987 |\n| CHINA    6 | CHINA    9 | 1993 | 385005953 |\n| CHINA    8 | CHINA    8 | 1993 | 382884778 |\n| CHINA    0 | CHINA    6 | 1993 | 344911487 |\n| CHINA    6 | CHINA    7 | 1993 | 341436211 |\n| CHINA    3 | CHINA    6 | 1993 | 291652051 |\n| CHINA    7 | CHINA    1 | 1993 | 257769861 |\n| CHINA    8 | CHINA    0 | 1993 | 231981252 |\n| CHINA    4 | CHINA    6 | 1993 | 215180968 |\n| CHINA    3 | CHINA    0 | 1993 | 213320777 |\n| CHINA    9 | CHINA    6 | 1993 | 207281000 |\n| CHINA    5 | CHINA    9 | 1993 | 206555882 |\n| CHINA    6 | CHINA    1 | 1993 | 205665388 |\n| CHINA    5 | CHINA    1 | 1993 | 193491875 |\n| CHINA    2 | CHINA    9 | 1993 | 193324425 |\n| CHINA    5 | CHINA    8 | 1993 | 190521023 |\n| CHINA    7 | CHINA    0 | 1993 | 183487919 |\n| CHINA    0 | CHINA    9 | 1993 | 170223958 |\n| CHINA    6 | CHINA    8 | 1993 | 166821272 |\n| CHINA    3 | CHINA    8 | 1993 | 163053528 |\n| CHINA    2 | CHINA    0 | 1993 | 158276154 |\n| CHINA    3 | CHINA    1 | 1993 | 153652018 |\n| CHINA    5 | CHINA    6 | 1993 | 151359347 |\n| CHINA    6 | CHINA    0 | 1993 | 140494698 |\n| CHINA    8 | CHINA    4 | 1993 | 139857147 |\n| CHINA    2 | CHINA    7 | 1993 | 136009418 |\n| CHINA    5 | CHINA    7 | 1993 | 133892119 |\n| CHINA    9 | CHINA    9 | 1993 | 118965507 |\n| CHINA    1 | CHINA    1 | 1993 | 108898379 |\n| CHINA    6 | CHINA    6 | 1993 | 100311475 |\n| CHINA    0 | CHINA    4 | 1993 |  93483068 |\n| CHINA    1 | CHINA    4 | 1993 |  87714152 |\n| CHINA    4 | CHINA    1 | 1993 |  87690658 |\n| CHINA    4 | CHINA    7 | 1993 |  83701574 |\n| CHINA    1 | CHINA    0 | 1993 |  82670983 |\n| CHINA    7 | CHINA    4 | 1993 |  77396461 |\n| CHINA    5 | CHINA    4 | 1993 |  73556161 |\n| CHINA    4 | CHINA    8 | 1993 |  72203335 |\n| CHINA    0 | CHINA    7 | 1993 |  70395334 |\n| CHINA    3 | CHINA    4 | 1993 |  64771003 |\n| CHINA    7 | CHINA    8 | 1993 |  64514099 |\n| CHINA    3 | CHINA    7 | 1993 |  62868516 |\n| CHINA    8 | CHINA    3 | 1993 |  56504804 |\n| CHINA    2 | CHINA    4 | 1993 |  56031779 |\n| CHINA    1 | CHINA    7 | 1993 |  48951262 |\n| CHINA    7 | CHINA    3 | 1993 |  45962220 |\n| CHINA    4 | CHINA    9 | 1993 |  43158138 |\n| CHINA    7 | CHINA    9 | 1993 |  42611979 |\n| CHINA    2 | CHINA    8 | 1993 |  38092546 |\n| CHINA    1 | CHINA    9 | 1993 |  29665374 |\n| CHINA    1 | CHINA    3 | 1993 |  23991216 |\n| CHINA    6 | CHINA    6 | 1994 | 596294890 |\n| CHINA    8 | CHINA    6 | 1994 | 542104721 |\n| CHINA    6 | CHINA    1 | 1994 | 504359553 |\n| CHINA    3 | CHINA    7 | 1994 | 476727294 |\n| CHINA    3 | CHINA    6 | 1994 | 476349724 |\n| CHINA    8 | CHINA    9 | 1994 | 427241348 |\n| CHINA    6 | CHINA    9 | 1994 | 358191581 |\n| CHINA    9 | CHINA    6 | 1994 | 352344057 |\n| CHINA    3 | CHINA    0 | 1994 | 351708546 |\n| CHINA    8 | CHINA    0 | 1994 | 351131413 |\n| CHINA    3 | CHINA    3 | 1994 | 339279574 |\n| CHINA    0 | CHINA    1 | 1994 | 298307857 |\n| CHINA    0 | CHINA    7 | 1994 | 289536010 |\n| CHINA    0 | CHINA    6 | 1994 | 285639032 |\n| CHINA    7 | CHINA    6 | 1994 | 263170455 |\n| CHINA    2 | CHINA    8 | 1994 | 250332990 |\n| CHINA    6 | CHINA    4 | 1994 | 235897763 |\n| CHINA    5 | CHINA    1 | 1994 | 234681515 |\n| CHINA    8 | CHINA    7 | 1994 | 234390101 |\n| CHINA    1 | CHINA    6 | 1994 | 232792764 |\n| CHINA    8 | CHINA    1 | 1994 | 223808842 |\n| CHINA    4 | CHINA    6 | 1994 | 209522926 |\n| CHINA    8 | CHINA    4 | 1994 | 208632636 |\n| CHINA    7 | CHINA    3 | 1994 | 202424117 |\n| CHINA    4 | CHINA    7 | 1994 | 185487544 |\n| CHINA    2 | CHINA    7 | 1994 | 183551771 |\n| CHINA    7 | CHINA    1 | 1994 | 178421732 |\n| CHINA    4 | CHINA    1 | 1994 | 176262868 |\n| CHINA    5 | CHINA    6 | 1994 | 173651872 |\n| CHINA    0 | CHINA    4 | 1994 | 173584501 |\n| CHINA    8 | CHINA    8 | 1994 | 172179808 |\n| CHINA    9 | CHINA    1 | 1994 | 169617585 |\n| CHINA    0 | CHINA    9 | 1994 | 167569085 |\n| CHINA    5 | CHINA    8 | 1994 | 162066559 |\n| CHINA    7 | CHINA    9 | 1994 | 161041255 |\n| CHINA    5 | CHINA    4 | 1994 | 154820955 |\n| CHINA    7 | CHINA    0 | 1994 | 152844960 |\n| CHINA    2 | CHINA    6 | 1994 | 149839190 |\n| CHINA    7 | CHINA    8 | 1994 | 149536114 |\n| CHINA    1 | CHINA    4 | 1994 | 142403628 |\n| CHINA    9 | CHINA    9 | 1994 | 131064832 |\n| CHINA    2 | CHINA    1 | 1994 | 124489283 |\n| CHINA    2 | CHINA    0 | 1994 | 114263273 |\n| CHINA    5 | CHINA    7 | 1994 | 113311766 |\n| CHINA    8 | CHINA    3 | 1994 | 112573609 |\n| CHINA    3 | CHINA    4 | 1994 | 104903651 |\n| CHINA    4 | CHINA    0 | 1994 | 101914439 |\n| CHINA    3 | CHINA    1 | 1994 |  98253251 |\n| CHINA    1 | CHINA    7 | 1994 |  94582288 |\n| CHINA    4 | CHINA    4 | 1994 |  92818317 |\n| CHINA    1 | CHINA    9 | 1994 |  85220541 |\n| CHINA    6 | CHINA    3 | 1994 |  84604801 |\n| CHINA    0 | CHINA    3 | 1994 |  77574978 |\n| CHINA    1 | CHINA    3 | 1994 |  74435316 |\n| CHINA    4 | CHINA    9 | 1994 |  72622300 |\n| CHINA    3 | CHINA    8 | 1994 |  72559366 |\n| CHINA    9 | CHINA    0 | 1994 |  69298222 |\n| CHINA    3 | CHINA    9 | 1994 |  67472592 |\n| CHINA    6 | CHINA    8 | 1994 |  66271372 |\n| CHINA    7 | CHINA    4 | 1994 |  59634606 |\n| CHINA    2 | CHINA    9 | 1994 |  56882136 |\n| CHINA    1 | CHINA    1 | 1994 |  56592337 |\n| CHINA    5 | CHINA    9 | 1994 |  52879724 |\n| CHINA    9 | CHINA    4 | 1994 |  49324497 |\n| CHINA    2 | CHINA    3 | 1994 |  45042384 |\n| CHINA    7 | CHINA    7 | 1994 |  44458451 |\n| CHINA    5 | CHINA    0 | 1994 |  39091925 |\n| CHINA    9 | CHINA    3 | 1994 |  39082405 |\n| CHINA    0 | CHINA    8 | 1994 |  28203459 |\n| CHINA    6 | CHINA    7 | 1994 |  27243775 |\n| CHINA    0 | CHINA    0 | 1994 |  15591040 |\n| CHINA    2 | CHINA    6 | 1995 | 832176707 |\n| CHINA    8 | CHINA    6 | 1995 | 793322102 |\n| CHINA    3 | CHINA    7 | 1995 | 505446788 |\n| CHINA    7 | CHINA    9 | 1995 | 483519933 |\n| CHINA    4 | CHINA    6 | 1995 | 440320366 |\n| CHINA    8 | CHINA    1 | 1995 | 394522570 |\n| CHINA    7 | CHINA    1 | 1995 | 393861389 |\n| CHINA    5 | CHINA    1 | 1995 | 343166828 |\n| CHINA    1 | CHINA    7 | 1995 | 341736584 |\n| CHINA    8 | CHINA    7 | 1995 | 323623203 |\n| CHINA    6 | CHINA    6 | 1995 | 312876143 |\n| CHINA    3 | CHINA    6 | 1995 | 306516324 |\n| CHINA    7 | CHINA    6 | 1995 | 294840537 |\n| CHINA    3 | CHINA    3 | 1995 | 290066240 |\n| CHINA    8 | CHINA    3 | 1995 | 289182495 |\n| CHINA    3 | CHINA    1 | 1995 | 288853766 |\n| CHINA    0 | CHINA    1 | 1995 | 279082523 |\n| CHINA    0 | CHINA    8 | 1995 | 265291443 |\n| CHINA    1 | CHINA    6 | 1995 | 262283412 |\n| CHINA    4 | CHINA    1 | 1995 | 246559891 |\n| CHINA    2 | CHINA    8 | 1995 | 246465167 |\n| CHINA    6 | CHINA    7 | 1995 | 246385862 |\n| CHINA    9 | CHINA    6 | 1995 | 231314393 |\n| CHINA    2 | CHINA    7 | 1995 | 224354491 |\n| CHINA    4 | CHINA    7 | 1995 | 222368398 |\n| CHINA    0 | CHINA    7 | 1995 | 221334917 |\n| CHINA    6 | CHINA    3 | 1995 | 217756587 |\n| CHINA    6 | CHINA    9 | 1995 | 215736018 |\n| CHINA    4 | CHINA    9 | 1995 | 210496516 |\n| CHINA    0 | CHINA    6 | 1995 | 197891458 |\n| CHINA    8 | CHINA    9 | 1995 | 192018213 |\n| CHINA    7 | CHINA    0 | 1995 | 188804482 |\n| CHINA    5 | CHINA    6 | 1995 | 186378531 |\n| CHINA    6 | CHINA    1 | 1995 | 165831073 |\n| CHINA    1 | CHINA    3 | 1995 | 165118263 |\n| CHINA    6 | CHINA    8 | 1995 | 157640218 |\n| CHINA    1 | CHINA    1 | 1995 | 150838433 |\n| CHINA    1 | CHINA    4 | 1995 | 147632879 |\n| CHINA    6 | CHINA    0 | 1995 | 147314401 |\n| CHINA    5 | CHINA    4 | 1995 | 142820978 |\n| CHINA    5 | CHINA    9 | 1995 | 141416829 |\n| CHINA    2 | CHINA    0 | 1995 | 135608473 |\n| CHINA    5 | CHINA    7 | 1995 | 131596218 |\n| CHINA    0 | CHINA    4 | 1995 | 129159370 |\n| CHINA    3 | CHINA    9 | 1995 | 126837748 |\n| CHINA    8 | CHINA    0 | 1995 | 126564932 |\n| CHINA    0 | CHINA    3 | 1995 | 121337041 |\n| CHINA    7 | CHINA    7 | 1995 | 118697587 |\n| CHINA    5 | CHINA    8 | 1995 | 116538842 |\n| CHINA    8 | CHINA    8 | 1995 | 110161904 |\n| CHINA    9 | CHINA    0 | 1995 | 109582187 |\n| CHINA    9 | CHINA    1 | 1995 | 103455098 |\n| CHINA    2 | CHINA    1 | 1995 | 100264691 |\n| CHINA    7 | CHINA    3 | 1995 |  99011859 |\n| CHINA    3 | CHINA    0 | 1995 |  90383390 |\n| CHINA    4 | CHINA    3 | 1995 |  89908903 |\n| CHINA    7 | CHINA    8 | 1995 |  81425699 |\n| CHINA    3 | CHINA    4 | 1995 |  77577579 |\n| CHINA    4 | CHINA    8 | 1995 |  74805746 |\n| CHINA    9 | CHINA    7 | 1995 |  74597020 |\n| CHINA    9 | CHINA    9 | 1995 |  73514511 |\n| CHINA    5 | CHINA    0 | 1995 |  73274726 |\n| CHINA    8 | CHINA    4 | 1995 |  61708487 |\n| CHINA    1 | CHINA    0 | 1995 |  58753734 |\n| CHINA    3 | CHINA    8 | 1995 |  57133566 |\n| CHINA    9 | CHINA    4 | 1995 |  53259334 |\n| CHINA    1 | CHINA    9 | 1995 |  46177797 |\n| CHINA    2 | CHINA    4 | 1995 |  45147325 |\n| CHINA    0 | CHINA    0 | 1995 |  43963173 |\n| CHINA    0 | CHINA    9 | 1995 |  40184107 |\n| CHINA    1 | CHINA    8 | 1995 |  18859188 |\n| CHINA    8 | CHINA    7 | 1996 | 621957444 |\n| CHINA    3 | CHINA    9 | 1996 | 530082848 |\n| CHINA    8 | CHINA    6 | 1996 | 525755549 |\n| CHINA    8 | CHINA    1 | 1996 | 399229343 |\n| CHINA    6 | CHINA    7 | 1996 | 365540749 |\n| CHINA    8 | CHINA    8 | 1996 | 351864283 |\n| CHINA    1 | CHINA    6 | 1996 | 329186504 |\n| CHINA    9 | CHINA    6 | 1996 | 321113085 |\n| CHINA    3 | CHINA    6 | 1996 | 318264871 |\n| CHINA    2 | CHINA    6 | 1996 | 315233397 |\n| CHINA    2 | CHINA    9 | 1996 | 285852841 |\n| CHINA    9 | CHINA    9 | 1996 | 264510548 |\n| CHINA    5 | CHINA    6 | 1996 | 261385523 |\n| CHINA    8 | CHINA    9 | 1996 | 259497265 |\n| CHINA    6 | CHINA    6 | 1996 | 258200131 |\n| CHINA    4 | CHINA    9 | 1996 | 257345949 |\n| CHINA    6 | CHINA    9 | 1996 | 247667288 |\n| CHINA    2 | CHINA    7 | 1996 | 234569026 |\n| CHINA    2 | CHINA    1 | 1996 | 218568966 |\n| CHINA    4 | CHINA    1 | 1996 | 207383476 |\n| CHINA    0 | CHINA    1 | 1996 | 204596428 |\n| CHINA    3 | CHINA    0 | 1996 | 204375870 |\n| CHINA    4 | CHINA    0 | 1996 | 202299286 |\n| CHINA    4 | CHINA    4 | 1996 | 191983261 |\n| CHINA    4 | CHINA    8 | 1996 | 183961012 |\n| CHINA    4 | CHINA    6 | 1996 | 183872085 |\n| CHINA    6 | CHINA    8 | 1996 | 182132356 |\n| CHINA    7 | CHINA    9 | 1996 | 170941341 |\n| CHINA    0 | CHINA    6 | 1996 | 168082672 |\n| CHINA    1 | CHINA    7 | 1996 | 165942066 |\n| CHINA    1 | CHINA    9 | 1996 | 165878775 |\n| CHINA    9 | CHINA    8 | 1996 | 156009357 |\n| CHINA    7 | CHINA    7 | 1996 | 155842944 |\n| CHINA    2 | CHINA    0 | 1996 | 147709906 |\n| CHINA    5 | CHINA    7 | 1996 | 147257366 |\n| CHINA    1 | CHINA    8 | 1996 | 141840928 |\n| CHINA    2 | CHINA    4 | 1996 | 136244052 |\n| CHINA    9 | CHINA    0 | 1996 | 130997019 |\n| CHINA    1 | CHINA    0 | 1996 | 124362038 |\n| CHINA    0 | CHINA    9 | 1996 | 114011231 |\n| CHINA    7 | CHINA    3 | 1996 | 112398764 |\n| CHINA    4 | CHINA    7 | 1996 | 110567337 |\n| CHINA    3 | CHINA    4 | 1996 | 109269982 |\n| CHINA    5 | CHINA    1 | 1996 | 107482704 |\n| CHINA    6 | CHINA    4 | 1996 | 105485170 |\n| CHINA    1 | CHINA    4 | 1996 | 105320270 |\n| CHINA    0 | CHINA    7 | 1996 | 102545071 |\n| CHINA    2 | CHINA    3 | 1996 | 100407151 |\n| CHINA    0 | CHINA    4 | 1996 |  95913303 |\n| CHINA    7 | CHINA    0 | 1996 |  94706269 |\n| CHINA    6 | CHINA    1 | 1996 |  86949951 |\n| CHINA    8 | CHINA    3 | 1996 |  84157344 |\n| CHINA    2 | CHINA    8 | 1996 |  83176903 |\n| CHINA    5 | CHINA    9 | 1996 |  83104330 |\n| CHINA    7 | CHINA    8 | 1996 |  81490639 |\n| CHINA    9 | CHINA    3 | 1996 |  79655829 |\n| CHINA    5 | CHINA    0 | 1996 |  77489995 |\n| CHINA    8 | CHINA    0 | 1996 |  76989056 |\n| CHINA    9 | CHINA    1 | 1996 |  72011031 |\n| CHINA    7 | CHINA    4 | 1996 |  64764322 |\n| CHINA    5 | CHINA    4 | 1996 |  62827767 |\n| CHINA    5 | CHINA    8 | 1996 |  62673237 |\n| CHINA    7 | CHINA    6 | 1996 |  61880459 |\n| CHINA    3 | CHINA    7 | 1996 |  56642844 |\n| CHINA    3 | CHINA    1 | 1996 |  50799366 |\n| CHINA    3 | CHINA    3 | 1996 |  42601269 |\n| CHINA    4 | CHINA    3 | 1996 |  38290290 |\n| CHINA    3 | CHINA    8 | 1996 |  21263056 |\n| CHINA    7 | CHINA    1 | 1996 |  14836937 |\n| CHINA    5 | CHINA    3 | 1996 |  13611339 |\n| CHINA    1 | CHINA    3 | 1996 |   8430793 |\n| CHINA    1 | CHINA    1 | 1996 |   1601332 |\n| CHINA    1 | CHINA    7 | 1997 | 664436721 |\n| CHINA    8 | CHINA    9 | 1997 | 585552148 |\n| CHINA    8 | CHINA    6 | 1997 | 543571889 |\n| CHINA    8 | CHINA    7 | 1997 | 516131917 |\n| CHINA    6 | CHINA    7 | 1997 | 467477883 |\n| CHINA    3 | CHINA    9 | 1997 | 444914344 |\n| CHINA    5 | CHINA    6 | 1997 | 353316321 |\n| CHINA    6 | CHINA    4 | 1997 | 338136205 |\n| CHINA    0 | CHINA    7 | 1997 | 329137493 |\n| CHINA    5 | CHINA    1 | 1997 | 328142466 |\n| CHINA    8 | CHINA    4 | 1997 | 308276385 |\n| CHINA    6 | CHINA    9 | 1997 | 306814317 |\n| CHINA    5 | CHINA    9 | 1997 | 301145803 |\n| CHINA    7 | CHINA    1 | 1997 | 299575802 |\n| CHINA    8 | CHINA    8 | 1997 | 282083295 |\n| CHINA    4 | CHINA    9 | 1997 | 280242025 |\n| CHINA    9 | CHINA    1 | 1997 | 253155313 |\n| CHINA    4 | CHINA    6 | 1997 | 234247182 |\n| CHINA    5 | CHINA    0 | 1997 | 217246162 |\n| CHINA    9 | CHINA    4 | 1997 | 215424663 |\n| CHINA    0 | CHINA    6 | 1997 | 211152240 |\n| CHINA    3 | CHINA    6 | 1997 | 205982217 |\n| CHINA    7 | CHINA    6 | 1997 | 196440117 |\n| CHINA    1 | CHINA    6 | 1997 | 195757737 |\n| CHINA    2 | CHINA    3 | 1997 | 189836909 |\n| CHINA    7 | CHINA    8 | 1997 | 189291379 |\n| CHINA    9 | CHINA    6 | 1997 | 189236146 |\n| CHINA    3 | CHINA    1 | 1997 | 188537684 |\n| CHINA    9 | CHINA    7 | 1997 | 182516267 |\n| CHINA    0 | CHINA    0 | 1997 | 182459980 |\n| CHINA    5 | CHINA    8 | 1997 | 177077882 |\n| CHINA    2 | CHINA    6 | 1997 | 176030529 |\n| CHINA    2 | CHINA    1 | 1997 | 168770050 |\n| CHINA    8 | CHINA    0 | 1997 | 167294093 |\n| CHINA    4 | CHINA    3 | 1997 | 161980658 |\n| CHINA    3 | CHINA    4 | 1997 | 154433882 |\n| CHINA    6 | CHINA    6 | 1997 | 153336736 |\n| CHINA    6 | CHINA    3 | 1997 | 151596497 |\n| CHINA    8 | CHINA    1 | 1997 | 145432603 |\n| CHINA    1 | CHINA    4 | 1997 | 126773981 |\n| CHINA    1 | CHINA    0 | 1997 | 120594770 |\n| CHINA    7 | CHINA    3 | 1997 | 119618460 |\n| CHINA    6 | CHINA    1 | 1997 | 119529805 |\n| CHINA    2 | CHINA    9 | 1997 | 114591288 |\n| CHINA    7 | CHINA    7 | 1997 | 111335941 |\n| CHINA    5 | CHINA    3 | 1997 | 111044153 |\n| CHINA    6 | CHINA    0 | 1997 | 104404276 |\n| CHINA    1 | CHINA    1 | 1997 |  98869501 |\n| CHINA    7 | CHINA    0 | 1997 |  97198605 |\n| CHINA    7 | CHINA    9 | 1997 |  92872632 |\n| CHINA    0 | CHINA    9 | 1997 |  91097832 |\n| CHINA    9 | CHINA    9 | 1997 |  86479272 |\n| CHINA    2 | CHINA    7 | 1997 |  79380820 |\n| CHINA    9 | CHINA    0 | 1997 |  78499693 |\n| CHINA    1 | CHINA    9 | 1997 |  73589328 |\n| CHINA    2 | CHINA    8 | 1997 |  71633835 |\n| CHINA    8 | CHINA    3 | 1997 |  70505885 |\n| CHINA    3 | CHINA    0 | 1997 |  61039282 |\n| CHINA    0 | CHINA    3 | 1997 |  58325113 |\n| CHINA    5 | CHINA    7 | 1997 |  55476389 |\n| CHINA    4 | CHINA    7 | 1997 |  46480159 |\n| CHINA    0 | CHINA    1 | 1997 |  38223038 |\n| CHINA    4 | CHINA    1 | 1997 |  21636342 |\n| CHINA    9 | CHINA    3 | 1997 |  13092788 |\n| CHINA    6 | CHINA    8 | 1997 |   2490092 |\n+------------+------------+------+-----------+\n\n-- Q3.3\n+------------+------------+------+-----------+\n| c_city     | s_city     | year | revenue   |\n+------------+------------+------+-----------+\n| UNITED KI0 | UNITED KI7 | 1992 | 251282102 |\n| UNITED KI0 | UNITED KI0 | 1992 | 170005406 |\n| UNITED KI7 | UNITED KI7 | 1992 |  36835396 |\n| UNITED KI0 | UNITED KI7 | 1993 | 560335810 |\n| UNITED KI0 | UNITED KI0 | 1993 | 294257692 |\n| UNITED KI7 | UNITED KI0 | 1993 | 159005896 |\n| UNITED KI7 | UNITED KI7 | 1993 | 139029264 |\n| UNITED KI0 | UNITED KI7 | 1994 | 739847089 |\n| UNITED KI0 | UNITED KI0 | 1994 | 302339390 |\n| UNITED KI7 | UNITED KI7 | 1994 | 275609814 |\n| UNITED KI7 | UNITED KI0 | 1994 | 117654093 |\n| UNITED KI0 | UNITED KI7 | 1995 | 540994655 |\n| UNITED KI0 | UNITED KI0 | 1995 | 230825439 |\n| UNITED KI7 | UNITED KI0 | 1995 | 197347696 |\n| UNITED KI7 | UNITED KI7 | 1995 | 136620517 |\n| UNITED KI0 | UNITED KI7 | 1996 | 448412094 |\n| UNITED KI0 | UNITED KI0 | 1996 | 203511607 |\n| UNITED KI7 | UNITED KI7 | 1996 |  94528075 |\n| UNITED KI7 | UNITED KI0 | 1996 |  35448536 |\n| UNITED KI7 | UNITED KI0 | 1997 | 289323850 |\n| UNITED KI7 | UNITED KI7 | 1997 | 214791175 |\n| UNITED KI0 | UNITED KI7 | 1997 | 196510174 |\n| UNITED KI0 | UNITED KI0 | 1997 | 125066127 |\n+------------+------------+------+-----------+\n\n-- Q3.4\n+------------+------------+------+-----------+\n| c_city     | s_city     | year | revenue   |\n+------------+------------+------+-----------+\n| UNITED KI7 | KENYA    4 | 1997 | 170083300 |\n| UNITED KI0 | MOZAMBIQU1 | 1997 | 155234463 |\n| UNITED KI0 | KENYA    4 | 1997 |  87283610 |\n+------------+------------+------+-----------+\n\n-- Q4.1\n+------+---------------+-------------+\n| year | c_nation      | profit      |\n+------+---------------+-------------+\n| 1992 | ARGENTINA     | 13746243380 |\n| 1992 | BRAZIL        | 15762831144 |\n| 1992 | CANADA        | 17477043721 |\n| 1992 | PERU          | 14698567030 |\n| 1992 | UNITED STATES | 14043501956 |\n| 1993 | ARGENTINA     | 13992888207 |\n| 1993 | BRAZIL        | 15146262693 |\n| 1993 | CANADA        | 12463985574 |\n| 1993 | PERU          | 11385007831 |\n| 1993 | UNITED STATES | 10651361815 |\n| 1994 | ARGENTINA     | 13128610315 |\n| 1994 | BRAZIL        | 13764866493 |\n| 1994 | CANADA        | 13723188154 |\n| 1994 | PERU          | 12784683808 |\n| 1994 | UNITED STATES | 12554422837 |\n| 1995 | ARGENTINA     | 14337205612 |\n| 1995 | BRAZIL        | 15068918320 |\n| 1995 | CANADA        | 14529005783 |\n| 1995 | PERU          | 13086675480 |\n| 1995 | UNITED STATES | 11330297649 |\n| 1996 | ARGENTINA     | 13659108915 |\n| 1996 | BRAZIL        | 12660837584 |\n| 1996 | CANADA        | 14558903190 |\n| 1996 | PERU          | 14162285166 |\n| 1996 | UNITED STATES | 11117076866 |\n| 1997 | ARGENTINA     | 12556399750 |\n| 1997 | BRAZIL        | 13961587144 |\n| 1997 | CANADA        | 15567856947 |\n| 1997 | PERU          | 13595325340 |\n| 1997 | UNITED STATES | 10779073839 |\n| 1998 | ARGENTINA     |  7843424759 |\n| 1998 | BRAZIL        |  8853904827 |\n| 1998 | CANADA        |  8286104334 |\n| 1998 | PERU          |  5822590950 |\n| 1998 | UNITED STATES |  8526236814 |\n+------+---------------+-------------+\n\n-- Q4.2\n+------+---------------+------------+------------+\n| year | s_nation      | p_category | profit     |\n+------+---------------+------------+------------+\n| 1997 | ARGENTINA     | MFGR#11    | 1636950553 |\n| 1997 | ARGENTINA     | MFGR#12    | 1265547847 |\n| 1997 | ARGENTINA     | MFGR#13    | 1505131346 |\n| 1997 | ARGENTINA     | MFGR#14    | 1405447137 |\n| 1997 | ARGENTINA     | MFGR#15    | 1564085340 |\n| 1997 | ARGENTINA     | MFGR#21    | 1335009490 |\n| 1997 | ARGENTINA     | MFGR#22    | 1309054179 |\n| 1997 | ARGENTINA     | MFGR#23    | 1305213794 |\n| 1997 | ARGENTINA     | MFGR#24    | 1089725126 |\n| 1997 | ARGENTINA     | MFGR#25    | 1291995512 |\n| 1997 | BRAZIL        | MFGR#11    |  721240147 |\n| 1997 | BRAZIL        | MFGR#12    |  928318830 |\n| 1997 | BRAZIL        | MFGR#13    | 1164674879 |\n| 1997 | BRAZIL        | MFGR#14    | 1215622587 |\n| 1997 | BRAZIL        | MFGR#15    |  940971658 |\n| 1997 | BRAZIL        | MFGR#21    | 1158909618 |\n| 1997 | BRAZIL        | MFGR#22    | 1251221641 |\n| 1997 | BRAZIL        | MFGR#23    | 1552552455 |\n| 1997 | BRAZIL        | MFGR#24    |  929057361 |\n| 1997 | BRAZIL        | MFGR#25    |  574645288 |\n| 1997 | CANADA        | MFGR#11    | 1170341370 |\n| 1997 | CANADA        | MFGR#12    | 1220238121 |\n| 1997 | CANADA        | MFGR#13    | 1245774025 |\n| 1997 | CANADA        | MFGR#14    | 1032046642 |\n| 1997 | CANADA        | MFGR#15    |  738650612 |\n| 1997 | CANADA        | MFGR#21    | 1476055209 |\n| 1997 | CANADA        | MFGR#22    | 1239005798 |\n| 1997 | CANADA        | MFGR#23    |  869393804 |\n| 1997 | CANADA        | MFGR#24    | 1466964051 |\n| 1997 | CANADA        | MFGR#25    | 1358922727 |\n| 1997 | PERU          | MFGR#11    | 1031023174 |\n| 1997 | PERU          | MFGR#12    |  731821491 |\n| 1997 | PERU          | MFGR#13    | 1044642877 |\n| 1997 | PERU          | MFGR#14    |  654877417 |\n| 1997 | PERU          | MFGR#15    | 1201769474 |\n| 1997 | PERU          | MFGR#21    | 1275496672 |\n| 1997 | PERU          | MFGR#22    |  599324545 |\n| 1997 | PERU          | MFGR#23    | 1200754744 |\n| 1997 | PERU          | MFGR#24    |  942152801 |\n| 1997 | PERU          | MFGR#25    | 1064322995 |\n| 1997 | UNITED STATES | MFGR#11    | 2365218925 |\n| 1997 | UNITED STATES | MFGR#12    | 1132346574 |\n| 1997 | UNITED STATES | MFGR#13    | 2460882362 |\n| 1997 | UNITED STATES | MFGR#14    | 2190816877 |\n| 1997 | UNITED STATES | MFGR#15    | 1687829921 |\n| 1997 | UNITED STATES | MFGR#21    | 2125880770 |\n| 1997 | UNITED STATES | MFGR#22    | 2013348097 |\n| 1997 | UNITED STATES | MFGR#23    | 2570581084 |\n| 1997 | UNITED STATES | MFGR#24    | 2724372315 |\n| 1997 | UNITED STATES | MFGR#25    | 1480012758 |\n| 1998 | ARGENTINA     | MFGR#11    |  783662770 |\n| 1998 | ARGENTINA     | MFGR#12    |  472818450 |\n| 1998 | ARGENTINA     | MFGR#13    |  585091533 |\n| 1998 | ARGENTINA     | MFGR#14    |  507297527 |\n| 1998 | ARGENTINA     | MFGR#15    |  549185408 |\n| 1998 | ARGENTINA     | MFGR#21    |  972928972 |\n| 1998 | ARGENTINA     | MFGR#22    | 1508294213 |\n| 1998 | ARGENTINA     | MFGR#23    |  517896738 |\n| 1998 | ARGENTINA     | MFGR#24    |  240754731 |\n| 1998 | ARGENTINA     | MFGR#25    |  757030162 |\n| 1998 | BRAZIL        | MFGR#11    |  826283793 |\n| 1998 | BRAZIL        | MFGR#12    |  482293349 |\n| 1998 | BRAZIL        | MFGR#13    | 1037202334 |\n| 1998 | BRAZIL        | MFGR#14    |  743598666 |\n| 1998 | BRAZIL        | MFGR#15    |  584176304 |\n| 1998 | BRAZIL        | MFGR#21    |  557259779 |\n| 1998 | BRAZIL        | MFGR#22    |  535654445 |\n| 1998 | BRAZIL        | MFGR#23    |  403656721 |\n| 1998 | BRAZIL        | MFGR#24    | 1305217551 |\n| 1998 | BRAZIL        | MFGR#25    | 1109801463 |\n| 1998 | CANADA        | MFGR#11    |  936169617 |\n| 1998 | CANADA        | MFGR#12    | 1017751308 |\n| 1998 | CANADA        | MFGR#13    |  850046376 |\n| 1998 | CANADA        | MFGR#14    |  808138010 |\n| 1998 | CANADA        | MFGR#15    |  701990010 |\n| 1998 | CANADA        | MFGR#21    |  402611051 |\n| 1998 | CANADA        | MFGR#22    |  382705122 |\n| 1998 | CANADA        | MFGR#23    |  509674722 |\n| 1998 | CANADA        | MFGR#24    | 1003021250 |\n| 1998 | CANADA        | MFGR#25    |  574602788 |\n| 1998 | PERU          | MFGR#11    |  552608732 |\n| 1998 | PERU          | MFGR#12    |  500581456 |\n| 1998 | PERU          | MFGR#13    |  894607711 |\n| 1998 | PERU          | MFGR#14    |  386487826 |\n| 1998 | PERU          | MFGR#15    | 1044780577 |\n| 1998 | PERU          | MFGR#21    |  184346232 |\n| 1998 | PERU          | MFGR#22    |  674942976 |\n| 1998 | PERU          | MFGR#23    |  665523956 |\n| 1998 | PERU          | MFGR#24    |  631374203 |\n| 1998 | PERU          | MFGR#25    |  602609608 |\n| 1998 | UNITED STATES | MFGR#11    | 1230069867 |\n| 1998 | UNITED STATES | MFGR#12    | 1557720319 |\n| 1998 | UNITED STATES | MFGR#13    |  999206739 |\n| 1998 | UNITED STATES | MFGR#14    |  605040268 |\n| 1998 | UNITED STATES | MFGR#15    |  850219215 |\n| 1998 | UNITED STATES | MFGR#21    | 1032550760 |\n| 1998 | UNITED STATES | MFGR#22    | 1370141401 |\n| 1998 | UNITED STATES | MFGR#23    | 1226632297 |\n| 1998 | UNITED STATES | MFGR#24    | 1528135100 |\n| 1998 | UNITED STATES | MFGR#25    | 1127867278 |\n+------+---------------+------------+------------+\n\n-- Q4.3\n+------+------------+-----------+-----------+\n| year | s_city     | p_brand   | profit    |\n+------+------------+-----------+-----------+\n| 1997 | UNITED ST0 | MFGR#1410 |  58481513 |\n| 1997 | UNITED ST0 | MFGR#1412 |  33582225 |\n| 1997 | UNITED ST0 | MFGR#1413 | 135625490 |\n| 1997 | UNITED ST0 | MFGR#1414 |  18581969 |\n| 1997 | UNITED ST0 | MFGR#142  | 164080005 |\n| 1997 | UNITED ST0 | MFGR#1420 |  30831591 |\n| 1997 | UNITED ST0 | MFGR#1424 |   4085253 |\n| 1997 | UNITED ST0 | MFGR#1425 | 163183170 |\n| 1997 | UNITED ST0 | MFGR#1427 |  87578288 |\n| 1997 | UNITED ST0 | MFGR#1428 | 109488143 |\n| 1997 | UNITED ST0 | MFGR#143  | 198055627 |\n| 1997 | UNITED ST0 | MFGR#1430 |  52544552 |\n| 1997 | UNITED ST0 | MFGR#1432 | 158742311 |\n| 1997 | UNITED ST0 | MFGR#144  |  43479982 |\n| 1997 | UNITED ST0 | MFGR#1440 |  40412893 |\n| 1997 | UNITED ST0 | MFGR#145  | 175568435 |\n| 1997 | UNITED ST1 | MFGR#141  |  11932912 |\n| 1997 | UNITED ST1 | MFGR#1411 |  40637463 |\n| 1997 | UNITED ST1 | MFGR#1415 |  27562355 |\n| 1997 | UNITED ST1 | MFGR#1421 | 100271780 |\n| 1997 | UNITED ST1 | MFGR#1422 | 103286764 |\n| 1997 | UNITED ST1 | MFGR#1423 | 106114459 |\n| 1997 | UNITED ST1 | MFGR#1427 | 157715681 |\n| 1997 | UNITED ST1 | MFGR#1428 |  91550168 |\n| 1997 | UNITED ST1 | MFGR#1430 |  56560173 |\n| 1997 | UNITED ST1 | MFGR#1431 | 248448914 |\n| 1997 | UNITED ST1 | MFGR#1435 |    994228 |\n| 1997 | UNITED ST1 | MFGR#144  |  55729825 |\n| 1997 | UNITED ST1 | MFGR#145  | 118034196 |\n| 1997 | UNITED ST1 | MFGR#146  |  99170724 |\n| 1997 | UNITED ST1 | MFGR#147  |   5123001 |\n| 1997 | UNITED ST2 | MFGR#141  | 111908637 |\n| 1997 | UNITED ST2 | MFGR#1414 |  96864725 |\n| 1997 | UNITED ST2 | MFGR#1415 | 123601050 |\n| 1997 | UNITED ST2 | MFGR#1421 |  21014618 |\n| 1997 | UNITED ST2 | MFGR#1427 |  46524767 |\n| 1997 | UNITED ST2 | MFGR#1429 |  18800062 |\n| 1997 | UNITED ST2 | MFGR#1431 |  79199532 |\n| 1997 | UNITED ST2 | MFGR#1432 |  53841788 |\n| 1997 | UNITED ST2 | MFGR#1433 | 133842836 |\n| 1997 | UNITED ST2 | MFGR#1434 |  96443006 |\n| 1997 | UNITED ST2 | MFGR#1435 |  50858424 |\n| 1997 | UNITED ST2 | MFGR#1438 |  64571457 |\n| 1997 | UNITED ST2 | MFGR#144  |  61319000 |\n| 1997 | UNITED ST2 | MFGR#146  |  69558050 |\n| 1997 | UNITED ST2 | MFGR#147  |  41160961 |\n| 1997 | UNITED ST2 | MFGR#149  |  31735872 |\n| 1997 | UNITED ST3 | MFGR#1410 | 306449140 |\n| 1997 | UNITED ST3 | MFGR#1411 | 114677189 |\n| 1997 | UNITED ST3 | MFGR#1412 |  49229127 |\n| 1997 | UNITED ST3 | MFGR#1413 | 174911640 |\n| 1997 | UNITED ST3 | MFGR#1415 | 134932298 |\n| 1997 | UNITED ST3 | MFGR#1416 |  97111854 |\n| 1997 | UNITED ST3 | MFGR#1417 | 176279103 |\n| 1997 | UNITED ST3 | MFGR#1418 |  70684147 |\n| 1997 | UNITED ST3 | MFGR#1420 |  27591782 |\n| 1997 | UNITED ST3 | MFGR#1422 |  39411253 |\n| 1997 | UNITED ST3 | MFGR#1424 | 226736650 |\n| 1997 | UNITED ST3 | MFGR#1426 |  63997112 |\n| 1997 | UNITED ST3 | MFGR#1429 |    556053 |\n| 1997 | UNITED ST3 | MFGR#143  |  73550925 |\n| 1997 | UNITED ST3 | MFGR#1430 | 218807697 |\n| 1997 | UNITED ST3 | MFGR#1431 |  39936281 |\n| 1997 | UNITED ST3 | MFGR#1432 |  44356689 |\n| 1997 | UNITED ST3 | MFGR#1435 |  49225455 |\n| 1997 | UNITED ST3 | MFGR#1436 |  90326644 |\n| 1997 | UNITED ST3 | MFGR#1439 |  84615817 |\n| 1997 | UNITED ST3 | MFGR#144  |  59081596 |\n| 1997 | UNITED ST3 | MFGR#1440 |  59601014 |\n| 1997 | UNITED ST3 | MFGR#145  | 100692258 |\n| 1997 | UNITED ST3 | MFGR#147  | 142417874 |\n| 1997 | UNITED ST3 | MFGR#148  |  38233221 |\n| 1997 | UNITED ST5 | MFGR#1416 |  62387773 |\n| 1997 | UNITED ST5 | MFGR#1417 |  54974702 |\n| 1997 | UNITED ST5 | MFGR#1418 |  87301086 |\n| 1997 | UNITED ST5 | MFGR#1421 |   9869673 |\n| 1997 | UNITED ST5 | MFGR#1422 |  58912225 |\n| 1997 | UNITED ST5 | MFGR#1424 |  80038584 |\n| 1997 | UNITED ST5 | MFGR#1428 |  44422717 |\n| 1997 | UNITED ST5 | MFGR#1430 |  67186074 |\n| 1997 | UNITED ST5 | MFGR#1433 | 105646942 |\n| 1997 | UNITED ST5 | MFGR#1434 |  13923867 |\n| 1997 | UNITED ST5 | MFGR#145  | 104286534 |\n| 1997 | UNITED ST5 | MFGR#146  |  20965182 |\n| 1997 | UNITED ST5 | MFGR#148  | 170596496 |\n| 1997 | UNITED ST5 | MFGR#149  |  42639213 |\n| 1997 | UNITED ST6 | MFGR#1411 |  48199726 |\n| 1997 | UNITED ST6 | MFGR#1413 |  28825982 |\n| 1997 | UNITED ST6 | MFGR#1414 | 107783723 |\n| 1997 | UNITED ST6 | MFGR#1415 |  92119787 |\n| 1997 | UNITED ST6 | MFGR#1416 |  35390328 |\n| 1997 | UNITED ST6 | MFGR#1417 |  92594053 |\n| 1997 | UNITED ST6 | MFGR#1418 |  67638716 |\n| 1997 | UNITED ST6 | MFGR#1421 |  98608466 |\n| 1997 | UNITED ST6 | MFGR#143  |  23938737 |\n| 1997 | UNITED ST6 | MFGR#1432 | 104846191 |\n| 1997 | UNITED ST6 | MFGR#1435 | 185809031 |\n| 1997 | UNITED ST6 | MFGR#1436 |  82920407 |\n| 1997 | UNITED ST6 | MFGR#1438 | 137524730 |\n| 1997 | UNITED ST6 | MFGR#146  |  28124052 |\n| 1997 | UNITED ST7 | MFGR#141  |  65266383 |\n| 1997 | UNITED ST7 | MFGR#1411 |  78295166 |\n| 1997 | UNITED ST7 | MFGR#1413 |  37554700 |\n| 1997 | UNITED ST7 | MFGR#1414 |  20428356 |\n| 1997 | UNITED ST7 | MFGR#1416 |  92381468 |\n| 1997 | UNITED ST7 | MFGR#1418 | 105276410 |\n| 1997 | UNITED ST7 | MFGR#1419 | 116086880 |\n| 1997 | UNITED ST7 | MFGR#1420 |  62010492 |\n| 1997 | UNITED ST7 | MFGR#1428 |  50904528 |\n| 1997 | UNITED ST7 | MFGR#1430 | 103558679 |\n| 1997 | UNITED ST7 | MFGR#1431 |  38342548 |\n| 1997 | UNITED ST7 | MFGR#1436 |  59859992 |\n| 1997 | UNITED ST7 | MFGR#1437 |  90701341 |\n| 1997 | UNITED ST7 | MFGR#147  | 133840269 |\n| 1997 | UNITED ST7 | MFGR#148  | 175852097 |\n| 1997 | UNITED ST9 | MFGR#1411 |  62786695 |\n| 1997 | UNITED ST9 | MFGR#1416 |  25354497 |\n| 1997 | UNITED ST9 | MFGR#1417 |  47367797 |\n| 1997 | UNITED ST9 | MFGR#1418 |  27220077 |\n| 1997 | UNITED ST9 | MFGR#142  |  41015203 |\n| 1997 | UNITED ST9 | MFGR#1423 |  41473506 |\n| 1997 | UNITED ST9 | MFGR#1424 |  10735092 |\n| 1997 | UNITED ST9 | MFGR#1425 |  27926087 |\n| 1997 | UNITED ST9 | MFGR#1426 | 136645966 |\n| 1997 | UNITED ST9 | MFGR#1430 |  41283531 |\n| 1997 | UNITED ST9 | MFGR#1433 |    497505 |\n| 1997 | UNITED ST9 | MFGR#1434 | 101147110 |\n| 1997 | UNITED ST9 | MFGR#1436 |  30923170 |\n| 1997 | UNITED ST9 | MFGR#145  |  18049495 |\n| 1997 | UNITED ST9 | MFGR#146  |  43726737 |\n| 1998 | UNITED ST0 | MFGR#1413 | 131487843 |\n| 1998 | UNITED ST0 | MFGR#1426 |  52942692 |\n| 1998 | UNITED ST0 | MFGR#146  |  13567224 |\n| 1998 | UNITED ST1 | MFGR#1410 |  65992198 |\n| 1998 | UNITED ST1 | MFGR#1416 | 115552383 |\n| 1998 | UNITED ST1 | MFGR#1418 |  15646035 |\n| 1998 | UNITED ST1 | MFGR#1419 | 129708776 |\n| 1998 | UNITED ST1 | MFGR#1428 |  18176281 |\n| 1998 | UNITED ST1 | MFGR#1431 |  17985830 |\n| 1998 | UNITED ST1 | MFGR#1436 |  16714417 |\n| 1998 | UNITED ST1 | MFGR#145  |  48297153 |\n| 1998 | UNITED ST2 | MFGR#1418 |   9240384 |\n| 1998 | UNITED ST2 | MFGR#1419 |  40909344 |\n| 1998 | UNITED ST2 | MFGR#1420 |  78625306 |\n| 1998 | UNITED ST2 | MFGR#1426 |  67161050 |\n| 1998 | UNITED ST2 | MFGR#1430 |  19028508 |\n| 1998 | UNITED ST2 | MFGR#1434 | 127804385 |\n| 1998 | UNITED ST2 | MFGR#1435 |  75092689 |\n| 1998 | UNITED ST2 | MFGR#1436 |  54579894 |\n| 1998 | UNITED ST2 | MFGR#1440 |  29067722 |\n| 1998 | UNITED ST2 | MFGR#148  |  78886426 |\n| 1998 | UNITED ST3 | MFGR#141  |   4311846 |\n| 1998 | UNITED ST3 | MFGR#1412 |  98979253 |\n| 1998 | UNITED ST3 | MFGR#1415 | 102275672 |\n| 1998 | UNITED ST3 | MFGR#1416 |  50781431 |\n| 1998 | UNITED ST3 | MFGR#1419 |  37451476 |\n| 1998 | UNITED ST3 | MFGR#1420 |  24660608 |\n| 1998 | UNITED ST3 | MFGR#1422 |  98548762 |\n| 1998 | UNITED ST3 | MFGR#1424 |  96601854 |\n| 1998 | UNITED ST3 | MFGR#1425 |  74508450 |\n| 1998 | UNITED ST3 | MFGR#1426 | 330583054 |\n| 1998 | UNITED ST3 | MFGR#1427 |  41352585 |\n| 1998 | UNITED ST3 | MFGR#1428 |  61979722 |\n| 1998 | UNITED ST3 | MFGR#1429 |    869295 |\n| 1998 | UNITED ST3 | MFGR#1432 |  66991135 |\n| 1998 | UNITED ST3 | MFGR#146  |  35929398 |\n| 1998 | UNITED ST3 | MFGR#147  |   8484972 |\n| 1998 | UNITED ST3 | MFGR#149  |  11793257 |\n| 1998 | UNITED ST5 | MFGR#1410 |  55951811 |\n| 1998 | UNITED ST5 | MFGR#1413 |  13403140 |\n| 1998 | UNITED ST5 | MFGR#142  |  24156762 |\n| 1998 | UNITED ST5 | MFGR#1422 | 105826683 |\n| 1998 | UNITED ST5 | MFGR#1430 |  67851607 |\n| 1998 | UNITED ST5 | MFGR#1431 |  84833774 |\n| 1998 | UNITED ST5 | MFGR#1434 |  45541810 |\n| 1998 | UNITED ST5 | MFGR#1437 |  33353745 |\n| 1998 | UNITED ST5 | MFGR#146  |  19891496 |\n| 1998 | UNITED ST6 | MFGR#1413 | 135522572 |\n| 1998 | UNITED ST6 | MFGR#1416 | 185707286 |\n| 1998 | UNITED ST6 | MFGR#1417 |  80511133 |\n| 1998 | UNITED ST6 | MFGR#1419 | 127132766 |\n| 1998 | UNITED ST6 | MFGR#142  |  72629474 |\n| 1998 | UNITED ST6 | MFGR#1435 | 158543190 |\n| 1998 | UNITED ST7 | MFGR#1412 |  56750777 |\n| 1998 | UNITED ST7 | MFGR#1424 |  89508621 |\n| 1998 | UNITED ST7 | MFGR#1425 | 160377031 |\n| 1998 | UNITED ST7 | MFGR#1434 |  20882477 |\n| 1998 | UNITED ST7 | MFGR#146  | 100783548 |\n| 1998 | UNITED ST7 | MFGR#147  |  61595522 |\n| 1998 | UNITED ST9 | MFGR#1412 |   5049765 |\n| 1998 | UNITED ST9 | MFGR#142  |  69919113 |\n| 1998 | UNITED ST9 | MFGR#1425 |  11003199 |\n| 1998 | UNITED ST9 | MFGR#1426 | 103616972 |\n| 1998 | UNITED ST9 | MFGR#1435 |  18879758 |\n| 1998 | UNITED ST9 | MFGR#1438 | 101903219 |\n+------+------------+-----------+-----------+\n</code></pre>"},{"location":"MatrixOne/Test/performance-testing/SSB-test-with-matrixone/#multiple-tables-queries-expected-results","title":"Multiple tables queries expected results","text":"<pre><code>-- Q1.1\n+--------------+\n| revenue      |\n+--------------+\n| 218453880421 |\n+--------------+\n\n-- Q1.2\n+---------+\n| revenue |\n+---------+\n|    NULL |\n+---------+\n\n-- Q1.3\n+-------------+\n| revenue     |\n+-------------+\n| 17527575453 |\n+-------------+\n\n-- Q2.1\n+------------+------+-----------+\n| lo_revenue | year | p_brand   |\n+------------+------+-----------+\n| 1135676414 | 1992 | MFGR#121  |\n| 1221327580 | 1992 | MFGR#1210 |\n| 1101539324 | 1992 | MFGR#1211 |\n| 1298411712 | 1992 | MFGR#1212 |\n| 1248062482 | 1992 | MFGR#1213 |\n| 1340976936 | 1992 | MFGR#1214 |\n| 1266304940 | 1992 | MFGR#1215 |\n| 1349693562 | 1992 | MFGR#1216 |\n| 1350186870 | 1992 | MFGR#1217 |\n| 1200404140 | 1992 | MFGR#1218 |\n| 1076087188 | 1992 | MFGR#1219 |\n| 1310653344 | 1992 | MFGR#122  |\n| 1080525764 | 1992 | MFGR#1220 |\n| 1112241266 | 1992 | MFGR#1221 |\n| 1181525554 | 1992 | MFGR#1222 |\n| 1070897302 | 1992 | MFGR#1223 |\n| 1407505222 | 1992 | MFGR#1224 |\n| 1141665736 | 1992 | MFGR#1225 |\n| 1228123186 | 1992 | MFGR#1226 |\n| 1163518776 | 1992 | MFGR#1227 |\n| 1289285184 | 1992 | MFGR#1228 |\n| 1281716860 | 1992 | MFGR#1229 |\n| 1579511670 | 1992 | MFGR#123  |\n|  937070174 | 1992 | MFGR#1230 |\n| 1184873312 | 1992 | MFGR#1231 |\n| 1328550304 | 1992 | MFGR#1232 |\n| 1227770200 | 1992 | MFGR#1233 |\n| 1334798562 | 1992 | MFGR#1234 |\n| 1280580140 | 1992 | MFGR#1235 |\n| 1003785122 | 1992 | MFGR#1236 |\n| 1182963006 | 1992 | MFGR#1237 |\n|  954847540 | 1992 | MFGR#1238 |\n| 1276518748 | 1992 | MFGR#1239 |\n| 1144708392 | 1992 | MFGR#124  |\n| 1480958496 | 1992 | MFGR#1240 |\n|  957554190 | 1992 | MFGR#125  |\n| 1184349232 | 1992 | MFGR#126  |\n| 1412303264 | 1992 | MFGR#127  |\n| 1084613292 | 1992 | MFGR#128  |\n| 1163974704 | 1992 | MFGR#129  |\n| 1646175404 | 1993 | MFGR#121  |\n| 1296321412 | 1993 | MFGR#1210 |\n| 1269487796 | 1993 | MFGR#1211 |\n| 1571278566 | 1993 | MFGR#1212 |\n| 1276510058 | 1993 | MFGR#1213 |\n| 1233674474 | 1993 | MFGR#1214 |\n| 1269375950 | 1993 | MFGR#1215 |\n| 1276707800 | 1993 | MFGR#1216 |\n| 1326745902 | 1993 | MFGR#1217 |\n| 1367971710 | 1993 | MFGR#1218 |\n| 1293900066 | 1993 | MFGR#1219 |\n| 1245065968 | 1993 | MFGR#122  |\n| 1061660254 | 1993 | MFGR#1220 |\n| 1086692674 | 1993 | MFGR#1221 |\n| 1513842406 | 1993 | MFGR#1222 |\n| 1067088700 | 1993 | MFGR#1223 |\n| 1831832170 | 1993 | MFGR#1224 |\n|  946014762 | 1993 | MFGR#1225 |\n| 1478072248 | 1993 | MFGR#1226 |\n| 1184357774 | 1993 | MFGR#1227 |\n| 1167014116 | 1993 | MFGR#1228 |\n| 1234906982 | 1993 | MFGR#1229 |\n| 1275727736 | 1993 | MFGR#123  |\n| 1251068620 | 1993 | MFGR#1230 |\n| 1160655270 | 1993 | MFGR#1231 |\n| 1394746196 | 1993 | MFGR#1232 |\n| 1031142832 | 1993 | MFGR#1233 |\n| 1303871516 | 1993 | MFGR#1234 |\n| 1151558960 | 1993 | MFGR#1235 |\n| 1183757334 | 1993 | MFGR#1236 |\n| 1219237152 | 1993 | MFGR#1237 |\n|  889228020 | 1993 | MFGR#1238 |\n| 1190512654 | 1993 | MFGR#1239 |\n| 1321172474 | 1993 | MFGR#124  |\n| 1577460118 | 1993 | MFGR#1240 |\n| 1232449078 | 1993 | MFGR#125  |\n| 1234253508 | 1993 | MFGR#126  |\n| 1308876648 | 1993 | MFGR#127  |\n| 1463314002 | 1993 | MFGR#128  |\n| 1096096790 | 1993 | MFGR#129  |\n| 1128811296 | 1994 | MFGR#121  |\n| 1290809698 | 1994 | MFGR#1210 |\n| 1263241270 | 1994 | MFGR#1211 |\n| 1136664696 | 1994 | MFGR#1212 |\n| 1357571714 | 1994 | MFGR#1213 |\n| 1068004660 | 1994 | MFGR#1214 |\n| 1308800484 | 1994 | MFGR#1215 |\n| 1117292682 | 1994 | MFGR#1216 |\n| 1375691282 | 1994 | MFGR#1217 |\n| 1093348694 | 1994 | MFGR#1218 |\n| 1134545884 | 1994 | MFGR#1219 |\n| 1319768124 | 1994 | MFGR#122  |\n| 1125164344 | 1994 | MFGR#1220 |\n| 1197237994 | 1994 | MFGR#1221 |\n| 1202032882 | 1994 | MFGR#1222 |\n| 1110268808 | 1994 | MFGR#1223 |\n| 1474844604 | 1994 | MFGR#1224 |\n| 1141491910 | 1994 | MFGR#1225 |\n| 1492604490 | 1994 | MFGR#1226 |\n| 1303414962 | 1994 | MFGR#1227 |\n| 1147387094 | 1994 | MFGR#1228 |\n| 1295836746 | 1994 | MFGR#1229 |\n| 1160899184 | 1994 | MFGR#123  |\n|  986540824 | 1994 | MFGR#1230 |\n| 1207092296 | 1994 | MFGR#1231 |\n| 1439730662 | 1994 | MFGR#1232 |\n| 1277964476 | 1994 | MFGR#1233 |\n| 1486495354 | 1994 | MFGR#1234 |\n| 1197361918 | 1994 | MFGR#1235 |\n| 1231452194 | 1994 | MFGR#1236 |\n| 1085139630 | 1994 | MFGR#1237 |\n| 1147021562 | 1994 | MFGR#1238 |\n| 1159711706 | 1994 | MFGR#1239 |\n| 1369146644 | 1994 | MFGR#124  |\n| 1747471474 | 1994 | MFGR#1240 |\n| 1120976608 | 1994 | MFGR#125  |\n| 1314073028 | 1994 | MFGR#126  |\n| 1245142366 | 1994 | MFGR#127  |\n| 1173691328 | 1994 | MFGR#128  |\n| 1069083050 | 1994 | MFGR#129  |\n| 1412939022 | 1995 | MFGR#121  |\n| 1205785606 | 1995 | MFGR#1210 |\n| 1290332184 | 1995 | MFGR#1211 |\n| 1226578566 | 1995 | MFGR#1212 |\n| 1199172958 | 1995 | MFGR#1213 |\n| 1125141608 | 1995 | MFGR#1214 |\n| 1345057510 | 1995 | MFGR#1215 |\n| 1338001944 | 1995 | MFGR#1216 |\n| 1450724898 | 1995 | MFGR#1217 |\n| 1314053270 | 1995 | MFGR#1218 |\n| 1039318006 | 1995 | MFGR#1219 |\n| 1449455482 | 1995 | MFGR#122  |\n| 1035912262 | 1995 | MFGR#1220 |\n| 1271482702 | 1995 | MFGR#1221 |\n| 1128736820 | 1995 | MFGR#1222 |\n| 1201330298 | 1995 | MFGR#1223 |\n| 1525400702 | 1995 | MFGR#1224 |\n| 1343339172 | 1995 | MFGR#1225 |\n| 1145137496 | 1995 | MFGR#1226 |\n| 1060722600 | 1995 | MFGR#1227 |\n| 1266714170 | 1995 | MFGR#1228 |\n| 1095920488 | 1995 | MFGR#1229 |\n| 1321422154 | 1995 | MFGR#123  |\n| 1205471716 | 1995 | MFGR#1230 |\n|  999704292 | 1995 | MFGR#1231 |\n| 1430601506 | 1995 | MFGR#1232 |\n| 1114299142 | 1995 | MFGR#1233 |\n| 1420046118 | 1995 | MFGR#1234 |\n| 1244850478 | 1995 | MFGR#1235 |\n| 1269131002 | 1995 | MFGR#1236 |\n| 1145694540 | 1995 | MFGR#1237 |\n| 1098637824 | 1995 | MFGR#1238 |\n| 1187703424 | 1995 | MFGR#1239 |\n| 1170843630 | 1995 | MFGR#124  |\n| 1414415776 | 1995 | MFGR#1240 |\n| 1076493744 | 1995 | MFGR#125  |\n| 1211598042 | 1995 | MFGR#126  |\n| 1331956224 | 1995 | MFGR#127  |\n| 1293921912 | 1995 | MFGR#128  |\n| 1017498802 | 1995 | MFGR#129  |\n| 1047758290 | 1996 | MFGR#121  |\n| 1287290106 | 1996 | MFGR#1210 |\n| 1190130678 | 1996 | MFGR#1211 |\n| 1349252880 | 1996 | MFGR#1212 |\n|  992594174 | 1996 | MFGR#1213 |\n| 1166499010 | 1996 | MFGR#1214 |\n| 1404369714 | 1996 | MFGR#1215 |\n| 1203618668 | 1996 | MFGR#1216 |\n| 1409796774 | 1996 | MFGR#1217 |\n| 1057686172 | 1996 | MFGR#1218 |\n| 1172492660 | 1996 | MFGR#1219 |\n| 1424220984 | 1996 | MFGR#122  |\n| 1036888430 | 1996 | MFGR#1220 |\n|  998638828 | 1996 | MFGR#1221 |\n| 1358938712 | 1996 | MFGR#1222 |\n| 1257525508 | 1996 | MFGR#1223 |\n| 1449689712 | 1996 | MFGR#1224 |\n| 1321241174 | 1996 | MFGR#1225 |\n| 1335349458 | 1996 | MFGR#1226 |\n|  967676170 | 1996 | MFGR#1227 |\n| 1219710782 | 1996 | MFGR#1228 |\n| 1317919114 | 1996 | MFGR#1229 |\n| 1132435704 | 1996 | MFGR#123  |\n| 1057759996 | 1996 | MFGR#1230 |\n| 1178962388 | 1996 | MFGR#1231 |\n| 1405611792 | 1996 | MFGR#1232 |\n| 1327359894 | 1996 | MFGR#1233 |\n| 1142298900 | 1996 | MFGR#1234 |\n|  957296148 | 1996 | MFGR#1235 |\n| 1136498730 | 1996 | MFGR#1236 |\n| 1185232334 | 1996 | MFGR#1237 |\n|  933352296 | 1996 | MFGR#1238 |\n| 1341387438 | 1996 | MFGR#1239 |\n| 1121335438 | 1996 | MFGR#124  |\n| 1642335900 | 1996 | MFGR#1240 |\n|  953728666 | 1996 | MFGR#125  |\n| 1116061768 | 1996 | MFGR#126  |\n| 1271747782 | 1996 | MFGR#127  |\n| 1102021236 | 1996 | MFGR#128  |\n| 1121141260 | 1996 | MFGR#129  |\n| 1174026414 | 1997 | MFGR#121  |\n| 1232575784 | 1997 | MFGR#1210 |\n| 1097177522 | 1997 | MFGR#1211 |\n| 1179187784 | 1997 | MFGR#1212 |\n|  848613340 | 1997 | MFGR#1213 |\n| 1023943820 | 1997 | MFGR#1214 |\n| 1263544492 | 1997 | MFGR#1215 |\n| 1384270280 | 1997 | MFGR#1216 |\n| 1555989914 | 1997 | MFGR#1217 |\n| 1414107440 | 1997 | MFGR#1218 |\n| 1122339054 | 1997 | MFGR#1219 |\n| 1329832490 | 1997 | MFGR#122  |\n| 1188932314 | 1997 | MFGR#1220 |\n| 1177696342 | 1997 | MFGR#1221 |\n| 1057977920 | 1997 | MFGR#1222 |\n| 1074196422 | 1997 | MFGR#1223 |\n| 1349526332 | 1997 | MFGR#1224 |\n|  900804584 | 1997 | MFGR#1225 |\n| 1402721444 | 1997 | MFGR#1226 |\n| 1012023140 | 1997 | MFGR#1227 |\n| 1171157474 | 1997 | MFGR#1228 |\n| 1245488032 | 1997 | MFGR#1229 |\n| 1293006336 | 1997 | MFGR#123  |\n| 1143601882 | 1997 | MFGR#1230 |\n| 1005203580 | 1997 | MFGR#1231 |\n| 1355849312 | 1997 | MFGR#1232 |\n| 1068911952 | 1997 | MFGR#1233 |\n| 1429869430 | 1997 | MFGR#1234 |\n| 1534302840 | 1997 | MFGR#1235 |\n| 1237754358 | 1997 | MFGR#1236 |\n| 1279276114 | 1997 | MFGR#1237 |\n|  803906838 | 1997 | MFGR#1238 |\n| 1221513428 | 1997 | MFGR#1239 |\n| 1086496174 | 1997 | MFGR#124  |\n| 1350265384 | 1997 | MFGR#1240 |\n|  958198730 | 1997 | MFGR#125  |\n| 1141393136 | 1997 | MFGR#126  |\n| 1166149184 | 1997 | MFGR#127  |\n| 1390266208 | 1997 | MFGR#128  |\n| 1311277552 | 1997 | MFGR#129  |\n|  689151850 | 1998 | MFGR#121  |\n|  834304832 | 1998 | MFGR#1210 |\n|  634136336 | 1998 | MFGR#1211 |\n|  748683032 | 1998 | MFGR#1212 |\n|  665481806 | 1998 | MFGR#1213 |\n|  609746004 | 1998 | MFGR#1214 |\n|  732202264 | 1998 | MFGR#1215 |\n|  758267796 | 1998 | MFGR#1216 |\n|  719016994 | 1998 | MFGR#1217 |\n|  641246668 | 1998 | MFGR#1218 |\n|  692365724 | 1998 | MFGR#1219 |\n|  624880054 | 1998 | MFGR#122  |\n|  696247922 | 1998 | MFGR#1220 |\n|  679690796 | 1998 | MFGR#1221 |\n|  710832322 | 1998 | MFGR#1222 |\n|  689779644 | 1998 | MFGR#1223 |\n|  793813382 | 1998 | MFGR#1224 |\n|  580417756 | 1998 | MFGR#1225 |\n|  838831414 | 1998 | MFGR#1226 |\n|  716932680 | 1998 | MFGR#1227 |\n|  503099910 | 1998 | MFGR#1228 |\n|  766277720 | 1998 | MFGR#1229 |\n|  592661122 | 1998 | MFGR#123  |\n|  874362486 | 1998 | MFGR#1230 |\n|  797888984 | 1998 | MFGR#1231 |\n|  848124910 | 1998 | MFGR#1232 |\n|  813934376 | 1998 | MFGR#1233 |\n|  857734480 | 1998 | MFGR#1234 |\n|  704555562 | 1998 | MFGR#1235 |\n|  723654172 | 1998 | MFGR#1236 |\n|  683237138 | 1998 | MFGR#1237 |\n|  489478462 | 1998 | MFGR#1238 |\n|  828303606 | 1998 | MFGR#1239 |\n|  660164742 | 1998 | MFGR#124  |\n|  830624906 | 1998 | MFGR#1240 |\n|  720579248 | 1998 | MFGR#125  |\n|  683315160 | 1998 | MFGR#126  |\n|  755014122 | 1998 | MFGR#127  |\n|  722832994 | 1998 | MFGR#128  |\n|  637539146 | 1998 | MFGR#129  |\n+------------+------+-----------+\n\n-- Q2.2\n+------------+------+-----------+\n| lo_revenue | year | p_brand   |\n+------------+------+-----------+\n| 1419049858 | 1992 | MFGR#2221 |\n| 1567692788 | 1992 | MFGR#2222 |\n| 1530104004 | 1992 | MFGR#2223 |\n| 1302977924 | 1992 | MFGR#2224 |\n| 1293057178 | 1992 | MFGR#2225 |\n| 1419301096 | 1992 | MFGR#2226 |\n| 1491112632 | 1992 | MFGR#2227 |\n| 1513803750 | 1992 | MFGR#2228 |\n| 1533042206 | 1993 | MFGR#2221 |\n| 1382951194 | 1993 | MFGR#2222 |\n| 1516441504 | 1993 | MFGR#2223 |\n| 1339325414 | 1993 | MFGR#2224 |\n| 1547708456 | 1993 | MFGR#2225 |\n| 1474175036 | 1993 | MFGR#2226 |\n| 1563935532 | 1993 | MFGR#2227 |\n| 1361760432 | 1993 | MFGR#2228 |\n| 1371555036 | 1994 | MFGR#2221 |\n| 1333049614 | 1994 | MFGR#2222 |\n| 1467987180 | 1994 | MFGR#2223 |\n| 1415738080 | 1994 | MFGR#2224 |\n| 1442503934 | 1994 | MFGR#2225 |\n| 1644991838 | 1994 | MFGR#2226 |\n| 1441674256 | 1994 | MFGR#2227 |\n| 1652450700 | 1994 | MFGR#2228 |\n| 1550874148 | 1995 | MFGR#2221 |\n| 1522709584 | 1995 | MFGR#2222 |\n| 1275665150 | 1995 | MFGR#2223 |\n| 1179531414 | 1995 | MFGR#2224 |\n| 1416580078 | 1995 | MFGR#2225 |\n| 1494712766 | 1995 | MFGR#2226 |\n| 1605005080 | 1995 | MFGR#2227 |\n| 1791873572 | 1995 | MFGR#2228 |\n| 1400020016 | 1996 | MFGR#2221 |\n| 1554620170 | 1996 | MFGR#2222 |\n| 1312190628 | 1996 | MFGR#2223 |\n| 1313719834 | 1996 | MFGR#2224 |\n| 1531641792 | 1996 | MFGR#2225 |\n| 1616355468 | 1996 | MFGR#2226 |\n| 1459126606 | 1996 | MFGR#2227 |\n| 1639331748 | 1996 | MFGR#2228 |\n| 1454684764 | 1997 | MFGR#2221 |\n| 1329067558 | 1997 | MFGR#2222 |\n| 1496576784 | 1997 | MFGR#2223 |\n| 1260844162 | 1997 | MFGR#2224 |\n| 1514782406 | 1997 | MFGR#2225 |\n| 1495778514 | 1997 | MFGR#2226 |\n| 1457715798 | 1997 | MFGR#2227 |\n| 1550625970 | 1997 | MFGR#2228 |\n|  670609008 | 1998 | MFGR#2221 |\n|  818694274 | 1998 | MFGR#2222 |\n|  918219154 | 1998 | MFGR#2223 |\n|  826636144 | 1998 | MFGR#2224 |\n|  820804190 | 1998 | MFGR#2225 |\n|  907030088 | 1998 | MFGR#2226 |\n|  781012810 | 1998 | MFGR#2227 |\n|  795878206 | 1998 | MFGR#2228 |\n+------------+------+-----------+\n\n-- Q2.3\n+------------+------+-----------+\n| lo_revenue | year | p_brand   |\n+------------+------+-----------+\n| 1452854972 | 1992 | MFGR#2239 |\n| 1410477918 | 1993 | MFGR#2239 |\n| 1328290268 | 1994 | MFGR#2239 |\n| 1427678672 | 1995 | MFGR#2239 |\n| 1456985730 | 1996 | MFGR#2239 |\n| 1467793064 | 1997 | MFGR#2239 |\n|  760511462 | 1998 | MFGR#2239 |\n+------------+------+-----------+\n\n-- Q3.1\n+-----------+-----------+------+-------------+\n| c_nation  | s_nation  | year | lo_revenue  |\n+-----------+-----------+------+-------------+\n| INDONESIA | INDONESIA | 1992 | 13811397976 |\n| CHINA     | INDONESIA | 1992 | 13232157738 |\n| CHINA     | CHINA     | 1992 | 12912862954 |\n| VIETNAM   | INDONESIA | 1992 | 12680363414 |\n| VIETNAM   | CHINA     | 1992 | 12665688780 |\n| INDONESIA | CHINA     | 1992 | 12621419066 |\n| INDIA     | INDONESIA | 1992 | 12477614708 |\n| JAPAN     | INDONESIA | 1992 | 12445131276 |\n| CHINA     | INDIA     | 1992 | 12379662702 |\n| CHINA     | JAPAN     | 1992 | 12315357786 |\n| JAPAN     | CHINA     | 1992 | 12134201310 |\n| INDIA     | CHINA     | 1992 | 12132923622 |\n| VIETNAM   | JAPAN     | 1992 | 11727572698 |\n| JAPAN     | INDIA     | 1992 | 11605499970 |\n| INDONESIA | INDIA     | 1992 | 11540406436 |\n| VIETNAM   | INDIA     | 1992 | 11397022802 |\n| INDONESIA | JAPAN     | 1992 | 11327531220 |\n| JAPAN     | JAPAN     | 1992 | 11296069422 |\n| INDIA     | JAPAN     | 1992 | 10843918562 |\n| CHINA     | VIETNAM   | 1992 | 10824644052 |\n| JAPAN     | VIETNAM   | 1992 | 10803385110 |\n| INDIA     | INDIA     | 1992 | 10722487510 |\n| INDONESIA | VIETNAM   | 1992 | 10605276744 |\n| INDIA     | VIETNAM   | 1992 | 10490661242 |\n| VIETNAM   | VIETNAM   | 1992 | 10223463556 |\n| INDONESIA | INDONESIA | 1993 | 13862726524 |\n| INDONESIA | CHINA     | 1993 | 13225782498 |\n| CHINA     | INDONESIA | 1993 | 13163026732 |\n| VIETNAM   | INDONESIA | 1993 | 13023278704 |\n| CHINA     | CHINA     | 1993 | 12889027574 |\n| CHINA     | INDIA     | 1993 | 12843388242 |\n| VIETNAM   | CHINA     | 1993 | 12827159998 |\n| INDIA     | INDONESIA | 1993 | 12662117188 |\n| JAPAN     | CHINA     | 1993 | 12584587990 |\n| INDIA     | CHINA     | 1993 | 12418707584 |\n| CHINA     | JAPAN     | 1993 | 12390933768 |\n| VIETNAM   | INDIA     | 1993 | 12322348954 |\n| INDONESIA | INDIA     | 1993 | 12303328612 |\n| INDONESIA | JAPAN     | 1993 | 12295210498 |\n| JAPAN     | INDONESIA | 1993 | 12107892626 |\n| INDIA     | JAPAN     | 1993 | 11990417970 |\n| CHINA     | VIETNAM   | 1993 | 11770046456 |\n| VIETNAM   | JAPAN     | 1993 | 11748533734 |\n| INDONESIA | VIETNAM   | 1993 | 11680575444 |\n| JAPAN     | INDIA     | 1993 | 11646686314 |\n| INDIA     | INDIA     | 1993 | 11143151598 |\n| VIETNAM   | VIETNAM   | 1993 | 11108322366 |\n| JAPAN     | JAPAN     | 1993 | 10860637166 |\n| JAPAN     | VIETNAM   | 1993 | 10813139306 |\n| INDIA     | VIETNAM   | 1993 | 10467742974 |\n| VIETNAM   | CHINA     | 1994 | 13419766884 |\n| CHINA     | CHINA     | 1994 | 13297885930 |\n| INDONESIA | CHINA     | 1994 | 12967201820 |\n| CHINA     | JAPAN     | 1994 | 12698074042 |\n| VIETNAM   | INDONESIA | 1994 | 12694883862 |\n| JAPAN     | CHINA     | 1994 | 12640018436 |\n| INDONESIA | INDONESIA | 1994 | 12630662172 |\n| CHINA     | INDIA     | 1994 | 12595165622 |\n| CHINA     | INDONESIA | 1994 | 12469575792 |\n| VIETNAM   | JAPAN     | 1994 | 12463946094 |\n| INDONESIA | INDIA     | 1994 | 12396824490 |\n| INDIA     | INDONESIA | 1994 | 12336379718 |\n| INDONESIA | JAPAN     | 1994 | 12282391938 |\n| JAPAN     | INDONESIA | 1994 | 12026069236 |\n| CHINA     | VIETNAM   | 1994 | 11770637466 |\n| INDIA     | CHINA     | 1994 | 11630045428 |\n| VIETNAM   | INDIA     | 1994 | 11578797382 |\n| JAPAN     | JAPAN     | 1994 | 11507642964 |\n| JAPAN     | INDIA     | 1994 | 11291637744 |\n| INDONESIA | VIETNAM   | 1994 | 11248692736 |\n| INDIA     | INDIA     | 1994 | 11169873030 |\n| VIETNAM   | VIETNAM   | 1994 | 10836996318 |\n| INDIA     | JAPAN     | 1994 | 10788269948 |\n| JAPAN     | VIETNAM   | 1994 | 10551643274 |\n| INDIA     | VIETNAM   | 1994 | 10502079630 |\n| CHINA     | INDONESIA | 1995 | 14149078888 |\n| INDONESIA | CHINA     | 1995 | 13857241240 |\n| CHINA     | CHINA     | 1995 | 13249333224 |\n| JAPAN     | CHINA     | 1995 | 13039778770 |\n| VIETNAM   | CHINA     | 1995 | 12665462536 |\n| INDONESIA | INDONESIA | 1995 | 12537062642 |\n| VIETNAM   | JAPAN     | 1995 | 12527914040 |\n| CHINA     | INDIA     | 1995 | 12493312748 |\n| VIETNAM   | INDIA     | 1995 | 12396883914 |\n| INDONESIA | INDIA     | 1995 | 12347610366 |\n| VIETNAM   | INDONESIA | 1995 | 12115640296 |\n| CHINA     | JAPAN     | 1995 | 12043708260 |\n| INDONESIA | JAPAN     | 1995 | 12038187742 |\n| INDIA     | CHINA     | 1995 | 12021065586 |\n| INDIA     | INDONESIA | 1995 | 11951037194 |\n| JAPAN     | JAPAN     | 1995 | 11904558258 |\n| JAPAN     | INDONESIA | 1995 | 11894001470 |\n| VIETNAM   | VIETNAM   | 1995 | 11509455214 |\n| JAPAN     | INDIA     | 1995 | 11461486252 |\n| INDONESIA | VIETNAM   | 1995 | 11149948132 |\n| INDIA     | INDIA     | 1995 | 11131991100 |\n| JAPAN     | VIETNAM   | 1995 | 11002627550 |\n| CHINA     | VIETNAM   | 1995 | 10979872126 |\n| INDIA     | JAPAN     | 1995 | 10938406854 |\n| INDIA     | VIETNAM   | 1995 | 10414126568 |\n| INDONESIA | INDONESIA | 1996 | 13500112566 |\n| CHINA     | INDONESIA | 1996 | 13314250150 |\n| INDONESIA | CHINA     | 1996 | 13226878224 |\n| CHINA     | CHINA     | 1996 | 13183395830 |\n| VIETNAM   | CHINA     | 1996 | 12857307780 |\n| VIETNAM   | INDONESIA | 1996 | 12591253464 |\n| JAPAN     | INDONESIA | 1996 | 12454895712 |\n| INDIA     | CHINA     | 1996 | 12397135638 |\n| INDIA     | INDONESIA | 1996 | 12378484116 |\n| CHINA     | INDIA     | 1996 | 12307574730 |\n| INDONESIA | INDIA     | 1996 | 12277621726 |\n| CHINA     | JAPAN     | 1996 | 12211132648 |\n| JAPAN     | CHINA     | 1996 | 12177971128 |\n| INDONESIA | JAPAN     | 1996 | 12111276444 |\n| VIETNAM   | JAPAN     | 1996 | 11839994300 |\n| VIETNAM   | VIETNAM   | 1996 | 11721684604 |\n| INDIA     | JAPAN     | 1996 | 11683329610 |\n| VIETNAM   | INDIA     | 1996 | 11614973966 |\n| JAPAN     | INDIA     | 1996 | 11289159232 |\n| JAPAN     | JAPAN     | 1996 | 11132409590 |\n| INDIA     | INDIA     | 1996 | 11064146206 |\n| INDONESIA | VIETNAM   | 1996 | 10877028774 |\n| CHINA     | VIETNAM   | 1996 | 10869545636 |\n| JAPAN     | VIETNAM   | 1996 | 10668555098 |\n| INDIA     | VIETNAM   | 1996 | 10587783062 |\n| CHINA     | INDONESIA | 1997 | 13306469392 |\n| INDONESIA | CHINA     | 1997 | 13154792628 |\n| CHINA     | CHINA     | 1997 | 12927589590 |\n| JAPAN     | INDONESIA | 1997 | 12858540252 |\n| INDONESIA | INDONESIA | 1997 | 12796855642 |\n| VIETNAM   | INDONESIA | 1997 | 12727166240 |\n| CHINA     | JAPAN     | 1997 | 12569467036 |\n| VIETNAM   | CHINA     | 1997 | 12328437446 |\n| INDIA     | CHINA     | 1997 | 12306564428 |\n| CHINA     | INDIA     | 1997 | 12168567966 |\n| INDONESIA | JAPAN     | 1997 | 12002855912 |\n| INDIA     | INDONESIA | 1997 | 11966878600 |\n| JAPAN     | CHINA     | 1997 | 11947699374 |\n| CHINA     | VIETNAM   | 1997 | 11816508352 |\n| JAPAN     | INDIA     | 1997 | 11593843984 |\n| JAPAN     | JAPAN     | 1997 | 11580900078 |\n| INDONESIA | INDIA     | 1997 | 11578734210 |\n| VIETNAM   | INDIA     | 1997 | 11460243216 |\n| INDIA     | INDIA     | 1997 | 11386057814 |\n| VIETNAM   | JAPAN     | 1997 | 11378690460 |\n| INDONESIA | VIETNAM   | 1997 | 11331356264 |\n| VIETNAM   | VIETNAM   | 1997 | 11240502648 |\n| INDIA     | JAPAN     | 1997 | 11175655826 |\n| JAPAN     | VIETNAM   | 1997 | 10499749228 |\n| INDIA     | VIETNAM   | 1997 | 10007249674 |\n+-----------+-----------+------+-------------+\n\n-- Q3.2\n+------------+------------+------+------------+\n| c_city     | s_city     | year | lo_revenue |\n+------------+------------+------+------------+\n| UNITED ST4 | UNITED ST1 | 1992 |  204054910 |\n| UNITED ST1 | UNITED ST0 | 1992 |  193978982 |\n| UNITED ST7 | UNITED ST0 | 1992 |  192156020 |\n| UNITED ST9 | UNITED ST0 | 1992 |  189626588 |\n| UNITED ST4 | UNITED ST0 | 1992 |  189288484 |\n| UNITED ST2 | UNITED ST4 | 1992 |  182361000 |\n| UNITED ST5 | UNITED ST0 | 1992 |  180864600 |\n| UNITED ST6 | UNITED ST7 | 1992 |  175316534 |\n| UNITED ST3 | UNITED ST9 | 1992 |  172284096 |\n| UNITED ST6 | UNITED ST5 | 1992 |  171765932 |\n| UNITED ST7 | UNITED ST3 | 1992 |  167531332 |\n| UNITED ST2 | UNITED ST9 | 1992 |  167411236 |\n| UNITED ST4 | UNITED ST6 | 1992 |  163772748 |\n| UNITED ST2 | UNITED ST1 | 1992 |  163678330 |\n| UNITED ST9 | UNITED ST1 | 1992 |  161590604 |\n| UNITED ST6 | UNITED ST3 | 1992 |  157556436 |\n| UNITED ST6 | UNITED ST0 | 1992 |  157393912 |\n| UNITED ST0 | UNITED ST1 | 1992 |  154534792 |\n| UNITED ST0 | UNITED ST0 | 1992 |  151244244 |\n| UNITED ST1 | UNITED ST9 | 1992 |  150734118 |\n| UNITED ST3 | UNITED ST1 | 1992 |  147274980 |\n| UNITED ST2 | UNITED ST0 | 1992 |  144420436 |\n| UNITED ST1 | UNITED ST7 | 1992 |  142945946 |\n| UNITED ST6 | UNITED ST4 | 1992 |  142173888 |\n| UNITED ST4 | UNITED ST4 | 1992 |  140222670 |\n| UNITED ST6 | UNITED ST1 | 1992 |  138817376 |\n| UNITED ST4 | UNITED ST3 | 1992 |  138003574 |\n| UNITED ST5 | UNITED ST7 | 1992 |  136667302 |\n| UNITED ST4 | UNITED ST9 | 1992 |  135675940 |\n| UNITED ST7 | UNITED ST6 | 1992 |  131026410 |\n| UNITED ST4 | UNITED ST5 | 1992 |  130115744 |\n| UNITED ST7 | UNITED ST4 | 1992 |  129801776 |\n| UNITED ST1 | UNITED ST1 | 1992 |  129338140 |\n| UNITED ST3 | UNITED ST5 | 1992 |  128478096 |\n| UNITED ST0 | UNITED ST9 | 1992 |  127959992 |\n| UNITED ST3 | UNITED ST4 | 1992 |  126289544 |\n| UNITED ST5 | UNITED ST6 | 1992 |  125256186 |\n| UNITED ST4 | UNITED ST7 | 1992 |  125058752 |\n| UNITED ST3 | UNITED ST0 | 1992 |  124883312 |\n| UNITED ST9 | UNITED ST4 | 1992 |  122979026 |\n| UNITED ST8 | UNITED ST6 | 1992 |  121080880 |\n| UNITED ST7 | UNITED ST9 | 1992 |  120652084 |\n| UNITED ST7 | UNITED ST7 | 1992 |  120242772 |\n| UNITED ST5 | UNITED ST1 | 1992 |  119890574 |\n| UNITED ST5 | UNITED ST4 | 1992 |  115251254 |\n| UNITED ST7 | UNITED ST5 | 1992 |  115133604 |\n| UNITED ST2 | UNITED ST5 | 1992 |  114042730 |\n| UNITED ST9 | UNITED ST7 | 1992 |  113766718 |\n| UNITED ST0 | UNITED ST3 | 1992 |  112718634 |\n| UNITED ST1 | UNITED ST3 | 1992 |  111454948 |\n| UNITED ST5 | UNITED ST3 | 1992 |  107927106 |\n| UNITED ST0 | UNITED ST7 | 1992 |  101166818 |\n| UNITED ST5 | UNITED ST9 | 1992 |  100382182 |\n| UNITED ST7 | UNITED ST1 | 1992 |  100334416 |\n| UNITED ST0 | UNITED ST8 | 1992 |   99465280 |\n| UNITED ST0 | UNITED ST4 | 1992 |   99353614 |\n| UNITED ST9 | UNITED ST3 | 1992 |   95362330 |\n| UNITED ST8 | UNITED ST4 | 1992 |   93514038 |\n| UNITED ST3 | UNITED ST3 | 1992 |   90174432 |\n| UNITED ST8 | UNITED ST0 | 1992 |   88737678 |\n| UNITED ST0 | UNITED ST6 | 1992 |   84943612 |\n| UNITED ST6 | UNITED ST8 | 1992 |   84927380 |\n| UNITED ST8 | UNITED ST7 | 1992 |   83795802 |\n| UNITED ST3 | UNITED ST8 | 1992 |   82551528 |\n| UNITED ST6 | UNITED ST9 | 1992 |   81183442 |\n| UNITED ST0 | UNITED ST5 | 1992 |   80241772 |\n| UNITED ST1 | UNITED ST4 | 1992 |   78652692 |\n| UNITED ST3 | UNITED ST7 | 1992 |   78057158 |\n| UNITED ST3 | UNITED ST6 | 1992 |   77597430 |\n| UNITED ST9 | UNITED ST9 | 1992 |   72096686 |\n| UNITED ST2 | UNITED ST8 | 1992 |   72092898 |\n| UNITED ST2 | UNITED ST3 | 1992 |   71963926 |\n| UNITED ST8 | UNITED ST1 | 1992 |   71361504 |\n| UNITED ST1 | UNITED ST6 | 1992 |   70809980 |\n| UNITED ST8 | UNITED ST5 | 1992 |   70375220 |\n| UNITED ST1 | UNITED ST5 | 1992 |   67942502 |\n| UNITED ST5 | UNITED ST8 | 1992 |   67756106 |\n| UNITED ST2 | UNITED ST7 | 1992 |   67405558 |\n| UNITED ST8 | UNITED ST3 | 1992 |   61898648 |\n| UNITED ST8 | UNITED ST8 | 1992 |   58618216 |\n| UNITED ST5 | UNITED ST5 | 1992 |   58559136 |\n| UNITED ST1 | UNITED ST8 | 1992 |   57131158 |\n| UNITED ST9 | UNITED ST5 | 1992 |   56150008 |\n| UNITED ST2 | UNITED ST6 | 1992 |   55627478 |\n| UNITED ST0 | UNITED ST2 | 1992 |   55437466 |\n| UNITED ST2 | UNITED ST2 | 1992 |   51487308 |\n| UNITED ST8 | UNITED ST9 | 1992 |   45368942 |\n| UNITED ST4 | UNITED ST8 | 1992 |   43856884 |\n| UNITED ST9 | UNITED ST8 | 1992 |   42772200 |\n| UNITED ST5 | UNITED ST2 | 1992 |   40991634 |\n| UNITED ST6 | UNITED ST6 | 1992 |   36274210 |\n| UNITED ST9 | UNITED ST6 | 1992 |   31759136 |\n| UNITED ST4 | UNITED ST2 | 1992 |   24123690 |\n| UNITED ST7 | UNITED ST8 | 1992 |   23791404 |\n| UNITED ST6 | UNITED ST2 | 1992 |   23641396 |\n| UNITED ST9 | UNITED ST2 | 1992 |   23246354 |\n| UNITED ST8 | UNITED ST2 | 1992 |   21943122 |\n| UNITED ST1 | UNITED ST2 | 1992 |   15413456 |\n| UNITED ST7 | UNITED ST2 | 1992 |    9886408 |\n| UNITED ST3 | UNITED ST2 | 1992 |    2194416 |\n| UNITED ST0 | UNITED ST9 | 1993 |  219668080 |\n| UNITED ST7 | UNITED ST0 | 1993 |  219576048 |\n| UNITED ST5 | UNITED ST0 | 1993 |  213645194 |\n| UNITED ST0 | UNITED ST0 | 1993 |  213485096 |\n| UNITED ST1 | UNITED ST0 | 1993 |  198611904 |\n| UNITED ST4 | UNITED ST4 | 1993 |  196300930 |\n| UNITED ST3 | UNITED ST4 | 1993 |  184987840 |\n| UNITED ST0 | UNITED ST1 | 1993 |  182393186 |\n| UNITED ST4 | UNITED ST1 | 1993 |  177042846 |\n| UNITED ST8 | UNITED ST0 | 1993 |  176712742 |\n| UNITED ST4 | UNITED ST7 | 1993 |  176344396 |\n| UNITED ST4 | UNITED ST0 | 1993 |  173836916 |\n| UNITED ST6 | UNITED ST3 | 1993 |  166834322 |\n| UNITED ST6 | UNITED ST1 | 1993 |  166691878 |\n| UNITED ST7 | UNITED ST9 | 1993 |  160621402 |\n| UNITED ST3 | UNITED ST1 | 1993 |  156460556 |\n| UNITED ST6 | UNITED ST7 | 1993 |  156394588 |\n| UNITED ST5 | UNITED ST9 | 1993 |  152573078 |\n| UNITED ST0 | UNITED ST3 | 1993 |  152342566 |\n| UNITED ST5 | UNITED ST8 | 1993 |  148718558 |\n| UNITED ST9 | UNITED ST1 | 1993 |  148118838 |\n| UNITED ST4 | UNITED ST9 | 1993 |  146593918 |\n| UNITED ST5 | UNITED ST1 | 1993 |  142909246 |\n| UNITED ST6 | UNITED ST4 | 1993 |  139293826 |\n| UNITED ST2 | UNITED ST1 | 1993 |  139263402 |\n| UNITED ST6 | UNITED ST0 | 1993 |  136495078 |\n| UNITED ST7 | UNITED ST7 | 1993 |  136219640 |\n| UNITED ST2 | UNITED ST3 | 1993 |  133944876 |\n| UNITED ST3 | UNITED ST0 | 1993 |  133253852 |\n| UNITED ST9 | UNITED ST7 | 1993 |  133250966 |\n| UNITED ST1 | UNITED ST8 | 1993 |  132292396 |\n| UNITED ST2 | UNITED ST7 | 1993 |  128370028 |\n| UNITED ST5 | UNITED ST4 | 1993 |  126831278 |\n| UNITED ST9 | UNITED ST9 | 1993 |  126521526 |\n| UNITED ST1 | UNITED ST4 | 1993 |  125768694 |\n| UNITED ST7 | UNITED ST4 | 1993 |  123313226 |\n| UNITED ST3 | UNITED ST6 | 1993 |  117169616 |\n| UNITED ST2 | UNITED ST4 | 1993 |  113300782 |\n| UNITED ST3 | UNITED ST5 | 1993 |  111814610 |\n| UNITED ST6 | UNITED ST9 | 1993 |  109801884 |\n| UNITED ST1 | UNITED ST7 | 1993 |  109702366 |\n| UNITED ST3 | UNITED ST9 | 1993 |  109525192 |\n| UNITED ST8 | UNITED ST6 | 1993 |  109266124 |\n| UNITED ST8 | UNITED ST3 | 1993 |  108099748 |\n| UNITED ST5 | UNITED ST7 | 1993 |  105491076 |\n| UNITED ST0 | UNITED ST5 | 1993 |  105402104 |\n| UNITED ST1 | UNITED ST9 | 1993 |  105029804 |\n| UNITED ST8 | UNITED ST5 | 1993 |  104475674 |\n| UNITED ST1 | UNITED ST3 | 1993 |  104195892 |\n| UNITED ST8 | UNITED ST4 | 1993 |  102838712 |\n| UNITED ST0 | UNITED ST6 | 1993 |  100864564 |\n| UNITED ST5 | UNITED ST5 | 1993 |  100714378 |\n| UNITED ST3 | UNITED ST7 | 1993 |  100270896 |\n| UNITED ST0 | UNITED ST4 | 1993 |   98520134 |\n| UNITED ST0 | UNITED ST7 | 1993 |   97592720 |\n| UNITED ST2 | UNITED ST9 | 1993 |   96377014 |\n| UNITED ST1 | UNITED ST1 | 1993 |   95077220 |\n| UNITED ST9 | UNITED ST3 | 1993 |   93887294 |\n| UNITED ST7 | UNITED ST5 | 1993 |   89527384 |\n| UNITED ST1 | UNITED ST6 | 1993 |   89457080 |\n| UNITED ST8 | UNITED ST1 | 1993 |   88830868 |\n| UNITED ST7 | UNITED ST8 | 1993 |   87805256 |\n| UNITED ST9 | UNITED ST6 | 1993 |   87734320 |\n| UNITED ST2 | UNITED ST0 | 1993 |   85690970 |\n| UNITED ST3 | UNITED ST8 | 1993 |   84503696 |\n| UNITED ST0 | UNITED ST8 | 1993 |   84005364 |\n| UNITED ST4 | UNITED ST8 | 1993 |   83315164 |\n| UNITED ST1 | UNITED ST5 | 1993 |   81387026 |\n| UNITED ST9 | UNITED ST5 | 1993 |   79370538 |\n| UNITED ST7 | UNITED ST3 | 1993 |   79047722 |\n| UNITED ST8 | UNITED ST8 | 1993 |   77580470 |\n| UNITED ST8 | UNITED ST9 | 1993 |   77032722 |\n| UNITED ST2 | UNITED ST5 | 1993 |   74813690 |\n| UNITED ST9 | UNITED ST8 | 1993 |   74369392 |\n| UNITED ST8 | UNITED ST7 | 1993 |   73804436 |\n| UNITED ST6 | UNITED ST8 | 1993 |   72913482 |\n| UNITED ST7 | UNITED ST1 | 1993 |   68782318 |\n| UNITED ST6 | UNITED ST5 | 1993 |   68458164 |\n| UNITED ST5 | UNITED ST3 | 1993 |   68063622 |\n| UNITED ST2 | UNITED ST8 | 1993 |   66890892 |\n| UNITED ST4 | UNITED ST3 | 1993 |   66258824 |\n| UNITED ST6 | UNITED ST6 | 1993 |   66101326 |\n| UNITED ST9 | UNITED ST0 | 1993 |   65306610 |\n| UNITED ST4 | UNITED ST6 | 1993 |   61398510 |\n| UNITED ST9 | UNITED ST4 | 1993 |   61289374 |\n| UNITED ST4 | UNITED ST5 | 1993 |   58239188 |\n| UNITED ST7 | UNITED ST6 | 1993 |   54201004 |\n| UNITED ST4 | UNITED ST2 | 1993 |   54025356 |\n| UNITED ST2 | UNITED ST6 | 1993 |   52964452 |\n| UNITED ST5 | UNITED ST6 | 1993 |   50715358 |\n| UNITED ST3 | UNITED ST3 | 1993 |   43554288 |\n| UNITED ST3 | UNITED ST2 | 1993 |   43118146 |\n| UNITED ST5 | UNITED ST2 | 1993 |   41220484 |\n| UNITED ST7 | UNITED ST2 | 1993 |   40438608 |\n| UNITED ST6 | UNITED ST2 | 1993 |   37628734 |\n| UNITED ST9 | UNITED ST2 | 1993 |   35436780 |\n| UNITED ST1 | UNITED ST2 | 1993 |   33689076 |\n| UNITED ST0 | UNITED ST2 | 1993 |   30084290 |\n| UNITED ST2 | UNITED ST2 | 1993 |   29043990 |\n| UNITED ST8 | UNITED ST2 | 1993 |   19968732 |\n| UNITED ST8 | UNITED ST0 | 1994 |  198441578 |\n| UNITED ST3 | UNITED ST9 | 1994 |  194952370 |\n| UNITED ST6 | UNITED ST1 | 1994 |  193874294 |\n| UNITED ST6 | UNITED ST9 | 1994 |  189366618 |\n| UNITED ST9 | UNITED ST1 | 1994 |  180881896 |\n| UNITED ST0 | UNITED ST9 | 1994 |  179730404 |\n| UNITED ST5 | UNITED ST7 | 1994 |  178179922 |\n| UNITED ST9 | UNITED ST0 | 1994 |  175341146 |\n| UNITED ST3 | UNITED ST1 | 1994 |  171047306 |\n| UNITED ST4 | UNITED ST9 | 1994 |  167644786 |\n| UNITED ST0 | UNITED ST0 | 1994 |  167053754 |\n| UNITED ST7 | UNITED ST0 | 1994 |  164531072 |\n| UNITED ST2 | UNITED ST1 | 1994 |  162600178 |\n| UNITED ST5 | UNITED ST0 | 1994 |  157296114 |\n| UNITED ST4 | UNITED ST7 | 1994 |  153908280 |\n| UNITED ST4 | UNITED ST4 | 1994 |  153674762 |\n| UNITED ST0 | UNITED ST1 | 1994 |  153226758 |\n| UNITED ST1 | UNITED ST3 | 1994 |  151984918 |\n| UNITED ST7 | UNITED ST1 | 1994 |  150641598 |\n| UNITED ST4 | UNITED ST0 | 1994 |  147438680 |\n| UNITED ST5 | UNITED ST1 | 1994 |  147016836 |\n| UNITED ST4 | UNITED ST1 | 1994 |  144439114 |\n| UNITED ST2 | UNITED ST9 | 1994 |  139342108 |\n| UNITED ST6 | UNITED ST5 | 1994 |  132923068 |\n| UNITED ST2 | UNITED ST3 | 1994 |  131241520 |\n| UNITED ST3 | UNITED ST0 | 1994 |  131045454 |\n| UNITED ST5 | UNITED ST3 | 1994 |  130669822 |\n| UNITED ST7 | UNITED ST4 | 1994 |  129557430 |\n| UNITED ST3 | UNITED ST4 | 1994 |  126824730 |\n| UNITED ST8 | UNITED ST4 | 1994 |  124283362 |\n| UNITED ST0 | UNITED ST4 | 1994 |  123039488 |\n| UNITED ST0 | UNITED ST7 | 1994 |  122961640 |\n| UNITED ST0 | UNITED ST6 | 1994 |  122577556 |\n| UNITED ST2 | UNITED ST0 | 1994 |  120364306 |\n| UNITED ST6 | UNITED ST4 | 1994 |  119659978 |\n| UNITED ST4 | UNITED ST5 | 1994 |  118794056 |\n| UNITED ST8 | UNITED ST9 | 1994 |  117333812 |\n| UNITED ST4 | UNITED ST6 | 1994 |  117266964 |\n| UNITED ST5 | UNITED ST5 | 1994 |  112470426 |\n| UNITED ST6 | UNITED ST3 | 1994 |  112246476 |\n| UNITED ST2 | UNITED ST4 | 1994 |  111358754 |\n| UNITED ST8 | UNITED ST3 | 1994 |  110407682 |\n| UNITED ST1 | UNITED ST1 | 1994 |  108766348 |\n| UNITED ST1 | UNITED ST7 | 1994 |  107706212 |\n| UNITED ST6 | UNITED ST0 | 1994 |  107457706 |\n| UNITED ST5 | UNITED ST9 | 1994 |  106734662 |\n| UNITED ST9 | UNITED ST9 | 1994 |  103961698 |\n| UNITED ST5 | UNITED ST4 | 1994 |  103599186 |\n| UNITED ST7 | UNITED ST9 | 1994 |  100288170 |\n| UNITED ST7 | UNITED ST7 | 1994 |   92892884 |\n| UNITED ST6 | UNITED ST6 | 1994 |   92399444 |\n| UNITED ST7 | UNITED ST5 | 1994 |   91790728 |\n| UNITED ST3 | UNITED ST3 | 1994 |   91254306 |\n| UNITED ST8 | UNITED ST5 | 1994 |   89106112 |\n| UNITED ST9 | UNITED ST4 | 1994 |   87821522 |\n| UNITED ST1 | UNITED ST0 | 1994 |   86450402 |\n| UNITED ST1 | UNITED ST9 | 1994 |   86000074 |\n| UNITED ST7 | UNITED ST8 | 1994 |   85552934 |\n| UNITED ST0 | UNITED ST5 | 1994 |   83616602 |\n| UNITED ST2 | UNITED ST6 | 1994 |   83052210 |\n| UNITED ST1 | UNITED ST4 | 1994 |   82763116 |\n| UNITED ST3 | UNITED ST7 | 1994 |   81870262 |\n| UNITED ST8 | UNITED ST1 | 1994 |   80304192 |\n| UNITED ST9 | UNITED ST8 | 1994 |   78557616 |\n| UNITED ST5 | UNITED ST6 | 1994 |   77316902 |\n| UNITED ST2 | UNITED ST5 | 1994 |   75280634 |\n| UNITED ST8 | UNITED ST7 | 1994 |   75201374 |\n| UNITED ST9 | UNITED ST5 | 1994 |   74293452 |\n| UNITED ST6 | UNITED ST7 | 1994 |   74115616 |\n| UNITED ST8 | UNITED ST6 | 1994 |   73553138 |\n| UNITED ST3 | UNITED ST6 | 1994 |   72580514 |\n| UNITED ST9 | UNITED ST3 | 1994 |   71693000 |\n| UNITED ST2 | UNITED ST8 | 1994 |   67535548 |\n| UNITED ST0 | UNITED ST8 | 1994 |   63690866 |\n| UNITED ST4 | UNITED ST3 | 1994 |   63198866 |\n| UNITED ST9 | UNITED ST7 | 1994 |   63172346 |\n| UNITED ST1 | UNITED ST6 | 1994 |   62574652 |\n| UNITED ST1 | UNITED ST8 | 1994 |   60490306 |\n| UNITED ST7 | UNITED ST3 | 1994 |   58849680 |\n| UNITED ST9 | UNITED ST6 | 1994 |   58425854 |\n| UNITED ST0 | UNITED ST3 | 1994 |   54655658 |\n| UNITED ST6 | UNITED ST8 | 1994 |   53185992 |\n| UNITED ST3 | UNITED ST5 | 1994 |   52395750 |\n| UNITED ST6 | UNITED ST2 | 1994 |   51618000 |\n| UNITED ST1 | UNITED ST5 | 1994 |   49878276 |\n| UNITED ST7 | UNITED ST6 | 1994 |   49263874 |\n| UNITED ST1 | UNITED ST2 | 1994 |   47113172 |\n| UNITED ST4 | UNITED ST2 | 1994 |   46071784 |\n| UNITED ST2 | UNITED ST7 | 1994 |   44365516 |\n| UNITED ST0 | UNITED ST2 | 1994 |   44035908 |\n| UNITED ST4 | UNITED ST8 | 1994 |   41370704 |\n| UNITED ST7 | UNITED ST2 | 1994 |   39310162 |\n| UNITED ST5 | UNITED ST8 | 1994 |   37863782 |\n| UNITED ST2 | UNITED ST2 | 1994 |   36137314 |\n| UNITED ST3 | UNITED ST8 | 1994 |   31872102 |\n| UNITED ST8 | UNITED ST8 | 1994 |   20046824 |\n| UNITED ST3 | UNITED ST2 | 1994 |   19990468 |\n| UNITED ST9 | UNITED ST2 | 1994 |   19401978 |\n| UNITED ST5 | UNITED ST2 | 1994 |   14325592 |\n| UNITED ST8 | UNITED ST2 | 1994 |    7579252 |\n| UNITED ST5 | UNITED ST1 | 1995 |  239587338 |\n| UNITED ST4 | UNITED ST9 | 1995 |  198980136 |\n| UNITED ST7 | UNITED ST0 | 1995 |  196062590 |\n| UNITED ST6 | UNITED ST0 | 1995 |  183436942 |\n| UNITED ST4 | UNITED ST1 | 1995 |  181757306 |\n| UNITED ST0 | UNITED ST1 | 1995 |  181527198 |\n| UNITED ST8 | UNITED ST9 | 1995 |  177710178 |\n| UNITED ST7 | UNITED ST7 | 1995 |  173143248 |\n| UNITED ST3 | UNITED ST0 | 1995 |  168925466 |\n| UNITED ST9 | UNITED ST1 | 1995 |  165877934 |\n| UNITED ST2 | UNITED ST4 | 1995 |  164864610 |\n| UNITED ST1 | UNITED ST0 | 1995 |  163353246 |\n| UNITED ST5 | UNITED ST4 | 1995 |  162033522 |\n| UNITED ST7 | UNITED ST1 | 1995 |  159928724 |\n| UNITED ST5 | UNITED ST3 | 1995 |  156198260 |\n| UNITED ST5 | UNITED ST0 | 1995 |  155231492 |\n| UNITED ST9 | UNITED ST9 | 1995 |  153031916 |\n| UNITED ST7 | UNITED ST9 | 1995 |  150635418 |\n| UNITED ST4 | UNITED ST4 | 1995 |  149174142 |\n| UNITED ST9 | UNITED ST4 | 1995 |  145051372 |\n| UNITED ST1 | UNITED ST9 | 1995 |  144941740 |\n| UNITED ST4 | UNITED ST7 | 1995 |  138528814 |\n| UNITED ST6 | UNITED ST3 | 1995 |  135026124 |\n| UNITED ST2 | UNITED ST3 | 1995 |  130436258 |\n| UNITED ST2 | UNITED ST9 | 1995 |  130110356 |\n| UNITED ST7 | UNITED ST6 | 1995 |  130041342 |\n| UNITED ST3 | UNITED ST1 | 1995 |  129525630 |\n| UNITED ST1 | UNITED ST1 | 1995 |  128398664 |\n| UNITED ST6 | UNITED ST9 | 1995 |  126914210 |\n| UNITED ST0 | UNITED ST9 | 1995 |  126506998 |\n| UNITED ST5 | UNITED ST9 | 1995 |  124729794 |\n| UNITED ST4 | UNITED ST5 | 1995 |  124163010 |\n| UNITED ST1 | UNITED ST7 | 1995 |  123031482 |\n| UNITED ST2 | UNITED ST7 | 1995 |  120000416 |\n| UNITED ST8 | UNITED ST6 | 1995 |  117980808 |\n| UNITED ST1 | UNITED ST4 | 1995 |  115071198 |\n| UNITED ST0 | UNITED ST3 | 1995 |  112721416 |\n| UNITED ST8 | UNITED ST0 | 1995 |  110463328 |\n| UNITED ST5 | UNITED ST7 | 1995 |  107481518 |\n| UNITED ST2 | UNITED ST0 | 1995 |  105121676 |\n| UNITED ST3 | UNITED ST7 | 1995 |  103159096 |\n| UNITED ST9 | UNITED ST0 | 1995 |  103097242 |\n| UNITED ST6 | UNITED ST6 | 1995 |  101909354 |\n| UNITED ST5 | UNITED ST5 | 1995 |  100788014 |\n| UNITED ST7 | UNITED ST4 | 1995 |   99799090 |\n| UNITED ST3 | UNITED ST3 | 1995 |   96316178 |\n| UNITED ST6 | UNITED ST4 | 1995 |   95394482 |\n| UNITED ST9 | UNITED ST7 | 1995 |   92929178 |\n| UNITED ST4 | UNITED ST0 | 1995 |   92285798 |\n| UNITED ST1 | UNITED ST3 | 1995 |   91646112 |\n| UNITED ST2 | UNITED ST1 | 1995 |   90874680 |\n| UNITED ST6 | UNITED ST5 | 1995 |   90856304 |\n| UNITED ST8 | UNITED ST5 | 1995 |   89989726 |\n| UNITED ST7 | UNITED ST3 | 1995 |   87399468 |\n| UNITED ST9 | UNITED ST6 | 1995 |   86964988 |\n| UNITED ST2 | UNITED ST5 | 1995 |   86764834 |\n| UNITED ST6 | UNITED ST8 | 1995 |   83947840 |\n| UNITED ST0 | UNITED ST6 | 1995 |   81437884 |\n| UNITED ST3 | UNITED ST5 | 1995 |   80115630 |\n| UNITED ST7 | UNITED ST5 | 1995 |   78030586 |\n| UNITED ST0 | UNITED ST0 | 1995 |   77969004 |\n| UNITED ST6 | UNITED ST1 | 1995 |   76656704 |\n| UNITED ST4 | UNITED ST6 | 1995 |   76219048 |\n| UNITED ST3 | UNITED ST9 | 1995 |   74729246 |\n| UNITED ST4 | UNITED ST3 | 1995 |   74712792 |\n| UNITED ST2 | UNITED ST6 | 1995 |   74292576 |\n| UNITED ST9 | UNITED ST5 | 1995 |   72019848 |\n| UNITED ST1 | UNITED ST8 | 1995 |   69837586 |\n| UNITED ST8 | UNITED ST1 | 1995 |   68435560 |\n| UNITED ST0 | UNITED ST7 | 1995 |   66790626 |\n| UNITED ST1 | UNITED ST5 | 1995 |   63714904 |\n| UNITED ST8 | UNITED ST7 | 1995 |   61836404 |\n| UNITED ST2 | UNITED ST8 | 1995 |   61008378 |\n| UNITED ST3 | UNITED ST4 | 1995 |   60844692 |\n| UNITED ST5 | UNITED ST6 | 1995 |   60409474 |\n| UNITED ST8 | UNITED ST3 | 1995 |   58699876 |\n| UNITED ST0 | UNITED ST4 | 1995 |   58340076 |\n| UNITED ST1 | UNITED ST6 | 1995 |   54278806 |\n| UNITED ST7 | UNITED ST8 | 1995 |   52888980 |\n| UNITED ST6 | UNITED ST7 | 1995 |   47667954 |\n| UNITED ST4 | UNITED ST8 | 1995 |   46106472 |\n| UNITED ST4 | UNITED ST2 | 1995 |   45574006 |\n| UNITED ST3 | UNITED ST8 | 1995 |   45010478 |\n| UNITED ST9 | UNITED ST8 | 1995 |   42585054 |\n| UNITED ST8 | UNITED ST4 | 1995 |   38574622 |\n| UNITED ST8 | UNITED ST2 | 1995 |   36565980 |\n| UNITED ST9 | UNITED ST3 | 1995 |   35078204 |\n| UNITED ST3 | UNITED ST6 | 1995 |   33477060 |\n| UNITED ST0 | UNITED ST8 | 1995 |   32786498 |\n| UNITED ST5 | UNITED ST2 | 1995 |   29902046 |\n| UNITED ST2 | UNITED ST2 | 1995 |   26910062 |\n| UNITED ST5 | UNITED ST8 | 1995 |   26693864 |\n| UNITED ST3 | UNITED ST2 | 1995 |   25773658 |\n| UNITED ST9 | UNITED ST2 | 1995 |   25306724 |\n| UNITED ST0 | UNITED ST5 | 1995 |   22907418 |\n| UNITED ST6 | UNITED ST2 | 1995 |   22727102 |\n| UNITED ST8 | UNITED ST8 | 1995 |   22571734 |\n| UNITED ST1 | UNITED ST2 | 1995 |   15983352 |\n| UNITED ST0 | UNITED ST2 | 1995 |    9552920 |\n| UNITED ST7 | UNITED ST2 | 1995 |    7947130 |\n| UNITED ST6 | UNITED ST0 | 1996 |  264573526 |\n| UNITED ST4 | UNITED ST0 | 1996 |  213795126 |\n| UNITED ST5 | UNITED ST0 | 1996 |  209003958 |\n| UNITED ST0 | UNITED ST4 | 1996 |  206457498 |\n| UNITED ST9 | UNITED ST1 | 1996 |  203967654 |\n| UNITED ST1 | UNITED ST0 | 1996 |  189723108 |\n| UNITED ST0 | UNITED ST1 | 1996 |  183897554 |\n| UNITED ST6 | UNITED ST1 | 1996 |  179411740 |\n| UNITED ST2 | UNITED ST1 | 1996 |  176512310 |\n| UNITED ST1 | UNITED ST1 | 1996 |  174531696 |\n| UNITED ST4 | UNITED ST7 | 1996 |  167355628 |\n| UNITED ST6 | UNITED ST3 | 1996 |  164336458 |\n| UNITED ST2 | UNITED ST7 | 1996 |  160936954 |\n| UNITED ST8 | UNITED ST1 | 1996 |  157943512 |\n| UNITED ST7 | UNITED ST4 | 1996 |  155882022 |\n| UNITED ST1 | UNITED ST3 | 1996 |  155221810 |\n| UNITED ST9 | UNITED ST9 | 1996 |  154603480 |\n| UNITED ST0 | UNITED ST9 | 1996 |  151870418 |\n| UNITED ST7 | UNITED ST0 | 1996 |  151204890 |\n| UNITED ST3 | UNITED ST1 | 1996 |  149493398 |\n| UNITED ST7 | UNITED ST7 | 1996 |  148081288 |\n| UNITED ST4 | UNITED ST1 | 1996 |  145639734 |\n| UNITED ST5 | UNITED ST9 | 1996 |  145228228 |\n| UNITED ST1 | UNITED ST9 | 1996 |  139647538 |\n| UNITED ST9 | UNITED ST4 | 1996 |  139233228 |\n| UNITED ST6 | UNITED ST4 | 1996 |  138592010 |\n| UNITED ST2 | UNITED ST0 | 1996 |  134190244 |\n| UNITED ST5 | UNITED ST1 | 1996 |  130692778 |\n| UNITED ST6 | UNITED ST9 | 1996 |  126512364 |\n| UNITED ST4 | UNITED ST6 | 1996 |  124378656 |\n| UNITED ST0 | UNITED ST0 | 1996 |  123057710 |\n| UNITED ST8 | UNITED ST9 | 1996 |  120933382 |\n| UNITED ST3 | UNITED ST0 | 1996 |  120453680 |\n| UNITED ST8 | UNITED ST6 | 1996 |  119493310 |\n| UNITED ST2 | UNITED ST3 | 1996 |  119297196 |\n| UNITED ST0 | UNITED ST5 | 1996 |  115525790 |\n| UNITED ST8 | UNITED ST7 | 1996 |  115047850 |\n| UNITED ST2 | UNITED ST4 | 1996 |  114974114 |\n| UNITED ST6 | UNITED ST7 | 1996 |  114181238 |\n| UNITED ST3 | UNITED ST4 | 1996 |  109676518 |\n| UNITED ST4 | UNITED ST9 | 1996 |  108269680 |\n| UNITED ST1 | UNITED ST6 | 1996 |  108112732 |\n| UNITED ST3 | UNITED ST7 | 1996 |  107974436 |\n| UNITED ST2 | UNITED ST9 | 1996 |  106982830 |\n| UNITED ST4 | UNITED ST8 | 1996 |  106071324 |\n| UNITED ST9 | UNITED ST5 | 1996 |  105651844 |\n| UNITED ST7 | UNITED ST3 | 1996 |  104713772 |\n| UNITED ST6 | UNITED ST8 | 1996 |  104273568 |\n| UNITED ST1 | UNITED ST5 | 1996 |  102379298 |\n| UNITED ST8 | UNITED ST4 | 1996 |  102066108 |\n| UNITED ST1 | UNITED ST4 | 1996 |  100271094 |\n| UNITED ST3 | UNITED ST9 | 1996 |   99224608 |\n| UNITED ST9 | UNITED ST0 | 1996 |   99181402 |\n| UNITED ST3 | UNITED ST3 | 1996 |   98527592 |\n| UNITED ST9 | UNITED ST7 | 1996 |   97597518 |\n| UNITED ST7 | UNITED ST1 | 1996 |   97568350 |\n| UNITED ST9 | UNITED ST6 | 1996 |   97370126 |\n| UNITED ST2 | UNITED ST5 | 1996 |   94057952 |\n| UNITED ST9 | UNITED ST3 | 1996 |   94042036 |\n| UNITED ST2 | UNITED ST8 | 1996 |   93730226 |\n| UNITED ST4 | UNITED ST3 | 1996 |   92921880 |\n| UNITED ST6 | UNITED ST5 | 1996 |   92060208 |\n| UNITED ST2 | UNITED ST6 | 1996 |   90833298 |\n| UNITED ST8 | UNITED ST5 | 1996 |   86960946 |\n| UNITED ST5 | UNITED ST5 | 1996 |   86041444 |\n| UNITED ST6 | UNITED ST6 | 1996 |   85846064 |\n| UNITED ST4 | UNITED ST5 | 1996 |   85616824 |\n| UNITED ST3 | UNITED ST6 | 1996 |   83763256 |\n| UNITED ST1 | UNITED ST7 | 1996 |   83443012 |\n| UNITED ST5 | UNITED ST7 | 1996 |   81892660 |\n| UNITED ST8 | UNITED ST0 | 1996 |   79690854 |\n| UNITED ST8 | UNITED ST3 | 1996 |   79071880 |\n| UNITED ST1 | UNITED ST8 | 1996 |   78861764 |\n| UNITED ST5 | UNITED ST6 | 1996 |   76664088 |\n| UNITED ST0 | UNITED ST6 | 1996 |   74464124 |\n| UNITED ST7 | UNITED ST6 | 1996 |   73071256 |\n| UNITED ST9 | UNITED ST8 | 1996 |   72224602 |\n| UNITED ST3 | UNITED ST8 | 1996 |   67849464 |\n| UNITED ST3 | UNITED ST5 | 1996 |   67434878 |\n| UNITED ST5 | UNITED ST4 | 1996 |   66849718 |\n| UNITED ST5 | UNITED ST3 | 1996 |   65839852 |\n| UNITED ST4 | UNITED ST4 | 1996 |   65575990 |\n| UNITED ST7 | UNITED ST5 | 1996 |   65568448 |\n| UNITED ST5 | UNITED ST8 | 1996 |   64831364 |\n| UNITED ST0 | UNITED ST7 | 1996 |   62782362 |\n| UNITED ST0 | UNITED ST3 | 1996 |   59591330 |\n| UNITED ST7 | UNITED ST9 | 1996 |   50056182 |\n| UNITED ST7 | UNITED ST8 | 1996 |   48697702 |\n| UNITED ST6 | UNITED ST2 | 1996 |   40895694 |\n| UNITED ST8 | UNITED ST8 | 1996 |   32681206 |\n| UNITED ST0 | UNITED ST8 | 1996 |   30336524 |\n| UNITED ST4 | UNITED ST2 | 1996 |   24903734 |\n| UNITED ST1 | UNITED ST2 | 1996 |   20165072 |\n| UNITED ST5 | UNITED ST2 | 1996 |   17088466 |\n| UNITED ST7 | UNITED ST2 | 1996 |   16780940 |\n| UNITED ST9 | UNITED ST2 | 1996 |   16216070 |\n| UNITED ST8 | UNITED ST2 | 1996 |   14056668 |\n| UNITED ST0 | UNITED ST2 | 1996 |   13814398 |\n| UNITED ST3 | UNITED ST2 | 1996 |    8623600 |\n| UNITED ST5 | UNITED ST0 | 1997 |  242915532 |\n| UNITED ST0 | UNITED ST9 | 1997 |  239712536 |\n| UNITED ST5 | UNITED ST1 | 1997 |  213800322 |\n| UNITED ST9 | UNITED ST9 | 1997 |  212445590 |\n| UNITED ST5 | UNITED ST4 | 1997 |  206865854 |\n| UNITED ST7 | UNITED ST1 | 1997 |  202653880 |\n| UNITED ST5 | UNITED ST9 | 1997 |  194785280 |\n| UNITED ST8 | UNITED ST0 | 1997 |  178869690 |\n| UNITED ST1 | UNITED ST3 | 1997 |  170351276 |\n| UNITED ST4 | UNITED ST1 | 1997 |  169222376 |\n| UNITED ST4 | UNITED ST7 | 1997 |  169213992 |\n| UNITED ST1 | UNITED ST4 | 1997 |  166185138 |\n| UNITED ST0 | UNITED ST1 | 1997 |  160334278 |\n| UNITED ST4 | UNITED ST9 | 1997 |  159395854 |\n| UNITED ST1 | UNITED ST0 | 1997 |  155335732 |\n| UNITED ST2 | UNITED ST0 | 1997 |  155182940 |\n| UNITED ST1 | UNITED ST7 | 1997 |  154091444 |\n| UNITED ST2 | UNITED ST7 | 1997 |  152967604 |\n| UNITED ST1 | UNITED ST1 | 1997 |  152680888 |\n| UNITED ST0 | UNITED ST7 | 1997 |  145154980 |\n| UNITED ST4 | UNITED ST0 | 1997 |  139751608 |\n| UNITED ST6 | UNITED ST3 | 1997 |  139451012 |\n| UNITED ST2 | UNITED ST9 | 1997 |  139087968 |\n| UNITED ST7 | UNITED ST0 | 1997 |  138708624 |\n| UNITED ST9 | UNITED ST7 | 1997 |  138105260 |\n| UNITED ST8 | UNITED ST3 | 1997 |  133836788 |\n| UNITED ST0 | UNITED ST0 | 1997 |  132617032 |\n| UNITED ST9 | UNITED ST0 | 1997 |  132133582 |\n| UNITED ST2 | UNITED ST3 | 1997 |  130858906 |\n| UNITED ST2 | UNITED ST1 | 1997 |  130792270 |\n| UNITED ST4 | UNITED ST4 | 1997 |  125064692 |\n| UNITED ST9 | UNITED ST1 | 1997 |  124836812 |\n| UNITED ST3 | UNITED ST7 | 1997 |  122190600 |\n| UNITED ST7 | UNITED ST4 | 1997 |  120246988 |\n| UNITED ST4 | UNITED ST3 | 1997 |  119268306 |\n| UNITED ST3 | UNITED ST4 | 1997 |  116712282 |\n| UNITED ST6 | UNITED ST9 | 1997 |  116462526 |\n| UNITED ST6 | UNITED ST4 | 1997 |  114430044 |\n| UNITED ST2 | UNITED ST4 | 1997 |  114025222 |\n| UNITED ST5 | UNITED ST3 | 1997 |  113579864 |\n| UNITED ST9 | UNITED ST5 | 1997 |  112183840 |\n| UNITED ST6 | UNITED ST0 | 1997 |  111649838 |\n| UNITED ST6 | UNITED ST1 | 1997 |  110235418 |\n| UNITED ST7 | UNITED ST9 | 1997 |  110079940 |\n| UNITED ST5 | UNITED ST7 | 1997 |  109068630 |\n| UNITED ST3 | UNITED ST1 | 1997 |  108301366 |\n| UNITED ST3 | UNITED ST0 | 1997 |  108100344 |\n| UNITED ST3 | UNITED ST9 | 1997 |  102740616 |\n| UNITED ST1 | UNITED ST5 | 1997 |  102104220 |\n| UNITED ST6 | UNITED ST7 | 1997 |   99591698 |\n| UNITED ST5 | UNITED ST6 | 1997 |   98060032 |\n| UNITED ST1 | UNITED ST9 | 1997 |   97888222 |\n| UNITED ST3 | UNITED ST3 | 1997 |   96770466 |\n| UNITED ST0 | UNITED ST5 | 1997 |   95976836 |\n| UNITED ST2 | UNITED ST8 | 1997 |   92783818 |\n| UNITED ST4 | UNITED ST6 | 1997 |   92473698 |\n| UNITED ST9 | UNITED ST3 | 1997 |   92243448 |\n| UNITED ST8 | UNITED ST9 | 1997 |   91705592 |\n| UNITED ST7 | UNITED ST8 | 1997 |   90952532 |\n| UNITED ST8 | UNITED ST1 | 1997 |   86568278 |\n| UNITED ST7 | UNITED ST7 | 1997 |   85133206 |\n| UNITED ST0 | UNITED ST4 | 1997 |   82387606 |\n| UNITED ST8 | UNITED ST7 | 1997 |   81756858 |\n| UNITED ST8 | UNITED ST8 | 1997 |   81498800 |\n| UNITED ST2 | UNITED ST5 | 1997 |   81325772 |\n| UNITED ST0 | UNITED ST3 | 1997 |   80157016 |\n| UNITED ST6 | UNITED ST8 | 1997 |   75976890 |\n| UNITED ST9 | UNITED ST6 | 1997 |   75193764 |\n| UNITED ST6 | UNITED ST5 | 1997 |   75143576 |\n| UNITED ST2 | UNITED ST2 | 1997 |   74068666 |\n| UNITED ST7 | UNITED ST5 | 1997 |   73779472 |\n| UNITED ST8 | UNITED ST4 | 1997 |   73201168 |\n| UNITED ST3 | UNITED ST6 | 1997 |   72151688 |\n| UNITED ST7 | UNITED ST3 | 1997 |   70337844 |\n| UNITED ST2 | UNITED ST6 | 1997 |   68548934 |\n| UNITED ST5 | UNITED ST8 | 1997 |   65821892 |\n| UNITED ST3 | UNITED ST5 | 1997 |   65623926 |\n| UNITED ST4 | UNITED ST8 | 1997 |   65199472 |\n| UNITED ST5 | UNITED ST5 | 1997 |   65137776 |\n| UNITED ST4 | UNITED ST5 | 1997 |   63991736 |\n| UNITED ST9 | UNITED ST4 | 1997 |   63530956 |\n| UNITED ST7 | UNITED ST2 | 1997 |   62819180 |\n| UNITED ST9 | UNITED ST8 | 1997 |   62544770 |\n| UNITED ST0 | UNITED ST8 | 1997 |   60482740 |\n| UNITED ST3 | UNITED ST8 | 1997 |   58204440 |\n| UNITED ST7 | UNITED ST6 | 1997 |   55079862 |\n| UNITED ST8 | UNITED ST5 | 1997 |   53347486 |\n| UNITED ST6 | UNITED ST6 | 1997 |   49966582 |\n| UNITED ST0 | UNITED ST2 | 1997 |   47168458 |\n| UNITED ST0 | UNITED ST6 | 1997 |   45848092 |\n| UNITED ST1 | UNITED ST2 | 1997 |   41198260 |\n| UNITED ST8 | UNITED ST6 | 1997 |   40146000 |\n| UNITED ST1 | UNITED ST6 | 1997 |   36410652 |\n| UNITED ST1 | UNITED ST8 | 1997 |   30750516 |\n| UNITED ST6 | UNITED ST2 | 1997 |   29493360 |\n| UNITED ST5 | UNITED ST2 | 1997 |   27726876 |\n| UNITED ST8 | UNITED ST2 | 1997 |   24107412 |\n| UNITED ST3 | UNITED ST2 | 1997 |   15783756 |\n| UNITED ST4 | UNITED ST2 | 1997 |    5696314 |\n| UNITED ST9 | UNITED ST2 | 1997 |    5323304 |\n+------------+------------+------+------------+\n\n-- Q3.3\n+------------+------------+------+------------+\n| c_city     | s_city     | year | lo_revenue |\n+------------+------------+------+------------+\n| UNITED KI1 | UNITED KI1 | 1992 |   93471990 |\n| UNITED KI5 | UNITED KI1 | 1992 |   72554110 |\n| UNITED KI5 | UNITED KI5 | 1992 |   50710534 |\n| UNITED KI1 | UNITED KI5 | 1992 |   43835692 |\n| UNITED KI5 | UNITED KI1 | 1993 |  122035214 |\n| UNITED KI1 | UNITED KI1 | 1993 |   91339070 |\n| UNITED KI5 | UNITED KI5 | 1993 |   68198784 |\n| UNITED KI1 | UNITED KI5 | 1993 |   42888412 |\n| UNITED KI5 | UNITED KI1 | 1994 |   72564326 |\n| UNITED KI1 | UNITED KI1 | 1994 |   69736882 |\n| UNITED KI5 | UNITED KI5 | 1994 |   69014568 |\n| UNITED KI1 | UNITED KI5 | 1994 |   42443560 |\n| UNITED KI5 | UNITED KI1 | 1995 |  165911792 |\n| UNITED KI1 | UNITED KI1 | 1995 |   71762372 |\n| UNITED KI5 | UNITED KI5 | 1995 |   41079610 |\n| UNITED KI1 | UNITED KI5 | 1995 |   34353020 |\n| UNITED KI5 | UNITED KI1 | 1996 |  131534098 |\n| UNITED KI1 | UNITED KI1 | 1996 |  119846074 |\n| UNITED KI5 | UNITED KI5 | 1996 |   92154684 |\n| UNITED KI1 | UNITED KI5 | 1996 |   27400508 |\n| UNITED KI1 | UNITED KI1 | 1997 |  140686266 |\n| UNITED KI5 | UNITED KI1 | 1997 |  129956718 |\n| UNITED KI5 | UNITED KI5 | 1997 |   54664054 |\n| UNITED KI1 | UNITED KI5 | 1997 |   32821336 |\n+------------+------------+------+------------+\n\n-- Q3.4\n+------------+------------+------+------------+\n| c_city     | s_city     | year | lo_revenue |\n+------------+------------+------+------------+\n| UNITED KI5 | UNITED KI1 | 1997 |   18235692 |\n| UNITED KI5 | UNITED KI5 | 1997 |   12407602 |\n| UNITED KI1 | UNITED KI5 | 1997 |    3740140 |\n+------------+------------+------+------------+\n\n-- Q4.1\n+------+---------------+-------------+\n| year | c_nation      | profit      |\n+------+---------------+-------------+\n| 1992 | ARGENTINA     | 19317928938 |\n| 1992 | BRAZIL        | 18453966110 |\n| 1992 | CANADA        | 19286353574 |\n| 1992 | PERU          | 18821353194 |\n| 1992 | UNITED STATES | 19698855306 |\n| 1993 | ARGENTINA     | 19952665706 |\n| 1993 | BRAZIL        | 18937598458 |\n| 1993 | CANADA        | 19794604840 |\n| 1993 | PERU          | 18618891672 |\n| 1993 | UNITED STATES | 20007970172 |\n| 1994 | ARGENTINA     | 19880610430 |\n| 1994 | BRAZIL        | 18697303354 |\n| 1994 | CANADA        | 19165295192 |\n| 1994 | PERU          | 18590530026 |\n| 1994 | UNITED STATES | 19039760850 |\n| 1995 | ARGENTINA     | 20287682760 |\n| 1995 | BRAZIL        | 18312154700 |\n| 1995 | CANADA        | 19125224320 |\n| 1995 | PERU          | 19556174422 |\n| 1995 | UNITED STATES | 18621130488 |\n| 1996 | ARGENTINA     | 20003855790 |\n| 1996 | BRAZIL        | 18336970302 |\n| 1996 | CANADA        | 20123208406 |\n| 1996 | PERU          | 18710271348 |\n| 1996 | UNITED STATES | 19539424348 |\n| 1997 | ARGENTINA     | 19709120522 |\n| 1997 | BRAZIL        | 18243142094 |\n| 1997 | CANADA        | 20194743556 |\n| 1997 | PERU          | 18631051834 |\n| 1997 | UNITED STATES | 21013447758 |\n| 1998 | ARGENTINA     | 11668480814 |\n| 1998 | BRAZIL        | 10712796190 |\n| 1998 | CANADA        | 10846422392 |\n| 1998 | PERU          | 11452371940 |\n| 1998 | UNITED STATES | 12018924038 |\n+------+---------------+-------------+\n\n-- Q4.2\n+------+---------------+------------+------------+\n| year | s_nation      | p_category | profit     |\n+------+---------------+------------+------------+\n| 1997 | ARGENTINA     | MFGR#11    | 1814143132 |\n| 1997 | ARGENTINA     | MFGR#12    | 1848231124 |\n| 1997 | ARGENTINA     | MFGR#13    | 1945723642 |\n| 1997 | ARGENTINA     | MFGR#14    | 1950820690 |\n| 1997 | ARGENTINA     | MFGR#15    | 1877734750 |\n| 1997 | ARGENTINA     | MFGR#21    | 2029565148 |\n| 1997 | ARGENTINA     | MFGR#22    | 1746033566 |\n| 1997 | ARGENTINA     | MFGR#23    | 2060714604 |\n| 1997 | ARGENTINA     | MFGR#24    | 1786921158 |\n| 1997 | ARGENTINA     | MFGR#25    | 2012622806 |\n| 1997 | BRAZIL        | MFGR#11    | 2146438656 |\n| 1997 | BRAZIL        | MFGR#12    | 1979717666 |\n| 1997 | BRAZIL        | MFGR#13    | 2256960758 |\n| 1997 | BRAZIL        | MFGR#14    | 2388513444 |\n| 1997 | BRAZIL        | MFGR#15    | 2188838248 |\n| 1997 | BRAZIL        | MFGR#21    | 1820053664 |\n| 1997 | BRAZIL        | MFGR#22    | 1986284096 |\n| 1997 | BRAZIL        | MFGR#23    | 2215345748 |\n| 1997 | BRAZIL        | MFGR#24    | 2116027298 |\n| 1997 | BRAZIL        | MFGR#25    | 1989467528 |\n| 1997 | CANADA        | MFGR#11    | 1709450040 |\n| 1997 | CANADA        | MFGR#12    | 1877436328 |\n| 1997 | CANADA        | MFGR#13    | 1918531780 |\n| 1997 | CANADA        | MFGR#14    | 2005624900 |\n| 1997 | CANADA        | MFGR#15    | 1696366026 |\n| 1997 | CANADA        | MFGR#21    | 1999610544 |\n| 1997 | CANADA        | MFGR#22    | 1556839526 |\n| 1997 | CANADA        | MFGR#23    | 1856719290 |\n| 1997 | CANADA        | MFGR#24    | 1699790256 |\n| 1997 | CANADA        | MFGR#25    | 1809175930 |\n| 1997 | PERU          | MFGR#11    | 2200485754 |\n| 1997 | PERU          | MFGR#12    | 1988730700 |\n| 1997 | PERU          | MFGR#13    | 1694972210 |\n| 1997 | PERU          | MFGR#14    | 1895539366 |\n| 1997 | PERU          | MFGR#15    | 1998791356 |\n| 1997 | PERU          | MFGR#21    | 1735846788 |\n| 1997 | PERU          | MFGR#22    | 1977494918 |\n| 1997 | PERU          | MFGR#23    | 2133290172 |\n| 1997 | PERU          | MFGR#24    | 1871331450 |\n| 1997 | PERU          | MFGR#25    | 1962908258 |\n| 1997 | UNITED STATES | MFGR#11    | 2093412096 |\n| 1997 | UNITED STATES | MFGR#12    | 1818427418 |\n| 1997 | UNITED STATES | MFGR#13    | 2192557812 |\n| 1997 | UNITED STATES | MFGR#14    | 1868564222 |\n| 1997 | UNITED STATES | MFGR#15    | 1925521686 |\n| 1997 | UNITED STATES | MFGR#21    | 2001352948 |\n| 1997 | UNITED STATES | MFGR#22    | 2153895230 |\n| 1997 | UNITED STATES | MFGR#23    | 1874576204 |\n| 1997 | UNITED STATES | MFGR#24    | 2006772726 |\n| 1997 | UNITED STATES | MFGR#25    | 2107332104 |\n| 1998 | ARGENTINA     | MFGR#11    | 1135224454 |\n| 1998 | ARGENTINA     | MFGR#12    | 1054050084 |\n| 1998 | ARGENTINA     | MFGR#13    | 1165583584 |\n| 1998 | ARGENTINA     | MFGR#14    | 1047452736 |\n| 1998 | ARGENTINA     | MFGR#15    | 1044156534 |\n| 1998 | ARGENTINA     | MFGR#21    | 1009425370 |\n| 1998 | ARGENTINA     | MFGR#22    | 1012123472 |\n| 1998 | ARGENTINA     | MFGR#23    | 1120959602 |\n| 1998 | ARGENTINA     | MFGR#24    | 1049158236 |\n| 1998 | ARGENTINA     | MFGR#25    | 1095680422 |\n| 1998 | BRAZIL        | MFGR#11    | 1277156976 |\n| 1998 | BRAZIL        | MFGR#12    | 1292625362 |\n| 1998 | BRAZIL        | MFGR#13    | 1310323544 |\n| 1998 | BRAZIL        | MFGR#14    | 1105352340 |\n| 1998 | BRAZIL        | MFGR#15    | 1327625418 |\n| 1998 | BRAZIL        | MFGR#21    | 1337644896 |\n| 1998 | BRAZIL        | MFGR#22    | 1183583836 |\n| 1998 | BRAZIL        | MFGR#23    | 1381297754 |\n| 1998 | BRAZIL        | MFGR#24    | 1124724440 |\n| 1998 | BRAZIL        | MFGR#25    | 1408364752 |\n| 1998 | CANADA        | MFGR#11    | 1018172250 |\n| 1998 | CANADA        | MFGR#12    |  976179544 |\n| 1998 | CANADA        | MFGR#13    |  973066594 |\n| 1998 | CANADA        | MFGR#14    | 1055674454 |\n| 1998 | CANADA        | MFGR#15    | 1071738598 |\n| 1998 | CANADA        | MFGR#21    |  911737302 |\n| 1998 | CANADA        | MFGR#22    | 1188554616 |\n| 1998 | CANADA        | MFGR#23    | 1148250140 |\n| 1998 | CANADA        | MFGR#24    | 1017060848 |\n| 1998 | CANADA        | MFGR#25    | 1095515984 |\n| 1998 | PERU          | MFGR#11    | 1135677094 |\n| 1998 | PERU          | MFGR#12    | 1081089514 |\n| 1998 | PERU          | MFGR#13    | 1182663766 |\n| 1998 | PERU          | MFGR#14    |  962670128 |\n| 1998 | PERU          | MFGR#15    | 1140492276 |\n| 1998 | PERU          | MFGR#21    | 1067466660 |\n| 1998 | PERU          | MFGR#22    | 1055581312 |\n| 1998 | PERU          | MFGR#23    | 1272786442 |\n| 1998 | PERU          | MFGR#24    | 1178150524 |\n| 1998 | PERU          | MFGR#25    | 1086502230 |\n| 1998 | UNITED STATES | MFGR#11    | 1112552464 |\n| 1998 | UNITED STATES | MFGR#12    | 1224771964 |\n| 1998 | UNITED STATES | MFGR#13    | 1244827854 |\n| 1998 | UNITED STATES | MFGR#14    | 1110013774 |\n| 1998 | UNITED STATES | MFGR#15    | 1050239138 |\n| 1998 | UNITED STATES | MFGR#21    | 1126813672 |\n| 1998 | UNITED STATES | MFGR#22    | 1160957470 |\n| 1998 | UNITED STATES | MFGR#23    | 1312160930 |\n| 1998 | UNITED STATES | MFGR#24    | 1076890116 |\n| 1998 | UNITED STATES | MFGR#25    | 1178223904 |\n+------+---------------+------------+------------+\n\n-- Q4.3\n+------+------------+-----------+---------------+\n| year | s_city     | p_brand   | profit        |\n+------+------------+-----------+---------------+\n| 1997 | UNITED ST1 | MFGR#1414 | 10001830.0000 |\n| 1997 | UNITED ST1 | MFGR#147  | 13643806.0000 |\n| 1997 | UNITED ST9 | MFGR#144  |  4953914.0000 |\n| 1998 | UNITED ST0 | MFGR#1424 | 14202690.0000 |\n| 1998 | UNITED ST5 | MFGR#1430 |  7742358.0000 |\n+------+------------+-----------+---------------+\n5 rows in set (0.25 sec)\n</code></pre>"},{"location":"MatrixOne/Test/performance-testing/TPCC-test-with-matrixone/","title":"Complete a TPC-C Test with MatrixOne","text":"<p>By walking through this tutorial, you'll learn how to complete a TPC-C Test with MatrixOne.</p>"},{"location":"MatrixOne/Test/performance-testing/TPCC-test-with-matrixone/#tpc-c-overview","title":"TPC-C Overview","text":"<p>TPC-C is an industry-standard benchmark for OLTP databases. TPC-C models a warehouse-centric order processing application, and the database used in the TPC-C benchmark consists of nine tables, such as Warehouse, Customer, Order, Item, and so on (See the below ER diagram). Except for the item table, each record is populated on a per-warehouse basis, and the number of warehouses can be configurable as a scale factor.</p> <p></p> <p>TPC-C has five transaction types: NewOrder, Payment, OrderStatus, Delivery, and StockLevel. The request rate of each transaction is defined in the specification, and almost 90% of transactions are NewOrder and Payment, which are write-intensive. TPC-C transactions mostly access a single (local) warehouse, but about 10% of transactions interact with another (remote) warehouse.</p>"},{"location":"MatrixOne/Test/performance-testing/TPCC-test-with-matrixone/#before-you-start","title":"Before you start","text":"<p>Make sure you have already Deployed standalone MatrixOne.</p>"},{"location":"MatrixOne/Test/performance-testing/TPCC-test-with-matrixone/#clone-mo-tpcc-repository","title":"Clone mo-tpcc repository","text":"<pre><code>git clone https://github.com/matrixorigin/mo-tpcc.git\n</code></pre>"},{"location":"MatrixOne/Test/performance-testing/TPCC-test-with-matrixone/#steps","title":"Steps","text":""},{"location":"MatrixOne/Test/performance-testing/TPCC-test-with-matrixone/#introduction","title":"Introduction","text":"<p>This section will teach you how to generate the TPCC data, create TPCC tables, load data to MatrixOne, and run TPCC.</p> <p>Now you can execute commands step by step as the following descriptions.</p>"},{"location":"MatrixOne/Test/performance-testing/TPCC-test-with-matrixone/#1-configure-the-propsmo-file","title":"1. Configure the props.mo file","text":"<p>After the mo-tpch repository is cloned, open the mo-tpcc directory, and modify the configuration items of the props.mo file. The number of warehouses can be configurable by the <code>warehouse=XX</code> row in this file.</p> <pre><code>db=mo\ndriver=com.mysql.cj.jdbc.Driver\nconn=jdbc:mysql://127.0.0.1:6001/tpcc?characterSetResults=utf8&amp;continueBatchOnError=false&amp;useServerPrepStmts=true&amp;alwaysSendSetIsolation=false&amp;useLocalSessionState=true&amp;zeroDateTimeBehavior=CONVERT_TO_NULL&amp;failoverReadOnly=false&amp;serverTimezone=Asia/Shanghai&amp;enabledTLSProtocols=TLSv1.2&amp;useSSL=false\nuser=root\npassword=111\n\n//the number of warehouse\nwarehouses=10\nloadWorkers=4\n\n//the num of terminals that will simultaneously run\n//must be less than warehouses*10\nterminals=1\n//To run specified transactions per terminal- runMins must equal zero\nrunTxnsPerTerminal=0\n//To run for specified minutes- runTxnsPerTerminal must equal zero\nrunMins=1\n//Number of total transactions per minute\nlimitTxnsPerMin=0\n</code></pre> <p>After the modifications are complete, save the props.mo file.</p>"},{"location":"MatrixOne/Test/performance-testing/TPCC-test-with-matrixone/#2-create-tpcc-database-and-tables","title":"2. Create TPCC database and tables","text":"<p>Open a new terminal window, execute the following command:</p> <pre><code>cd mo-tpcc\n./runSQL.sh props.mo tableCreates\n</code></pre> <p>Npte: If you get an error like <code>java:command not found</code> while running <code>./runSQL.sh props.mo tableCreates</code>, install or reinstall Java and the JDK on your computer.</p> <p>The above code means to enter the mo-tpch directory and create the TPCC database and table.</p> <p>The following is an example of the command output:</p> <pre><code># ------------------------------------------------------------\n# Loading SQL file ./sql/tableCreates.sql\n# ------------------------------------------------------------\ndrop database if exists tpcc;\ncreate database if not exists tpcc;\nuse tpcc;\ncreate table bmsql_config (\ncfg_name    varchar(30) primary key,\ncfg_value   varchar(50)\n);\ncreate table bmsql_warehouse (\nw_id        integer   not null,\nw_ytd       decimal(12,2),\nw_tax       decimal(4,4),\nw_name      varchar(10),\nw_street_1  varchar(20),\nw_street_2  varchar(20),\nw_city      varchar(20),\nw_state     char(2),\nw_zip       char(9),\nprimary key (w_id)\n) PARTITION BY KEY(w_id);\ncreate table bmsql_district (\nd_w_id       integer       not null,\nd_id         integer       not null,\nd_ytd        decimal(12,2),\nd_tax        decimal(4,4),\nd_next_o_id  integer,\nd_name       varchar(10),\nd_street_1   varchar(20),\nd_street_2   varchar(20),\nd_city       varchar(20),\nd_state      char(2),\nd_zip        char(9),\nprimary key (d_w_id, d_id)\n) PARTITION BY KEY(d_w_id);\ncreate table bmsql_customer (\nc_w_id         integer        not null,\nc_d_id         integer        not null,\nc_id           integer        not null,\nc_discount     decimal(4,4),\nc_credit       char(2),\nc_last         varchar(16),\nc_first        varchar(16),\nc_credit_lim   decimal(12,2),\nc_balance      decimal(12,2),\nc_ytd_payment  decimal(12,2),\nc_payment_cnt  integer,\nc_delivery_cnt integer,\nc_street_1     varchar(20),\nc_street_2     varchar(20),\nc_city         varchar(20),\nc_state        char(2),\nc_zip          char(9),\nc_phone        char(16),\nc_since        timestamp,\nc_middle       char(2),\nc_data         varchar(500),\nprimary key (c_w_id, c_d_id, c_id)\n) PARTITION BY KEY(c_w_id);\ncreate table bmsql_history (\nhist_id  integer auto_increment,\nh_c_id   integer,\nh_c_d_id integer,\nh_c_w_id integer,\nh_d_id   integer,\nh_w_id   integer,\nh_date   timestamp,\nh_amount decimal(6,2),\nh_data   varchar(24),\nprimary key (hist_id)\n);\ncreate table bmsql_new_order (\nno_w_id  integer   not null,\nno_d_id  integer   not null,\nno_o_id  integer   not null,\nprimary key (no_w_id, no_d_id, no_o_id)\n) PARTITION BY KEY(no_w_id);\ncreate table bmsql_oorder (\no_w_id       integer      not null,\no_d_id       integer      not null,\no_id         integer      not null,\no_c_id       integer,\no_carrier_id integer,\no_ol_cnt     integer,\no_all_local  integer,\no_entry_d    timestamp,\nprimary key (o_w_id, o_d_id, o_id)\n) PARTITION BY KEY(o_w_id);\ncreate table bmsql_order_line (\nol_w_id         integer   not null,\nol_d_id         integer   not null,\nol_o_id         integer   not null,\nol_number       integer   not null,\nol_i_id         integer   not null,\nol_delivery_d   timestamp,\nol_amount       decimal(6,2),\nol_supply_w_id  integer,\nol_quantity     integer,\nol_dist_info    char(24),\nprimary key (ol_w_id, ol_d_id, ol_o_id, ol_number)\n) PARTITION BY KEY(ol_w_id);\ncreate table bmsql_item (\ni_id     integer      not null,\ni_name   varchar(24),\ni_price  decimal(5,2),\ni_data   varchar(50),\ni_im_id  integer,\nprimary key (i_id)\n) PARTITION BY KEY(i_id);\ncreate table bmsql_stock (\ns_w_id       integer       not null,\ns_i_id       integer       not null,\ns_quantity   integer,\ns_ytd        integer,\ns_order_cnt  integer,\ns_remote_cnt integer,\ns_data       varchar(50),\ns_dist_01    char(24),\ns_dist_02    char(24),\ns_dist_03    char(24),\ns_dist_04    char(24),\ns_dist_05    char(24),\ns_dist_06    char(24),\ns_dist_07    char(24),\ns_dist_08    char(24),\ns_dist_09    char(24),\ns_dist_10    char(24),\nprimary key (s_w_id, s_i_id)\n) PARTITION BY KEY(s_w_id);\n</code></pre>"},{"location":"MatrixOne/Test/performance-testing/TPCC-test-with-matrixone/#3-generate-tpcc-data","title":"3. Generate TPCC data","text":"<p>To generate the TPCC data execute the following command:</p> <pre><code>./runLoader.sh props.mo filelocation /yourpath/\n</code></pre> <p>The following is an example of the command output:</p> <pre><code>Starting BenchmarkSQL LoadData\n\nprops.mo\ndriver=com.mysql.cj.jdbc.Driver\nconn=jdbc:mysql://127.0.0.1:6001/tpcc?characterSetResults=utf8&amp;continueBatchOnError=false&amp;useServerPrepStmts=true&amp;alwaysSendSetIsolation=false&amp;useLocalSessionState=true&amp;zeroDateTimeBehavior=CONVERT_TO_NULL&amp;failoverReadOnly=false&amp;serverTimezone=Asia/Shanghai&amp;enabledTLSProtocols=TLSv1.2&amp;useSSL=false\nuser=root\npassword=***********\nwarehouses=10\nloadWorkers=4\nfileLocation (not defined)\ncsvNullValue (not defined - using default '')\n\nWorker 000: Loading ITEM\nWorker 001: Loading Warehouse      1\nWorker 002: Loading Warehouse      2\nWorker 003: Loading Warehouse      3\nWorker 000: Loading ITEM done\nWorker 000: Loading Warehouse      4\nWorker 003: Loading Warehouse      3 done\nWorker 003: Loading Warehouse      5\nWorker 001: Loading Warehouse      1 done\nWorker 001: Loading Warehouse      6\nWorker 002: Loading Warehouse      2 done\nWorker 002: Loading Warehouse      7\nWorker 000: Loading Warehouse      4 done\nWorker 000: Loading Warehouse      8\nWorker 003: Loading Warehouse      5 done\nWorker 003: Loading Warehouse      9\nWorker 000: Loading Warehouse      8 done\nWorker 000: Loading Warehouse     10\nWorker 002: Loading Warehouse      7 done\nWorker 001: Loading Warehouse      6 done\nWorker 000: Loading Warehouse     10 done\nWorker 003: Loading Warehouse      9 done\n</code></pre> <p>You will find in your designated path 10 csv files. Each csv file maps to a table created in the second step.</p> <pre><code>config.csv\ncust-hist.csv\ncustomer.csv\ndistrict.csv\nitem.csv\nnew-order.csv\norder-line.csv\norder.csv\nstock.csv\nwarehouse.csv\n</code></pre>"},{"location":"MatrixOne/Test/performance-testing/TPCC-test-with-matrixone/#4-load-tpcc-data-to-matrixone","title":"4. Load TPCC data to MatrixOne","text":"<p>Use MySQL client to connect to MatrixOne and execute the following statements to load the csv files into MatrixOne.</p> <pre><code>mysql&gt; load data infile '/yourpath/config.csv' INTO TABLE bmsql_config FIELDS TERMINATED BY ',' OPTIONALLY ENCLOSED BY '\"' LINES TERMINATED BY \"\\r\\n\";\nload data infile '/yourpath/cust-hist.csv' INTO TABLE bmsql_history FIELDS TERMINATED BY ',' OPTIONALLY ENCLOSED BY '\"' LINES TERMINATED BY \"\\r\\n\";\nload data infile '/yourpath/data/customer.csv' INTO TABLE bmsql_customer FIELDS TERMINATED BY ',' OPTIONALLY ENCLOSED BY '\"' LINES TERMINATED BY \"\\r\\n\";\nload data infile '/yourpath/data/district.csv' INTO TABLE bmsql_district FIELDS TERMINATED BY ',' OPTIONALLY ENCLOSED BY '\"' LINES TERMINATED BY \"\\r\\n\";\nload data infile '/yourpath/data/warehouse.csv' INTO TABLE bmsql_warehouse FIELDS TERMINATED BY ',' OPTIONALLY ENCLOSED BY '\"' LINES TERMINATED BY \"\\r\\n\";\nload data infile '/yourpath/item.csv' INTO TABLE bmsql_item FIELDS TERMINATED BY ',' OPTIONALLY ENCLOSED BY '\"' LINES TERMINATED BY \"\\r\\n\";\nload data infile '/yourpath/new-order.csv' INTO TABLE bmsql_new_order FIELDS TERMINATED BY ',' OPTIONALLY ENCLOSED BY '\"' LINES TERMINATED BY \"\\r\\n\";\nload data infile '/yourpath/order-line.csv' INTO TABLE bmsql_order_line FIELDS TERMINATED BY ',' OPTIONALLY ENCLOSED BY '\"' LINES TERMINATED BY \"\\r\\n\";\nload data infile '/yourpath/stock.csv' INTO TABLE bmsql_stock FIELDS TERMINATED BY ',' OPTIONALLY ENCLOSED BY '\"' LINES TERMINATED BY \"\\r\\n\";\nload data infile '/yourpath/order.csv' INTO TABLE bmsql_oorder FIELDS TERMINATED BY ',' OPTIONALLY ENCLOSED BY '\"' LINES TERMINATED BY \"\\r\\n\";\n</code></pre>"},{"location":"MatrixOne/Test/performance-testing/TPCC-test-with-matrixone/#5-run-tpcc-test","title":"5. Run TPCC test","text":"<p>To run the TPCC test, execute the following command:</p> <pre><code>./runBenchmark.sh props.mo\n</code></pre> <p>The following is an example of the command output:</p> <pre><code>.:./lib/*\n2022-12-22 21:15:35 INFO  jTPCC:78 - Term-00,\n2022-12-22 21:15:35 INFO  jTPCC:79 - Term-00, +-------------------------------------------------------------+\n2022-12-22 21:15:35 INFO  jTPCC:80 - Term-00,      BenchmarkSQL v5.0\n2022-12-22 21:15:35 INFO  jTPCC:81 - Term-00, +-------------------------------------------------------------+\n2022-12-22 21:15:35 INFO  jTPCC:82 - Term-00,  (c) 2003, Raul Barbosa\n2022-12-22 21:15:35 INFO  jTPCC:83 - Term-00,  (c) 2004-2016, Denis Lussier\n2022-12-22 21:15:35 INFO  jTPCC:84 - Term-00,  (c) 2016, Jan Wieck\n2022-12-22 21:15:35 INFO  jTPCC:85 - Term-00, +-------------------------------------------------------------+\n2022-12-22 21:15:35 INFO  jTPCC:86 - Term-00,\n2022-12-22 21:15:35 INFO  jTPCC:63 - Term-00, db=mo\n2022-12-22 21:15:35 INFO  jTPCC:63 - Term-00, driver=com.mysql.cj.jdbc.Driver\n2022-12-22 21:15:35 INFO  jTPCC:63 - Term-00, conn=jdbc:mysql://127.0.0.1:6001/tpcc?characterSetResults=utf8&amp;continueBatchOnError=false&amp;useServerPrepStmts=true&amp;alwaysSendSetIsolation=false&amp;useLocalSessionState=true&amp;zeroDateTimeBehavior=CONVERT_TO_NULL&amp;failoverReadOnly=false&amp;serverTimezone=Asia/Shanghai&amp;enabledTLSProtocols=TLSv1.2&amp;useSSL=false\n2022-12-22 21:15:35 INFO  jTPCC:63 - Term-00, user=root\n2022-12-22 21:15:35 INFO  jTPCC:93 - Term-00,\n2022-12-22 21:15:35 INFO  jTPCC:63 - Term-00, warehouses=10\n2022-12-22 21:15:35 INFO  jTPCC:63 - Term-00, terminals=1\n2022-12-22 21:15:35 INFO  jTPCC:100 - Term-00, runMins=1\n2022-12-22 21:15:35 INFO  jTPCC:63 - Term-00, limitTxnsPerMin=0\n2022-12-22 21:15:35 INFO  jTPCC:63 - Term-00, terminalWarehouseFixed=false\n2022-12-22 21:15:35 INFO  jTPCC:108 - Term-00,\n2022-12-22 21:15:35 INFO  jTPCC:63 - Term-00, newOrderWeight=45\n2022-12-22 21:15:35 INFO  jTPCC:63 - Term-00, paymentWeight=43\n2022-12-22 21:15:35 INFO  jTPCC:63 - Term-00, orderStatusWeight=4\n2022-12-22 21:15:35 INFO  jTPCC:63 - Term-00, deliveryWeight=4\n2022-12-22 21:15:35 INFO  jTPCC:63 - Term-00, stockLevelWeight=4\n2022-12-22 21:15:35 INFO  jTPCC:115 - Term-00,\n2022-12-22 21:15:35 INFO  jTPCC:63 - Term-00, resultDirectory=my_result_%tY-%tm-%td_%tH%tM%tS\n2022-12-22 21:15:35 INFO  jTPCC:63 - Term-00, osCollectorScript=null\n2022-12-22 21:15:35 INFO  jTPCC:119 - Term-00,\n2022-12-22 21:15:35 INFO  jTPCC:710 - Term-00, Loading database driver: 'com.mysql.cj.jdbc.Driver'...\n2022-12-22 21:15:35 INFO  jTPCC:219 - Term-00, copied props.mo to my_result_2022-12-22_211535/run.properties\n2022-12-22 21:15:35 INFO  jTPCC:239 - Term-00, created my_result_2022-12-22_211535/data/runInfo.csv for runID 1\n2022-12-22 21:15:35 INFO  jTPCC:255 - Term-00, writing per transaction results to my_result_2022-12-22_211535/data/result.csv\n2022-12-22 21:15:35 INFO  jTPCC:268 - Term-00,\n2022-12-22 21:15:36 INFO  jTPCC:324 - Term-00, C value for C_LAST during load: 28\n2022-12-22 21:15:36 INFO  jTPCC:325 - Term-00, C value for C_LAST this run:    132\n2022-12-22 21:15:36 INFO  jTPCC:326 - Term-00,\n2022-12-22 21:15:36 INFO  jTPCC:710 - Term-00, Session started!   Memory Usage: 17MB / 245MB          \n2022-12-22 21:15:36 INFO  jTPCC:710 - Term-00, Creating 1 terminal(s) with -1 transaction(s) per terminal...\n2022-12-22 21:15:36 INFO  jTPCC:710 - Term-00, Terminal Warehouse is NOT fixed\n2022-12-22 21:15:36 INFO  jTPCC:710 - Term-00, Transaction Weights: 45% New-Order, 43% Payment, 4% Order-Status, 4% Delivery, 4% Stock-Level\n2022-12-22 21:15:36 INFO  jTPCC:710 - Term-00, Number of Terminals      1\n2022-12-22 21:15:36 INFO  jTPCC:710 - Term-00, Creating database connection for Term-01...\n2022-12-22 21:15:36 INFO  jTPCC:710 - Term-00, Term-01  7\n2022-12-22 21:15:36 INFO  jTPCC:710 - Term-00, Transaction      Weight\n2022-12-22 21:15:36 INFO  jTPCC:710 - Term-00, % New-Order      45\n2022-12-22 21:15:36 INFO  jTPCC:710 - Term-00, % Payment        43\n2022-12-22 21:15:36 INFO  jTPCC:710 - Term-00, % Order-Status   4\n2022-12-22 21:15:36 INFO  jTPCC:710 - Term-00, % Delivery       4\n2022-12-22 21:15:36 INFO  jTPCC:710 - Term-00, % Stock-Level    4\n2022-12-22 21:15:36 INFO  jTPCC:710 - Term-00, Transaction Number       Terminal        Type    Execution Time (ms)             Comment\n2022-12-22 21:15:36 INFO  jTPCC:710 - Term-00, Created 1 terminal(s) successfully!\n2022-12-22 21:15:36 INFO  jTPCC:710 - Term-00, Starting all terminals...\n2022-12-22 21:15:36 INFO  jTPCC:710 - Term-00, All terminals started executing 2022-12-22 21:15:36\nTerm-00, Running Average tpmTOTAL: 60000.00    Current tpmTOTAL: 12    Memory Usage: 19MB / 245MB   2022-12-22 21:15:36 INFO  jTPCCTerminal:350 - Term-01, Executing for a limited time...\n2022-12-22 21:16:42 INFO  jTPCC:710 - Term-00, The time limit has been reached.: 21MB / 245MB          \n2022-12-22 21:16:42 INFO  jTPCC:710 - Term-00, Signalling all terminals to stop...\n2022-12-22 21:16:42 INFO  jTPCCTerminal:350 - Term-01,\n2022-12-22 21:16:42 INFO  jTPCCTerminal:350 - Term-01, Terminal received stop signal!\n2022-12-22 21:16:42 INFO  jTPCCTerminal:350 - Term-01, Finishing current transaction before exit...\n2022-12-22 21:16:42 INFO  jTPCC:710 - Term-00, Waiting for all active transactions to end...\n2022-12-22 21:16:42 INFO  jTPCCTerminal:350 - Term-01, OTAL: 24    Memory Usage: 22MB / 245MB          \n2022-12-22 21:16:42 INFO  jTPCCTerminal:350 - Term-01, Closing statement and connection...\n2022-12-22 21:16:42 INFO  jTPCCTerminal:350 - Term-01,\n2022-12-22 21:16:42 INFO  jTPCCTerminal:350 - Term-01, Terminal 'Term-01' finished after 0 transaction(s).\n2022-12-22 21:16:42 INFO  jTPCC:710 - Term-00, All terminals finished executing 2022-12-22 21:16:42\n\n2022-12-22 21:16:42 INFO  jTPCC:694 - Term-00,\n2022-12-22 21:16:42 INFO  jTPCC:695 - Term-00,\n2022-12-22 21:16:42 INFO  jTPCC:696 - Term-00, Measured tpmC (NewOrders) = 2.74\n2022-12-22 21:16:42 INFO  jTPCC:697 - Term-00, Measured tpmTOTAL = 3.66\n2022-12-22 21:16:42 INFO  jTPCC:698 - Term-00, Measured tpmE (ErrorCount) = 0.0\n2022-12-22 21:16:42 INFO  jTPCC:699 - Term-00, Session Start     = 2022-12-22 21:15:36\n2022-12-22 21:16:42 INFO  jTPCC:700 - Term-00, Session End       = 2022-12-22 21:16:42\n2022-12-22 21:16:42 INFO  jTPCC:701 - Term-00, Transaction Count = 3\n2022-12-22 21:16:42 INFO  jTPCC:702 - Term-00, Transaction Error = 0\n2022-12-22 21:16:42 INFO  jTPCC:703 - Term-00, Transaction NewOrders = 3\n2022-12-22 21:16:42 INFO  jTPCC:710 - Term-00, Session finished!\n</code></pre> <p>The value of tpmC(transactions per minute) is given in the result.</p>"},{"location":"MatrixOne/Test/performance-testing/TPCH-test-with-matrixone/","title":"Complete a TPCH Test with MatrixOne","text":"<p>The TPC-H is a decision support benchmark. It consists of a suite of business oriented ad-hoc queries and concurrent data modifications. The queries and the data populating the database have been chosen to have broad industry-wide relevance. This benchmark illustrates decision support systems that examine large volumes of data, execute queries with a high degree of complexity, and give answers to critical business questions. TPC-H is a widely used benchmark for OLAP databases.</p> <p>By walking through this tutorial, you'll learn how to complete a TPC-H Test with MatrixOne.</p>"},{"location":"MatrixOne/Test/performance-testing/TPCH-test-with-matrixone/#before-you-start","title":"Before you start","text":"<p>Make sure you have already Deployed standalone MatrixOne.</p>"},{"location":"MatrixOne/Test/performance-testing/TPCH-test-with-matrixone/#1-compile-tpch-dbgen","title":"1. Compile TPCH dbgen","text":"<p>The tpch dbgen utility generates, by default, a set of flat files suitable for loading into the tpch schema with the size based on the \"Scale Factor\" argument. A scale factor of 1 produces a complete data set of approximately 1 GB, a scale factor of 10 produces a data set of approximately 10 GB and so on.</p> <pre><code>git clone https://github.com/electrum/tpch-dbgen.git\ncd tpch-dbgen\nmake\n</code></pre>"},{"location":"MatrixOne/Test/performance-testing/TPCH-test-with-matrixone/#2-generate-data","title":"2. Generate data","text":"<p>Run dbgen for the appropriate database size factor (1GB in the sample).</p> <pre><code>./dbgen -s 1\n</code></pre> <p>Generation may take a while. When completed, you can see the resulting files.</p> <pre><code>total 2150000\n-rw-r--r--  1 deister  staff   24346144 13 may 12:05 customer.tbl\n-rw-r--r--  1 deister  staff  759863287 13 may 12:05 lineitem.tbl\n-rw-r--r--  1 deister  staff       2224 13 may 12:05 nation.tbl\n-rw-r--r--  1 deister  staff  171952161 13 may 12:05 orders.tbl\n-rw-r--r--  1 deister  staff   24135125 13 may 12:05 part.tbl\n-rw-r--r--  1 deister  staff  118984616 13 may 12:05 partsupp.tbl\n-rw-r--r--  1 deister  staff        389 13 may 12:05 region.tbl\n-rw-r--r--  1 deister  staff    1409184 13 may 12:05 supplier.tbl\n</code></pre> <p>We have also prepared a 1GB dataset for downloading.  You can get the data files directly:</p> <pre><code>https://community-shared-data-1308875761.cos.ap-beijing.myqcloud.com/tpch/tpch-1g.zip\n</code></pre>"},{"location":"MatrixOne/Test/performance-testing/TPCH-test-with-matrixone/#3-create-tables-in-matrixone","title":"3. Create tables in MatrixOne","text":"<p>MatrixOne does not support partition acceleration at the moment, and the creation code of the <code>LINEITEM</code> table has the following modifications:</p> <ul> <li>Removed <code>PARTITION BY KEY()</code> for <code>LINEITEM</code> table.</li> </ul> <pre><code>drop database if exists TPCH;\ncreate database if not exists TPCH;\nuse TPCH;\nCREATE TABLE NATION(\nN_NATIONKEY  INTEGER NOT NULL,\nN_NAME       CHAR(25) NOT NULL,\nN_REGIONKEY  INTEGER NOT NULL,\nN_COMMENT    VARCHAR(152),\nPRIMARY KEY (N_NATIONKEY)\n);\n\nCREATE TABLE REGION(\nR_REGIONKEY  INTEGER NOT NULL,\nR_NAME       CHAR(25) NOT NULL,\nR_COMMENT    VARCHAR(152),\nPRIMARY KEY (R_REGIONKEY)\n);\n\nCREATE TABLE PART(\nP_PARTKEY     INTEGER NOT NULL,\nP_NAME        VARCHAR(55) NOT NULL,\nP_MFGR        CHAR(25) NOT NULL,\nP_BRAND       CHAR(10) NOT NULL,\nP_TYPE        VARCHAR(25) NOT NULL,\nP_SIZE        INTEGER NOT NULL,\nP_CONTAINER   CHAR(10) NOT NULL,\nP_RETAILPRICE DECIMAL(15,2) NOT NULL,\nP_COMMENT     VARCHAR(23) NOT NULL,\nPRIMARY KEY (P_PARTKEY)\n);\n\nCREATE TABLE SUPPLIER(\nS_SUPPKEY     INTEGER NOT NULL,\nS_NAME        CHAR(25) NOT NULL,\nS_ADDRESS     VARCHAR(40) NOT NULL,\nS_NATIONKEY   INTEGER NOT NULL,\nS_PHONE       CHAR(15) NOT NULL,\nS_ACCTBAL     DECIMAL(15,2) NOT NULL,\nS_COMMENT     VARCHAR(101) NOT NULL,\nPRIMARY KEY (S_SUPPKEY)\n);\n\nCREATE TABLE PARTSUPP (\nPS_PARTKEY    INTEGER NOT NULL,\nPS_SUPPKEY    INTEGER NOT NULL,\nPS_AVAILQTY   INTEGER NOT NULL,\nPS_SUPPLYCOST DECIMAL(15,2) NOT NULL,\nPS_COMMENT    VARCHAR(199) NOT NULL,\nPRIMARY KEY (PS_PARTKEY, PS_SUPPKEY)\n);\n\nCREATE TABLE CUSTOMER(\nC_CUSTKEY     INTEGER NOT NULL,\nC_NAME        VARCHAR(25) NOT NULL,\nC_ADDRESS     VARCHAR(40) NOT NULL,\nC_NATIONKEY   INTEGER NOT NULL,\nC_PHONE       CHAR(15) NOT NULL,\nC_ACCTBAL     DECIMAL(15,2)   NOT NULL,\nC_MKTSEGMENT  CHAR(10) NOT NULL,\nC_COMMENT     VARCHAR(117) NOT NULL,\nPRIMARY KEY (C_CUSTKEY)\n);\n\nCREATE TABLE ORDERS(\nO_ORDERKEY       BIGINT NOT NULL,\nO_CUSTKEY        INTEGER NOT NULL,\nO_ORDERSTATUS    CHAR(1) NOT NULL,\nO_TOTALPRICE     DECIMAL(15,2) NOT NULL,\nO_ORDERDATE      DATE NOT NULL,\nO_ORDERPRIORITY  CHAR(15) NOT NULL,\nO_CLERK          CHAR(15) NOT NULL,\nO_SHIPPRIORITY   INTEGER NOT NULL,\nO_COMMENT        VARCHAR(79) NOT NULL,\nPRIMARY KEY (O_ORDERKEY)\n);\n\nCREATE TABLE LINEITEM (\nL_ORDERKEY BIGINT NOT NULL,\nL_PARTKEY INTEGER NOT NULL,\nL_SUPPKEY INTEGER NOT NULL,\nL_LINENUMBER INTEGER NOT NULL,\nL_QUANTITY DECIMAL(15,2) NOT NULL,\nL_EXTENDEDPRICE DECIMAL(15,2) NOT NULL,\nL_DISCOUNT DECIMAL(15,2) NOT NULL,\nL_TAX DECIMAL(15,2) NOT NULL,\nL_RETURNFLAG CHAR(1) NOT NULL,\nL_LINESTATUS CHAR(1) NOT NULL,\nL_SHIPDATE DATE NOT NULL,\nL_COMMITDATE DATE NOT NULL,\nL_RECEIPTDATE DATE NOT NULL,\nL_SHIPINSTRUCT CHAR(25) NOT NULL,\nL_SHIPMODE CHAR(10) NOT NULL,\nL_COMMENT VARCHAR(44) NOT NULL,\nPRIMARY KEY (L_ORDERKEY, L_LINENUMBER)\n);\n</code></pre>"},{"location":"MatrixOne/Test/performance-testing/TPCH-test-with-matrixone/#4-load-data-into-the-created-tables","title":"4. Load data into the created tables","text":"<p>Load the sigle table dataset into related tables with this command in MatrixOne:</p> <pre><code>load data infile '/YOUR_TPCH_DATA_PATH/nation.tbl' into table NATION FIELDS TERMINATED BY '|' OPTIONALLY ENCLOSED BY '\"' LINES TERMINATED BY '\\n';\n\nload data infile '/YOUR_TPCH_DATA_PATH/region.tbl' into table REGION FIELDS TERMINATED BY '|' OPTIONALLY ENCLOSED BY '\"' LINES TERMINATED BY '\\n';\n\nload data infile '/YOUR_TPCH_DATA_PATH/part.tbl' into table PART FIELDS TERMINATED BY '|' OPTIONALLY ENCLOSED BY '\"' LINES TERMINATED BY '\\n';\n\nload data infile '/YOUR_TPCH_DATA_PATH/supplier.tbl' into table SUPPLIER FIELDS TERMINATED BY '|' OPTIONALLY ENCLOSED BY '\"' LINES TERMINATED BY '\\n';\n\nload data infile '/YOUR_TPCH_DATA_PATH/partsupp.tbl' into table PARTSUPP FIELDS TERMINATED BY '|' OPTIONALLY ENCLOSED BY '\"' LINES TERMINATED BY '\\n';\n\nload data infile '/YOUR_TPCH_DATA_PATH/orders.tbl' into table ORDERS FIELDS TERMINATED BY '|' OPTIONALLY ENCLOSED BY '\"' LINES TERMINATED BY '\\n';\n\nload data infile '/YOUR_TPCH_DATA_PATH/customer.tbl' into table CUSTOMER FIELDS TERMINATED BY '|' OPTIONALLY ENCLOSED BY '\"' LINES TERMINATED BY '\\n';\n\nload data infile '/YOUR_TPCH_DATA_PATH/lineitem.tbl' into table LINEITEM FIELDS TERMINATED BY '|' OPTIONALLY ENCLOSED BY '\"' LINES TERMINATED BY '\\n';\n</code></pre> <p>Then you can query data in MatrixOne with the created table.</p>"},{"location":"MatrixOne/Test/performance-testing/TPCH-test-with-matrixone/#5-run-tpch-queries","title":"5. Run TPCH Queries","text":"<pre><code>-- Q1\nselect\nl_returnflag,\nl_linestatus,\nsum(l_quantity) as sum_qty,\nsum(l_extendedprice) as sum_base_price,\nsum(l_extendedprice * (1 - l_discount)) as sum_disc_price,\nsum(l_extendedprice * (1 - l_discount) * (1 + l_tax)) as sum_charge,\navg(l_quantity) as avg_qty,\navg(l_extendedprice) as avg_price,\navg(l_discount) as avg_disc,\ncount(*) as count_order\nfrom\nlineitem\nwhere\nl_shipdate &lt;= date '1998-12-01' - interval '112' day\ngroup by\nl_returnflag,\nl_linestatus\norder by\nl_returnflag,\nl_linestatus\n;\n\n-- Q2\nselect\ns_acctbal,\ns_name,\nn_name,\np_partkey,\np_mfgr,\ns_address,\ns_phone,\ns_comment\nfrom\npart,\nsupplier,\npartsupp,\nnation,\nregion\nwhere\np_partkey = ps_partkey\nand s_suppkey = ps_suppkey\nand p_size = 48\nand p_type like '%TIN'\nand s_nationkey = n_nationkey\nand n_regionkey = r_regionkey\nand r_name = 'MIDDLE EAST'\nand ps_supplycost = (\nselect\nmin(ps_supplycost)\nfrom\npartsupp,\nsupplier,\nnation,\nregion\nwhere\np_partkey = ps_partkey\nand s_suppkey = ps_suppkey\nand s_nationkey = n_nationkey\nand n_regionkey = r_regionkey\nand r_name = 'MIDDLE EAST'\n)\norder by\ns_acctbal desc,\nn_name,\ns_name,\np_partkey\nlimit 100\n;\n\n\n-- Q3\nselect\nl_orderkey,\nsum(l_extendedprice * (1 - l_discount)) as revenue,\no_orderdate,\no_shippriority\nfrom\ncustomer,\norders,\nlineitem\nwhere\nc_mktsegment = 'HOUSEHOLD'\nand c_custkey = o_custkey\nand l_orderkey = o_orderkey\nand o_orderdate &lt; date '1995-03-29'\nand l_shipdate &gt; date '1995-03-29'\ngroup by\nl_orderkey,\no_orderdate,\no_shippriority\norder by\nrevenue desc,\no_orderdate\nlimit 10\n;\n\n-- Q4\nselect\no_orderpriority,\ncount(*) as order_count\nfrom\norders\nwhere\no_orderdate &gt;= date '1997-07-01'\nand o_orderdate &lt; date '1997-07-01' + interval '3' month\nand exists (\nselect\n*\nfrom\nlineitem\nwhere\nl_orderkey = o_orderkey\nand l_commitdate &lt; l_receiptdate\n)\ngroup by\no_orderpriority\norder by\no_orderpriority\n;\n\n\n-- Q5\nselect\nn_name,\nsum(l_extendedprice * (1 - l_discount)) as revenue\nfrom\ncustomer,\norders,\nlineitem,\nsupplier,\nnation,\nregion\nwhere\nc_custkey = o_custkey\nand l_orderkey = o_orderkey\nand l_suppkey = s_suppkey\nand c_nationkey = s_nationkey\nand s_nationkey = n_nationkey\nand n_regionkey = r_regionkey\nand r_name = 'AMERICA'\nand o_orderdate &gt;= date '1994-01-01'\nand o_orderdate &lt; date '1994-01-01' + interval '1' year\ngroup by\nn_name\norder by\nrevenue desc\n;\n\n\n-- Q6\nselect\nsum(l_extendedprice * l_discount) as revenue\nfrom\nlineitem\nwhere\nl_shipdate &gt;= date '1994-01-01'\nand l_shipdate &lt; date '1994-01-01' + interval '1' year\nand l_discount between 0.03 - 0.01 and 0.03 + 0.01\nand l_quantity &lt; 24;\n\n-- Q7\nselect\nsupp_nation,\ncust_nation,\nl_year,\nsum(volume) as revenue\nfrom\n(\nselect\nn1.n_name as supp_nation,\nn2.n_name as cust_nation,\nextract(year from l_shipdate) as l_year,\nl_extendedprice * (1 - l_discount) as volume\nfrom\nsupplier,\nlineitem,\norders,\ncustomer,\nnation n1,\nnation n2\nwhere\ns_suppkey = l_suppkey\nand o_orderkey = l_orderkey\nand c_custkey = o_custkey\nand s_nationkey = n1.n_nationkey\nand c_nationkey = n2.n_nationkey\nand (\n(n1.n_name = 'FRANCE' and n2.n_name = 'ARGENTINA')\nor (n1.n_name = 'ARGENTINA' and n2.n_name = 'FRANCE')\n)\nand l_shipdate between date '1995-01-01' and date '1996-12-31'\n) as shipping\ngroup by\nsupp_nation,\ncust_nation,\nl_year\norder by\nsupp_nation,\ncust_nation,\nl_year\n;\n\n-- Q8\nselect\no_year,\n(sum(case\nwhen nation = 'ARGENTINA' then volume\nelse 0\nend) / sum(volume)) as mkt_share\nfrom\n(\nselect\nextract(year from o_orderdate) as o_year,\nl_extendedprice * (1 - l_discount) as volume,\nn2.n_name as nation\nfrom\npart,\nsupplier,\nlineitem,\norders,\ncustomer,\nnation n1,\nnation n2,\nregion\nwhere\np_partkey = l_partkey\nand s_suppkey = l_suppkey\nand l_orderkey = o_orderkey\nand o_custkey = c_custkey\nand c_nationkey = n1.n_nationkey\nand n1.n_regionkey = r_regionkey\nand r_name = 'AMERICA'\nand s_nationkey = n2.n_nationkey\nand o_orderdate between date '1995-01-01' and date '1996-12-31'\nand p_type = 'ECONOMY BURNISHED TIN'\n) as all_nations\ngroup by\no_year\norder by\no_year\n;\n\n-- Q9\nselect\nnation,\no_year,\nsum(amount) as sum_profit\nfrom\n(\nselect\nn_name as nation,\nextract(year from o_orderdate) as o_year,\nl_extendedprice * (1 - l_discount) - ps_supplycost * l_quantity as amount\nfrom\npart,\nsupplier,\nlineitem,\npartsupp,\norders,\nnation\nwhere\ns_suppkey = l_suppkey\nand ps_suppkey = l_suppkey\nand ps_partkey = l_partkey\nand p_partkey = l_partkey\nand o_orderkey = l_orderkey\nand s_nationkey = n_nationkey\nand p_name like '%pink%'\n) as profit\ngroup by\nnation,\no_year\norder by\nnation,\no_year desc\n;\n\n\n-- Q10\nselect\nc_custkey,\nc_name,\nsum(l_extendedprice * (1 - l_discount)) as revenue,\nc_acctbal,\nn_name,\nc_address,\nc_phone,\nc_comment\nfrom\ncustomer,\norders,\nlineitem,\nnation\nwhere\nc_custkey = o_custkey\nand l_orderkey = o_orderkey\nand o_orderdate &gt;= date '1993-03-01'\nand o_orderdate &lt; date '1993-03-01' + interval '3' month\nand l_returnflag = 'R'\nand c_nationkey = n_nationkey\ngroup by\nc_custkey,\nc_name,\nc_acctbal,\nc_phone,\nn_name,\nc_address,\nc_comment\norder by\nrevenue desc\nlimit 20\n;\n\n\n-- Q11\nselect\nps_partkey,\nsum(ps_supplycost * ps_availqty) as value\nfrom\npartsupp,\nsupplier,\nnation\nwhere\nps_suppkey = s_suppkey\nand s_nationkey = n_nationkey\nand n_name = 'JAPAN'\ngroup by\nps_partkey having\nsum(ps_supplycost * ps_availqty) &gt; (\nselect\nsum(ps_supplycost * ps_availqty) * 0.0001000000\nfrom\npartsupp,\nsupplier,nation\nwhere\nps_suppkey = s_suppkey\nand s_nationkey = n_nationkey\nand n_name = 'JAPAN'\n)\norder by\nvalue desc\n;\n\n-- Q12\nselect\nl_shipmode,\nsum(case\nwhen o_orderpriority = '1-URGENT'\nor o_orderpriority = '2-HIGH'\nthen 1\nelse 0\nend) as high_line_count,\nsum(case\nwhen o_orderpriority &lt;&gt; '1-URGENT'\nand o_orderpriority &lt;&gt; '2-HIGH'\nthen 1\nelse 0\nend) as low_line_count\nfrom\norders,\nlineitem\nwhere\no_orderkey = l_orderkey\nand l_shipmode in ('FOB', 'TRUCK')\nand l_commitdate &lt; l_receiptdate\nand l_shipdate &lt; l_commitdate\nand l_receiptdate &gt;= date '1996-01-01'\nand l_receiptdate &lt; date '1996-01-01' + interval '1' year\ngroup by\nl_shipmode\norder by\nl_shipmode\n;\n\n-- Q13\nselect\nc_count,\ncount(*) as custdist\nfrom\n(\nselect\nc_custkey,\ncount(o_orderkey)\nfrom\ncustomer left outer join orders on\nc_custkey = o_custkey\nand o_comment not like '%pending%accounts%'\ngroup by\nc_custkey\n) as c_orders (c_custkey, c_count)\ngroup by\nc_count\norder by\ncustdist desc,\nc_count desc\n;\n\n-- Q14\nselect\n100.00 * sum(case\nwhen p_type like 'PROMO%'\nthen l_extendedprice * (1 - l_discount)\nelse 0\nend) / sum(l_extendedprice * (1 - l_discount)) as promo_revenue\nfrom\nlineitem,\npart\nwhere\nl_partkey = p_partkey\nand l_shipdate &gt;= date '1996-04-01'\nand l_shipdate &lt; date '1996-04-01' + interval '1' month;\n\n-- Q15\nwith q15_revenue0 as (\nselect\nl_suppkey as supplier_no,\nsum(l_extendedprice * (1 - l_discount)) as total_revenue\nfrom\nlineitem\nwhere\nl_shipdate &gt;= date '1995-12-01'\nand l_shipdate &lt; date '1995-12-01' + interval '3' month\ngroup by\nl_suppkey\n)\nselect\ns_suppkey,\ns_name,\ns_address,\ns_phone,\ntotal_revenue\nfrom\nsupplier,\nq15_revenue0\nwhere\ns_suppkey = supplier_no\nand total_revenue = (\nselect\nmax(total_revenue)\nfrom\nq15_revenue0\n)\norder by\ns_suppkey\n;\n\n-- Q16\nselect\np_brand,\np_type,\np_size,\ncount(distinct ps_suppkey) as supplier_cnt\nfrom\npartsupp,\npart\nwhere\np_partkey = ps_partkey\nand p_brand &lt;&gt; 'Brand#35'\nand p_type not like 'ECONOMY BURNISHED%'\nand p_size in (14, 7, 21, 24, 35, 33, 2, 20)\nand ps_suppkey not in (\nselect\ns_suppkey\nfrom\nsupplier\nwhere\ns_comment like '%Customer%Complaints%'\n)\ngroup by\np_brand,\np_type,\np_size\norder by\nsupplier_cnt desc,\np_brand,\np_type,\np_size\n;\n\n-- Q17\nselect\nsum(l_extendedprice) / 7.0 as avg_yearly\nfrom\nlineitem,\npart\nwhere\np_partkey = l_partkey\nand p_brand = 'Brand#54'\nand p_container = 'LG BAG'\nand l_quantity &lt; (\nselect\n0.2 * avg(l_quantity)\nfrom\nlineitem\nwhere\nl_partkey = p_partkey\n);\n\n-- Q18\nselect\nc_name,\nc_custkey,\no_orderkey,\no_orderdate,\no_totalprice,\nsum(l_quantity)\nfrom\ncustomer,\norders,\nlineitem\nwhere\no_orderkey in (\nselect\nl_orderkey\nfrom\nlineitem\ngroup by\nl_orderkey having\nsum(l_quantity) &gt; 314\n)\nand c_custkey = o_custkey\nand o_orderkey = l_orderkey\ngroup by\nc_name,\nc_custkey,\no_orderkey,\no_orderdate,\no_totalprice\norder by\no_totalprice desc,\no_orderdate\nlimit 100\n;\n\n-- Q19\nselect\nsum(l_extendedprice* (1 - l_discount)) as revenue\nfrom\nlineitem,\npart\nwhere\n(\np_partkey = l_partkey\nand p_brand = 'Brand#23'\nand p_container in ('SM CASE', 'SM BOX', 'SM PACK', 'SM PKG')\nand l_quantity &gt;= 5 and l_quantity &lt;= 5 + 10\nand p_size between 1 and 5\nand l_shipmode in ('AIR', 'AIR REG')\nand l_shipinstruct = 'DELIVER IN PERSON'\n)\nor\n(\np_partkey = l_partkey\nand p_brand = 'Brand#15'\nand p_container in ('MED BAG', 'MED BOX', 'MED PKG', 'MED PACK')\nand l_quantity &gt;= 14 and l_quantity &lt;= 14 + 10\nand p_size between 1 and 10\nand l_shipmode in ('AIR', 'AIR REG')\nand l_shipinstruct = 'DELIVER IN PERSON'\n)\nor\n(\np_partkey = l_partkey\nand p_brand = 'Brand#44'\nand p_container in ('LG CASE', 'LG BOX', 'LG PACK', 'LG PKG')\nand l_quantity &gt;= 28 and l_quantity &lt;= 28 + 10\nand p_size between 1 and 15\nand l_shipmode in ('AIR', 'AIR REG')\nand l_shipinstruct = 'DELIVER IN PERSON'\n);\n\n-- Q20\nselect\ns_name,\ns_address\nfrom\nsupplier,\nnation\nwhere\ns_suppkey in (\nselect\nps_suppkey\nfrom\npartsupp\nwhere\nps_partkey in (\nselect\np_partkey\nfrom\npart\nwhere\np_name like 'lime%'\n)\nand ps_availqty &gt; (\nselect\n0.5 * sum(l_quantity)\nfrom\nlineitem\nwhere\nl_partkey = ps_partkey\nand l_suppkey = ps_suppkey\nand l_shipdate &gt;= date '1993-01-01'\nand l_shipdate &lt; date '1993-01-01' + interval '1' year\n)\n)\nand s_nationkey = n_nationkey\nand n_name = 'VIETNAM'\norder by s_name\n;\n\n-- Q21\nselect\ns_name,\ncount(*) as numwait\nfrom\nsupplier,\nlineitem l1,\norders,\nnation\nwhere\ns_suppkey = l1.l_suppkey\nand o_orderkey = l1.l_orderkey\nand o_orderstatus = 'F'\nand l1.l_receiptdate &gt; l1.l_commitdate\nand exists (\nselect\n*\nfrom\nlineitem l2\nwhere\nl2.l_orderkey = l1.l_orderkey\nand l2.l_suppkey &lt;&gt; l1.l_suppkey\n)\nand not exists (\nselect\n*\nfrom\nlineitem l3\nwhere\nl3.l_orderkey = l1.l_orderkey\nand l3.l_suppkey &lt;&gt; l1.l_suppkey\nand l3.l_receiptdate &gt; l3.l_commitdate\n)\nand s_nationkey = n_nationkey\nand n_name = 'BRAZIL'\ngroup by\ns_name\norder by\nnumwait desc,\ns_name\nlimit 100\n;\n\n-- Q22\nselect\ncntrycode,\ncount(*) as numcust,\nsum(c_acctbal) as totacctbal\nfrom\n(\nselect\nsubstring(c_phone from 1 for 2) as cntrycode,\nc_acctbal\nfrom\ncustomer\nwhere\nsubstring(c_phone from 1 for 2) in\n('10', '11', '26', '22', '19', '20', '27')\nand c_acctbal &gt; (\nselect\navg(c_acctbal)\nfrom\ncustomer\nwhere\nc_acctbal &gt; 0.00\nand substring(c_phone from 1 for 2) in\n('10', '11', '26', '22', '19', '20', '27')\n)\nand not exists (\nselect\n*\nfrom\norders\nwhere\no_custkey = c_custkey\n)\n) as custsale\ngroup by\ncntrycode\norder by\ncntrycode\n;\n</code></pre>"},{"location":"MatrixOne/Test/performance-testing/TPCH-test-with-matrixone/#6-expected-results","title":"6. Expected Results","text":"<p>Below are the expected results for the 22 TPCH queries. Q16's result is too long to print, please refer to the complete result in this  link:</p> <pre><code>https://community-shared-data-1308875761.cos.ap-beijing.myqcloud.com/tpch/tpch1g_result_matrixone.md\n</code></pre> <pre><code>Q1\n+--------------+--------------+-------------+-----------------+-------------------+---------------------+---------+-----------+----------+-------------+\n| l_returnflag | l_linestatus | sum_qty     | sum_base_price  | sum_disc_price    | sum_charge          | avg_qty | avg_price | avg_disc | count_order |\n+--------------+--------------+-------------+-----------------+-------------------+---------------------+---------+-----------+----------+-------------+\n| A            | F            | 37734107.00 |  56586554400.73 |  53758257134.8700 |  55909065222.827692 |   25.52 |  38273.12 |     0.04 |     1478493 |\n| N            | F            |   991417.00 |   1487504710.38 |   1413082168.0541 |   1469649223.194375 |   25.51 |  38284.46 |     0.05 |       38854 |\n| N            | O            | 76633518.00 | 114935210409.19 | 109189591897.4720 | 113561024263.013782 |   25.50 |  38248.01 |     0.05 |     3004998 |\n| R            | F            | 37719753.00 |  56568041380.90 |  53741292684.6040 |  55889619119.831932 |   25.50 |  38250.85 |     0.05 |     1478870 |\n+--------------+--------------+-------------+-----------------+-------------------+---------------------+---------+-----------+----------+-------------+\n4 rows in set\n\nQ2\n+-----------+--------------------+--------------+-----------+----------------+------------------------------------------+-----------------+-----------------------------------------------------------------------------------------------------+\n| s_acctbal | s_name             | n_name       | p_partkey | p_mfgr         | s_address                                | s_phone         | s_comment                                                                                           |\n+-----------+--------------------+--------------+-----------+----------------+------------------------------------------+-----------------+-----------------------------------------------------------------------------------------------------+\n|   9973.93 | Supplier#000004194 | JORDAN       |     14193 | Manufacturer#1 | A8AoX9AK,qhf,CpEF                        | 23-944-413-2681 | t fluffily. regular requests about the regular, unusual somas play of the furiously busy            |\n|   9956.34 | Supplier#000005108 | IRAN         |    140079 | Manufacturer#5 | d3PLCdpPP3uE4GzbbAh4bWmU 7ecOifL9e1mNnzG | 20-842-882-7047 | ronic accounts. carefully bold accounts sleep beyond                                                |\n|   9836.43 | Supplier#000000489 | IRAN         |    190488 | Manufacturer#2 | y9NMoYGxDUPfrB1GwjYhLtCeV7pOt            | 20-375-500-2226 | quickly carefully pending accounts. fina                                                            |\n|   9825.95 | Supplier#000007554 | IRAQ         |     40041 | Manufacturer#5 | Huq0k qKET hByp3RcMcr                    | 21-787-637-9651 | ending, final requests thrash pending,                                                              |\n|   9806.52 | Supplier#000005276 | IRAQ         |    132762 | Manufacturer#2 | inh0KOhRfLM7WRhdRNvJJDQx                 | 21-834-496-7360 | the slyly unusual theodolites; carefully even accounts use slyly. sl                                |\n|   9796.31 | Supplier#000005847 | IRAQ         |    188292 | Manufacturer#1 | obol3bfh0zWi                             | 21-530-950-2847 | equests. blithely regular deposits should have to impress. final platelets integrate fluffily       |\n|   9775.37 | Supplier#000007245 | IRAQ         |    169696 | Manufacturer#5 | 5VOUnvxlJeOJ                             | 21-663-724-2985 | ic deposits about the slyly bold requests                                                           |\n|   9755.43 | Supplier#000002439 | EGYPT        |    172438 | Manufacturer#5 | rXxojWV0VefSK7A0dhF                      | 14-410-168-5354 | p quickly packages. carefully pending pinto beans after the                                         |\n|   9714.60 | Supplier#000007317 | EGYPT        |     29810 | Manufacturer#4 | nJGsPl2ruoq4Ydtv0fwWG385eOFV6  VUokbCZ   | 14-666-351-2592 | ons integrate furiously? slyly ironic requests sl                                                   |\n|   9557.33 | Supplier#000007367 | EGYPT        |    197366 | Manufacturer#3 | bTP8DLvaRAB0n                            | 14-234-934-5255 | ep slyly regular accounts-- regular, regular excuses dazzle furiously about the reg                 |\n|   9538.15 | Supplier#000000979 | IRAN         |     55968 | Manufacturer#1 | cdvHjrKZR7iDlmSWU2a                      | 20-151-688-1408 | ckages cajole quietly carefully regular in                                                          |\n|   9513.31 | Supplier#000004163 | SAUDI ARABIA |    109142 | Manufacturer#4 | 2VnQypC7pJPJRu6HzYRg7nAvhzckcYAQFbI      | 30-544-852-3772 | he regular requests. blithely final                                                                 |\n|   9450.15 | Supplier#000002067 | EGYPT        |      9566 | Manufacturer#3 | 9dO68x0XLMCUDuFk1J6k9hpvLoKx 4qasok4lIb  | 14-252-246-5791 | rding to the regular dolphins. quickly ir                                                           |\n|   9359.59 | Supplier#000005087 | JORDAN       |     55086 | Manufacturer#4 | q0c6r9wYVQx31IeGBZKfe                    | 23-335-392-5204 | osits. quickly regular packages haggle among the quickly silent ins                                 |\n|   9343.35 | Supplier#000006337 | IRAN         |    173819 | Manufacturer#1 | ilQgNOdCAysclt3SgODb6LeJ7d4RzYD          | 20-950-345-8173 | quickly ironic packages affix aft                                                                   |\n|   9318.47 | Supplier#000003834 | SAUDI ARABIA |     11332 | Manufacturer#5 | cxGQnW3nShks59xA5bPoaC bIvcBWUt          | 30-823-353-6520 | regular instructions. express packages run slyly pending                                            |\n|   9318.47 | Supplier#000003834 | SAUDI ARABIA |    108813 | Manufacturer#2 | cxGQnW3nShks59xA5bPoaC bIvcBWUt          | 30-823-353-6520 | regular instructions. express packages run slyly pending                                            |\n|   9315.33 | Supplier#000003009 | IRAN         |     40504 | Manufacturer#2 | oTbwfQ,Yfdcf3ysgc60NKtTpSIc              | 20-306-556-2450 | the carefully special requests. express instructions wake                                           |\n|   9296.31 | Supplier#000008213 | JORDAN       |    163180 | Manufacturer#2 | YhdN9ESxYvhJp9ngr12Bbeo4t3zLPD,          | 23-197-507-9431 | g to the blithely regular accounts! deposit                                                         |\n|   9284.57 | Supplier#000009781 | EGYPT        |      4780 | Manufacturer#4 | 49NAd1iDiY4,                             | 14-410-636-4312 | its. ironic pinto beans are blithely. express depths use caref                                      |\n|   9261.13 | Supplier#000000664 | EGYPT        |    125639 | Manufacturer#5 | ln6wISAnC8Bpj q4V                        | 14-244-772-4913 | ly special foxes cajole slyly ironic reque                                                          |\n|   9260.78 | Supplier#000001949 | IRAN         |     86932 | Manufacturer#2 | W79M2lpYiSY76Ujo6fSRUQiu                 | 20-531-767-2819 | thinly ironic excuses haggle slyly. f                                                               |\n|   9227.16 | Supplier#000009461 | EGYPT        |    126948 | Manufacturer#2 | Eweba 0sfaF,l4sAxXGTgEjzsJsNWWIGjYhFkRWV | 14-983-137-4957 | lly bold packages. carefully express deposits integrate about the unusual accounts. regular,        |\n|   9185.89 | Supplier#000007888 | EGYPT        |     27887 | Manufacturer#1 | nq06Y48amPfS8YBuduy1RYu                  | 14-462-704-3828 | ole slyly-- blithely careful foxes wake against the furiously ironic accounts. pending ideas        |\n|   9185.89 | Supplier#000007888 | EGYPT        |    190330 | Manufacturer#4 | nq06Y48amPfS8YBuduy1RYu                  | 14-462-704-3828 | ole slyly-- blithely careful foxes wake against the furiously ironic accounts. pending ideas        |\n|   9132.92 | Supplier#000007878 | IRAN         |     92859 | Manufacturer#3 | aq6T3tUVq1,                              | 20-861-274-6282 | waters cajole ironic, ironic requests. furi                                                         |\n|   9058.94 | Supplier#000002789 | IRAN         |    142788 | Manufacturer#4 | 7EkIldjP7M6psSWcJ11tf65GT7ZC7UaiCh       | 20-842-716-4307 | s. platelets use carefully. busily regular accounts cajole fluffily above the slowly final pinto be |\n|   9026.80 | Supplier#000005436 | SAUDI ARABIA |     92926 | Manufacturer#3 | 3HiusYZGYmHItExgX5VfNCdJwkW8W7R          | 30-453-280-6340 | . blithely unusual requests                                                                         |\n|   9007.16 | Supplier#000001747 | EGYPT        |    121746 | Manufacturer#3 | UyDlFjVxanP,ifej7L5jtNaubC               | 14-141-360-9722 | maintain bravely across the busily express pinto beans. sometimes                                   |\n|   8846.35 | Supplier#000005446 | EGYPT        |     57930 | Manufacturer#2 | Nusoq0ckv9SwnJZV8Rw2dUqE,V0ylm Bon       | 14-468-853-6477 | deposits. ironic, bold ideas wake. fluffily ironic deposits must have to sleep furiously pending    |\n|   8837.21 | Supplier#000007210 | JORDAN       |    144695 | Manufacturer#3 | G7MYkWkkJDVu,rr23aXjQCwNqZ2Vk6           | 23-560-295-1805 | en, express foxes use across the blithely bold                                                      |\n|   8800.91 | Supplier#000008182 | EGYPT        |    143153 | Manufacturer#5 | KGMyipBiAF00tSB99DwH                     | 14-658-338-3635 | thely even excuses integrate blithel                                                                |\n|   8788.46 | Supplier#000003437 | IRAN         |    118414 | Manufacturer#4 | JfgZDO9fsP4ljfzsi,s7431Ld3A7zXtHfrF74    | 20-547-871-1712 | ickly unusual dependencies. carefully regular dolphins ha                                           |\n|   8750.12 | Supplier#000001064 | IRAQ         |     31063 | Manufacturer#5 | QgmUIaEs5KpuW ,oREZV2b4wr3HEC1z4F        | 21-440-809-7599 | sly even deposits? furiously regular pack                                                           |\n|   8594.80 | Supplier#000007553 | IRAN         |      5052 | Manufacturer#4 | wAU2Lui w9                               | 20-663-409-7956 | old, stealthy accounts are blithely. fluffily final                                                 |\n|   8594.80 | Supplier#000007553 | IRAN         |    195033 | Manufacturer#1 | wAU2Lui w9                               | 20-663-409-7956 | old, stealthy accounts are blithely. fluffily final                                                 |\n|   8588.63 | Supplier#000008094 | SAUDI ARABIA |    148093 | Manufacturer#1 | SNS6FCscBNZBFecA                         | 30-465-665-6735 | ake quickly blithely ironic theodolites. quickly ironic ideas boost. furiously iro                  |\n|   8522.70 | Supplier#000004208 | IRAQ         |    166659 | Manufacturer#5 | x3jZYF7ZYN 8a4LY1c1kEsh                  | 21-468-998-1571 | furiously regular accounts!                                                                         |\n|   8514.86 | Supplier#000006347 | JORDAN       |    181310 | Manufacturer#5 | wwR5j4kdIAwLe33uBwo                      | 23-340-942-3641 | uests breach blithely ironic deposi                                                                 |\n|   8473.01 | Supplier#000003912 | IRAQ         |     33911 | Manufacturer#3 | Op7,1zt3MAxs34Qo4O W                     | 21-474-809-6508 | es. regular, brave instructions wa                                                                  |\n|   8405.28 | Supplier#000007886 | IRAQ         |    192847 | Manufacturer#4 | sFTj5nzc5EIVmzjXwenFTXD U                | 21-735-778-5786 | ven dependencies boost blithely ironic de                                                           |\n|   8375.58 | Supplier#000001259 | IRAQ         |     38755 | Manufacturer#2 | 32cJBGFFpGEkEjx1sF8JZAy0A72uXL5qU        | 21-427-422-4993 | ironic accounts haggle slyly alongside of the carefully ironic deposit                              |\n|   8351.75 | Supplier#000007495 | IRAQ         |    114983 | Manufacturer#4 | 3jQQGvfs,5Aryhn0Z                        | 21-953-463-7239 | requests. carefully final accounts after the qui                                                    |\n|   8230.12 | Supplier#000001058 | SAUDI ARABIA |     68551 | Manufacturer#2 | fJ8egP,xkLygXGv8bmtc9T1FJ                | 30-496-504-3341 | requests haggle? regular, regular pinto beans integrate fluffily. dependenc                         |\n|   8195.44 | Supplier#000009805 | IRAQ         |      4804 | Manufacturer#4 | dTTmLRYJNat,JbhlQlxwWp HjMR              | 21-838-243-3925 | lets. quickly even theodolites dazzle slyly even a                                                  |\n|   8175.17 | Supplier#000003172 | IRAN         |     55656 | Manufacturer#5 | 8ngbGS7BQoTDmJyMa5WV9XbaM31u5FAayd2vT3   | 20-834-374-7746 | ss deposits use furiously after the quickly final sentiments. fluffily ruthless ideas believe regu  |\n|   8159.13 | Supplier#000007486 | EGYPT        |     17485 | Manufacturer#1 | AjfdzbrrJE1                              | 14-970-643-1521 | ld accounts. enticingly furious requests cajole. final packages s                                   |\n|   8111.40 | Supplier#000007567 | IRAN         |    197566 | Manufacturer#1 | 7W4k2qEVoBkRehprGliXRSYVOQEh             | 20-377-181-7435 | gular foxes. silent attainments boost furiousl                                                      |\n|   8046.55 | Supplier#000001625 | IRAQ         |     14121 | Manufacturer#2 | yKlKMbENR6bfmIu7aCFmbs                   | 21-769-404-7617 | deposits. ideas boost blithely. slyly even Tiresias according to the platelets are q                |\n|   8040.16 | Supplier#000001925 | SAUDI ARABIA |      4424 | Manufacturer#4 | Cu5Ub AAdXT                              | 30-969-417-1108 | pending packages across the regular req                                                             |\n|   8031.68 | Supplier#000002370 | SAUDI ARABIA |    147341 | Manufacturer#5 | xGQB9xSPqRtCuMZaJavOrFuTY7km             | 30-373-388-2352 | dependencies. carefully express deposits use slyly among the slyly unusual pearls. dogge            |\n|   8031.42 | Supplier#000008216 | IRAN         |     83199 | Manufacturer#2 | jsqlyr1ViAo                              | 20-224-305-7298 | to the carefully even excuses haggle blithely against the pending pinto be                          |\n|   8007.83 | Supplier#000006266 | JORDAN       |     81249 | Manufacturer#1 | XWBf5Jd2V5SOurbn11Tt1                    | 23-363-445-7184 | as cajole carefully against the quickly special ac                                                  |\n|   7995.78 | Supplier#000006957 | IRAN         |    161924 | Manufacturer#1 | 8lvRhU5xtXv                              | 20-312-173-2216 | ly ironic accounts. stealthily regular foxes about the blithely ironic requests play blithely abo   |\n|   7913.40 | Supplier#000003148 | JORDAN       |     58137 | Manufacturer#1 | CpCJWI4PHeiwYuq0                         | 23-767-770-9172 | ove the quickly final packages boost fluffily among the furiously final platelets. carefully s      |\n|   7910.16 | Supplier#000002102 | IRAQ         |     99592 | Manufacturer#2 | 1kuyUn5q6czLOGB60fAVgpv68M2suwchpmp2nK   | 21-367-198-9930 | accounts after the blithely                                                                         |\n|   7893.58 | Supplier#000000918 | SAUDI ARABIA |     13414 | Manufacturer#1 | e0sB7xAU3,cWF7pzXrpIbATUNydCUZup         | 30-303-831-1662 | ependencies wake carefull                                                                           |\n|   7885.17 | Supplier#000004001 | JORDAN       |     38994 | Manufacturer#2 | 3M39sZY1XeQXPDRO                         | 23-109-632-6806 | efully express packages integrate across the regular pearls. blithely unusual packages mainta       |\n|   7880.20 | Supplier#000005352 | JORDAN       |       351 | Manufacturer#3 | PP9gHTn946hXqUF5E7idIPLkhnN              | 23-557-756-7951 | egular frays. final instructions sleep a                                                            |\n|   7844.31 | Supplier#000006987 | IRAQ         |     44482 | Manufacturer#5 | UH1zBxTNjTminnmHRe h YUT1eR              | 21-963-444-7397 | nag quickly carefully regular requests. ironic theo                                                 |\n|   7812.27 | Supplier#000006967 | SAUDI ARABIA |    151936 | Manufacturer#4 | S4i1HfrSM4m3di3R9Cxxp59M1                | 30-193-457-6365 | ely. dependencies cajole quickly. final warhorses across the furiously ironic foxes integr          |\n|   7767.63 | Supplier#000004306 | IRAN         |     31802 | Manufacturer#2 | SkZkJZflW5mDg9wL fJ                      | 20-911-180-1895 | uickly regular ideas. blithely express accounts along the carefully sile                            |\n|   7741.42 | Supplier#000000899 | IRAQ         |     53383 | Manufacturer#5 | oLlkiVghtro IwzcwFuzwMCG94rRpux          | 21-980-994-3905 | equests wake quickly special, express accounts. courts promi                                        |\n|   7741.42 | Supplier#000000899 | IRAQ         |    105878 | Manufacturer#3 | oLlkiVghtro IwzcwFuzwMCG94rRpux          | 21-980-994-3905 | equests wake quickly special, express accounts. courts promi                                        |\n|   7741.10 | Supplier#000001059 | IRAN         |    103528 | Manufacturer#4 | 4tBenOMokWbWVRB8i8HwENeO cQjM9           | 20-620-710-8984 | to the carefully special courts.                                                                    |\n|   7599.20 | Supplier#000006596 | SAUDI ARABIA |    184077 | Manufacturer#2 | k8qeFxfXKIGYdQ82RXAfCwddSrc              | 30-804-947-3851 | ously unusual deposits boost carefully after the enticing                                           |\n|   7598.31 | Supplier#000008857 | IRAQ         |     63844 | Manufacturer#4 | dP2th8vneyOLIUFwNBwqixkFD6               | 21-691-170-4769 | s. quickly ironic frays detect carefully                                                            |\n|   7591.79 | Supplier#000009723 | JORDAN       |    104702 | Manufacturer#2 | Q1CkkpDdlLOpCJiV,zIf,Mv86otWhxj7slGc     | 23-710-907-3873 | e fluffily even instructions. packages impress enticingly.                                          |\n|   7575.12 | Supplier#000007557 | IRAQ         |     77556 | Manufacturer#1 | udLvpjNvIx9qeRNdjL1ZAO0OZNOBo6h          | 21-629-935-9941 | ally special accounts nod; f                                                                        |\n|   7496.91 | Supplier#000005828 | IRAN         |    103317 | Manufacturer#1 | Xt0EqDCNU6X00sNsIO7nd0ws3H               | 20-435-850-8703 | furiously about the fluffily careful idea                                                           |\n|   7472.88 | Supplier#000004204 | EGYPT        |     14203 | Manufacturer#1 | 0rGZJ6VZXdH                              | 14-520-667-4690 | y pending pinto beans. even, final requests sleep care                                              |\n|   7472.88 | Supplier#000004204 | EGYPT        |    161687 | Manufacturer#3 | 0rGZJ6VZXdH                              | 14-520-667-4690 | y pending pinto beans. even, final requests sleep care                                              |\n|   7467.63 | Supplier#000003270 | IRAN         |     45757 | Manufacturer#2 | 7j4n5FnNEHVJxFhiyz                       | 20-450-599-9591 | regular, even instructions boost deposits                                                           |\n|   7465.41 | Supplier#000008686 | EGYPT        |    188685 | Manufacturer#4 | 4Onf4yxuNwHCRIC0y                        | 14-454-946-4151 | ly final ideas. bravely unusual deposits doze carefully. expr                                       |\n|   7460.80 | Supplier#000008701 | IRAQ         |     83684 | Manufacturer#3 | PLR2QehcW08                              | 21-747-984-4244 | ideas use carefully pending, final deposits. ironic, pe                                             |\n|   7447.86 | Supplier#000005877 | JORDAN       |    120852 | Manufacturer#2 | EyqOHClZZMJkq grnOX9 4alZx6P7B2fq        | 23-419-288-6451 | lar pinto beans breach carefully final pinto                                                        |\n|   7445.03 | Supplier#000009802 | IRAQ         |    164769 | Manufacturer#5 | y6wLN KiZuTf5HT9Hbm0BELn1GUTD6yl         | 21-116-708-2013 | nic requests. pinto beans across the carefully regular grouches snooze among the final pin          |\n|   7401.46 | Supplier#000008677 | IRAN         |    123652 | Manufacturer#5 | WNa780JZzivxuGBEsDszqoT1Pj               | 20-899-256-5288 | onic instructions along the furiously ironic accounts haggle fluffily silently un                   |\n|   7393.50 | Supplier#000007056 | IRAQ         |     54550 | Manufacturer#1 | M5cAJQvW9D5zwC7o2qkoe                    | 21-175-383-4727 | slyly even requests. forges haggle boldly express requests. furio                                   |\n|   7376.11 | Supplier#000003982 | IRAQ         |    118959 | Manufacturer#1 | jx9EloF33Ez                              | 21-890-236-4160 | s the furiously special warhorses affix after the car                                               |\n|   7264.42 | Supplier#000001565 | IRAQ         |     14061 | Manufacturer#4 | bOwKHdBteMkZoZcxdigk4Tnu07w1gDztmV7hvCw  | 21-791-273-8592 | to beans. express accounts nag around the                                                           |\n|   7256.46 | Supplier#000009116 | IRAQ         |      4115 | Manufacturer#3 | ULjaQwNbcB XUG9dvbZDHvJVwLo08utswt       | 21-241-469-8343 | ending deposits. slyly ironic dependencies breach. blithely speci                                   |\n|   7256.46 | Supplier#000009116 | IRAQ         |     99115 | Manufacturer#1 | ULjaQwNbcB XUG9dvbZDHvJVwLo08utswt       | 21-241-469-8343 | ending deposits. slyly ironic dependencies breach. blithely speci                                   |\n|   7256.46 | Supplier#000009116 | IRAQ         |    131576 | Manufacturer#4 | ULjaQwNbcB XUG9dvbZDHvJVwLo08utswt       | 21-241-469-8343 | ending deposits. slyly ironic dependencies breach. blithely speci                                   |\n|   7254.81 | Supplier#000005664 | EGYPT        |     35663 | Manufacturer#2 | b8VWuTXRt66wF9bfrgTmNGuxf1PU0x3O9e       | 14-214-171-8987 | ts across the quickly pending pin                                                                   |\n|   7186.63 | Supplier#000006958 | IRAN         |     71943 | Manufacturer#4 | 0n9BD,gRzUc3B,PsFcxDBGp4BFf4P            | 20-185-413-5590 | against the instructions. requests are. speci                                                       |\n|   7166.36 | Supplier#000003541 | EGYPT        |    116007 | Manufacturer#1 | DbwyOxoaMEdhEtIB3y045QrKCi2fQpGRu,       | 14-508-763-1850 | ages. carefully unusual requests across the pending instructions aff                                |\n|   7128.81 | Supplier#000000677 | JORDAN       |     50676 | Manufacturer#4 | 8mhrffG7D2WJBSQbOGstQ                    | 23-290-639-3315 | nder blithely. slyly unusual theod                                                                  |\n|   7051.73 | Supplier#000003349 | IRAQ         |    125812 | Manufacturer#3 | wtTK9df9kY7mQ5QUM0Xe5bHLMRLgwE           | 21-614-525-7451 | ar theodolites cajole fluffily across the pending requests. slyly final requests a                  |\n|   7023.47 | Supplier#000009543 | SAUDI ARABIA |     47038 | Manufacturer#1 | VYKinyOBNXRr Hdqn8kOxfTw                 | 30-785-782-6088 | sts. furiously pending packages sleep slyly even requests. final excuses print deposits. final pac  |\n|   6985.93 | Supplier#000006409 | IRAQ         |    131382 | Manufacturer#1 | eO8JDNM19HrlQMR                          | 21-627-356-3992 | sts. slyly final deposits around the regular accounts are along the furiously final pac             |\n|   6964.75 | Supplier#000009931 | EGYPT        |     57425 | Manufacturer#1 | peQYiRFk G0xZKfJ                         | 14-989-166-5782 | deposits according to the sometimes silent requests wake along the packages-- blithely f            |\n|   6964.04 | Supplier#000007399 | IRAQ         |     77398 | Manufacturer#2 | zdxjENOGR4QiCFP                          | 21-859-733-1999 | e blithely after the even requests. carefully ironic packages use slyly a                           |\n|   6913.81 | Supplier#000002625 | IRAQ         |     22624 | Manufacturer#3 | a4V0rWemgbsT ZMj w7DB8rUbZ4F4lqqW5VKljQF | 21-136-564-3910 | . asymptotes among the express requests cajole furiously after the ca                               |\n|   6880.18 | Supplier#000006704 | IRAN         |     26703 | Manufacturer#4 | 97rxJlAImbO1 sUlChUWoOJ0ZzvQ2NI3KI6VDOwk | 20-588-916-1286 | old accounts wake quickly. ca                                                                       |\n|   6878.62 | Supplier#000001697 | IRAQ         |    146668 | Manufacturer#5 | 37nm ODTeHy0xWTWegplgdWQqelh             | 21-377-544-4864 | ironic theodolites. furiously regular d                                                             |\n|   6790.39 | Supplier#000008703 | IRAN         |    123678 | Manufacturer#4 | wMslK1A8SEUTIIdApQ                       | 20-782-266-2552 | eep blithely regular, pending w                                                                     |\n|   6763.46 | Supplier#000007882 | EGYPT        |    137881 | Manufacturer#5 | JDv8BZiYG0UlZ                            | 14-111-252-9120 | the silent accounts wake foxes. furious                                                             |\n|   6751.81 | Supplier#000003156 | EGYPT        |    165607 | Manufacturer#2 | alRWaW4FTFERMM4vf2rHKIKE                 | 14-843-946-7775 | are furiously. final theodolites affix slyly bold deposits. even packages haggle idly slyly specia  |\n|   6702.07 | Supplier#000006276 | EGYPT        |     31269 | Manufacturer#2 | ,dE1anEjKQGZfgquYfkx2fkGcXH              | 14-896-626-7847 | ze about the carefully regular pint                                                                 |\n+-----------+--------------------+--------------+-----------+----------------+------------------------------------------+-----------------+-----------------------------------------------------------------------------------------------------+\n100 rows in set\n\nQ3\n+------------+-------------+-------------+----------------+\n| l_orderkey | revenue     | o_orderdate | o_shippriority |\n+------------+-------------+-------------+----------------+\n|    2152675 | 431309.8065 | 1995-03-28  |              0 |\n|    4994400 | 423834.7976 | 1995-03-09  |              0 |\n|    2160291 | 401149.7805 | 1995-03-18  |              0 |\n|    2845094 | 401094.1393 | 1995-03-06  |              0 |\n|    1902471 | 400497.3847 | 1995-03-01  |              0 |\n|    5624358 | 395710.6806 | 1995-03-20  |              0 |\n|    2346242 | 392580.0394 | 1995-03-17  |              0 |\n|    2529826 | 387365.1560 | 1995-02-17  |              0 |\n|    5168933 | 385433.6198 | 1995-03-20  |              0 |\n|    2839239 | 380503.7310 | 1995-03-22  |              0 |\n+------------+-------------+-------------+----------------+\n10 rows in set\n\nQ4\n+-----------------+-------------+\n| o_orderpriority | order_count |\n+-----------------+-------------+\n| 1-URGENT        |       10623 |\n| 2-HIGH          |       10465 |\n| 3-MEDIUM        |       10309 |\n| 4-NOT SPECIFIED |       10618 |\n| 5-LOW           |       10541 |\n+-----------------+-------------+\n5 rows in set\n\nQ5\n+---------------+---------------+\n| n_name        | revenue       |\n+---------------+---------------+\n| PERU          | 56206762.5035 |\n| CANADA        | 56052846.0161 |\n| ARGENTINA     | 54595012.8076 |\n| BRAZIL        | 53601776.5201 |\n| UNITED STATES | 50890580.8962 |\n+---------------+---------------+\n5 rows in set\n\nQ6\n+---------------+\n| revenue       |\n+---------------+\n| 61660051.7967 |\n+---------------+\n\nQ7\n+-------------+-------------+--------+---------------+\n| supp_nation | cust_nation | l_year | revenue       |\n+-------------+-------------+--------+---------------+\n| ARGENTINA   | FRANCE      |   1995 | 57928886.8015 |\n| ARGENTINA   | FRANCE      |   1996 | 55535134.8474 |\n| FRANCE      | ARGENTINA   |   1995 | 52916227.7375 |\n| FRANCE      | ARGENTINA   |   1996 | 51077995.8841 |\n+-------------+-------------+--------+---------------+\n4 rows in set\n\nQ8\n+--------+----------------------+\n| o_year | mkt_share            |\n+--------+----------------------+\n|   1995 | 0.035094304475112484 |\n|   1996 |  0.03724375099464825 |\n+--------+----------------------+\n2 rows in set\n\nQ9\n+----------------+--------+---------------+\n| nation         | o_year | sum_profit    |\n+----------------+--------+---------------+\n| ALGERIA        |   1998 | 29931671.4862 |\n| ALGERIA        |   1997 | 49521023.1139 |\n| ALGERIA        |   1996 | 51283603.7356 |\n| ALGERIA        |   1995 | 50206939.3447 |\n| ALGERIA        |   1994 | 48738988.5891 |\n| ALGERIA        |   1993 | 48084070.1204 |\n| ALGERIA        |   1992 | 49725592.1793 |\n| ARGENTINA      |   1998 | 26407044.9262 |\n| ARGENTINA      |   1997 | 46224601.0785 |\n| ARGENTINA      |   1996 | 44579611.0571 |\n| ARGENTINA      |   1995 | 45081953.2540 |\n| ARGENTINA      |   1994 | 48291282.8512 |\n| ARGENTINA      |   1993 | 48063838.9130 |\n| ARGENTINA      |   1992 | 45277890.2991 |\n| BRAZIL         |   1998 | 28577022.6384 |\n| BRAZIL         |   1997 | 46808660.3688 |\n| BRAZIL         |   1996 | 47119265.0765 |\n| BRAZIL         |   1995 | 47706399.9100 |\n| BRAZIL         |   1994 | 48377469.9386 |\n| BRAZIL         |   1993 | 46933565.7471 |\n| BRAZIL         |   1992 | 47272215.5408 |\n| CANADA         |   1998 | 30500303.6521 |\n| CANADA         |   1997 | 50046257.5687 |\n| CANADA         |   1996 | 52638586.9029 |\n| CANADA         |   1995 | 50433911.3289 |\n| CANADA         |   1994 | 51605251.7124 |\n| CANADA         |   1993 | 50117218.8464 |\n| CANADA         |   1992 | 50347111.2789 |\n| CHINA          |   1998 | 26956001.9487 |\n| CHINA          |   1997 | 48311246.7866 |\n| CHINA          |   1996 | 51133929.1033 |\n| CHINA          |   1995 | 48024289.1049 |\n| CHINA          |   1994 | 50027433.6557 |\n| CHINA          |   1993 | 48240226.3801 |\n| CHINA          |   1992 | 47769117.6007 |\n| EGYPT          |   1998 | 26972573.1604 |\n| EGYPT          |   1997 | 46708654.7666 |\n| EGYPT          |   1996 | 46095050.4457 |\n| EGYPT          |   1995 | 44901908.2949 |\n| EGYPT          |   1994 | 48522762.8892 |\n| EGYPT          |   1993 | 49055807.7642 |\n| EGYPT          |   1992 | 46909796.1083 |\n| ETHIOPIA       |   1998 | 26364411.6457 |\n| ETHIOPIA       |   1997 | 44889623.0645 |\n| ETHIOPIA       |   1996 | 47554295.2892 |\n| ETHIOPIA       |   1995 | 44747639.5440 |\n| ETHIOPIA       |   1994 | 46497570.0631 |\n| ETHIOPIA       |   1993 | 43853718.5460 |\n| ETHIOPIA       |   1992 | 44005773.0397 |\n| FRANCE         |   1998 | 27033406.6353 |\n| FRANCE         |   1997 | 45763555.5515 |\n| FRANCE         |   1996 | 47178544.9301 |\n| FRANCE         |   1995 | 48821282.1929 |\n| FRANCE         |   1994 | 46444640.9397 |\n| FRANCE         |   1993 | 46602311.0590 |\n| FRANCE         |   1992 | 47769356.5113 |\n| GERMANY        |   1998 | 26165681.8305 |\n| GERMANY        |   1997 | 46600844.4431 |\n| GERMANY        |   1996 | 44873520.1979 |\n| GERMANY        |   1995 | 47761215.6058 |\n| GERMANY        |   1994 | 42283120.0209 |\n| GERMANY        |   1993 | 46954873.9820 |\n| GERMANY        |   1992 | 46263626.6361 |\n| INDIA          |   1998 | 27651103.0250 |\n| INDIA          |   1997 | 46000888.8340 |\n| INDIA          |   1996 | 43993476.7354 |\n| INDIA          |   1995 | 44015709.1914 |\n| INDIA          |   1994 | 44281439.6282 |\n| INDIA          |   1993 | 45367255.7857 |\n| INDIA          |   1992 | 45350810.5330 |\n| INDONESIA      |   1998 | 27120545.3120 |\n| INDONESIA      |   1997 | 45745362.3667 |\n| INDONESIA      |   1996 | 45347554.8232 |\n| INDONESIA      |   1995 | 45685709.4978 |\n| INDONESIA      |   1994 | 44738603.1901 |\n| INDONESIA      |   1993 | 45172063.2033 |\n| INDONESIA      |   1992 | 44623924.3942 |\n| IRAN           |   1998 | 27876287.0949 |\n| IRAN           |   1997 | 47184621.5647 |\n| IRAN           |   1996 | 47397859.7878 |\n| IRAN           |   1995 | 49579120.6991 |\n| IRAN           |   1994 | 48032316.8744 |\n| IRAN           |   1993 | 48295593.2066 |\n| IRAN           |   1992 | 50531453.3934 |\n| IRAQ           |   1998 | 29997323.2927 |\n| IRAQ           |   1997 | 52851471.1377 |\n| IRAQ           |   1996 | 53671825.6297 |\n| IRAQ           |   1995 | 53251012.1025 |\n| IRAQ           |   1994 | 50934553.4361 |\n| IRAQ           |   1993 | 51961214.1186 |\n| IRAQ           |   1992 | 50840364.3833 |\n| JAPAN          |   1998 | 26054615.4955 |\n| JAPAN          |   1997 | 43557394.2595 |\n| JAPAN          |   1996 | 46531743.0980 |\n| JAPAN          |   1995 | 41688293.4741 |\n| JAPAN          |   1994 | 45526719.0728 |\n| JAPAN          |   1993 | 45619475.4478 |\n| JAPAN          |   1992 | 44545639.3069 |\n| JORDAN         |   1998 | 24793092.4101 |\n| JORDAN         |   1997 | 42050730.7748 |\n| JORDAN         |   1996 | 42562783.8663 |\n| JORDAN         |   1995 | 42253019.5330 |\n| JORDAN         |   1994 | 45027034.7721 |\n| JORDAN         |   1993 | 44797510.9808 |\n| JORDAN         |   1992 | 41313405.2890 |\n| KENYA          |   1998 | 24550926.4693 |\n| KENYA          |   1997 | 42767120.5848 |\n| KENYA          |   1996 | 45000095.1105 |\n| KENYA          |   1995 | 43250458.0109 |\n| KENYA          |   1994 | 42891596.7158 |\n| KENYA          |   1993 | 43599201.5126 |\n| KENYA          |   1992 | 45286145.8141 |\n| MOROCCO        |   1998 | 23482053.5970 |\n| MOROCCO        |   1997 | 41503033.0020 |\n| MOROCCO        |   1996 | 45645555.9409 |\n| MOROCCO        |   1995 | 44462858.7689 |\n| MOROCCO        |   1994 | 44768368.8310 |\n| MOROCCO        |   1993 | 44611871.2477 |\n| MOROCCO        |   1992 | 43057959.1352 |\n| MOZAMBIQUE     |   1998 | 28824737.9244 |\n| MOZAMBIQUE     |   1997 | 48682746.5995 |\n| MOZAMBIQUE     |   1996 | 50816940.9909 |\n| MOZAMBIQUE     |   1995 | 50010039.0178 |\n| MOZAMBIQUE     |   1994 | 48794892.1253 |\n| MOZAMBIQUE     |   1993 | 48451128.3332 |\n| MOZAMBIQUE     |   1992 | 50113858.5449 |\n| PERU           |   1998 | 30575758.1899 |\n| PERU           |   1997 | 49323405.6808 |\n| PERU           |   1996 | 50063490.6085 |\n| PERU           |   1995 | 51272843.6555 |\n| PERU           |   1994 | 50690589.2334 |\n| PERU           |   1993 | 49086129.3668 |\n| PERU           |   1992 | 50067216.3450 |\n| ROMANIA        |   1998 | 27367992.9903 |\n| ROMANIA        |   1997 | 45668932.7094 |\n| ROMANIA        |   1996 | 46594220.7498 |\n| ROMANIA        |   1995 | 44576835.1623 |\n| ROMANIA        |   1994 | 45640971.0684 |\n| ROMANIA        |   1993 | 46374545.0712 |\n| ROMANIA        |   1992 | 47130533.3076 |\n| RUSSIA         |   1998 | 27486839.8755 |\n| RUSSIA         |   1997 | 44050712.6907 |\n| RUSSIA         |   1996 | 45604597.4983 |\n| RUSSIA         |   1995 | 48972490.6009 |\n| RUSSIA         |   1994 | 45652045.5872 |\n| RUSSIA         |   1993 | 47139548.1597 |\n| RUSSIA         |   1992 | 47159990.1221 |\n| SAUDI ARABIA   |   1998 | 29766229.7961 |\n| SAUDI ARABIA   |   1997 | 51473031.6922 |\n| SAUDI ARABIA   |   1996 | 52859666.6646 |\n| SAUDI ARABIA   |   1995 | 50946175.0229 |\n| SAUDI ARABIA   |   1994 | 53085288.9954 |\n| SAUDI ARABIA   |   1993 | 50907571.2046 |\n| SAUDI ARABIA   |   1992 | 50334063.0381 |\n| UNITED KINGDOM |   1998 | 27904712.8220 |\n| UNITED KINGDOM |   1997 | 48170994.4362 |\n| UNITED KINGDOM |   1996 | 46498116.9611 |\n| UNITED KINGDOM |   1995 | 43210619.0456 |\n| UNITED KINGDOM |   1994 | 47339709.9122 |\n| UNITED KINGDOM |   1993 | 44308436.3275 |\n| UNITED KINGDOM |   1992 | 45870809.6693 |\n| UNITED STATES  |   1998 | 25856187.3719 |\n| UNITED STATES  |   1997 | 44934753.2208 |\n| UNITED STATES  |   1996 | 44826974.2915 |\n| UNITED STATES  |   1995 | 44160425.4086 |\n| UNITED STATES  |   1994 | 43193241.6843 |\n| UNITED STATES  |   1993 | 45126307.2619 |\n| UNITED STATES  |   1992 | 44205926.3317 |\n| VIETNAM        |   1998 | 28289193.6726 |\n| VIETNAM        |   1997 | 48284585.4019 |\n| VIETNAM        |   1996 | 48360225.9084 |\n| VIETNAM        |   1995 | 48742082.6165 |\n| VIETNAM        |   1994 | 49035537.3894 |\n| VIETNAM        |   1993 | 47222674.6352 |\n| VIETNAM        |   1992 | 48628336.9011 |\n+----------------+--------+---------------+\n175 rows in set\n\nQ10\n+-----------+--------------------+-------------+-----------+----------------+------------------------------------------+-----------------+-----------------------------------------------------------------------------------------------------------------+\n| c_custkey | c_name             | revenue     | c_acctbal | n_name         | c_address                                | c_phone         | c_comment                                                                                                       |\n+-----------+--------------------+-------------+-----------+----------------+------------------------------------------+-----------------+-----------------------------------------------------------------------------------------------------------------+\n|     95962 | Customer#000095962 | 704336.0774 |     -9.33 | MOZAMBIQUE     | 83wOMt9iAb9OJ0HbkQ1PaX3odXVBNEIMXaE      | 26-127-693-7436 | nusual theodolites maintain furiously fluffily iro                                                              |\n|     87064 | Customer#000087064 | 684037.4349 |   5244.68 | BRAZIL         | 0xej6ldT8zi7MwLdDJ1II3YWwprkvwB1 I0kwsf  | 12-930-206-2571 | de of the ironic, silent warthogs. bold, r                                                                      |\n|     56416 | Customer#000056416 | 661218.0492 |   4303.82 | INDIA          | CEuBN,xZVmP                              | 18-212-984-8331 | al waters cajole along the slyly unusual dugouts. carefully regular deposits use slyly? packages h              |\n|     46450 | Customer#000046450 | 646205.6835 |   2400.59 | UNITED STATES  | rzWQxB9iFpd8i4KUCAPdv                    | 34-765-320-4326 | ss, final deposits cajole sly                                                                                   |\n|    128713 | Customer#000128713 | 643240.1183 |   7200.30 | ARGENTINA      | mm0kxtHFCchaZX4eYSCCyQHno7vq,SRmv4       | 11-174-994-6880 | ording to the express accounts cajole carefully across the bravely special packages. carefully regular account  |\n|    102187 | Customer#000102187 | 637493.0787 |   -896.03 | ETHIOPIA       | EAi6vcGnWHUMb6rJwn,PtUgSH74tR Aixa       | 15-877-462-6534 | gular packages. carefully regular deposits cajole carefully of the regular requests. carefully special accou    |\n|     42541 | Customer#000042541 | 634546.9756 |   8082.14 | IRAN           | IccOGHgp8g                               | 20-442-159-1337 | cross the final asymptotes. final packages wake furiously ironic dec                                            |\n|     51595 | Customer#000051595 | 611926.8265 |   7236.80 | UNITED STATES  | wQFWZk 7JCpeg50O0KCzSmUFnNNwX1aEQ7V3Q    | 34-844-269-9070 | sts. always express accounts use carefully along the quickly speci                                              |\n|     66391 | Customer#000066391 | 608385.5852 |   9404.57 | UNITED STATES  | V0XvU1Nh9NU4zsyOkm,RBa                   | 34-149-224-8119 | ages cajole carefully carefully bold deposits: fluffily unusual deposits promise slyly carefully ironic co      |\n|     48358 | Customer#000048358 | 603621.4823 |   -611.15 | ETHIOPIA       | ycg3uMG7iDdwQvJ1irr                      | 15-687-936-5181 | the slyly unusual foxes-- carefully regular                                                                     |\n|     99175 | Customer#000099175 | 602125.3304 |   2218.76 | INDONESIA      | 9wbW52xx9T84E0dZ Rvz1ozQ1                | 19-125-912-6494 | ide of the slyly ironic foxes boost silently ironic, even instructions. blithe                                  |\n|    122509 | Customer#000122509 | 601580.1203 |   2613.83 | KENYA          | ZN1sc0eJrkD8t6X5Q1d3                     | 24-421-308-3881 | brave deposits haggle across the even deposits. instr                                                           |\n|    148055 | Customer#000148055 | 601003.6812 |    455.31 | PERU           | Y,RCZ3Bislx64nTsPaRL,5gjx7xgC6y, yKYnCw  | 27-473-476-4382 | uickly final accounts wake carefully sl                                                                         |\n|    117451 | Customer#000117451 | 599792.7063 |   1090.48 | UNITED STATES  | bSwr7mNPiaf1f lNK9 uTJxWCL2sn1Lak5NIB    | 34-354-586-6011 | ding to the furiously express accounts boost carefully af                                                       |\n|    104110 | Customer#000104110 | 588194.3118 |   2762.52 | JORDAN         | mm7 ZuDX5Z5nAQbKObB 80XBCy,1nyW          | 23-639-800-5768 | urts sleep furiously alongside of the packages! slyly ironic packages sleep                                     |\n|     13666 | Customer#000013666 | 579926.1679 |   7453.98 | EGYPT          | DLRUWGcprmWqdROJvmZwpE                   | 14-316-135-4381 | ross the silent requests. special theodolit                                                                     |\n|     96202 | Customer#000096202 | 571017.3398 |   4703.04 | CANADA         | 4Vcxcx3w4zMjVYNQaqrweweQY6TJO AP9rdvQaLl | 13-194-779-9597 | en packages use. fluffily regular dependencies boost. never pending requ                                        |\n|     70279 | Customer#000070279 | 561369.3650 |   9109.34 | CHINA          | ltie8o3ihwffMrqMrkvN957KZVWmH5           | 28-842-825-1717 | theodolites sleep: blithely final requests are fur                                                              |\n|     16972 | Customer#000016972 | 560435.8065 |   6408.66 | ROMANIA        | X6T8vRKy6kSO0f2wJJt                      | 29-483-958-3347 | sts. pending deposits are across the regular, express instructions. carefully daring foxes cajol                |\n|    113443 | Customer#000113443 | 557272.6706 |    -72.67 | UNITED KINGDOM | SUHbS85cYxgVkKbfh9sUpEa6ezVSlQuCKe3CV    | 33-819-742-6112 | ic foxes cajole thinly furiously stealthy instructions. pinto beans are. quickly regular accounts integrate car |\n+-----------+--------------------+-------------+-----------+----------------+------------------------------------------+-----------------+-----------------------------------------------------------------------------------------------------------------+\n20 rows in set\n\nQ11\n+------------+-------------+\n| ps_partkey | value       |\n+------------+-------------+\n|     131630 | 17882680.37 |\n|     104150 | 17613017.18 |\n|     128284 | 16502418.74 |\n|       8978 | 16470438.59 |\n|     147193 | 16462742.12 |\n|      78788 | 16010246.37 |\n|      76331 | 15776882.05 |\n|     137287 | 15770471.15 |\n|      51302 | 15730620.22 |\n|     141553 | 15333540.19 |\n|     137196 | 15035435.60 |\n|     186531 | 14818272.68 |\n|     103818 | 14690943.63 |\n|      80080 | 14626441.35 |\n|       1312 | 14330729.50 |\n|       6531 | 14267308.08 |\n|      96162 | 14154396.04 |\n|      69605 | 14018927.25 |\n|      30118 | 13854726.38 |\n|      17006 | 13731495.60 |\n|      95347 | 13716648.60 |\n|      18722 | 13707978.71 |\n|     122875 | 13640341.00 |\n|     105499 | 13532912.80 |\n|     165560 | 13509536.95 |\n|       1531 | 13337454.55 |\n|      34732 | 13304041.48 |\n|     173221 | 13038078.41 |\n|     180975 | 13038039.17 |\n|      24703 | 12957050.80 |\n|      72036 | 12939426.90 |\n|     124814 | 12849842.04 |\n|     174453 | 12814999.00 |\n|      14209 | 12814858.56 |\n|     185186 | 12657201.05 |\n|     187868 | 12647101.80 |\n|     125085 | 12639931.63 |\n|      80331 | 12625007.00 |\n|     118685 | 12515185.68 |\n|     163988 | 12484272.80 |\n|     124685 | 12432747.32 |\n|      92838 | 12410071.57 |\n|     140928 | 12396673.84 |\n|       1218 | 12362877.75 |\n|      39201 | 12328085.10 |\n|      33237 | 12180622.98 |\n|     183791 | 12150040.50 |\n|       3243 | 12136315.74 |\n|      62740 | 12131313.60 |\n|     154171 | 12105470.89 |\n|      49034 | 11982382.52 |\n|      88673 | 11925499.04 |\n|      52527 | 11923653.16 |\n|      83974 | 11871084.73 |\n|      88254 | 11870393.22 |\n|        411 | 11806670.95 |\n|      14320 | 11800136.02 |\n|     164979 | 11794760.03 |\n|     166149 | 11778499.72 |\n|      74105 | 11750224.34 |\n|     169104 | 11708532.18 |\n|      15542 | 11687293.42 |\n|     161538 | 11661769.80 |\n|      63337 | 11592505.40 |\n|     117197 | 11508165.60 |\n|     102989 | 11497056.75 |\n|      10836 | 11465875.43 |\n|     199561 | 11431793.36 |\n|     134683 | 11384564.54 |\n|     136318 | 11351893.30 |\n|     166270 | 11336004.81 |\n|      32200 | 11324838.00 |\n|      57033 | 11281026.52 |\n|      18098 | 11245398.24 |\n|     135174 | 11189782.12 |\n|     181616 | 11183947.65 |\n|      85064 | 11175761.43 |\n|     120719 | 11164342.08 |\n|      99670 | 11140257.47 |\n|      46096 | 11034143.76 |\n|     195124 | 11030197.30 |\n|      78838 | 11012446.40 |\n|     151656 | 11010376.90 |\n|     156956 | 10996384.80 |\n|      34028 | 10942671.24 |\n|      15778 | 10937778.75 |\n|     199707 | 10924333.33 |\n|     118776 | 10920609.31 |\n|      27640 | 10919693.42 |\n|      15237 | 10918145.54 |\n|     148243 | 10916765.29 |\n|     111498 | 10867707.51 |\n|     132024 | 10834280.47 |\n|      35124 | 10806898.50 |\n|     196818 | 10787371.25 |\n|     197669 | 10779504.60 |\n|     110042 | 10778828.37 |\n|     197422 | 10770092.44 |\n|      75160 | 10746976.60 |\n|     191567 | 10642430.39 |\n|      34225 | 10574664.41 |\n|     102588 | 10567012.05 |\n|      44148 | 10505249.34 |\n|     126607 | 10484944.29 |\n|     172625 | 10444857.62 |\n|     157054 | 10406203.24 |\n|      19322 | 10378704.98 |\n|     136541 | 10371536.77 |\n|     167526 | 10320346.58 |\n|     136011 | 10302146.84 |\n|     107431 | 10273992.76 |\n|      16485 | 10257703.67 |\n|      52580 | 10250264.05 |\n|        839 | 10238243.36 |\n|      31704 | 10196678.94 |\n|     122558 | 10137326.18 |\n|     180386 | 10123318.07 |\n|      97705 | 10089163.37 |\n|      96327 | 10087851.88 |\n|     136143 | 10082137.97 |\n|      15174 | 10057277.55 |\n|     193324 | 10039922.93 |\n|      33593 | 10019952.10 |\n|     126288 | 10014855.05 |\n|      64123 |  9985650.90 |\n|     183712 |  9973256.18 |\n|     138831 |  9963069.10 |\n|     123694 |  9959096.38 |\n|      51734 |  9952439.73 |\n|      11861 |  9949647.12 |\n|     119127 |  9942105.69 |\n|     173308 |  9932264.52 |\n|      40986 |  9921554.40 |\n|     176970 |  9919708.65 |\n|      54316 |  9913595.16 |\n|      62644 |  9903936.27 |\n|     185354 |  9895956.52 |\n|      81468 |  9885132.60 |\n|     104687 |  9883888.05 |\n|     198959 |  9875351.28 |\n|     179767 |  9872309.86 |\n|     102835 |  9870743.52 |\n|     163221 |  9856173.04 |\n|      32633 |  9852565.04 |\n|      19605 |  9850164.48 |\n|      47378 |  9826135.11 |\n|      44026 |  9822433.44 |\n|     126629 |  9816227.30 |\n|     199665 |  9812400.23 |\n|      30989 |  9812295.52 |\n|     102177 |  9810372.32 |\n|      25765 |  9806344.88 |\n|     110721 |  9804895.23 |\n|     159532 |  9803738.34 |\n|     101640 |  9801375.65 |\n|     151569 |  9792489.20 |\n|     180629 |  9782164.34 |\n|     165528 |  9769074.10 |\n|      23772 |  9766084.22 |\n|     149727 |  9765190.96 |\n|     189605 |  9761887.80 |\n|      74703 |  9758757.28 |\n|      83382 |  9758144.21 |\n|      93775 |  9726901.71 |\n|      56192 |  9725508.16 |\n|      50060 |  9712714.65 |\n|      15409 |  9706898.91 |\n|     139104 |  9701070.72 |\n|     177435 |  9686566.09 |\n|      31351 |  9675197.98 |\n|      20495 |  9672566.31 |\n|      24537 |  9654516.03 |\n|     160528 |  9650804.70 |\n|      34706 |  9647241.90 |\n|     149039 |  9643498.32 |\n|     147139 |  9642356.34 |\n|     118629 |  9624960.80 |\n|      35359 |  9621549.92 |\n|      33854 |  9616857.73 |\n|      33707 |  9609988.84 |\n|     149055 |  9599364.32 |\n|     127429 |  9580670.49 |\n|      67575 |  9579613.26 |\n|      80727 |  9576545.81 |\n|     181650 |  9574445.40 |\n|      50176 |  9573389.08 |\n|     171093 |  9571625.20 |\n|     151342 |  9569230.21 |\n|     123052 |  9561903.68 |\n|     132633 |  9545052.14 |\n|     130419 |  9524936.49 |\n|      89241 |  9512992.32 |\n|     138255 |  9503515.93 |\n|      31680 |  9502841.07 |\n|     151986 |  9500862.59 |\n|     146390 |  9490242.96 |\n|      62275 |  9475584.10 |\n|      33518 |  9475074.40 |\n|       5286 |  9473739.88 |\n|      39020 |  9467701.22 |\n|     113281 |  9466510.94 |\n|     138789 |  9464407.24 |\n|     165040 |  9462153.75 |\n|     150766 |  9461855.88 |\n|      54341 |  9459425.45 |\n|      33464 |  9459377.37 |\n|      15251 |  9455980.84 |\n|     145308 |  9454189.29 |\n|     192621 |  9449324.14 |\n|     175218 |  9448987.35 |\n|      58992 |  9446144.40 |\n|      24548 |  9442739.03 |\n|     177563 |  9440891.04 |\n|     184482 |  9431486.10 |\n|      78961 |  9430401.05 |\n|     174167 |  9428622.96 |\n|      88265 |  9423143.28 |\n|       6057 |  9405359.37 |\n|      85387 |  9402175.55 |\n|      47053 |  9399707.66 |\n|     128973 |  9399265.92 |\n|      65668 |  9395584.45 |\n|      50222 |  9394502.96 |\n|     116534 |  9388011.08 |\n|     140959 |  9386284.56 |\n|      46897 |  9385056.21 |\n|     141872 |  9383820.48 |\n|     177181 |  9383551.92 |\n|     168265 |  9376664.16 |\n|      48974 |  9374769.12 |\n|      46218 |  9364135.50 |\n|     104039 |  9363227.03 |\n|      61538 |  9360159.08 |\n|      94688 |  9359604.98 |\n|     122393 |  9357937.19 |\n|       7323 |  9356712.30 |\n|     197892 |  9356573.44 |\n|     194056 |  9352381.73 |\n|      61285 |  9348480.54 |\n|     180336 |  9347874.15 |\n|     121930 |  9347784.74 |\n|      80652 |  9347143.50 |\n|      18549 |  9346038.72 |\n|      23992 |  9339908.16 |\n|     136583 |  9337299.56 |\n|     156151 |  9337138.10 |\n|     160572 |  9336553.40 |\n|     113391 |  9335558.10 |\n|      48068 |  9334317.92 |\n|      20409 |  9331093.65 |\n|      39712 |  9324685.28 |\n|      59364 |  9322249.86 |\n|       1344 |  9308304.39 |\n|      60549 |  9308293.20 |\n|      83854 |  9307387.25 |\n|      92092 |  9307165.64 |\n|     193306 |  9306177.31 |\n|     118265 |  9300250.20 |\n|     107568 |  9296254.34 |\n|     109127 |  9293552.10 |\n|     184688 |  9291647.92 |\n|       8718 |  9287337.37 |\n|      80433 |  9286295.52 |\n|      26670 |  9284963.44 |\n|     139548 |  9283605.21 |\n|      14736 |  9280119.20 |\n|      97886 |  9273852.42 |\n|     181442 |  9273130.50 |\n|     172360 |  9272824.92 |\n|     192714 |  9268366.36 |\n|     106726 |  9264879.90 |\n|      72157 |  9263498.40 |\n|      70445 |  9257553.92 |\n|      75148 |  9257420.83 |\n|      26170 |  9256074.12 |\n|     116531 |  9249721.71 |\n|     133665 |  9245464.80 |\n|     129041 |  9244629.48 |\n|     136486 |  9240748.92 |\n|     198924 |  9239976.06 |\n|     115254 |  9233580.37 |\n|     168135 |  9232693.98 |\n|      22480 |  9232190.78 |\n|     192018 |  9230386.58 |\n|     111889 |  9228204.96 |\n|     151661 |  9227926.90 |\n|      96482 |  9226960.85 |\n|      49198 |  9226436.40 |\n|      41219 |  9222883.52 |\n|     113502 |  9222208.59 |\n|      84009 |  9218703.22 |\n|     192788 |  9213468.00 |\n|     160251 |  9206353.32 |\n|     188162 |  9200537.88 |\n|     167589 |  9195835.03 |\n|     132673 |  9194021.22 |\n|     191105 |  9192417.12 |\n|     128748 |  9189941.55 |\n|     130423 |  9184710.96 |\n|      22639 |  9182963.16 |\n|     199034 |  9180909.86 |\n|     187644 |  9180350.20 |\n|        970 |  9175757.70 |\n|      59070 |  9170000.64 |\n|      66568 |  9166070.04 |\n|      52715 |  9161221.80 |\n|     130276 |  9161201.57 |\n|      24189 |  9160740.15 |\n|     132402 |  9144498.48 |\n|      37799 |  9142271.24 |\n|     173337 |  9140566.68 |\n|     176552 |  9135054.51 |\n|     195714 |  9133679.77 |\n|     119363 |  9123261.90 |\n|     161160 |  9122259.60 |\n|     196968 |  9111592.20 |\n|      61943 |  9111527.33 |\n|      79766 |  9109534.89 |\n|     178082 |  9105694.92 |\n|      38800 |  9105468.72 |\n|      83608 |  9099493.68 |\n|     146346 |  9098628.00 |\n|     116690 |  9098099.93 |\n|      64690 |  9095441.10 |\n|      82061 |  9095381.18 |\n|      89015 |  9092660.48 |\n|     188457 |  9091400.40 |\n|     125177 |  9090455.55 |\n|     114776 |  9088177.68 |\n|       4486 |  9087487.20 |\n|     176940 |  9086842.84 |\n|      93157 |  9084361.81 |\n|     148624 |  9083370.78 |\n|       4441 |  9079520.58 |\n|      63590 |  9079125.44 |\n|     174189 |  9078023.39 |\n|      63054 |  9075441.98 |\n|      14950 |  9073156.19 |\n|     175646 |  9072322.47 |\n|      63712 |  9067710.48 |\n|     157197 |  9067452.77 |\n|     147196 |  9064699.80 |\n|      50551 |  9062434.72 |\n|      43035 |  9061782.03 |\n|     187679 |  9056529.40 |\n|      96673 |  9056525.94 |\n|     130148 |  9054217.06 |\n|     159007 |  9053155.29 |\n|      41544 |  9052820.94 |\n|     109476 |  9048012.09 |\n|      60092 |  9045562.44 |\n|     197490 |  9044579.88 |\n|      47311 |  9037223.52 |\n|      87230 |  9033227.61 |\n|       3860 |  9030622.02 |\n|       5466 |  9029841.66 |\n|     171537 |  9024699.30 |\n|      39707 |  9022833.12 |\n|     167048 |  9022709.18 |\n|     109006 |  9022258.40 |\n|      17910 |  9019688.45 |\n|     132826 |  9017286.74 |\n|     157502 |  9016444.08 |\n|     142309 |  9016270.60 |\n|      78891 |  9005693.25 |\n|      88301 |  9002414.82 |\n|      11496 |  9000803.97 |\n|     163633 |  8996162.06 |\n|     151809 |  8993104.95 |\n|     131555 |  8988340.68 |\n|      72812 |  8985370.68 |\n|      77047 |  8981489.79 |\n|       1553 |  8977226.10 |\n|     162531 |  8973689.92 |\n|     154026 |  8973320.24 |\n|     125499 |  8969667.84 |\n|      34547 |  8966116.43 |\n|      41301 |  8965350.42 |\n|      12853 |  8959403.59 |\n|      27736 |  8957933.23 |\n|     162817 |  8956868.20 |\n|     155389 |  8955349.85 |\n|     130360 |  8952928.25 |\n|     120878 |  8952393.10 |\n|     150671 |  8952112.72 |\n|     190365 |  8951671.57 |\n|      72364 |  8950587.82 |\n|      71615 |  8949277.07 |\n|      95277 |  8947796.58 |\n|      78180 |  8946814.80 |\n|      97062 |  8945057.46 |\n|     170013 |  8944660.40 |\n|     113426 |  8943016.29 |\n|     173751 |  8942914.28 |\n|       1478 |  8941906.24 |\n|      26061 |  8941022.48 |\n|     152527 |  8939654.10 |\n|     148360 |  8939589.40 |\n|      44057 |  8939101.36 |\n|      13595 |  8936720.10 |\n|      33337 |  8935366.48 |\n|     169698 |  8931507.20 |\n|      26155 |  8927283.11 |\n|      17185 |  8927218.40 |\n|      51996 |  8926661.08 |\n|     101869 |  8919281.70 |\n|      14561 |  8910653.92 |\n|     190047 |  8909427.90 |\n|     104143 |  8909328.40 |\n|     133330 |  8907195.90 |\n|     169144 |  8904989.34 |\n|      87067 |  8900079.44 |\n|     176075 |  8898845.64 |\n|      25076 |  8895274.12 |\n|      80838 |  8895205.30 |\n|      40387 |  8890891.55 |\n|      88004 |  8888748.80 |\n|     105527 |  8888672.72 |\n|      40741 |  8886674.24 |\n|      76690 |  8880622.61 |\n|      86485 |  8880488.57 |\n|      75736 |  8877666.06 |\n|      48704 |  8876626.52 |\n|      56450 |  8872277.59 |\n|      61683 |  8870173.93 |\n|      24067 |  8867814.12 |\n|     108012 |  8863632.38 |\n|     180971 |  8862007.20 |\n|     132986 |  8861335.20 |\n|      35839 |  8859344.64 |\n|     191553 |  8857411.14 |\n|     163492 |  8855825.91 |\n|     112101 |  8851904.10 |\n|      27050 |  8847924.19 |\n|      57481 |  8845309.59 |\n|     163252 |  8842276.65 |\n|      87958 |  8840221.67 |\n|      60162 |  8838927.08 |\n|     131928 |  8838900.48 |\n|     123514 |  8833601.14 |\n|      42891 |  8830401.37 |\n|      71547 |  8829540.72 |\n|      13975 |  8826582.48 |\n|      31577 |  8825371.40 |\n|      86165 |  8816308.38 |\n|     164646 |  8815470.18 |\n|     150176 |  8814992.11 |\n|     152464 |  8814533.82 |\n|     183434 |  8813941.24 |\n|      58839 |  8808010.20 |\n|      59952 |  8801497.32 |\n|     151038 |  8800215.80 |\n|     139523 |  8800032.57 |\n|       8828 |  8798704.66 |\n|      14080 |  8797032.12 |\n|     194080 |  8792825.27 |\n|      87199 |  8788933.64 |\n|      91747 |  8785811.64 |\n|     194429 |  8776185.03 |\n|     118998 |  8776071.00 |\n|     179467 |  8771474.74 |\n|      68715 |  8771302.80 |\n|     180572 |  8771095.68 |\n|      19821 |  8770770.82 |\n|      41702 |  8770565.71 |\n|      27916 |  8769001.47 |\n|     121302 |  8763598.50 |\n|     107013 |  8762893.37 |\n|      37287 |  8761196.43 |\n|     117050 |  8758230.00 |\n|      58547 |  8757757.40 |\n|     197088 |  8749026.12 |\n|      55839 |  8747234.02 |\n|      71829 |  8744546.91 |\n|      30961 |  8743416.92 |\n|     134548 |  8741635.28 |\n|     179833 |  8738680.00 |\n|      79721 |  8737857.70 |\n|     144577 |  8736427.08 |\n|      29051 |  8729063.28 |\n|     131481 |  8728799.64 |\n|      73271 |  8727985.25 |\n|      89553 |  8725727.19 |\n|      31306 |  8724451.12 |\n|      82181 |  8724017.16 |\n|      95549 |  8723460.30 |\n|      31507 |  8722094.40 |\n|      21302 |  8722054.95 |\n|     137953 |  8721611.83 |\n|     195768 |  8721020.99 |\n|     180105 |  8718021.20 |\n|      98241 |  8717935.36 |\n|      59431 |  8715482.28 |\n|     143694 |  8713267.63 |\n|     109020 |  8713043.36 |\n|      46732 |  8711642.04 |\n|     144172 |  8711013.10 |\n|     139056 |  8710786.50 |\n|     107543 |  8706135.75 |\n|      89127 |  8705410.56 |\n|     146544 |  8704812.86 |\n|     195524 |  8699333.14 |\n|     133563 |  8698060.14 |\n|     112707 |  8694322.84 |\n|      98951 |  8690376.70 |\n|     132635 |  8689305.24 |\n|      69056 |  8688980.25 |\n|     134143 |  8688695.26 |\n|     148150 |  8687553.16 |\n|      89122 |  8686767.31 |\n|      15085 |  8685772.26 |\n|     196686 |  8682783.57 |\n|       3076 |  8672940.78 |\n|     137428 |  8672547.80 |\n|      27263 |  8671719.36 |\n|     101561 |  8667962.72 |\n|      12597 |  8662223.52 |\n|     143329 |  8661688.72 |\n|     130813 |  8659409.04 |\n|     183679 |  8658698.30 |\n|      47449 |  8658493.58 |\n|     164677 |  8658220.00 |\n|      51437 |  8654713.02 |\n|     116162 |  8649713.36 |\n|      71889 |  8645159.67 |\n|       6486 |  8639891.76 |\n|     192102 |  8638102.72 |\n|     101660 |  8634451.80 |\n|     124703 |  8633146.86 |\n|     150469 |  8631948.60 |\n|     197467 |  8630739.78 |\n|      97621 |  8630453.32 |\n|     150354 |  8630288.15 |\n|     179544 |  8630121.63 |\n|      38972 |  8626072.00 |\n|     110732 |  8625761.16 |\n|     170791 |  8625203.06 |\n|     149414 |  8617070.17 |\n|      59527 |  8616079.20 |\n|     157580 |  8615676.04 |\n|      16268 |  8615087.46 |\n|      76464 |  8610219.38 |\n|      44474 |  8607934.92 |\n|     125527 |  8607708.08 |\n|     118076 |  8602251.65 |\n|     180362 |  8601367.05 |\n|       5808 |  8599851.04 |\n|      28703 |  8599486.36 |\n|     113373 |  8597996.36 |\n|     118918 |  8597063.80 |\n|      44868 |  8596304.52 |\n|      43419 |  8596265.35 |\n|      89763 |  8595248.64 |\n|     119232 |  8594224.56 |\n|     108649 |  8590683.68 |\n|      10396 |  8588398.05 |\n|      79536 |  8587117.83 |\n|     149800 |  8587058.86 |\n|     165839 |  8582991.20 |\n|     115397 |  8581524.77 |\n|     104394 |  8581384.42 |\n|     142569 |  8581127.40 |\n|      63676 |  8580930.08 |\n|      29029 |  8580613.53 |\n|     156604 |  8580477.00 |\n|       7310 |  8579949.50 |\n|     105381 |  8576164.24 |\n|      84306 |  8573960.40 |\n|      61217 |  8570393.04 |\n|     164438 |  8569616.36 |\n|      28073 |  8565639.60 |\n|     125743 |  8563258.90 |\n|     190032 |  8561620.55 |\n|     147122 |  8561245.68 |\n|       5384 |  8558830.08 |\n|      70172 |  8558319.64 |\n|     161966 |  8556193.38 |\n|      69530 |  8554377.60 |\n|     111243 |  8553627.55 |\n|      72590 |  8551077.51 |\n|     134423 |  8550604.77 |\n|      44509 |  8547134.31 |\n|     160707 |  8546000.68 |\n|      54123 |  8545976.26 |\n|      36547 |  8540333.04 |\n|      48715 |  8537983.35 |\n|     103078 |  8537142.60 |\n|     137613 |  8536278.96 |\n|      44995 |  8532416.72 |\n|     191159 |  8532173.37 |\n|     119345 |  8532070.56 |\n|     109941 |  8531904.79 |\n|       5449 |  8528034.35 |\n|     134116 |  8526854.95 |\n|     199268 |  8523599.58 |\n|     168520 |  8523360.67 |\n|     154189 |  8521620.13 |\n|     108771 |  8513853.87 |\n|     198651 |  8511238.80 |\n|      93681 |  8510935.14 |\n|     170680 |  8509087.68 |\n|     106409 |  8506859.19 |\n|      27110 |  8499811.75 |\n|      43224 |  8499539.52 |\n|     153225 |  8499434.28 |\n|      16681 |  8498021.66 |\n|     117983 |  8496934.32 |\n|     192158 |  8492372.03 |\n|      33900 |  8491139.64 |\n|      37006 |  8489126.28 |\n|     176554 |  8488633.92 |\n|      69234 |  8484937.26 |\n|     176652 |  8484496.02 |\n|      41660 |  8480585.65 |\n|     129104 |  8480411.17 |\n|      66960 |  8478978.86 |\n|      36296 |  8472438.75 |\n|      98665 |  8471241.57 |\n|     134173 |  8467888.57 |\n|      60496 |  8467019.22 |\n|     197520 |  8466553.20 |\n|     116746 |  8465792.60 |\n|     187394 |  8458248.24 |\n|     140377 |  8455546.68 |\n|      97326 |  8450501.67 |\n|      26770 |  8449625.64 |\n|     104884 |  8446152.26 |\n|     143109 |  8443547.19 |\n|     127361 |  8441094.08 |\n|     104754 |  8436883.50 |\n|     183676 |  8436165.76 |\n|        906 |  8434608.12 |\n|      55768 |  8433763.69 |\n|     118654 |  8433465.57 |\n|      39310 |  8433214.55 |\n|     173261 |  8432992.53 |\n|      93976 |  8432605.20 |\n|      63318 |  8432149.26 |\n|     128243 |  8424182.94 |\n|     156063 |  8422743.54 |\n|     195087 |  8421279.30 |\n|      67668 |  8417594.98 |\n|      49882 |  8417237.80 |\n|     105631 |  8412628.07 |\n|      40987 |  8406033.41 |\n|     185735 |  8404112.83 |\n|     173986 |  8403050.34 |\n|      87372 |  8402838.40 |\n|      24509 |  8398807.24 |\n|     180522 |  8394989.75 |\n|      76215 |  8394433.35 |\n|     193872 |  8390435.23 |\n|     141234 |  8390180.92 |\n|      91138 |  8386645.20 |\n|      28097 |  8385577.38 |\n|       4053 |  8384952.75 |\n|      17050 |  8380304.40 |\n|      64050 |  8377921.56 |\n|      80836 |  8375803.16 |\n|      86084 |  8373551.95 |\n|     168499 |  8373348.72 |\n|     178642 |  8372218.52 |\n|       8498 |  8370557.16 |\n|     156312 |  8366249.30 |\n|     136803 |  8361949.92 |\n|      92109 |  8359503.23 |\n|     138625 |  8358135.21 |\n|     137540 |  8358031.08 |\n|     176531 |  8355437.00 |\n|      53783 |  8352395.63 |\n|     106977 |  8352334.98 |\n|      21385 |  8351786.37 |\n|     114885 |  8351582.40 |\n|     113643 |  8350530.65 |\n|      89061 |  8349422.08 |\n|      77752 |  8348730.24 |\n|      28623 |  8348321.44 |\n|      74478 |  8348064.27 |\n|      41383 |  8347223.45 |\n|     147632 |  8346967.80 |\n|      40948 |  8346743.30 |\n|     154324 |  8346521.91 |\n|      89724 |  8346034.80 |\n|     119083 |  8338084.92 |\n|     124143 |  8335841.76 |\n|      80512 |  8335705.69 |\n|     105047 |  8332249.86 |\n|      38243 |  8329017.19 |\n|      42583 |  8328613.91 |\n|      44240 |  8327684.64 |\n|      57611 |  8321693.94 |\n|       9730 |  8319725.70 |\n|      91655 |  8318837.40 |\n|      13140 |  8316216.96 |\n|     112257 |  8315169.85 |\n|      27182 |  8314740.99 |\n|     166654 |  8314332.64 |\n|      40572 |  8312654.55 |\n|      26680 |  8311626.68 |\n|     138947 |  8311347.29 |\n|     184982 |  8310393.08 |\n|      35540 |  8308058.43 |\n|     181446 |  8304851.76 |\n|      65160 |  8299581.90 |\n|       9533 |  8299139.42 |\n|      67836 |  8294228.46 |\n|     159414 |  8293114.90 |\n|     115025 |  8291746.65 |\n|      30780 |  8291580.00 |\n|     164680 |  8290263.02 |\n|       4599 |  8288816.03 |\n|      73366 |  8286818.96 |\n|     135625 |  8284930.92 |\n|      46497 |  8284638.88 |\n|      63781 |  8284447.60 |\n|      84332 |  8283372.14 |\n|     196269 |  8276407.36 |\n|     166651 |  8275663.35 |\n|        142 |  8273960.31 |\n|      56904 |  8272891.44 |\n|      46821 |  8272603.71 |\n|      76051 |  8272300.75 |\n|      19666 |  8270192.64 |\n|      92723 |  8267074.20 |\n|     125843 |  8266816.38 |\n|     158722 |  8266634.88 |\n|      28941 |  8266245.12 |\n|      39968 |  8265605.53 |\n|      41429 |  8265317.84 |\n|      61601 |  8264074.31 |\n|     179159 |  8260137.47 |\n|      15969 |  8259835.96 |\n|     121125 |  8253912.49 |\n|      66486 |  8253743.66 |\n|     181031 |  8253570.14 |\n|      43712 |  8250825.78 |\n|      13842 |  8245765.00 |\n|      76203 |  8245412.16 |\n|      68992 |  8243081.46 |\n|     119704 |  8241363.06 |\n|      86109 |  8240377.92 |\n|      29534 |  8239914.00 |\n|      68596 |  8239825.29 |\n|     168291 |  8237626.32 |\n|     183308 |  8235947.21 |\n|      78657 |  8233481.64 |\n|     193545 |  8233037.49 |\n|      23658 |  8232306.18 |\n|     179945 |  8231365.25 |\n|      53391 |  8231252.10 |\n|      71380 |  8231125.68 |\n|      53666 |  8226715.00 |\n|     118592 |  8226181.00 |\n|      67203 |  8225355.99 |\n|       1178 |  8224625.05 |\n|     147876 |  8224189.62 |\n|      80042 |  8220826.70 |\n|      48950 |  8218611.22 |\n|      43331 |  8218448.04 |\n|     177706 |  8215723.50 |\n|     145442 |  8215706.16 |\n|     197042 |  8215536.00 |\n|     169952 |  8214698.43 |\n|      57907 |  8211740.04 |\n|     145741 |  8210316.57 |\n|      91144 |  8209855.02 |\n|     160266 |  8209468.80 |\n|      31602 |  8209366.90 |\n|      98672 |  8208412.85 |\n|     199012 |  8207897.50 |\n|     151148 |  8207645.16 |\n|     116545 |  8207573.24 |\n|     122176 |  8207508.04 |\n|      11021 |  8206766.10 |\n|      47752 |  8203436.82 |\n|        124 |  8203209.30 |\n|     148126 |  8202846.66 |\n|      15753 |  8202695.55 |\n|      50833 |  8200880.16 |\n|      11523 |  8196478.02 |\n|      71478 |  8195930.68 |\n|     129262 |  8190520.80 |\n|      43023 |  8186451.85 |\n|     119193 |  8184853.14 |\n|      85067 |  8182638.86 |\n|     164534 |  8181563.04 |\n|      82556 |  8180455.14 |\n|      31813 |  8179417.14 |\n|      81345 |  8173128.69 |\n|      38413 |  8172464.04 |\n|     106014 |  8171418.35 |\n|     191180 |  8170663.97 |\n|      43274 |  8169669.72 |\n|       5837 |  8166123.50 |\n|      63332 |  8161839.60 |\n|      47668 |  8161790.04 |\n|     112468 |  8160728.40 |\n|     132541 |  8160680.00 |\n|      59457 |  8160393.33 |\n|      71751 |  8159865.19 |\n|     118395 |  8156795.00 |\n|     132390 |  8154867.54 |\n|      44792 |  8153384.22 |\n|     128838 |  8153018.30 |\n|      87197 |  8152281.72 |\n|     187978 |  8150832.56 |\n|     147419 |  8150063.60 |\n|     149166 |  8149406.78 |\n|     196012 |  8147307.42 |\n|     190519 |  8145402.96 |\n|     151511 |  8144276.58 |\n|      88891 |  8140166.24 |\n|     168056 |  8139101.96 |\n|     189186 |  8136933.25 |\n|     117326 |  8136047.82 |\n|      60575 |  8133316.80 |\n|      75452 |  8130427.37 |\n|     194126 |  8129751.80 |\n|     130199 |  8129270.88 |\n|      41680 |  8128823.40 |\n|     107624 |  8125799.20 |\n|     135069 |  8123999.10 |\n|     119032 |  8123770.24 |\n|      27635 |  8123076.65 |\n|      14317 |  8121553.23 |\n|     148018 |  8119898.16 |\n|      51152 |  8118370.26 |\n|     112643 |  8117331.37 |\n|     119526 |  8116075.80 |\n|     192084 |  8114896.38 |\n|     151385 |  8114711.28 |\n|     160836 |  8112053.68 |\n|      91468 |  8111785.50 |\n|      58877 |  8108256.25 |\n|      41885 |  8107026.81 |\n|     155542 |  8106757.18 |\n|     149968 |  8104953.78 |\n|     168380 |  8103576.00 |\n|     134641 |  8101092.32 |\n|      92470 |  8100877.70 |\n|     113610 |  8098591.93 |\n|     198538 |  8097343.20 |\n|     122506 |  8096090.76 |\n|      29082 |  8093543.55 |\n|     161345 |  8093157.93 |\n|     105743 |  8093045.53 |\n|     103572 |  8091573.66 |\n|      59514 |  8089470.48 |\n|       8801 |  8088454.15 |\n|     129062 |  8088206.58 |\n|     155464 |  8086115.79 |\n|      86363 |  8082561.00 |\n|     180836 |  8082087.30 |\n|      92558 |  8081407.80 |\n|      85120 |  8073164.00 |\n|     149026 |  8072285.40 |\n|      51138 |  8072074.48 |\n|      36306 |  8071648.86 |\n|     102380 |  8070503.00 |\n|     147597 |  8069397.60 |\n|      41382 |  8059995.35 |\n|     121856 |  8059809.11 |\n|      86644 |  8058667.76 |\n|     108481 |  8058214.81 |\n|      41685 |  8057355.39 |\n|     175712 |  8054878.30 |\n|      72815 |  8052294.24 |\n|      58794 |  8047848.00 |\n|     118769 |  8047465.14 |\n|     157192 |  8046501.96 |\n|     195708 |  8045001.94 |\n|     163683 |  8044727.02 |\n|     189018 |  8043927.54 |\n|      62904 |  8043011.65 |\n|      80095 |  8042575.59 |\n|      90500 |  8042502.65 |\n|      73281 |  8040167.52 |\n|     150710 |  8035910.80 |\n|     139282 |  8034489.36 |\n|     172904 |  8033791.68 |\n|      38881 |  8032557.38 |\n|      53055 |  8030796.15 |\n|     105816 |  8025318.24 |\n|      88304 |  8024637.06 |\n|     115565 |  8023928.25 |\n|      55376 |  8021432.16 |\n|      56334 |  8019313.12 |\n|      58875 |  8016065.00 |\n|       4688 |  8012303.00 |\n|      49117 |  8009207.80 |\n|      57173 |  8008116.27 |\n|      48176 |  8006765.85 |\n|     112191 |  8003883.39 |\n|      33265 |  8002391.76 |\n|     181788 |  8002030.50 |\n|     172799 |  8001050.55 |\n|       2084 |  7999172.30 |\n|     174747 |  7997167.48 |\n|     171184 |  7996930.11 |\n|     113271 |  7992683.04 |\n|      68662 |  7991426.30 |\n|     179375 |  7991170.88 |\n|     188383 |  7990226.27 |\n|      50208 |  7989363.27 |\n|      23653 |  7988890.87 |\n|     159419 |  7988841.36 |\n|      74581 |  7987356.50 |\n|     133590 |  7986046.81 |\n|     195820 |  7985473.14 |\n|      87903 |  7983482.88 |\n|      69032 |  7981908.18 |\n|     113975 |  7980561.00 |\n|     178678 |  7975116.93 |\n|      52316 |  7973618.16 |\n|     135546 |  7972669.80 |\n|      89425 |  7970077.44 |\n|     115937 |  7966015.20 |\n|     151483 |  7964850.88 |\n|      73974 |  7964186.23 |\n|      39976 |  7964104.24 |\n|     130168 |  7961690.88 |\n|      58973 |  7957416.76 |\n|      16354 |  7956051.07 |\n|      23988 |  7955837.92 |\n|     138467 |  7955481.05 |\n|      26096 |  7955212.32 |\n|     192216 |  7953429.18 |\n|     112833 |  7952279.26 |\n|      60599 |  7951261.80 |\n|     129116 |  7948811.85 |\n|      79529 |  7947581.91 |\n|      71616 |  7944476.54 |\n|     136821 |  7942188.24 |\n|     116204 |  7941096.90 |\n|     165298 |  7939933.31 |\n|      44009 |  7939859.65 |\n|     194487 |  7938247.20 |\n|      11299 |  7938135.81 |\n|      76488 |  7935926.86 |\n|      58998 |  7934414.04 |\n|      25175 |  7931035.11 |\n|     136144 |  7929283.23 |\n|     132829 |  7926841.62 |\n|      84176 |  7925781.05 |\n|      68592 |  7922872.98 |\n|     139280 |  7922119.48 |\n|     160669 |  7921588.43 |\n|      42938 |  7917524.56 |\n|     183183 |  7915624.86 |\n|      95449 |  7914292.08 |\n|     115390 |  7912655.54 |\n|     173723 |  7911329.40 |\n|      48992 |  7911153.12 |\n|     173464 |  7910458.65 |\n|      26098 |  7910217.75 |\n|     141115 |  7909496.38 |\n|     195218 |  7906315.56 |\n|     116608 |  7906302.60 |\n|     163793 |  7905477.33 |\n|      10419 |  7904598.30 |\n|     106312 |  7901466.72 |\n|      48674 |  7901010.24 |\n|      35198 |  7899974.88 |\n|      88954 |  7899573.52 |\n|      41505 |  7897709.99 |\n|     115586 |  7897301.88 |\n|     167431 |  7895826.00 |\n|     158787 |  7894948.50 |\n|     161712 |  7893410.70 |\n|      46930 |  7892707.77 |\n|      58633 |  7892088.15 |\n|      10599 |  7892067.69 |\n|      99523 |  7891485.16 |\n|      70126 |  7890247.41 |\n|      32476 |  7890149.34 |\n|     152617 |  7890136.50 |\n|     162639 |  7889822.70 |\n|      82056 |  7889345.05 |\n|     186450 |  7887873.56 |\n|      39082 |  7886019.89 |\n|     183217 |  7885948.48 |\n|     192551 |  7884432.48 |\n|     164801 |  7882870.10 |\n|     112804 |  7882772.00 |\n|       5956 |  7878805.04 |\n|      73054 |  7878479.63 |\n|      62593 |  7878401.44 |\n|     137687 |  7873755.91 |\n|      80526 |  7871839.50 |\n|     195354 |  7869617.75 |\n|       4122 |  7867967.09 |\n|       4057 |  7865176.80 |\n|      63195 |  7864322.16 |\n|     143370 |  7863444.54 |\n|      41473 |  7862926.89 |\n|     155060 |  7860900.96 |\n|      76875 |  7858529.64 |\n|     135778 |  7857660.51 |\n|      30534 |  7855226.08 |\n|      99405 |  7853410.95 |\n|     161551 |  7852244.40 |\n|     185034 |  7850752.00 |\n|      17264 |  7850704.88 |\n|      23652 |  7848909.16 |\n|     123681 |  7848265.36 |\n|     186170 |  7845527.50 |\n|      81496 |  7840427.40 |\n|      25407 |  7840234.72 |\n|      96662 |  7839907.41 |\n|     156407 |  7839647.75 |\n|     165843 |  7839562.80 |\n|     153361 |  7838813.07 |\n|     149362 |  7838282.52 |\n|      46057 |  7835709.81 |\n|     114341 |  7835492.25 |\n|     154823 |  7834898.61 |\n|     139538 |  7834690.64 |\n|      42853 |  7833252.60 |\n|     177659 |  7831803.58 |\n|      29158 |  7829880.80 |\n|      85583 |  7825996.64 |\n|     165714 |  7825006.46 |\n|      58662 |  7821977.76 |\n|     185839 |  7821640.74 |\n|      93559 |  7821137.52 |\n|      58481 |  7818648.16 |\n|     162217 |  7817923.47 |\n|     130014 |  7815929.34 |\n|     125640 |  7815262.90 |\n|      83723 |  7815021.48 |\n|      54314 |  7813732.94 |\n|     146652 |  7809817.39 |\n|     189256 |  7808972.00 |\n|      87994 |  7808660.48 |\n|     157067 |  7806217.25 |\n|      56859 |  7805947.60 |\n|     118132 |  7804423.69 |\n|     189457 |  7802777.91 |\n|       1509 |  7802315.42 |\n|     129101 |  7801994.70 |\n|     162285 |  7801859.52 |\n|     182358 |  7801430.46 |\n|       6288 |  7800363.30 |\n|      68972 |  7799224.95 |\n|      51684 |  7795455.46 |\n|     148645 |  7794585.92 |\n|      94359 |  7794358.92 |\n|      40451 |  7791437.70 |\n|      44019 |  7790053.76 |\n|      81470 |  7788716.85 |\n|      12731 |  7786998.38 |\n|     114393 |  7784963.34 |\n|      69323 |  7783583.08 |\n|     169794 |  7780968.30 |\n|      25378 |  7778569.60 |\n|     104509 |  7777137.62 |\n|      81874 |  7775216.80 |\n|      70859 |  7771185.07 |\n|     135768 |  7769704.84 |\n|     181960 |  7768847.90 |\n|      28481 |  7768516.61 |\n|     191604 |  7765367.68 |\n|        754 |  7762507.02 |\n|     127702 |  7761776.05 |\n|      36488 |  7761744.00 |\n|     183906 |  7759864.80 |\n|      90365 |  7759602.50 |\n|      60725 |  7759495.78 |\n|      69436 |  7759033.52 |\n|      12963 |  7756623.52 |\n|      64571 |  7755731.04 |\n|     160111 |  7753787.70 |\n|     107970 |  7753735.88 |\n|     132036 |  7753401.36 |\n|      79965 |  7748656.15 |\n|     149862 |  7747239.10 |\n|      73218 |  7745499.42 |\n|     161036 |  7742807.45 |\n|     152467 |  7742471.40 |\n|     163358 |  7742034.00 |\n|     197951 |  7741768.84 |\n|      15820 |  7740003.00 |\n|      31444 |  7739519.60 |\n|     151208 |  7738273.85 |\n|      20410 |  7737192.99 |\n|      45462 |  7736792.55 |\n|     128966 |  7736467.65 |\n|     118945 |  7735275.00 |\n|     106458 |  7734069.72 |\n|     162706 |  7730189.88 |\n|      70528 |  7730088.25 |\n|     107998 |  7728273.45 |\n|     163110 |  7728042.40 |\n|      74591 |  7727297.76 |\n|     121454 |  7726200.56 |\n|     181252 |  7724464.38 |\n|      29154 |  7724129.66 |\n|      63854 |  7720353.88 |\n|      34157 |  7719803.30 |\n|      30684 |  7718307.84 |\n|       3985 |  7715042.96 |\n|      29387 |  7714858.80 |\n|     184703 |  7712545.12 |\n|     124679 |  7712528.72 |\n|      15606 |  7710658.46 |\n|     123814 |  7709872.95 |\n|      83760 |  7709633.92 |\n|      22084 |  7707219.79 |\n|     123210 |  7706030.42 |\n|      75066 |  7704727.51 |\n|      16337 |  7704517.80 |\n|      47109 |  7704111.51 |\n|       8232 |  7702887.50 |\n|      11222 |  7702535.62 |\n|      84961 |  7701923.72 |\n|     157118 |  7700132.88 |\n|     118362 |  7699210.20 |\n|     193755 |  7698545.20 |\n|       1520 |  7697759.37 |\n|     114599 |  7697377.50 |\n|     168842 |  7696152.00 |\n|     172245 |  7694286.06 |\n|       4584 |  7693352.79 |\n|     113651 |  7689659.67 |\n|     183207 |  7687955.66 |\n|     175802 |  7686604.70 |\n|      59066 |  7685120.43 |\n|     130726 |  7684159.25 |\n|      89672 |  7684049.50 |\n|       7224 |  7683446.40 |\n|      97533 |  7680694.62 |\n|      59941 |  7680100.80 |\n|      29298 |  7676823.42 |\n|     163962 |  7675924.96 |\n|      41086 |  7674518.14 |\n|     185483 |  7673376.60 |\n|     165010 |  7672469.70 |\n|       3708 |  7671744.18 |\n|     192994 |  7671712.00 |\n|      79968 |  7668060.48 |\n|     118494 |  7666659.00 |\n|      59236 |  7666625.98 |\n|     149509 |  7665930.67 |\n|       3793 |  7664981.28 |\n|      28979 |  7664632.93 |\n|     178389 |  7662544.96 |\n|      65315 |  7661085.88 |\n|      59710 |  7657442.00 |\n|     170276 |  7656813.89 |\n|     182707 |  7656387.06 |\n|     129170 |  7655820.48 |\n|      59765 |  7655009.92 |\n|      23337 |  7654271.94 |\n|      90396 |  7653568.35 |\n|      68842 |  7652742.72 |\n|      16315 |  7652630.70 |\n|        956 |  7652174.81 |\n|      10639 |  7651375.80 |\n|     112886 |  7649534.08 |\n|       9561 |  7648502.73 |\n|      65484 |  7647789.30 |\n|      68677 |  7646879.14 |\n|     196529 |  7645482.24 |\n|       6556 |  7642116.06 |\n|       9113 |  7640163.68 |\n|     128139 |  7638760.00 |\n|     143264 |  7635499.56 |\n|      21569 |  7634785.86 |\n|     193402 |  7633576.06 |\n|      35545 |  7632210.69 |\n|      65068 |  7632188.76 |\n|      25515 |  7630952.93 |\n|     180189 |  7630887.10 |\n|     131680 |  7629593.64 |\n|      80162 |  7629440.93 |\n|     139054 |  7629417.37 |\n|       8028 |  7629134.04 |\n|      76804 |  7626731.00 |\n|      74179 |  7624974.03 |\n|     122507 |  7623903.87 |\n|     141889 |  7623552.30 |\n|     184279 |  7623048.17 |\n|       8076 |  7620897.81 |\n|     192681 |  7619802.09 |\n|      21398 |  7617942.52 |\n|      14825 |  7617843.60 |\n|      17969 |  7617524.64 |\n|     170764 |  7616119.96 |\n|     115303 |  7615914.17 |\n|      67708 |  7615306.08 |\n|      33317 |  7613417.24 |\n|     190782 |  7613203.42 |\n|     113818 |  7612852.48 |\n|     178091 |  7611457.30 |\n|      87603 |  7611343.68 |\n|     108317 |  7610509.71 |\n|     106552 |  7609868.84 |\n|      28679 |  7609292.20 |\n|     192350 |  7609140.81 |\n|     154801 |  7607944.38 |\n|       5768 |  7607785.68 |\n|     127689 |  7606313.94 |\n|      62847 |  7605651.45 |\n|     111212 |  7605052.00 |\n|     156065 |  7603327.60 |\n|     115140 |  7601161.68 |\n|      19597 |  7601153.46 |\n|      55233 |  7600940.23 |\n|      89353 |  7600929.84 |\n|      75701 |  7600492.60 |\n|      64974 |  7599754.80 |\n|     116156 |  7597452.48 |\n|      59491 |  7596352.84 |\n|       6138 |  7594861.54 |\n|      62317 |  7594854.10 |\n|     106575 |  7594520.08 |\n|     161092 |  7594454.40 |\n|       9872 |  7593734.34 |\n|      77711 |  7593431.60 |\n|      61206 |  7593153.00 |\n|     123776 |  7592736.80 |\n|     185141 |  7592617.12 |\n|       5542 |  7592513.04 |\n|     185296 |  7591439.31 |\n|      72597 |  7591142.40 |\n+------------+-------------+\n1225 rows in set\n\nQ12\n+------------+-----------------+----------------+\n| l_shipmode | high_line_count | low_line_count |\n+------------+-----------------+----------------+\n| FOB        |            6273 |           9429 |\n| TRUCK      |            6336 |           9300 |\n+------------+-----------------+----------------+\n\nQ13\n+---------+----------+\n| c_count | custdist |\n+---------+----------+\n|       0 |    50005 |\n|      10 |     6574 |\n|       9 |     6554 |\n|      11 |     6072 |\n|       8 |     5934 |\n|      12 |     5598 |\n|      13 |     5032 |\n|      19 |     4685 |\n|       7 |     4663 |\n|      20 |     4607 |\n|      17 |     4550 |\n|      18 |     4515 |\n|      14 |     4480 |\n|      15 |     4476 |\n|      16 |     4341 |\n|      21 |     4176 |\n|      22 |     3710 |\n|       6 |     3303 |\n|      23 |     3172 |\n|      24 |     2670 |\n|      25 |     2111 |\n|       5 |     1954 |\n|      26 |     1605 |\n|      27 |     1195 |\n|       4 |     1030 |\n|      28 |      898 |\n|      29 |      620 |\n|       3 |      408 |\n|      30 |      353 |\n|      31 |      225 |\n|      32 |      135 |\n|       2 |      128 |\n|      33 |       82 |\n|      34 |       54 |\n|      35 |       33 |\n|       1 |       18 |\n|      36 |       17 |\n|      37 |        7 |\n|      41 |        3 |\n|      40 |        3 |\n|      38 |        3 |\n|      39 |        1 |\n+---------+----------+\n42 rows in set\n\n\nQ14\n+-------------------+\n| promo_revenue     |\n+-------------------+\n| 16.65118731292792 |\n+-------------------+\n\nQ15\n+-----------+--------------------+----------------------------------+-----------------+---------------+\n| s_suppkey | s_name             | s_address                        | s_phone         | total_revenue |\n+-----------+--------------------+----------------------------------+-----------------+---------------+\n|      7895 | Supplier#000007895 | NYl,i8UhxTykLxGJ2voIRn20Ugk1KTzz | 14-559-808-3306 |  1678635.2636 |\n+-----------+--------------------+----------------------------------+-----------------+---------------+\n\n\nQ16\n+----------+---------------------------+--------+--------------+\n| p_brand  | p_type                    | p_size | supplier_cnt |\n+----------+---------------------------+--------+--------------+\n| Brand#55 | LARGE BURNISHED TIN       |     21 |           36 |\n| Brand#25 | PROMO BRUSHED STEEL       |     24 |           28 |\n| Brand#54 | STANDARD BRUSHED COPPER   |     14 |           27 |\n| Brand#12 | MEDIUM PLATED BRASS       |     21 |           24 |\n| Brand#14 | ECONOMY PLATED TIN        |     33 |           24 |\n| Brand#24 | ECONOMY PLATED TIN        |     33 |           24 |\n| Brand#25 | MEDIUM PLATED STEEL       |     35 |           24 |\n| Brand#32 | MEDIUM POLISHED COPPER    |     20 |           24 |\n| Brand#32 | SMALL ANODIZED BRASS      |      7 |           24 |\n| Brand#33 | ECONOMY PLATED STEEL      |      7 |           24 |\n| Brand#33 | MEDIUM PLATED COPPER      |     20 |           24 |\n| Brand#33 | PROMO POLISHED STEEL      |     14 |           24 |\n...\n| Brand#31 | PROMO ANODIZED COPPER     |     20 |            3 |\n| Brand#41 | LARGE BURNISHED STEEL     |     20 |            3 |\n| Brand#43 | SMALL BRUSHED COPPER      |      7 |            3 |\n| Brand#52 | MEDIUM POLISHED BRASS     |     21 |            3 |\n| Brand#52 | SMALL POLISHED TIN        |      2 |            3 |\n+----------+---------------------------+--------+--------------+\n18341 rows in set\n\nQ17\n+-------------------+\n| avg_yearly        |\n+-------------------+\n| 348406.0542857143 |\n+-------------------+\n\nQ18\n+--------------------+-----------+------------+-------------+--------------+-----------------+\n| c_name             | c_custkey | o_orderkey | o_orderdate | o_totalprice | sum(l_quantity) |\n+--------------------+-----------+------------+-------------+--------------+-----------------+\n| Customer#000128120 |    128120 |    4722021 | 1994-04-07  |    544089.09 |          323.00 |\n| Customer#000144617 |    144617 |    3043270 | 1997-02-12  |    530604.44 |          317.00 |\n| Customer#000066790 |     66790 |    2199712 | 1996-09-30  |    515531.82 |          327.00 |\n| Customer#000015619 |     15619 |    3767271 | 1996-08-07  |    480083.96 |          318.00 |\n| Customer#000147197 |    147197 |    1263015 | 1997-02-02  |    467149.67 |          320.00 |\n| Customer#000117919 |    117919 |    2869152 | 1996-06-20  |    456815.92 |          317.00 |\n| Customer#000126865 |    126865 |    4702759 | 1994-11-07  |    447606.65 |          320.00 |\n| Customer#000036619 |     36619 |    4806726 | 1995-01-17  |    446704.09 |          328.00 |\n| Customer#000119989 |    119989 |    1544643 | 1997-09-20  |    434568.25 |          320.00 |\n+--------------------+-----------+------------+-------------+--------------+-----------------+\n9 rows in set\n\nQ19\n+--------------+\n| revenue      |\n+--------------+\n| 3083843.0578 |\n+--------------+\n\nQ20\n+--------------------+------------------------------------------+\n| s_name             | s_address                                |\n+--------------------+------------------------------------------+\n| Supplier#000000035 | QymmGXxjVVQ5OuABCXVVsu,4eF gU0Qc6        |\n| Supplier#000000068 | Ue6N50wH2CwE4PPgTGLmat,ibGYYlDoOb3xQwtgb |\n| Supplier#000000080 | cJ2MHSEJ13rIL2Wj3D5i6hRo30,ZiNUXhqn      |\n| Supplier#000000100 | rIlN li8zvW22l2slbcx ECP4fL              |\n| Supplier#000000274 | usxbl9KSW41DTE6FAglxHU                   |\n| Supplier#000000406 | zMhU58CDF4aHTeodxg9IgRZgq                |\n| Supplier#000000444 | mHr2VcUpRkvyQ9rjKMaPkeWbVZmEIhxhb8F      |\n| Supplier#000000453 | bpt98PxU5HSQt61bVB695JPjBmJKUv hNzQeHvC  |\n| Supplier#000000458 | IFNkUK1H53HwUHabiONkMFAUDb               |\n| Supplier#000000622 | gCQimU1jYHoQiglDmW1FkQM9wzi YC1P15pMy1   |\n| Supplier#000000713 | DBMIf1HiYY8OyRFcbtHpKIz                  |\n| Supplier#000000767 | bHEuqKKdmCMEKOV                          |\n| Supplier#000000776 | nklfFoSkCwf,ooSuF                        |\n| Supplier#000000823 |  gC0DrEG5U,v893fp3nj mmXa6rYhJ0tjpJ      |\n| Supplier#000000828 | 0B2aPqJ6KTEr2fqxuC7z                     |\n| Supplier#000000941 | gqG2XEnVlzUhjjfQGYGlwk,jcaNsplI8Rleg     |\n| Supplier#000000973 | 5 nhBZ 03rG6EcOEDkZXvt                   |\n| Supplier#000000984 | 6H6qqye iYbYzCmwWhj                      |\n| Supplier#000001149 | Nuno37wiZOjNGHF                          |\n| Supplier#000001201 | Seh4D7pi9UdK,XQkF46A0O2N                 |\n| Supplier#000001309 | 72RNUzKzbniUnnsSs24ZzGDvmcv2Pd           |\n| Supplier#000001344 | 6iF,zVDNTykohVKcb7FKvn82s74ez            |\n| Supplier#000001351 | zXdoBMmmRx1wOD7GKoHHBtemXGuYKLDb,U2KP    |\n| Supplier#000001391 | hkWoAM561QlLjBNk,SdFdIgFx                |\n| Supplier#000001481 | ARqVvJHMxBNKl2LrfPsR  Wq9ZUXh,14         |\n| Supplier#000001584 | gJbTkijteJxSMLmdzBSzeMAH                 |\n| Supplier#000001651 | 6rJNoWL9YL                               |\n| Supplier#000001710 | J,sdOOJwUhwPv2mrEiNEA0UZlmu5IRmgz        |\n| Supplier#000001755 | QstBVfnY,93NsbWXCqO                      |\n| Supplier#000001869 | nogoCdaFQii,ri9rs3P8f5rPt1wVOMw9I7TmypxK |\n| Supplier#000001895 | lywAGDbk37fYPDS                          |\n| Supplier#000001910 | vih,zrhclXX1O9x                          |\n| Supplier#000001930 | 2jCSw3KOLHol7y5omVO13                    |\n| Supplier#000001979 | UNW7nA,IC 5igvVsgUHA7OaLL,jOzUcT         |\n| Supplier#000002046 | BiTDgHknmvQGT6FpZXfRX,xlnR               |\n| Supplier#000002071 | zLH3QAtZuuOq8AoVNM                       |\n| Supplier#000002270 | HIscbvhw8N94djn,3UbPaY4R                 |\n| Supplier#000002350 | TWsO2iJGOl7v3vSwiscXp6X                  |\n| Supplier#000002409 | oy39SaSQ,FIP pzLqblhxj                   |\n| Supplier#000002520 | 5y55UzYQKByZP3                           |\n| Supplier#000002618 | 3UtbE1kKm29kKyx09hSEBMhRLM               |\n| Supplier#000002643 | eDN6YjGtp2dcj0IF,BKEEYjElO,sUjjcNI       |\n| Supplier#000002649 | agDQi9iCt1cUaS                           |\n| Supplier#000002655 | i6v8dkQBuK0NSCeqQCE8                     |\n| Supplier#000002812 | Q9sO3wZkBU5QBe0VITRWShv                  |\n| Supplier#000002888 | 3AtRoxBFh6HIBa9kdBX,6,Ml2SZGUA           |\n| Supplier#000002910 | nlH1gjApxHkQe5SU4iVZwi2xWk88wwhTWRkSvOBB |\n| Supplier#000002914 | fUC4IkGB8pt1S                            |\n| Supplier#000003000 | JtDvRf4iWHJkj54PYxl                      |\n| Supplier#000003011 | vfL mV0MTdyozfRIPZkJbM1Z7Lcm2NCPIj6qSgBz |\n| Supplier#000003038 | F5Tz7P juuCbABDuW8JGomRFxqVHBWyQrsLwg4i  |\n| Supplier#000003150 | XwSjsmzEnANK,wAQUp4Xf5xJDqR              |\n| Supplier#000003305 | GLZJimfuzKoQcqcv4                        |\n| Supplier#000003394 | R6D7n3WrQjWNGSQTb7eN ,X0oCMkhyuTHBOSPw   |\n| Supplier#000003452 | 7tMycIKhE,pe4OL3Du                       |\n| Supplier#000003666 | ENS fE9iSrSzw,iTwA,zGorkflw              |\n| Supplier#000003698 | lnSEu64ca4B53BfznJPg                     |\n| Supplier#000003773 | UWjSotAjkAD                              |\n| Supplier#000003837 | SYXpXaKop3                               |\n| Supplier#000003846 | wl076KfcEpYLRegb1LfIf93b3n5HBabFK2R,mEM  |\n| Supplier#000003862 | 0XXFhF1IDBh                              |\n| Supplier#000003868 | 5aP4VBn0t666NbGYB                        |\n| Supplier#000003880 | DZo80mSznrhCpb8                          |\n| Supplier#000003955 | piECPB8qbn7s3XP                          |\n| Supplier#000004007 | cvlSgCCKGOwpaB iFIPx4vU2qA5b6K hz9Z91    |\n| Supplier#000004066 | TNBnJFDScUmsjBy6pSWTS sfMg9jpfKx         |\n| Supplier#000004127 | EduKm3NcCc75Cd                           |\n| Supplier#000004174 | Bk97olQYwXmjYdQjwyt N                    |\n| Supplier#000004328 | euddbWZRcVMD3W                           |\n| Supplier#000004341 | ea8KZYvO7amq8A                           |\n| Supplier#000004360 | w 7kM5J,fqjiqBu4SU0UPEDqspaUEm           |\n| Supplier#000004375 | Cmr952zcJJuW0xAYc0W0MA7N6vMcCjy          |\n| Supplier#000004391 | pcsiJBhSEHuFHNAxR3K c                    |\n| Supplier#000004398 | khZZ0CmLip49Zncec                        |\n| Supplier#000004402 | acagGfDWzwmS,,WVBsszubFs3LOA8rDRS0I      |\n| Supplier#000004714 | IKRla2xArMmR4p3Mbn8JV8g0                 |\n| Supplier#000004717 | H,Suh5pN230Ol,ggx0QEh3rrvzyQsq050Lat     |\n| Supplier#000004740 | yM0TXkhfjpObafbQhuWU                     |\n| Supplier#000004763 | W 7kS9LLh4ZgLpk2                         |\n| Supplier#000004837 | tYHMZS4XlJjzvj34mH2PCoj                  |\n| Supplier#000004882 | e,V Bo1KZEt                              |\n| Supplier#000004913 | em,yC41xEl Fst9LwEik                     |\n| Supplier#000005005 | K6 GI4WzmbsGEOh                          |\n| Supplier#000005238 | jmtI76 8RNG8Z2BZu                        |\n| Supplier#000005289 | 62XeOur9SnXgbdjGwb9E1aJIEBr5PA9          |\n| Supplier#000005317 | lPOPHufNjwZaUJGVNHCC2DE FYQcKZBzHltL5    |\n| Supplier#000005401 | eEOlCEAaIfVexStlrgTuzwQx7vjPF6ZT dm      |\n| Supplier#000005449 | fhc8lUuZdqWUujcVaWogowEq1WVL9Y8m1efwCl3G |\n| Supplier#000005472 | LlyLSmvY9GFvMN4QhHzMokW0k5d              |\n| Supplier#000005572 | o0VYozeSbEyqck                           |\n| Supplier#000005579 | ACVEMP4IwRf                              |\n| Supplier#000005661 | pq5wuxmkIW0DyWU                          |\n| Supplier#000005676 | HInJHZisl5svSU1oKsr                      |\n| Supplier#000005815 | S6cu6cspYxHlTz2                          |\n| Supplier#000005835 | rYoXzV3EZ77Z                             |\n| Supplier#000006103 | l32l8iaPdbHgRXoq,kdjFAj3hZk2d            |\n| Supplier#000006173 | hBdratcVfL4LpWxsEpCRP g0AksN0CDhBZ       |\n| Supplier#000006226 | CKuDyeGAxPHeRHwC4a                       |\n| Supplier#000006254 | g7OY1vWNUb1vxIRgEl                       |\n| Supplier#000006348 | f2KDn2rLnadX8I DZR                       |\n| Supplier#000006359 | QyUuVHYBp8sTd7Y9WveNfsz                  |\n| Supplier#000006430 | F2RrkeaNcs6po8x2PyYvcPa1rtKd,fT2AMxP     |\n| Supplier#000006516 | 89XwFOC,hLRxGq5rL0txv0EM9F               |\n| Supplier#000006700 | BWjerJH5kbEPu 8h9                        |\n| Supplier#000006785 | lyo6PpwulTeN9ZfIkvWag5NucL,XMC  89Kn7U   |\n| Supplier#000006998 | r2i3HfkSQh9dvho, NpoabdMsPBG             |\n| Supplier#000007019 | 2GQsALzRiTt2BQum6bocdeGawkOrsjNIZ        |\n| Supplier#000007114 | s9s4YLeLWo7fLRO3rdQKFfUnZhrZUPjOC        |\n| Supplier#000007170 | 9vABqu hZaciXSCQrbTj                     |\n| Supplier#000007171 | DXerxFIhNRpqF9dWNRw hDOlLX gEJFxh0       |\n| Supplier#000007213 | 2Nrby3JJHDJyWwVNiqPtm2U JGWlZpU          |\n| Supplier#000007219 | p5Ui3IGPcmotYu                           |\n| Supplier#000007229 | iwNoWdaURFzLAsQHxK,BeOPpI5TOTo           |\n| Supplier#000007263 | malQPdYc8xiup2MiFuKHa                    |\n| Supplier#000007270 | TksERECGdYZRPUjkUdDRZv5pW26cOTaA1        |\n| Supplier#000007276 | Vi9,aBg2ychZf                            |\n| Supplier#000007334 | NPXYWdJ8L9EDr20tw9CZQsEMqXlgXzI2JC Y     |\n| Supplier#000007400 | 7r9zZj8J,,hN2GRfWtDxzuGa                 |\n| Supplier#000007442 | DzycM1,T6kh2EutfPeFpv0Ro                 |\n| Supplier#000007456 | ITYEeccPVJi0HvnAwVs2Z                    |\n| Supplier#000007559 | Wmzx1vskciC                              |\n| Supplier#000007677 | OoTYQdxQyd7NukSaSRv                      |\n| Supplier#000007712 | DyTQD 3ajuOtHQTpI4LsWSF kSd2SE6U4COgYHQ  |\n| Supplier#000007715 | gZHd7Yzbtv7yb7DYCCAQPJH8FRHTqi6T4w       |\n| Supplier#000007816 | 1ejcJ545bwLWLuY6Qq4qyEExZIsp0SG          |\n| Supplier#000007845 | agwGVTzLyRKOsZxLVi,mPWZ08Qxb             |\n| Supplier#000007875 | E0CkoBYngcIoH                            |\n| Supplier#000007908 | ghhHapj7GK                               |\n| Supplier#000007972 | WW0GuiWP2N3kUo4f                         |\n| Supplier#000008162 | XASpbn08mRV0kgHRmUSKx                    |\n| Supplier#000008235 | TjVWq6bTdGJB                             |\n| Supplier#000008249 | PwUjvlMk y72zaMRtZQ8trbCmu4j             |\n| Supplier#000008309 | 6P,FQbW6sJouqunvttVO6vEeY                |\n| Supplier#000008339 | uWw8 P6u,S                               |\n| Supplier#000008343 |  BbHngAVqj0J8                            |\n| Supplier#000008349 | 8Hkx1IDd0mZCTX                           |\n| Supplier#000008377 | ,Yk0mflw2LqQCTxMYR sU2juj5DorUAG4w6i     |\n| Supplier#000008468 | 5R4jsweitleustYlE3w,u5otW                |\n| Supplier#000008523 | C4ocdfNu5I2nnnVG2xSd3016J6KNLIg          |\n| Supplier#000008580 | t5ri71bM6Sox3riP4JUZsMMNC                |\n| Supplier#000008638 | yxj50B 8aMql                             |\n| Supplier#000008642 | qnN9N9du9Dg2arf6kjD xW0DjMT9cM           |\n| Supplier#000008651 | pfw32RGA7BPXrUiavYqE                     |\n| Supplier#000008679 | JWFVoSsCwn9p8o                           |\n| Supplier#000008704 | a6DjHp0B6mifKBtqUk,C                     |\n| Supplier#000008737 | MsdGxF9Xoq9 8s                           |\n| Supplier#000008820 | uAsBvPBNsEsO                             |\n| Supplier#000008829 | lNcY7xNLDonCw TuRYL                      |\n| Supplier#000008947 | 1Ij3T0egGHnVbLich98HzY,UeCdVbxzYa ZpKDVc |\n| Supplier#000008964 | U2YJW,Y1xCbUWbjuovtzsLfsl                |\n| Supplier#000008974 | 4JCXOJ3MyPfa51mIf,MQu                    |\n| Supplier#000008997 | KY MmMEcyQ6FEDCooFj xa uCwF2GbaeA8       |\n| Supplier#000009065 | ZELuiqWrWbJV9zAuco1OnXKTJClhR            |\n| Supplier#000009114 | nkn6bcPvlP5w,lUpO0nZTBSj                 |\n| Supplier#000009125 | IQbCXbN1mmght                            |\n| Supplier#000009131 | gDBXgWtg4rTxu0WUJhhV                     |\n| Supplier#000009149 | yKX,bKryD6YtvF,cVLIKC0Z6rN               |\n| Supplier#000009182 | z56kNgeqaWQ1kHFBp                        |\n| Supplier#000009220 | N4y,vP kdArpcmdypBh,fJVVB                |\n| Supplier#000009226 | yzT10vNTFJ                               |\n| Supplier#000009288 |  251AA4ziZ3d7TTWXLGnXjb4BnXv             |\n| Supplier#000009360 | 1NVjjX8zMjyBX2UapDTP0Sz                  |\n| Supplier#000009381 | rhCTm7QehIznqd8 Np7VT,H5J5zSGr           |\n| Supplier#000009403 | 70841REghyWBrHyyg762Jh4sjCG7CKaIc        |\n| Supplier#000009504 | Rqt07,ANI92kj1oU                         |\n| Supplier#000009598 | PnTAz7rNRLVDFO3zoo2QRTlh4o               |\n| Supplier#000009609 | LV2rJUGfr0k3dPNRqufG1IoYHzV              |\n| Supplier#000009619 | K0RwcJ9S75Xil jqKukFoDNkD                |\n| Supplier#000009626 | Nm1FnIh4asUR3EnXv2Pvy3gXqI9es            |\n| Supplier#000009738 | 15RRSVTuOzwdMP LmfCtIguMGXK              |\n| Supplier#000009770 | Ag, SZfowit580QPDdbP8kmFHdpZ9ASI         |\n| Supplier#000009865 | extcOh9ZrdDCMsHhhsFTkTUAh,HM2UQ2qa8sRo   |\n| Supplier#000009866 | Auh6aZnOnQG1pPYKZ5o9ATramJBA             |\n| Supplier#000009890 | izJXemCM Ikpgxk                          |\n| Supplier#000009937 | edZ9HQJ0KJAU6EWknTiDghKfRLHq6vtFqdey,0l  |\n| Supplier#000009954 | VzElx9ihlXFJLIQw2Hn4bC2                  |\n| Supplier#000009958 | ggiiSA4CSyvhwQUYjdJhWlKEY9PAfs           |\n+--------------------+------------------------------------------+\n177 rows in set\n\n\nQ21\n+--------------------+---------+\n| s_name             | numwait |\n+--------------------+---------+\n| Supplier#000009302 |      21 |\n| Supplier#000000342 |      20 |\n| Supplier#000000632 |      19 |\n| Supplier#000002196 |      19 |\n| Supplier#000003325 |      18 |\n| Supplier#000003915 |      18 |\n| Supplier#000005045 |      18 |\n| Supplier#000006442 |      18 |\n| Supplier#000003093 |      17 |\n| Supplier#000004498 |      17 |\n| Supplier#000000906 |      16 |\n| Supplier#000001183 |      16 |\n| Supplier#000001477 |      16 |\n| Supplier#000006043 |      16 |\n| Supplier#000000689 |      15 |\n| Supplier#000001955 |      15 |\n| Supplier#000002066 |      15 |\n| Supplier#000002146 |      15 |\n| Supplier#000003253 |      15 |\n| Supplier#000003527 |      15 |\n| Supplier#000003947 |      15 |\n| Supplier#000004915 |      15 |\n| Supplier#000005248 |      15 |\n| Supplier#000006718 |      15 |\n| Supplier#000007773 |      15 |\n| Supplier#000008121 |      15 |\n| Supplier#000008169 |      15 |\n| Supplier#000008645 |      15 |\n| Supplier#000008684 |      15 |\n| Supplier#000009079 |      15 |\n| Supplier#000009956 |      15 |\n| Supplier#000000737 |      14 |\n| Supplier#000000775 |      14 |\n| Supplier#000001474 |      14 |\n| Supplier#000001502 |      14 |\n| Supplier#000003196 |      14 |\n| Supplier#000004415 |      14 |\n| Supplier#000004940 |      14 |\n| Supplier#000005253 |      14 |\n| Supplier#000005703 |      14 |\n| Supplier#000006308 |      14 |\n| Supplier#000006789 |      14 |\n| Supplier#000007161 |      14 |\n| Supplier#000007952 |      14 |\n| Supplier#000008062 |      14 |\n| Supplier#000008414 |      14 |\n| Supplier#000008442 |      14 |\n| Supplier#000008508 |      14 |\n| Supplier#000000300 |      13 |\n| Supplier#000000727 |      13 |\n| Supplier#000000921 |      13 |\n| Supplier#000000992 |      13 |\n| Supplier#000001282 |      13 |\n| Supplier#000001582 |      13 |\n| Supplier#000001662 |      13 |\n| Supplier#000001683 |      13 |\n| Supplier#000002933 |      13 |\n| Supplier#000003177 |      13 |\n| Supplier#000003428 |      13 |\n| Supplier#000003640 |      13 |\n| Supplier#000004842 |      13 |\n| Supplier#000004951 |      13 |\n| Supplier#000005795 |      13 |\n| Supplier#000005981 |      13 |\n| Supplier#000006118 |      13 |\n| Supplier#000006433 |      13 |\n| Supplier#000006484 |      13 |\n| Supplier#000007268 |      13 |\n| Supplier#000008599 |      13 |\n| Supplier#000008675 |      13 |\n| Supplier#000009474 |      13 |\n| Supplier#000009521 |      13 |\n| Supplier#000009853 |      13 |\n| Supplier#000000021 |      12 |\n| Supplier#000000211 |      12 |\n| Supplier#000000743 |      12 |\n| Supplier#000000951 |      12 |\n| Supplier#000001654 |      12 |\n| Supplier#000001868 |      12 |\n| Supplier#000002089 |      12 |\n| Supplier#000002879 |      12 |\n| Supplier#000003060 |      12 |\n| Supplier#000003215 |      12 |\n| Supplier#000003365 |      12 |\n| Supplier#000003873 |      12 |\n| Supplier#000003985 |      12 |\n| Supplier#000004452 |      12 |\n| Supplier#000004639 |      12 |\n| Supplier#000005122 |      12 |\n| Supplier#000005633 |      12 |\n| Supplier#000005671 |      12 |\n| Supplier#000005782 |      12 |\n| Supplier#000006088 |      12 |\n| Supplier#000006477 |      12 |\n| Supplier#000006508 |      12 |\n| Supplier#000006750 |      12 |\n| Supplier#000006802 |      12 |\n| Supplier#000008236 |      12 |\n| Supplier#000009294 |      12 |\n| Supplier#000009329 |      12 |\n+--------------------+---------+\n100 rows in set\n\nQ22\n+-----------+---------+------------+\n| cntrycode | numcust | totacctbal |\n+-----------+---------+------------+\n| 10        |     882 | 6606081.31 |\n| 11        |     899 | 6702253.34 |\n| 19        |     963 | 7230776.82 |\n| 20        |     916 | 6824676.02 |\n| 22        |     894 | 6636740.03 |\n| 26        |     861 | 6404695.86 |\n| 27        |     877 | 6565078.99 |\n+-----------+---------+------------+\n7 rows in set\n</code></pre>"},{"location":"MatrixOne/Test/testing-tool/mo-tester-reference/","title":"MO-Tester Specification","text":""},{"location":"MatrixOne/Test/testing-tool/mo-tester-reference/#case-specifications","title":"Case specifications","text":"Specification Description File name 1. Use .sql or .test as the suffix.2. The file name has a practical meaning. For example, if you need to write a index case, you can name the index case index.sql or index_xxxx.sql. Case 1. In the specific example content in the case, all empty lines are automatically ignored during testing. You can add blank lines to make the SQLs more readable.2. Each SQL statement contains only one line. If multiple lines are required, each line must be preceded by no space. Otherwise, the SQL in the case file and the result file cannot match each other completely.3. Add a comment indicating the purpose of the test case you are currently writing.4. Add a Tag to the case that is in need."},{"location":"MatrixOne/Test/testing-tool/mo-tester-reference/#tag-specifications-in-the-cases","title":"Tag specifications in the cases","text":"Annotation Start with End with Description -- @bvt:issue -- @bvt:issue#{issueNO.}] -- @bvt:issue the SQL marked with this flag will not been executed -- @sessio -- @session:id=X{ -- @session} all the SQLs enclosed by this tag will execute in a new session with id=X -- @separator / / The specified SQL statement in its result and generated the result file using the columns of the separator. There are two values. -- @separator:table / / The column separator in the result is a TAB character. \\t -- @separator:space / / The column separator in the result is four Spaces -- @sortkey -- @sortkey:1,2,3 / The results of the SQL statement are ordered, with the first, second, and third columns (starting from 0) sorted. Under normal circumstances, the tested system returns the result of the order is not fixed, so tools in comparison, the actual results, and expected results are sorted, but for some SQL, the expected results should be ordered, such as <code>order by</code> statement, you need to add such SQL on the tag, The tool does not reorder these columns in sortkey when comparing them."},{"location":"MatrixOne/Test/testing-tool/mo-tester-reference/#result-specifications","title":"Result specifications","text":"Specification Description Normal cases generate test results 1. If a case file is created, ensure that all SQL is debuggable and use the Mo-Tester tool to  generate results automatically.2. If some SQLs are added to the existing case, ensure that all SQLs has passed debugging, and use the Mo-Tester tool to generate results automatically. Cases with tags generate test results 1. If a case contains SQL with the <code>--bvt:issue</code> tag, use the MO-Tester tool to generate results automatically. SQL with the <code>--bvt:issue</code> tag in the generated result file results as' unknown result because it is related to issue#XXX\" '.2. If the results have been automatically generated by the MO-Tester tool. When the results are automatically generated by the MO-Tester tool again, the SQL with the tag <code>--bvt:issue</code> will retain the original value in the generated result file, no more updates. Write results manually 1. If the result is writed manually, do not have empty lines. Otherwise, a parsing error occurs.2. If there are tabs or more than 4 consecutive spaces in the expected execution result of a certain SQL, the corresponding SQL statement in the test case file must be added with Tag <code>-- @separator:</code>, otherwise the parsing will fail. For example, if the SQL  in the case file contains 4 consecutive spaces, you need to specify the Tag label <code>-- @separator:space</code>; if it contains tab characters, specify the Tag label <code>-- @separator:table</code>."},{"location":"MatrixOne/Test/testing-tool/mo-tester-reference/#set-tags-in-case-scripts","title":"Set tags in case scripts","text":"<p>Sometimes, to achieve some specific purposes, such as pausing or creating a new connection, you can add some special tags to the script file. The mo tester provides the following tags for use:</p> Tags Description -- @skip:issue#{IssueNo.} If set, the whole script file will be skipped, and not be executed any more for issue{IssueNo.} -- @bvt:issue#{IssueNo.}-- @bvt:issue The sql statements between those two tags will be not executed for issue{IssueNo.} -- @sleep:{time} The mo-tester will wait for {time} s -- @session:id=2&amp;user=root&amp;password=111 -- @session The mo-tester will create a new connetion to execute sql statements between those two tags.Default value of id is 1, max is 10.Defualt value of user and password is configured in <code>mo.yml</code>. -- @sortkey: If the result is sorted, need set this tag for the sql statement. e.g. -- @sortkey:0,1: means sort keys are first column and second colum."},{"location":"MatrixOne/Test/testing-tool/mo-tester/","title":"What's in MO-Tester?","text":"<p>From the 0.5.0 version, MatrixOne introduces an automatic testing framework MO-Tester.</p> <p>This tester is designed to test MatrixOne or other database functionalities with SQL.</p> <p>MO-Tester is a java-based tester suite for MatrixOne. It has built a whole toolchain to run automatic SQL tests. It contains the test cases and results. Once launched, MO-Tester runs all SQL test cases with MatrixOne, and compares all output SQL results with expected results. All successful and failed cases will be logged into reports.</p> <p>MO-Tester content locations:</p> <ul> <li> <p>Cases: https://github.com/matrixorigin/matrixone/tree/main/test/distributed/cases</p> </li> <li> <p>Result is generated in the path of /cases, for example, /cases/auto_increment.</p> </li> <li> <p>Report: once finished running, a <code>mo-tester/report</code> will be generated in the local directory.</p> </li> </ul> <p>The Cases and Results are 1-1 correspondence, and they are actually <code>git submodules</code> from MatrixOne repository. Adding new cases and results should be in MatrixOne repo: https://github.com/matrixorigin/matrixone/tree/main/test</p>"},{"location":"MatrixOne/Test/testing-tool/mo-tester/#how-to-use-mo-tester","title":"How to use MO-Tester?","text":""},{"location":"MatrixOne/Test/testing-tool/mo-tester/#1-prepare-the-testing-environment","title":"1. Prepare the testing environment","text":"<ul> <li> <p>Make sure you have installed jdk8.</p> </li> <li> <p>Launch MatrixOne or other database instance. Please refer to more information about how to install and launch MatrixOne.</p> </li> <li> <p>Clone mo-tester repository.</p> </li> </ul> <pre><code>git clone https://github.com/matrixorigin/mo-tester.git\n</code></pre> <ul> <li>Clone matrixOne repository.</li> </ul> <pre><code>git clone https://github.com/matrixorigin/matrixone.git\n</code></pre>"},{"location":"MatrixOne/Test/testing-tool/mo-tester/#2-configure-mo-tester","title":"2. Configure <code>mo-tester</code>","text":"<ul> <li>In <code>mo.yml</code> file, configure the server address, default database name, username, and password, and so on. MO-tester is based on java, so these parameters are required for the JDBC(JDBC,Java Database Connectivity) driver. Below is a default example for a local standalone version MatrixOne.</li> </ul> <pre><code>#jdbc\njdbc:\n  driver: \"com.mysql.cj.jdbc.Driver\"\n  server:\n  - addr: \"127.0.0.1:6001\"\n  database:\n    default: \"test\"\n  paremeter:\n    characterSetResults: \"utf8\"\n    continueBatchOnError: \"false\"\n    useServerPrepStmts: \"true\"\n    alwaysSendSetIsolation: \"false\"\n    useLocalSessionState: \"true\"\n    zeroDateTimeBehavior: \"CONVERT_TO_NULL\"\n    failoverReadOnly: \"false\"\n    serverTimezone: \"Asia/Shanghai\"\n    socketTimeout: 30000\n#users\nuser:\n  name: \"root\"\n  passwrod: \"111\"\n</code></pre>"},{"location":"MatrixOne/Test/testing-tool/mo-tester/#3-run-mo-tester","title":"3. Run mo-tester","text":"<ul> <li>With the simple below command, all the SQL test cases will automatically run and generate reports and error messages to report/report.txt and report/error.txt.</li> </ul> <pre><code>&gt; ./run.sh -p {path_name}/matrixone/test/cases\n</code></pre> <p>If you'd like to adjust the test range, you can just change the <code>path</code> parameter of <code>run.yml</code>. And you can also specify some parameters when executing the command <code>./run.sh</code>, parameters are as followings:</p> Parameters Description -p set the path of test cases needed to be executed by mo-tester, the default value is configured by the <code>path</code> in <code>run.yaml</code> -m set the method that mo-tester will run with, the default value is configured by the <code>method</code> in <code>run.yaml</code> -t set the type of the format that mo-tester executes the SQL command in, the default value is configured by the <code>type</code> in <code>run.yaml</code> -r set The success rate that test cases should reach, the default value is configured by the <code>rate</code> in <code>run.yaml</code> -i set the including list, and only script files in the path whose name contains one of the lists will be executed, if more than one, separated by <code>,</code>, if not specified, refers to all cases included -e set the excluding list, and script files in the path whose name contains one of the lists will not be executed, if more than one, separated by <code>,</code>, if not specified, refers to none of the cases excluded -g means SQL commands which is marked with [bvt:issue] flag will not be executed,this flag starts with [-- @bvt:issue#{issueNO.}],and ends with [-- @bvt:issue],eg:-- @bvt:issue#3236select date_add(\"1997-12-31 23:59:59\",INTERVAL \"-10000:1\" HOUR_MINUTE);select date_add(\"1997-12-31 23:59:59\",INTERVAL \"-100 1\" YEAR_MONTH);-- @bvt:issueThose two sql commands are associated with issue#3236, and they will not be executed in bvt test, until the flag is removed when issue#3236 is fixed. -n means the metadata of the resultset will be ignored when comparing the result -c only check whether the case file matches the related result file <p>Examples:</p> <pre><code>./run.sh -p {path_name}/matrixone/test/cases -m run -t script -r 100 -i select,subquery -e substring -g\n</code></pre> <p>If you want to automatically generate SQL results for the new SQL cases, you can just change the <code>method</code> parameter of run.yml file to <code>genrs</code>, or you can just change the command <code>-m run</code> to <code>-m genrs</code>, then running the <code>./run.sh</code> scripts will directly record test results in the same path of the new SQL case file. For more information on example, see Example 4.</p> <p>Note</p> <p>Every time running <code>run.sh</code> will overwrite the report of the  error.txt file, report.txt file, and success.txt file in the  mo-tester repository.</p>"},{"location":"MatrixOne/Test/testing-tool/mo-tester/#4-check-the-report","title":"4. Check the report","text":"<ul> <li> <p>Once the test is finished, mo-tester generates error.txt file, report.txt file and success.txt file reports.</p> </li> <li> <p>An example of report.txt file looks like this:</p> </li> </ul> <pre><code>[SUMMARY] COST : 98s, TOTAL :12702, SUCCESS : 11851, FAILED :13, IGNORED :838, ABNORAML :0, SUCCESS RATE : 99%\n[{path_name}/matrixone/test/cases/auto_increment/auto_increment_columns.sql] COST : 2.159s, TOTAL :185, SUCCESS :163, FAILED :0, IGNORED :22, ABNORAML :0, SUCCESS RATE : 100%\n[{path_name}/matrixone/test/cases/benchmark/tpch/01_DDL/01_create_table.sql] COST : 0.226s, TOTAL :11, SUCCESS :11, FAILED :0, IGNORED :0, ABNORAML :0, SUCCESS RATE : 100%\n[{path_name}/matrixone/test/cases/benchmark/tpch/02_LOAD/02_insert_customer.sql] COST : 0.357s, TOTAL :16, SUCCESS :16, FAILED :0, IGNORED :0, ABNORAML :0, SUCCESS RATE : 100%\n</code></pre> Report Keywords Description TOTAL the total number of executed test cases (SQL) SUCCESS The total number of successfully executed test cases(SQL) FAILED the total number of failed executed test case(SQL) IGNORED the total number of ignored executed test cases (SQL), especially with the <code>--bvt:issue</code> tag test cases (SQL) ABNORAML the total number of abnormal executed test cases (SQL), such as the execution of MatrixOne can't determine the actual result is a system exception or .result file parsing error, etc SUCCESS RATE success rate: SUCCESS/(TOTAL - IGNORED) <ul> <li>An example of error.txt file looks like this:</li> </ul> <pre><code>[ERROR]\n[SCRIPT   FILE]: cases/transaction/atomicity.sql\n[ROW    NUMBER]: 14\n[SQL STATEMENT]: select * from test_11 ;\n[EXPECT RESULT]:\nc   d\n1   1\n2 2\n[ACTUAL RESULT]:\nc   d\n1   1\n</code></pre>"},{"location":"MatrixOne/Test/testing-tool/mo-tester/#5-test-examples","title":"5. Test Examples","text":""},{"location":"MatrixOne/Test/testing-tool/mo-tester/#example-1","title":"Example 1","text":"<p>Example Description: Run all test cases in the /cases path of the matrixone repository.</p> <p>Steps:</p> <ol> <li>Get the latest matrixone code.</li> </ol> <pre><code>cd matrixone\ngit pull https://github.com/matrixorigin/matrixone.git\n</code></pre> <ol> <li>To run all the test cases of the matrixone repository, you need switch into the  mo-tester repository first, see the following commands:</li> </ol> <pre><code>cd mo-tester\n./run.sh -p {path_name}/matrixone/test/cases\n</code></pre> <ol> <li>Check the result reports in the error.txt file, report.txt file, and success.txt file in the mo-tester/report/ path.</li> </ol>"},{"location":"MatrixOne/Test/testing-tool/mo-tester/#example-2","title":"Example 2","text":"<p>Example Description: Run the test cases in the /cases/transaction/ path of the matrixone repository.</p> <p>Steps:</p> <ol> <li>Get the latest matrixone code.</li> </ol> <pre><code>cd matrixone\ngit pull https://github.com/matrixorigin/matrixone.git\n</code></pre> <ol> <li>To run the test cases in the cases/transaction/ path of the matrixone repository, you need switch into the  mo-tester repository first, see the following commands:</li> </ol> <pre><code>cd mo-tester\n./run.sh -p {path_name}/matrixone/test/cases/transaction/\n</code></pre> <ol> <li>Check the result reports in the error.txt file, report.txt file, and success.txt file in the mo-tester/report/ path. The example of the expected report.txt looks like this:</li> </ol> <pre><code>[SUMMARY] COST : 5s, TOTAL :1362, SUCCESS : 1354, FAILED :0, IGNORED :8, ABNORAML :0, SUCCESS RATE : 100%\n[{path_name}/matrixone/test/cases/transaction/atomicity.sql] COST : 0.575s, TOTAL :66, SUCCESS :66, FAILED :0, IGNORED :0, ABNORAML :0, SUCCESS RATE : 100%\n[{path_name}/matrixone/test/cases/transaction/autocommit.test] COST : 0.175s, TOTAL :50, SUCCESS :50, FAILED :0, IGNORED :0, ABNORAML :0, SUCCESS RATE : 100%\n[{path_name}/matrixone/test/cases/transaction/autocommit_1.sql] COST : 1.141s, TOTAL :296, SUCCESS :288, FAILED :0, IGNORED :8, ABNORAML :0, SUCCESS RATE : 100%\n[{path_name}/matrixone/test/cases/transaction/autocommit_atomicity.sql] COST : 0.52s, TOTAL :75, SUCCESS :75, FAILED :0, IGNORED :0, ABNORAML :0, SUCCESS RATE : 100%\n[{path_name}/matrixone/test/cases/transaction/autocommit_isolation.sql] COST : 1.607s, TOTAL :215, SUCCESS :215, FAILED :0, IGNORED :0, ABNORAML :0, SUCCESS RATE : 100%\n[{path_name}/matrixone/test/cases/transaction/autocommit_isolation_1.sql] COST : 1.438s, TOTAL :241, SUCCESS :241, FAILED :0, IGNORED :0, ABNORAML :0, SUCCESS RATE : 100%\n[{path_name}/matrixone/test/cases/transaction/isolation.sql] COST : 1.632s, TOTAL :202, SUCCESS :202, FAILED :0, IGNORED :0, ABNORAML :0, SUCCESS RATE : 100%\n[{path_name}/matrixone/test/cases/transaction/isolation_1.sql] COST : 1.512s, TOTAL :217, SUCCESS :217, FAILED :0, IGNORED :0, ABNORAML :0, SUCCESS RATE : 100%\n</code></pre>"},{"location":"MatrixOne/Test/testing-tool/mo-tester/#example-3","title":"Example 3","text":"<p>Example Description: Run the single test case cases/transaction/atomicity.sql.</p> <p>Steps:</p> <ol> <li>Get the latest matrixone code.</li> </ol> <pre><code>cd matrixone\ngit pull https://github.com/matrixorigin/matrixone.git\n</code></pre> <ol> <li>To run the test cases cases/transaction/atomicity.sql, you need switch into the  mo-tester repository first, see the following commands:</li> </ol> <pre><code>cd mo-tester\n./run.sh -p {path_name}/matrixone/test/cases/transaction/atomicity.sql\n</code></pre> <ol> <li>Check the result reports in the error.txt file, report.txt file, and success.txt file in the mo-tester/report/ path. The example of the expected report.txt looks like this:</li> </ol> <pre><code>[SUMMARY] COST : 0s, TOTAL :66, SUCCESS : 66, FAILED :0, IGNORED :0, ABNORAML :0, SUCCESS RATE : 100%\n[{path_name}/matrixone/test/cases/transaction/atomicity.sql] COST : 0.56s, TOTAL :66, SUCCESS :66, FAILED :0, IGNORED :0, ABNORAML :0, SUCCESS RATE : 100%\n</code></pre>"},{"location":"MatrixOne/Test/testing-tool/mo-tester/#example-4","title":"Example 4","text":"<p>Example Description:</p> <ul> <li>Create a new folder named local_test and place it in {path_name}/matrixone/test/cases</li> <li>Add a test file named new_test.sql to {path_name}/matrixone/test/cases/local_test/</li> <li>Only run the single test case new_test.sql*</li> </ul> <p>Steps</p> <ol> <li>Get the latest matrixone code.</li> </ol> <pre><code>cd matrixone\ngit pull https://github.com/matrixorigin/matrixone.git\n</code></pre> <ol> <li> <p>Generate test results:</p> </li> <li> <p>Method 1: To generate the test result, you need switch into the  mo-tester repository first, then, run the following command.</p> <pre><code>cd mo-tester\n./run.sh -p {path_name}/matrixone/test/cases/local_test/new_test.sql -m genrs -g\n</code></pre> </li> <li> <p>Method 2: Open the run.yml file in the mo-tester repository, change the method parameter from the default <code>run</code> to <code>genrs</code>, and run the following command to generate the test result.</p> <pre><code>cd mo-tester\n./run.sh -p {path_name}/matrixone/test/cases/local_test/new_test.sql\n</code></pre> </li> <li> <p>Check the result file in the test/cases,result/ path of the matrixone repository.</p> </li> <li> <p>Check the result reports in the error.txt file, report.txt file, and success.txt file in the mo-tester/report/ path. The example of the expected report.txt looks like this:</p> </li> </ol> <pre><code>[SUMMARY] COST : 0s, TOTAL :66, SUCCESS : 66, FAILED :0, IGNORED :0, ABNORAML :0, SUCCESS RATE : 100%\n[{path_name}/matrixone/test/cases/transaction/atomicity.sql] COST : 0.56s, TOTAL :66, SUCCESS :66, FAILED :0, IGNORED :0, ABNORAML :0, SUCCESS RATE : 100%\n</code></pre>"},{"location":"MatrixOne/Test/testing-tool/mo-tester/#reference","title":"Reference","text":"<p>For more information on the annotations of MO-Tester, see MO-Tester Annotations.</p>"},{"location":"MatrixOne/Troubleshooting/common-statistics-query/","title":"Common statistic data query","text":"<p>Statistic data is a common query periodically performed during the operation and maintenance of a database. It helps the users intuitively and accurately grasp the current database status and health status.</p> <p>In MatrixOne, statistics include the following:</p> <ul> <li> <p>Metadata: data that describes the database, including database information, table information, and column information.</p> </li> <li> <p>SQL Statistics: indicates whether the SQL is executed successfully, by whom, and at the start and stop time in a specific time range.</p> </li> <li> <p>Role and Permission information: You can query the authorization, permission, inheritance, execution time, and authorization person of all roles in a MatrixOne.</p> </li> </ul>"},{"location":"MatrixOne/Troubleshooting/common-statistics-query/#check-basic-information-on-all-databases","title":"Check basic information on all databases","text":"<p>To view the basic information on all databases of the current account, execute the SQL as below:</p> <pre><code>&gt; select md.datname as database_name,md.created_time as created_time,mu.user_name as creator, mr.role_name as owner_role, count(mt.reldatabase) as total_tables\nfrom mo_catalog.mo_database md,mo_catalog.mo_role mr, mo_catalog.mo_user mu, mo_catalog.mo_tables mt\nwhere md.creator=mu.user_id and md.owner=mr.role_id and mt.reldatabase_id=md.dat_id\ngroup by mt.reldatabase,md.datname,md.created_time,mu.user_name,mr.role_name\norder by md.created_time asc;\n</code></pre>"},{"location":"MatrixOne/Troubleshooting/common-statistics-query/#view-the-information-on-all-auto-increment-columns","title":"View the information on all auto increment columns","text":"<p>To view the information on all the auto increment columns, execute the SQL as below:</p> <pre><code>&gt; select att_database as database_name,att_relname as table_name,attname as column_name\nfrom mo_catalog.mo_columns\nwhere att_is_auto_increment=1\norder by att_database, att_relname asc;\n</code></pre>"},{"location":"MatrixOne/Troubleshooting/common-statistics-query/#view-the-information-on-all-the-views","title":"View the information on all the views","text":"<p>To view the information on all the views, execute the SQL as below:</p> <pre><code>&gt; select mt.relname as view_name, mt.reldatabase as database_name,mu.user_name as created_user,mr.role_name as owner_role,mt.created_time\nfrom mo_catalog.mo_tables mt, mo_catalog.mo_user mu, mo_catalog.mo_role mr\nwhere mt.relkind='v' and mt.creator=mu.user_id and mt.owner=mr.role_id\norder by 1,2 asc;\n</code></pre>"},{"location":"MatrixOne/Troubleshooting/common-statistics-query/#view-the-information-on-all-the-external-tables","title":"View the information on all the external tables","text":"<p>To view the information on all the external tables, execute the SQL as below:</p> <pre><code>&gt; select mt.relname as view_name, mt.reldatabase as database_name,mu.user_name as created_user,mr.role_name as owner_role,mt.created_time\nfrom mo_catalog.mo_tables mt, mo_catalog.mo_user mu, mo_catalog.mo_role mr\nwhere mt.relkind='e' and mt.creator=mu.user_id and mt.owner=mr.role_id\norder by 1,2 asc;\n</code></pre>"},{"location":"MatrixOne/Troubleshooting/common-statistics-query/#view-the-information-on-all-the-primary-keys-of-tables","title":"View the information on all the primary keys of tables","text":"<p>To view the information on all the primary keys of tables, execute the SQL as below:</p> <pre><code>&gt; select att_database as database_name,att_relname as table_name,attname as column_name\nfrom mo_catalog.mo_columns\nwhere att_constraint_type='p' and att_relname not like '%!%'\norder by att_database, att_relname asc;\n</code></pre>"},{"location":"MatrixOne/Troubleshooting/common-statistics-query/#view-the-information-on-all-the-tables-without-primary-keys","title":"View the information on all the tables without primary keys","text":"<p>To view the information on all the tables without primary keys, execute the SQL as below:</p> <pre><code>&gt; select distinct att_database as database_name,att_relname as table_name\nfrom mo_catalog.mo_columns\nminus\nselect att_database as database_name,att_relname as table_name\nfrom mo_catalog.mo_columns\nwhere att_constraint_type='p'\norder by database_name,table_name asc;\n</code></pre>"},{"location":"MatrixOne/Troubleshooting/common-statistics-query/#view-the-sql-statistics-of-the-last-24-hours-not-supported-for-non-sys-account","title":"View the sql statistics of the last 24 hours (not supported for non-sys account)","text":"<pre><code>&gt; select user,host,status,count(status) as count, date_sub(now(), interval 24 hour) as start_time, now() as end_time\nfrom system.statement_info\nwhere status in ('Success','Failed') and user &lt;&gt; 'internal'\nand request_at between date_sub(now(), interval 24 hour) and now()\ngroup by status,user,host\norder by user,status asc;\n</code></pre>"},{"location":"MatrixOne/Troubleshooting/common-statistics-query/#view-the-information-on-all-role-grant-users","title":"View the information on all role grant users","text":"<p>To view the information on all role grant users, execute the SQL as below:</p> <pre><code>&gt; select mu.user_name as user_name,mr.role_name as role_name,mug.with_grant_option\nfrom mo_catalog.mo_user mu, mo_catalog.mo_role mr, mo_catalog.mo_user_grant mug\nwhere mu.user_id=mug.user_id and mr.role_id=mug.role_id\norder by mu.user_name,mr.role_name asc;\n</code></pre>"},{"location":"MatrixOne/Troubleshooting/common-statistics-query/#view-the-promission-of-all-roles","title":"View the promission of all roles","text":"<p>To view the promission of all roles, execute the SQL as below:</p> <pre><code>&gt; select mrp.role_name,mrp.privilege_name,mrp.obj_type,mrp.privilege_level,md.datname as object_name,with_grant_option\nfrom mo_catalog.mo_role_privs mrp, mo_catalog.mo_database md\nwhere mrp.obj_id=md.dat_id and mrp.obj_type='database'\nunion\nselect mrp.role_name,mrp.privilege_name,mrp.obj_type,mrp.privilege_level,'*',with_grant_option\nfrom mo_catalog.mo_role_privs mrp\nwhere obj_id=0\nunion\nselect mrp.role_name,mrp.privilege_name,mrp.obj_type,mrp.privilege_level,mt.relname as object_name,with_grant_option\nfrom mo_catalog.mo_role_privs mrp, mo_catalog.mo_tables mt\nwhere mrp.obj_id=mt.rel_id and mrp.obj_type='table'\norder by 1,2 asc;\n</code></pre>"},{"location":"MatrixOne/Troubleshooting/common-statistics-query/#view-all-role-inheritance-information","title":"View all role inheritance information","text":"<p>To view all role inheritance information, execute the SQL as below:</p> <pre><code>&gt; select mr1.role_name as inheritor_role,mr2.role_name as inheritee_role,mu.user_name as operator_user,mrg.granted_time,mrg.with_grant_option\nfrom mo_catalog.mo_user mu, mo_catalog.mo_role mr1, mo_catalog.mo_role mr2,mo_catalog.mo_role_grant mrg\nwhere mu.user_id=mrg.operation_user_id and mr1.role_id=mrg.grantee_id and mr2.role_id=mrg.granted_id\norder by mr1.role_name,mr2.role_name asc;\n</code></pre>"},{"location":"MatrixOne/Troubleshooting/common-statistics-query/#reference","title":"Reference","text":"<p>MatrixOne system database and tables are where MatrixOne stores system information, so if you want to see more information on the system, refer MatrixOne System Database and Tables.</p>"},{"location":"MatrixOne/Troubleshooting/error-code/","title":"Error Code","text":"<p>In MatrixOne, the error information is classified according to the error code. A specific type of error code will be unified into a specific error code for troubleshooting. All messages sent by the MatrixOne database service are assigned a five-character error code, which contains both the type of error code and the specific category of error code.</p> <p>During actual use, you can first check the error code and use the text error message attached to the error code to determine what kind of error occurred. Error encodings do not change across versions and do not change due to the localization of error messages.</p> <p>Note</p> <p>The SQL standard defines some of the error codes generated by MatrixOne; some additional error codes for conditions not defined by the standard were invented or borrowed from other databases.</p> Error encoding head Type 201 Internal Error 202 Number and function error 203 Invalid Operation 204 Unknown Error or IO Error 205 RPC Timeout 206 Transaction Error or Storage Engine Error <p>For more information on the details of these errors, please refer to the following table:</p> Error code Error number Description Error type 20100 ErrStart internal error code start Internal error 20101 ErrInternal Internal error Internal error 20103 ErrNYI not yet implemented Internal error 20104 ErrOOM out of memory Internal error 20105 ErrQueryInterrupted query interrupted Internal error 20106 ErrNotSupported not supported Internal error 20200 ErrDivByZero division by zero Numbers and functions 20201 ErrOutOfRange data out of range Numbers and functions 20202 ErrDataTruncated data truncated Numbers and functions 20203 ErrInvalidArg invalid argument Numbers and functions 20204 ErrTruncatedWrongValueForField truncated wrong value for column Numbers and functions 20300 ErrBadConfig invalid configuration Invalid operation 20301 ErrInvalidInput invalid input Invalid operation 20302 ErrSyntaxError SQL syntax error Invalid operation 20303 ErrParseError SQL parser error Invalid operation 20304 ErrConstraintViolation constraint violation Invalid operation 20305 ErrDuplicate tae data duplicated Invalid operation 20306 ErrRoleGrantedToSelf cannot grant role Invalid operation 20307 ErrDuplicateEntry duplicate entry for key Invalid operation 20400 ErrInvalidState invalid state Unknown status or I/O error 20401 ErrLogServiceNotReady log service not ready Unknown status or I/O error 20402 ErrBadDB invalid database Unknown status or I/O error 20403 ErrNoSuchTable no such table Unknown status or I/O error 20404 ErrEmptyVector empty vector Unknown status or I/O error 20405 ErrFileNotFound file is not found Unknown status or I/O error 20406 ErrFileAlreadyExists file alread exists Unknown status or I/O error 20407 ErrUnexpectedEOF unexpteded end of file Unknown status or I/O error 20408 ErrEmptyRange empty range of file Unknown status or I/O error 20409 ErrSizeNotMatch file size does not match Unknown status or I/O error 20410 ErrNoProgress file has no io progress Unknown status or I/O error 20411 ErrInvalidPath invalid file path Unknown status or I/O error 20412 ErrShortWrite file io short write Unknown status or I/O error 20413 ErrInvalidWrite file io invalid write Unknown status or I/O error 20414 ErrShortBuffer file io short buffer Unknown status or I/O error 20415 ErrNoDB not connect to a database Unknown status or I/O error 20416 ErrNoWorkingStore no working store Unknown status or I/O error 20417 ErrNoHAKeeper cannot locate ha keeper Unknown status or I/O error 20418 ErrInvalidTruncateLsn invalid truncate lsn, shard already truncated Unknown status or I/O error 20419 ErrNotLeaseHolder not lease holder, current lease holder ID xxx Unknown status or I/O error 20420 ErrDBAlreadyExists database already exists Unknown status or I/O error 20421 ErrTableAlreadyExists table already exists Unknown status or I/O error 20422 ErrNoService service not found Unknown status or I/O error 20423 ErrDupServiceName duplicate service name Unknown status or I/O error 20424 ErrWrongService wrong service, expecting A, got B Unknown status or I/O error 20425 ErrBadS3Config bad s3 config Unknown status or I/O error 20426 ErrBadView invalid view Unknown status or I/O error 20427 ErrInvalidTask invalid task Unknown status or I/O error 20428 ErrInvalidServiceIndex invalid service idx Unknown status or I/O error 20429 ErrDragonboatTimeout Dragonboat timeout Unknown status or I/O error 20430 ErrDragonboatTimeoutTooSmall Dragonboat timeout too small Unknown status or I/O error 20431 ErrDragonboatInvalidDeadline Dragonboat invalid deadline Unknown status or I/O error 20432 ErrDragonboatRejected Dragonboat rejected Unknown status or I/O error 20433 ErrDragonboatInvalidPayloadSize invalid payload size Unknown status or I/O error 20434 ErrDragonboatShardNotReady shard not ready Unknown status or I/O error 20435 ErrDragonboatSystemClosed Dragonboat system closed Unknown status or I/O error 20436 ErrDragonboatInvalidRange Dragonboat invalid range Unknown status or I/O error 20437 ErrDragonboatShardNotFound shard not found Unknown status or I/O error 20438 ErrDragonboatOtherSystemError other system error Unknown status or I/O error 20439 ErrDropNonExistsDB Can't drop database ; database doesn't exist Unknown status or I/O error 20500 ErrRPCTimeout rpc timeout RPC Timeout 20501 ErrClientClosed client closed RPC Timeout 20502 ErrBackendClosed backend closed RPC Timeout 20503 ErrStreamClosed stream closed RPC Timeout 20504 ErrNoAvailableBackend no available backend RPC Timeout 20600 ErrTxnClosed the transaction has been committed or aborted Transaction 20601 ErrTxnWriteConflict transaction write conflict Transaction 20602 ErrMissingTxn missing transaction Transaction 20603 ErrUnresolvedConflict unresolved conflict Transaction 20604 ErrTxnError transaction error Transaction 20605 ErrDNShardNotFound TN shard not found Transaction 20606 ErrShardNotReported TN shard not reported Transaction 20607 ErrTAEError tae error TAE Error 20608 ErrTAERead tae read error TAE Error 20609 ErrRpcError rpc error TAE Error 20610 ErrWaitTxn transaction wait error TAE Error 20611 ErrTxnNotFound transaction not found TAE Error 20612 ErrTxnNotActive transaction not active TAE Error 20613 ErrTAEWrite tae write error TAE Error 20614 ErrTAECommit tae commit error TAE Error 20615 ErrTAERollback tae rollback error TAE Error 20616 ErrTAEPrepare tae prepare error TAE Error 20617 ErrTAEPossibleDuplicate tae possible duplicate TAE Error 20618 ErrTxnRWConflict r-w conflict TAE Error 20619 ErrTxnWWConflict w-w conflict TAE Error 20620 ErrNotFound transaction not found TAE Error 20621 ErrTxnInternal transaction internal error TAE Error 20622 ErrTxnReadConflict transaction read conflict TAE Error 20623 ErrPrimaryKeyDuplicated duplicated primary key TAE Error 20624 ErrAppendableSegmentNotFound appendable segment not found TAE Error 20625 ErrAppendableBlockNotFound appendable block not found TAE Error 20626 ErrTAEDebug TAE debug TAE Error"},{"location":"MatrixOne/Troubleshooting/query-table-statistics/","title":"MatrixOne database statistics","text":"<p>MatrixOne database statistics refer to the related information of tables and columns obtained through sampling and statistics of the database, for example, the number of tables, the number of columns of tables, the storage space occupied by tables, and so on. When MatrixOne database generates an execution plan, it needs to estimate based on statistical information to calculate the optimal execution plan.</p> <p>The statistics dimensions of the MatrixOne database are as follows:</p>"},{"location":"MatrixOne/Troubleshooting/query-table-statistics/#the-number-of-tables-in-the-database","title":"The number of tables in the database","text":"<p>This command shows the total number of tables in the specified database.</p> <p>Syntax:</p> <pre><code>SHOW TABLE_NUMBER FROM {DATABASE_NAME}\n</code></pre>"},{"location":"MatrixOne/Troubleshooting/query-table-statistics/#example","title":"Example","text":"<ul> <li>Example 1: Check the total number of tables in the system database mo_catalog:</li> </ul> <pre><code>mysql&gt; show table_number from mo_catalog;\n+--------------------------------+\n| Number of tables in mo_catalog |\n+--------------------------------+\n|                             11 |\n+--------------------------------+\n\n-- Verify which tables in mo_catalog\nmysql&gt; use mo_catalog;\nmysql&gt; show tables;\n+----------------------------+\n| Tables_in_mo_catalog       |\n+----------------------------+\n| mo_user                    |\n| mo_account                 |\n| mo_role                    |\n| mo_user_grant              |\n| mo_role_grant              |\n| mo_role_privs              |\n| mo_user_defined_function   |\n| mo_columns                 |\n| mo_mysql_compatbility_mode |\n| mo_tables                  |\n| mo_database                |\n+----------------------------+\n11 rows in set (0.01 sec)\n</code></pre> <ul> <li>Example 2: Create a new database, and create new tables, check the number of tables in the specific database:</li> </ul> <pre><code>create database demo_1;\nuse demo_1;\n-- Create three new tables\nCREATE TABLE t1(a bigint, b varchar(10), c varchar(10));\nCREATE TABLE t2(a bigint, b int);\nCREATE TABLE t3(a int, b varchar(10), c varchar(10));\n\n-- Query out that there are three tables in the database demo_1\nmysql&gt; show table_number from demo_1;\n+----------------------------+\n| Number of tables in demo_1 |\n+----------------------------+\n|                          3 |\n+----------------------------+\n1 row in set (0.01 sec)\n</code></pre>"},{"location":"MatrixOne/Troubleshooting/query-table-statistics/#the-number-of-columns-in-the-table","title":"The number of columns in the table","text":"<p>This command shows the total number of columns in the specified table.</p> <p>Syntax:</p> <pre><code>SHOW COLUMN_NUMBER FROM {[DATABASE_NAME.]TABLE_NAME}\n</code></pre>"},{"location":"MatrixOne/Troubleshooting/query-table-statistics/#example_1","title":"Example","text":"<pre><code>use mo_catalog;\nuse mo_user;\nmysql&gt; show column_number from mo_user;\n+------------------------------+\n| Number of columns in mo_user |\n+------------------------------+\n|                           11 |\n+------------------------------+\n\n-- Or use the following command\nmysql&gt; show column_number from mo_catalog.mo_user;\n+------------------------------+\n| Number of columns in mo_user |\n+------------------------------+\n|                           11 |\n+------------------------------+\n\n-- Verify which columns in the table\nmysql&gt; desc mo_catalog.mo_user;\n+-----------------------+--------------+------+------+---------+-------+---------+\n| Field                 | Type         | Null | Key  | Default | Extra | Comment |\n+-----------------------+--------------+------+------+---------+-------+---------+\n| user_id               | INT          | YES  |      | NULL    |       |         |\n| user_host             | VARCHAR(100) | YES  |      | NULL    |       |         |\n| user_name             | VARCHAR(300) | YES  |      | NULL    |       |         |\n| authentication_string | VARCHAR(100) | YES  |      | NULL    |       |         |\n| status                | VARCHAR(8)   | YES  |      | NULL    |       |         |\n| created_time          | TIMESTAMP    | YES  |      | NULL    |       |         |\n| expired_time          | TIMESTAMP    | YES  |      | NULL    |       |         |\n| login_type            | VARCHAR(16)  | YES  |      | NULL    |       |         |\n| creator               | INT          | YES  |      | NULL    |       |         |\n| owner                 | INT          | YES  |      | NULL    |       |         |\n| default_role          | INT          | YES  |      | NULL    |       |         |\n+-----------------------+--------------+------+------+---------+-------+---------+\n11 rows in set (0.01 sec)\n</code></pre>"},{"location":"MatrixOne/Troubleshooting/query-table-statistics/#the-maximum-and-minimum-values-contained-in-all-columns-in-the-table","title":"The maximum and minimum values \u200b\u200bcontained in all columns in the table","text":"<p>This command shows the maximum and minimum values \u200b\u200bof each column in the specified table.</p> <p>Note: If the data types of the column values \u200b\u200bin the specified table are inconsistent, the sorting rules are: numbers are sorted according to the size of numbers; dates are sorted according to time; characters are sorted according to ASCII code; when several data types are mixed, then First convert to character type, and then sort according to ASCII code.</p> <p>Syntax:</p> <pre><code>SHOW TABLE_VALUES FROM {[DATABASE_NAME.]TABLE_NAME}\n</code></pre>"},{"location":"MatrixOne/Troubleshooting/query-table-statistics/#example_2","title":"Example","text":"<pre><code>create table t1(\ncol1 int,\ncol2 float,\ncol3 varchar\n);\ninsert into t1 values(1,1.11,'1.111'),(2,2.22,'1.222'),(3,0,'abc');\n\nmysql&gt; show table_values from t1;\n+-----------+-----------+-----------+-----------+-----------+-----------+\n| max(col1) | min(col1) | max(col2) | min(col2) | max(col3) | min(col3) |\n+-----------+-----------+-----------+-----------+-----------+-----------+\n|         3 |         1 |      2.22 |         0 | abc       | 1.111     |\n+-----------+-----------+-----------+-----------+-----------+-----------+\n</code></pre>"},{"location":"MatrixOne/Troubleshooting/query-table-statistics/#the-total-number-of-rows-of-data-in-the-table","title":"The total number of rows of data in the table","text":"<p>This command shows the total number of rows of data in a table in the database.</p> <p>Syntax:</p> <pre><code>SELECT MO_TABLE_ROWS({DATABASE_NAME},{TABLE_NAME})\n</code></pre>"},{"location":"MatrixOne/Troubleshooting/query-table-statistics/#example_3","title":"Example","text":"<pre><code>-- Query the total number of rows of mo_tables in mo_catalog\nmysql&gt; select mo_table_rows('mo_catalog','mo_tables');\n+--------------------------------------+\n| mo_table_rows(mo_catalog, mo_tables) |\n+--------------------------------------+\n|                                   64 |\n+--------------------------------------+\n</code></pre>"},{"location":"MatrixOne/Troubleshooting/query-table-statistics/#the-space-occupied-by-the-table-in-storage","title":"The space occupied by the table in storage","text":"<p>This command shows the storage space occupied by a specific table in the database can be obtained, and the unit is the number of bytes.</p> <p>Syntax:</p> <pre><code>SELECT MO_TABLE_SIZE({DATABASE_NAME},{TABLE_NAME})\n</code></pre>"},{"location":"MatrixOne/Troubleshooting/query-table-statistics/#example_4","title":"Example","text":"<pre><code>-- Query the storage space occupied by the table mo_tables in the database mo_catalog\nmysql&gt; select mo_table_size('mo_catalog','mo_tables');\n+--------------------------------------+\n| mo_table_size(mo_catalog, mo_tables) |\n+--------------------------------------+\n|                                16128 |\n+--------------------------------------+\n</code></pre>"},{"location":"MatrixOne/Troubleshooting/slow-queries/","title":"Slow Query","text":"<p>Slow query: record the SQL statement that runs slowly in the log. Slow queries are recorded in the slow query log. Through the slow query log, you can find out which query statements have low execution efficiency for optimization.</p> <p>Currently, the slow queries on a MatrixOne are longer than 1000 milliseconds and cannot be directly output to corresponding log files. You need to create a view to filter the query information.</p>"},{"location":"MatrixOne/Troubleshooting/slow-queries/#enable-slow-query","title":"Enable Slow Query","text":"<p>The slow query log is disabled by default. To use the slow query log function, you must first enable the slow query log function.</p> <p>MatrixOne slow query feature is available with the following basic information:</p> <ul> <li><code>statement</code>: indicates the SQL text that provides the complete SQL statement.</li> <li><code>request_at</code>: indicates the start time of the SQL statement.</li> <li><code>duration_second</code>: indicates the actual execution time of the SQL statement.</li> <li><code>exec_plan</code>: indicates the detailed execution plan of the SQL statement.</li> </ul> <p>To enable the slow query, execute the following SQL statements:</p> <pre><code>drop database if exists mo_ts;\ncreate database mo_ts;\nuse mo_ts;\ncreate view slow_query as select statement,request_at,duration/1000000000 as duration_second from system.statement_info where statement like 'select%' and duration/1000000000&gt;1  order by request_at desc;\ncreate view slow_query_with_plan as select statement,request_at,duration/1000000000 as duration_second,exec_plan from system.statement_info where statement like 'select%' and duration/1000000000&gt;1  order by request_at desc;\n</code></pre> <p>For all queries longer than 1 second, execute the following SQL statement to view them:</p> <pre><code>&gt; select * from mo_ts.slow_query;\n&gt; select * from mo_ts.slow_query_with_plan;\n</code></pre> <p>Explanations</p> <ul> <li> <p><code>select * from mo_ts.slow_query;</code>: slow query without plan.</p> </li> <li> <p><code>select * from mo_ts.slow_query_with_plan;</code>: slow query with plan..</p> </li> </ul>"},{"location":"MatrixOne/Troubleshooting/slow-queries/#error-log","title":"Error Log","text":"<p>When slow query is enabled, you can enable error logs, check logs, and locate error information.</p>"},{"location":"MatrixOne/Troubleshooting/slow-queries/#enable-error-log","title":"Enable Error Log","text":"<p>To enable the error log, , execute the following SQL statements:</p> <pre><code>create database mo_ts if not exists mo_ts;\nuse mo_ts;\ncreate view error_message as select timestamp,message from system.log_info where level in ('error','panic','faltal');\ncreate view error_sql as select si.request_at time_stamp,si.statement,si.error as SQL from system.statement_info si where si.user&lt;&gt;'internal' and si.status='Failed' ;\n</code></pre>"},{"location":"MatrixOne/Troubleshooting/slow-queries/#query-the-error-message-of-database","title":"Query the error message of database","text":"<p>To query the error message of database, execute the following SQL statements:</p> <pre><code>&gt; select * from mo_ts.error_message;\n</code></pre> <p>The query result example is as follows:</p> <pre><code>+----------------------------+-------------------------------------------------------------------------+\n| timestamp                  | message                                                                 |\n+----------------------------+-------------------------------------------------------------------------+\n| 2022-11-28 14:47:31.324762 | error: SQL parser error: table \"error_sql\" does not exist               |\n| 2022-11-28 14:47:31.324837 | SQL parser error: table \"error_sql\" does not exist                      |\n| 2022-11-28 14:47:31.324872 | query trace status                                                      |\n| 2022-11-28 14:40:06.579795 | read loop stopped                                                       |\n| 2022-11-28 14:40:06.585220 | gc inactive backends task stopped                                       |\n| 2022-11-28 14:40:06.591082 | error: cannot locate ha keeper                                          |\n| 2022-11-28 14:40:08.442515 | failed to propose initial cluster info                                  |\n| 2022-11-28 14:40:08.442667 | failed to set initial cluster info                                      |\n| 2022-11-28 14:40:09.411286 | error: timeout, converted to code 20429                                 |\n| 2022-11-28 14:40:09.411508 | read loop stopped                                                       |\n| 2022-11-28 14:40:09.416557 | gc inactive backends task stopped                                       |\n| 2022-11-28 14:40:10.052585 | error: internal error: failed to get task service                       |\n| 2022-11-28 14:40:10.052630 | failed to create init tasks                                             |\n| 2022-11-28 14:40:11.053926 | error: internal error: failed to get task service                       |\n| 2022-11-28 14:40:11.054059 | failed to create init tasks                                             |\n| 2022-11-28 14:40:12.054578 | error: internal error: failed to get task service                       |\n| 2022-11-28 14:40:12.054630 | failed to create init tasks                                             |\n| 2022-11-28 14:40:13.055828 | error: internal error: failed to get task service                       |\n| 2022-11-28 14:40:13.055896 | failed to create init tasks                                             |\n| 2022-11-28 14:40:14.057102 | error: internal error: failed to get task service                       |\n| 2022-11-28 14:40:14.057208 | failed to create init tasks                                             |\n| 2022-11-28 14:40:15.058425 | error: internal error: failed to get task service                       |\n| 2022-11-28 14:40:15.058563 | failed to create init tasks                                             |\n| 2022-11-28 14:40:16.059867 | error: internal error: failed to get task service                       |\n| 2022-11-28 14:40:16.060031 | failed to create init tasks                                             |\n| 2022-11-28 14:40:16.443234 | read loop stopped                                                       |\n| 2022-11-28 14:40:16.443162 | read from backend failed                                                |\n| 2022-11-28 14:40:16.448858 | gc inactive backends task stopped                                       |\n| 2022-11-28 14:40:16.457276 | error: file tnservice/dd4dccb4-4d3c-41f8-b482-5251dc7a41bf is not found |\n| 2022-11-28 14:40:17.061260 | error: internal error: failed to get task service                       |\n| 2022-11-28 14:40:17.061323 | failed to create init tasks                                             |\n| 2022-11-28 14:40:18.062165 | error: internal error: failed to get task service                       |\n| 2022-11-28 14:40:18.062249 | failed to create init tasks                                             |\n| 2022-11-28 14:40:18.642097 | error: TN shard uuid , id 2 not reported                                |\n| 2022-11-28 14:40:19.062775 | error: internal error: failed to get task service                       |\n| 2022-11-28 14:40:19.062937 | failed to create init tasks                                             |\n| 2022-11-28 14:40:20.063237 | error: internal error: failed to get task service                       |\n| 2022-11-28 14:40:20.063252 | failed to create init tasks                                             |\n| 2022-11-28 14:40:21.064529 | failed to create init tasks                                             |\n| 2022-11-28 14:40:21.064457 | error: internal error: failed to get task service                       |\n| 2022-11-28 14:40:21.463193 | read loop stopped                                                       |\n| 2022-11-28 14:40:21.468423 | gc inactive backends task stopped                                       |\n| 2022-11-28 14:40:21.474688 | error: file cnservice/dd1dccb4-4d3c-41f8-b482-5251dc7a41bf is not found |\n| 2022-11-28 15:24:56.210577 | error: SQL parser error: table \"error_sql\" does not exist               |\n| 2022-11-28 15:24:56.210773 | SQL parser error: table \"error_sql\" does not exist                      |\n| 2022-11-28 15:24:56.210898 | query trace status                                                      |\n| 2022-11-28 14:40:22.065723 | error: internal error: failed to get task service                       |\n| 2022-11-28 14:40:22.065838 | failed to create init tasks                                             |\n| 2022-11-28 14:40:22.478229 | error: invalid state no cn in the cluster                               |\n| 2022-11-28 14:40:22.478846 | failed to refresh task storage                                          |\n| 2022-11-28 14:40:23.090160 | error: invalid database mo_task                                         |\n| 2022-11-28 14:40:23.090274 | invalid database mo_task                                                |\n| 2022-11-28 14:40:23.090604 | query trace status                                                      |\n| 2022-11-28 15:32:30.354364 | error: SQL parser error: table \"slow_query\" does not exist              |\n| 2022-11-28 15:32:30.354485 | SQL parser error: table \"slow_query\" does not exist                     |\n| 2022-11-28 15:32:30.354605 | query trace status                                                      |\n| 2022-11-28 15:26:59.639892 | error: SQL parser error: table \"error_sql\" does not exist               |\n| 2022-11-28 15:26:59.640039 | SQL parser error: table \"error_sql\" does not exist                      |\n| 2022-11-28 15:26:59.640208 | query trace status                                                      |\n| 2022-11-28 15:37:29.289457 | error: table slow_query already exists                                  |\n| 2022-11-28 15:37:29.289486 | table slow_query already exists                                         |\n| 2022-11-28 15:37:29.289518 | query trace status                                                      |\n| 2022-11-28 15:37:45.773829 | error: table slow_query_with_plan already exists                        |\n| 2022-11-28 15:37:45.773856 | table slow_query_with_plan already exists                               |\n| 2022-11-28 15:37:45.773888 | query trace status                                                      |\n| 2022-11-28 14:45:48.821324 | error: not supported: function or operator 'interval'                   |\n| 2022-11-28 14:45:48.823261 | error: not supported: function or operator 'interval'                   |\n| 2022-11-28 14:45:48.823426 | error: not supported: function or operator 'interval'                   |\n| 2022-11-28 14:45:48.823525 | error: not supported: function or operator 'interval'                   |\n| 2022-11-28 14:47:14.513831 | error: SQL parser error: table \"statement_info\" does not exist          |\n| 2022-11-28 14:47:14.513929 | SQL parser error: table \"statement_info\" does not exist                 |\n| 2022-11-28 14:47:14.513962 | query trace status                                                      |\n+----------------------------+-------------------------------------------------------------------------+\n72 rows in set (0.13 sec)\n</code></pre>"},{"location":"MatrixOne/Troubleshooting/slow-queries/#query-the-error-of-sql","title":"Query the error of SQL","text":"<p>To query the error of SQL, execute the following SQL statements:</p> <pre><code>&gt; select * from mo_ts.error_sql;\n</code></pre> <p>The query result example is as follows:</p> <pre><code>+----------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+---------------------------------------------------------+\n| time_stamp                 | statement                                                                                                                                                                                                                              | sql                                                     |\n+----------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+---------------------------------------------------------+\n| 2022-11-28 14:40:23.073188 | use mo_task                                                                                                                                                                                                                            | invalid database mo_task                                |\n| 2022-11-28 15:26:59.637130 | select * from mo_ts.error_sql                                                                                                                                                                                                          | SQL parser error: table \"error_sql\" does not exist      |\n| 2022-11-28 15:37:29.283683 | create view slow_query as select statement, request_at, duration / 1000000000 as duration_second from system.statement_info where statement like \"select%\" and duration / 1000000000 &gt; 1 order by request_at desc                      | table slow_query already exists                         |\n| 2022-11-28 15:37:45.765394 | create view slow_query_with_plan as select statement, request_at, duration / 1000000000 as duration_second, exec_plan from system.statement_info where statement like \"select%\" and duration / 1000000000 &gt; 1 order by request_at desc | table slow_query_with_plan already exists               |\n| 2022-11-28 15:32:30.351695 | select * from mo_ts.slow_query                                                                                                                                                                                                         | SQL parser error: table \"slow_query\" does not exist     |\n| 2022-11-28 14:47:14.510060 | create view error_sql as select si.request_at as time_stamp, si.statement as sql, el.err_code from statement_info as si cross join error_info as el where si.statement_id = el.statement_id and user != \"internal\"                     | SQL parser error: table \"statement_info\" does not exist |\n| 2022-11-28 14:47:31.323884 | select * from mo_ts.error_sql                                                                                                                                                                                                          | SQL parser error: table \"error_sql\" does not exist      |\n| 2022-11-28 15:24:56.208171 | select * from mo_ts.error_sql                                                                                                                                                                                                          | SQL parser error: table \"error_sql\" does not exist      |\n+----------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+---------------------------------------------------------+\n8 rows in set (0.14 sec)\n</code></pre>"},{"location":"MatrixOne/Tutorial/c-net-crud-demo/","title":"C# Base Example","text":"<p>This document will guide you through how to build a simple application using C# and implement CRUD (Create, Read, Update, Delete) functionality.</p>"},{"location":"MatrixOne/Tutorial/c-net-crud-demo/#prepare-before-you-start","title":"Prepare before you start","text":"<ul> <li> <p>Finished installing and starting MatrixOne</p> </li> <li> <p>Installed .NET Core SDK</p> </li> <li> <p>MySQL Client installed</p> </li> </ul>"},{"location":"MatrixOne/Tutorial/c-net-crud-demo/#steps","title":"Steps","text":""},{"location":"MatrixOne/Tutorial/c-net-crud-demo/#step-one-create-a-c-app","title":"Step one: Create a C# app","text":"<p>Create an app using the dotnet command. For example, create a new app called myapp:</p> <pre><code>dotnet new console -o myapp \n</code></pre> <p>Then switch to the myapp directory</p>"},{"location":"MatrixOne/Tutorial/c-net-crud-demo/#step-two-add-the-mysql-connectornet-nuget-package","title":"Step Two: Add the MySQL Connector/NET NuGet Package","text":"<p>Install the MySql.Data package using the NuGet package manager:</p> <pre><code>dotnet add package MySql.Data \n</code></pre>"},{"location":"MatrixOne/Tutorial/c-net-crud-demo/#step-three-connect-matrixone-for-action","title":"Step Three: Connect Matrixone for Action","text":"<p>Write code to connect to Matrixone, build a student table, and add, delete, and change lookups. Write the following code in the Program.cs file:</p> <pre><code>using System; \nusing MySql.Data.MySqlClient;\n\nclass Program {\n\n    static void ExecuteSQL(MySqlConnection connection, string query)\n    {\n        using (MySqlCommand command = new MySqlCommand(query, connection))\n        {\n            command.ExecuteNonQuery();\n        }\n    }\n    static void Main(string[] args)\n    {\n        Program n =new Program();\n        string connectionString = \"server=127.0.0.1;user=root;database=test;port=6001;password=111\";\n        using (MySqlConnection connection = new MySqlConnection(connectionString))\n        {\n            try{\n            connection.Open();\n            Console.WriteLine (\"Connection already established\");\n            // build table\n            ExecuteSQL(connection,\"CREATE TABLE IF NOT EXISTS Student (id INT auto_increment PRIMARY KEY, name VARCHAR(255),age int,remark VARCHAR(255) )\");\n            Console.WriteLine(\"Build table succeeded!\");\n            // Insert data\n            ExecuteSQL (connection, \"INSERT INTO Student (name,age) VALUES ('Zhang San',22), ('Li Si',25), ('Zhao Wu',30)\");\n            Console.WriteLine (\"Data inserted successfully!\");\n            // Update data\n            ExecuteSQL(connection,\"UPDATE Student SET remark = 'Updated' WHERE id = 1\");\n            Console.WriteLine(\"Update data successfully!\");\n            // Delete data\n            ExecuteSQL(connection,\"DELETE FROM Student WHERE id = 2\");\n            Console.WriteLine(\"Data deleted successfully!\");\n            //query data\n            MySqlCommand command = new MySqlCommand(\"SELECT * FROM Student\", connection);\n            using (MySqlDataReader reader = command.ExecuteReader())\n            {\n                while (reader.Read())\n                {\n                    Console.WriteLine ($\"Name: {reader[\"name\"]}, age: {reader[\"age\"]}, notes: {reader[\"remark\"]}\");\n                }\n            }\n            Console.WriteLine(\"Data query succeeded!\");\n            }\n            catch (MySqlException ex)\n            {\n                Console.WriteLine(ex.Message);\n\n            }\n            finally\n            {\n                Console.WriteLine (\"Ready to Disconnect\");\n                connection.Close();\n                Console.WriteLine(\"Disconnect succeeded!\");\n            }\n\n            //connection.Close();\n        }\n    }\n} \n</code></pre>"},{"location":"MatrixOne/Tutorial/c-net-crud-demo/#step-four-run-the-program","title":"Step Four: Run the Program","text":"<p>Execute the command <code>dotnet run</code> at the terminal:</p> <pre><code>(base) admin@admindeMacBook-Pro myapp %dotnet run \nA connection has been established. \nSuccessfully inserted the data! \nSuccessfully updated the data! \nSuccessfully deleted the data! \nName: Zhao Wu, age: 30, Remarks: \nName: Zhang San, age: 22, Remarks: Updated \nData query succeeded! \nReady to disconnect\nDisconnect succeeded! \n</code></pre>"},{"location":"MatrixOne/Tutorial/c-net-crud-demo/#step-five-check-the-data","title":"Step five: Check the data","text":"<p>Use the Mysql client connection Matrixone to query the Student table:</p> <pre><code>mysql&gt; select * from student;\n+------+-----------+------+---------+\n| id   | name      | age  | remark  |\n+------+-----------+------+---------+\n|    3 | Zhao Wu   |   30 | NULL    |\n|    1 | Zhang San |   22 | Updated |\n+------+--------+------+------------+\n2 rows in set (0.00 sec)\n</code></pre> <p>As you can see, the data is returned correctly.</p>"},{"location":"MatrixOne/Tutorial/develop-golang-crud-demo/","title":"Golang CRUD demo","text":""},{"location":"MatrixOne/Tutorial/develop-golang-crud-demo/#setup-your-environment","title":"Setup your environment","text":"<ol> <li>Make sure you have already installed and launched MatrixOne.</li> <li> <p>Make sure you have already installed Golang 1.18 and plus.  </p> <pre><code>#To check with Golang installation and its version\ngo version\n</code></pre> </li> <li> <p>Make sure you have already installed MySQL client.</p> </li> <li>Download and install <code>Go-MySQL-Driver</code> tool.</li> </ol>"},{"location":"MatrixOne/Tutorial/develop-golang-crud-demo/#develop-your-code","title":"Develop your code","text":"<ol> <li> <p>Connect to MatrixOne by MySQL client. Create a new database named test.</p> <pre><code>mysql&gt; create database test;\n</code></pre> </li> <li> <p>Create a plain text file <code>golang_crud_matrixone.go</code> and put the code below.</p> <pre><code>package main\n\nimport (\n    \"database/sql\"\n    \"fmt\"\n    \"log\"\n    _ \"github.com/go-sql-driver/mysql\"\n)\n\nfunc main() {\n    //Open a new connection to MatrixOne\n    db, err := sql.Open(\"mysql\", \"root:111@tcp(127.0.0.1:6001)/test\")\n    checkErr(err)\n\n    //Create a table\n    _, err2 := db.Exec(\"CREATE TABLE `userinfo` (`uid` INT(10) NOT NULL AUTO_INCREMENT,`username` VARCHAR(64) NULL DEFAULT NULL,`department` VARCHAR(64) NULL DEFAULT NULL,`created` DATETIME NULL DEFAULT NULL, PRIMARY KEY (`uid`));\")\n    if err2 != nil {\n        log.Fatal(err2)\n    }\n    fmt.Print(\"Successfully Created\\n\")\n\n    // Insert a record\n    stmt, err := db.Prepare(\"INSERT userinfo SET username=?,department=?,created=?\")\n    checkErr(err)\n\n    res, err := stmt.Exec(\"Alex\", \"r&amp;d\", \"2023-01-01\" 12:00:00\")\n    checkErr(err)\n\n    id, err := res.LastInsertId()\n    checkErr(err)\n\n    fmt.Println(id)\n    //Update a record\n    stmt, err = db.Prepare(\"update userinfo set username=? where uid=?\")\n    checkErr(err)\n\n    res, err = stmt.Exec(\"Mark\", id)\n    checkErr(err)\n\n    affect, err := res.RowsAffected()\n    checkErr(err)\n\n    fmt.Println(affect)\n\n    // Query all records\n    rows, err := db.Query(\"SELECT * FROM userinfo\")\n    checkErr(err)\n\n    for rows.Next() {\n        var uid int\n        var username string\n        var department string\n        var created string\n        err = rows.Scan(&amp;uid, &amp;username, &amp;department, &amp;created)\n        checkErr(err)\n        fmt.Println(uid)\n        fmt.Println(username)\n        fmt.Println(department)\n        fmt.Println(created)\n    }\n\n    // Delete a record\n    stmt, err = db.Prepare(\"delete from userinfo where uid=?\")\n    checkErr(err)\n\n    res, err = stmt.Exec(id)\n    checkErr(err)\n\n    affect, err = res.RowsAffected()\n    checkErr(err)\n\n    fmt.Println(affect)\n\n    db.Close()\n\n}\n\nfunc checkErr(err error) {\n    if err != nil {\n        panic(err)\n    }\n}\n</code></pre> </li> <li> <p>Execute this Golang file in the command line terminal.</p> <pre><code>&gt; go run golang_crud_matrixone.go\nSuccessfully Created\n1\n1\n1\nMark\nr&amp;d\n2023-01-01\n1\n</code></pre> </li> </ol>"},{"location":"MatrixOne/Tutorial/develop-java-crud-demo/","title":"Java CRUD demo","text":"<p>Note</p> <p>The source code of this demo can be downloaded at Java CRUD Example.  </p>"},{"location":"MatrixOne/Tutorial/develop-java-crud-demo/#setup-your-environment","title":"Setup your environment","text":"<p>Before you start, make sure you have downloaded and installed the following software.</p> <ul> <li>Install and deployed standalone MatrixOne. Create a database by MySQL client.</li> </ul> <pre><code>mysql&gt; create database test;\n</code></pre> <ul> <li>lntelliJ IDEA(2022.2.1 or later version).</li> <li>JDK 8+ version: Choose the version according to your OS.</li> <li>MySQL JDBC connector 8.0+ version: It's recommanded to download the platform independent version, and unzip the downloaded file.</li> </ul> <p></p> <p>Note</p> <p>We take IDEA as an IDE example to demonstrate the process, you are free to choose Eclipse or other IDE tools for the same purpose.</p>"},{"location":"MatrixOne/Tutorial/develop-java-crud-demo/#initialize-a-new-java-project","title":"Initialize a new Java project","text":"<p>Launch IDEA, and create a new Java project as below:</p> <p></p> <p>In your Project Setting &gt; Libraries, import the mysql-connector-java-8.0.30.jar file.</p> <p></p>"},{"location":"MatrixOne/Tutorial/develop-java-crud-demo/#write-java-code-to-connect-with-matrixone","title":"Write Java code to connect with MatrixOne","text":"<p>Firstly we create a Java class named as <code>JDBCUtils</code> as a connection utility. This class will serve as a tool to connect with MatrixOne and execute SQL queries.</p> <p>Under the src directory, create a file named <code>JDBCUtils.java</code>, and edit this file with the following code.</p> <pre><code>import java.sql.Connection;\nimport java.sql.DriverManager;\nimport java.sql.SQLException;\n\npublic class JDBCUtils {\n    private static String jdbcURL = \"jdbc:mysql://127.0.0.1:6001/test\";\n    private static String jdbcUsername = \"root\";\n    private static String jdbcPassword = \"111\";\n\n    public static Connection getConnection() {\n        Connection connection = null;\n        try {\n            connection = DriverManager.getConnection(jdbcURL, jdbcUsername, jdbcPassword);\n        } catch (SQLException e) {\n            // TODO Auto-generated catch block\n            e.printStackTrace();\n        }\n        return connection;\n    }\n\n    public static void printSQLException(SQLException ex) {\n        for (Throwable e : ex) {\n            if (e instanceof SQLException) {\n                e.printStackTrace(System.err);\n                System.err.println(\"SQLState: \" + ((SQLException) e).getSQLState());\n                System.err.println(\"Error Code: \" + ((SQLException) e).getErrorCode());\n                System.err.println(\"Message: \" + e.getMessage());\n                Throwable t = ex.getCause();\n                while (t != null) {\n                    System.out.println(\"Cause: \" + t);\n                    t = t.getCause();\n                }\n            }\n        }\n    }\n}\n</code></pre> <p>Secondly we write example code for Create/Insert/Update/Delete operations with MatrixOne.</p> <p>We need to create corresponding java source code files as <code>Create.java</code>, <code>Insert.java</code>, <code>Select.java</code>, <code>Update.java</code> under the src directory, and put the code below in these files.</p>"},{"location":"MatrixOne/Tutorial/develop-java-crud-demo/#create","title":"Create","text":"<pre><code>import java.sql.Connection;\nimport java.sql.SQLException;\nimport java.sql.Statement;\n\npublic class Create {\n    private static final String createTableSQL = \"create table student (\\r\\n\" + \"  id int primary key,\\r\\n\" +\n            \"  name varchar(20),\\r\\n\" + \"  email varchar(20),\\r\\n\" + \"  country varchar(20),\\r\\n\" +\n            \"  age int\\r\\n\" + \"  );\";\n\n    public static void main(String[] argv) throws SQLException {\n        Create createTable = new Create();\n        createTable.createTable();\n    }\n\n    public void createTable() throws SQLException {\n\n        System.out.println(createTableSQL);\n        // Step 1: Establishing a Connection\n        try (Connection connection = JDBCUtils.getConnection();\n             // Step 2:Create a statement using connection object\n             Statement statement = connection.createStatement();) {\n\n            // Step 3: Execute the query or update query\n            statement.execute(createTableSQL);\n        } catch (SQLException e) {\n\n            // print SQL exception information\n            JDBCUtils.printSQLException(e);\n        }\n\n        // Step 4: try-with-resource statement will auto close the connection.\n    }\n}\n</code></pre> <p>Executing this code will create a table in the <code>test</code> database, then we verify in mysql client to check if the table is created.</p> <pre><code>mysql&gt; show create table student;\n+---------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+\n| Table   | Create Table                                                                                                                                                                                        |\n+---------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+\n| student | CREATE TABLE `student` (\n`id` INT DEFAULT NULL,\n`name` VARCHAR(20) DEFAULT NULL,\n`email` VARCHAR(20) DEFAULT NULL,\n`country` VARCHAR(20) DEFAULT NULL,\n`age` INT DEFAULT NULL,\nPRIMARY KEY (`id`)\n) |\n+---------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+\n1 row in set (0.01 sec)\n</code></pre>"},{"location":"MatrixOne/Tutorial/develop-java-crud-demo/#insert","title":"Insert","text":"<pre><code>import java.sql.Connection;\nimport java.sql.PreparedStatement;\nimport java.sql.SQLException;\n\npublic class Insert {\n    private static final String INSERT_STUDENT_SQL = \"INSERT INTO student\" +\n            \"  (id, name, email, country, age) VALUES \" +\n            \" (?, ?, ?, ?, ?);\";\n\n    public static void main(String[] argv) throws SQLException {\n        Insert insertTable = new Insert();\n        insertTable.insertRecord();\n    }\n\n    public void insertRecord() throws SQLException {\n        System.out.println(INSERT_STUDENT_SQL);\n        // Step 1: Establishing a Connection\n        try (Connection connection = JDBCUtils.getConnection();\n             // Step 2:Create a statement using connection object\n             PreparedStatement preparedStatement = connection.prepareStatement(INSERT_STUDENT_SQL)) {\n            preparedStatement.setInt(1, 1);\n            preparedStatement.setString(2, \"Tony\");\n            preparedStatement.setString(3, \"tony@gmail.com\");\n            preparedStatement.setString(4, \"US\");\n            preparedStatement.setString(5, \"20\");\n\n            System.out.println(preparedStatement);\n            // Step 3: Execute the query or update query\n            preparedStatement.executeUpdate();\n        } catch (SQLException e) {\n\n            // print SQL exception information\n            JDBCUtils.printSQLException(e);\n        }\n\n        // Step 4: try-with-resource statement will auto close the connection.\n    }\n\n}\n</code></pre> <p>Execution result:</p> <pre><code>mysql&gt; select * from student;\n+------+------+----------------+---------+------+\n| id   | name | email          | country | age  |\n+------+------+----------------+---------+------+\n|    1 | Tony | tony@gmail.com | US      |   20 |\n+------+------+----------------+---------+------+\n1 row in set (0.01 sec)\n</code></pre>"},{"location":"MatrixOne/Tutorial/develop-java-crud-demo/#update","title":"Update","text":"<pre><code>import java.sql.Connection;\nimport java.sql.PreparedStatement;\nimport java.sql.SQLException;\n\npublic class Update {\n    private static final String UPDATE_STUDENT_SQL = \"update student set name = ? where id = ?;\";\n\n    public static void main(String[] argv) throws SQLException {\n        Update updateTable = new Update();\n        updateTable.updateRecord();\n    }\n\n    public void updateRecord() throws SQLException {\n        System.out.println(UPDATE_STUDENT_SQL);\n        // Step 1: Establishing a Connection\n        try (Connection connection = JDBCUtils.getConnection();\n             // Step 2:Create a statement using connection object\n             PreparedStatement preparedStatement = connection.prepareStatement(UPDATE_STUDENT_SQL)) {\n            preparedStatement.setString(1, \"Ram\");\n            preparedStatement.setInt(2, 1);\n\n            // Step 3: Execute the query or update query\n            preparedStatement.executeUpdate();\n        } catch (SQLException e) {\n\n            // print SQL exception information\n            JDBCUtils.printSQLException(e);\n        }\n\n        // Step 4: try-with-resource statement will auto close the connection.\n    }\n}\n</code></pre> <p>Execution result:</p> <pre><code>mysql&gt; select * from student;\n+------+------+----------------+---------+------+\n| id   | name | email          | country | age  |\n+------+------+----------------+---------+------+\n|    1 | Ram  | tony@gmail.com | US      |   20 |\n+------+------+----------------+---------+------+\n1 row in set (0.00 sec)\n</code></pre>"},{"location":"MatrixOne/Tutorial/develop-java-crud-demo/#select","title":"SELECT","text":"<pre><code>import java.sql.Connection;\nimport java.sql.PreparedStatement;\nimport java.sql.ResultSet;\nimport java.sql.SQLException;\n\npublic class Select {\n    private static final String QUERY = \"select id,name,email,country,age from student where id =?\";\n\n    public static void main(String[] args) {\n\n        // using try-with-resources to avoid closing resources (boiler plate code)\n\n        // Step 1: Establishing a Connection\n        try (Connection connection = JDBCUtils.getConnection();\n\n             // Step 2:Create a statement using connection object\n             PreparedStatement preparedStatement = connection.prepareStatement(QUERY);) {\n            preparedStatement.setInt(1, 1);\n            System.out.println(preparedStatement);\n            // Step 3: Execute the query or update query\n            ResultSet rs = preparedStatement.executeQuery();\n\n            // Step 4: Process the ResultSet object.\n            while (rs.next()) {\n                int id = rs.getInt(\"id\");\n                String name = rs.getString(\"name\");\n                String email = rs.getString(\"email\");\n                String country = rs.getString(\"country\");\n                String password = rs.getString(\"age\");\n                System.out.println(id + \",\" + name + \",\" + email + \",\" + country + \",\" + password);\n            }\n        } catch (SQLException e) {\n            JDBCUtils.printSQLException(e);\n        }\n        // Step 4: try-with-resource statement will auto close the connection.\n    }\n}\n</code></pre> <p>Execution result:</p> <p></p>"},{"location":"MatrixOne/Tutorial/develop-python-crud-demo/","title":"Python CRUD demo","text":""},{"location":"MatrixOne/Tutorial/develop-python-crud-demo/#before-you-start","title":"Before you start","text":""},{"location":"MatrixOne/Tutorial/develop-python-crud-demo/#setup-your-environment","title":"Setup your environment","text":"<p>Before you start, make sure you have downloaded and installed the following software.</p> <ol> <li>Make sure you have already installed and launched MatrixOne.</li> <li> <p>Make sure you have already installed Python 3.8(or plus) version.  </p> <pre><code>#To check with Python installation and its version\npython3 -V\n</code></pre> </li> <li> <p>Make sure you have already installed MySQL.</p> </li> <li> <p>Download and install pymysql and cryptography tool.</p> <pre><code>pip3 install pymysql\npip3 install cryptography\n\n#If you are in China mainland and have a low downloading speed, you can speed up the download by following commands.\npip3 install pymysql -i https://pypi.tuna.tsinghua.edu.cn/simple\npip3 install cryptography -i https://pypi.tuna.tsinghua.edu.cn/simple\n</code></pre> </li> </ol> <p>As we have explained how to connect to MatrixOne by pymysql in the other tutorial, we will focus on the CRUD(Create, Read, Update, Delete) implementations in this tutorial.</p>"},{"location":"MatrixOne/Tutorial/develop-python-crud-demo/#create-table","title":"Create Table","text":"<p>Firstly we create a text file named <code>create.py</code>, and put the following code:</p> <pre><code>#!/usr/bin/python3\n\nimport pymysql.cursors\n\nSQL_CONNECTION = pymysql.connect(\n        host='127.0.0.1',\n    port=6001,\n        user='root',\n        password = \"111\",\n        db='test',\n        cursorclass=pymysql.cursors.DictCursor,\n        autocommit=True\n        )\n\nSQL = \"CREATE TABLE cars (id INT NOT NULL AUTO_INCREMENT, car_model VARCHAR(45) NULL,car_brand VARCHAR(45) NULL,PRIMARY KEY (`id`))\"\n\nwith SQL_CONNECTION.cursor() as cursor:\n    try:\n        sql_exec = cursor.execute(SQL)\n        print(\"Table created\")\n    except (pymysql.Error, pymysql.Warning) as e:\n        print(f'error! {e}')\n\n    finally:\n        SQL_CONNECTION.close()\n</code></pre> <p>Execute this python file by a terminal with the command line below. This will create a table <code>cars</code> in MatrixOne inside database <code>test</code>.</p> <pre><code>&gt; python3 create.py\nTable created\n</code></pre> <p>We can verify the table creation with MySQL client.</p> <pre><code>mysql&gt; show tables;\n+----------------+\n| tables_in_test |\n+----------------+\n| cars           |\n+----------------+\n1 row in set (0.03 sec)\nmysql&gt; show create table cars;\n+-------+----------------------------------------------------------------------------------------------------------------------------------------------------------+\n| Table | Create Table                                                                                                                                             |\n+-------+----------------------------------------------------------------------------------------------------------------------------------------------------------+\n| cars  | CREATE TABLE `cars` (\n`id` INT NOT NULL AUTO_INCREMENT,\n`car_model` VARCHAR(45) DEFAULT NULL,\n`car_brand` VARCHAR(45) DEFAULT NULL,\nPRIMARY KEY (`id`)\n) |\n+-------+----------------------------------------------------------------------------------------------------------------------------------------------------------+\n1 row in set (0.03 sec)\n</code></pre>"},{"location":"MatrixOne/Tutorial/develop-python-crud-demo/#insert","title":"Insert","text":"<p>Secondly we create a text file named <code>insert.py</code>, and put the following code:</p> <pre><code>#!/usr/bin/python3\n\nimport pymysql.cursors\n\nSQL_CONNECTION = pymysql.connect(\n        host='127.0.0.1',\n        port=6001,\n        user='root',\n        password = \"111\",\n        db='test',\n        cursorclass=pymysql.cursors.DictCursor,\n        autocommit=True\n        )\n\nSQL = \"INSERT INTO cars(car_model, car_brand) VALUES ('accord', 'honda')\"\n\nwith SQL_CONNECTION.cursor() as cursor:\n    try:\n        sql_exec = cursor.execute(SQL)\n        if sql_exec:\n            print(sql_exec)\n            print(\"Record Added\")\n        else:\n            print(sql_exec)\n            print(\"Not Added\")\n    except (pymysql.Error, pymysql.Warning) as e:\n        print(f'error! {e}')\n\n    finally:\n        SQL_CONNECTION.close()\n</code></pre> <p>Executing the following code will insert a record in the <code>cars</code> table, then we verify in mysql client to check if the record is inserted.</p> <pre><code>&gt; python3 insert.py\n1\nRecord Added\n</code></pre> <pre><code>mysql&gt; select * from cars;\n+------+-----------+-----------+\n| id   | car_model | car_brand |\n+------+-----------+-----------+\n|    1 | accord    | honda     |\n+------+-----------+-----------+\n1 row in set (0.03 sec)\n</code></pre>"},{"location":"MatrixOne/Tutorial/develop-python-crud-demo/#select","title":"Select","text":"<p>Thirdly we create a text file named <code>read.py</code>, and put the following code:</p> <pre><code>#!/usr/bin/python3\n\nimport pymysql.cursors\n\nSQL_CONNECTION = pymysql.connect(\n        host='127.0.0.1',\n        port=6001,\n        user='root',\n        password = \"111\",\n        db='test',\n        cursorclass=pymysql.cursors.DictCursor,\n        autocommit=True\n        )\n\nSQL = \"SELECT * FROM cars\"\n\nwith SQL_CONNECTION.cursor() as cursor:\n    try:\n        sql_exec = cursor.execute(SQL)\n        if sql_exec:\n            print(sql_exec)\n            print(cursor.fetchall())\n        else:\n            print(sql_exec)\n            print(\"No Record\")\n    except (pymysql.Error, pymysql.Warning) as e:\n        print(f'error! {e}')\n\n    finally:\n        SQL_CONNECTION.close()\n</code></pre> <p>Executing this code will select and return all records in the <code>cars</code> table.</p> <pre><code>&gt; python3 read.py\n1\n[{'id': 1, 'car_model': 'accord', 'car_brand': 'honda'}]\n</code></pre>"},{"location":"MatrixOne/Tutorial/develop-python-crud-demo/#update","title":"Update","text":"<p>Fourthly we create a text file named <code>update.py</code>, and put the following code:</p> <pre><code>#!/usr/bin/python3\n\nimport pymysql.cursors\n\nSQL_CONNECTION = pymysql.connect(\n        host='127.0.0.1',\n        port=6001,\n        user='root',\n        password = \"111\",\n        db='test',\n        cursorclass=pymysql.cursors.DictCursor,\n        autocommit=True\n        )\n\nSQL = \"UPDATE cars SET car_model = 'explorer', car_brand = 'ford' WHERE id = '1'\"\n\nwith SQL_CONNECTION.cursor() as cursor:\n    try:\n        sql_exec = cursor.execute(SQL)\n        if sql_exec:\n            print(sql_exec)\n            print(\"Record Updated\")\n        else:\n            print(sql_exec)\n            print(\"Not Updated\")\n    except (pymysql.Error, pymysql.Warning) as e:\n        print(f'error! {e}')\n\n    finally:\n        SQL_CONNECTION.close()\n</code></pre> <p>Executing this code will update the record with id <code>1</code>, then we verify in mysql client to check if the record is updated.</p> <pre><code>&gt; python3 update.py\n1\nRecord Updated\n</code></pre> <pre><code>mysql&gt; select * from cars;\n+------+-----------+-----------+\n| id   | car_model | car_brand |\n+------+-----------+-----------+\n|    1 | explorer  | ford      |\n+------+-----------+-----------+\n1 row in set (0.02 sec)\n</code></pre>"},{"location":"MatrixOne/Tutorial/develop-python-crud-demo/#delete","title":"Delete","text":"<p>Finally we create a text file named <code>delete.py</code>, and put the following code:</p> <pre><code>#!/usr/bin/python3\n\nimport pymysql.cursors\n\nSQL_CONNECTION = pymysql.connect(\n        host='127.0.0.1',\n        port=6001,\n        user='root',\n        password = \"111\",\n        db='test',\n        cursorclass=pymysql.cursors.DictCursor,\n        autocommit=True\n        )\n\nSQL = \"DELETE FROM cars WHERE id = '1'\"\n\nwith SQL_CONNECTION.cursor() as cursor:\n    try:\n        sql_exec = cursor.execute(SQL)\n        if sql_exec:\n            print(sql_exec)\n            print(\"Record Deleted\")\n        else:\n            print(sql_exec)\n            print(\"Not Deleted\")\n    except (pymysql.Error, pymysql.Warning) as e:\n        print(f'error! {e}')\n\n    finally:\n        SQL_CONNECTION.close()\n</code></pre> <p>Executing this code will delete the record with id <code>1</code>, then we verify in mysql client to check if the record is updated.</p> <pre><code>&gt; python3 delete.py\n1\nRecord Deleted\n</code></pre> <pre><code>mysql&gt; select * from cars;\nEmpty set (0.03 sec)\n</code></pre>"},{"location":"MatrixOne/Tutorial/django-python-crud-demo/","title":"Django Foundation Example","text":"<p>This document will guide you through how to build a simple application using Django and implement CRUD (Create, Read, Update, Delete) functionality.</p> <p>Django is an open source web application framework written in Python.</p>"},{"location":"MatrixOne/Tutorial/django-python-crud-demo/#prepare-before-you-start","title":"Prepare before you start","text":"<p>A simple introduction to related software:</p> <ul> <li>Django is an advanced Python web framework for rapid development of maintainable and scalable web applications. With Django, with very little code, Python's program developers can easily do most of what a full-fledged website needs and further develop full-featured web services.</li> </ul>"},{"location":"MatrixOne/Tutorial/django-python-crud-demo/#software-installation","title":"Software Installation","text":"<p>Before you begin, confirm that you have downloaded and installed the following software:</p> <ul> <li> <p>Verify that you have completed the standalone deployment of MatrixOne.</p> </li> <li> <p>Verify that you have finished installing Python 3.8 (or plus). Verify that the installation was successful by checking the Python version with the following code:</p> <pre><code>python3 -V \n</code></pre> </li> <li> <p>Verify that you have completed installing the MySQL client.</p> </li> <li> <p>Verify that you have finished installing Django. Verify that the installation was successful by checking the Django version with the following code:</p> <pre><code>python3 -m django --version \n</code></pre> </li> <li> <p>Download and install the <code>pymysql</code> tool. Download and install the <code>pymysql</code> tool using the following code:</p> <pre><code>pip3 install pymysql\n\n#If you are in China mainland and have a low downloading speed, you can speed up the download by following commands.\npip3 install pymysql -i https://pypi.tuna.tsinghua.edu.cn/simple\n</code></pre> </li> </ul>"},{"location":"MatrixOne/Tutorial/django-python-crud-demo/#environment-configuration","title":"Environment Configuration","text":"<ol> <li> <p>Connect to MatrixOne through a MySQL client. Create a new database named test.</p> <pre><code>mysql&gt; create database test; \n</code></pre> </li> <li> <p>Create the project <code>django_crud_matrixone</code>.</p> <pre><code>django-admin startproject django_crud_matrixone \n</code></pre> <p>Once created we can look at the directory structure of the following project:</p> <pre><code>cd django_crud_matrixone/\n\ndjango_crud_matrixone/\n\u251c\u2500\u2500 __init__.py\n\u2514\u2500\u2500 asgi.py\n\u2514\u2500\u2500 settings.py\n\u2514\u2500\u2500 urls.py\n\u2514\u2500\u2500 wsgi.py\nmanage\n</code></pre> </li> <li> <p>Next we start the server by entering the following command into the django_crud_matrixone directory:</p> <pre><code>python3 manage.py runserver 0.0.0.0:8000 \n</code></pre> <p>0.0.0.0 Let other computers connect to the development server, 8000 is the port number. If not, then the port number defaults to 8000.</p> <p>Enter the ip of your server in your browser (here we enter the native IP address: 127.0.0.1:8000) and the port number. If it starts normally, the output is as follows:</p> <p></p> </li> <li> <p>We found the DATABASES configuration item in the project's settings.py file and modified its information to:</p> <pre><code> DATABASES = { \n    'default': { 'ENGINE': 'django.db.backends.mysql', # database engine \n    'NAME': 'test', # database name \n    'HOST': '127.0.0.1', # database address, native ip address 127.0.0.1 \n    'PORT': 6001, # Port \n    'USER': 'root', # database username \n    'PASSWORD': '111', #database password \n    } \n} \n</code></pre> </li> <li> <p>Next, tell Django to connect to the mysql database using the pymysql module, introduce the module and configure it in init.py in the same directory as settings.py:</p> <pre><code>import pymysql\npymysql.install_as_MySQLdb()\n</code></pre> </li> <li> <p>To create an app, Django dictates that you must create one if you want to use the model. We create an app for TestModel using the following command:</p> <pre><code>django-admin startapp TestModel\n</code></pre> <p>The directory structure is as follows:</p> <pre><code>django_crud_matrixone/\n\u251c\u2500\u2500 __init__.py\n\u2514\u2500\u2500 asgi.py\n...\nTestModel\n\u2514\u2500\u2500 migrations\n\u2514\u2500\u2500 __init__.py\n\u2514\u2500\u2500 admin.py\n\u2514\u2500\u2500 apps.py\n\u2514\u2500\u2500 models.py\n\u2514\u2500\u2500 tests.py\n\u2514\u2500\u2500 views.py\n</code></pre> </li> <li> <p>Next find the INSTALLED_APPS entry in settings.py as follows:</p> <pre><code>INSTALLED_APPS = [\n\"django.contrib.admin\",\n\"django.contrib.auth\",\n\"django.contrib.contenttypes\",\n\"django.contrib.sessions\",\n\"django.contrib.messages\",\n\"django.contrib.staticfiles\",\n\"TestModel\",                 #add this  \n]\n</code></pre> </li> </ol>"},{"location":"MatrixOne/Tutorial/django-python-crud-demo/#new-table","title":"New Table","text":"<ul> <li>Modify the TestModel/models.py file to define the information code for a book table as follows:</li> </ul> <pre><code>from django.db import models \nclass Book(models.Model): \n    id = models.AutoField(primary_key=True) # id is created automatically and can be written manually \n    title = models.CharField(max_length=32) # book name \n    price = models.DecimalField(max_digits=5, decimal_places=2) # book price \n    publish = models.CharField(max_length=32) # publisher name \n    pub_date = models.DateField() # publication time \n</code></pre> <p>The Django model uses its own ORM. The above class name represents the database table name (testmodel_book) and inherits models.Model. Fields inside the class represent fields in the data table. Data types: AutoField (equivalent to int), CharField (equivalent to varchar), DecimalField (equivalent to decimal), DateField (equivalent to date), max_length parameter limits length.</p> <p>ORM correspondence table:</p> <p>Refer to: https://docs.djangoproject.com/en/5.0/ref/models/fields/ for more model field types.</p> <ul> <li>Run from the command line</li> </ul> <pre><code>python3 manage.py makemigrations TestModel # Generate the configuration file and put it in the migrations directory under the app \npython3 manage.py migrate TestModel # Automatically generate the appropriate SQL statements based on the configuration file \n</code></pre> <p>Go into the test database and see that the testmodel_book table has been generated. where a record of the operations performed is generated in the django_migrations table.</p> <pre><code>mysql&gt; show tables;\n+-------------------+\n| Tables_in_test    |\n+-------------------+\n| django_migrations |\n| testmodel_book    |\n+-------------------+\n2 rows in set (0.01 sec)\n</code></pre>"},{"location":"MatrixOne/Tutorial/django-python-crud-demo/#insert-data","title":"Insert Data","text":"<ul> <li>Adding data requires the creation of objects first, and then through the ORM-supplied objects-supplied method create . Create a new views.py file in the django_crud_matrixone directory under the previously created django_crud_matrixone directory and enter the code:</li> </ul> <pre><code>from django.shortcuts import render,HttpResponse\nfrom TestModel import models \ndef add_book(request):\n    books = models.Book.objects.create(title=\"\u767d\u591c\u884c\",price=39.50,publish=\"\u5357\u6d77\u51fa\u7248\u516c\u53f8\",pub_date=\"2010-10-10\") \n    return HttpResponse(\"&lt;p&gt;\u6570\u636e\u6dfb\u52a0\u6210\u529f\uff01&lt;/p&gt;\")\n</code></pre> <ul> <li>Next, bind the URL to the view function. Open the urls.py file, delete the original code, and copy and paste the following code into the urls.py file:</li> </ul> <pre><code>from django.contrib import admin\nfrom django.urls import path\nfrom . import views\n\nurlpatterns = [\n    path('', views.add_book),\n    ]\n</code></pre> <ul> <li>Next we start the server by entering the following command into the django_crud_matrixone directory:</li> </ul> <pre><code>python3 manage.py runserver 0.0.0.0:8000 \n</code></pre> <p>Enter the ip of your server in your browser (here we enter the native IP address: 127.0.0.1:8000) and the port number. If it starts normally, the output is as follows:</p> <ul> <li>Connecting to the database to query the data, you can see that the data was successfully inserted:</li> </ul> <pre><code>mysql&gt; select * from testmodel_book;\n+------+-----------+-------+--------------------+------------+\n| id   | title     | price | publish            | pub_date   |\n+------+-----------+-------+--------------------+------------+\n|    1 | \u767d\u591c\u884c     | 39.50 | \u5357\u6d77\u51fa\u7248\u516c\u53f8         | 2010-10-10 |\n+------+-----------+-------+--------------------+------------+\n1 row in set (0.00 sec)\n</code></pre>"},{"location":"MatrixOne/Tutorial/django-python-crud-demo/#query-data","title":"query data","text":"<ul> <li>Modify the views.py file in the django_crud_matrixone directory and add the code:</li> </ul> <pre><code>def src_book(request):\n    books = models.Book.objects.all()#Use the all() method to query everything \n    for i in books:\n       print(i.id,i.title,i.price,i.publish,i.pub_date)\n    return HttpResponse(\"&lt;p&gt;\u67e5\u627e\u6210\u529f\uff01&lt;/p&gt;\")  \n</code></pre> <p>For more query related methods, refer to:https://docs.djangoproject.com/en/5.0/ref/models/querysets/</p> <ul> <li> <p>Modify the urls.py file:</p> <pre><code>urlpatterns = [\npath('', views.src_book),\n]\n</code></pre> </li> <li> <p>Next we start the server by entering the following command into the django_crud_matrixone directory:</p> </li> </ul> <pre><code>python3 manage.py runserver 0.0.0.0:8000\n</code></pre> <p>Enter the ip of your server in your browser (here we enter the native IP address: 127.0.0.1:8000) and the port number. If it starts normally, the output is as follows:</p> <p>The command line results are:</p>"},{"location":"MatrixOne/Tutorial/django-python-crud-demo/#update-data","title":"Update Data","text":"<ul> <li>The update data uses QuerySet type data <code>.update()</code>. The following example updates the price value of a record with an id value of 1 to 50. Modify the views.py file in the django_crud_matrixone directory and add the code:</li> </ul> <pre><code>def upd_book(request):\n    books = models.Book.objects.filter(pk=1).update(price=50)\n    return HttpResponse(\"&lt;p&gt;\u66f4\u65b0\u6210\u529f\uff01&lt;/p&gt;\")\n</code></pre> <p>pk=1 means primary key=1, which is equivalent to id=1.</p> <ul> <li>Modify the urls.py file:</li> </ul> <pre><code>urlpatterns = [\npath('', views.upd_book),\n]\n</code></pre> <ul> <li>Next we start the server by entering the following command into the django_crud_matrixone directory:</li> </ul> <pre><code>python3 manage.py runserver 0.0.0.0:8000\n</code></pre> <p>Enter the ip of your server in your browser (here we enter the native IP address: 127.0.0.1:8000) and the port number. If it starts normally, the output is as follows:</p> <ul> <li>Looking at the testmodel_book table, you can see that the data was updated successfully:</li> </ul> <pre><code>mysql&gt; select * from testmodel_book;\n+------+-----------+-------+--------------------+------------+\n| id   | title     | price | publish            | pub_date   |\n+------+-----------+-------+--------------------+------------+\n|    1 | \u767d\u591c\u884c     | 50.00 | \u5357\u6d77\u51fa\u7248\u516c\u53f8         | 2010-10-10 |\n+------+-----------+-------+--------------------+------------+\n1 row in set (0.00 sec)\n</code></pre>"},{"location":"MatrixOne/Tutorial/django-python-crud-demo/#delete-data","title":"Delete Data","text":"<ul> <li>Deleting data uses the number of QuerySet types <code>.delete()</code>. The following example deletes a record with price 50. Modify the views.py file in the django_crud_matrixone directory and add the code:</li> </ul> <pre><code>def del_book(request):\n    books=models.Book.objects.filter(price=50).delete()\n    return HttpResponse(\"&lt;p&gt;\u5220\u9664\u6210\u529f\uff01&lt;/p&gt;\")\n</code></pre> <ul> <li>Modify the urls.py file:</li> </ul> <pre><code>urlpatterns = [\npath('', views.del_book),\n]\n</code></pre> <ul> <li>Next we start the server by entering the following command into the django_crud_matrixone directory:</li> </ul> <pre><code>python3 manage.py runserver 0.0.0.0:8000\n</code></pre> <p>Enter the ip of your server in your browser (here we enter the native IP address: 127.0.0.1:8000) and the port number. If it starts normally, the output is as follows:</p> <ul> <li>Looking at the testmodel_book table, you can see that the data was successfully deleted.</li> </ul> <pre><code>mysql&gt; select * from testmodel_book;\nEmpty set (0.00 sec)\n</code></pre>"},{"location":"MatrixOne/Tutorial/gorm-golang-crud-demo/","title":"Gorm CRUD demo","text":"<p>This tutorial shows you how to build a simple GO+Gorm CRUD(Create, Read, Update, Delete) application with MatrixOne. Gorm is one of the most popular ORM tools in GO language.</p>"},{"location":"MatrixOne/Tutorial/gorm-golang-crud-demo/#before-you-start","title":"Before you start","text":"<p>A brief introduction about these softwares concerned:</p> <ul> <li>Gorm: The fantastic ORM library for Golang aims to be developer friendly. <code>gorm.io/gorm</code> and <code>gorm.io/driver/mysql</code> will vbe used to make Go connect to MYSQL.</li> </ul>"},{"location":"MatrixOne/Tutorial/gorm-golang-crud-demo/#setup-your-environment","title":"Setup your environment","text":"<p>Before you start, make sure you have downloaded and installed the following software.</p> <ol> <li> <p>Make sure you have already installed and launched MatrixOne. Connect to MatrixOne and create a database by MySQL client.</p> <pre><code>mysql&gt; create database test;\n</code></pre> </li> <li> <p>Make sure you have already installed Golang 1.18 (or plus) version.</p> <pre><code>#To check with Golang installation and its version\ngo version\n</code></pre> </li> <li> <p>Make sure you have already installed MySQL.</p> </li> <li> <p>Use command <code>go get</code> to install <code>gorm.io/gorm</code> and <code>gorm.io/driver/mysql</code>.</p> <pre><code>go get -u gorm.io/gorm\ngo get -u gorm.io/driver/mysql\n</code></pre> </li> </ol> <p>As we have explained how to connect to MatrixOne by Gorm in the other tutorial, we will focus on the CRUD(Create, Read, Update, Delete) implementations in this tutorial.</p>"},{"location":"MatrixOne/Tutorial/gorm-golang-crud-demo/#create","title":"Create","text":"<p>As an Object Relational Mapper(ORM) tool, Gorm allows developers to create go class to map the table in relational database. In the example below, we will create a <code>User</code> class. The class name and the attribute name must starts with a capital letter to make <code>public</code> access.</p> <p>Create a go file <code>gorm_create.go</code> and put the code below.</p> <pre><code>package main\nimport (\n\"fmt\"\n\n\"gorm.io/driver/mysql\"\n\"gorm.io/gorm\"\n\"gorm.io/gorm/logger\"\n)\n// user model\ntype USER struct {\nID       uint `gorm:\"primaryKey\"`\nCNAME    string\nCADDRESS string\n}\n\nfunc getDBConn() *gorm.DB {\ndsn := \"root:111@tcp(127.0.0.1:6001)/test?charset=utf8mb4&amp;parseTime=True&amp;loc=Local\" //MO\ndb, err := gorm.Open(mysql.Open(dsn), &amp;gorm.Config{\n// Logger: logger.Default.LogMode(logger.Info), //print SQL\n})\n// get connection\nif err != nil {\nfmt.Println(\"Database Connection Failed\") //Connection failed\n} else {\nfmt.Println(\"Database Connection Succeed\") //Connection succeed\n}\nreturn db\n}\n\nfunc main() {\n//get *gorm.DB\ndb := getDBConn()\n\n// auto create table\ndb.AutoMigrate(&amp;USER{})\n}\n</code></pre> <p>To enable the logging of converted SQL output, you can uncomment the following line:<code>Logger: logger.Default.LogMode(logger.Info)</code></p> <p>To run the Go file, open a terminal and use the following command:</p> <pre><code>go run gorm_create.go\n</code></pre> <p>You can use a MySQL client to verify if the table has been successfully created.</p> <pre><code>mysql&gt; show tables;\n+----------------+\n| Tables_in_test |\n+----------------+\n| users          |\n+----------------+\n1 row in set (0.01 sec)\n</code></pre>"},{"location":"MatrixOne/Tutorial/gorm-golang-crud-demo/#inserting-data","title":"Inserting Data","text":"<p>In the following example, you will be guided on how to insert two records into the users table that was created earlier. The ID column is assumed to be auto-incremented, but you can also specify a fixed value.</p> <p>Create a new text file named <code>gorm_insert.go</code> and copy the following code into the file:</p> <pre><code>package main\nimport (\n\"fmt\"\n\n\"gorm.io/driver/mysql\"\n\"gorm.io/gorm\"\n\"gorm.io/gorm/logger\"\n)\n// user model\ntype USER struct {\nID       uint `gorm:\"primaryKey\"`\nCNAME    string\nCADDRESS string\n}\n\nfunc getDBConn() *gorm.DB {\ndsn := \"root:111@tcp(127.0.0.1:6001)/test?charset=utf8mb4&amp;parseTime=True&amp;loc=Local\" //MO\ndb, err := gorm.Open(mysql.Open(dsn), &amp;gorm.Config{})\n// get connection\nif err != nil {\nfmt.Println(\"Database Connection Failed\") //Connection failed\n} else {\nfmt.Println(\"Database Connection Succeed\") //Connection succeed\n}\nreturn db\n}\n\nfunc main() {\n//get *gorm.DB\ndb := getDBConn()\n\n// auto create table\ndb.AutoMigrate(&amp;USER{})\n\n// **Insert users**\nusers := []USER{\n{\n// ID: 1, //autoincrement\nCNAME:    \"lili\",\nCADDRESS: \"Shanghai\"},\n{\nID:       111,\nCNAME:    \"zhang\",\nCADDRESS: \"Biejing\",\n},\n}\n\ndb.Create(users)\n\n}\n</code></pre> <p>Open your terminal and execute the following command to run the  go  file:</p> <pre><code>go run gorm_insert.go\n</code></pre> <p>Similarly, you can use a MySQL client to verify if the data has been successfully inserted into the table.</p> <pre><code>mysql&gt; select * from users;\n+------+-------+----------+\n| id   | cname | caddress |\n+------+-------+----------+\n|    1 | lili  | Shanghai |\n|  111 | zhang | Biejing  |\n+------+-------+----------+\n2 rows in set (0.01 sec)\n</code></pre>"},{"location":"MatrixOne/Tutorial/gorm-golang-crud-demo/#querying-data","title":"Querying Data","text":"<p>In the following example, you will be guided on how to query a subset of data based on a condition, specifically querying data where <code>CNAME=zhang</code> .</p> <p>Create a new text file named <code>gorm_query.go</code> and copy the following code into the file:</p> <pre><code>package main\nimport (\n\"fmt\"\n\n\"gorm.io/driver/mysql\"\n\"gorm.io/gorm\"\n\"gorm.io/gorm/logger\"\n)\n// user model\ntype USER struct {\nID       uint `gorm:\"primaryKey\"`\nCNAME    string\nCADDRESS string\n}\n\nfunc getDBConn() *gorm.DB {\ndsn := \"root:111@tcp(127.0.0.1:6001)/test?charset=utf8mb4&amp;parseTime=True&amp;loc=Local\" //MO\ndb, err := gorm.Open(mysql.Open(dsn), &amp;gorm.Config{})\n// get connection\nif err != nil {\nfmt.Println(\"Database Connection Failed\") //Connection failed\n} else {\nfmt.Println(\"Database Connection Succeed\") //Connection succeed\n}\nreturn db\n}\n\nfunc main() {\n//get *gorm.DB\ndb := getDBConn()\n\n// auto create table\ndb.AutoMigrate(&amp;USER{})\n\n// **Query\u2014\u2014 String condition** \nres := USER{}\ntx := db.Where(\"CNAME = ? \", \"zhang\").Find(&amp;USER{}).Scan(&amp;res)\nif tx.Error != nil {\nfmt.Println(tx.Error)\nreturn\n}\nfmt.Println(res)\n\n}\n</code></pre> <p>Open your terminal and execute the following command to run the  go  file:</p> <pre><code>go run gorm_query.go\n</code></pre> <p>The output of the terminal will include the following data.</p> <pre><code>{111 zhang Biejing}\n</code></pre>"},{"location":"MatrixOne/Tutorial/gorm-golang-crud-demo/#updating-data","title":"Updating Data","text":"<p>In the following demonstration, you will be guided on how to update data. Create a text file named <code>gorm_update.go</code> and copy-paste the following code into the file:</p> <pre><code>package main\nimport (\n\"fmt\"\n\n\"gorm.io/driver/mysql\"\n\"gorm.io/gorm\"\n\"gorm.io/gorm/logger\"\n)\n// user model\ntype USER struct {\nID       uint `gorm:\"primaryKey\"`\nCNAME    string\nCADDRESS string\n}\n\nfunc getDBConn() *gorm.DB {\ndsn := \"root:111@tcp(127.0.0.1:6001)/test?charset=utf8mb4&amp;parseTime=True&amp;loc=Local\" //MO\ndb, err := gorm.Open(mysql.Open(dsn), &amp;gorm.Config{})\n// get connection\nif err != nil {\nfmt.Println(\"Database Connection Failed\") //Connection failed\n} else {\nfmt.Println(\"Database Connection Succeed\") //Connection succeed\n}\nreturn db\n}\n\nfunc main() {\n//get *gorm.DB\ndb := getDBConn()\n\n// auto create table\ndb.AutoMigrate(&amp;USER{})\n\n// **Update** \naUser := USER{}\ntx := db.Where(\"CNAME = ? \", \"zhang\").Find(&amp;USER{}).Scan(&amp;aUser)\nif tx.Error != nil {\nfmt.Println(tx.Error)\nreturn\n}\nres:=db.Model(&amp;aUser).Update(\"CADDRESS\", \"HongKong\")\nif res.Error != nil {\nfmt.Println(tx.Error)\nreturn\n}\n\n}\n</code></pre> <p>Open your terminal and execute the following command to run the  go  file:</p> <pre><code>go run gorm_update.go\n</code></pre> <p>You can use the MySQL client to verify if the table has been updated successfully:</p> <pre><code>mysql&gt; select * from users;\n+------+-------+----------+\n| id   | cname | caddress |\n+------+-------+----------+\n|  111 | zhang | HongKong |\n|    1 | lili  | Shanghai |\n+------+-------+----------+\n2 rows in set (0.00 sec)\n</code></pre>"},{"location":"MatrixOne/Tutorial/gorm-golang-crud-demo/#deleting-data","title":"Deleting Data","text":"<p>In the following demonstration, you will be guided on how to delete a single data record. It is important to note that when deleting a single record, you need to specify the primary key, otherwise it may trigger a batch delete. Create a text file named <code>gorm_delete.go</code> and copy-paste the following code into the file:</p> <pre><code>package main\nimport (\n\"fmt\"\n\n\"gorm.io/driver/mysql\"\n\"gorm.io/gorm\"\n\"gorm.io/gorm/logger\"\n)\n// user model\ntype USER struct {\nID       uint `gorm:\"primaryKey\"`\nCNAME    string\nCADDRESS string\n}\n\nfunc getDBConn() *gorm.DB {\ndsn := \"root:111@tcp(127.0.0.1:6001)/test?charset=utf8mb4&amp;parseTime=True&amp;loc=Local\" //MO\ndb, err := gorm.Open(mysql.Open(dsn), &amp;gorm.Config{})\n// get connection\nif err != nil {\nfmt.Println(\"Database Connection Failed\") //Connection failed\n} else {\nfmt.Println(\"Database Connection Succeed\") //Connection succeed\n}\nreturn db\n}\n\nfunc main() {\n//get *gorm.DB\ndb := getDBConn()\n\n// auto create table\ndb.AutoMigrate(&amp;USER{})\n\n// **Delete** \naUser := USER{}\ntx := db.Where(\"CNAME = ? \", \"zhang\").Find(&amp;USER{}).Scan(&amp;aUser)\nif tx.Error != nil {\nfmt.Println(tx.Error)\nreturn\n}\nres := db.Delete(&amp;aUser)\nif res.Error != nil {\nfmt.Println(tx.Error)\nreturn\n}\n\n}\n</code></pre> <p>Open your terminal and execute the following command to run the  go  file:</p> <pre><code>go run gorm_delete.go\n</code></pre> <p>You can use the MySQL client to verify if the table has been deleted successfully:</p> <pre><code>mysql&gt; select * from users;\n+------+-------+----------+\n| id   | cname | caddress |\n+------+-------+----------+\n|    1 | lili  | Shanghai |\n+------+-------+----------+\n1 row in set (0.00 sec)\n</code></pre> <p>The above is just a partial demonstration of CRUD operations in GORM. For more usage and examples, please refer to the GORM Official Guides.</p>"},{"location":"MatrixOne/Tutorial/rag-demo/","title":"Example of RAG Application Foundation","text":""},{"location":"MatrixOne/Tutorial/rag-demo/#what-is-rag","title":"What is RAG?","text":"<p>RAG, known as Retrieval-Augmented Generation, is a technology that combines information retrieval and text generation to improve the accuracy and relevance of text generated by large language models (LLMs). LLM may not be able to obtain up-to-date information due to limitations of its training data.</p> <p>For example, when I asked GPT about the latest version of MatrixOne, it didn't give an answer.</p> <p>In addition, these models can sometimes produce misleading information and produce factually incorrect content. For example, when I asked Lu Xun about his relationship with Zhou Shuren, GPT started a serious nonsense.</p> <p>To solve the above problem, we can retrain the LLM model, but at a high cost. The main advantage of RAG, on the other hand, is that it avoids having to train again for specific tasks. Its high availability and low threshold make it one of the most popular scenarios in LLM systems, on which many LLM applications are built. The core idea of RAG is for the model to not only rely on what it learns during the training phase when generating responses, but also to utilize external, up-to-date, proprietary sources of information, so that users can optimize the output of the model by enriching the input with additional external knowledge bases based on the actual situation.</p> <p>RAG's workflow typically consists of the following steps:</p> <ul> <li>Retrieve: Find and extract the information most relevant to the current query from a large data set or knowledge base.</li> <li>Augment: Combines retrieved information or data sets with the LLM to enhance the performance of the LLM and the accuracy of the output.</li> <li>Generate: Utilize LLM to generate new text or responses using retrieved information.</li> </ul> <p>The following is a flow chart for Native RAG:</p> <p>As you can see, the retrieval link plays a crucial role in the RAG architecture, and MatrixOne's ability to retrieve vectors provides powerful data retrieval support for building RAG applications.</p>"},{"location":"MatrixOne/Tutorial/rag-demo/#role-of-matrixone-in-rag","title":"Role of Matrixone in RAG","text":"<p>As a hyperconverged database, Matrxione comes with its own vector capabilities, which play an important role in RAG applications in the following ways:</p> <ul> <li> <p>Efficient information retrieval: Matrxione has vector data types specifically designed to process and store high-dimensional vector data. It uses special data structures and indexing strategies, such as KNN queries, to quickly find data items that most closely resemble query vectors.</p> </li> <li> <p>Support for large-scale data processing: Matrxione's ability to effectively manage and process large-scale vector data is a core feature of the retrieval component of the RAG system, which enables the RAG system to quickly retrieve the information most relevant to user queries from vast amounts of data.</p> </li> <li> <p>Improved generation quality: Through the retrieval capabilities of Matrxione's vector capabilities, RAG technology can introduce information from an external knowledge base to produce more accurate, rich, and contextualized text that improves the quality of generated text.</p> </li> <li> <p>Security and privacy protection: Matrxione can also protect data with data security measures such as encrypted storage and access control, which is particularly important for RAG applications that handle sensitive data.</p> </li> <li> <p>Simplify the development process: Using Matrxione simplifies the development process for RAG applications because it provides an efficient mechanism for storing and retrieving vectorized data, reducing the burden on developers in data management.</p> </li> </ul> <p>Based on Ollama, this paper combines Llama2 and Mxbai-embed-large to quickly build a Native RAG application using Matrixone's vector capabilities.</p>"},{"location":"MatrixOne/Tutorial/rag-demo/#prepare-before-you-start","title":"Prepare before you start","text":""},{"location":"MatrixOne/Tutorial/rag-demo/#relevant-knowledge","title":"Relevant knowledge","text":"<p>Ollama: Ollama is an open source large language model service tool that allows users to easily deploy and use large-scale pre-trained models in their hardware environment. Ollama's primary function is to deploy and manage large language models (LLMs) within Docker containers, enabling users to quickly run them locally. Ollama simplifies the deployment process by allowing users to run open source large language models locally with a single command through simple installation instructions.</p> <p>Llama2:llama2 is an open source language large model for understanding and generating long text that can be used for research and commercial purposes.</p> <p>Mxbai-embed-large: mxbai-embed-large is an open source embedding model designed for text embedding and retrieval tasks. The model generates an embedding vector size of 1024.</p>"},{"location":"MatrixOne/Tutorial/rag-demo/#software-installation","title":"Software Installation","text":"<p>Before you begin, confirm that you have downloaded and installed the following software:</p> <ul> <li> <p>Verify that you have completed the standalone deployment of MatrixOne.</p> </li> <li> <p>Verify that you have finished installing Python 3.8 (or plus). Verify that the installation was successful by checking the Python version with the following code:</p> </li> </ul> <pre><code>python3 -V \n</code></pre> <ul> <li> <p>Verify that you have completed installing the MySQL client.</p> </li> <li> <p>Download and install the <code>pymysql</code> tool. Download and install the <code>pymysql</code> tool using the following code:</p> </li> </ul> <pre><code>pip3 install pymysql \n</code></pre> <ul> <li>Verify that you have finished installing ollama. Verify that the installation was successful by checking the ollama version with the following code:</li> </ul> <pre><code>ollama -v \n</code></pre> <ul> <li>Download the LLM model <code>llama2</code> and embedding model <code>mxbai-embed-large</code>:</li> </ul> <pre><code>ollama pull llama2 ollama pull mxbai-embed-large \n</code></pre>"},{"location":"MatrixOne/Tutorial/rag-demo/#build-your-app","title":"Build your app","text":""},{"location":"MatrixOne/Tutorial/rag-demo/#building-table","title":"Building table","text":"<p>Connect to MatrixOne and create a table called <code>rag_tab</code> to store text information and corresponding vector information.</p> <pre><code>create table rag_tab(content text,embedding vecf32(1024));\n</code></pre>"},{"location":"MatrixOne/Tutorial/rag-demo/#text-vectorization-stored-to-matrixone","title":"Text vectorization stored to MatrixOne","text":"<p>Create the python file rag_example.py, slice and vectorize the textual information using the mxbai-embed-large embedding model, and save it to MatrixOne's <code>rag_tab</code> table.</p> <pre><code>import ollama\nimport pymysql.cursors\n\nconn = pymysql.connect(\n        host='127.0.0.1',\n        port=6001,\n        user='root',\n        password = \"111\",\n        db='db1',\n        autocommit=True\n        )\ncursor = conn.cursor()\n\n#Generate embeddings\ndocuments = [\n\"MatrixOne is a hyper-converged cloud &amp; edge native distributed database with a structure that separates storage, computation, and transactions to form a consolidated HSTAP data engine. This engine enables a single database system to accommodate diverse business loads such as OLTP, OLAP, and stream computing. It also supports deployment and utilization across public, private, and edge clouds, ensuring compatibility with diverse infrastructures.\",\n\"MatrixOne touts significant features, including real-time HTAP, multi-tenancy, stream computation, extreme scalability, cost-effectiveness, enterprise-grade availability, and extensive MySQL compatibility. MatrixOne unifies tasks traditionally performed by multiple databases into one system by offering a comprehensive ultra-hybrid data solution. This consolidation simplifies development and operations, minimizes data fragmentation, and boosts development agility.\",\n\"MatrixOne is optimally suited for scenarios requiring real-time data input, large data scales, frequent load fluctuations, and a mix of procedural and analytical business operations. It caters to use cases such as mobile internet apps, IoT data applications, real-time data warehouses, SaaS platforms, and more.\",\n\"Matrix is a collection of complex or real numbers arranged in a rectangular array.\",\n\"The lastest version of MatrixOne is 1.2.0, releases on 20th May, 2024.\"\n\"We are excited to announce MatrixOne 0.8.0 release on 2023/6/30.\"\n]\n\nfor i,d in enumerate(documents):\n  response = ollama.embeddings(model=\"mxbai-embed-large\", prompt=d)\n  embedding = response[\"embedding\"]\n  insert_sql = \"insert into rag_tab(content,embedding) values (%s, %s)\"\n  data_to_insert = (d, str(embedding))\n  cursor.execute(insert_sql, data_to_insert)\n</code></pre>"},{"location":"MatrixOne/Tutorial/rag-demo/#view-quantity-in-rag_tab-table","title":"View quantity in <code>rag_tab</code> table","text":"<pre><code>mysql&gt; select count(*) from rag_tab;\n+----------+\n| count(*) |\n+----------+\n|        6 |\n+----------+\n1 row in set (0.00 sec)\n</code></pre> <p>As you can see, the data was successfully stored into the database.</p> <ul> <li>Indexing (not required)</li> </ul> <p>In large-scale high-dimensional data retrieval, if a full search is used, the similarity calculation with each vector in the entire data set needs to be performed for each query, which results in significant performance overhead and latency. The use of vector index can effectively solve the above problems,by establishing efficient data structures and algorithms to optimize the search process,improve retrieval performance,reduce computing and storage costs,and enhance the user experience. Therefore, we build an IVF-FLAT vector index for the vector field</p> <pre><code>SET GLOBAL experimental_ivf_index = 1; -- turn on vector index \ncreate index idx_rag using ivfflat on rag_tab(embedding) lists=1 op_type \"vector_l2_ops\";\n</code></pre>"},{"location":"MatrixOne/Tutorial/rag-demo/#vector-retrieval","title":"Vector retrieval","text":"<p>Once the data is ready, you can search the database for the most similar content based on the questions we asked. This step relies heavily on the vector retrieval capabilities of MatrixOne, which supports multiple similarity searches, where we use <code>l2_distance</code> to retrieve and set the number of returned results to 3.</p> <pre><code>prompt = \"What is the latest version of MatrixOne?\"\n\nresponse = ollama.embeddings(\n  prompt=prompt,\n  model=\"mxbai-embed-large\"\n)\nquery_embedding= embedding = response[\"embedding\"]\nquery_sql = \"select content from rag_tab order by l2_distance(embedding,%s) asc limit 3\"\ndata_to_query = str(query_embedding)\ncursor.execute(query_sql, data_to_query)\ndata = cursor.fetchall()\n</code></pre>"},{"location":"MatrixOne/Tutorial/rag-demo/#enhanced-generation","title":"Enhanced generation","text":"<p>We combine what we retrieved in the previous step with LLM to generate an answer.</p> <pre><code>#enhance generate \noutput = ollama.generate(\n  model=\"llama2\",\n  prompt=f\"Using this data: {data}. Respond to this prompt: {prompt}\"\n)\n\nprint(output['response'])\n</code></pre> <p>Console output related answer:</p> <pre><code>Based on the provided data, the latest version of MatrixOne is 1.2.3, which was released on July 12th, 2024. \n</code></pre> <p>After enhancement, the model generates the correct answer.</p>"},{"location":"MatrixOne/Tutorial/rag-demo/#reference-documents","title":"Reference Documents","text":"<ul> <li>Vector Type</li> <li>Vector retrieval</li> <li>CREATE INDEX...USING IVFFLAT</li> <li>L2_DISTANCE()</li> </ul>"},{"location":"MatrixOne/Tutorial/search-picture-demo/","title":"Example of application basis for graph search","text":"<p>Currently, graphic and text search applications cover a wide range of areas. In e-commerce, users can search for goods by uploading images or text descriptions; in social media platforms, content can be found quickly through images or text to enhance the user's experience; and in copyright detection, image copyright can be identified and protected. In addition, text search is widely used in search engines to help users find specific images through keywords, while graphic search is used in machine learning and artificial intelligence for image recognition and classification tasks.</p> <p>The following is a flow chart of a graphic search:</p> <p>As you can see, vectorized storage and retrieval of images is involved in building graph-to-text search applications, while MatrixOne's vector capabilities and multiple retrieval methods provide critical technical support for building graph-to-text search applications.</p> <p>In this chapter, we'll build a simple graphical (textual) search application based on MatrixOne's vector capabilities.</p>"},{"location":"MatrixOne/Tutorial/search-picture-demo/#prepare-before-you-start","title":"Prepare before you start","text":""},{"location":"MatrixOne/Tutorial/search-picture-demo/#relevant-knowledge","title":"Relevant knowledge","text":"<p>Transformers: Transformers is an open source natural language processing library that provides a wide range of pre-trained models through which researchers and developers can easily use and integrate CLIP models into their projects.</p> <p>CLIP: The CLIP model is a deep learning model published by OpenAI. At its core is the unified processing of text and images through contrastive learning, enabling tasks such as image classification to be accomplished through text-image similarity without the need for direct optimization tasks. It can be combined with a vector database to build tools to search graphs. High-dimensional vector representations of images are extracted through CLIP models to capture their semantic and perceptual features, and then encoded into an embedded space. At query time, the sample image gets its embedding through the same CLIP encoder, performing a vector similarity search to effectively find the first k closest database image vectors.</p>"},{"location":"MatrixOne/Tutorial/search-picture-demo/#software-installation","title":"Software Installation","text":"<p>Before you begin, confirm that you have downloaded and installed the following software:</p> <ul> <li> <p>Verify that you have completed the standalone deployment of MatrixOne.</p> </li> <li> <p>Verify that you have finished installing Python 3.8 (or plus). Verify that the installation was successful by checking the Python version with the following code:</p> </li> </ul> <pre><code>python3 -V \n</code></pre> <ul> <li> <p>Verify that you have completed installing the MySQL client.</p> </li> <li> <p>Download and install the <code>pymysql</code> tool. Download and install the <code>pymysql</code> tool using the following code:</p> </li> </ul> <pre><code>pip install pymysql \n</code></pre> <ul> <li>Download and install the <code>transformers</code> library. Download and install the <code>transformers</code> library using the following code:</li> </ul> <pre><code>pip install transformers \n</code></pre> <ul> <li>Download and install the <code>Pillow</code> library. Download and install the <code>Pillow</code> library using the following code:</li> </ul> <pre><code>pip install pillow \n</code></pre>"},{"location":"MatrixOne/Tutorial/search-picture-demo/#build-your-app","title":"Build your app","text":""},{"location":"MatrixOne/Tutorial/search-picture-demo/#building-table","title":"Building table","text":"<p>Connect to MatrixOne and create a table called <code>pic_tab</code> to store picture path information and corresponding vector information.</p> <pre><code>create table pic_tab(pic_path varchar(200), embedding vecf64(512)); </code></pre>"},{"location":"MatrixOne/Tutorial/search-picture-demo/#load-model","title":"Load Model","text":"<pre><code>from transformers import CLIPProcessor, CLIPModel\n\n# Load model from HuggingFace\nmodel = CLIPModel.from_pretrained(\"openai/clip-vit-base-patch32\")\nprocessor = CLIPProcessor.from_pretrained(\"openai/clip-vit-base-patch32\")\n</code></pre>"},{"location":"MatrixOne/Tutorial/search-picture-demo/#traversing-the-picture-path","title":"Traversing the Picture Path","text":"<p>The definition method <code>find_img_files</code> traverses the local images folder, where I pre-stored images of fruit in five categories, apple, banana, blueberry, cherry, and apricot, several in each category, in <code>.jpg</code> format.</p> <pre><code>def find_img_files(directory):\n    img_files = []  # Used to store found .jpg file paths \n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            if file.lower().endswith('.jpg'):\n                full_path = os.path.join(root, file)\n                img_files.append(full_path) # Build the full file path\n    return img_files\n</code></pre> <ul> <li>Image vectorized and stored in MatrixOne</li> </ul> <p>Define the method <code>storage_img</code> to map the picture into a vector, normalize it (not required) and store it in MatrixOne. MatrixOne supports L2 normalization of vectors using the <code>NORMALIZE_L2()</code> function. In some cases, features of the data may be distributed at different scales, which may cause some features to have a disproportionate effect on distance calculations. By normalizing, this effect can be reduced and the contribution of different characteristics to the end result more balanced. And when using the L2 distance measure, L2 normalization avoids vectors of different lengths affecting distance calculations.</p> <pre><code>import pymysql\nfrom PIL import Image\n\nconn = pymysql.connect(\n        host = '127.0.0.1',\n        port = 6001,\n        user = 'root',\n        password = \"111\",\n        db = 'db1',\n        autocommit = True\n        )\n\ncursor = conn.cursor()\n\n# Map the image into vectors and store them in MatrixOne\ndef storage_img():\n for file_path in jpg_files:\n     image = Image.open(file_path)\n     if image.mode != 'RGBA':\n         image = image.convert('RGBA')\n     inputs = processor(images=image, return_tensors=\"pt\", padding=True)\n     img_features = model.get_image_features(inputs[\"pixel_values\"]) # Using models to acquire image features\n     img_features = img_features .detach().tolist() # Separate tensor, convert to list\n     embeddings = img_features [0]\n     insert_sql = \"insert into pic_tab(pic_path,embedding) values (%s, normalize_l2(%s))\"\n     data_to_insert = (file_path, str(embeddings))\n     cursor.execute(insert_sql, data_to_insert)\n     image.close()\n</code></pre>"},{"location":"MatrixOne/Tutorial/search-picture-demo/#view-quantity-in-pic_tab-table","title":"View quantity in <code>pic_tab</code> table","text":"<pre><code>mysql&gt; select count(*) from pic_tab;\n+----------+\n| count(*) |\n+----------+\n|     4801 |\n+----------+\n1 row in set (0.00 sec)\n</code></pre> <p>As you can see, the data was successfully stored into the database.</p>"},{"location":"MatrixOne/Tutorial/search-picture-demo/#build-vector-index","title":"Build Vector Index","text":"<p>MatrixOne supports vector indexing in IVF-FLAT, where each search requires recalculating the similarity between the query image and each image in the database without an index. The index, on the other hand, reduces the amount of computation necessary by performing similarity calculations only on images marked as \"relevant\" in the index.</p> <pre><code>def create_idx(n):\n    cursor.execute('SET GLOBAL experimental_ivf_index = 1')\n    create_sql = 'create index idx_pic using ivfflat on pic_tab(embedding) lists=%s op_type \"vector_l2_ops\"'\n    cursor.execute(create_sql, n)\n</code></pre>"},{"location":"MatrixOne/Tutorial/search-picture-demo/#search-in-graphic-text","title":"Search in graphic (text)","text":"<p>Next, we define the methods <code>img_search_img</code> and <code>text_search_img</code> to implement graph and text search. MatrixOne has vector retrieval capabilities and supports multiple similarity searches, where we use <code>l2_distance</code> to retrieve.</p> <pre><code># search for maps\ndef img_search_img(img_path, k):\n    image = Image.open(img_path)\n    inputs = processor(images=image, return_tensors=\"pt\")\n    img_features = model.get_image_features(**inputs)\n    img_features = img_features.detach().tolist()\n    img_features = img_features[0]\n    query_sql = \"select pic_path from pic_tab order by l2_distance(embedding,normalize_l2(%s)) asc limit %s\"\n    data_to_query = (str(img_features), k)\n    cursor.execute(query_sql, data_to_query)\n    global data\n    data = cursor.fetchall()\n\n# search for pictures by writing\ndef text_search_img(text,k):\n    inputs = processor(text=text, return_tensors=\"pt\", padding=True)\n    text_features = model.get_text_features(inputs[\"input_ids\"], inputs[\"attention_mask\"])\n    embeddings = text_features.detach().tolist()\n    embeddings = embeddings[0]\n    query_sql = \"select pic_path from pic_tab order by l2_distance(embedding,normalize_l2(%s)) asc limit %s\"\n    data_to_query = (str(embeddings),k)\n    cursor.execute(query_sql, data_to_query)\n    global data\n    data = cursor.fetchall()\n</code></pre>"},{"location":"MatrixOne/Tutorial/search-picture-demo/#search-results-showcase","title":"Search Results Showcase","text":"<p>When retrieving a relevant image from an image or text, we need to print the results, where we use Matplotlib to present the search results.</p> <pre><code>import matplotlib.pyplot as plt\nimport matplotlib.image as mpimg\n\ndef show_img(img_path,rows,cols):\n    if img_path:\n        result_path = [img_path] + [path for path_tuple in data for path in path_tuple]\n    else:\n        result_path = [path for path_tuple in data for path in path_tuple]\n    # Create a new graph and axes\n    fig, axes = plt.subplots(nrows=rows, ncols=cols, figsize=(10, 10))\n    # Loop over image paths and axes\n    for i, (result_path, ax) in enumerate(zip(result_path, axes.ravel())):\n        image = mpimg.imread(result_path) # Read image\n        ax.imshow(image) # Show picture\n        ax.axis('off') # Remove Axis\n        ax.set_title(f'image{i + 1}') # Setting the Submap Title\n    plt.tight_layout() # Adjusting subgraph spacing\n    plt.show() # Display the entire graph\n</code></pre>"},{"location":"MatrixOne/Tutorial/search-picture-demo/#view-results","title":"View Results","text":"<p>Run the program by entering the following code in the main program:</p> <pre><code>if __name__ == \"__main__\":\n    directory_path = '/Users/admin/Downloads/fruit01' # Replace with the actual directory path\n    jpg_files = find_img_files(directory_path)\n    storage_img()\n    create_idx(4)\n    img_path = '/Users/admin/Downloads/fruit01/blueberry/f_01_04_0450.jpg'\n    img_search_img(img_path, 3) # search for maps\n    show_img(img_path,1,4)\n    text = [\"Banana\"]\n    text_search_img(text,3) # search for pictures by writing\n    show_img(None,1,3)\n</code></pre> <p>Using the results of the chart search, the first chart on the left is a comparison chart. As you can see, the searched picture is very similar to the comparison chart:</p> <p>As you can see from the text search results, the searched image matches the input text:</p>"},{"location":"MatrixOne/Tutorial/search-picture-demo/#reference-documents","title":"Reference Documents","text":"<ul> <li>Vector Type</li> <li>Vector retrieval</li> <li>CREATE INDEX...USING IVFFLAT</li> <li>L2_DISTANCE()</li> <li>NORMALIZE_L2()</li> </ul>"},{"location":"MatrixOne/Tutorial/springboot-hibernate-crud-demo/","title":"SpringBoot and JPA CRUD demo","text":"<p>This tutorial completes a simple Demo based on SpringBoot+Spring Data JPA+MatrixOne+Intellij IDEA , and realizes the basic CRUD function.</p>"},{"location":"MatrixOne/Tutorial/springboot-hibernate-crud-demo/#before-you-start","title":"Before you start","text":"<p>A brief introduction about these softwares concerned:</p> <ul> <li>Spring Data JPA: JPA is a specification that defines an API for object-relational mappings and for managing persistent objects. Spring Data JPA is an object\u2013relational mapping tool for the Java programming language. It provides a framework for mapping an object-oriented domain model to a relational database.</li> <li>Intellij IDEA: IntelliJ IDEA is a popular IDE for Java developers. It has a lot of plugins that can enhance our efficiency.</li> <li>Maven: Maven is a powerful management tool in Java that can automatically download and import Jar file according to the configuration in the pom.xml file. This feature reduces the conflicts between different versions of Jar files.</li> <li>Spring: Spring is one of the most popular frameworks in Java and more and more enterprise is using the Spring framework to build their project. Spring Boot is built on top of the conventional spring framework. So, it provides all the features of spring and is yet easier to use than spring.</li> <li>Postman: Postman is an application used for API testing. It is an HTTP client that tests HTTP requests, utilizing a graphical user interface, through which we obtain different types of responses that need to be subsequently validated.</li> </ul>"},{"location":"MatrixOne/Tutorial/springboot-hibernate-crud-demo/#set-up-environment","title":"Set up environment","text":""},{"location":"MatrixOne/Tutorial/springboot-hibernate-crud-demo/#1-install-and-launch-matrixone","title":"1. Install and Launch MatrixOne","text":"<p>Follow the installation instruction and launch MatrixOne. Create a database <code>test</code> by MySQL client.</p> <pre><code>mysql&gt; create database test;\n</code></pre>"},{"location":"MatrixOne/Tutorial/springboot-hibernate-crud-demo/#2-create-a-new-spring-boot-project-using-intellij-idea","title":"2. Create a new Spring Boot Project Using IntelliJ IDEA","text":"<p>Choose Spring Initializer, and name the project as you want.</p> <p></p> <p>Choose Spring Web,  JDBC API,  Spring Data JPA, and MySQL Driver as dependencies for this project.</p> <p></p> <p>Click Create,  the project will be created. The dependencies are listed in the pom.xml file. Usually you don't need to modify anything.</p> <pre><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\"&gt;\n    &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;\n    &lt;groupId&gt;com.example&lt;/groupId&gt;\n    &lt;artifactId&gt;jpademo&lt;/artifactId&gt;\n    &lt;version&gt;0.0.1-SNAPSHOT&lt;/version&gt;\n    &lt;name&gt;jpademo&lt;/name&gt;\n    &lt;description&gt;jpademo&lt;/description&gt;\n\n    &lt;properties&gt;\n        &lt;java.version&gt;1.8&lt;/java.version&gt;\n        &lt;project.build.sourceEncoding&gt;UTF-8&lt;/project.build.sourceEncoding&gt;\n        &lt;project.reporting.outputEncoding&gt;UTF-8&lt;/project.reporting.outputEncoding&gt;\n        &lt;spring-boot.version&gt;2.3.7.RELEASE&lt;/spring-boot.version&gt;\n    &lt;/properties&gt;\n\n    &lt;dependencies&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n            &lt;artifactId&gt;spring-boot-starter-data-jpa&lt;/artifactId&gt;\n        &lt;/dependency&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n            &lt;artifactId&gt;spring-boot-starter-jdbc&lt;/artifactId&gt;\n        &lt;/dependency&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n            &lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt;\n        &lt;/dependency&gt;\n\n        &lt;dependency&gt;\n            &lt;groupId&gt;mysql&lt;/groupId&gt;\n            &lt;artifactId&gt;mysql-connector-java&lt;/artifactId&gt;\n            &lt;scope&gt;runtime&lt;/scope&gt;\n        &lt;/dependency&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n            &lt;artifactId&gt;spring-boot-starter-test&lt;/artifactId&gt;\n            &lt;scope&gt;test&lt;/scope&gt;\n            &lt;exclusions&gt;\n                &lt;exclusion&gt;\n                    &lt;groupId&gt;org.junit.vintage&lt;/groupId&gt;\n                    &lt;artifactId&gt;junit-vintage-engine&lt;/artifactId&gt;\n                &lt;/exclusion&gt;\n            &lt;/exclusions&gt;\n        &lt;/dependency&gt;\n    &lt;/dependencies&gt;\n\n    &lt;dependencyManagement&gt;\n        &lt;dependencies&gt;\n            &lt;dependency&gt;\n                &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n                &lt;artifactId&gt;spring-boot-dependencies&lt;/artifactId&gt;\n                &lt;version&gt;${spring-boot.version}&lt;/version&gt;\n                &lt;type&gt;pom&lt;/type&gt;\n                &lt;scope&gt;import&lt;/scope&gt;\n            &lt;/dependency&gt;\n        &lt;/dependencies&gt;\n    &lt;/dependencyManagement&gt;\n\n    &lt;build&gt;\n        &lt;plugins&gt;\n            &lt;plugin&gt;\n                &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;\n                &lt;artifactId&gt;maven-compiler-plugin&lt;/artifactId&gt;\n                &lt;version&gt;3.8.1&lt;/version&gt;\n                &lt;configuration&gt;\n                    &lt;source&gt;1.8&lt;/source&gt;\n                    &lt;target&gt;1.8&lt;/target&gt;\n                    &lt;encoding&gt;UTF-8&lt;/encoding&gt;\n                &lt;/configuration&gt;\n            &lt;/plugin&gt;\n            &lt;plugin&gt;\n                &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n                &lt;artifactId&gt;spring-boot-maven-plugin&lt;/artifactId&gt;\n                &lt;version&gt;2.3.7.RELEASE&lt;/version&gt;\n                &lt;configuration&gt;\n                    &lt;mainClass&gt;com.example.jpademo.JpademoApplication&lt;/mainClass&gt;\n                &lt;/configuration&gt;\n                &lt;executions&gt;\n                    &lt;execution&gt;\n                        &lt;id&gt;repackage&lt;/id&gt;\n                        &lt;goals&gt;\n                            &lt;goal&gt;repackage&lt;/goal&gt;\n                        &lt;/goals&gt;\n                    &lt;/execution&gt;\n                &lt;/executions&gt;\n            &lt;/plugin&gt;\n        &lt;/plugins&gt;\n    &lt;/build&gt;\n\n&lt;/project&gt;\n</code></pre>"},{"location":"MatrixOne/Tutorial/springboot-hibernate-crud-demo/#3-modify-the-applicationproperties-file","title":"3. Modify the application.properties file","text":"<p>Under resources folder, the MatrixOne connection and Hibernate need to be configured in  application.properties file.</p> <pre><code># Application Name\nspring.application.name=jpademo\n# Database driver\nspring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver\n# Data Source name\nspring.datasource.name=defaultDataSource\n\n# Database connection url, modify to MatrixOne address and port, with parameters\nspring.datasource.url=jdbc:mysql://127.0.0.1:6001/test?characterSetResults=UTF-8&amp;continueBatchOnError=false&amp;useServerPrepStmts=true&amp;alwaysSendSetIsolation=false&amp;useLocalSessionState=true&amp;zeroDateTimeBehavior=CONVERT_TO_NULL&amp;failoverReadOnly=false&amp;serverTimezone=Asia/Shanghai&amp;socketTimeout=30000\n# Database username and password\nspring.datasource.username=root\nspring.datasource.password=111\n# Web application port\nserver.port=8080\n\n# Hibernate configurations\nspring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQLDialect\nspring.jpa.properties.hibernate.id.new_generator_mappings = false\nspring.jpa.properties.hibernate.format_sql = true\nspring.jpa.hibernate.ddl-auto = validate\n</code></pre>"},{"location":"MatrixOne/Tutorial/springboot-hibernate-crud-demo/#4-create-table-and-insert-some-data-in-matrixone","title":"4. Create table and insert some data in MatrixOne","text":"<p>Connect to MatrixOne with MySQL client and execute the following SQL statements. You can save these SQL statements in a book.sql under /resource/database/.</p> <pre><code>mysql&gt; USE test;\nmysql&gt; CREATE TABLE IF NOT EXISTS `book` (\n    `id` int(11) NOT NULL AUTO_INCREMENT,\n    `author` varchar(255) DEFAULT NULL,\n    `category` varchar(255) DEFAULT NULL,\n    `name` varchar(255) DEFAULT NULL,\n    `pages` int(11) DEFAULT NULL,\n    `price` int(11) DEFAULT NULL,\n    `publication` varchar(255) DEFAULT NULL,\n    PRIMARY KEY (`id`)\n    );\nmysql&gt; INSERT INTO `book` (`id`, `author`, `category`, `name`, `pages`, `price`, `publication`) VALUES\n(1, 'Antoine de Saint-Exupery', 'Fantancy', 'The Little Prince', 100, 50, 'Amazon'),\n(2, 'J. K. Rowling', 'Fantancy', 'Harry Potter and the Sorcerer''s Stone', 1000, 200, 'Amazon'),\n(3, 'Lewis Carroll', 'Fantancy', 'Alice''s Adventures in Wonderland', 1500, 240, 'Amazon');\n</code></pre>"},{"location":"MatrixOne/Tutorial/springboot-hibernate-crud-demo/#write-code","title":"Write Code","text":"<p>After setting up the environment, we write code to implement a simple CRUD application. After finishing coding, you'll have a project structure as below. You can create these packages and java class in advance. We will code the Create, Update, Insert, Delete, Select operations for this demo application.</p> <p></p>"},{"location":"MatrixOne/Tutorial/springboot-hibernate-crud-demo/#1-bookstorecontrollerjava","title":"1. BookStoreController.java","text":"<pre><code>package com.example.jpademo.controller;\n\nimport com.example.jpademo.entity.Book;\nimport com.example.jpademo.services.IBookStoreService;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.http.HttpStatus;\nimport org.springframework.http.ResponseEntity;\nimport org.springframework.stereotype.Controller;\nimport org.springframework.web.bind.annotation.*;\n\nimport java.util.List;\n\n@Controller\n@RequestMapping(\"bookservice\")\npublic class BookStoreController {\n\n    @Autowired\n    private IBookStoreService service;\n\n    @GetMapping(\"books\")\n    public ResponseEntity&lt;List&lt;Book&gt;&gt; getBooks(){\n\n        List&lt;Book&gt; books = service.getBooks();\n        return new ResponseEntity&lt;List&lt;Book&gt;&gt;(books, HttpStatus.OK);\n\n    }\n\n    @GetMapping(\"books/{id}\")\n    public ResponseEntity&lt;Book&gt; getBook(@PathVariable(\"id\") Integer id){\n        Book book = service.getBook(id);\n        return new ResponseEntity&lt;Book&gt;(book, HttpStatus.OK);\n    }\n\n    @PostMapping(\"books\")\n    public ResponseEntity&lt;Book&gt; createBook(@RequestBody Book book){\n        Book b = service.createBook(book);\n        return new ResponseEntity&lt;Book&gt;(b, HttpStatus.OK);\n\n    }\n\n    @PutMapping(\"books/{id}\")\n    public ResponseEntity&lt;Book&gt; updateBook(@PathVariable(\"id\") int id, @RequestBody Book book){\n\n        Book b = service.updateBook(id, book);\n        return new ResponseEntity&lt;Book&gt;(b, HttpStatus.OK);\n    }\n\n    @DeleteMapping(\"books/{id}\")\n    public ResponseEntity&lt;String&gt; deleteBook(@PathVariable(\"id\") int id){\n        boolean isDeleted = service.deleteBook(id);\n        if(isDeleted){\n            String responseContent = \"Book has been deleted successfully\";\n            return new ResponseEntity&lt;String&gt;(responseContent,HttpStatus.OK);\n        }\n        String error = \"Error while deleting book from database\";\n        return new ResponseEntity&lt;String&gt;(error,HttpStatus.INTERNAL_SERVER_ERROR);\n    }\n\n}\n</code></pre>"},{"location":"MatrixOne/Tutorial/springboot-hibernate-crud-demo/#2-boostoredaojava","title":"2. BooStoreDAO.java","text":"<pre><code>package com.example.jpademo.dao;\n\nimport com.example.jpademo.entity.Book;\nimport org.springframework.stereotype.Repository;\nimport org.springframework.transaction.annotation.Transactional;\n\nimport javax.persistence.EntityManager;\nimport javax.persistence.PersistenceContext;\nimport javax.persistence.Query;\nimport java.util.List;\n\n@Transactional\n@Repository\npublic class BookStoreDAO implements IBookStoreDAO {\n\n    @PersistenceContext\n    private EntityManager entityManager;\n\n    /**\n     * This method is responsible to get all books available in database and return it as List&lt;Book&gt;\n     */\n    @SuppressWarnings(\"unchecked\")\n    @Override\n    public List&lt;Book&gt; getBooks() {\n\n        String hql = \"FROM Book as atcl ORDER BY atcl.id\";\n        return (List&lt;Book&gt;) entityManager.createQuery(hql).getResultList();\n    }\n\n    /**\n     * This method is responsible to get a particular Book detail by given book id\n     */\n    @Override\n    public Book getBook(int bookId) {\n\n        return entityManager.find(Book.class, bookId);\n    }\n\n    /**\n     * This method is responsible to create new book in database\n     */\n    @Override\n    public Book createBook(Book book) {\n        entityManager.persist(book);\n        Book b = getLastInsertedBook();\n        return b;\n    }\n\n    /**\n     * This method is responsible to update book detail in database\n     */\n    @Override\n    public Book updateBook(int bookId, Book book) {\n\n        //First We are taking Book detail from database by given book id and\n        // then updating detail with provided book object\n        Book bookFromDB = getBook(bookId);\n        bookFromDB.setName(book.getName());\n        bookFromDB.setAuthor(book.getAuthor());\n        bookFromDB.setCategory(book.getCategory());\n        bookFromDB.setPublication(book.getPublication());\n        bookFromDB.setPages(book.getPages());\n        bookFromDB.setPrice(book.getPrice());\n\n        entityManager.flush();\n\n        //again i am taking updated result of book and returning the book object\n        Book updatedBook = getBook(bookId);\n\n        return updatedBook;\n    }\n\n    /**\n     * This method is responsible for deleting a particular(which id will be passed that record)\n     * record from the database\n     */\n    @Override\n    public boolean deleteBook(int bookId) {\n        Book book = getBook(bookId);\n        entityManager.remove(book);\n\n        //we are checking here that whether entityManager contains earlier deleted book or not\n        // if contains then book is not deleted from DB that's why returning false;\n        boolean status = entityManager.contains(book);\n        if(status){\n            return false;\n        }\n        return true;\n    }\n\n    /**\n     * This method will get the latest inserted record from the database and return the object of Book class\n     * @return book\n     */\n    private Book getLastInsertedBook(){\n        String hql = \"from Book order by id DESC\";\n        Query query = entityManager.createQuery(hql);\n        query.setMaxResults(1);\n        Book book = (Book)query.getSingleResult();\n        return book;\n    }\n}\n</code></pre>"},{"location":"MatrixOne/Tutorial/springboot-hibernate-crud-demo/#3-ibookstoredaojava","title":"3. IBookStoreDAO.java","text":"<pre><code>package com.example.jpademo.dao;\n\nimport com.example.jpademo.entity.Book;\n\nimport java.util.List;\n\npublic interface IBookStoreDAO {\n\n    List&lt;Book&gt; getBooks();\n    Book getBook(int bookId);\n    Book createBook(Book book);\n    Book updateBook(int bookId,Book book);\n    boolean deleteBook(int bookId);\n}\n</code></pre>"},{"location":"MatrixOne/Tutorial/springboot-hibernate-crud-demo/#4-bookjava","title":"4. Book.java","text":"<pre><code>package com.example.jpademo.entity;\n\nimport javax.persistence.*;\nimport java.io.Serializable;\n\n@Entity\n@Table(name=\"book\")\npublic class Book implements Serializable {\n\n    private static final long serialVersionUID = 1L;\n    @Id\n    @GeneratedValue(strategy= GenerationType.AUTO)\n    @Column(name=\"id\")\n    private int id;\n\n    @Column(name=\"name\")\n    private String name;\n\n    @Column(name=\"author\")\n    private String author;\n\n    @Column(name=\"publication\")\n    private String publication;\n\n    @Column(name=\"category\")\n    private String category;\n\n    @Column(name=\"pages\")\n    private int pages;\n\n    @Column(name=\"price\")\n    private int price;\n\n    public int getId() {\n        return id;\n    }\n\n    public void setId(int id) {\n        this.id = id;\n    }\n\n    public String getName() {\n        return name;\n    }\n\n    public void setName(String name) {\n        this.name = name;\n    }\n\n    public String getAuthor() {\n        return author;\n    }\n\n    public void setAuthor(String author) {\n        this.author = author;\n    }\n\n    public String getPublication() {\n        return publication;\n    }\n\n    public void setPublication(String publication) {\n        this.publication = publication;\n    }\n\n    public String getCategory() {\n        return category;\n    }\n\n    public void setCategory(String category) {\n        this.category = category;\n    }\n\n    public int getPages() {\n        return pages;\n    }\n\n    public void setPages(int pages) {\n        this.pages = pages;\n    }\n\n    public int getPrice() {\n        return price;\n    }\n\n    public void setPrice(int price) {\n        this.price = price;\n    }\n\n}\n</code></pre>"},{"location":"MatrixOne/Tutorial/springboot-hibernate-crud-demo/#5-bookstoreservicejava","title":"5. BookStoreService.java","text":"<pre><code>package com.example.jpademo.services;\n\nimport com.example.jpademo.dao.IBookStoreDAO;\nimport com.example.jpademo.entity.Book;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.stereotype.Service;\n\nimport java.util.List;\n\n@Service\npublic class BookStoreService implements IBookStoreService {\n\n    @Autowired\n    private IBookStoreDAO dao;\n\n    @Override\n    public List&lt;Book&gt; getBooks() {\n        return dao.getBooks();\n    }\n\n    @Override\n    public Book createBook(Book book) {\n        return dao.createBook(book);\n    }\n\n    @Override\n    public Book updateBook(int bookId, Book book) {\n        return dao.updateBook(bookId, book);\n    }\n\n    @Override\n    public Book getBook(int bookId) {\n        return dao.getBook(bookId);\n    }\n\n    @Override\n    public boolean deleteBook(int bookId) {\n        return dao.deleteBook(bookId);\n    }\n\n}\n</code></pre>"},{"location":"MatrixOne/Tutorial/springboot-hibernate-crud-demo/#6-ibookstoreservicejava","title":"6. IBookStoreService.java","text":"<pre><code>package com.example.jpademo.services;\n\nimport com.example.jpademo.entity.Book;\n\nimport java.util.List;\n\npublic interface IBookStoreService {\n\n    List&lt;Book&gt; getBooks();\n    Book createBook(Book book);\n    Book updateBook(int bookId, Book book);\n    Book getBook(int bookId);\n    boolean deleteBook(int bookId);\n\n}\n</code></pre>"},{"location":"MatrixOne/Tutorial/springboot-hibernate-crud-demo/#7-jpademoapplication","title":"7. JpademoApplication","text":"<pre><code>package com.example.jpademo;\n\nimport org.springframework.boot.SpringApplication;\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\n\n@SpringBootApplication\npublic class JpademoApplication {\n\n    public static void main(String[] args) {\n        SpringApplication.run(JpademoApplication.class, args);\n    }\n\n}\n</code></pre>"},{"location":"MatrixOne/Tutorial/springboot-hibernate-crud-demo/#test","title":"Test","text":"<p>Build and test this project.</p> <p></p> <p>When you see the following example messages, the application is well launched; we can call REST endpoints using POSTMAN.</p> <pre><code>2022-10-27 11:16:16.793  INFO 93488 --- [           main] com.example.jpademo.JpademoApplication   : Starting JpademoApplication on username-macbookpro.local with PID 93488 (/Users/username/IdeaProjects/jpademo/target/classes started by username in /Users/username/IdeaProjects/jpademo)\n2022-10-27 11:16:16.796  INFO 93488 --- [           main] com.example.jpademo.JpademoApplication   : No active profile set, falling back to default profiles: default\n2022-10-27 11:16:18.022  INFO 93488 --- [           main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.\n2022-10-27 11:16:18.093  INFO 93488 --- [           main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 50ms. Found 0 JPA repository interfaces.\n2022-10-27 11:16:18.806  INFO 93488 --- [           main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)\n2022-10-27 11:16:18.814  INFO 93488 --- [           main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]\n2022-10-27 11:16:18.814  INFO 93488 --- [           main] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.41]\n2022-10-27 11:16:18.886  INFO 93488 --- [           main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext\n2022-10-27 11:16:18.886  INFO 93488 --- [           main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 2005 ms\n2022-10-27 11:16:19.068  INFO 93488 --- [           main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]\n2022-10-27 11:16:19.119  INFO 93488 --- [           main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 5.4.25.Final\n2022-10-27 11:16:19.202  INFO 93488 --- [           main] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.1.2.Final}\n2022-10-27 11:16:19.282  INFO 93488 --- [           main] com.zaxxer.hikari.HikariDataSource       : defaultDataSource - Starting...\n2022-10-27 11:16:20.025  INFO 93488 --- [           main] com.zaxxer.hikari.HikariDataSource       : defaultDataSource - Start completed.\n2022-10-27 11:16:20.035  INFO 93488 --- [           main] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect\n2022-10-27 11:16:21.929  INFO 93488 --- [           main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]\n2022-10-27 11:16:21.937  INFO 93488 --- [           main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'\n2022-10-27 11:16:22.073  WARN 93488 --- [           main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning\n2022-10-27 11:16:22.221  INFO 93488 --- [           main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'\n2022-10-27 11:16:22.415  INFO 93488 --- [           main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''\n2022-10-27 11:16:22.430  INFO 93488 --- [           main] com.example.jpademo.JpademoApplication   : Started JpademoApplication in 6.079 seconds (JVM running for 8.765)\n2022-10-27 11:16:40.180  INFO 93488 --- [nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'\n2022-10-27 11:16:40.183  INFO 93488 --- [nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'\n2022-10-27 11:16:40.249  INFO 93488 --- [nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 66 ms\n</code></pre>"},{"location":"MatrixOne/Tutorial/springboot-hibernate-crud-demo/#1-to-get-list-of-books-call-following-endpoint-with-get-request","title":"1. To get list of books call following endpoint with GET Request","text":"<pre><code> http://localhost:8080/bookservice/books\n</code></pre>"},{"location":"MatrixOne/Tutorial/springboot-hibernate-crud-demo/#2-to-create-new-book-use-following-url-with-post-request","title":"2. To Create New Book use following url with POST Request","text":"<pre><code>http://localhost:8080/bookservice/books\n</code></pre> <p>Set content type as in header as <code>application/json</code>, set request body as raw with JSON payload</p> <pre><code>  {\n    \"name\": \"The Lion, the Witch and the Wardrobe\",\n    \"author\": \"C. S. Lewis\",\n    \"publication\": \"Amazon\",\n    \"category\": \"Fantancy\",\n    \"pages\": 123,\n    \"price\": 10\n  }\n</code></pre> <p></p>"},{"location":"MatrixOne/Tutorial/springboot-hibernate-crud-demo/#3-to-get-a-particular-book-use-following-url-with-get-request-type-in-postman","title":"3. To get a particular book, use following url with <code>GET</code> request type in postman","text":"<pre><code>  http://localhost:8080/bookservice/books/&lt;id&gt;\n</code></pre>"},{"location":"MatrixOne/Tutorial/springboot-hibernate-crud-demo/#4-to-update-book-in-database-use-following-url-with-put-request-type-in-postman","title":"4. To update Book in database, use following url with <code>PUT</code> request type in postman","text":"<pre><code>    http://localhost:8080/bookservice/books/&lt;id&gt;\n</code></pre> <ul> <li> <p>Set content type as in header as <code>application/json</code></p> </li> <li> <p>Set request body as raw with JSON payload</p> </li> </ul> <pre><code> {\n    \"name\": \"Black Beauty\",\n    \"author\": \"Anna Sewell\",\n    \"publication\": \"Amazon\",\n    \"category\": \"Fantancy\",\n    \"pages\": 134,\n    \"price\": 12\n  }\n</code></pre> <p></p>"},{"location":"MatrixOne/Tutorial/springboot-hibernate-crud-demo/#5-to-delete-a-particular-book-from-database-use-following-url-with-delete-request-type-in-postman","title":"5. To delete a particular Book from database, use following url with <code>DELETE</code> request type in postman","text":"<pre><code>  http://localhost:8080/bookservice/books/&lt;id&gt;\n</code></pre> <pre><code>mysql&gt; select * from book;\n+----+--------------------------+----------+----------------------------------+-------+-------+-------------+\n| id | author                   | category | name                             | pages | price | publication |\n+----+--------------------------+----------+----------------------------------+-------+-------+-------------+\n|  1 | Antoine de Saint-Exupery | Fantancy | The Little Prince                |   100 |    50 | Amazon      |\n|  2 | Anna Sewell              | Fantancy | Black Beauty                     |   134 |    12 | Amazon      |\n|  3 | Lewis Carroll            | Fantancy | Alice's Adventures in Wonderland |  1500 |   240 | Amazon      |\n+----+--------------------------+----------+----------------------------------+-------+-------+-------------+\n3 rows in set (0.02 sec)\n</code></pre>"},{"location":"MatrixOne/Tutorial/springboot-mybatis-crud-demo/","title":"SpringBoot and MyBatis CRUD demo","text":"<p>This tutorial completes a simple Demo based on SpringBoot+Mybatis+MatrixOne+Intellij IDEA , and realizes the basic CRUD function.</p>"},{"location":"MatrixOne/Tutorial/springboot-mybatis-crud-demo/#before-you-start","title":"Before you start","text":"<p>A brief introduction about these softwares concerned:</p> <ul> <li>MyBatis: It is a popular persistence framework that can customize SQL and support for complex reports and advanced mappings. We only need to focus on the SQL itself in our project.</li> <li>Intellij IDEA: IntelliJ IDEA is a popular IDE for Java developers. It has a lot of plugins that can enhance our efficiency.</li> <li>Maven: Maven is a powerful management tool in Java that can automatically download and import Jar file according to the configuration in the pom.xml file. This feature reduces the conflicts between different versions of Jar files.</li> <li>Spring: Spring is one of the most popular frameworks in Java and more and more enterprise is using the Spring framework to build their project. Spring Boot is built on top of the conventional spring framework. So, it provides all the features of spring and is yet easier to use than spring.</li> </ul>"},{"location":"MatrixOne/Tutorial/springboot-mybatis-crud-demo/#set-up-environment","title":"Set up environment","text":""},{"location":"MatrixOne/Tutorial/springboot-mybatis-crud-demo/#1-install-and-launch-matrixone","title":"1. Install and Launch MatrixOne","text":"<p>Follow the installation instruction and launch MatrixOne. Create a database <code>test</code> by MySQL client.</p> <pre><code>mysql&gt; create database test;\n</code></pre>"},{"location":"MatrixOne/Tutorial/springboot-mybatis-crud-demo/#2-create-a-new-spring-boot-project-using-intellij-idea","title":"2. Create a new Spring Boot Project Using IntelliJ IDEA","text":"<p>Choose Spring Initializer, and name the project as you want.</p> <p></p> <p>Choose Spring Web, MyBatis Framework, JDBC API and MySQL Driver as dependencies for this project.</p> <p></p> <p>Click Create,  the project will be created. The dependencies are listed in the pom.xml file. Usually you don't need to modify anything.</p> <pre><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\"&gt;\n    &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;\n    &lt;groupId&gt;com.example&lt;/groupId&gt;\n    &lt;artifactId&gt;mybatis-demo&lt;/artifactId&gt;\n    &lt;version&gt;0.0.1-SNAPSHOT&lt;/version&gt;\n    &lt;name&gt;mybatis-demo&lt;/name&gt;\n    &lt;description&gt;mybatis-demo&lt;/description&gt;\n\n    &lt;properties&gt;\n        &lt;java.version&gt;1.8&lt;/java.version&gt;\n        &lt;project.build.sourceEncoding&gt;UTF-8&lt;/project.build.sourceEncoding&gt;\n        &lt;project.reporting.outputEncoding&gt;UTF-8&lt;/project.reporting.outputEncoding&gt;\n        &lt;spring-boot.version&gt;2.3.7.RELEASE&lt;/spring-boot.version&gt;\n    &lt;/properties&gt;\n\n    &lt;dependencies&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n            &lt;artifactId&gt;spring-boot-starter-jdbc&lt;/artifactId&gt;\n        &lt;/dependency&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n            &lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt;\n        &lt;/dependency&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;org.mybatis.spring.boot&lt;/groupId&gt;\n            &lt;artifactId&gt;mybatis-spring-boot-starter&lt;/artifactId&gt;\n            &lt;version&gt;2.1.4&lt;/version&gt;\n        &lt;/dependency&gt;\n\n        &lt;dependency&gt;\n            &lt;groupId&gt;mysql&lt;/groupId&gt;\n            &lt;artifactId&gt;mysql-connector-java&lt;/artifactId&gt;\n            &lt;scope&gt;runtime&lt;/scope&gt;\n        &lt;/dependency&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n            &lt;artifactId&gt;spring-boot-starter-test&lt;/artifactId&gt;\n            &lt;scope&gt;test&lt;/scope&gt;\n            &lt;exclusions&gt;\n                &lt;exclusion&gt;\n                    &lt;groupId&gt;org.junit.vintage&lt;/groupId&gt;\n                    &lt;artifactId&gt;junit-vintage-engine&lt;/artifactId&gt;\n                &lt;/exclusion&gt;\n            &lt;/exclusions&gt;\n        &lt;/dependency&gt;\n    &lt;/dependencies&gt;\n\n    &lt;dependencyManagement&gt;\n        &lt;dependencies&gt;\n            &lt;dependency&gt;\n                &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n                &lt;artifactId&gt;spring-boot-dependencies&lt;/artifactId&gt;\n                &lt;version&gt;${spring-boot.version}&lt;/version&gt;\n                &lt;type&gt;pom&lt;/type&gt;\n                &lt;scope&gt;import&lt;/scope&gt;\n            &lt;/dependency&gt;\n        &lt;/dependencies&gt;\n    &lt;/dependencyManagement&gt;\n\n    &lt;build&gt;\n        &lt;plugins&gt;\n            &lt;plugin&gt;\n                &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;\n                &lt;artifactId&gt;maven-compiler-plugin&lt;/artifactId&gt;\n                &lt;version&gt;3.8.1&lt;/version&gt;\n                &lt;configuration&gt;\n                    &lt;source&gt;1.8&lt;/source&gt;\n                    &lt;target&gt;1.8&lt;/target&gt;\n                    &lt;encoding&gt;UTF-8&lt;/encoding&gt;\n                &lt;/configuration&gt;\n            &lt;/plugin&gt;\n            &lt;plugin&gt;\n                &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n                &lt;artifactId&gt;spring-boot-maven-plugin&lt;/artifactId&gt;\n                &lt;version&gt;2.3.7.RELEASE&lt;/version&gt;\n                &lt;configuration&gt;\n                    &lt;mainClass&gt;com.example.mybatisdemo.MybatisDemoApplication&lt;/mainClass&gt;\n                &lt;/configuration&gt;\n                &lt;executions&gt;\n                    &lt;execution&gt;\n                        &lt;id&gt;repackage&lt;/id&gt;\n                        &lt;goals&gt;\n                            &lt;goal&gt;repackage&lt;/goal&gt;\n                        &lt;/goals&gt;\n                    &lt;/execution&gt;\n                &lt;/executions&gt;\n            &lt;/plugin&gt;\n        &lt;/plugins&gt;\n    &lt;/build&gt;\n\n&lt;/project&gt;\n</code></pre>"},{"location":"MatrixOne/Tutorial/springboot-mybatis-crud-demo/#3-modify-the-applicationproperties-file","title":"3. Modify the application.properties file","text":"<p>Under resources folder, the MatrixOne connection need to be configured in application.properties file.</p> <pre><code># Application Name\nspring.application.name=MyBatisDemo\n# Database driver\nspring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver\n# Data Source name\nspring.datasource.name=defaultDataSource\n\n# Database connection url, modify to MatrixOne address and port, with paratemers\nspring.datasource.url=jdbc:mysql://127.0.0.1:6001/test?characterSetResults=UTF-8&amp;continueBatchOnError=false&amp;useServerPrepStmts=true&amp;alwaysSendSetIsolation=false&amp;useLocalSessionState=true&amp;zeroDateTimeBehavior=CONVERT_TO_NULL&amp;failoverReadOnly=false&amp;serverTimezone=Asia/Shanghai&amp;socketTimeout=30000\n# Database username and password\nspring.datasource.username=root\nspring.datasource.password=111\n\n# Mybatis mapper location\nmybatis.mapper-locations=classpath:mapping/*xml\n# Mybatis entity package\nmybatis.type-aliases-package=com.example.mybatisdemo.entity\n# Web application port\nserver.port=8080\n</code></pre>"},{"location":"MatrixOne/Tutorial/springboot-mybatis-crud-demo/#write-code","title":"Write Code","text":"<p>After setting up the environment, we write code to implement a simple CRUD application. After finishing coding, you'll have a project structure as below. You can create these packages and java class in advance. We will code the Create, Update, Insert, Delete, Select operations for this demo application.</p> <p></p>"},{"location":"MatrixOne/Tutorial/springboot-mybatis-crud-demo/#1-usercontrollerjava","title":"1. UserController.java","text":"<pre><code>package com.example.mybatisdemo.controller;\n\nimport com.example.mybatisdemo.entity.User;\nimport com.example.mybatisdemo.service.UserService;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.web.bind.annotation.RequestMapping;\nimport org.springframework.web.bind.annotation.RequestMethod;\nimport org.springframework.web.bind.annotation.ResponseBody;\nimport org.springframework.web.bind.annotation.RestController;\n\n@RestController\n@RequestMapping(\"/test\")\npublic class UserController {\n\n    String tableName = \"user\";\n    @Autowired\n    private UserService userService;\n\n    @RequestMapping(value = \"/create\", produces = \"application/json;charset=UTF-8\", method = RequestMethod.GET)\n    @ResponseBody\n    public String createTable(){\n        return userService.createTable(tableName);\n    }\n\n    @RequestMapping(value = \"/selectUserByid\", produces = \"application/json;charset=UTF-8\", method = RequestMethod.GET)\n    @ResponseBody\n    public String GetUser(User user){\n        return userService.Sel(user).toString();\n    }\n\n    @RequestMapping(value = \"/add\", produces = \"application/json;charset=UTF-8\", method = RequestMethod.GET)\n    public String Add(User user){\n        return userService.Add(user);\n    }\n\n    @RequestMapping(value = \"/update\", produces = \"application/json;charset=UTF-8\", method = RequestMethod.GET)\n    public String Update(User user){\n        return userService.Update(user);\n    }\n\n    @RequestMapping(value = \"/delete\", produces = \"application/json;charset=UTF-8\", method = RequestMethod.GET)\n    public String Delete(User user){\n        return userService.Delete(user);\n    }\n}\n</code></pre>"},{"location":"MatrixOne/Tutorial/springboot-mybatis-crud-demo/#2-userjava","title":"2. User.java","text":"<pre><code>package com.example.mybatisdemo.entity;\n\nimport org.springframework.web.bind.annotation.RequestMapping;\nimport org.springframework.web.bind.annotation.RequestMethod;\n\npublic class User {\n    private Integer id;\n    private String username;\n    private String password;\n    private String address;\n\n    public User(Integer id, String username, String password, String address) {\n        this.id = id;\n        this.username = username;\n        this.password = password;\n        this.address = address;\n    }\n\n    public Integer getId() {\n        return id;\n    }\n\n    public String getUsername() {\n        return username;\n    }\n\n    public String getPassword() {\n        return password;\n    }\n\n    public String getAddress() {\n        return address;\n    }\n\n    public void setId(Integer id) {\n        this.id = id;\n    }\n\n    public void setUsername(String username) {\n        this.username = username;\n    }\n\n    public void setPassword(String password) {\n        this.password = password;\n    }\n\n    public void setAddress(String address) {\n        this.address = address;\n    }\n\n    @Override\n    public String toString() {\n        return \"User{\" +\n                \"id=\" + id +\n                \", username='\" + username + '\\'' +\n                \", password='\" + password + '\\'' +\n                \", address='\" + address + '\\'' +\n                '}';\n    }\n}\n</code></pre>"},{"location":"MatrixOne/Tutorial/springboot-mybatis-crud-demo/#3-usermapperjava","title":"3. UserMapper.java","text":"<pre><code>package com.example.mybatisdemo.mapper;\n\nimport com.example.mybatisdemo.entity.User;\nimport org.apache.ibatis.annotations.Param;\nimport org.springframework.stereotype.Repository;\n\n@Repository\npublic interface UserMapper {\n\n    int createTable(@Param(\"tableName\") String tableName);\n\n    User Sel(@Param(\"user\")User user);\n\n    int Add(@Param(\"user\")User user);\n\n    int Update(@Param(\"user\")User user);\n\n    int Delete(@Param(\"user\")User user);\n\n}\n</code></pre>"},{"location":"MatrixOne/Tutorial/springboot-mybatis-crud-demo/#4-userservicejava","title":"4. UserService.java","text":"<pre><code>package com.example.mybatisdemo.service;\n\nimport com.example.mybatisdemo.entity.User;\nimport com.example.mybatisdemo.mapper.UserMapper;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.stereotype.Service;\n\n@Service\npublic class UserService {\n    @Autowired\n    UserMapper userMapper;\n\n    public String createTable(String table){\n        int a = userMapper.createTable(table);\n        if (a == 1) {\n            return \"Create table failed\";\n        } else {\n            return \"Create table successfully\";\n        }\n    }\n\n    public User Sel(User user) {\n        return userMapper.Sel(user);\n    }\n\n    public String Add(User user) {\n        int a = userMapper.Add(user);\n        if (a == 1) {\n            return \"Add user successfully\";\n        } else {\n            return \"Add user failed\";\n        }\n    }\n\n    public String Update(User user) {\n        int a = userMapper.Update(user);\n        if (a == 1) {\n            return \"Update user successfully\";\n        } else {\n            return \"Update user failed\";\n        }\n    }\n\n    public String Delete(User user) {\n        int a = userMapper.Delete(user);\n        if (a == 1) {\n            return \"Delete user successfully\";\n        } else {\n            return \"Delete user failed\";\n        }\n    }\n\n};\n</code></pre>"},{"location":"MatrixOne/Tutorial/springboot-mybatis-crud-demo/#5-mybatisdemoapplicationjava","title":"5. MyBatisDemoApplication.java","text":"<pre><code>package com.example.mybatisdemo;\n\nimport org.mybatis.spring.annotation.MapperScan;\nimport org.springframework.boot.SpringApplication;\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\n\n@MapperScan(\"com.example.mybatisdemo.mapper\")\n@SpringBootApplication\npublic class MyBatisDemoApplication {\n    public static void main(String[] args) {\n        SpringApplication.run(MyBatisDemoApplication.class, args);\n    }\n}\n</code></pre>"},{"location":"MatrixOne/Tutorial/springboot-mybatis-crud-demo/#6-usermapperxml","title":"6. UserMapper.xml","text":"<pre><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;!DOCTYPE mapper PUBLIC \"-//mybatis.org//DTD Mapper 3.0//EN\" \"http://mybatis.org/dtd/mybatis-3-mapper.dtd\"&gt;\n\n&lt;mapper namespace=\"com.example.mybatisdemo.mapper.UserMapper\"&gt;\n\n    &lt;resultMap id=\"BaseResultMap\" type=\"com.example.mybatisdemo.entity.User\"&gt;\n        &lt;result column=\"id\" jdbcType=\"INTEGER\" property=\"id\"/&gt;\n        &lt;result column=\"userName\" jdbcType=\"VARCHAR\" property=\"username\"/&gt;\n        &lt;result column=\"passWord\" jdbcType=\"VARCHAR\" property=\"password\"/&gt;\n        &lt;result column=\"realName\" jdbcType=\"VARCHAR\" property=\"address\"/&gt;\n    &lt;/resultMap&gt;\n\n    &lt;update id=\"createTable\" parameterType=\"string\"&gt;\n        CREATE TABLE ${tableName} (\n            `id` int(11) NOT NULL AUTO_INCREMENT,\n            `username` varchar(255) DEFAULT NULL,\n            `password` varchar(255) DEFAULT NULL,\n            `address` varchar(255) DEFAULT NULL,\n            PRIMARY KEY (`id`)\n        );\n    &lt;/update&gt;\n\n    &lt;select id=\"Sel\" resultType=\"com.example.mybatisdemo.entity.User\"&gt;\n        select * from user where 1=1\n        &lt;if test=\"user.id != null\"&gt;\n            AND id = #{user.id}\n        &lt;/if&gt;\n    &lt;/select&gt;\n\n    &lt;insert id=\"Add\" parameterType=\"com.example.mybatisdemo.entity.User\"&gt;\n        INSERT INTO user\n        &lt;trim prefix=\"(\" suffix=\")\" suffixOverrides=\",\"&gt;\n            &lt;if test=\"user.username != null\"&gt;\n                username,\n            &lt;/if&gt;\n            &lt;if test=\"user.password != null\"&gt;\n                password,\n            &lt;/if&gt;\n            &lt;if test=\"user.address != null\"&gt;\n                address,\n            &lt;/if&gt;\n        &lt;/trim&gt;\n        &lt;trim prefix=\"VALUES (\" suffix=\")\" suffixOverrides=\",\"&gt;\n            &lt;if test=\"user.username != null\"&gt;\n                #{user.username,jdbcType=VARCHAR},\n            &lt;/if&gt;\n            &lt;if test=\"user.password != null\"&gt;\n                #{user.password,jdbcType=VARCHAR},\n            &lt;/if&gt;\n            &lt;if test=\"user.address != null\"&gt;\n                #{user.address,jdbcType=VARCHAR},\n            &lt;/if&gt;\n        &lt;/trim&gt;\n    &lt;/insert&gt;\n\n    &lt;update id=\"Update\" parameterType=\"com.example.mybatisdemo.entity.User\"&gt;\n        UPDATE user\n        &lt;set&gt;\n            &lt;if test=\"user.username != null\"&gt;\n                username = #{user.username},\n            &lt;/if&gt;\n            &lt;if test=\"user.password != null\"&gt;\n                password = #{user.password},\n            &lt;/if&gt;\n            &lt;if test=\"user.address != null\"&gt;\n                address = #{user.address},\n            &lt;/if&gt;\n        &lt;/set&gt;\n        WHERE\n        id=#{user.id}\n    &lt;/update&gt;\n\n    &lt;delete id=\"Delete\"  parameterType=\"com.example.mybatisdemo.entity.User\"&gt;\n        DELETE FROM user WHERE id = #{user.id}\n    &lt;/delete&gt;\n\n&lt;/mapper&gt;\n</code></pre>"},{"location":"MatrixOne/Tutorial/springboot-mybatis-crud-demo/#test","title":"Test","text":"<p>Build and launch this project.</p> <p></p> <p>When you see the following example messages, the application is well-launched, and you can open your browser and send HTTP requests.</p> <pre><code>2022-10-26 16:13:24.030  INFO 60253 --- [           main] c.e.mybatisdemo.MyBatisDemoApplication   : Starting MyBatisDemoApplication on username-macbookpro.local with PID 60253 (/Users/username/IdeaProjects/MyBatisDemo/target/classes started by username in /Users/username/IdeaProjects/MyBatisDemo)\n2022-10-26 16:13:24.035  INFO 60253 --- [           main] c.e.mybatisdemo.MyBatisDemoApplication   : No active profile set, falling back to default profiles: default\n2022-10-26 16:13:25.415  INFO 60253 --- [           main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)\n2022-10-26 16:13:25.421  INFO 60253 --- [           main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]\n2022-10-26 16:13:25.421  INFO 60253 --- [           main] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.41]\n2022-10-26 16:13:25.476  INFO 60253 --- [           main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext\n2022-10-26 16:13:25.477  INFO 60253 --- [           main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1390 ms\n2022-10-26 16:13:26.020  INFO 60253 --- [           main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'\n2022-10-26 16:13:26.248  INFO 60253 --- [           main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''\n2022-10-26 16:13:26.272  INFO 60253 --- [           main] c.e.mybatisdemo.MyBatisDemoApplication   : Started MyBatisDemoApplication in 2.669 seconds (JVM running for 3.544)\n</code></pre>"},{"location":"MatrixOne/Tutorial/springboot-mybatis-crud-demo/#1-test-create-table","title":"1. Test Create Table","text":"<p>Launch your browser and type the following url:</p> <pre><code>http://localhost:8080/test/create\n</code></pre> <p></p> <p>In MySQL client, we can verify if the table has been successfully created.</p> <pre><code>mysql&gt; use test;\nReading table information for completion of table and column names\nYou can turn off this feature to get a quicker startup with -A\n\nDatabase changed\nmysql&gt; show tables;\n+----------------+\n| tables_in_test |\n+----------------+\n| user           |\n+----------------+\n1 row in set (0.00 sec)\n\nmysql&gt; show create table user;\n+-------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+\n| Table | Create Table                                                                                                                                                                                  |\n+-------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+\n| user  | CREATE TABLE `user` (\n`id` INT NOT NULL AUTO_INCREMENT,\n`username` VARCHAR(255) DEFAULT null,\n`password` VARCHAR(255) DEFAULT null,\n`address` VARCHAR(255) DEFAULT null,\nPRIMARY KEY (`id`)\n) |\n+-------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+\n1 row in set (0.01 sec)\n</code></pre>"},{"location":"MatrixOne/Tutorial/springboot-mybatis-crud-demo/#2-test-add-user","title":"2. Test Add User","text":"<p>Launch your browser and type the following url:</p> <pre><code>http://localhost:8080/test/add?username=tom&amp;password=123456&amp;address=shanghai\n</code></pre> <p></p> <p>In MySQL client, we can verify if the record is added.</p> <pre><code>mysql&gt; select * from user;\n+------+----------+----------+----------+\n| id   | username | password | address  |\n+------+----------+----------+----------+\n|    1 | tom      | 123456   | shanghai |\n+------+----------+----------+----------+\n1 row in set (0.00 sec)\n</code></pre>"},{"location":"MatrixOne/Tutorial/springboot-mybatis-crud-demo/#3-test-select-user","title":"3. Test Select User","text":"<p>Launch your browser and type the following url:</p> <pre><code>http://localhost:8080/test/selectUserByid?id=1\n</code></pre> <p></p> <p>We can directly get the queried result from the browser.</p>"},{"location":"MatrixOne/Tutorial/springboot-mybatis-crud-demo/#4-test-update-user","title":"4. Test Update User","text":"<p>Launch your browser and type the following url:</p> <pre><code>http://localhost:8080/test/update/username=tom&amp;password=654321&amp;address=beijing\n</code></pre> <p></p> <p>In MySQL client, we can verify if the record is updated.</p> <pre><code>mysql&gt; select * from user;\n+------+----------+----------+---------+\n| id   | username | password | address |\n+------+----------+----------+---------+\n|    1 | tom      | 654321   | beijing |\n+------+----------+----------+---------+\n1 row in set (0.00 sec)\n</code></pre>"},{"location":"MatrixOne/Tutorial/springboot-mybatis-crud-demo/#5-test-delete-user","title":"5. Test Delete User","text":"<p>Launch your browser and type the following url:</p> <pre><code>http://localhost:8080/test/delete?id=1\n</code></pre> <p></p> <p>In MySQL client, we can verify if the record is deleted.</p> <pre><code>mysql&gt; select * from user;\nEmpty set (0.00 sec)\n</code></pre>"},{"location":"MatrixOne/Tutorial/sqlalchemy-python-crud-demo/","title":"SQLAlchemy CRUD demo","text":"<p>This tutorial shows you how to build a simple Python+SQLAlchemy CRUD(Create, Read, Update, Delete) application with MatrixOne. SQLAlchemy is one of the most popular ORM tools in python language.</p>"},{"location":"MatrixOne/Tutorial/sqlalchemy-python-crud-demo/#before-you-start","title":"Before you start","text":"<p>A brief introduction about these softwares concerned:</p> <ul> <li>SQLAlchemy: SQLAlchemy is a python library that facilitates the communication between Python programs and databases. Most of the times, this library is used as an Object Relational Mapper (ORM) tool that translates Python classes to tables on relational databases and automatically converts function calls to SQL statements.</li> <li>Faker: Faker is a Python library that generates fake data. Fake data is often used for testing or filling databases with some dummy data.</li> </ul>"},{"location":"MatrixOne/Tutorial/sqlalchemy-python-crud-demo/#setup-your-environment","title":"Setup your environment","text":"<p>Before you start, make sure you have downloaded and installed the following software.</p> <ol> <li> <p>Make sure you have already installed and launched MatrixOne. Connect to MatrixOne and create a database by MySQL client.</p> <pre><code>mysql&gt; create database test;\n</code></pre> </li> <li> <p>Make sure you have already installed Python 3.8(or plus) version.  </p> <pre><code>#To check with Python installation and its version\npython3 -V\n</code></pre> </li> <li> <p>Make sure you have already installed MySQL.</p> </li> <li> <p>Download and install sqlalchemy, pymysql, cryptography and faker tool.</p> <pre><code>pip3 install sqlalchemy\npip3 install pymysql\npip3 install cryptography\npip3 install faker\n\n#If you are in China mainland and have a low downloading speed, you can speed up the download by following commands.\npip3 install sqlalchemy -i https://pypi.tuna.tsinghua.edu.cn/simple\npip3 install pymysql -i https://pypi.tuna.tsinghua.edu.cn/simple\npip3 install cryptography -i https://pypi.tuna.tsinghua.edu.cn/simple\npip3 install faker -i https://pypi.tuna.tsinghua.edu.cn/simple\n</code></pre> </li> </ol> <p>As we have explained how to connect to MatrixOne by SQLAlchemy in the other tutorial, we will focus on the CRUD(Create, Read, Update, Delete) implementations in this tutorial.</p>"},{"location":"MatrixOne/Tutorial/sqlalchemy-python-crud-demo/#create","title":"Create","text":"<p>As an Object Relational Mapper(ORM) tool, SQLAlchemy allows developers to create python class to map the table in relational database. In the example below, we will create a <code>User</code> class which is a representation of <code>User</code> table in MatrixOne, the code which defines <code>User</code> is equal to a SQL statement as:</p> <pre><code>CREATE TABLE `User` (\n`id` INT NOT NULL AUTO_INCREMENT,\n`cname` VARCHAR(64) DEFAULT NULL,\n`caddress` VARCHAR(512) DEFAULT NULL,\nPRIMARY KEY (`id`)\n)\n</code></pre> <p>Let's now create this example in a text file named <code>sqlalchemy_create.py</code>, and put the following code:</p> <pre><code>from faker import Factory\nfrom sqlalchemy import create_engine, Column, Integer, String\nfrom sqlalchemy.ext.declarative import declarative_base\nfrom sqlalchemy.orm import sessionmaker\n\nfaker = Factory.create()\n\nengine = create_engine('mysql+pymysql://root:111@127.0.0.1:6001/test')\n\nSession = sessionmaker(bind=engine)\nsession = Session()\n\nBase = declarative_base()\n\n\nclass Customer(Base):\n    __tablename__ = \"Customer\"\n    id = Column(Integer, primary_key=True,autoincrement=True)\n    cname = Column(String(64))\n    caddress = Column(String(512))\n\n    def __init__(self,name,address):\n        self.cname = name\n        self.caddress = address\n\n    def __str__(self):\n        return \"cname:\"+self.cname +\" caddress:\"+self.caddress\n\n    def __repr__(self):\n        return \"cname:\"+self.cname +\" caddress:\"+self.caddress\n\n\n# Generate 10 Customer records\nCustomers = [Customer(name= faker.name(),address = faker.address()) for i in range(10)]\n\n# Create the table\nBase.metadata.create_all(engine)\n\n# Insert all customer records to Customer table\nsession.add_all(Customers)\n\nsession.commit()\n</code></pre> <p>Execute this file in a terminal with such command:</p> <pre><code>&gt; python3 sqlalchemy_create.py\n</code></pre> <p>Then we verify the table creation in MySQL client:</p> <pre><code>mysql&gt; show tables;\n+----------------+\n| tables_in_test |\n+----------------+\n| Customer       |\n+----------------+\n1 row in set (0.04 sec)\nmysql&gt; select * from `Customer`;\n+------+------------------+-----------------------------------------------------+\n| id   | cname            | caddress                                            |\n+------+------------------+-----------------------------------------------------+\n|    1 | Wendy Luna       | 002 Brian Plaza\nAndrewhaven, SC 88456               |\n|    2 | Meagan Rodriguez | USCGC Olson\nFPO AP 21249                            |\n|    3 | Angela Ramos     | 029 Todd Curve Apt. 352\nMooreville, FM 15950        |\n|    4 | Lisa Bruce       | 68103 Mackenzie Mountain\nNorth Andrew, UT 29853     |\n|    5 | Julie Moore      | Unit 1117 Box 1029\nDPO AP 87468                     |\n|    6 | David Massey     | 207 Wayne Groves Apt. 733\nVanessashire, NE 34549    |\n|    7 | David Mccann     | 97274 Sanders Tunnel Apt. 480\nAnthonyberg, DC 06558 |\n|    8 | Morgan Price     | 57463 Lisa Drive\nThompsonshire, NM 88077            |\n|    9 | Samuel Griffin   | 186 Patel Crossing\nNorth Stefaniechester, WV 08221  |\n|   10 | Tristan Pierce   | 593 Blankenship Rapids\nNew Jameshaven, SD 89585     |\n+------+------------------+-----------------------------------------------------+\n10 rows in set (0.03 sec)\n</code></pre>"},{"location":"MatrixOne/Tutorial/sqlalchemy-python-crud-demo/#read","title":"Read","text":"<p>In the following example, we read data from the <code>Customer</code> table by two ways.</p> <p>The first one is a full scan, which equals to a query as:</p> <pre><code>select * from `Customer`\n</code></pre> <p>The second one is a point query, which equals to a query as:</p> <pre><code>select * from `Customer` where `cname` = 'David Mccann';\n</code></pre> <p>We create this example in a text file named <code>sqlalchemy_read.py</code>, and put the following code:</p> <pre><code>from sqlalchemy import create_engine, Column, Integer, String\nfrom sqlalchemy.ext.declarative import declarative_base\nfrom sqlalchemy.orm import sessionmaker\n\nengine = create_engine('mysql+pymysql://root:111@127.0.0.1:6001/test')\n\nSession = sessionmaker(bind=engine)\nsession = Session()\n\nBase = declarative_base()\n\nclass Customer(Base):\n    __tablename__ = \"Customer\"\n    id = Column(Integer, primary_key=True,autoincrement=True)\n    cname = Column(String(64))\n    caddress = Column(String(512))\n\n    def __init__(self,name,address):\n        self.cname = name\n        self.caddress = address\n\n    def __str__(self):\n        return \"cname:\"+self.cname +\" caddress:\"+self.caddress\n\n    def __repr__(self):\n        return \"cname:\"+self.cname +\" caddress:\"+self.caddress\n\n\n# query all data\ncustomers = session.query(Customer).all()\n\nfor customer in customers:\n     print(customer.__str__() +\"\\n--------------------------\\n\")\n\n# query with a filter condition\nMccann = session.query(Customer).filter_by(cname='David Mccann').first()\nprint(Mccann)\nprint(\"\\n------------------------\\n\")\n</code></pre> <p>Execute this file in a terminal with such command and we will see the query result:</p> <pre><code>&gt; python3 sqlalchemy_read.py\ncname:Wendy Luna caddress:002 Brian Plaza\nAndrewhaven, SC 88456\n--------------------------\n\ncname:Meagan Rodriguez caddress:USCGC Olson\nFPO AP 21249\n--------------------------\n\ncname:Angela Ramos caddress:029 Todd Curve Apt. 352\nMooreville, FM 15950\n--------------------------\n\ncname:Lisa Bruce caddress:68103 Mackenzie Mountain\nNorth Andrew, UT 29853\n--------------------------\n\ncname:Julie Moore caddress:Unit 1117 Box 1029\nDPO AP 87468\n--------------------------\n\ncname:David Massey caddress:207 Wayne Groves Apt. 733\nVanessashire, NE 34549\n--------------------------\n\ncname:David Mccann caddress:97274 Sanders Tunnel Apt. 480\nAnthonyberg, DC 06558\n--------------------------\n\ncname:Morgan Price caddress:57463 Lisa Drive\nThompsonshire, NM 88077\n--------------------------\n\ncname:Samuel Griffin caddress:186 Patel Crossing\nNorth Stefaniechester, WV 08221\n--------------------------\n\ncname:Tristan Pierce caddress:593 Blankenship Rapids\nNew Jameshaven, SD 89585\n--------------------------\n\ncname:David Mccann caddress:97274 Sanders Tunnel Apt. 480\nAnthonyberg, DC 06558\n\n------------------------\n</code></pre>"},{"location":"MatrixOne/Tutorial/sqlalchemy-python-crud-demo/#update","title":"Update","text":"<p>In the following example, we update the first <code>cname</code> column of <code>Customer</code> table by another value. We create this example in a text file named <code>sqlalchemy_update.py</code>, and put the following code:</p> <pre><code>from sqlalchemy import create_engine, Column, Integer, String\nfrom sqlalchemy.ext.declarative import declarative_base\nfrom sqlalchemy.orm import sessionmaker\n\nengine = create_engine('mysql+pymysql://root:111@127.0.0.1:6001/test')\n\nSession = sessionmaker(bind=engine)\nsession = Session()\n\nBase = declarative_base()\n\nclass Customer(Base):\n    __tablename__ = \"Customer\"\n    id = Column(Integer, primary_key=True,autoincrement=True)\n    cname = Column(String(64))\n    caddress = Column(String(512))\n\n    def __init__(self,name,address):\n        self.cname = name\n        self.caddress = address\n\n    def __str__(self):\n        return \"cname:\"+self.cname +\" caddress:\"+self.caddress\n\n    def __repr__(self):\n        return \"cname:\"+self.cname +\" caddress:\"+self.caddress\n\n\ncustomer = session.query(Customer).first()\nprint(customer)\nprint(\"\\n---------------------\\n\")\n\n# Rename customer\ncustomer.cname = \"Coby White\"\n\n\nsession.commit()\n\n# See the updated result\ncustomer = session.query(Customer).first()\nprint(customer)\n</code></pre> <p>Execute this file in a terminal with such command and we will see the query result:</p> <pre><code>&gt; python3 sqlalchemy_update.py     \ncname:Wendy Luna caddress:002 Brian Plaza\nAndrewhaven, SC 88456\n\n---------------------\n\ncname:Coby White caddress:002 Brian Plaza\nAndrewhaven, SC 88456\n</code></pre> <p>Then we verify the record being updated in MySQL client:</p> <pre><code>mysql&gt; select * from `Customer`;\n+------+------------------+-----------------------------------------------------+\n| id   | cname            | caddress                                            |\n+------+------------------+-----------------------------------------------------+\n|    1 | Coby White       | 002 Brian Plaza\nAndrewhaven, SC 88456               |\n|    2 | Meagan Rodriguez | USCGC Olson\nFPO AP 21249                            |\n|    3 | Angela Ramos     | 029 Todd Curve Apt. 352\nMooreville, FM 15950        |\n|    4 | Lisa Bruce       | 68103 Mackenzie Mountain\nNorth Andrew, UT 29853     |\n|    5 | Julie Moore      | Unit 1117 Box 1029\nDPO AP 87468                     |\n|    6 | David Massey     | 207 Wayne Groves Apt. 733\nVanessashire, NE 34549    |\n|    7 | David Mccann     | 97274 Sanders Tunnel Apt. 480\nAnthonyberg, DC 06558 |\n|    8 | Morgan Price     | 57463 Lisa Drive\nThompsonshire, NM 88077            |\n|    9 | Samuel Griffin   | 186 Patel Crossing\nNorth Stefaniechester, WV 08221  |\n|   10 | Tristan Pierce   | 593 Blankenship Rapids\nNew Jameshaven, SD 89585     |\n+------+------------------+-----------------------------------------------------+\n10 rows in set (0.02 sec)\n</code></pre>"},{"location":"MatrixOne/Tutorial/sqlalchemy-python-crud-demo/#delete","title":"Delete","text":"<p>In the following example, we delete the first record of the <code>Customer</code> table. We create this example in a text file named <code>sqlalchemy_detele.py</code>, and put the following code:</p> <pre><code>from sqlalchemy import create_engine, Column, Integer, String\nfrom sqlalchemy.ext.declarative import declarative_base\nfrom sqlalchemy.orm import sessionmaker\n\nengine = create_engine('mysql+pymysql://root:111@127.0.0.1:6001/test')\n\nSession = sessionmaker(bind=engine)\nsession = Session()\n\nBase = declarative_base()\n\nclass Customer(Base):\n    __tablename__ = \"Customer\"\n    id = Column(Integer, primary_key=True,autoincrement=True)\n    cname = Column(String(64))\n    caddress = Column(String(512))\n\n    def __init__(self,name,address):\n        self.cname = name\n        self.caddress = address\n\n    def __str__(self):\n        return \"cname:\"+self.cname +\" caddress:\"+self.caddress\n\n    def __repr__(self):\n        return \"cname:\"+self.cname +\" caddress:\"+self.caddress\n\n\n# delete the first record\ncustomer = session.query(Customer).first()\n\nsession.delete(customer)\nsession.commit()\n\n# query all data\ncustomers = session.query(Customer).all()\n\nfor customer in customers:\n     print(customer.__str__() +\"\\n--------------------------\\n\")\n</code></pre> <p>Execute this file in a terminal with such command and we will see the query result:</p> <pre><code>&gt; python3 sqlalchemy_delete.py         \ncname:Meagan Rodriguez caddress:USCGC Olson\nFPO AP 21249\n--------------------------\n\ncname:Angela Ramos caddress:029 Todd Curve Apt. 352\nMooreville, FM 15950\n--------------------------\n\ncname:Lisa Bruce caddress:68103 Mackenzie Mountain\nNorth Andrew, UT 29853\n--------------------------\n\ncname:Julie Moore caddress:Unit 1117 Box 1029\nDPO AP 87468\n--------------------------\n\ncname:David Massey caddress:207 Wayne Groves Apt. 733\nVanessashire, NE 34549\n--------------------------\n\ncname:David Mccann caddress:97274 Sanders Tunnel Apt. 480\nAnthonyberg, DC 06558\n--------------------------\n\ncname:Morgan Price caddress:57463 Lisa Drive\nThompsonshire, NM 88077\n--------------------------\n\ncname:Samuel Griffin caddress:186 Patel Crossing\nNorth Stefaniechester, WV 08221\n--------------------------\n\ncname:Tristan Pierce caddress:593 Blankenship Rapids\nNew Jameshaven, SD 89585\n--------------------------\n</code></pre> <p>Then we verify the record being deleted in MySQL client:</p> <pre><code>mysql&gt; select * from `Customer`;\n+------+------------------+-----------------------------------------------------+\n| id   | cname            | caddress                                            |\n+------+------------------+-----------------------------------------------------+\n|    2 | Meagan Rodriguez | USCGC Olson\nFPO AP 21249                            |\n|    3 | Angela Ramos     | 029 Todd Curve Apt. 352\nMooreville, FM 15950        |\n|    4 | Lisa Bruce       | 68103 Mackenzie Mountain\nNorth Andrew, UT 29853     |\n|    5 | Julie Moore      | Unit 1117 Box 1029\nDPO AP 87468                     |\n|    6 | David Massey     | 207 Wayne Groves Apt. 733\nVanessashire, NE 34549    |\n|    7 | David Mccann     | 97274 Sanders Tunnel Apt. 480\nAnthonyberg, DC 06558 |\n|    8 | Morgan Price     | 57463 Lisa Drive\nThompsonshire, NM 88077            |\n|    9 | Samuel Griffin   | 186 Patel Crossing\nNorth Stefaniechester, WV 08221  |\n|   10 | Tristan Pierce   | 593 Blankenship Rapids\nNew Jameshaven, SD 89585     |\n+------+------------------+-----------------------------------------------------+\n9 rows in set (0.04 sec)\n</code></pre>"}]}